define internal fastcc void @count_reg_usage(%struct.rtx_def* %x, i32* %counts, %struct.rtx_def* %dest, i32 %incr) #0 {
entry:
  %cmp180 = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp180, label %for.end114, label %if.end

if.end:                                           ; preds = %entry, %tailrecurse.backedge
  %dest.tr182 = phi %struct.rtx_def* [ %dest.tr.be, %tailrecurse.backedge ], [ %dest, %entry ]
  %x.tr181 = phi %struct.rtx_def* [ %x.tr.be, %tailrecurse.backedge ], [ %x, %entry ]
  %0 = bitcast %struct.rtx_def* %x.tr181 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 61, label %sw.bb
    i32 59, label %for.end114
    i32 69, label %for.end114
    i32 58, label %for.end114
    i32 54, label %for.end114
    i32 55, label %for.end114
    i32 56, label %for.end114
    i32 68, label %for.end114
    i32 67, label %for.end114
    i32 49, label %sw.bb6
    i32 47, label %sw.bb20
    i32 34, label %sw.bb41
    i32 32, label %sw.bb45
    i32 33, label %sw.bb45
    i32 3, label %sw.bb52
    i32 4, label %sw.bb52
  ]

sw.bb:                                            ; preds = %if.end
  %cmp1 = icmp eq %struct.rtx_def* %x.tr181, %dest.tr182
  br i1 %cmp1, label %for.end114, label %if.then2

if.then2:                                         ; preds = %sw.bb
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !4
  %idxprom = zext i32 %1 to i64
  %arrayidx3 = getelementptr inbounds i32* %counts, i64 %idxprom
  %2 = load i32* %arrayidx3, align 4, !tbaa !4
  %add = add nsw i32 %2, %incr
  store i32 %add, i32* %arrayidx3, align 4, !tbaa !4
  br label %for.end114

sw.bb6:                                           ; preds = %if.end
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load9 = load i32* %4, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 66
  br i1 %cmp11, label %if.then12, label %for.end114

if.then12:                                        ; preds = %sw.bb6
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx18, align 8, !tbaa !0
  br label %tailrecurse.backedge

sw.bb20:                                          ; preds = %if.end
  %fld21 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1
  %rtx23 = bitcast [1 x %union.rtunion_def]* %fld21 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx23, align 8, !tbaa !0
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load24 = load i32* %7, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 61
  br i1 %cmp26, label %if.end31, label %if.then27

if.then27:                                        ; preds = %sw.bb20
  tail call fastcc void @count_reg_usage(%struct.rtx_def* %6, i32* %counts, %struct.rtx_def* null, i32 %incr) #7
  br label %if.end31

if.end31:                                         ; preds = %sw.bb20, %if.then27
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 1
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx34, align 8, !tbaa !0
  %call = tail call i32 @side_effects_p(%struct.rtx_def* %8) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %cond.false, label %tailrecurse.backedge

cond.false:                                       ; preds = %if.end31
  %9 = load %struct.rtx_def** %rtx23, align 8, !tbaa !0
  br label %tailrecurse.backedge

sw.bb41:                                          ; preds = %if.end
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 7
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx44, align 8, !tbaa !0
  tail call fastcc void @count_reg_usage(%struct.rtx_def* %10, i32* %counts, %struct.rtx_def* null, i32 %incr) #7
  br label %sw.bb45

sw.bb45:                                          ; preds = %if.end, %if.end, %sw.bb41
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 3
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx48, align 8, !tbaa !0
  tail call fastcc void @count_reg_usage(%struct.rtx_def* %11, i32* %counts, %struct.rtx_def* null, i32 %incr) #7
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 6
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx51, align 8, !tbaa !0
  br label %tailrecurse.backedge

sw.bb52:                                          ; preds = %if.end, %if.end
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear54 = and i32 %bf.lshr, 255
  switch i32 %bf.clear54, label %land.lhs.true [
    i32 4, label %sw.bb52.if.then66_crit_edge
    i32 8, label %if.end70
  ]

sw.bb52.if.then66_crit_edge:                      ; preds = %sw.bb52
  %arrayidx68.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 0
  %rtx69.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx68.phi.trans.insert to %struct.rtx_def**
  %.pre194 = load %struct.rtx_def** %rtx69.phi.trans.insert, align 8, !tbaa !0
  br label %if.then66

land.lhs.true:                                    ; preds = %sw.bb52
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 0
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx62, align 8, !tbaa !0
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load63 = load i32* %14, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 48
  br i1 %cmp65, label %if.then66, label %if.end70

if.then66:                                        ; preds = %sw.bb52.if.then66_crit_edge, %land.lhs.true
  %15 = phi %struct.rtx_def* [ %.pre194, %sw.bb52.if.then66_crit_edge ], [ %13, %land.lhs.true ]
  tail call fastcc void @count_reg_usage(%struct.rtx_def* %15, i32* %counts, %struct.rtx_def* null, i32 %incr) #7
  br label %if.end70

if.end70:                                         ; preds = %sw.bb52, %if.then66, %land.lhs.true
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 1
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx73, align 8, !tbaa !0
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %if.end70, %sw.bb45, %if.then12, %if.end31, %cond.false
  %x.tr.be = phi %struct.rtx_def* [ %16, %if.end70 ], [ %12, %sw.bb45 ], [ %5, %if.then12 ], [ %8, %if.end31 ], [ %8, %cond.false ]
  %dest.tr.be = phi %struct.rtx_def* [ null, %if.end70 ], [ null, %sw.bb45 ], [ null, %if.then12 ], [ null, %if.end31 ], [ %9, %cond.false ]
  %cmp = icmp eq %struct.rtx_def* %x.tr.be, null
  br i1 %cmp, label %for.end114, label %if.end

sw.epilog:                                        ; preds = %if.end
  %idxprom74167 = zext i32 %bf.clear to i64
  %arrayidx75 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom74167
  %17 = load i8** %arrayidx75, align 8, !tbaa !0
  %arrayidx77 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom74167
  %18 = load i8* %arrayidx77, align 1, !tbaa !1
  %cmp78172 = icmp eq i8 %18, 0
  br i1 %cmp78172, label %for.end114, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %19 = zext i8 %18 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv183 = phi i64 [ %19, %for.body.lr.ph ], [ %indvars.iv.next184, %for.cond.backedge ]
  %indvars.iv.next184 = add i64 %indvars.iv183, -1
  %arrayidx81 = getelementptr inbounds i8* %17, i64 %indvars.iv.next184
  %20 = load i8* %arrayidx81, align 1, !tbaa !1
  switch i8 %20, label %for.cond.backedge [
    i8 101, label %if.then85
    i8 69, label %if.then95
  ]

for.cond.backedge:                                ; preds = %if.then95, %for.body103, %for.body, %if.then85
  %21 = trunc i64 %indvars.iv.next184 to i32
  %cmp78 = icmp sgt i32 %21, 0
  br i1 %cmp78, label %for.body, label %for.end114

if.then85:                                        ; preds = %for.body
  %arrayidx88 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 %indvars.iv.next184
  %rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx89, align 8, !tbaa !0
  tail call fastcc void @count_reg_usage(%struct.rtx_def* %22, i32* %counts, %struct.rtx_def* %dest.tr182, i32 %incr) #7
  br label %for.cond.backedge

if.then95:                                        ; preds = %for.body
  %arrayidx98 = getelementptr inbounds %struct.rtx_def* %x.tr181, i64 0, i32 1, i64 %indvars.iv.next184
  %rtvec = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtvec_def**
  %23 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %23, i64 0, i32 0
  %24 = load i32* %num_elem, align 4, !tbaa !4
  %cmp101169 = icmp sgt i32 %24, 0
  br i1 %cmp101169, label %for.body103.lr.ph, label %for.cond.backedge

for.body103.lr.ph:                                ; preds = %if.then95
  %25 = sext i32 %24 to i64
  br label %for.body103

for.body103:                                      ; preds = %for.body103.for.body103_crit_edge, %for.body103.lr.ph
  %26 = phi %struct.rtvec_def* [ %23, %for.body103.lr.ph ], [ %.pre, %for.body103.for.body103_crit_edge ]
  %indvars.iv = phi i64 [ %25, %for.body103.lr.ph ], [ %indvars.iv.next, %for.body103.for.body103_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx109 = getelementptr inbounds %struct.rtvec_def* %26, i64 0, i32 1, i64 %indvars.iv.next
  %27 = load %struct.rtx_def** %arrayidx109, align 8, !tbaa !0
  tail call fastcc void @count_reg_usage(%struct.rtx_def* %27, i32* %counts, %struct.rtx_def* %dest.tr182, i32 %incr) #7
  %28 = trunc i64 %indvars.iv.next to i32
  %cmp101 = icmp sgt i32 %28, 0
  br i1 %cmp101, label %for.body103.for.body103_crit_edge, label %for.cond.backedge

for.body103.for.body103_crit_edge:                ; preds = %for.body103
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  br label %for.body103

for.end114:                                       ; preds = %entry, %sw.bb6, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %tailrecurse.backedge, %sw.epilog, %for.cond.backedge, %sw.bb, %if.then2
  ret void
}
