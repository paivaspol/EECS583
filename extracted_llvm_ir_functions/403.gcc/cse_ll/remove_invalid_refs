define internal fastcc void @remove_invalid_refs(i32 %regno) #0 {
entry:
  %add = add i32 %regno, 1
  br label %for.body

for.body:                                         ; preds = %for.inc6, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc6 ]
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*]* @table, i64 0, i64 %indvars.iv
  %0 = load %struct.table_elt** %arrayidx, align 8, !tbaa !0
  %tobool16 = icmp eq %struct.table_elt* %0, null
  br i1 %tobool16, label %for.inc6, label %for.body2

for.body2:                                        ; preds = %for.body, %for.cond1.backedge
  %p.017 = phi %struct.table_elt* [ %1, %for.cond1.backedge ], [ %0, %for.body ]
  %next_same_hash = getelementptr inbounds %struct.table_elt* %p.017, i64 0, i32 2
  %1 = load %struct.table_elt** %next_same_hash, align 8, !tbaa !0
  %exp = getelementptr inbounds %struct.table_elt* %p.017, i64 0, i32 0
  %2 = load %struct.rtx_def** %exp, align 8, !tbaa !0
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 61
  br i1 %cmp3, label %for.cond1.backedge, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body2
  %call = tail call i32 @refers_to_regno_p(i32 %regno, i32 %add, %struct.rtx_def* %2, %struct.rtx_def** null) #6
  %tobool5 = icmp eq i32 %call, 0
  br i1 %tobool5, label %for.cond1.backedge, label %if.then

for.cond1.backedge:                               ; preds = %land.lhs.true, %for.body2, %if.then
  %tobool = icmp eq %struct.table_elt* %1, null
  br i1 %tobool, label %for.inc6, label %for.body2

if.then:                                          ; preds = %land.lhs.true
  %4 = trunc i64 %indvars.iv to i32
  tail call fastcc void @remove_from_table(%struct.table_elt* %p.017, i32 %4) #7
  br label %for.cond1.backedge

for.inc6:                                         ; preds = %for.cond1.backedge, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 32
  br i1 %exitcond, label %for.end7, label %for.body

for.end7:                                         ; preds = %for.inc6
  ret void
}
