define internal fastcc zeroext i1 @insn_live_p(%struct.rtx_def* nocapture %insn, i32* nocapture %counts) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !669), !dbg !2176
  tail call void @llvm.dbg.value(metadata !{i32* %counts}, i64 0, metadata !670), !dbg !2177
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !2178
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2178
  %0 = load %struct.rtx_def** %rtx, align 8, !dbg !2178, !tbaa !1677
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2178
  %bf.load = load i32* %1, align 8, !dbg !2178
  %bf.clear = and i32 %bf.load, 65535, !dbg !2178
  switch i32 %bf.clear, label %return [
    i32 47, label %if.then
    i32 39, label %if.then10
  ], !dbg !2178

if.then:                                          ; preds = %entry
  %call = tail call fastcc zeroext i1 @set_live_p(%struct.rtx_def* %0, i32* %counts) #8, !dbg !2179
  br label %return, !dbg !2179

if.then10:                                        ; preds = %entry
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !2180
  %rtvec = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtvec_def**, !dbg !2180
  %2 = load %struct.rtvec_def** %rtvec, align 8, !dbg !2180, !tbaa !1677
  %num_elem = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 0, !dbg !2180
  %3 = load i32* %num_elem, align 4, !dbg !2180, !tbaa !1704
  %cmp1652 = icmp sgt i32 %3, 0, !dbg !2180
  br i1 %cmp1652, label %for.body.lr.ph, label %return, !dbg !2180

for.body.lr.ph:                                   ; preds = %if.then10
  %4 = sext i32 %3 to i64
  br label %for.body, !dbg !2180

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %5 = phi %struct.rtvec_def* [ %2, %for.body.lr.ph ], [ %.pre54, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv = phi i64 [ %4, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !2180
  %arrayidx23 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv.next, !dbg !2181
  %6 = load %struct.rtx_def** %arrayidx23, align 8, !dbg !2181, !tbaa !1677
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !672), !dbg !2181
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2182
  %bf.load24 = load i32* %7, align 8, !dbg !2182
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !2182
  switch i32 %bf.clear25, label %return [
    i32 47, label %if.then27
    i32 49, label %for.cond.backedge
    i32 48, label %for.cond.backedge
  ], !dbg !2182

for.cond.backedge:                                ; preds = %for.body, %for.body, %if.then27
  %8 = trunc i64 %indvars.iv.next to i32, !dbg !2180
  %cmp16 = icmp sgt i32 %8, 0, !dbg !2180
  br i1 %cmp16, label %for.cond.backedge.for.body_crit_edge, label %return, !dbg !2180

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %.pre = load %struct.rtx_def** %rtx, align 8, !dbg !2181, !tbaa !1677
  %arrayidx21.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 1, i64 0
  %rtvec22.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx21.phi.trans.insert to %struct.rtvec_def**
  %.pre54 = load %struct.rtvec_def** %rtvec22.phi.trans.insert, align 8, !dbg !2181, !tbaa !1677
  br label %for.body, !dbg !2180

if.then27:                                        ; preds = %for.body
  %call28 = tail call fastcc zeroext i1 @set_live_p(%struct.rtx_def* %6, i32* %counts) #8, !dbg !2183
  br i1 %call28, label %return, label %for.cond.backedge, !dbg !2183

return:                                           ; preds = %if.then10, %for.body, %if.then27, %for.cond.backedge, %entry, %if.then
  %retval.0 = phi i1 [ %call, %if.then ], [ true, %entry ], [ false, %if.then10 ], [ true, %for.body ], [ true, %if.then27 ], [ false, %for.cond.backedge ]
  ret i1 %retval.0, !dbg !2185
}
