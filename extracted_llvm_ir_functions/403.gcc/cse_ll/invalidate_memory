define internal fastcc void @invalidate_memory() #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.inc4, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc4 ]
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*]* @table, i64 0, i64 %indvars.iv
  %0 = load %struct.table_elt** %arrayidx, align 8, !tbaa !0
  %tobool12 = icmp eq %struct.table_elt* %0, null
  br i1 %tobool12, label %for.inc4, label %for.body2

for.body2:                                        ; preds = %for.body, %for.cond1.backedge
  %p.013 = phi %struct.table_elt* [ %1, %for.cond1.backedge ], [ %0, %for.body ]
  %next_same_hash = getelementptr inbounds %struct.table_elt* %p.013, i64 0, i32 2
  %1 = load %struct.table_elt** %next_same_hash, align 8, !tbaa !0
  %in_memory = getelementptr inbounds %struct.table_elt* %p.013, i64 0, i32 11
  %2 = load i8* %in_memory, align 1, !tbaa !1
  %tobool3 = icmp eq i8 %2, 0
  br i1 %tobool3, label %for.cond1.backedge, label %if.then

for.cond1.backedge:                               ; preds = %for.body2, %if.then
  %tobool = icmp eq %struct.table_elt* %1, null
  br i1 %tobool, label %for.inc4, label %for.body2

if.then:                                          ; preds = %for.body2
  %3 = trunc i64 %indvars.iv to i32
  tail call fastcc void @remove_from_table(%struct.table_elt* %p.013, i32 %3) #7
  br label %for.cond1.backedge

for.inc4:                                         ; preds = %for.cond1.backedge, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 32
  br i1 %exitcond, label %for.end5, label %for.body

for.end5:                                         ; preds = %for.inc4
  ret void
}
