define internal fastcc void @invalidate_from_clobbers(%struct.rtx_def* nocapture %x) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end79 [
    i32 49, label %if.then
    i32 39, label %if.then32
  ]

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool, label %if.end79, label %if.then1

if.then1:                                         ; preds = %if.then
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  switch i32 %bf.clear3, label %if.end79 [
    i32 61, label %if.then12
    i32 63, label %if.then12
    i32 66, label %if.then12
    i32 64, label %if.then20
    i32 133, label %if.then20
  ]

if.then12:                                        ; preds = %if.then1, %if.then1, %if.then1
  tail call fastcc void @invalidate(%struct.rtx_def* %1, i32 0) #7
  br label %if.end79

if.then20:                                        ; preds = %if.then1, %if.then1
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx23, align 8, !tbaa !0
  %bf.lshr = lshr i32 %bf.load2, 16
  %bf.clear25 = and i32 %bf.lshr, 255
  tail call fastcc void @invalidate(%struct.rtx_def* %3, i32 %bf.clear25) #7
  br label %if.end79

if.then32:                                        ; preds = %entry
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtvec_def**
  %4 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 0
  %5 = load i32* %num_elem, align 4, !tbaa !4
  %cmp35102 = icmp sgt i32 %5, 0
  br i1 %cmp35102, label %for.body.lr.ph, label %if.end79

for.body.lr.ph:                                   ; preds = %if.then32
  %6 = sext i32 %5 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %7 = phi %struct.rtvec_def* [ %4, %for.body.lr.ph ], [ %.pre, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv = phi i64 [ %6, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx39 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv.next
  %8 = load %struct.rtx_def** %arrayidx39, align 8, !tbaa !0
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load40 = load i32* %9, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 49
  br i1 %cmp42, label %if.then43, label %for.cond.backedge

if.then43:                                        ; preds = %for.body
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx47, align 8, !tbaa !0
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load48 = load i32* %11, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  switch i32 %bf.clear49, label %for.cond.backedge [
    i32 61, label %if.then59
    i32 63, label %if.then59
    i32 66, label %if.then59
    i32 64, label %if.then68
    i32 133, label %if.then68
  ]

for.cond.backedge:                                ; preds = %if.then43, %for.body, %if.then68, %if.then59
  %12 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp sgt i32 %12, 0
  br i1 %cmp35, label %for.cond.backedge.for.body_crit_edge, label %if.end79

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  br label %for.body

if.then59:                                        ; preds = %if.then43, %if.then43, %if.then43
  tail call fastcc void @invalidate(%struct.rtx_def* %10, i32 0) #7
  br label %for.cond.backedge

if.then68:                                        ; preds = %if.then43, %if.then43
  %arrayidx70 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx71, align 8, !tbaa !0
  %bf.lshr73 = lshr i32 %bf.load48, 16
  %bf.clear74 = and i32 %bf.lshr73, 255
  tail call fastcc void @invalidate(%struct.rtx_def* %13, i32 %bf.clear74) #7
  br label %for.cond.backedge

if.end79:                                         ; preds = %if.then32, %for.cond.backedge, %entry, %if.then1, %if.then, %if.then20, %if.then12
  ret void
}
