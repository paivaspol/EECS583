define internal void @cse_check_loop_start(%struct.rtx_def* %x, %struct.rtx_def* nocapture %set, i8* nocapture %data) #0 {
entry:
  %0 = bitcast i8* %data to %struct.rtx_def**
  %1 = load %struct.rtx_def** %0, align 8, !tbaa !0
  %cmp = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp, label %if.end14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %lor.lhs.false12 [
    i32 69, label %if.end14
    i32 59, label %if.end14
    i32 66, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 66
  br i1 %cmp11, label %if.then13, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %1) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end14, label %if.then13

if.then13:                                        ; preds = %lor.lhs.false12, %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** %0, align 8, !tbaa !0
  br label %if.end14

if.end14:                                         ; preds = %lor.lhs.false, %lor.lhs.false, %lor.lhs.false12, %entry, %if.then13
  ret void
}
