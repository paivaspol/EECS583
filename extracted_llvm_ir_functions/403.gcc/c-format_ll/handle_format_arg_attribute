define noalias %union.tree_node* @handle_format_arg_attribute(%union.tree_node** nocapture %node, %union.tree_node* nocapture %name, %union.tree_node* nocapture %args, i32 %flags, i8* nocapture %no_add_attrs) #0 {
entry:
  %0 = load %union.tree_node** %node, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %args.pn = phi %union.tree_node* [ %args, %entry ], [ %format_num_expr.0, %while.cond ]
  %format_num_expr.0.in.in = getelementptr inbounds %union.tree_node* %args.pn, i64 0, i32 0, i32 2
  %format_num_expr.0.in = bitcast i32* %format_num_expr.0.in.in to %union.tree_node**
  %format_num_expr.0 = load %union.tree_node** %format_num_expr.0.in, align 8
  %code = getelementptr inbounds %union.tree_node* %format_num_expr.0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %while.cond, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %cmp15 = icmp eq i32 %bf.clear, 25
  br i1 %cmp15, label %lor.lhs.false16, label %if.then

lor.lhs.false16:                                  ; preds = %lor.rhs
  %int_cst17 = getelementptr inbounds %union.tree_node* %format_num_expr.0, i64 0, i32 0, i32 2
  %high = getelementptr inbounds i32* %int_cst17, i64 2
  %2 = bitcast i32* %high to i64*
  %3 = load i64* %2, align 8, !tbaa !5
  %cmp18 = icmp eq i64 %3, 0
  br i1 %cmp18, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false16, %lor.rhs
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str3, i64 0, i64 0)) #8
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !4
  br label %return

if.end:                                           ; preds = %lor.lhs.false16
  %low = bitcast i32* %int_cst17 to i64*
  %4 = load i64* %low, align 8, !tbaa !5
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %5 = load i8** %values, align 8
  %tobool = icmp eq i8* %5, null
  br i1 %tobool, label %if.end47, label %if.then22

if.then22:                                        ; preds = %if.end
  %6 = bitcast i8* %5 to %union.tree_node*
  %cmp2487 = icmp eq i64 %4, 1
  br i1 %cmp2487, label %lor.lhs.false27, label %for.inc

for.inc:                                          ; preds = %if.then22, %for.inc
  %argument.090 = phi %union.tree_node* [ %7, %for.inc ], [ %6, %if.then22 ]
  %arg_num.089 = phi i64 [ %inc, %for.inc ], [ 1, %if.then22 ]
  %inc = add i64 %arg_num.089, 1
  %chain = getelementptr inbounds %union.tree_node* %argument.090, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain, align 8, !tbaa !3
  %cmp23 = icmp ne %union.tree_node* %7, null
  %cmp23.not = xor i1 %cmp23, true
  %cmp24 = icmp eq i64 %inc, %4
  %or.cond = or i1 %cmp24, %cmp23.not
  br i1 %or.cond, label %for.end, label %for.inc

for.end:                                          ; preds = %for.inc
  br i1 %cmp23, label %lor.lhs.false27, label %if.then42

lor.lhs.false27:                                  ; preds = %if.then22, %for.end
  %argument.0.lcssa93 = phi %union.tree_node* [ %7, %for.end ], [ %6, %if.then22 ]
  %value29 = getelementptr inbounds %union.tree_node* %argument.0.lcssa93, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value29 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !3
  %code31 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast [4 x i8]* %code31 to i32*
  %bf.load32 = load i32* %10, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 13
  br i1 %cmp34, label %lor.lhs.false35, label %if.then42

lor.lhs.false35:                                  ; preds = %lor.lhs.false27
  %type39 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type39, align 8, !tbaa !3
  %12 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 15
  %13 = load %union.tree_node** %12, align 8, !tbaa !3
  %14 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !3
  %cmp41 = icmp eq %union.tree_node* %13, %14
  br i1 %cmp41, label %if.end47, label %if.then42

if.then42:                                        ; preds = %lor.lhs.false35, %lor.lhs.false27, %for.end
  %and = and i32 %flags, 16
  %tobool43 = icmp eq i32 %and, 0
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.then42
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str, i64 0, i64 0)) #8
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.then44
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !4
  br label %return

if.end47:                                         ; preds = %lor.lhs.false35, %if.end
  %type49 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type49, align 8, !tbaa !3
  %code51 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast [4 x i8]* %code51 to i32*
  %bf.load52 = load i32* %16, align 8
  %bf.clear53 = and i32 %bf.load52, 255
  %cmp54 = icmp eq i32 %bf.clear53, 13
  br i1 %cmp54, label %lor.lhs.false55, label %if.then63

lor.lhs.false55:                                  ; preds = %if.end47
  %type59 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type59, align 8, !tbaa !3
  %18 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 15
  %19 = load %union.tree_node** %18, align 8, !tbaa !3
  %20 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !3
  %cmp62 = icmp eq %union.tree_node* %19, %20
  br i1 %cmp62, label %return, label %if.then63

if.then63:                                        ; preds = %lor.lhs.false55, %if.end47
  %and64 = and i32 %flags, 16
  %tobool65 = icmp eq i32 %and64, 0
  br i1 %tobool65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.then63
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str4, i64 0, i64 0)) #8
  br label %if.end67

if.end67:                                         ; preds = %if.then63, %if.then66
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !4
  br label %return

return:                                           ; preds = %lor.lhs.false55, %if.end67, %if.end45, %if.then
  ret %union.tree_node* null
}
