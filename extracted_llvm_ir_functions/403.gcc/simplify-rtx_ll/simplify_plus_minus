define internal fastcc %struct.rtx_def* @simplify_plus_minus(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %force) #0 {
entry:
  %ops = alloca [8 x %struct.simplify_plus_minus_op_data], align 16
  %0 = bitcast [8 x %struct.simplify_plus_minus_op_data]* %ops to i8*
  call void @llvm.lifetime.start(i64 128, i8* %0) #2
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 128, i32 16, i1 false)
  %op = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, i32 0
  store %struct.rtx_def* %op0, %struct.rtx_def** %op, align 16, !tbaa !4
  %neg = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, i32 1
  store i32 0, i32* %neg, align 8, !tbaa !8
  %op3 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, i32 0
  store %struct.rtx_def* %op1, %struct.rtx_def** %op3, align 16, !tbaa !4
  %cmp = icmp eq i32 %code, 76
  %conv = zext i1 %cmp to i32
  %neg5 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, i32 1
  store i32 %conv, i32* %neg5, align 8, !tbaa !8
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %entry, %for.inc
  %input_ops.1.ph = phi i32 [ %input_ops.2, %for.inc ], [ 2, %entry ]
  %input_consts.1.ph = phi i32 [ %input_consts.2, %for.inc ], [ 0, %entry ]
  %changed.0.ph = phi i32 [ %changed.1, %for.inc ], [ 0, %entry ]
  %i.0.ph = phi i32 [ %inc285, %for.inc ], [ 0, %entry ]
  %n_ops.1.ph = phi i32 [ %n_ops.2, %for.inc ], [ 2, %entry ]
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %do.cond
  %changed.0 = phi i32 [ 0, %do.cond ], [ %changed.0.ph, %for.cond.outer ]
  %i.0 = phi i32 [ 0, %do.cond ], [ %i.0.ph, %for.cond.outer ]
  %cmp6 = icmp slt i32 %i.0, %n_ops.1.ph
  br i1 %cmp6, label %for.body, label %do.cond

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %op9 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom, i32 0
  %1 = load %struct.rtx_def** %op9, align 16, !tbaa !4
  %neg12 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom, i32 1
  %2 = load i32* %neg12, align 8, !tbaa !8
  %3 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %for.inc [
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb31
    i32 58, label %sw.bb41
    i32 86, label %sw.bb251
    i32 54, label %sw.bb275
  ]

sw.bb:                                            ; preds = %for.body, %for.body
  %cmp13 = icmp eq i32 %n_ops.1.ph, 7
  br i1 %cmp13, label %cleanup, label %if.end

if.end:                                           ; preds = %sw.bb
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %idxprom16 = sext i32 %n_ops.1.ph to i64
  %op18 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom16, i32 0
  store %struct.rtx_def* %4, %struct.rtx_def** %op18, align 16, !tbaa !4
  %cmp19 = icmp eq i32 %bf.clear, 76
  %conv20 = zext i1 %cmp19 to i32
  %xor = xor i32 %conv20, %2
  %neg23 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom16, i32 1
  store i32 %xor, i32* %neg23, align 8, !tbaa !8
  %inc = add nsw i32 %n_ops.1.ph, 1
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx26, align 8, !tbaa !4
  store %struct.rtx_def* %5, %struct.rtx_def** %op9, align 16, !tbaa !4
  %inc30 = add nsw i32 %input_ops.1.ph, 1
  br label %for.inc

sw.bb31:                                          ; preds = %for.body
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx34, align 8, !tbaa !4
  store %struct.rtx_def* %6, %struct.rtx_def** %op9, align 16, !tbaa !4
  %lnot = icmp eq i32 %2, 0
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %neg12, align 8, !tbaa !8
  br label %for.inc

sw.bb41:                                          ; preds = %for.body
  %cmp42 = icmp slt i32 %n_ops.1.ph, 7
  br i1 %cmp42, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %sw.bb41
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx46, align 8, !tbaa !4
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load47 = load i32* %8, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 75
  br i1 %cmp49, label %land.lhs.true51, label %for.inc

land.lhs.true51:                                  ; preds = %land.lhs.true
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx57, align 8, !tbaa !4
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load58 = load i32* %10, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  switch i32 %bf.clear59, label %for.inc [
    i32 67, label %land.lhs.true138
    i32 68, label %land.lhs.true138
    i32 54, label %land.lhs.true138
    i32 55, label %land.lhs.true138
    i32 58, label %land.lhs.true138
    i32 134, label %land.lhs.true138
    i32 56, label %land.lhs.true138
    i32 140, label %land.lhs.true138
  ]

land.lhs.true138:                                 ; preds = %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx144, align 8, !tbaa !4
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load145 = load i32* %12, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  switch i32 %bf.clear146, label %for.inc [
    i32 67, label %if.then226
    i32 68, label %if.then226
    i32 54, label %if.then226
    i32 55, label %if.then226
    i32 58, label %if.then226
    i32 134, label %if.then226
    i32 56, label %if.then226
    i32 140, label %if.then226
  ]

if.then226:                                       ; preds = %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138
  store %struct.rtx_def* %9, %struct.rtx_def** %op9, align 16, !tbaa !4
  %13 = load %struct.rtx_def** %rtx46, align 8, !tbaa !4
  %arrayidx240 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx241, align 8, !tbaa !4
  %idxprom242 = sext i32 %n_ops.1.ph to i64
  %op244 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom242, i32 0
  store %struct.rtx_def* %14, %struct.rtx_def** %op244, align 16, !tbaa !4
  %neg247 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom242, i32 1
  store i32 %2, i32* %neg247, align 8, !tbaa !8
  %inc248 = add nsw i32 %n_ops.1.ph, 1
  %inc249 = add nsw i32 %input_consts.1.ph, 1
  br label %for.inc

sw.bb251:                                         ; preds = %for.body
  %cmp252 = icmp eq i32 %n_ops.1.ph, 7
  br i1 %cmp252, label %for.inc, label %if.then254

if.then254:                                       ; preds = %sw.bb251
  %15 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !4
  %idxprom255 = sext i32 %n_ops.1.ph to i64
  %op257 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom255, i32 0
  store %struct.rtx_def* %15, %struct.rtx_def** %op257, align 16, !tbaa !4
  %inc258 = add nsw i32 %n_ops.1.ph, 1
  %neg261 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom255, i32 1
  store i32 %2, i32* %neg261, align 8, !tbaa !8
  %arrayidx263 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx264 = bitcast %union.rtunion_def* %arrayidx263 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx264, align 8, !tbaa !4
  store %struct.rtx_def* %16, %struct.rtx_def** %op9, align 16, !tbaa !4
  %lnot269 = icmp eq i32 %2, 0
  %lnot.ext270 = zext i1 %lnot269 to i32
  store i32 %lnot.ext270, i32* %neg12, align 8, !tbaa !8
  br label %for.inc

sw.bb275:                                         ; preds = %for.body
  %tobool276 = icmp eq i32 %2, 0
  br i1 %tobool276, label %for.inc, label %if.then277

if.then277:                                       ; preds = %sw.bb275
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0, i32 0
  %17 = load i64* %rtwint.i, align 8, !tbaa !7
  %sub.i = sub nsw i64 0, %17
  %call.i = call i64 @trunc_int_for_mode(i64 %sub.i, i32 %mode) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i) #4
  store %struct.rtx_def* %call1.i, %struct.rtx_def** %op9, align 16, !tbaa !4
  store i32 0, i32* %neg12, align 8, !tbaa !8
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true138, %land.lhs.true51, %sw.bb251, %sw.bb275, %if.end, %sw.bb31, %if.then226, %land.lhs.true, %sw.bb41, %if.then254, %if.then277, %for.body
  %input_ops.2 = phi i32 [ %input_ops.1.ph, %for.body ], [ %input_ops.1.ph, %if.then277 ], [ %input_ops.1.ph, %sw.bb275 ], [ %input_ops.1.ph, %if.then254 ], [ %input_ops.1.ph, %sw.bb251 ], [ %input_ops.1.ph, %if.then226 ], [ %input_ops.1.ph, %land.lhs.true ], [ %input_ops.1.ph, %sw.bb41 ], [ %input_ops.1.ph, %sw.bb31 ], [ %inc30, %if.end ], [ %input_ops.1.ph, %land.lhs.true51 ], [ %input_ops.1.ph, %land.lhs.true138 ]
  %input_consts.2 = phi i32 [ %input_consts.1.ph, %for.body ], [ %input_consts.1.ph, %if.then277 ], [ %input_consts.1.ph, %sw.bb275 ], [ %input_consts.1.ph, %if.then254 ], [ %input_consts.1.ph, %sw.bb251 ], [ %inc249, %if.then226 ], [ %input_consts.1.ph, %land.lhs.true ], [ %input_consts.1.ph, %sw.bb41 ], [ %input_consts.1.ph, %sw.bb31 ], [ %input_consts.1.ph, %if.end ], [ %input_consts.1.ph, %land.lhs.true51 ], [ %input_consts.1.ph, %land.lhs.true138 ]
  %changed.1 = phi i32 [ %changed.0, %for.body ], [ 1, %if.then277 ], [ %changed.0, %sw.bb275 ], [ 1, %if.then254 ], [ %changed.0, %sw.bb251 ], [ 1, %if.then226 ], [ %changed.0, %land.lhs.true ], [ %changed.0, %sw.bb41 ], [ 1, %sw.bb31 ], [ 1, %if.end ], [ %changed.0, %land.lhs.true51 ], [ %changed.0, %land.lhs.true138 ]
  %n_ops.2 = phi i32 [ %n_ops.1.ph, %for.body ], [ %n_ops.1.ph, %if.then277 ], [ %n_ops.1.ph, %sw.bb275 ], [ %inc258, %if.then254 ], [ 7, %sw.bb251 ], [ %inc248, %if.then226 ], [ %n_ops.1.ph, %land.lhs.true ], [ %n_ops.1.ph, %sw.bb41 ], [ %n_ops.1.ph, %sw.bb31 ], [ %inc, %if.end ], [ %n_ops.1.ph, %land.lhs.true51 ], [ %n_ops.1.ph, %land.lhs.true138 ]
  %inc285 = add nsw i32 %i.0, 1
  br label %for.cond.outer

do.cond:                                          ; preds = %for.cond
  %tobool286 = icmp eq i32 %changed.0, 0
  br i1 %tobool286, label %do.end, label %for.cond

do.end:                                           ; preds = %do.cond
  %cmp287 = icmp slt i32 %n_ops.1.ph, 3
  %tobool290 = icmp eq i32 %force, 0
  %or.cond = and i1 %cmp287, %tobool290
  br i1 %or.cond, label %cleanup, label %for.cond293.preheader

for.cond293.preheader:                            ; preds = %do.end
  %cmp294966 = icmp sgt i32 %n_ops.1.ph, 0
  br i1 %cmp294966, label %for.body296, label %do.body310.preheader

do.body310.preheader:                             ; preds = %for.body296, %for.cond293.preheader
  %input_consts.3.lcssa = phi i32 [ %input_consts.1.ph, %for.cond293.preheader ], [ %inc305.input_consts.3, %for.body296 ]
  %sub = add nsw i32 %n_ops.1.ph, -1
  %cmp312962 = icmp sgt i32 %sub, 0
  br label %do.body310

for.body296:                                      ; preds = %for.cond293.preheader, %for.body296
  %indvars.iv1003 = phi i64 [ %indvars.iv.next1004, %for.body296 ], [ 0, %for.cond293.preheader ]
  %input_consts.3967 = phi i32 [ %inc305.input_consts.3, %for.body296 ], [ %input_consts.1.ph, %for.cond293.preheader ]
  %op299 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv1003, i32 0
  %18 = load %struct.rtx_def** %op299, align 16, !tbaa !4
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load300 = load i32* %19, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 58
  %inc305 = zext i1 %cmp302 to i32
  %inc305.input_consts.3 = add nsw i32 %inc305, %input_consts.3967
  %indvars.iv.next1004 = add i64 %indvars.iv1003, 1
  %lftr.wideiv1005 = trunc i64 %indvars.iv.next1004 to i32
  %exitcond1006 = icmp eq i32 %lftr.wideiv1005, %n_ops.1.ph
  br i1 %exitcond1006, label %do.body310.preheader, label %for.body296

do.body310:                                       ; preds = %do.body310.preheader, %for.end514
  %first.0 = phi i32 [ 0, %for.end514 ], [ 1, %do.body310.preheader ]
  br i1 %cmp312962, label %for.body314.lr.ph, label %for.end514

for.body314.lr.ph:                                ; preds = %do.body310
  %tobool337 = icmp ne i32 %first.0, 0
  br label %for.body314

for.cond311.loopexit:                             ; preds = %for.inc509, %for.body314
  %changed.3.lcssa = phi i32 [ %changed.2963, %for.body314 ], [ %changed.4, %for.inc509 ]
  %indvars.iv.next993 = add i64 %indvars.iv992, 1
  %exitcond1002 = icmp eq i32 %20, %sub
  br i1 %exitcond1002, label %for.end514, label %for.body314

for.body314:                                      ; preds = %for.cond311.loopexit, %for.body314.lr.ph
  %indvars.iv999 = phi i64 [ 0, %for.body314.lr.ph ], [ %indvars.iv.next1000, %for.cond311.loopexit ]
  %indvars.iv992 = phi i64 [ 1, %for.body314.lr.ph ], [ %indvars.iv.next993, %for.cond311.loopexit ]
  %changed.2963 = phi i32 [ %first.0, %for.body314.lr.ph ], [ %changed.3.lcssa, %for.cond311.loopexit ]
  %indvars.iv.next1000 = add i64 %indvars.iv999, 1
  %20 = trunc i64 %indvars.iv.next1000 to i32
  %cmp316957 = icmp slt i32 %20, %n_ops.1.ph
  br i1 %cmp316957, label %for.body318.lr.ph, label %for.cond311.loopexit

for.body318.lr.ph:                                ; preds = %for.body314
  %op321 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv999, i32 0
  %neg327 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv999, i32 1
  br label %for.body318

for.body318:                                      ; preds = %for.inc509, %for.body318.lr.ph
  %indvars.iv994 = phi i64 [ %indvars.iv992, %for.body318.lr.ph ], [ %indvars.iv.next995, %for.inc509 ]
  %changed.3958 = phi i32 [ %changed.2963, %for.body318.lr.ph ], [ %changed.4, %for.inc509 ]
  %21 = load %struct.rtx_def** %op321, align 16, !tbaa !4
  %op324 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv994, i32 0
  %22 = load %struct.rtx_def** %op324, align 16, !tbaa !4
  %23 = load i32* %neg327, align 8, !tbaa !8
  %neg330 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv994, i32 1
  %24 = load i32* %neg330, align 8, !tbaa !8
  %cmp331 = icmp eq %struct.rtx_def* %21, null
  %cmp334 = icmp eq %struct.rtx_def* %22, null
  %or.cond927 = or i1 %cmp331, %cmp334
  br i1 %or.cond927, label %for.inc509, label %land.lhs.true336

land.lhs.true336:                                 ; preds = %for.body318
  br i1 %tobool337, label %lor.lhs.false338, label %if.then418

lor.lhs.false338:                                 ; preds = %land.lhs.true336
  %25 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load339 = load i32* %25, align 8
  %bf.clear340 = and i32 %bf.load339, 65535
  switch i32 %bf.clear340, label %for.inc509 [
    i32 67, label %land.lhs.true378
    i32 68, label %land.lhs.true378
    i32 54, label %land.lhs.true378
    i32 55, label %land.lhs.true378
    i32 58, label %land.lhs.true378
    i32 134, label %land.lhs.true378
    i32 56, label %land.lhs.true378
    i32 140, label %land.lhs.true378
  ]

land.lhs.true378:                                 ; preds = %lor.lhs.false338, %lor.lhs.false338, %lor.lhs.false338, %lor.lhs.false338, %lor.lhs.false338, %lor.lhs.false338, %lor.lhs.false338, %lor.lhs.false338
  %26 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load379 = load i32* %26, align 8
  %bf.clear380 = and i32 %bf.load379, 65535
  switch i32 %bf.clear380, label %for.inc509 [
    i32 67, label %if.then418
    i32 68, label %if.then418
    i32 54, label %if.then418
    i32 55, label %if.then418
    i32 58, label %if.then418
    i32 134, label %if.then418
    i32 56, label %if.then418
    i32 140, label %if.then418
  ]

if.then418:                                       ; preds = %land.lhs.true378, %land.lhs.true378, %land.lhs.true378, %land.lhs.true378, %land.lhs.true378, %land.lhs.true378, %land.lhs.true378, %land.lhs.true378, %land.lhs.true336
  %cmp419 = icmp eq i32 %23, %24
  br i1 %cmp419, label %if.else, label %if.then421

if.then421:                                       ; preds = %if.then418
  %tobool422 = icmp eq i32 %23, 0
  %. = select i1 %tobool422, %struct.rtx_def* %21, %struct.rtx_def* %22
  br label %if.end429

if.else:                                          ; preds = %if.then418
  %call425 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %21, %struct.rtx_def* %22) #4
  %tobool426 = icmp eq i32 %call425, 0
  %.929 = select i1 %tobool426, %struct.rtx_def* %21, %struct.rtx_def* %22
  br label %if.end429

if.end429:                                        ; preds = %if.else, %if.then421
  %tobool426.sink = phi i1 [ %tobool426, %if.else ], [ %tobool422, %if.then421 ]
  %lhs.0 = phi %struct.rtx_def* [ %.929, %if.else ], [ %., %if.then421 ]
  %ncode.0 = phi i32 [ 75, %if.else ], [ 76, %if.then421 ]
  %.930 = select i1 %tobool426.sink, %struct.rtx_def* %22, %struct.rtx_def* %21
  %call430 = call %struct.rtx_def* @simplify_binary_operation(i32 %ncode.0, i32 %mode, %struct.rtx_def* %lhs.0, %struct.rtx_def* %.930) #5
  %tobool431 = icmp eq %struct.rtx_def* %call430, null
  br i1 %tobool431, label %for.inc509, label %land.lhs.true432

land.lhs.true432:                                 ; preds = %if.end429
  %27 = bitcast %struct.rtx_def* %call430 to i32*
  %bf.load433 = load i32* %27, align 8
  %bf.clear434 = and i32 %bf.load433, 65535
  %cmp435 = icmp eq i32 %bf.clear434, 58
  br i1 %cmp435, label %land.lhs.true437, label %land.lhs.true463

land.lhs.true437:                                 ; preds = %land.lhs.true432
  %arrayidx439 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 1, i64 0
  %rtx440 = bitcast %union.rtunion_def* %arrayidx439 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx440, align 8, !tbaa !4
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load441 = load i32* %29, align 8
  %bf.clear442 = and i32 %bf.load441, 65535
  %cmp443 = icmp eq i32 %bf.clear442, %ncode.0
  br i1 %cmp443, label %land.lhs.true445, label %land.lhs.true463

land.lhs.true445:                                 ; preds = %land.lhs.true437
  %fld449 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1
  %rtx451 = bitcast [1 x %union.rtunion_def]* %fld449 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx451, align 8, !tbaa !4
  %cmp452 = icmp eq %struct.rtx_def* %30, %lhs.0
  br i1 %cmp452, label %land.lhs.true454, label %land.lhs.true463

land.lhs.true454:                                 ; preds = %land.lhs.true445
  %arrayidx459 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 1
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx460, align 8, !tbaa !4
  %cmp461 = icmp eq %struct.rtx_def* %31, %.930
  br i1 %cmp461, label %for.inc509, label %land.lhs.true463

land.lhs.true463:                                 ; preds = %land.lhs.true454, %land.lhs.true445, %land.lhs.true437, %land.lhs.true432
  %cmp468 = icmp eq i32 %bf.clear434, 86
  %or.cond1021 = and i1 %tobool337, %cmp468
  br i1 %or.cond1021, label %land.lhs.true470, label %if.then476

land.lhs.true470:                                 ; preds = %land.lhs.true463
  %arrayidx472 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 1, i64 0
  %rtx473 = bitcast %union.rtunion_def* %arrayidx472 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx473, align 8, !tbaa !4
  %cmp474 = icmp eq %struct.rtx_def* %32, %.930
  br i1 %cmp474, label %for.inc509, label %if.then476.thread

if.then476.thread:                                ; preds = %land.lhs.true470
  %and1014 = and i32 %24, %23
  br label %if.end488

if.then476:                                       ; preds = %land.lhs.true463
  %and = and i32 %24, %23
  %cmp479 = icmp eq i32 %bf.clear434, 77
  br i1 %cmp479, label %if.then481, label %if.end488

if.then481:                                       ; preds = %if.then476
  %arrayidx483 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 1, i64 0
  %rtx484 = bitcast %union.rtunion_def* %arrayidx483 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx484, align 8, !tbaa !4
  %lnot486 = icmp eq i32 %and, 0
  %lnot.ext487 = zext i1 %lnot486 to i32
  %.phi.trans.insert = bitcast %struct.rtx_def* %33 to i32*
  %bf.load489.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end488

if.end488:                                        ; preds = %if.then476.thread, %if.then481, %if.then476
  %bf.load489 = phi i32 [ %bf.load489.pre, %if.then481 ], [ %bf.load433, %if.then476 ], [ %bf.load433, %if.then476.thread ]
  %tem.0 = phi %struct.rtx_def* [ %33, %if.then481 ], [ %call430, %if.then476 ], [ %call430, %if.then476.thread ]
  %lneg.0 = phi i32 [ %lnot.ext487, %if.then481 ], [ %and, %if.then476 ], [ %and1014, %if.then476.thread ]
  %bf.clear490 = and i32 %bf.load489, 65535
  %cmp491 = icmp ne i32 %bf.clear490, 54
  %tobool494 = icmp eq i32 %lneg.0, 0
  %or.cond931 = or i1 %cmp491, %tobool494
  br i1 %or.cond931, label %if.end497, label %if.then495

if.then495:                                       ; preds = %if.end488
  %rtwint.i933 = getelementptr inbounds %struct.rtx_def* %tem.0, i64 0, i32 1, i64 0, i32 0
  %34 = load i64* %rtwint.i933, align 8, !tbaa !7
  %sub.i934 = sub nsw i64 0, %34
  %call.i935 = call i64 @trunc_int_for_mode(i64 %sub.i934, i32 %mode) #4
  %call1.i936 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i935) #4
  br label %if.end497

if.end497:                                        ; preds = %if.end488, %if.then495
  %tem.1 = phi %struct.rtx_def* [ %call1.i936, %if.then495 ], [ %tem.0, %if.end488 ]
  %lneg.1 = phi i32 [ 0, %if.then495 ], [ %lneg.0, %if.end488 ]
  store %struct.rtx_def* %tem.1, %struct.rtx_def** %op321, align 16, !tbaa !4
  store i32 %lneg.1, i32* %neg327, align 8, !tbaa !8
  store %struct.rtx_def* null, %struct.rtx_def** %op324, align 16, !tbaa !4
  br label %for.inc509

for.inc509:                                       ; preds = %land.lhs.true378, %lor.lhs.false338, %if.end429, %for.body318, %if.end497, %land.lhs.true470, %land.lhs.true454
  %changed.4 = phi i32 [ %changed.3958, %land.lhs.true454 ], [ %changed.3958, %land.lhs.true470 ], [ 1, %if.end497 ], [ %changed.3958, %if.end429 ], [ %changed.3958, %for.body318 ], [ %changed.3958, %lor.lhs.false338 ], [ %changed.3958, %land.lhs.true378 ]
  %indvars.iv.next995 = add i64 %indvars.iv994, 1
  %lftr.wideiv997 = trunc i64 %indvars.iv.next995 to i32
  %exitcond998 = icmp eq i32 %lftr.wideiv997, %n_ops.1.ph
  br i1 %exitcond998, label %for.cond311.loopexit, label %for.body318

for.end514:                                       ; preds = %for.cond311.loopexit, %do.body310
  %changed.2.lcssa = phi i32 [ %first.0, %do.body310 ], [ %changed.3.lcssa, %for.cond311.loopexit ]
  %tobool516 = icmp eq i32 %changed.2.lcssa, 0
  br i1 %tobool516, label %for.cond518.preheader, label %do.body310

for.cond518.preheader:                            ; preds = %for.end514
  br i1 %cmp294966, label %for.body521, label %if.end649.thread

if.end649.thread:                                 ; preds = %for.cond518.preheader
  call void @specqsort(i8* %0, i32 0, i32 16, i32 (...)* bitcast (i32 (i8*, i8*)* @simplify_plus_minus_op_data_cmp to i32 (...)*)) #4
  br label %for.end666

for.body521:                                      ; preds = %for.cond518.preheader, %for.inc533
  %indvars.iv988 = phi i64 [ %indvars.iv.next989, %for.inc533 ], [ 0, %for.cond518.preheader ]
  %i.3954 = phi i32 [ %i.4, %for.inc533 ], [ 0, %for.cond518.preheader ]
  %arrayidx523 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv988
  %op524 = getelementptr inbounds %struct.simplify_plus_minus_op_data* %arrayidx523, i64 0, i32 0
  %35 = load %struct.rtx_def** %op524, align 16, !tbaa !4
  %tobool525 = icmp eq %struct.rtx_def* %35, null
  br i1 %tobool525, label %for.inc533, label %if.then526

if.then526:                                       ; preds = %for.body521
  %inc527 = add nsw i32 %i.3954, 1
  %idxprom528 = sext i32 %i.3954 to i64
  %arrayidx529 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom528
  %36 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx529 to i8*
  %37 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx523 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 16, i32 16, i1 false), !tbaa.struct !9
  br label %for.inc533

for.inc533:                                       ; preds = %for.body521, %if.then526
  %i.4 = phi i32 [ %inc527, %if.then526 ], [ %i.3954, %for.body521 ]
  %indvars.iv.next989 = add i64 %indvars.iv988, 1
  %lftr.wideiv990 = trunc i64 %indvars.iv.next989 to i32
  %exitcond991 = icmp eq i32 %lftr.wideiv990, %n_ops.1.ph
  br i1 %exitcond991, label %for.end535, label %for.body521

for.end535:                                       ; preds = %for.inc533
  call void @specqsort(i8* %0, i32 %i.4, i32 16, i32 (...)* bitcast (i32 (i8*, i8*)* @simplify_plus_minus_op_data_cmp to i32 (...)*)) #4
  %cmp537 = icmp sgt i32 %i.4, 1
  br i1 %cmp537, label %land.lhs.true539, label %if.end649

land.lhs.true539:                                 ; preds = %for.end535
  %sub540 = add nsw i32 %i.4, -1
  %idxprom541 = sext i32 %sub540 to i64
  %op543 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom541, i32 0
  %38 = load %struct.rtx_def** %op543, align 16, !tbaa !4
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load544 = load i32* %39, align 8
  %bf.clear545 = and i32 %bf.load544, 65535
  %cmp546 = icmp eq i32 %bf.clear545, 54
  br i1 %cmp546, label %land.lhs.true548, label %if.end649

land.lhs.true548:                                 ; preds = %land.lhs.true539
  %sub549 = add nsw i32 %i.4, -2
  %idxprom550 = sext i32 %sub549 to i64
  %op552 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom550, i32 0
  %40 = load %struct.rtx_def** %op552, align 16, !tbaa !4
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load553 = load i32* %41, align 8
  %bf.clear554 = and i32 %bf.load553, 65535
  switch i32 %bf.clear554, label %if.end649 [
    i32 67, label %if.then620
    i32 68, label %if.then620
    i32 54, label %if.then620
    i32 55, label %if.then620
    i32 58, label %if.then620
    i32 134, label %if.then620
    i32 56, label %if.then620
    i32 140, label %if.then620
  ]

if.then620:                                       ; preds = %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548
  %neg628 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom541, i32 1
  %42 = load i32* %neg628, align 8, !tbaa !8
  %neg632 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom550, i32 1
  %43 = load i32* %neg632, align 8, !tbaa !8
  %tobool634 = icmp eq i32 %42, %43
  br i1 %tobool634, label %if.end637, label %if.then635

if.then635:                                       ; preds = %if.then620
  %rtwint.i937 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0, i32 0
  %44 = load i64* %rtwint.i937, align 8, !tbaa !7
  %sub.i938 = sub nsw i64 0, %44
  %call.i939 = call i64 @trunc_int_for_mode(i64 %sub.i938, i32 %mode) #4
  %call1.i940 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i939) #4
  %.pre = load %struct.rtx_def** %op552, align 16, !tbaa !4
  br label %if.end637

if.end637:                                        ; preds = %if.then620, %if.then635
  %45 = phi %struct.rtx_def* [ %.pre, %if.then635 ], [ %40, %if.then620 ]
  %value.0 = phi %struct.rtx_def* [ %call1.i940, %if.then635 ], [ %38, %if.then620 ]
  %rtwint = getelementptr inbounds %struct.rtx_def* %value.0, i64 0, i32 1, i64 0, i32 0
  %46 = load i64* %rtwint, align 8, !tbaa !7
  %call644 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %45, i64 %46) #4
  store %struct.rtx_def* %call644, %struct.rtx_def** %op552, align 16, !tbaa !4
  br label %if.end649

if.end649:                                        ; preds = %land.lhs.true548, %if.end637, %land.lhs.true539, %for.end535
  %n_ops.3 = phi i32 [ %sub540, %if.end637 ], [ %i.4, %land.lhs.true539 ], [ %i.4, %for.end535 ], [ %i.4, %land.lhs.true548 ]
  %cmp651949 = icmp sgt i32 %n_ops.3, 0
  br i1 %cmp651949, label %for.body653, label %for.end666

for.body653:                                      ; preds = %if.end649, %for.body653
  %indvars.iv984 = phi i64 [ %indvars.iv.next985, %for.body653 ], [ 0, %if.end649 ]
  %n_consts.0950 = phi i32 [ %inc662.n_consts.0, %for.body653 ], [ 0, %if.end649 ]
  %op656 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv984, i32 0
  %47 = load %struct.rtx_def** %op656, align 16, !tbaa !4
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load657 = load i32* %48, align 8
  %bf.clear658 = and i32 %bf.load657, 65535
  %cmp659 = icmp eq i32 %bf.clear658, 58
  %inc662 = zext i1 %cmp659 to i32
  %inc662.n_consts.0 = add nsw i32 %inc662, %n_consts.0950
  %indvars.iv.next985 = add i64 %indvars.iv984, 1
  %lftr.wideiv986 = trunc i64 %indvars.iv.next985 to i32
  %exitcond987 = icmp eq i32 %lftr.wideiv986, %n_ops.3
  br i1 %exitcond987, label %for.end666, label %for.body653

for.end666:                                       ; preds = %for.body653, %if.end649.thread, %if.end649
  %cmp6519491020 = phi i1 [ false, %if.end649 ], [ false, %if.end649.thread ], [ %cmp651949, %for.body653 ]
  %n_ops.31018 = phi i32 [ %n_ops.3, %if.end649 ], [ 0, %if.end649.thread ], [ %n_ops.3, %for.body653 ]
  %n_consts.0.lcssa = phi i32 [ 0, %if.end649 ], [ 0, %if.end649.thread ], [ %inc662.n_consts.0, %for.body653 ]
  br i1 %tobool290, label %land.lhs.true668, label %for.cond681.preheader

land.lhs.true668:                                 ; preds = %for.end666
  %add669 = add nsw i32 %n_consts.0.lcssa, %n_ops.31018
  %cmp670 = icmp sgt i32 %add669, %input_ops.1.ph
  br i1 %cmp670, label %cleanup, label %lor.lhs.false672

lor.lhs.false672:                                 ; preds = %land.lhs.true668
  %cmp674 = icmp ne i32 %add669, %input_ops.1.ph
  %cmp677 = icmp sgt i32 %n_consts.0.lcssa, %input_consts.3.lcssa
  %or.cond932 = or i1 %cmp674, %cmp677
  br i1 %or.cond932, label %for.cond681.preheader, label %cleanup

for.cond681.preheader:                            ; preds = %lor.lhs.false672, %for.end666
  br i1 %cmp6519491020, label %land.rhs, label %for.end691

for.cond681:                                      ; preds = %land.rhs
  %49 = trunc i64 %indvars.iv.next983 to i32
  %cmp682 = icmp slt i32 %49, %n_ops.31018
  br i1 %cmp682, label %land.rhs, label %for.end691

land.rhs:                                         ; preds = %for.cond681.preheader, %for.cond681
  %indvars.iv982 = phi i64 [ %indvars.iv.next983, %for.cond681 ], [ 0, %for.cond681.preheader ]
  %i.6947 = phi i32 [ %inc690, %for.cond681 ], [ 0, %for.cond681.preheader ]
  %neg686 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv982, i32 1
  %50 = load i32* %neg686, align 8, !tbaa !8
  %tobool687 = icmp eq i32 %50, 0
  %indvars.iv.next983 = add i64 %indvars.iv982, 1
  %inc690 = add nsw i32 %i.6947, 1
  br i1 %tobool687, label %for.end691, label %for.cond681

for.end691:                                       ; preds = %for.cond681, %land.rhs, %for.cond681.preheader
  %i.6.lcssa = phi i32 [ 0, %for.cond681.preheader ], [ %i.6947, %land.rhs ], [ %inc690, %for.cond681 ]
  %cmp692 = icmp eq i32 %i.6.lcssa, %n_ops.31018
  br i1 %cmp692, label %for.cond695.preheader, label %if.else705

for.cond695.preheader:                            ; preds = %for.end691
  br i1 %cmp6519491020, label %for.body698, label %if.end721

for.body698:                                      ; preds = %for.cond695.preheader, %for.body698
  %indvars.iv976 = phi i64 [ %indvars.iv.next977, %for.body698 ], [ 0, %for.cond695.preheader ]
  %neg701 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv976, i32 1
  store i32 0, i32* %neg701, align 8, !tbaa !8
  %indvars.iv.next977 = add i64 %indvars.iv976, 1
  %lftr.wideiv978 = trunc i64 %indvars.iv.next977 to i32
  %exitcond979 = icmp eq i32 %lftr.wideiv978, %n_ops.31018
  br i1 %exitcond979, label %if.end721, label %for.body698

if.else705:                                       ; preds = %for.end691
  %cmp706 = icmp eq i32 %i.6.lcssa, 0
  br i1 %cmp706, label %if.end721, label %if.then708

if.then708:                                       ; preds = %if.else705
  %51 = load %struct.rtx_def** %op, align 16, !tbaa !4
  %idxprom712 = sext i32 %i.6.lcssa to i64
  %arrayidx713 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom712
  %52 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %52, i64 16, i32 16, i1 false), !tbaa.struct !9
  %op716 = getelementptr inbounds %struct.simplify_plus_minus_op_data* %arrayidx713, i64 0, i32 0
  store %struct.rtx_def* %51, %struct.rtx_def** %op716, align 16, !tbaa !4
  %neg719 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom712, i32 1
  store i32 1, i32* %neg719, align 8, !tbaa !8
  br label %if.end721

if.end721:                                        ; preds = %for.cond695.preheader, %for.body698, %if.else705, %if.then708
  %negate.0 = phi i32 [ 0, %if.then708 ], [ 0, %if.else705 ], [ 1, %for.body698 ], [ 1, %for.cond695.preheader ]
  %53 = load %struct.rtx_def** %op, align 16, !tbaa !4
  %cmp725941 = icmp sgt i32 %n_ops.31018, 1
  br i1 %cmp725941, label %for.body727, label %for.end738

for.body727:                                      ; preds = %if.end721, %for.body727
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body727 ], [ 1, %if.end721 ]
  %result.0943 = phi %struct.rtx_def* [ %call735, %for.body727 ], [ %53, %if.end721 ]
  %neg730 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv, i32 1
  %54 = load i32* %neg730, align 8, !tbaa !8
  %tobool731 = icmp ne i32 %54, 0
  %cond = select i1 %tobool731, i32 76, i32 75
  %op734 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv, i32 0
  %55 = load %struct.rtx_def** %op734, align 16, !tbaa !4
  %call735 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond, i32 %mode, %struct.rtx_def* %result.0943, %struct.rtx_def* %55) #4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n_ops.31018
  br i1 %exitcond, label %for.end738, label %for.body727

for.end738:                                       ; preds = %for.body727, %if.end721
  %result.0.lcssa = phi %struct.rtx_def* [ %53, %if.end721 ], [ %call735, %for.body727 ]
  %tobool739 = icmp eq i32 %negate.0, 0
  br i1 %tobool739, label %cleanup, label %cond.true

cond.true:                                        ; preds = %for.end738
  %call740 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %mode, %struct.rtx_def* %result.0.lcssa) #4
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %cond.true, %for.end738, %land.lhs.true668, %lor.lhs.false672, %do.end
  %retval.0 = phi %struct.rtx_def* [ null, %do.end ], [ null, %lor.lhs.false672 ], [ null, %land.lhs.true668 ], [ %call740, %cond.true ], [ %result.0.lcssa, %for.end738 ], [ null, %sw.bb ]
  call void @llvm.lifetime.end(i64 128, i8* %0) #2
  ret %struct.rtx_def* %retval.0
}
