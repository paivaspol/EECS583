define %struct.rtx_def* @simplify_ternary_operation(i32 %code, i32 %mode, i32 %op0_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %0 = load i16* %arrayidx, align 2, !tbaa !2
  %conv = zext i16 %0 to i32
  %cmp = icmp eq i16 %0, 0
  %.conv = select i1 %cmp, i32 64, i32 %conv
  switch i32 %code, label %sw.default [
    i32 132, label %sw.bb
    i32 133, label %sw.bb
    i32 72, label %sw.bb76
  ]

sw.bb:                                            ; preds = %entry, %entry
  %1 = bitcast %struct.rtx_def* %op0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 54
  br i1 %cmp2, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %sw.bb
  %2 = bitcast %struct.rtx_def* %op1 to i32*
  %bf.load4 = load i32* %2, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 54
  br i1 %cmp6, label %land.lhs.true8, label %return

land.lhs.true8:                                   ; preds = %land.lhs.true
  %3 = bitcast %struct.rtx_def* %op2 to i32*
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 54
  br i1 %cmp11, label %land.lhs.true13, label %return

land.lhs.true13:                                  ; preds = %land.lhs.true8
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %4 = load i64* %rtwint, align 8, !tbaa !7
  %conv15 = trunc i64 %4 to i32
  %rtwint18 = getelementptr inbounds %struct.rtx_def* %op2, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint18, align 8, !tbaa !7
  %conv19 = trunc i64 %5 to i32
  %add = add i32 %conv19, %conv15
  %cmp20 = icmp ule i32 %add, %.conv
  %cmp23 = icmp ult i32 %.conv, 65
  %or.cond = and i1 %cmp20, %cmp23
  br i1 %or.cond, label %if.then25, label %return

if.then25:                                        ; preds = %land.lhs.true13
  %rtwint28 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0, i32 0
  %6 = load i64* %rtwint28, align 8, !tbaa !7
  %shr = ashr i64 %6, %5
  %cmp35 = icmp eq i64 %4, 64
  br i1 %cmp35, label %if.end57, label %if.then37

if.then37:                                        ; preds = %if.then25
  %shl = shl i64 1, %4
  %sub = add nsw i64 %shl, -1
  %and = and i64 %shr, %sub
  %cmp41 = icmp eq i32 %code, 132
  br i1 %cmp41, label %land.lhs.true43, label %if.end57

land.lhs.true43:                                  ; preds = %if.then37
  %sub47 = add nsw i64 %4, -1
  %shl48 = shl i64 1, %sub47
  %and49 = and i64 %and, %shl48
  %tobool = icmp eq i64 %and49, 0
  br i1 %tobool, label %if.end57, label %if.then50

if.then50:                                        ; preds = %land.lhs.true43
  %neg = sub i64 0, %shl
  %or = or i64 %and, %neg
  br label %if.end57

if.end57:                                         ; preds = %land.lhs.true43, %if.then25, %if.then37, %if.then50
  %val.0 = phi i64 [ %or, %if.then50 ], [ %and, %land.lhs.true43 ], [ %and, %if.then37 ], [ %shr, %if.then25 ]
  %cmp58 = icmp ult i32 %.conv, 64
  br i1 %cmp58, label %land.lhs.true60, label %if.end74

land.lhs.true60:                                  ; preds = %if.end57
  %sub61 = add i32 %.conv, -1
  %sh_prom = zext i32 %sub61 to i64
  %shl62 = shl i64 -1, %sh_prom
  %and63 = and i64 %val.0, %shl62
  %cmp67 = icmp eq i64 %and63, %shl62
  br i1 %cmp67, label %if.end74, label %if.then69

if.then69:                                        ; preds = %land.lhs.true60
  %sh_prom70 = zext i32 %.conv to i64
  %shl71 = shl i64 1, %sh_prom70
  %sub72 = add nsw i64 %shl71, -1
  %and73 = and i64 %val.0, %sub72
  br label %if.end74

if.end74:                                         ; preds = %land.lhs.true60, %if.then69, %if.end57
  %val.1 = phi i64 [ %and73, %if.then69 ], [ %val.0, %land.lhs.true60 ], [ %val.0, %if.end57 ]
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %val.1) #4
  br label %return

sw.bb76:                                          ; preds = %entry
  %7 = bitcast %struct.rtx_def* %op0 to i32*
  %bf.load77 = load i32* %7, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  switch i32 %bf.clear78, label %if.else [
    i32 54, label %if.then81
    i32 102, label %land.lhs.true89
  ]

if.then81:                                        ; preds = %sw.bb76
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp82 = icmp ne %struct.rtx_def* %8, %op0
  %cond = select i1 %cmp82, %struct.rtx_def* %op1, %struct.rtx_def* %op2
  br label %return

land.lhs.true89:                                  ; preds = %sw.bb76
  %call90 = tail call i32 @side_effects_p(%struct.rtx_def* %op0) #4
  %tobool91 = icmp eq i32 %call90, 0
  br i1 %tobool91, label %land.lhs.true92, label %if.else

land.lhs.true92:                                  ; preds = %land.lhs.true89
  %arrayidx94 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %9 = load i32* %arrayidx94, align 4, !tbaa !3
  switch i32 %9, label %lor.lhs.false101 [
    i32 2, label %lor.lhs.false106
    i32 6, label %lor.lhs.false106
  ]

lor.lhs.false101:                                 ; preds = %land.lhs.true92
  %cmp104 = icmp ne i32 %9, 8
  %10 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !8
  %tobool107 = icmp ne i32 %10, 0
  %or.cond268 = or i1 %cmp104, %tobool107
  br i1 %or.cond268, label %land.lhs.true108, label %if.else

lor.lhs.false106:                                 ; preds = %land.lhs.true92, %land.lhs.true92
  %.old = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !8
  %tobool107.old = icmp eq i32 %.old, 0
  br i1 %tobool107.old, label %if.else, label %land.lhs.true108

land.lhs.true108:                                 ; preds = %lor.lhs.false106, %lor.lhs.false101
  %fld109 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld109 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %call111 = tail call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %op1) #4
  %tobool112 = icmp eq i32 %call111, 0
  br i1 %tobool112, label %if.else, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true108
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx116, align 8, !tbaa !4
  %call117 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %op2) #4
  %tobool118 = icmp eq i32 %call117, 0
  br i1 %tobool118, label %if.else, label %return

if.else:                                          ; preds = %land.lhs.true113, %land.lhs.true108, %lor.lhs.false106, %lor.lhs.false101, %land.lhs.true89, %sw.bb76
  %bf.load120 = load i32* %7, align 8
  %bf.clear121 = and i32 %bf.load120, 65535
  %cmp122 = icmp eq i32 %bf.clear121, 103
  br i1 %cmp122, label %land.lhs.true124, label %if.else157

land.lhs.true124:                                 ; preds = %if.else
  %call125 = tail call i32 @side_effects_p(%struct.rtx_def* %op0) #4
  %tobool126 = icmp eq i32 %call125, 0
  br i1 %tobool126, label %land.lhs.true127, label %if.else157

land.lhs.true127:                                 ; preds = %land.lhs.true124
  %arrayidx129 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %13 = load i32* %arrayidx129, align 4, !tbaa !3
  switch i32 %13, label %lor.lhs.false137 [
    i32 2, label %lor.lhs.false142
    i32 6, label %lor.lhs.false142
  ]

lor.lhs.false137:                                 ; preds = %land.lhs.true127
  %cmp140 = icmp ne i32 %13, 8
  %14 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !8
  %tobool143 = icmp ne i32 %14, 0
  %or.cond270 = or i1 %cmp140, %tobool143
  br i1 %or.cond270, label %land.lhs.true144, label %if.else157

lor.lhs.false142:                                 ; preds = %land.lhs.true127, %land.lhs.true127
  %.old269 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !8
  %tobool143.old = icmp eq i32 %.old269, 0
  br i1 %tobool143.old, label %if.else157, label %land.lhs.true144

land.lhs.true144:                                 ; preds = %lor.lhs.false142, %lor.lhs.false137
  %arrayidx146 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx147, align 8, !tbaa !4
  %call148 = tail call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* %op1) #4
  %tobool149 = icmp eq i32 %call148, 0
  br i1 %tobool149, label %if.else157, label %land.lhs.true150

land.lhs.true150:                                 ; preds = %land.lhs.true144
  %arrayidx152 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx153, align 8, !tbaa !4
  %call154 = tail call i32 @rtx_equal_p(%struct.rtx_def* %16, %struct.rtx_def* %op2) #4
  %tobool155 = icmp eq i32 %call154, 0
  br i1 %tobool155, label %if.else157, label %return

if.else157:                                       ; preds = %land.lhs.true150, %land.lhs.true144, %lor.lhs.false142, %lor.lhs.false137, %land.lhs.true124, %if.else
  %bf.load158 = load i32* %7, align 8
  %bf.clear159 = and i32 %bf.load158, 65535
  %idxprom160341 = zext i32 %bf.clear159 to i64
  %arrayidx161 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom160341
  %17 = load i8* %arrayidx161, align 1, !tbaa !0
  %cmp163 = icmp eq i8 %17, 60
  br i1 %cmp163, label %land.lhs.true165, label %return

land.lhs.true165:                                 ; preds = %if.else157
  %call166 = tail call i32 @side_effects_p(%struct.rtx_def* %op0) #4
  %tobool167 = icmp eq i32 %call166, 0
  br i1 %tobool167, label %if.then168, label %return

if.then168:                                       ; preds = %land.lhs.true165
  %fld169 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1
  %rtx171 = bitcast [1 x %union.rtunion_def]* %fld169 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx171, align 8, !tbaa !4
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load172 = load i32* %19, align 8
  %bf.clear173 = and i32 %bf.load172, 16711680
  %cmp174 = icmp eq i32 %bf.clear173, 0
  %arrayidx178 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx179, align 8, !tbaa !4
  br i1 %cmp174, label %cond.true176, label %cond.end190

cond.true176:                                     ; preds = %if.then168
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load180 = load i32* %21, align 8
  br label %cond.end190

cond.end190:                                      ; preds = %if.then168, %cond.true176
  %bf.load180.sink = phi i32 [ %bf.load180, %cond.true176 ], [ %bf.load172, %if.then168 ]
  %bf.lshr181 = lshr i32 %bf.load180.sink, 16
  %bf.clear182 = and i32 %bf.lshr181, 255
  %cmp192 = icmp eq i32 %bf.clear182, 0
  %op0_mode.bf.clear182 = select i1 %cmp192, i32 %op0_mode, i32 %bf.clear182
  %bf.load196 = load i32* %7, align 8
  %bf.clear197 = and i32 %bf.load196, 65535
  %call204 = tail call %struct.rtx_def* @simplify_relational_operation(i32 %bf.clear197, i32 %op0_mode.bf.clear182, %struct.rtx_def* %18, %struct.rtx_def* %20) #5
  %22 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp205 = icmp eq %struct.rtx_def* %call204, %22
  br i1 %cmp205, label %return, label %if.else208

if.else208:                                       ; preds = %cond.end190
  %23 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %cmp209 = icmp eq %struct.rtx_def* %call204, %23
  br i1 %cmp209, label %return, label %if.else212

if.else212:                                       ; preds = %if.else208
  %tobool213 = icmp eq %struct.rtx_def* %call204, null
  %op0.call204 = select i1 %tobool213, %struct.rtx_def* %op0, %struct.rtx_def* %call204
  %24 = bitcast %struct.rtx_def* %op1 to i32*
  %bf.load218 = load i32* %24, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp eq i32 %bf.clear219, 54
  br i1 %cmp220, label %land.lhs.true222, label %return

land.lhs.true222:                                 ; preds = %if.else212
  %25 = bitcast %struct.rtx_def* %op2 to i32*
  %bf.load223 = load i32* %25, align 8
  %bf.clear224 = and i32 %bf.load223, 65535
  %cmp225 = icmp eq i32 %bf.clear224, 54
  br i1 %cmp225, label %if.then227, label %return

if.then227:                                       ; preds = %land.lhs.true222
  %rtwint230 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %26 = load i64* %rtwint230, align 8, !tbaa !7
  %rtwint233 = getelementptr inbounds %struct.rtx_def* %op2, i64 0, i32 1, i64 0, i32 0
  %27 = load i64* %rtwint233, align 8, !tbaa !7
  %cmp234 = icmp eq i64 %26, 1
  %cmp237 = icmp eq i64 %27, 0
  %or.cond342 = and i1 %cmp234, %cmp237
  br i1 %or.cond342, label %if.then239, label %if.else242

if.then239:                                       ; preds = %if.then227
  %28 = bitcast %struct.rtx_def* %op0.call204 to i32*
  %bf.load240 = load i32* %28, align 8
  %bf.clear241 = and i32 %bf.load240, 65535
  br label %if.end256

if.else242:                                       ; preds = %if.then227
  %cmp243 = icmp eq i64 %26, 0
  %cmp246 = icmp eq i64 %27, 1
  %or.cond343 = and i1 %cmp243, %cmp246
  br i1 %or.cond343, label %if.then248, label %return

if.then248:                                       ; preds = %if.else242
  %call249 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %op0.call204, %struct.rtx_def* null) #4
  %cmp250 = icmp eq i32 %call249, 0
  br i1 %cmp250, label %return, label %if.end256

if.end256:                                        ; preds = %if.then248, %if.then239
  %code.addr.0 = phi i32 [ %bf.clear241, %if.then239 ], [ %call249, %if.then248 ]
  %fld257 = getelementptr inbounds %struct.rtx_def* %op0.call204, i64 0, i32 1
  %rtx259 = bitcast [1 x %union.rtunion_def]* %fld257 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx259, align 8, !tbaa !4
  %arrayidx261 = getelementptr inbounds %struct.rtx_def* %op0.call204, i64 0, i32 1, i64 1
  %rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx262, align 8, !tbaa !4
  %call263 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code.addr.0, i32 %mode, %struct.rtx_def* %29, %struct.rtx_def* %30) #4
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), i32 2471, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.simplify_ternary_operation, i64 0, i64 0)) #6
  unreachable

return:                                           ; preds = %land.lhs.true13, %land.lhs.true8, %land.lhs.true, %sw.bb, %if.then248, %if.else242, %if.else212, %land.lhs.true222, %if.else157, %land.lhs.true165, %if.else208, %cond.end190, %land.lhs.true150, %land.lhs.true113, %if.end256, %if.then81, %if.end74
  %retval.0 = phi %struct.rtx_def* [ %cond, %if.then81 ], [ %call263, %if.end256 ], [ %call, %if.end74 ], [ %op1, %land.lhs.true113 ], [ %op2, %land.lhs.true150 ], [ %op2, %cond.end190 ], [ %op1, %if.else208 ], [ null, %land.lhs.true165 ], [ null, %if.else157 ], [ null, %land.lhs.true222 ], [ null, %if.else212 ], [ null, %if.else242 ], [ null, %if.then248 ], [ null, %sw.bb ], [ null, %land.lhs.true ], [ null, %land.lhs.true8 ], [ null, %land.lhs.true13 ]
  ret %struct.rtx_def* %retval.0
}
