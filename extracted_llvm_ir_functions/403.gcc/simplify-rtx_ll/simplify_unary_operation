define %struct.rtx_def* @simplify_unary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op, i32 %op_mode) #0 {
entry:
  %d = alloca %struct.realvaluetype, align 8
  %tmp = alloca %struct.realvaluetype, align 8
  %d53 = alloca %struct.realvaluetype, align 8
  %tmp92 = alloca %struct.realvaluetype, align 8
  %lv235 = alloca i64, align 8
  %hv238 = alloca i64, align 8
  %args = alloca %struct.simplify_unary_real_args, align 8
  %args392 = alloca %struct.simplify_unary_real_args, align 8
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %0 = load i16* %arrayidx, align 2, !tbaa !2
  %call = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %op) #5
  switch i32 %code, label %entry.if.end95_crit_edge [
    i32 125, label %land.lhs.true
    i32 127, label %land.lhs.true31
  ]

entry.if.end95_crit_edge:                         ; preds = %entry
  %.phi.trans.insert = bitcast %struct.rtx_def* %call to i32*
  %bf.load96.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end95

land.lhs.true:                                    ; preds = %entry
  %1 = bitcast %struct.rtx_def* %call to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp2 = icmp eq i32 %bf.clear, 0
  br i1 %cmp2, label %land.lhs.true4, label %if.end95

land.lhs.true4:                                   ; preds = %land.lhs.true
  %bf.clear6 = and i32 %bf.load, 65535
  %bf.clear6.off = add i32 %bf.clear6, -54
  %switch = icmp ult i32 %bf.clear6.off, 2
  br i1 %switch, label %if.then, label %if.end95

if.then:                                          ; preds = %land.lhs.true4
  %cmp15 = icmp eq i32 %bf.clear6, 54
  br i1 %cmp15, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.then
  %rtwint = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %2 = load i64* %rtwint, align 8, !tbaa !7
  %.lobit626 = ashr i64 %2, 63
  br label %if.end

if.else:                                          ; preds = %if.then
  %rtwint23 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1, i32 0
  %3 = load i64* %rtwint23, align 8, !tbaa !7
  %rtwint26 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 2, i32 0
  %4 = load i64* %rtwint26, align 8, !tbaa !7
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  %hv.0 = phi i64 [ %.lobit626, %if.then17 ], [ %4, %if.else ]
  %lv.0 = phi i64 [ %2, %if.then17 ], [ %3, %if.else ]
  call void @ereal_from_int(%struct.realvaluetype* %d, i64 %lv.0, i64 %hv.0, i32 %mode) #4
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp, i32 %mode, %struct.realvaluetype* byval align 8 %d) #4
  %5 = bitcast %struct.realvaluetype* %d to i8*
  %6 = bitcast %struct.realvaluetype* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 24, i32 8, i1 false), !tbaa.struct !10
  %call27 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %tmp, i32 %mode) #4
  br label %return

land.lhs.true31:                                  ; preds = %entry
  %.phi.trans.insert633 = bitcast %struct.rtx_def* %call to i32*
  %bf.load32.pre = load i32* %.phi.trans.insert633, align 8
  %bf.clear34 = and i32 %bf.load32.pre, 16711680
  %cmp35 = icmp eq i32 %bf.clear34, 0
  br i1 %cmp35, label %land.lhs.true37, label %if.end95

land.lhs.true37:                                  ; preds = %land.lhs.true31
  %bf.clear39 = and i32 %bf.load32.pre, 65535
  %bf.clear39.off = add i32 %bf.clear39, -54
  %switch629 = icmp ult i32 %bf.clear39.off, 2
  br i1 %switch629, label %if.then47, label %if.end95

if.then47:                                        ; preds = %land.lhs.true37
  %cmp56 = icmp eq i32 %bf.clear39, 54
  br i1 %cmp56, label %if.then58, label %if.else65

if.then58:                                        ; preds = %if.then47
  %rtwint61 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %7 = load i64* %rtwint61, align 8, !tbaa !7
  %.lobit625 = ashr i64 %7, 63
  br label %if.end72

if.else65:                                        ; preds = %if.then47
  %rtwint68 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1, i32 0
  %8 = load i64* %rtwint68, align 8, !tbaa !7
  %rtwint71 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 2, i32 0
  %9 = load i64* %rtwint71, align 8, !tbaa !7
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then58
  %hv49.0 = phi i64 [ %.lobit625, %if.then58 ], [ %9, %if.else65 ]
  %lv51.0 = phi i64 [ %7, %if.then58 ], [ %8, %if.else65 ]
  %cmp73 = icmp eq i32 %op_mode, 0
  br i1 %cmp73, label %if.then75, label %if.else80

if.then75:                                        ; preds = %if.end72
  %cmp76 = icmp slt i64 %hv49.0, 0
  br i1 %cmp76, label %return, label %if.end91

if.else80:                                        ; preds = %if.end72
  %idxprom81 = sext i32 %op_mode to i64
  %arrayidx82 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom81
  %10 = load i16* %arrayidx82, align 2, !tbaa !2
  %cmp84 = icmp ugt i16 %10, 127
  br i1 %cmp84, label %if.end91, label %if.else87

if.else87:                                        ; preds = %if.else80
  %arrayidx89 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom81
  %11 = load i64* %arrayidx89, align 8, !tbaa !7
  %and = and i64 %11, %lv51.0
  br label %if.end91

if.end91:                                         ; preds = %if.else87, %if.else80, %if.then75
  %hv49.1 = phi i64 [ %hv49.0, %if.then75 ], [ %hv49.0, %if.else80 ], [ 0, %if.else87 ]
  %lv51.1 = phi i64 [ %lv51.0, %if.then75 ], [ %lv51.0, %if.else80 ], [ %and, %if.else87 ]
  call void @ereal_from_uint(%struct.realvaluetype* %d53, i64 %lv51.1, i64 %hv49.1, i32 %mode) #4
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp92, i32 %mode, %struct.realvaluetype* byval align 8 %d53) #4
  %12 = bitcast %struct.realvaluetype* %d53 to i8*
  %13 = bitcast %struct.realvaluetype* %tmp92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 24, i32 8, i1 false), !tbaa.struct !10
  %call93 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %tmp92, i32 %mode) #4
  br label %return

if.end95:                                         ; preds = %land.lhs.true4, %entry.if.end95_crit_edge, %land.lhs.true, %land.lhs.true37, %land.lhs.true31
  %bf.load96 = phi i32 [ %bf.load96.pre, %entry.if.end95_crit_edge ], [ %bf.load, %land.lhs.true ], [ %bf.load32.pre, %land.lhs.true37 ], [ %bf.load32.pre, %land.lhs.true31 ], [ %bf.load, %land.lhs.true4 ]
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 54
  br i1 %cmp98, label %land.lhs.true100, label %if.else213

land.lhs.true100:                                 ; preds = %if.end95
  %cmp101 = icmp ult i16 %0, 65
  %cmp104 = icmp ne i16 %0, 0
  %or.cond = and i1 %cmp101, %cmp104
  br i1 %or.cond, label %if.then106, label %if.else213

if.then106:                                       ; preds = %land.lhs.true100
  %rtwint110 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %14 = load i64* %rtwint110, align 8, !tbaa !7
  switch i32 %code, label %sw.default [
    i32 86, label %sw.bb
    i32 77, label %sw.bb112
    i32 129, label %sw.bb113
    i32 131, label %sw.bb118
    i32 122, label %sw.epilog
    i32 121, label %sw.bb127
    i32 120, label %sw.bb160
    i32 130, label %return
    i32 123, label %return
    i32 124, label %return
    i32 150, label %return
    i32 151, label %return
  ]

sw.bb:                                            ; preds = %if.then106
  %neg = xor i64 %14, -1
  br label %sw.epilog

sw.bb112:                                         ; preds = %if.then106
  %sub = sub nsw i64 0, %14
  br label %sw.epilog

sw.bb113:                                         ; preds = %if.then106
  %cmp114 = icmp sgt i64 %14, -1
  %sub116 = sub nsw i64 0, %14
  %cond117 = select i1 %cmp114, i64 %14, i64 %sub116
  br label %sw.epilog

sw.bb118:                                         ; preds = %if.then106
  %arrayidx120 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %15 = load i64* %arrayidx120, align 8, !tbaa !7
  %and121 = and i64 %15, %14
  %sub122 = sub nsw i64 0, %and121
  %and123 = and i64 %and121, %sub122
  %call124 = call i32 @exact_log2_wide(i64 %and123) #4
  %add = add nsw i32 %call124, 1
  %conv125 = sext i32 %add to i64
  br label %sw.epilog

sw.bb127:                                         ; preds = %if.then106
  %cmp128 = icmp eq i32 %op_mode, 0
  br i1 %cmp128, label %if.then130, label %if.end131

if.then130:                                       ; preds = %sw.bb127
  call void @fancy_abort(i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), i32 532, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #6
  unreachable

if.end131:                                        ; preds = %sw.bb127
  %idxprom132 = sext i32 %op_mode to i64
  %arrayidx133 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom132
  %16 = load i16* %arrayidx133, align 2, !tbaa !2
  %cmp135 = icmp eq i16 %16, 64
  br i1 %cmp135, label %if.then137, label %if.else145

if.then137:                                       ; preds = %if.end131
  %cmp141 = icmp eq i16 %0, 64
  br i1 %cmp141, label %sw.epilog, label %if.then143

if.then143:                                       ; preds = %if.then137
  call void @fancy_abort(i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), i32 539, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #6
  unreachable

if.else145:                                       ; preds = %if.end131
  %cmp149 = icmp ult i16 %16, 64
  br i1 %cmp149, label %if.then151, label %return

if.then151:                                       ; preds = %if.else145
  %sh_prom = zext i16 %16 to i64
  %shl = shl i64 -1, %sh_prom
  %neg155 = xor i64 %shl, -1
  %and156 = and i64 %14, %neg155
  br label %sw.epilog

sw.bb160:                                         ; preds = %if.then106
  %cmp161 = icmp eq i32 %op_mode, 0
  %mode.op_mode = select i1 %cmp161, i32 %mode, i32 %op_mode
  %idxprom165 = sext i32 %mode.op_mode to i64
  %arrayidx166 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom165
  %17 = load i16* %arrayidx166, align 2, !tbaa !2
  %conv167 = zext i16 %17 to i64
  %cmp168 = icmp eq i16 %17, 64
  br i1 %cmp168, label %if.then170, label %if.else178

if.then170:                                       ; preds = %sw.bb160
  %cmp174 = icmp eq i16 %0, 64
  br i1 %cmp174, label %sw.epilog, label %if.then176

if.then176:                                       ; preds = %if.then170
  call void @fancy_abort(i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), i32 557, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #6
  unreachable

if.else178:                                       ; preds = %sw.bb160
  %cmp182 = icmp ult i16 %17, 64
  br i1 %cmp182, label %if.then184, label %return

if.then184:                                       ; preds = %if.else178
  %shl189 = shl i64 -1, %conv167
  %neg190 = xor i64 %shl189, -1
  %and191 = and i64 %14, %neg190
  %sub195 = add i64 %conv167, 4294967295
  %sh_prom196 = and i64 %sub195, 4294967295
  %shl197 = shl i64 1, %sh_prom196
  %and198 = and i64 %shl197, %and191
  %tobool = icmp eq i64 %and198, 0
  br i1 %tobool, label %sw.epilog, label %if.then199

if.then199:                                       ; preds = %if.then184
  %shl204 = shl i64 1, %conv167
  %sub205 = sub nsw i64 %and191, %shl204
  br label %sw.epilog

sw.default:                                       ; preds = %if.then106
  call void @fancy_abort(i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), i32 580, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #6
  unreachable

sw.epilog:                                        ; preds = %if.then170, %if.then137, %if.then106, %if.then184, %if.then199, %if.then151, %sw.bb118, %sw.bb113, %sw.bb112, %sw.bb
  %val.0 = phi i64 [ %sub205, %if.then199 ], [ %and191, %if.then184 ], [ %and156, %if.then151 ], [ %conv125, %sw.bb118 ], [ %cond117, %sw.bb113 ], [ %sub, %sw.bb112 ], [ %neg, %sw.bb ], [ %14, %if.then106 ], [ %14, %if.then137 ], [ %14, %if.then170 ]
  %call211 = call i64 @trunc_int_for_mode(i64 %val.0, i32 %mode) #4
  %call212 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call211) #4
  br label %return

if.else213:                                       ; preds = %land.lhs.true100, %if.end95
  %bf.clear216 = and i32 %bf.load96, 16711680
  %cmp217 = icmp eq i32 %bf.clear216, 0
  %cmp220 = icmp ult i16 %0, 129
  %or.cond627 = and i1 %cmp217, %cmp220
  br i1 %or.cond627, label %land.lhs.true222, label %if.else348

land.lhs.true222:                                 ; preds = %if.else213
  %bf.clear224.off = add i32 %bf.clear97, -54
  %switch630 = icmp ult i32 %bf.clear224.off, 2
  br i1 %switch630, label %if.then232, label %if.else402

if.then232:                                       ; preds = %land.lhs.true222
  %cmp241 = icmp eq i32 %bf.clear97, 55
  br i1 %cmp241, label %if.then243, label %if.else250

if.then243:                                       ; preds = %if.then232
  %rtwint246 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1, i32 0
  %18 = load i64* %rtwint246, align 8, !tbaa !7
  %rtwint249 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 2, i32 0
  %19 = load i64* %rtwint249, align 8, !tbaa !7
  br label %if.end257

if.else250:                                       ; preds = %if.then232
  %rtwint253 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %20 = load i64* %rtwint253, align 8, !tbaa !7
  %.lobit = ashr i64 %20, 63
  br label %if.end257

if.end257:                                        ; preds = %if.else250, %if.then243
  %l1.0 = phi i64 [ %18, %if.then243 ], [ %20, %if.else250 ]
  %h1.0 = phi i64 [ %19, %if.then243 ], [ %.lobit, %if.else250 ]
  switch i32 %code, label %return [
    i32 86, label %sw.bb258
    i32 77, label %sw.bb261
    i32 129, label %sw.bb263
    i32 131, label %sw.bb270
    i32 122, label %sw.bb287
    i32 121, label %sw.bb288
    i32 120, label %sw.bb303
  ]

sw.bb258:                                         ; preds = %if.end257
  %neg259 = xor i64 %l1.0, -1
  store i64 %neg259, i64* %lv235, align 8, !tbaa !7
  %neg260 = xor i64 %h1.0, -1
  store i64 %neg260, i64* %hv238, align 8, !tbaa !7
  br label %sw.epilog346

sw.bb261:                                         ; preds = %if.end257
  %call262 = call i32 @neg_double(i64 %l1.0, i64 %h1.0, i64* %lv235, i64* %hv238) #4
  br label %sw.epilog346

sw.bb263:                                         ; preds = %if.end257
  %cmp264 = icmp slt i64 %h1.0, 0
  br i1 %cmp264, label %if.then266, label %if.else268

if.then266:                                       ; preds = %sw.bb263
  %call267 = call i32 @neg_double(i64 %l1.0, i64 %h1.0, i64* %lv235, i64* %hv238) #4
  br label %sw.epilog346

if.else268:                                       ; preds = %sw.bb263
  store i64 %l1.0, i64* %lv235, align 8, !tbaa !7
  store i64 %h1.0, i64* %hv238, align 8, !tbaa !7
  br label %sw.epilog346

sw.bb270:                                         ; preds = %if.end257
  store i64 0, i64* %hv238, align 8, !tbaa !7
  %cmp271 = icmp eq i64 %l1.0, 0
  br i1 %cmp271, label %if.then273, label %if.else280

if.then273:                                       ; preds = %sw.bb270
  %sub274 = sub nsw i64 0, %h1.0
  %and275 = and i64 %h1.0, %sub274
  %call276 = call i32 @exact_log2_wide(i64 %and275) #4
  %add278 = add nsw i32 %call276, 65
  %conv279 = sext i32 %add278 to i64
  store i64 %conv279, i64* %lv235, align 8, !tbaa !7
  br label %sw.epilog346

if.else280:                                       ; preds = %sw.bb270
  %sub281 = sub i64 0, %l1.0
  %and282 = and i64 %l1.0, %sub281
  %call283 = call i32 @exact_log2_wide(i64 %and282) #4
  %add284 = add nsw i32 %call283, 1
  %conv285 = sext i32 %add284 to i64
  store i64 %conv285, i64* %lv235, align 8, !tbaa !7
  br label %sw.epilog346

sw.bb287:                                         ; preds = %if.end257
  store i64 %l1.0, i64* %lv235, align 8, !tbaa !7
  store i64 %h1.0, i64* %hv238, align 8, !tbaa !7
  br label %sw.epilog346

sw.bb288:                                         ; preds = %if.end257
  %cmp289 = icmp eq i32 %op_mode, 0
  br i1 %cmp289, label %if.then291, label %if.end292

if.then291:                                       ; preds = %sw.bb288
  call void @fancy_abort(i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), i32 636, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #6
  unreachable

if.end292:                                        ; preds = %sw.bb288
  %idxprom293 = sext i32 %op_mode to i64
  %arrayidx294 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom293
  %21 = load i16* %arrayidx294, align 2, !tbaa !2
  %cmp296 = icmp ugt i16 %21, 64
  br i1 %cmp296, label %return, label %if.end299

if.end299:                                        ; preds = %if.end292
  store i64 0, i64* %hv238, align 8, !tbaa !7
  %arrayidx301 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom293
  %22 = load i64* %arrayidx301, align 8, !tbaa !7
  %and302 = and i64 %22, %l1.0
  store i64 %and302, i64* %lv235, align 8, !tbaa !7
  br label %sw.epilog346

sw.bb303:                                         ; preds = %if.end257
  %cmp304 = icmp eq i32 %op_mode, 0
  br i1 %cmp304, label %return, label %lor.lhs.false306

lor.lhs.false306:                                 ; preds = %sw.bb303
  %idxprom307 = sext i32 %op_mode to i64
  %arrayidx308 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom307
  %23 = load i16* %arrayidx308, align 2, !tbaa !2
  %cmp310 = icmp ugt i16 %23, 64
  br i1 %cmp310, label %return, label %if.else313

if.else313:                                       ; preds = %lor.lhs.false306
  %arrayidx315 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom307
  %24 = load i64* %arrayidx315, align 8, !tbaa !7
  %and316 = and i64 %24, %l1.0
  store i64 %and316, i64* %lv235, align 8, !tbaa !7
  %cmp320 = icmp ult i16 %23, 64
  br i1 %cmp320, label %land.lhs.true322, label %if.end339

land.lhs.true322:                                 ; preds = %if.else313
  %conv319 = zext i16 %23 to i64
  %sub326 = add i64 %conv319, 4294967295
  %sh_prom327 = and i64 %sub326, 4294967295
  %shl328 = shl i64 1, %sh_prom327
  %and329 = and i64 %shl328, %and316
  %cmp330 = icmp eq i64 %and329, 0
  br i1 %cmp330, label %if.end339, label %if.then332

if.then332:                                       ; preds = %land.lhs.true322
  %shl337 = shl i64 1, %conv319
  %sub338 = sub i64 %and316, %shl337
  store i64 %sub338, i64* %lv235, align 8, !tbaa !7
  br label %if.end339

if.end339:                                        ; preds = %land.lhs.true322, %if.then332, %if.else313
  %25 = phi i64 [ %and316, %land.lhs.true322 ], [ %sub338, %if.then332 ], [ %and316, %if.else313 ]
  %.lobit624 = ashr i64 %25, 63
  store i64 %.lobit624, i64* %hv238, align 8, !tbaa !7
  br label %sw.epilog346

sw.epilog346:                                     ; preds = %if.then273, %if.else280, %if.then266, %if.else268, %if.end339, %if.end299, %sw.bb287, %sw.bb261, %sw.bb258
  %26 = load i64* %lv235, align 8, !tbaa !7
  %27 = load i64* %hv238, align 8, !tbaa !7
  %call347 = call %struct.rtx_def* @immed_double_const(i64 %26, i64 %27, i32 %mode) #4
  br label %return

if.else348:                                       ; preds = %if.else213
  %cmp351 = icmp eq i32 %bf.clear97, 55
  br i1 %cmp351, label %land.lhs.true353, label %if.else402

land.lhs.true353:                                 ; preds = %if.else348
  %arrayidx355 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %28 = load i32* %arrayidx355, align 4, !tbaa !3
  %cmp356 = icmp eq i32 %28, 2
  br i1 %cmp356, label %if.then358, label %land.lhs.true371

if.then358:                                       ; preds = %land.lhs.true353
  %operand = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 0
  store %struct.rtx_def* %call, %struct.rtx_def** %operand, align 8, !tbaa !4
  %mode360 = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 2
  store i32 %mode, i32* %mode360, align 8, !tbaa !5
  %code361 = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 3
  store i32 %code, i32* %code361, align 4, !tbaa !6
  %want_integer = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 4
  store i8 0, i8* %want_integer, align 8, !tbaa !11
  %29 = bitcast %struct.simplify_unary_real_args* %args to i8*
  %call362 = call i32 @do_float_handler(void (i8*)* @simplify_unary_real, i8* %29) #4
  %tobool363 = icmp eq i32 %call362, 0
  br i1 %tobool363, label %return, label %if.then364

if.then364:                                       ; preds = %if.then358
  %result = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 1
  %30 = load %struct.rtx_def** %result, align 8, !tbaa !4
  br label %return

land.lhs.true371:                                 ; preds = %land.lhs.true353
  %bf.lshr373 = lshr i32 %bf.load96, 16
  %bf.clear374 = and i32 %bf.lshr373, 255
  %idxprom375623 = zext i32 %bf.clear374 to i64
  %arrayidx376 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom375623
  %31 = load i32* %arrayidx376, align 4, !tbaa !3
  %cmp377 = icmp eq i32 %31, 2
  br i1 %cmp377, label %land.lhs.true379, label %if.else402

land.lhs.true379:                                 ; preds = %land.lhs.true371
  %arrayidx381 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %32 = load i32* %arrayidx381, align 4, !tbaa !3
  %cmp382 = icmp eq i32 %32, 1
  br i1 %cmp382, label %land.lhs.true384, label %if.else402

land.lhs.true384:                                 ; preds = %land.lhs.true379
  %cmp385 = icmp ult i16 %0, 65
  %cmp388 = icmp ne i16 %0, 0
  %or.cond497 = and i1 %cmp385, %cmp388
  br i1 %or.cond497, label %if.then390, label %if.else402

if.then390:                                       ; preds = %land.lhs.true384
  %operand393 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 0
  store %struct.rtx_def* %call, %struct.rtx_def** %operand393, align 8, !tbaa !4
  %mode394 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 2
  store i32 %mode, i32* %mode394, align 8, !tbaa !5
  %code395 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 3
  store i32 %code, i32* %code395, align 4, !tbaa !6
  %want_integer396 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 4
  store i8 1, i8* %want_integer396, align 8, !tbaa !11
  %33 = bitcast %struct.simplify_unary_real_args* %args392 to i8*
  %call397 = call i32 @do_float_handler(void (i8*)* @simplify_unary_real, i8* %33) #4
  %tobool398 = icmp eq i32 %call397, 0
  br i1 %tobool398, label %return, label %if.then399

if.then399:                                       ; preds = %if.then390
  %result400 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 1
  %34 = load %struct.rtx_def** %result400, align 8, !tbaa !4
  br label %return

if.else402:                                       ; preds = %land.lhs.true222, %if.else348, %land.lhs.true384, %land.lhs.true379, %land.lhs.true371
  switch i32 %code, label %sw.epilog496 [
    i32 86, label %sw.bb404
    i32 77, label %sw.bb436
    i32 120, label %sw.bb446
  ]

sw.bb404:                                         ; preds = %if.else402
  %35 = bitcast %struct.rtx_def* %op to i32*
  %bf.load405 = load i32* %35, align 8
  %bf.clear406 = and i32 %bf.load405, 65535
  %cmp407 = icmp eq i32 %bf.clear406, 86
  br i1 %cmp407, label %if.then409, label %if.end412

if.then409:                                       ; preds = %sw.bb404
  %arrayidx411 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx411 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  br label %return

if.end412:                                        ; preds = %sw.bb404
  %cmp413 = icmp eq i32 %mode, 1
  br i1 %cmp413, label %land.lhs.true415, label %sw.epilog496

land.lhs.true415:                                 ; preds = %if.end412
  %idxprom418622 = zext i32 %bf.clear406 to i64
  %arrayidx419 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom418622
  %37 = load i8* %arrayidx419, align 1, !tbaa !0
  %cmp421 = icmp eq i8 %37, 60
  br i1 %cmp421, label %land.lhs.true423, label %sw.epilog496

land.lhs.true423:                                 ; preds = %land.lhs.true415
  %call424 = call i32 @reversed_comparison_code(%struct.rtx_def* %op, %struct.rtx_def* null) #4
  %cmp425 = icmp eq i32 %call424, 0
  br i1 %cmp425, label %sw.epilog496, label %if.then427

if.then427:                                       ; preds = %land.lhs.true423
  %fld428 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1
  %rtx430 = bitcast [1 x %union.rtunion_def]* %fld428 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx430, align 8, !tbaa !4
  %arrayidx432 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1
  %rtx433 = bitcast %union.rtunion_def* %arrayidx432 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx433, align 8, !tbaa !4
  %call434 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %call424, i32 %op_mode, %struct.rtx_def* %38, %struct.rtx_def* %39) #4
  br label %return

sw.bb436:                                         ; preds = %if.else402
  %40 = bitcast %struct.rtx_def* %op to i32*
  %bf.load437 = load i32* %40, align 8
  %bf.clear438 = and i32 %bf.load437, 65535
  %cmp439 = icmp eq i32 %bf.clear438, 77
  br i1 %cmp439, label %if.then441, label %sw.epilog496

if.then441:                                       ; preds = %sw.bb436
  %arrayidx443 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx444, align 8, !tbaa !4
  br label %return

sw.bb446:                                         ; preds = %if.else402
  %42 = bitcast %struct.rtx_def* %op to i32*
  %bf.load447 = load i32* %42, align 8
  %bf.clear448 = and i32 %bf.load447, 65535
  %cmp449 = icmp eq i32 %bf.clear448, 122
  br i1 %cmp449, label %land.lhs.true451, label %sw.epilog496

land.lhs.true451:                                 ; preds = %sw.bb446
  %arrayidx453 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx454 = bitcast %union.rtunion_def* %arrayidx453 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx454, align 8, !tbaa !4
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load455 = load i32* %44, align 8
  %bf.lshr456 = lshr i32 %bf.load455, 16
  %bf.clear457 = and i32 %bf.lshr456, 255
  %cmp458 = icmp eq i32 %bf.clear457, %mode
  %bf.clear465 = and i32 %bf.load455, 65535
  %cmp466 = icmp eq i32 %bf.clear465, 76
  %or.cond628 = and i1 %cmp458, %cmp466
  br i1 %or.cond628, label %land.lhs.true468, label %sw.epilog496

land.lhs.true468:                                 ; preds = %land.lhs.true451
  %fld472 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1
  %rtx474 = bitcast [1 x %union.rtunion_def]* %fld472 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx474, align 8, !tbaa !4
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load475 = load i32* %46, align 8
  %bf.clear476 = and i32 %bf.load475, 65535
  %cmp477 = icmp eq i32 %bf.clear476, 67
  br i1 %cmp477, label %land.lhs.true479, label %sw.epilog496

land.lhs.true479:                                 ; preds = %land.lhs.true468
  %arrayidx484 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 1
  %rtx485 = bitcast %union.rtunion_def* %arrayidx484 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx485, align 8, !tbaa !4
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load486 = load i32* %48, align 8
  %bf.clear487 = and i32 %bf.load486, 65535
  %cmp488 = icmp eq i32 %bf.clear487, 67
  br i1 %cmp488, label %return, label %sw.epilog496

sw.epilog496:                                     ; preds = %land.lhs.true423, %if.else402, %sw.bb446, %land.lhs.true451, %land.lhs.true468, %land.lhs.true479, %sw.bb436, %if.end412, %land.lhs.true415
  br label %return

return:                                           ; preds = %land.lhs.true479, %if.then390, %if.then358, %if.end257, %sw.bb303, %lor.lhs.false306, %if.end292, %if.then106, %if.then106, %if.then106, %if.then106, %if.then106, %if.else178, %if.else145, %if.then75, %sw.epilog496, %if.then441, %if.then427, %if.then409, %if.then399, %if.then364, %sw.epilog346, %sw.epilog, %if.end91, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call27, %if.end ], [ %call93, %if.end91 ], [ %call212, %sw.epilog ], [ %call347, %sw.epilog346 ], [ %30, %if.then364 ], [ %34, %if.then399 ], [ null, %sw.epilog496 ], [ %41, %if.then441 ], [ %36, %if.then409 ], [ %call434, %if.then427 ], [ null, %if.then75 ], [ null, %if.else145 ], [ null, %if.else178 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.end292 ], [ null, %lor.lhs.false306 ], [ null, %sw.bb303 ], [ null, %if.end257 ], [ null, %if.then358 ], [ null, %if.then390 ], [ %43, %land.lhs.true479 ]
  ret %struct.rtx_def* %retval.0
}
