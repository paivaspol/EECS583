define internal void @init_ready_list(%struct.ready_list* %ready) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.ready_list* %ready}, i64 0, metadata !555), !dbg !671
  %0 = load %struct.sched_info** @current_sched_info, align 8, !dbg !672, !tbaa !600
  %prev_head1 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 8, !dbg !672
  %1 = load %struct.rtx_def** %prev_head1, align 8, !dbg !672, !tbaa !600
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !556), !dbg !672
  %next_tail2 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 9, !dbg !673
  %2 = load %struct.rtx_def** %next_tail2, align 8, !dbg !673, !tbaa !600
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %2}, i64 0, metadata !557), !dbg !673
  store i32 0, i32* @target_n_insns, align 4, !dbg !674, !tbaa !594
  store i32 0, i32* @sched_n_insns, align 4, !dbg !675, !tbaa !594
  %insn.0.in.in45 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2, !dbg !676
  %insn.0.in46 = bitcast %union.rtunion_def* %insn.0.in.in45 to %struct.rtx_def**, !dbg !676
  %insn.047 = load %struct.rtx_def** %insn.0.in46, align 8, !dbg !676
  %cmp48 = icmp eq %struct.rtx_def* %insn.047, %2, !dbg !676
  br i1 %cmp48, label %for.end, label %for.body, !dbg !676

for.body:                                         ; preds = %entry, %for.cond.backedge
  %insn.049 = phi %struct.rtx_def* [ %insn.0, %for.cond.backedge ], [ %insn.047, %entry ]
  %3 = bitcast %struct.rtx_def* %insn.049 to i32*, !dbg !677
  %bf.load = load i32* %3, align 8, !dbg !677
  %bf.clear = and i32 %bf.load, 65535, !dbg !677
  %idxprom43 = zext i32 %bf.clear to i64, !dbg !677
  %arrayidx3 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom43, !dbg !677
  %4 = load i8* %arrayidx3, align 1, !dbg !677, !tbaa !595
  %cmp4 = icmp eq i8 %4, 105, !dbg !677
  br i1 %cmp4, label %if.end, label %for.cond.backedge, !dbg !677

if.end:                                           ; preds = %for.body
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %8}, i64 0, metadata !559), !dbg !678
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %insn.049, i64 0, i32 1, i64 0, !dbg !679
  %rtint = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !679
  %5 = load i32* %rtint, align 4, !dbg !679, !tbaa !594
  %idxprom11 = sext i32 %5 to i64, !dbg !679
  %6 = load %struct.haifa_insn_data** @h_i_d, align 8, !dbg !679, !tbaa !600
  %dep_count = getelementptr inbounds %struct.haifa_insn_data* %6, i64 %idxprom11, i32 4, !dbg !679
  %7 = load i32* %dep_count, align 4, !dbg !679, !tbaa !594
  %cmp13 = icmp eq i32 %7, 0, !dbg !679
  br i1 %cmp13, label %land.lhs.true, label %if.end27, !dbg !679

land.lhs.true:                                    ; preds = %if.end
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %insn.049, i64 0, i32 1, i64 2, !dbg !678
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !678
  %8 = load %struct.rtx_def** %rtx8, align 8, !dbg !678, !tbaa !600
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !679
  %bf.load15 = load i32* %9, align 8, !dbg !679
  %bf.clear16 = and i32 %bf.load15, 268435456, !dbg !679
  %cmp17 = icmp eq i32 %bf.clear16, 0, !dbg !679
  br i1 %cmp17, label %if.then26, label %lor.lhs.false, !dbg !679

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.clear20 = and i32 %bf.load15, 65535, !dbg !679
  %idxprom2144 = zext i32 %bf.clear20 to i64, !dbg !679
  %arrayidx22 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom2144, !dbg !679
  %10 = load i8* %arrayidx22, align 1, !dbg !679, !tbaa !595
  %cmp24 = icmp eq i8 %10, 105, !dbg !679
  br i1 %cmp24, label %if.end27, label %if.then26, !dbg !679

if.then26:                                        ; preds = %lor.lhs.false, %land.lhs.true
  tail call void @ready_add(%struct.ready_list* %ready, %struct.rtx_def* %insn.049) #8, !dbg !680
  %bf.load28.pre = load i32* %3, align 8, !dbg !681
  br label %if.end27, !dbg !680

if.end27:                                         ; preds = %if.then26, %lor.lhs.false, %if.end
  %bf.load28 = phi i32 [ %bf.load28.pre, %if.then26 ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %if.end ]
  %bf.clear30 = and i32 %bf.load28, 268435456, !dbg !681
  %tobool = icmp eq i32 %bf.clear30, 0, !dbg !681
  br i1 %tobool, label %if.then31, label %for.cond.backedge, !dbg !681

for.cond.backedge:                                ; preds = %if.end27, %for.body, %if.then31
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.049, i64 0, i32 1, i64 2, !dbg !676
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !676
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8, !dbg !676
  %cmp = icmp eq %struct.rtx_def* %insn.0, %2, !dbg !676
  br i1 %cmp, label %for.end, label %for.body, !dbg !676

if.then31:                                        ; preds = %if.end27
  %11 = load i32* @target_n_insns, align 4, !dbg !682, !tbaa !594
  %inc = add nsw i32 %11, 1, !dbg !682
  store i32 %inc, i32* @target_n_insns, align 4, !dbg !682, !tbaa !594
  br label %for.cond.backedge, !dbg !682

for.end:                                          ; preds = %for.cond.backedge, %entry
  ret void, !dbg !683
}
