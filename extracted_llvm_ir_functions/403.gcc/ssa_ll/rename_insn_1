define internal i32 @rename_insn_1(%struct.rtx_def** nocapture %ptr, i8* %data) #0 {
entry:
  %i = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %ptr}, i64 0, metadata !942), !dbg !2037
  call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !943), !dbg !2038
  %0 = load %struct.rtx_def** %ptr, align 8, !dbg !2039, !tbaa !1216
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !944), !dbg !2039
  %1 = bitcast i8* %data to %struct.rename_context*, !dbg !2040
  call void @llvm.dbg.value(metadata !{%struct.rename_context* %1}, i64 0, metadata !945), !dbg !2040
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !2041
  br i1 %cmp, label %return, label %if.end, !dbg !2041

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2042
  %bf.load = load i32* %2, align 8, !dbg !2042
  %bf.clear = and i32 %bf.load, 65535, !dbg !2042
  switch i32 %bf.clear, label %sw.default [
    i32 47, label %sw.bb
    i32 61, label %sw.bb166
    i32 49, label %sw.bb210
    i32 152, label %return
  ], !dbg !2042

sw.bb:                                            ; preds = %if.end
  %fld = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, !dbg !2043
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !2043
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %rtx}, i64 0, metadata !946), !dbg !2043
  %3 = load %struct.rtx_def** %rtx, align 8, !dbg !2044, !tbaa !1216
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %3}, i64 0, metadata !949), !dbg !2044
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !2045
  %bf.load4 = load i32* %4, align 8, !dbg !2045
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !2045
  %cmp6 = icmp eq i32 %bf.clear5, 63, !dbg !2045
  br i1 %cmp6, label %land.lhs.true, label %if.end61, !dbg !2045

land.lhs.true:                                    ; preds = %sw.bb
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !2045
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !2045
  %idxprom315 = zext i32 %bf.clear8 to i64, !dbg !2045
  %arrayidx9 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom315, !dbg !2045
  %5 = load i8* %arrayidx9, align 1, !dbg !2045, !tbaa !1217
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0, !dbg !2045
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !2045
  %6 = load %struct.rtx_def** %rtx12, align 8, !dbg !2045, !tbaa !1216
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2045
  %bf.load13 = load i32* %7, align 8, !dbg !2045
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !2045
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !2045
  %idxprom16316 = zext i32 %bf.clear15 to i64, !dbg !2045
  %arrayidx17 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom16316, !dbg !2045
  %8 = load i8* %arrayidx17, align 1, !dbg !2045, !tbaa !1217
  %cmp19 = icmp ugt i8 %5, %8, !dbg !2045
  br i1 %cmp19, label %land.lhs.true21, label %if.end61, !dbg !2045

land.lhs.true21:                                  ; preds = %land.lhs.true
  %bf.clear26 = and i32 %bf.load13, 65535, !dbg !2045
  %cmp27 = icmp eq i32 %bf.clear26, 61, !dbg !2045
  br i1 %cmp27, label %land.lhs.true29, label %if.end61, !dbg !2045

land.lhs.true29:                                  ; preds = %land.lhs.true21
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0, !dbg !2045
  %rtuint = bitcast %union.rtunion_def* %arrayidx34 to i32*, !dbg !2045
  %9 = load i32* %rtuint, align 4, !dbg !2045, !tbaa !1224
  %cmp35 = icmp ugt i32 %9, 52, !dbg !2045
  %.off = add i32 %9, -16, !dbg !2045
  %switch = icmp ult i32 %.off, 2, !dbg !2045
  %or.cond = or i1 %cmp35, %switch
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %rtx12}, i64 0, metadata !946), !dbg !2046
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !949), !dbg !2048
  %. = select i1 %or.cond, %struct.rtx_def* %6, %struct.rtx_def* %3
  %rtx12.rtx = select i1 %or.cond, %struct.rtx_def** %rtx12, %struct.rtx_def** %rtx
  %.phi.trans.insert = bitcast %struct.rtx_def* %. to i32*
  %bf.load62.pre = load i32* %.phi.trans.insert, align 8, !dbg !2049
  br label %if.end61

if.end61:                                         ; preds = %land.lhs.true29, %land.lhs.true21, %land.lhs.true, %sw.bb
  %bf.load62 = phi i32 [ %bf.load4, %land.lhs.true21 ], [ %bf.load4, %land.lhs.true ], [ %bf.load4, %sw.bb ], [ %bf.load62.pre, %land.lhs.true29 ]
  %dest.0 = phi %struct.rtx_def* [ %3, %land.lhs.true21 ], [ %3, %land.lhs.true ], [ %3, %sw.bb ], [ %., %land.lhs.true29 ]
  %destp.0 = phi %struct.rtx_def** [ %rtx, %land.lhs.true21 ], [ %rtx, %land.lhs.true ], [ %rtx, %sw.bb ], [ %rtx12.rtx, %land.lhs.true29 ]
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !2049
  switch i32 %bf.clear63, label %return [
    i32 64, label %while.cond
    i32 63, label %while.cond
    i32 132, label %while.cond
    i32 133, label %while.cond
    i32 61, label %land.lhs.true135
  ], !dbg !2049

while.cond:                                       ; preds = %if.end61, %if.end61, %if.end61, %if.end61, %while.body
  %bf.load82 = phi i32 [ %bf.load82.pre, %while.body ], [ %bf.load62, %if.end61 ], [ %bf.load62, %if.end61 ], [ %bf.load62, %if.end61 ], [ %bf.load62, %if.end61 ]
  %reg.0 = phi %struct.rtx_def* [ %10, %while.body ], [ %dest.0, %if.end61 ], [ %dest.0, %if.end61 ], [ %dest.0, %if.end61 ], [ %dest.0, %if.end61 ]
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !2050
  switch i32 %bf.clear83, label %return [
    i32 64, label %while.body
    i32 63, label %while.body
    i32 132, label %while.body
    i32 133, label %while.body
    i32 61, label %land.lhs.true107
  ], !dbg !2050

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %arrayidx101 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0, !dbg !2051
  %rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !2051
  %10 = load %struct.rtx_def** %rtx102, align 8, !dbg !2051, !tbaa !1216
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %10}, i64 0, metadata !952), !dbg !2051
  %.phi.trans.insert350 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load82.pre = load i32* %.phi.trans.insert350, align 8, !dbg !2050
  br label %while.cond, !dbg !2051

land.lhs.true107:                                 ; preds = %while.cond
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0, !dbg !2052
  %rtuint110 = bitcast %union.rtunion_def* %arrayidx109 to i32*, !dbg !2052
  %11 = load i32* %rtuint110, align 4, !dbg !2052, !tbaa !1224
  %cmp111 = icmp ugt i32 %11, 52, !dbg !2052
  %.off333 = add i32 %11, -16, !dbg !2052
  %switch334 = icmp ult i32 %.off333, 2, !dbg !2052
  %or.cond335 = or i1 %cmp111, %switch334
  br i1 %or.cond335, label %if.then125, label %return

if.then125:                                       ; preds = %land.lhs.true107
  %new_renames = bitcast i8* %data to %struct.rename_set_data**, !dbg !2053
  %12 = load %struct.rename_set_data** %new_renames, align 8, !dbg !2053, !tbaa !1216
  call void @llvm.dbg.value(metadata !{%struct.rename_set_data* %12}, i64 0, metadata !953), !dbg !2053
  store %struct.rename_set_data* null, %struct.rename_set_data** %new_renames, align 8, !dbg !2054, !tbaa !1216
  %call = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %reg.0, %struct.rtx_def* %reg.0) #7, !dbg !2055
  %call127 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #7, !dbg !2055
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call127}, i64 0, metadata !950), !dbg !2055
  store %struct.rtx_def* %call127, %struct.rtx_def** %i, align 8, !dbg !2055, !tbaa !1216
  %call128 = call i32 @for_each_rtx(%struct.rtx_def** %i, i32 (%struct.rtx_def**, i8*)* @rename_insn_1, i8* %data) #7, !dbg !2056
  call fastcc void @apply_delayed_renames(%struct.rename_context* %1) #8, !dbg !2057
  store %struct.rename_set_data* %12, %struct.rename_set_data** %new_renames, align 8, !dbg !2058, !tbaa !1216
  br label %return, !dbg !2059

land.lhs.true135:                                 ; preds = %if.end61
  %arrayidx137 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0, !dbg !2060
  %rtuint138 = bitcast %union.rtunion_def* %arrayidx137 to i32*, !dbg !2060
  %13 = load i32* %rtuint138, align 4, !dbg !2060, !tbaa !1224
  %cmp139 = icmp ugt i32 %13, 52, !dbg !2060
  %.off336 = add i32 %13, -16, !dbg !2060
  %switch337 = icmp ult i32 %.off336, 2, !dbg !2060
  %or.cond338 = or i1 %cmp139, %switch337
  br i1 %or.cond338, label %if.then153, label %return

if.then153:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.value(metadata !{%struct.rename_context* %1}, i64 0, metadata !2061) #5, !dbg !2064
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %destp.0}, i64 0, metadata !2065) #5, !dbg !2066
  %call.i = call noalias i8* @xmalloc(i64 48) #7, !dbg !2067
  %14 = bitcast i8* %call.i to %struct.rename_set_data*, !dbg !2067
  call void @llvm.dbg.value(metadata !{%struct.rename_set_data* %14}, i64 0, metadata !2068) #5, !dbg !2067
  %15 = load %struct.rtx_def** %destp.0, align 8, !dbg !2069, !tbaa !1216
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !2069
  %bf.load.i = load i32* %16, align 8, !dbg !2069
  %bf.clear.i = and i32 %bf.load.i, 65535, !dbg !2069
  %cmp.i = icmp eq i32 %bf.clear.i, 61, !dbg !2069
  br i1 %cmp.i, label %lor.lhs.false.i, label %if.then.i, !dbg !2069

lor.lhs.false.i:                                  ; preds = %if.then153
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0, !dbg !2069
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*, !dbg !2069
  %17 = load i32* %rtuint.i, align 4, !dbg !2069, !tbaa !1224
  %cmp1.i = icmp ugt i32 %17, 52, !dbg !2069
  %.off.i = add i32 %17, -16, !dbg !2069
  %switch.i = icmp ult i32 %.off.i, 2, !dbg !2069
  %or.cond.i = or i1 %cmp1.i, %switch.i
  br i1 %or.cond.i, label %create_delayed_rename.exit, label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.then153
  call void @fancy_abort(i8* getelementptr inbounds ([47 x i8]* @.str1, i64 0, i64 0), i32 746, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.create_delayed_rename, i64 0, i64 0)) #9, !dbg !2070
  unreachable, !dbg !2070

create_delayed_rename.exit:                       ; preds = %lor.lhs.false.i
  %reg_loc12.i = getelementptr inbounds i8* %call.i, i64 8, !dbg !2071
  %18 = bitcast i8* %reg_loc12.i to %struct.rtx_def***, !dbg !2071
  store %struct.rtx_def** %destp.0, %struct.rtx_def*** %18, align 8, !dbg !2071, !tbaa !1216
  %old_reg.i = getelementptr inbounds i8* %call.i, i64 16, !dbg !2072
  %19 = bitcast i8* %old_reg.i to %struct.rtx_def**, !dbg !2072
  store %struct.rtx_def* %15, %struct.rtx_def** %19, align 8, !dbg !2072, !tbaa !1216
  %call14.i = call fastcc %struct.rtx_def* @ssa_rename_to_lookup(%struct.rtx_def* %15) #7, !dbg !2073
  %prev_reg.i = getelementptr inbounds i8* %call.i, i64 32, !dbg !2073
  %20 = bitcast i8* %prev_reg.i to %struct.rtx_def**, !dbg !2073
  store %struct.rtx_def* %call14.i, %struct.rtx_def** %20, align 8, !dbg !2073, !tbaa !1216
  %current_insn.i = getelementptr inbounds i8* %data, i64 16, !dbg !2074
  %21 = bitcast i8* %current_insn.i to %struct.rtx_def**, !dbg !2074
  %22 = load %struct.rtx_def** %21, align 8, !dbg !2074, !tbaa !1216
  %set_insn.i = getelementptr inbounds i8* %call.i, i64 40, !dbg !2074
  %23 = bitcast i8* %set_insn.i to %struct.rtx_def**, !dbg !2074
  store %struct.rtx_def* %22, %struct.rtx_def** %23, align 8, !dbg !2074, !tbaa !1216
  %new_renames.i = bitcast i8* %data to %struct.rename_set_data**, !dbg !2075
  %24 = load %struct.rename_set_data** %new_renames.i, align 8, !dbg !2075, !tbaa !1216
  %next.i = bitcast i8* %call.i to %struct.rename_set_data**, !dbg !2075
  store %struct.rename_set_data* %24, %struct.rename_set_data** %next.i, align 8, !dbg !2075, !tbaa !1216
  store %struct.rename_set_data* %14, %struct.rename_set_data** %new_renames.i, align 8, !dbg !2076, !tbaa !1216
  %bf.load154 = load i32* %2, align 8, !dbg !2077
  %bf.clear155 = and i32 %bf.load154, 65535, !dbg !2077
  %cmp156 = icmp eq i32 %bf.clear155, 47, !dbg !2077
  br i1 %cmp156, label %if.then158, label %return, !dbg !2077

if.then158:                                       ; preds = %create_delayed_rename.exit
  %arrayidx160 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, !dbg !2078
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !2078
  %call162 = call i32 @for_each_rtx(%struct.rtx_def** %rtx161, i32 (%struct.rtx_def**, i8*)* @rename_insn_1, i8* %data) #7, !dbg !2078
  br label %return, !dbg !2078

sw.bb166:                                         ; preds = %if.end
  %arrayidx168 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !2079
  %rtuint169 = bitcast %union.rtunion_def* %arrayidx168 to i32*, !dbg !2079
  %25 = load i32* %rtuint169, align 4, !dbg !2079, !tbaa !1224
  %cmp170 = icmp ugt i32 %25, 52, !dbg !2079
  %.off339 = add i32 %25, -16, !dbg !2079
  %switch340 = icmp ult i32 %.off339, 2, !dbg !2079
  %or.cond341 = or i1 %cmp170, %switch340
  %26 = load i32* @ssa_max_reg_num, align 4, !dbg !2079, !tbaa !1224
  %cmp188 = icmp ult i32 %25, %26, !dbg !2079
  %or.cond345 = and i1 %or.cond341, %cmp188
  br i1 %or.cond345, label %if.then190, label %return

if.then190:                                       ; preds = %sw.bb166
  %call191 = call fastcc %struct.rtx_def* @ssa_rename_to_lookup(%struct.rtx_def* %0) #8, !dbg !2080
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call191}, i64 0, metadata !955), !dbg !2080
  %cmp192 = icmp eq %struct.rtx_def* %call191, null, !dbg !2081
  %27 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !dbg !2081, !tbaa !1216
  %cmp195 = icmp eq %struct.rtx_def* %call191, %27, !dbg !2081
  %or.cond325 = or i1 %cmp192, %cmp195, !dbg !2081
  br i1 %or.cond325, label %return, label %if.then197, !dbg !2081

if.then197:                                       ; preds = %if.then190
  %28 = bitcast %struct.rtx_def* %call191 to i32*, !dbg !2082
  %bf.load201 = load i32* %28, align 8, !dbg !2082
  %bf.lshr199317 = xor i32 %bf.load201, %bf.load, !dbg !2082
  %29 = and i32 %bf.lshr199317, 16711680, !dbg !2082
  %cmp204 = icmp eq i32 %29, 0, !dbg !2082
  br i1 %cmp204, label %if.end207, label %if.then206, !dbg !2082

if.then206:                                       ; preds = %if.then197
  call void @fancy_abort(i8* getelementptr inbounds ([47 x i8]* @.str1, i64 0, i64 0), i32 927, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.rename_insn_1, i64 0, i64 0)) #9, !dbg !2084
  unreachable, !dbg !2084

if.end207:                                        ; preds = %if.then197
  store %struct.rtx_def* %call191, %struct.rtx_def** %ptr, align 8, !dbg !2085, !tbaa !1216
  br label %return, !dbg !2086

sw.bb210:                                         ; preds = %if.end
  %arrayidx213 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !2087
  %rtx214 = bitcast %union.rtunion_def* %arrayidx213 to %struct.rtx_def**, !dbg !2087
  %30 = load %struct.rtx_def** %rtx214, align 8, !dbg !2087, !tbaa !1216
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %30}, i64 0, metadata !957), !dbg !2087
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !2088
  %bf.load215 = load i32* %31, align 8, !dbg !2088
  %bf.clear216 = and i32 %bf.load215, 65535, !dbg !2088
  %cmp217 = icmp eq i32 %bf.clear216, 61, !dbg !2088
  br i1 %cmp217, label %if.then219, label %return, !dbg !2088

if.then219:                                       ; preds = %sw.bb210
  %arrayidx221 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0, !dbg !2089
  %rtuint222 = bitcast %union.rtunion_def* %arrayidx221 to i32*, !dbg !2089
  %32 = load i32* %rtuint222, align 4, !dbg !2089, !tbaa !1224
  %cmp223 = icmp ugt i32 %32, 52, !dbg !2089
  %.off342 = add i32 %32, -16, !dbg !2089
  %switch343 = icmp ult i32 %.off342, 2, !dbg !2089
  %or.cond344 = or i1 %cmp223, %switch343
  %33 = load i32* @ssa_max_reg_num, align 4, !dbg !2089, !tbaa !1224
  %cmp241 = icmp ult i32 %32, %33, !dbg !2089
  %or.cond346 = and i1 %or.cond344, %cmp241
  br i1 %or.cond346, label %if.then243, label %return

if.then243:                                       ; preds = %if.then219
  %call245 = call fastcc %struct.rtx_def* @ssa_rename_to_lookup(%struct.rtx_def* %30) #8, !dbg !2090
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call245}, i64 0, metadata !959), !dbg !2090
  %cmp246 = icmp eq %struct.rtx_def* %call245, null, !dbg !2091
  %34 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !dbg !2091, !tbaa !1216
  %cmp249 = icmp eq %struct.rtx_def* %call245, %34, !dbg !2091
  %or.cond328 = or i1 %cmp246, %cmp249, !dbg !2091
  br i1 %or.cond328, label %return, label %if.then251, !dbg !2091

if.then251:                                       ; preds = %if.then243
  %35 = getelementptr inbounds %union.rtunion_def* %arrayidx213, i64 0, i32 0, !dbg !2092
  %call245.c = ptrtoint %struct.rtx_def* %call245 to i64, !dbg !2092
  store i64 %call245.c, i64* %35, align 8, !dbg !2092, !tbaa !1216
  br label %return, !dbg !2092

sw.default:                                       ; preds = %if.end
  br label %return, !dbg !2093

return:                                           ; preds = %while.cond, %if.then219, %sw.bb166, %land.lhs.true135, %land.lhs.true107, %if.end, %sw.bb210, %if.then251, %if.then243, %if.end207, %if.then190, %if.then125, %if.end61, %create_delayed_rename.exit, %if.then158, %entry, %sw.default
  %retval.0 = phi i32 [ 0, %sw.default ], [ 0, %entry ], [ -1, %if.then158 ], [ -1, %create_delayed_rename.exit ], [ 0, %if.end61 ], [ 0, %if.then125 ], [ -1, %if.then190 ], [ -1, %if.end207 ], [ -1, %if.then243 ], [ -1, %if.then251 ], [ 0, %sw.bb210 ], [ -1, %if.end ], [ 0, %land.lhs.true107 ], [ 0, %land.lhs.true135 ], [ -1, %sw.bb166 ], [ -1, %if.then219 ], [ 0, %while.cond ]
  ret i32 %retval.0, !dbg !2094
}
