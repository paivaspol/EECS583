define internal i32 @record_canonical_element_1(i8** nocapture %srfp, i8* nocapture %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8** %srfp}, i64 0, metadata !704), !dbg !1906
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !705), !dbg !1907
  %0 = load i8** %srfp, align 8, !dbg !1908, !tbaa !1216
  %reg1 = bitcast i8* %0 to i32*, !dbg !1908
  %1 = load i32* %reg1, align 4, !dbg !1908, !tbaa !1224
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !706), !dbg !1908
  %canonical_elements2 = bitcast i8* %data to %struct.simple_bitmap_def**, !dbg !1909
  %2 = load %struct.simple_bitmap_def** %canonical_elements2, align 8, !dbg !1909, !tbaa !1216
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %2}, i64 0, metadata !707), !dbg !1909
  %reg_partition3 = getelementptr inbounds i8* %data, i64 8, !dbg !1910
  %3 = bitcast i8* %reg_partition3 to %struct.partition_def**, !dbg !1910
  %4 = load %struct.partition_def** %3, align 8, !dbg !1910, !tbaa !1216
  tail call void @llvm.dbg.value(metadata !{%struct.partition_def* %4}, i64 0, metadata !708), !dbg !1910
  %idxprom = zext i32 %1 to i64, !dbg !1911
  %class_element = getelementptr inbounds %struct.partition_def* %4, i64 0, i32 1, i64 %idxprom, i32 0, !dbg !1911
  %5 = load i32* %class_element, align 4, !dbg !1911, !tbaa !1224
  %rem = and i32 %5, 63, !dbg !1911
  %sh_prom = zext i32 %rem to i64, !dbg !1911
  %shl = shl i64 1, %sh_prom, !dbg !1911
  %div = lshr i32 %5, 6, !dbg !1911
  %idxprom8 = zext i32 %div to i64, !dbg !1911
  %arrayidx9 = getelementptr inbounds %struct.simple_bitmap_def* %2, i64 0, i32 3, i64 %idxprom8, !dbg !1911
  %6 = load i64* %arrayidx9, align 8, !dbg !1911, !tbaa !1234
  %or = or i64 %shl, %6, !dbg !1911
  store i64 %or, i64* %arrayidx9, align 8, !dbg !1911, !tbaa !1234
  ret i32 1, !dbg !1912
}
