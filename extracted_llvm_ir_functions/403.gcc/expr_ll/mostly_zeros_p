define internal fastcc i32 @mostly_zeros_p(%union.tree_node* %exp) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 46
  br i1 %cmp, label %if.then, label %if.end21

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %3, null
  br i1 %tobool, label %for.cond.preheader, label %land.lhs.true

for.cond.preheader:                               ; preds = %land.lhs.true, %if.then
  %tobool1232 = icmp eq %union.tree_node* %2, null
  br i1 %tobool1232, label %for.end, label %for.body

land.lhs.true:                                    ; preds = %if.then
  %code6 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast [4 x i8]* %code6 to i32*
  %bf.load7 = load i32* %4, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  %cmp9 = icmp eq i32 %bf.clear8, 19
  br i1 %cmp9, label %if.then10, label %for.cond.preheader

if.then10:                                        ; preds = %land.lhs.true
  %cmp11 = icmp eq %union.tree_node* %2, null
  %conv = zext i1 %cmp11 to i32
  br label %return

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %elt.035 = phi %union.tree_node* [ %7, %for.body ], [ %2, %for.cond.preheader ]
  %zeros.034 = phi i32 [ %zeros.0.inc, %for.body ], [ 0, %for.cond.preheader ]
  %elts.033 = phi i32 [ %inc16, %for.body ], [ 0, %for.cond.preheader ]
  %value = getelementptr inbounds %union.tree_node* %elt.035, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !0
  %call = tail call fastcc i32 @mostly_zeros_p(%union.tree_node* %6) #10
  %not.tobool13 = icmp ne i32 %call, 0
  %inc = zext i1 %not.tobool13 to i32
  %zeros.0.inc = add nsw i32 %inc, %zeros.034
  %inc16 = add nsw i32 %elts.033, 1
  %chain = getelementptr inbounds %union.tree_node* %elt.035, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool12 = icmp eq %union.tree_node* %7, null
  br i1 %tobool12, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %phitmp = shl i32 %zeros.0.inc, 2
  %phitmp37 = mul i32 %inc16, 3
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader
  %zeros.0.lcssa = phi i32 [ %phitmp, %for.cond.for.end_crit_edge ], [ 0, %for.cond.preheader ]
  %elts.0.lcssa = phi i32 [ %phitmp37, %for.cond.for.end_crit_edge ], [ 0, %for.cond.preheader ]
  %cmp19 = icmp sge i32 %zeros.0.lcssa, %elts.0.lcssa
  %conv20 = zext i1 %cmp19 to i32
  br label %return

if.end21:                                         ; preds = %entry
  %call22 = tail call fastcc i32 @is_zeros_p(%union.tree_node* %exp) #10
  br label %return

return:                                           ; preds = %if.end21, %for.end, %if.then10
  %retval.0 = phi i32 [ %conv, %if.then10 ], [ %conv20, %for.end ], [ %call22, %if.end21 ]
  ret i32 %retval.0
}
