define internal fastcc void @do_jump_by_parts_greater(%union.tree_node* nocapture %exp, i32 %swap, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %idxprom = sext i32 %swap to i64
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %0 = bitcast i32* %operands to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %0, i64 0, i64 %idxprom
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* null, i32 0, i32 0) #10
  %lnot = icmp eq i32 %swap, 0
  %idxprom2 = zext i1 %lnot to i64
  %arrayidx5 = getelementptr inbounds [1 x %union.tree_node*]* %0, i64 0, i64 %idxprom2
  %2 = load %union.tree_node** %arrayidx5, align 8, !tbaa !0
  %call6 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %2, %struct.rtx_def* null, i32 0, i32 0) #10
  %arrayidx9 = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx9, align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !0
  %type10 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode11 = getelementptr inbounds %struct.tree_type* %type10, i64 0, i32 6
  %5 = bitcast [4 x i8]* %mode11 to i32*
  %bf.load = load i32* %5, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %unsigned_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load18 = load i32* %6, align 8
  %bf.lshr19 = lshr i32 %bf.load18, 13
  %bf.clear20 = and i32 %bf.lshr19, 1
  tail call void @do_jump_by_parts_greater_rtx(i32 %bf.clear, i32 %bf.clear20, %struct.rtx_def* %call, %struct.rtx_def* %call6, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #10
  ret void
}
