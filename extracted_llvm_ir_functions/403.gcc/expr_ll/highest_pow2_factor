define internal fastcc i64 @highest_pow2_factor(%union.tree_node* nocapture %exp) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %exp.tr.be, %tailrecurse.backedge ]
  %code = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 25, label %sw.bb
    i32 59, label %sw.bb6
    i32 60, label %sw.bb6
    i32 78, label %sw.bb6
    i32 79, label %sw.bb6
    i32 61, label %sw.bb16
    i32 65, label %sw.bb25
    i32 62, label %sw.bb25
    i32 64, label %sw.bb25
    i32 63, label %sw.bb25
    i32 116, label %sw.bb51
    i32 115, label %sw.bb51
    i32 114, label %sw.bb51
    i32 118, label %sw.bb51
    i32 58, label %sw.bb51
    i32 47, label %sw.bb56
    i32 51, label %sw.bb61
  ]

sw.bb:                                            ; preds = %tailrecurse
  %bf.clear3 = and i32 %bf.load, 262144
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %if.else, label %return

if.else:                                          ; preds = %sw.bb
  %int_cst4 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst4 to i64*
  %1 = load i64* %low, align 8, !tbaa !7
  %sub = sub nsw i64 0, %1
  %and = and i64 %1, %sub
  %tobool5 = icmp ne i64 %and, 0
  %cond = select i1 %tobool5, i64 %and, i64 128
  br label %return

sw.bb6:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %call = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %2) #10
  %arrayidx10 = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx10 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  %call11 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %4) #10
  %cmp = icmp slt i64 %call, %call11
  %cond15 = select i1 %cmp, i64 %call, i64 %call11
  ret i64 %cond15

sw.bb16:                                          ; preds = %tailrecurse
  %operands18 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx19 = bitcast i32* %operands18 to %union.tree_node**
  %5 = load %union.tree_node** %arrayidx19, align 8, !tbaa !0
  %call20 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %5) #10
  %arrayidx23 = getelementptr inbounds i32* %operands18, i64 2
  %6 = bitcast i32* %arrayidx23 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !0
  %call24 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %7) #10
  %mul = mul nsw i64 %call24, %call20
  ret i64 %mul

sw.bb25:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands27 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds i32* %operands27, i64 2
  %8 = bitcast i32* %arrayidx28 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !0
  %call29 = tail call i32 @integer_pow2p(%union.tree_node* %9) #8
  %tobool30 = icmp eq i32 %call29, 0
  br i1 %tobool30, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.bb25
  %10 = load %union.tree_node** %8, align 8, !tbaa !0
  %call34 = tail call i32 @host_integerp(%union.tree_node* %10, i32 1) #8
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %return, label %if.then36

if.then36:                                        ; preds = %land.lhs.true
  %arrayidx39 = bitcast i32* %operands27 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx39, align 8, !tbaa !0
  %call40 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %11) #10
  %12 = load %union.tree_node** %8, align 8, !tbaa !0
  %call44 = tail call i64 @tree_low_cst(%union.tree_node* %12, i32 1) #8
  %div = sdiv i64 %call40, %call44
  %cmp45 = icmp slt i64 %div, 1
  %.div = select i1 %cmp45, i64 1, i64 %div
  ret i64 %.div

sw.bb51:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands53 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %sw.bb51, %sw.bb56
  %exp.tr.be.in.in = phi i32* [ %operands53, %sw.bb51 ], [ %arrayidx59, %sw.bb56 ]
  %exp.tr.be.in = bitcast i32* %exp.tr.be.in.in to %union.tree_node**
  %exp.tr.be = load %union.tree_node** %exp.tr.be.in, align 8
  br label %tailrecurse

sw.bb56:                                          ; preds = %tailrecurse
  %operands58 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx59 = getelementptr inbounds i32* %operands58, i64 2
  br label %tailrecurse.backedge

sw.bb61:                                          ; preds = %tailrecurse
  %operands63 = getelementptr inbounds %union.tree_node* %exp.tr, i64 0, i32 0, i32 2
  %arrayidx64 = getelementptr inbounds i32* %operands63, i64 2
  %13 = bitcast i32* %arrayidx64 to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !0
  %call65 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %14) #10
  %arrayidx68 = getelementptr inbounds i32* %operands63, i64 4
  %15 = bitcast i32* %arrayidx68 to %union.tree_node**
  %16 = load %union.tree_node** %15, align 8, !tbaa !0
  %call69 = tail call fastcc i64 @highest_pow2_factor(%union.tree_node* %16) #10
  %cmp70 = icmp slt i64 %call65, %call69
  %cond74 = select i1 %cmp70, i64 %call65, i64 %call69
  ret i64 %cond74

return:                                           ; preds = %tailrecurse, %sw.bb25, %land.lhs.true, %sw.bb, %if.else
  %retval.0 = phi i64 [ %cond, %if.else ], [ 128, %sw.bb ], [ 1, %land.lhs.true ], [ 1, %sw.bb25 ], [ 1, %tailrecurse ]
  ret i64 %retval.0
}
