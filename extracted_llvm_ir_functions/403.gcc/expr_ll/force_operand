define %struct.rtx_def* @force_operand(%struct.rtx_def* %value, %struct.rtx_def* %target) #0 {
entry:
  %call = tail call fastcc %struct.rtx_def* @get_subtarget(%struct.rtx_def* %target) #10
  %0 = bitcast %struct.rtx_def* %value to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -75
  %switch = icmp ult i32 %bf.clear.off, 2
  br i1 %switch, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %2 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !0
  %cmp6 = icmp eq %struct.rtx_def* %1, %2
  br i1 %cmp6, label %land.lhs.true7, label %if.end33

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx10, align 8, !tbaa !0
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load11 = load i32* %4, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  switch i32 %bf.clear12, label %if.end33 [
    i32 68, label %if.then
    i32 67, label %if.then
    i32 58, label %if.then
  ]

if.then:                                          ; preds = %land.lhs.true7, %land.lhs.true7, %land.lhs.true7
  %tobool = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool, label %if.then28, label %if.end

if.then28:                                        ; preds = %if.then
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear30 = and i32 %bf.lshr, 255
  %call31 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear30) #8
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then28
  %subtarget.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call31, %if.then28 ]
  %call32 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %subtarget.0, %struct.rtx_def* %value) #10
  br label %return

if.end33:                                         ; preds = %entry, %land.lhs.true7, %land.lhs.true
  switch i32 %bf.clear, label %return [
    i32 75, label %if.end100
    i32 76, label %if.then41
    i32 78, label %if.then46
    i32 63, label %land.lhs.true236
  ]

if.then41:                                        ; preds = %if.end33
  br label %if.end100

if.then46:                                        ; preds = %if.end33
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx49, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load50 = load i32* %6, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  switch i32 %bf.clear51, label %if.then87 [
    i32 67, label %if.end88
    i32 68, label %if.end88
    i32 54, label %if.end88
    i32 55, label %if.end88
    i32 58, label %if.end88
    i32 134, label %if.end88
    i32 56, label %if.end88
    i32 140, label %if.end88
    i32 61, label %land.lhs.true85
  ]

land.lhs.true85:                                  ; preds = %if.then46
  %cmp86 = icmp eq %struct.rtx_def* %5, %call
  br i1 %cmp86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.then46, %land.lhs.true85
  br label %if.end88

if.end88:                                         ; preds = %land.lhs.true85, %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %if.then46, %if.then87
  %subtarget.1 = phi %struct.rtx_def* [ null, %if.then87 ], [ %call, %if.then46 ], [ %call, %if.then46 ], [ %call, %if.then46 ], [ %call, %if.then46 ], [ %call, %if.then46 ], [ %call, %if.then46 ], [ %call, %if.then46 ], [ %call, %if.then46 ], [ %call, %land.lhs.true85 ]
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx91, align 8, !tbaa !0
  %call92 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %7, %struct.rtx_def* %subtarget.1) #10
  %bf.load93 = load i32* %0, align 8
  %bf.lshr94 = lshr i32 %bf.load93, 16
  %bf.clear95 = and i32 %bf.lshr94, 255
  %call96 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %5, %struct.rtx_def* null) #10
  %call97 = tail call %struct.rtx_def* @expand_mult(i32 %bf.clear95, %struct.rtx_def* %call92, %struct.rtx_def* %call96, %struct.rtx_def* %target, i32 1) #8
  ret %struct.rtx_def* %call97

if.end100:                                        ; preds = %if.end33, %if.then41
  %binoptab.0.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), %if.then41 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), %if.end33 ]
  %binoptab.0 = load %struct.optab** %binoptab.0.in, align 8
  %tobool101 = icmp eq %struct.optab* %binoptab.0, null
  br i1 %tobool101, label %if.end232, label %if.then102

if.then102:                                       ; preds = %if.end100
  %fld103 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx105, align 8, !tbaa !0
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load106 = load i32* %9, align 8
  %bf.clear107 = and i32 %bf.load106, 65535
  switch i32 %bf.clear107, label %if.then143 [
    i32 67, label %if.end144
    i32 68, label %if.end144
    i32 54, label %if.end144
    i32 55, label %if.end144
    i32 58, label %if.end144
    i32 134, label %if.end144
    i32 56, label %if.end144
    i32 140, label %if.end144
    i32 61, label %land.lhs.true141
  ]

land.lhs.true141:                                 ; preds = %if.then102
  %cmp142 = icmp eq %struct.rtx_def* %8, %call
  br i1 %cmp142, label %if.then143, label %if.end144

if.then143:                                       ; preds = %if.then102, %land.lhs.true141
  br label %if.end144

if.end144:                                        ; preds = %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %if.then102, %land.lhs.true141, %if.then143
  %subtarget.2 = phi %struct.rtx_def* [ %call, %if.then102 ], [ %call, %land.lhs.true141 ], [ null, %if.then143 ], [ %call, %if.then102 ], [ %call, %if.then102 ], [ %call, %if.then102 ], [ %call, %if.then102 ], [ %call, %if.then102 ], [ %call, %if.then102 ], [ %call, %if.then102 ]
  %10 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !0
  %cmp145 = icmp eq %struct.optab* %binoptab.0, %10
  %cmp149 = icmp eq i32 %bf.clear107, 54
  %or.cond = and i1 %cmp145, %cmp149
  br i1 %or.cond, label %if.then150, label %if.end155

if.then150:                                       ; preds = %if.end144
  %11 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !0
  %bf.lshr152 = lshr i32 %bf.load, 16
  %bf.clear153 = and i32 %bf.lshr152, 255
  %call154 = tail call %struct.rtx_def* @negate_rtx(i32 %bf.clear153, %struct.rtx_def* %8) #8
  br label %if.end155

if.end155:                                        ; preds = %if.then150, %if.end144
  %binoptab.1 = phi %struct.optab* [ %11, %if.then150 ], [ %binoptab.0, %if.end144 ]
  %op2.0 = phi %struct.rtx_def* [ %call154, %if.then150 ], [ %8, %if.end144 ]
  %12 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !0
  %cmp156 = icmp eq %struct.optab* %binoptab.1, %12
  br i1 %cmp156, label %land.lhs.true157, label %if.end222

land.lhs.true157:                                 ; preds = %if.end155
  %13 = bitcast %struct.rtx_def* %op2.0 to i32*
  %bf.load158 = load i32* %13, align 8
  %bf.clear159 = and i32 %bf.load158, 65535
  %cmp160 = icmp eq i32 %bf.clear159, 54
  br i1 %cmp160, label %land.lhs.true161, label %if.end222

land.lhs.true161:                                 ; preds = %land.lhs.true157
  %rtx164 = bitcast [1 x %union.rtunion_def]* %fld103 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx164, align 8, !tbaa !0
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load165 = load i32* %15, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %cmp167 = icmp eq i32 %bf.clear166, 75
  br i1 %cmp167, label %land.lhs.true168, label %if.end222

land.lhs.true168:                                 ; preds = %land.lhs.true161
  %arrayidx173 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0
  %rtx174 = bitcast %union.rtunion_def* %arrayidx173 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx174, align 8, !tbaa !0
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load175 = load i32* %17, align 8
  %bf.clear176 = and i32 %bf.load175, 65535
  %cmp177 = icmp eq i32 %bf.clear176, 61
  br i1 %cmp177, label %land.lhs.true178, label %if.end222

land.lhs.true178:                                 ; preds = %land.lhs.true168
  %arrayidx186 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx186 to i32*
  %18 = load i32* %rtuint, align 4, !tbaa !3
  %.off = add i32 %18, -53
  %19 = icmp ult i32 %.off, 5
  br i1 %19, label %if.then199, label %if.end222

if.then199:                                       ; preds = %land.lhs.true178
  %bf.load201 = load i32* %0, align 8
  %bf.lshr202 = lshr i32 %bf.load201, 16
  %bf.clear203 = and i32 %bf.lshr202, 255
  %call210 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear203, %struct.optab* %binoptab.1, %struct.rtx_def* %16, %struct.rtx_def* %op2.0, %struct.rtx_def* %subtarget.2, i32 0, i32 3) #8
  %bf.load211 = load i32* %0, align 8
  %bf.lshr212 = lshr i32 %bf.load211, 16
  %bf.clear213 = and i32 %bf.lshr212, 255
  %20 = load %struct.rtx_def** %rtx164, align 8, !tbaa !0
  %arrayidx218 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 1
  %rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx219, align 8, !tbaa !0
  %call220 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %21, %struct.rtx_def* null) #10
  %call221 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear213, %struct.optab* %binoptab.1, %struct.rtx_def* %call210, %struct.rtx_def* %call220, %struct.rtx_def* %target, i32 0, i32 3) #8
  ret %struct.rtx_def* %call221

if.end222:                                        ; preds = %land.lhs.true157, %if.end155, %land.lhs.true178, %land.lhs.true168, %land.lhs.true161
  %rtx225 = bitcast [1 x %union.rtunion_def]* %fld103 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx225, align 8, !tbaa !0
  %call226 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %22, %struct.rtx_def* %subtarget.2) #10
  %bf.load227 = load i32* %0, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 16
  %bf.clear229 = and i32 %bf.lshr228, 255
  %call230 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %op2.0, %struct.rtx_def* null) #10
  %call231 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear229, %struct.optab* %binoptab.1, %struct.rtx_def* %call226, %struct.rtx_def* %call230, %struct.rtx_def* %target, i32 0, i32 3) #8
  ret %struct.rtx_def* %call231

if.end232:                                        ; preds = %if.end100
  %cmp235 = icmp eq i32 %bf.clear, 63
  br i1 %cmp235, label %land.lhs.true236, label %return

land.lhs.true236:                                 ; preds = %if.end33, %if.end232
  %fld237 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1
  %rtx239 = bitcast [1 x %union.rtunion_def]* %fld237 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx239, align 8, !tbaa !0
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load240 = load i32* %24, align 8
  %bf.clear241 = and i32 %bf.load240, 65535
  %cmp242 = icmp eq i32 %bf.clear241, 66
  br i1 %cmp242, label %land.lhs.true243, label %return

land.lhs.true243:                                 ; preds = %land.lhs.true236
  %bf.lshr245 = lshr i32 %bf.load, 16
  %bf.clear246 = and i32 %bf.lshr245, 255
  %idxprom360 = zext i32 %bf.clear246 to i64
  %arrayidx247 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom360
  %25 = load i8* %arrayidx247, align 1, !tbaa !1
  %bf.lshr252 = lshr i32 %bf.load240, 16
  %bf.clear253 = and i32 %bf.lshr252, 255
  %idxprom254361 = zext i32 %bf.clear253 to i64
  %arrayidx255 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom254361
  %26 = load i8* %arrayidx255, align 1, !tbaa !1
  %cmp257 = icmp ugt i8 %25, %26
  br i1 %cmp257, label %if.then259, label %return

if.then259:                                       ; preds = %land.lhs.true243
  %call272 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %23, %struct.rtx_def* null) #10
  %call273 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear253, %struct.rtx_def* %call272) #8
  %27 = load %struct.rtx_def** %rtx239, align 8, !tbaa !0
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load277 = load i32* %28, align 8
  %bf.lshr278 = lshr i32 %bf.load277, 16
  %bf.clear279 = and i32 %bf.lshr278, 255
  %arrayidx281 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 1
  %rtuint282 = bitcast %union.rtunion_def* %arrayidx281 to i32*
  %29 = load i32* %rtuint282, align 4, !tbaa !3
  %call283 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear246, %struct.rtx_def* %call273, i32 %bf.clear279, i32 %29) #8
  ret %struct.rtx_def* %call283

return:                                           ; preds = %if.end33, %if.end232, %land.lhs.true236, %land.lhs.true243, %if.end
  %retval.0 = phi %struct.rtx_def* [ %subtarget.0, %if.end ], [ %value, %land.lhs.true243 ], [ %value, %land.lhs.true236 ], [ %value, %if.end232 ], [ %value, %if.end33 ]
  ret %struct.rtx_def* %retval.0
}
