define internal fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %union.tree_node* %exp, i32 %value_mode, i32 %unsignedp, %union.tree_node* %type, i32 %alias_set) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  br label %return

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i64 %bitsize, 0
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %2, i32 0, i32 0) #10
  br label %return

if.else:                                          ; preds = %if.end
  %cmp3 = icmp sgt i64 %bitsize, -1
  %3 = icmp ult i64 %bitsize, 64
  br i1 %3, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.else
  %shl = shl i64 1, %bitsize
  %sub = add nsw i64 %shl, -1
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %width_mask.0 = phi i64 [ %sub, %if.then5 ], [ 0, %if.else ]
  %cmp8 = icmp eq i32 %mode, 51
  %4 = bitcast %struct.rtx_def* %target to i32*
  %bf.load10 = load i32* %4, align 8
  br i1 %cmp8, label %land.lhs.true9, label %if.end54

land.lhs.true9:                                   ; preds = %if.end7
  %bf.clear11 = and i32 %bf.load10, 65535
  switch i32 %bf.clear11, label %if.end54 [
    i32 61, label %if.then16
    i32 63, label %if.then16
  ]

if.then16:                                        ; preds = %land.lhs.true9, %land.lhs.true9
  %readonly_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load18 = load i32* %5, align 8
  %6 = lshr i32 %bf.load18, 10
  %mul24 = and i32 %6, 2
  %type25 = bitcast %union.tree_node* %type to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type25, i64 0, i32 6
  %7 = bitcast [4 x i8]* %restrict_flag to i32*
  %bf.load26 = load i32* %7, align 4
  %8 = lshr i32 %bf.load26, 19
  %mul29 = and i32 %8, 4
  %bf.clear34 = and i32 %bf.load18, 255
  %cmp35 = icmp eq i32 %bf.clear34, 20
  br i1 %cmp35, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then16
  %type37 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type37, align 8, !tbaa !0
  %tobool = icmp ne %union.tree_node* %9, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then16
  %10 = phi i1 [ false, %if.then16 ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  %mul38 = shl nuw nsw i32 %land.ext, 3
  %or = or i32 %mul24, %mul29
  %or30 = or i32 %or, %mul38
  %or40 = or i32 %or30, 1
  %call41 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %type, i32 %or40) #8
  %call42 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call41, i32 0, i32 1, i32 1) #8
  %call43 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call42, i32 51, i64 0, i32 1, i32 1) #8
  %bf.load44 = load i32* %4, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %idxprom455 = zext i32 %bf.clear46 to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom455
  %11 = load i16* %arrayidx, align 2, !tbaa !5
  %conv = zext i16 %11 to i64
  %cmp47 = icmp eq i64 %conv, %bitsize
  br i1 %cmp47, label %if.end51, label %if.then49

if.then49:                                        ; preds = %land.end
  %call50 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call42, %struct.rtx_def* %target) #10
  br label %if.end51

if.end51:                                         ; preds = %land.end, %if.then49
  %call52 = tail call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %call43, i64 %bitsize, i64 %bitpos, i32 51, %union.tree_node* %exp, i32 0, i32 0, %union.tree_node* %type, i32 %alias_set) #10
  %call53 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %call42) #10
  ret %struct.rtx_def* %call43

if.end54:                                         ; preds = %if.end7, %land.lhs.true9
  %12 = bitcast %struct.rtx_def* %target to i32*
  %bf.clear56 = and i32 %bf.load10, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 65
  br i1 %cmp57, label %if.then59, label %if.end65

if.then59:                                        ; preds = %if.end54
  %cmp60 = icmp eq i64 %bitpos, 0
  br i1 %cmp60, label %if.end63, label %if.then62

if.then62:                                        ; preds = %if.then59
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 5092, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.store_field, i64 0, i64 0)) #9
  unreachable

if.end63:                                         ; preds = %if.then59
  %call64 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 0) #10
  br label %return

if.end65:                                         ; preds = %if.end54
  switch i32 %mode, label %land.lhs.true71 [
    i32 0, label %if.then134.thread
    i32 51, label %lor.lhs.false85
  ]

if.then134.thread:                                ; preds = %if.end65
  %call135457 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0) #10
  br label %if.end160

land.lhs.true71:                                  ; preds = %if.end65
  %idxprom72 = sext i32 %mode to i64
  %arrayidx73 = getelementptr inbounds [59 x i8]* @direct_store, i64 0, i64 %idxprom72
  %13 = load i8* %arrayidx73, align 1, !tbaa !1
  %tobool74 = icmp eq i8 %13, 0
  br i1 %tobool74, label %land.lhs.true75, label %lor.lhs.false85

land.lhs.true75:                                  ; preds = %land.lhs.true71
  %arrayidx77 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom72
  %14 = load i32* %arrayidx77, align 4, !tbaa !4
  %.off = add i32 %14, -5
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %lor.lhs.false85, label %if.then134

lor.lhs.false85:                                  ; preds = %land.lhs.true75, %if.end65, %land.lhs.true71
  switch i32 %bf.clear56, label %lor.lhs.false95 [
    i32 61, label %if.then134
    i32 63, label %if.then134
  ]

lor.lhs.false95:                                  ; preds = %lor.lhs.false85
  br i1 %cmp3, label %land.lhs.true116, label %if.else242

land.lhs.true116:                                 ; preds = %lor.lhs.false95
  %type118 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type118, align 8, !tbaa !0
  %size = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2
  %16 = bitcast i32* %size to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !0
  %code121 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 2
  %18 = bitcast [4 x i8]* %code121 to i32*
  %bf.load122 = load i32* %18, align 8
  %bf.clear123 = and i32 %bf.load122, 255
  %cmp124 = icmp eq i32 %bf.clear123, 25
  br i1 %cmp124, label %land.lhs.true126, label %if.else242

land.lhs.true126:                                 ; preds = %land.lhs.true116
  %call131 = tail call i32 @compare_tree_int(%union.tree_node* %17, i64 %bitsize) #8
  %cmp132 = icmp eq i32 %call131, 0
  br i1 %cmp132, label %if.else242, label %if.then134

if.then134:                                       ; preds = %land.lhs.true75, %lor.lhs.false85, %lor.lhs.false85, %land.lhs.true126
  %call135 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0) #10
  switch i32 %mode, label %land.lhs.true141 [
    i32 51, label %if.end160
    i32 0, label %if.end160
  ]

land.lhs.true141:                                 ; preds = %if.then134
  %type143 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %19 = load %union.tree_node** %type143, align 8, !tbaa !0
  %type144 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %mode145 = getelementptr inbounds %struct.tree_type* %type144, i64 0, i32 6
  %20 = bitcast [4 x i8]* %mode145 to i32*
  %bf.load146 = load i32* %20, align 4
  %bf.lshr147 = lshr i32 %bf.load146, 9
  %bf.clear148 = and i32 %bf.lshr147, 127
  %cmp149 = icmp eq i32 %bf.clear148, %mode
  br i1 %cmp149, label %if.end160, label %if.then151

if.then151:                                       ; preds = %land.lhs.true141
  %call159 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %bf.clear148, %struct.rtx_def* %call135, i32 1) #10
  br label %if.end160

if.end160:                                        ; preds = %if.then134.thread, %if.then134, %if.then134, %land.lhs.true141, %if.then151
  %temp.0 = phi %struct.rtx_def* [ %call159, %if.then151 ], [ %call135, %land.lhs.true141 ], [ %call135, %if.then134 ], [ %call135, %if.then134 ], [ %call135457, %if.then134.thread ]
  %bf.load161 = load i32* %12, align 8
  %bf.clear163 = and i32 %bf.load161, 16711680
  %cmp164 = icmp eq i32 %bf.clear163, 3342336
  br i1 %cmp164, label %land.lhs.true166, label %if.end199

land.lhs.true166:                                 ; preds = %if.end160
  %21 = bitcast %struct.rtx_def* %temp.0 to i32*
  %bf.load167 = load i32* %21, align 8
  %bf.clear169 = and i32 %bf.load167, 16711680
  %cmp170 = icmp eq i32 %bf.clear169, 3342336
  br i1 %cmp170, label %if.then172, label %if.end199

if.then172:                                       ; preds = %land.lhs.true166
  %bf.clear174 = and i32 %bf.load161, 65535
  %cmp175 = icmp eq i32 %bf.clear174, 66
  br i1 %cmp175, label %lor.lhs.false177, label %if.then186

lor.lhs.false177:                                 ; preds = %if.then172
  %bf.clear179 = and i32 %bf.load167, 65535
  %cmp180 = icmp eq i32 %bf.clear179, 66
  br i1 %cmp180, label %lor.lhs.false182, label %if.then186

lor.lhs.false182:                                 ; preds = %lor.lhs.false177
  %rem183454 = and i64 %bitpos, 7
  %cmp184 = icmp eq i64 %rem183454, 0
  br i1 %cmp184, label %if.end187, label %if.then186

if.then186:                                       ; preds = %lor.lhs.false182, %lor.lhs.false177, %if.then172
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 5145, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.store_field, i64 0, i64 0)) #9
  unreachable

if.end187:                                        ; preds = %lor.lhs.false182
  %div = sdiv i64 %bitpos, 8
  %call188 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 0, i64 %div, i32 1, i32 1) #8
  %sub189 = add nsw i64 %bitsize, 7
  %div190 = sdiv i64 %sub189, 8
  %call191 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div190) #8
  %call192 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call188, %struct.rtx_def* %temp.0, %struct.rtx_def* %call191) #10
  %cmp193 = icmp eq i32 %value_mode, 0
  %22 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %cond198 = select i1 %cmp193, %struct.rtx_def* %22, %struct.rtx_def* %call188
  br label %return

if.end199:                                        ; preds = %land.lhs.true166, %if.end160
  %call200 = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #8
  %call201 = tail call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %struct.rtx_def* %temp.0, i64 %call200) #8
  %cmp202 = icmp eq i32 %value_mode, 0
  br i1 %cmp202, label %if.end241, label %if.then204

if.then204:                                       ; preds = %if.end199
  %cmp205 = icmp eq i64 %width_mask.0, 0
  br i1 %cmp205, label %if.end238, label %land.lhs.true207

land.lhs.true207:                                 ; preds = %if.then204
  %bf.load208 = load i32* %12, align 8
  %23 = and i32 %bf.load208, 134283263
  %24 = icmp eq i32 %23, 134217794
  br i1 %24, label %if.end238, label %if.then217

if.then217:                                       ; preds = %land.lhs.true207
  %25 = bitcast %struct.rtx_def* %temp.0 to i32*
  %bf.load218 = load i32* %25, align 8
  %bf.lshr219 = lshr i32 %bf.load218, 16
  %bf.clear220 = and i32 %bf.lshr219, 255
  %cmp221 = icmp eq i32 %bf.clear220, 0
  %value_mode.bf.clear220 = select i1 %cmp221, i32 %value_mode, i32 %bf.clear220
  %tobool225 = icmp eq i32 %unsignedp, 0
  br i1 %tobool225, label %if.end230, label %if.then226

if.then226:                                       ; preds = %if.then217
  %call227 = tail call i64 @trunc_int_for_mode(i64 %width_mask.0, i32 %value_mode.bf.clear220) #8
  %call228 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call227) #8
  %call229 = tail call %struct.rtx_def* @expand_and(i32 %value_mode.bf.clear220, %struct.rtx_def* %temp.0, %struct.rtx_def* %call228, %struct.rtx_def* null) #8
  br label %return

if.end230:                                        ; preds = %if.then217
  %idxprom231 = sext i32 %value_mode.bf.clear220 to i64
  %arrayidx232 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom231
  %26 = load i16* %arrayidx232, align 2, !tbaa !5
  %conv233 = zext i16 %26 to i64
  %sub234 = sub nsw i64 %conv233, %bitsize
  %call235 = tail call %union.tree_node* @build_int_2_wide(i64 %sub234, i64 0) #8
  %call236 = tail call %struct.rtx_def* @expand_shift(i32 82, i32 %value_mode.bf.clear220, %struct.rtx_def* %temp.0, %union.tree_node* %call235, %struct.rtx_def* null, i32 0) #8
  %call237 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %value_mode.bf.clear220, %struct.rtx_def* %call236, %union.tree_node* %call235, %struct.rtx_def* null, i32 0) #8
  br label %return

if.end238:                                        ; preds = %land.lhs.true207, %if.then204
  %call239 = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #8
  %call240 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %unsignedp, %struct.rtx_def* null, i32 %value_mode, i32 0, i64 %call239) #8
  br label %return

if.end241:                                        ; preds = %if.end199
  %27 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  br label %return

if.else242:                                       ; preds = %land.lhs.true126, %land.lhs.true116, %lor.lhs.false95
  %arrayidx244 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %cmp245 = icmp ne i32 %value_mode, 0
  br i1 %cmp245, label %land.lhs.true247, label %if.end305

land.lhs.true247:                                 ; preds = %if.else242
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load248 = load i32* %29, align 8
  %bf.clear249 = and i32 %bf.load248, 65535
  switch i32 %bf.clear249, label %if.then302 [
    i32 61, label %if.end305
    i32 67, label %if.end305
    i32 68, label %if.end305
    i32 54, label %if.end305
    i32 58, label %if.end305
    i32 55, label %if.end305
    i32 75, label %land.lhs.true282
  ]

land.lhs.true282:                                 ; preds = %land.lhs.true247
  %arrayidx284 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 1
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx285, align 8, !tbaa !0
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load286 = load i32* %31, align 8
  %bf.clear287 = and i32 %bf.load286, 65535
  %cmp288 = icmp eq i32 %bf.clear287, 54
  br i1 %cmp288, label %land.lhs.true290, label %if.then302

land.lhs.true290:                                 ; preds = %land.lhs.true282
  %arrayidx292 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx293, align 8, !tbaa !0
  %33 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !0
  %cmp294 = icmp eq %struct.rtx_def* %32, %33
  %34 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !0
  %cmp300 = icmp eq %struct.rtx_def* %32, %34
  %or.cond456 = or i1 %cmp294, %cmp300
  br i1 %or.cond456, label %if.end305, label %if.then302

if.then302:                                       ; preds = %land.lhs.true290, %land.lhs.true247, %land.lhs.true282
  %call303 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %28) #8
  %call304 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %target, %struct.rtx_def* %call303) #8
  br label %if.end305

if.end305:                                        ; preds = %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %land.lhs.true247, %if.then302, %land.lhs.true290, %if.else242
  %div306 = sdiv i64 %bitpos, 8
  %call307 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 %mode, i64 %div306, i32 1, i32 1) #8
  %cmp308 = icmp eq %struct.rtx_def* %call307, %target
  br i1 %cmp308, label %if.then310, label %do.body

if.then310:                                       ; preds = %if.end305
  %call311 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target) #8
  br label %do.body

do.body:                                          ; preds = %if.end305, %if.then310
  %to_rtx.0 = phi %struct.rtx_def* [ %call311, %if.then310 ], [ %call307, %if.end305 ]
  %35 = bitcast %struct.rtx_def* %to_rtx.0 to i32*
  %bf.load313 = load i32* %35, align 8
  %bf.set = and i32 %bf.load313, 1879048191
  %bf.clear316 = or i32 %bf.set, 268435456
  store i32 %bf.clear316, i32* %35, align 8
  %bf.clear319 = and i32 %bf.load313, 16777216
  %tobool320 = icmp eq i32 %bf.clear319, 0
  br i1 %tobool320, label %land.lhs.true321, label %if.end338

land.lhs.true321:                                 ; preds = %do.body
  %arrayidx323 = getelementptr inbounds %struct.rtx_def* %to_rtx.0, i64 0, i32 1, i64 1
  %rtmem324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.mem_attrs**
  %36 = load %struct.mem_attrs** %rtmem324, align 8, !tbaa !0
  %cmp325 = icmp eq %struct.mem_attrs* %36, null
  br i1 %cmp325, label %if.end338, label %cond.false328

cond.false328:                                    ; preds = %land.lhs.true321
  %alias = getelementptr inbounds %struct.mem_attrs* %36, i64 0, i32 0
  %37 = load i64* %alias, align 8, !tbaa !7
  %phitmp = icmp eq i64 %37, 0
  br i1 %phitmp, label %if.end338, label %if.then336

if.then336:                                       ; preds = %cond.false328
  %conv337 = sext i32 %alias_set to i64
  tail call void @set_mem_alias_set(%struct.rtx_def* %to_rtx.0, i64 %conv337) #8
  br label %if.end338

if.end338:                                        ; preds = %cond.false328, %land.lhs.true321, %do.body, %if.then336
  %conv340 = zext i1 %cmp245 to i32
  %call341 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %to_rtx.0, i32 %conv340) #10
  br label %return

return:                                           ; preds = %if.end338, %if.end241, %if.end238, %if.end230, %if.then226, %if.end187, %if.end63, %if.then2, %if.then
  %retval.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %call, %if.then2 ], [ %call64, %if.end63 ], [ %cond198, %if.end187 ], [ %call240, %if.end238 ], [ %call229, %if.then226 ], [ %call237, %if.end230 ], [ %27, %if.end241 ], [ %call341, %if.end338 ]
  ret %struct.rtx_def* %retval.0
}
