define internal fastcc void @do_compare_and_jump(%union.tree_node* nocapture %exp, i32 %signed_code, i32 %unsigned_code, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %0, %struct.rtx_def* null, i32 0, i32 0) #10
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %code5 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code5 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx8 = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx8 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  %call9 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %4, %struct.rtx_def* null, i32 0, i32 0) #10
  %5 = load %union.tree_node** %3, align 8, !tbaa !0
  %code14 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %code14 to i32*
  %bf.load15 = load i32* %6, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 0
  br i1 %cmp17, label %return, label %if.end19

if.end19:                                         ; preds = %if.end
  %7 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %type24 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type24, align 8, !tbaa !0
  %type25 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %mode26 = getelementptr inbounds %struct.tree_type* %type25, i64 0, i32 6
  %9 = bitcast [4 x i8]* %mode26 to i32*
  %bf.load27 = load i32* %9, align 4
  %bf.lshr = lshr i32 %bf.load27, 9
  %bf.clear28 = and i32 %bf.lshr, 127
  %code33 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast [4 x i8]* %code33 to i32*
  %bf.load34 = load i32* %10, align 8
  %bf.clear35 = and i32 %bf.load34, 255
  %cmp36 = icmp eq i32 %bf.clear35, 25
  br i1 %cmp36, label %land.lhs.true, label %if.end72

land.lhs.true:                                    ; preds = %if.end19
  %cmp44 = icmp eq i32 %bf.clear16, 25
  br i1 %cmp44, label %lor.lhs.false, label %land.lhs.true.if.then61_crit_edge

land.lhs.true.if.then61_crit_edge:                ; preds = %land.lhs.true
  %type66.phi.trans.insert = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %.pre = load %union.tree_node** %type66.phi.trans.insert, align 8, !tbaa !0
  %type67.phi.trans.insert = bitcast %union.tree_node* %.pre to %struct.tree_type*
  %mode68.phi.trans.insert = getelementptr inbounds %struct.tree_type* %type67.phi.trans.insert, i64 0, i32 6
  %.phi.trans.insert = bitcast [4 x i8]* %mode68.phi.trans.insert to i32*
  %bf.load69.pre = load i32* %.phi.trans.insert, align 4
  br label %if.then61

lor.lhs.false:                                    ; preds = %land.lhs.true
  %idxprom101 = zext i32 %bf.clear28 to i64
  %arrayidx45 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom101
  %11 = load i16* %arrayidx45, align 2, !tbaa !5
  %type50 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type50, align 8, !tbaa !0
  %type51 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %mode52 = getelementptr inbounds %struct.tree_type* %type51, i64 0, i32 6
  %13 = bitcast [4 x i8]* %mode52 to i32*
  %bf.load53 = load i32* %13, align 4
  %bf.lshr54 = lshr i32 %bf.load53, 9
  %bf.clear55 = and i32 %bf.lshr54, 127
  %idxprom56102 = zext i32 %bf.clear55 to i64
  %arrayidx57 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom56102
  %14 = load i16* %arrayidx57, align 2, !tbaa !5
  %cmp59 = icmp ugt i16 %11, %14
  br i1 %cmp59, label %if.then61, label %if.end72

if.then61:                                        ; preds = %land.lhs.true.if.then61_crit_edge, %lor.lhs.false
  %bf.load69 = phi i32 [ %bf.load69.pre, %land.lhs.true.if.then61_crit_edge ], [ %bf.load53, %lor.lhs.false ]
  %15 = phi %union.tree_node* [ %.pre, %land.lhs.true.if.then61_crit_edge ], [ %12, %lor.lhs.false ]
  %bf.lshr70 = lshr i32 %bf.load69, 9
  %bf.clear71 = and i32 %bf.lshr70, 127
  br label %if.end72

if.end72:                                         ; preds = %if.then61, %lor.lhs.false, %if.end19
  %mode.0 = phi i32 [ %bf.clear71, %if.then61 ], [ %bf.clear28, %lor.lhs.false ], [ %bf.clear28, %if.end19 ]
  %type.0 = phi %union.tree_node* [ %15, %if.then61 ], [ %8, %lor.lhs.false ], [ %8, %if.end19 ]
  %unsigned_flag = getelementptr inbounds %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load74 = load i32* %16, align 8
  %bf.lshr75 = lshr i32 %bf.load74, 13
  %bf.clear76 = and i32 %bf.lshr75, 1
  %tobool = icmp ne i32 %bf.clear76, 0
  %cond = select i1 %tobool, i32 %unsigned_code, i32 %signed_code
  tail call void @emit_queue() #10
  %cmp77 = icmp eq i32 %mode.0, 51
  br i1 %cmp77, label %cond.true79, label %cond.end85

cond.true79:                                      ; preds = %if.end72
  %17 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %call83 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %17) #8
  br label %cond.end85

cond.end85:                                       ; preds = %if.end72, %cond.true79
  %cond86 = phi %struct.rtx_def* [ %call83, %cond.true79 ], [ null, %if.end72 ]
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call, %struct.rtx_def* %call9, i32 %cond, i32 %bf.clear76, i32 %mode.0, %struct.rtx_def* %cond86, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #10
  br label %return

return:                                           ; preds = %if.end, %entry, %cond.end85
  ret void
}
