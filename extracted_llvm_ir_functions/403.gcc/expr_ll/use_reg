define void @use_reg(%struct.rtx_def** nocapture %call_fusage, %struct.rtx_def* %reg) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %reg to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !3
  %cmp1 = icmp ugt i32 %1, 52
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 2261, i8* getelementptr inbounds ([8 x i8]* @__FUNCTION__.use_reg, i64 0, i64 0)) #9
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %reg) #8
  %2 = load %struct.rtx_def** %call_fusage, align 8, !tbaa !0
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %2) #8
  store %struct.rtx_def* %call2, %struct.rtx_def** %call_fusage, align 8, !tbaa !0
  ret void
}
