define %struct.rtx_def* @clear_storage(%struct.rtx_def* %object, %struct.rtx_def* %size) #0 {
entry:
  %data.i = alloca %struct.store_by_pieces, align 8
  %0 = bitcast %struct.rtx_def* %object to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %cond.true, label %cond.false8

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %object, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %1 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !0
  %cmp2 = icmp eq %struct.mem_attrs* %1, null
  br i1 %cmp2, label %cond.end11, label %cond.true3

cond.true3:                                       ; preds = %cond.true
  %align7 = getelementptr inbounds %struct.mem_attrs* %1, i64 0, i32 4
  %2 = load i32* %align7, align 4, !tbaa !3
  br label %cond.end11

cond.false8:                                      ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear10 = and i32 %bf.lshr, 255
  %call = call i32 @get_mode_alignment(i32 %bf.clear10) #8
  %bf.load13.pre = load i32* %0, align 8
  br label %cond.end11

cond.end11:                                       ; preds = %cond.true, %cond.true3, %cond.false8
  %bf.load13 = phi i32 [ %bf.load13.pre, %cond.false8 ], [ %bf.load, %cond.true3 ], [ %bf.load, %cond.true ]
  %cond12 = phi i32 [ %call, %cond.false8 ], [ %2, %cond.true3 ], [ 8, %cond.true ]
  %bf.lshr14 = lshr i32 %bf.load13, 16
  %bf.clear15 = and i32 %bf.lshr14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 51
  br i1 %cmp16, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end11
  %3 = bitcast %struct.rtx_def* %size to i32*
  %bf.load17 = load i32* %3, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 54
  br i1 %cmp19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %land.lhs.true
  %idxprom258 = zext i32 %bf.clear15 to i64
  %arrayidx24 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom258
  %4 = load i8* %arrayidx24, align 1, !tbaa !1
  %conv = zext i8 %4 to i32
  %rtwint = getelementptr inbounds %struct.rtx_def* %size, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !7
  %conv27 = trunc i64 %5 to i32
  %cmp28 = icmp eq i32 %conv, %conv27
  br i1 %cmp28, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true20
  %arrayidx34 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom258
  %6 = load %struct.rtx_def** %arrayidx34, align 8, !tbaa !0
  %call35 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %object, %struct.rtx_def* %6) #10
  br label %return

if.else:                                          ; preds = %cond.end11, %land.lhs.true20, %land.lhs.true
  %call36 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %object, i32 1) #10
  %call37 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %size, i32 0) #10
  %7 = bitcast %struct.rtx_def* %call37 to i32*
  %bf.load38 = load i32* %7, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 54
  br i1 %cmp40, label %land.lhs.true42, label %if.else58

land.lhs.true42:                                  ; preds = %if.else
  %rtwint45 = getelementptr inbounds %struct.rtx_def* %call37, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint45, align 8, !tbaa !7
  %call46 = call fastcc i64 @move_by_pieces_ninsns(i64 %8) #10
  %9 = load i32* @optimize_size, align 4, !tbaa !3
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %cond.false48, label %cond.end49

cond.false48:                                     ; preds = %land.lhs.true42
  %10 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !0
  %move_ratio = getelementptr inbounds %struct.processor_costs* %10, i64 0, i32 10
  %11 = load i32* %move_ratio, align 4, !tbaa !3
  %phitmp = zext i32 %11 to i64
  br label %cond.end49

cond.end49:                                       ; preds = %land.lhs.true42, %cond.false48
  %cond50 = phi i64 [ %phitmp, %cond.false48 ], [ 3, %land.lhs.true42 ]
  %cmp52 = icmp ult i64 %call46, %cond50
  br i1 %cmp52, label %if.then54, label %if.else58

if.then54:                                        ; preds = %cond.end49
  %12 = load i64* %rtwint45, align 8, !tbaa !7
  %13 = bitcast %struct.store_by_pieces* %data.i to i8*
  call void @llvm.lifetime.start(i64 64, i8* %13) #5
  %constfun.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 6
  store %struct.rtx_def* (i8*, i64, i32)* @clear_by_pieces_1, %struct.rtx_def* (i8*, i64, i32)** %constfun.i, align 8, !tbaa !0
  %constfundata.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 7
  store i8* null, i8** %constfundata.i, align 8, !tbaa !0
  %len1.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 4
  store i64 %12, i64* %len1.i, align 8, !tbaa !7
  %to2.i = getelementptr inbounds %struct.store_by_pieces* %data.i, i64 0, i32 0
  store %struct.rtx_def* %call36, %struct.rtx_def** %to2.i, align 8, !tbaa !0
  call fastcc void @store_by_pieces_1(%struct.store_by_pieces* %data.i) #8
  call void @llvm.lifetime.end(i64 64, i8* %13) #5
  br label %return

if.else58:                                        ; preds = %cond.end49, %if.else
  %div = lshr i32 %cond12, 3
  %conv59 = zext i32 %div to i64
  %call60 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv59) #8
  %14 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !6
  %cmp61259 = icmp eq i32 %14, 0
  br i1 %cmp61259, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else58
  %rtwint75 = getelementptr inbounds %struct.rtx_def* %call37, i64 0, i32 1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %mode.0260 = phi i32 [ %14, %for.body.lr.ph ], [ %conv133, %for.inc ]
  %idxprom63 = sext i32 %mode.0260 to i64
  %arrayidx64 = getelementptr inbounds [59 x i32]* @clrstr_optab, i64 0, i64 %idxprom63
  %15 = load i32* %arrayidx64, align 4, !tbaa !8
  %cmp65 = icmp eq i32 %15, 1317
  br i1 %cmp65, label %for.inc, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %for.body
  %bf.load68 = load i32* %7, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  %cmp70 = icmp eq i32 %bf.clear69, 54
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false

land.lhs.true72:                                  ; preds = %land.lhs.true67
  %16 = load i64* %rtwint75, align 8, !tbaa !7
  %arrayidx77 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom63
  %17 = load i64* %arrayidx77, align 8, !tbaa !7
  %shr = lshr i64 %17, 1
  %cmp78 = icmp ugt i64 %16, %shr
  br i1 %cmp78, label %lor.lhs.false, label %land.lhs.true87

lor.lhs.false:                                    ; preds = %land.lhs.true72, %land.lhs.true67
  %arrayidx81 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom63
  %18 = load i16* %arrayidx81, align 2, !tbaa !5
  %conv82 = zext i16 %18 to i32
  %19 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %19, 20
  %20 = and i32 %and, 32
  %21 = add i32 %20, 32
  %cmp85 = icmp ult i32 %conv82, %21
  br i1 %cmp85, label %for.inc, label %land.lhs.true87

land.lhs.true87:                                  ; preds = %land.lhs.true72, %lor.lhs.false
  %idxprom88 = sext i32 %15 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom88, i32 3
  %22 = load %struct.insn_operand_data** %operand, align 8, !tbaa !0
  %predicate = getelementptr inbounds %struct.insn_operand_data* %22, i64 0, i32 0
  %23 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !0
  %cmp91 = icmp eq i32 (%struct.rtx_def*, i32)* %23, null
  br i1 %cmp91, label %land.lhs.true96, label %lor.lhs.false93

lor.lhs.false93:                                  ; preds = %land.lhs.true87
  %call94 = call i32 %23(%struct.rtx_def* %call36, i32 51) #8
  %tobool95 = icmp eq i32 %call94, 0
  br i1 %tobool95, label %for.inc, label %land.lhs.true96

land.lhs.true96:                                  ; preds = %lor.lhs.false93, %land.lhs.true87
  %predicate101 = getelementptr inbounds %struct.insn_operand_data* %22, i64 2, i32 0
  %24 = load i32 (%struct.rtx_def*, i32)** %predicate101, align 8, !tbaa !0
  %cmp102 = icmp eq i32 (%struct.rtx_def*, i32)* %24, null
  br i1 %cmp102, label %if.then107, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %land.lhs.true96
  %call105 = call i32 %24(%struct.rtx_def* %call60, i32 0) #8
  %tobool106 = icmp eq i32 %call105, 0
  br i1 %tobool106, label %for.inc, label %if.then107

if.then107:                                       ; preds = %lor.lhs.false104, %land.lhs.true96
  %call108 = call %struct.rtx_def* @get_last_insn() #8
  %call.i = call %struct.rtx_def* @convert_modes(i32 %mode.0260, i32 0, %struct.rtx_def* %call37, i32 1) #8
  %predicate114 = getelementptr inbounds %struct.insn_operand_data* %22, i64 1, i32 0
  %25 = load i32 (%struct.rtx_def*, i32)** %predicate114, align 8, !tbaa !0
  %cmp115 = icmp eq i32 (%struct.rtx_def*, i32)* %25, null
  br i1 %cmp115, label %if.end, label %land.lhs.true117

land.lhs.true117:                                 ; preds = %if.then107
  %call118 = call i32 %25(%struct.rtx_def* %call.i, i32 %mode.0260) #8
  %tobool119 = icmp eq i32 %call118, 0
  br i1 %tobool119, label %if.then120, label %if.end

if.then120:                                       ; preds = %land.lhs.true117
  %call121 = call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.0260, %struct.rtx_def* %call.i) #8
  br label %if.end

if.end:                                           ; preds = %land.lhs.true117, %if.then107, %if.then120
  %op1.0 = phi %struct.rtx_def* [ %call.i, %land.lhs.true117 ], [ %call121, %if.then120 ], [ %call.i, %if.then107 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom88, i32 2
  %26 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !0
  %call124 = call %struct.rtx_def* (%struct.rtx_def*, ...)* %26(%struct.rtx_def* %call36, %struct.rtx_def* %op1.0, %struct.rtx_def* %call60) #8
  %tobool125 = icmp eq %struct.rtx_def* %call124, null
  br i1 %tobool125, label %if.else128, label %if.then126

if.then126:                                       ; preds = %if.end
  %call127 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call124) #8
  br label %return

if.else128:                                       ; preds = %if.end
  call void @delete_insns_since(%struct.rtx_def* %call108) #8
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false104, %lor.lhs.false93, %lor.lhs.false, %for.body, %if.else128
  %arrayidx132 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom63
  %27 = load i8* %arrayidx132, align 1, !tbaa !1
  %conv133 = zext i8 %27 to i32
  %cmp61 = icmp eq i8 %27, 0
  br i1 %cmp61, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.else58
  %28 = load i32* @target_flags, align 4, !tbaa !3
  %and134 = lshr i32 %28, 25
  %29 = and i32 %and134, 1
  %30 = or i32 %29, 4
  %arrayidx138 = getelementptr inbounds %struct.rtx_def* %call36, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %call139 = call %struct.rtx_def* @copy_to_mode_reg(i32 %30, %struct.rtx_def* %31) #8
  %32 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %type = bitcast %union.tree_node* %32 to %struct.tree_type*
  %mode140 = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %33 = bitcast [4 x i8]* %mode140 to i32*
  %bf.load141 = load i32* %33, align 4
  %bf.lshr142 = lshr i32 %bf.load141, 9
  %bf.clear143 = and i32 %bf.lshr142, 127
  %call144 = call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear143, %struct.rtx_def* %call37) #8
  %34 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %cmp145 = icmp eq %union.tree_node* %34, null
  br i1 %cmp145, label %if.then147, label %if.end165

if.then147:                                       ; preds = %for.end
  %call148 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0)) #8
  store %union.tree_node* %call148, %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %35 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !0
  %call149 = call %union.tree_node* @build_pointer_type(%union.tree_node* %35) #8
  %call150 = call %union.tree_node* @build_function_type(%union.tree_node* %call149, %union.tree_node* null) #8
  %36 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %call151 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %36, %union.tree_node* %call150) #8
  store %union.tree_node* %call151, %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  call void @ggc_add_tree_root(%union.tree_node** @clear_storage.fn, i32 1) #8
  %37 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %external_flag = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 5
  %38 = bitcast [8 x i8]* %external_flag to i64*
  %bf.load152 = load i64* %38, align 8
  %bf.set = or i64 %bf.load152, 256
  store i64 %bf.set, i64* %38, align 8
  %39 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %public_flag = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 0, i32 2
  %40 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load154 = load i32* %40, align 8
  %bf.set156 = or i32 %bf.load154, 524288
  store i32 %bf.set156, i32* %40, align 8
  %41 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %artificial_flag = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 5
  %42 = bitcast [8 x i8]* %artificial_flag to i64*
  %bf.load158 = load i64* %42, align 8
  %bf.set160 = or i64 %bf.load158, 4194304
  store i64 %bf.set160, i64* %42, align 8
  %43 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %nothrow_flag = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 2
  %44 = bitcast [4 x i8]* %nothrow_flag to i32*
  %bf.load162 = load i32* %44, align 8
  %bf.set164 = or i32 %bf.load162, 131072
  store i32 %bf.set164, i32* %44, align 8
  %45 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  call void @make_decl_rtl(%union.tree_node* %45, i8* null) #8
  %46 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  call void @assemble_external(%union.tree_node* %46) #8
  br label %if.end165

if.end165:                                        ; preds = %if.then147, %for.end
  %47 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !0
  %call166 = call %union.tree_node* @build_pointer_type(%union.tree_node* %47) #8
  %call167 = call %union.tree_node* @make_tree(%union.tree_node* %call166, %struct.rtx_def* %call139) #8
  %call168 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call167) #8
  %48 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %49 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call169 = call %union.tree_node* @make_tree(%union.tree_node* %48, %struct.rtx_def* %49) #8
  %call170 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call169) #8
  %chain = getelementptr inbounds %union.tree_node* %call168, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call170, %union.tree_node** %chain, align 8, !tbaa !0
  %50 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %call172 = call %union.tree_node* @make_tree(%union.tree_node* %50, %struct.rtx_def* %call144) #8
  %call173 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call172) #8
  %51 = load %union.tree_node** %chain, align 8, !tbaa !0
  %chain177 = getelementptr inbounds %union.tree_node* %51, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call173, %union.tree_node** %chain177, align 8, !tbaa !0
  %52 = load %union.tree_node** %chain, align 8, !tbaa !0
  %chain181 = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 0, i32 0
  %53 = load %union.tree_node** %chain181, align 8, !tbaa !0
  %chain183 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain183, align 8, !tbaa !0
  %54 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %type185 = getelementptr inbounds %union.tree_node* %54, i64 0, i32 0, i32 0, i32 1
  %55 = load %union.tree_node** %type185, align 8, !tbaa !0
  %call186 = call %union.tree_node* @build_pointer_type(%union.tree_node* %55) #8
  %56 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %call187 = call %union.tree_node* @build1(i32 121, %union.tree_node* %call186, %union.tree_node* %56) #8
  %57 = load %union.tree_node** @clear_storage.fn, align 8, !tbaa !0
  %type189 = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 0, i32 1
  %58 = load %union.tree_node** %type189, align 8, !tbaa !0
  %type191 = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 0, i32 1
  %59 = load %union.tree_node** %type191, align 8, !tbaa !0
  %call192 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 53, %union.tree_node* %59, %union.tree_node* %call187, %union.tree_node* %call168, %union.tree_node* null) #8
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call192, i64 0, i32 0, i32 0, i32 2
  %60 = bitcast [4 x i8]* %side_effects_flag to i32*
  %bf.load194 = load i32* %60, align 8
  %bf.set196 = or i32 %bf.load194, 256
  store i32 %bf.set196, i32* %60, align 8
  %call197 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call192, %struct.rtx_def* null, i32 0, i32 0) #10
  %61 = bitcast %struct.rtx_def* %call139 to i32*
  %bf.load198 = load i32* %61, align 8
  %bf.clear200 = and i32 %bf.load198, 67108864
  %tobool201 = icmp eq i32 %bf.clear200, 0
  br i1 %tobool201, label %return, label %if.then202

if.then202:                                       ; preds = %if.end165
  %call203 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call139) #8
  %call204 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call203) #8
  br label %return

return:                                           ; preds = %if.then, %if.then202, %if.then54, %if.end165, %if.then126
  %retval.0 = phi %struct.rtx_def* [ null, %if.then126 ], [ null, %if.then ], [ null, %if.then54 ], [ %call197, %if.then202 ], [ %call197, %if.end165 ]
  ret %struct.rtx_def* %retval.0
}
