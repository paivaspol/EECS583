define void @do_jump_by_parts_greater_rtx(i32 %mode, i32 %unsignedp, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %0 to i32
  %1 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %1, 23
  %2 = and i32 %and, 4
  %3 = add i32 %2, 4
  %div = sdiv i32 %conv, %3
  %tobool1 = icmp ne %struct.rtx_def* %if_true_label, null
  %tobool1.not = xor i1 %tobool1, true
  %tobool2 = icmp eq %struct.rtx_def* %if_false_label, null
  %or.cond = or i1 %tobool2, %tobool1.not
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_label_rtx() #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %drop_through_label.0 = phi %struct.rtx_def* [ %call, %if.then ], [ null, %entry ]
  %if_true_label.drop_through_label.0 = select i1 %tobool1, %struct.rtx_def* %if_true_label, %struct.rtx_def* %drop_through_label.0
  %if_false_label.addr.0 = select i1 %tobool2, %struct.rtx_def* %drop_through_label.0, %struct.rtx_def* %if_false_label
  %cmp45 = icmp sgt i32 %div, 0
  br i1 %cmp45, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %sub = add nsw i32 %div, -1
  %not.tobool15 = icmp ne i32 %unsignedp, 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.046 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %sub10 = sub i32 %sub, %i.046
  %call11 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %sub10, i32 %mode) #8
  %call14 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1, i32 %sub10, i32 %mode) #8
  %cmp16 = icmp sgt i32 %i.046, 0
  %cmp16. = or i1 %cmp16, %not.tobool15
  %lor.ext = zext i1 %cmp16. to i32
  %4 = load i32* @word_mode, align 4, !tbaa !6
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call11, %struct.rtx_def* %call14, i32 105, i32 %lor.ext, i32 %4, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %if_true_label.drop_through_label.0) #10
  %5 = load i32* @word_mode, align 4, !tbaa !6
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call11, %struct.rtx_def* %call14, i32 102, i32 %unsignedp, i32 %5, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %if_false_label.addr.0) #10
  %inc = add nsw i32 %i.046, 1
  %exitcond = icmp eq i32 %inc, %div
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %tobool18 = icmp eq %struct.rtx_def* %if_false_label.addr.0, null
  br i1 %tobool18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %for.end
  tail call void @emit_jump(%struct.rtx_def* %if_false_label.addr.0) #8
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.then19
  %tobool21 = icmp eq %struct.rtx_def* %drop_through_label.0, null
  br i1 %tobool21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.end20
  %call23 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %drop_through_label.0) #8
  br label %if.end24

if.end24:                                         ; preds = %if.end20, %if.then22
  ret void
}
