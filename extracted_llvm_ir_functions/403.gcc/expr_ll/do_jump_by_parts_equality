define internal fastcc void @do_jump_by_parts_equality(%union.tree_node* nocapture %exp, %struct.rtx_def* %if_false_label, %struct.rtx_def* %if_true_label) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %0, %struct.rtx_def* null, i32 0, i32 0) #10
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %1 = bitcast i32* %arrayidx4 to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !0
  %call5 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %2, %struct.rtx_def* null, i32 0, i32 0) #10
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !0
  %type9 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode10 = getelementptr inbounds %struct.tree_type* %type9, i64 0, i32 6
  %5 = bitcast [4 x i8]* %mode10 to i32*
  %bf.load = load i32* %5, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %idxprom41 = zext i32 %bf.clear to i64
  %arrayidx11 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom41
  %6 = load i8* %arrayidx11, align 1, !tbaa !1
  %conv = zext i8 %6 to i32
  %7 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %7, 23
  %8 = and i32 %and, 4
  %9 = add i32 %8, 4
  %div = sdiv i32 %conv, %9
  %tobool12 = icmp eq %struct.rtx_def* %if_false_label, null
  br i1 %tobool12, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call13 = tail call %struct.rtx_def* @gen_label_rtx() #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %if_false_label.addr.0 = phi %struct.rtx_def* [ %if_false_label, %entry ], [ %call13, %if.then ]
  %drop_through_label.0 = phi %struct.rtx_def* [ null, %entry ], [ %call13, %if.then ]
  %cmp42 = icmp sgt i32 %div, 0
  br i1 %cmp42, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %type18 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.043 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %call15 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call, i32 %i.043, i32 %bf.clear) #8
  %call16 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call5, i32 %i.043, i32 %bf.clear) #8
  %10 = load %union.tree_node** %type18, align 8, !tbaa !0
  %unsigned_flag = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load20 = load i32* %11, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 13
  %bf.clear22 = and i32 %bf.lshr21, 1
  %12 = load i32* @word_mode, align 4, !tbaa !6
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %call15, %struct.rtx_def* %call16, i32 103, i32 %bf.clear22, i32 %12, %struct.rtx_def* null, %struct.rtx_def* %if_false_label.addr.0, %struct.rtx_def* null) #10
  %inc = add nsw i32 %i.043, 1
  %exitcond = icmp eq i32 %inc, %div
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %tobool23 = icmp eq %struct.rtx_def* %if_true_label, null
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %for.end
  tail call void @emit_jump(%struct.rtx_def* %if_true_label) #8
  br label %if.end25

if.end25:                                         ; preds = %for.end, %if.then24
  %tobool26 = icmp eq %struct.rtx_def* %drop_through_label.0, null
  br i1 %tobool26, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.end25
  %call28 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %drop_through_label.0) #8
  br label %if.end29

if.end29:                                         ; preds = %if.end25, %if.then27
  ret void
}
