define %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load651666 = load i32* %0, align 8
  %bf.lshr652667 = lshr i32 %bf.load651666, 16
  %bf.clear653668 = and i32 %bf.lshr652667, 255
  %cmp656671 = icmp ugt i32 %bf.clear653668, 58
  br i1 %cmp656671, label %if.then, label %if.end.lr.ph

if.end.lr.ph:                                     ; preds = %entry, %if.then186
  %idxprom590654669.pn.in = phi i32 [ %bf.clear653, %if.then186 ], [ %bf.clear653668, %entry ]
  %bf.clear653674 = phi i32 [ %bf.clear653, %if.then186 ], [ %bf.clear653668, %entry ]
  %1 = phi i32* [ %46, %if.then186 ], [ %0, %entry ]
  %y.tr.ph673 = phi %struct.rtx_def* [ %call183, %if.then186 ], [ %y, %entry ]
  %x.tr.ph672 = phi %struct.rtx_def* [ %call187, %if.then186 ], [ %x, %entry ]
  %arrayidx151 = getelementptr inbounds %struct.rtx_def* %x.tr.ph672, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx151 to i32*
  br label %if.end

if.then:                                          ; preds = %entry, %if.then186, %if.else190
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 2819, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_move_insn_1, i64 0, i64 0)) #9
  unreachable

if.end:                                           ; preds = %if.end.lr.ph, %if.else190
  %idxprom590654669.pn.pn.in = phi i32 [ %idxprom590654669.pn.in, %if.end.lr.ph ], [ %bf.clear, %if.else190 ]
  %bf.clear658 = phi i32 [ %bf.clear653674, %if.end.lr.ph ], [ %bf.clear, %if.else190 ]
  %y.tr657 = phi %struct.rtx_def* [ %y.tr.ph673, %if.end.lr.ph ], [ %call184, %if.else190 ]
  %idxprom590654669.pn.pn = zext i32 %idxprom590654669.pn.pn.in to i64
  %.in676 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom590654669.pn.pn
  %2 = load i32* %.in676, align 4
  %3 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !0
  %insn_code = getelementptr inbounds %struct.optab* %3, i64 0, i32 1, i64 %idxprom590654669.pn.pn, i32 0
  %4 = load i32* %insn_code, align 4, !tbaa !8
  %cmp3 = icmp eq i32 %4, 1317
  br i1 %cmp3, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  %idxprom9 = sext i32 %4 to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom9, i32 2
  %5 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %5(%struct.rtx_def* %x.tr.ph672, %struct.rtx_def* %y.tr657) #8
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #8
  br label %return

if.else:                                          ; preds = %if.end
  %cmp12 = icmp eq i32 %2, 6
  %.off = add i32 %2, -5
  %6 = icmp ult i32 %.off, 2
  br i1 %6, label %land.lhs.true, label %if.else243

land.lhs.true:                                    ; preds = %if.else
  %cmp13 = icmp eq i32 %2, 5
  %arrayidx15 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom590654669.pn.pn
  %7 = load i8* %arrayidx15, align 1, !tbaa !1
  %conv = zext i8 %7 to i32
  %mul = shl nuw nsw i32 %conv, 3
  %cond = select i1 %cmp13, i32 1, i32 2
  %call18 = tail call i32 @mode_for_size(i32 %mul, i32 %cond, i32 0) #8
  %cmp19 = icmp eq i32 %call18, 51
  br i1 %cmp19, label %if.else243, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %land.lhs.true
  %idxprom22 = sext i32 %call18 to i64
  %8 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !0
  %insn_code25 = getelementptr inbounds %struct.optab* %8, i64 0, i32 1, i64 %idxprom22, i32 0
  %9 = load i32* %insn_code25, align 4, !tbaa !8
  %cmp26 = icmp eq i32 %9, 1317
  br i1 %cmp26, label %if.else243, label %if.then28

if.then28:                                        ; preds = %land.lhs.true21
  %bf.load29 = load i32* %1, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %call32 = tail call i32 @push_operand(%struct.rtx_def* %x.tr.ph672, i32 %bf.clear31) #8
  %tobool = icmp eq i32 %call32, 0
  %.pre727 = load i32* @target_flags, align 4, !tbaa !3
  br i1 %tobool, label %if.else132, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %if.then28
  %and = and i32 %.pre727, 33554432
  %tobool34 = icmp eq i32 %and, 0
  %arrayidx36 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom22
  %10 = load i8* %arrayidx36, align 1, !tbaa !1
  %conv37 = zext i8 %10 to i32
  br i1 %tobool34, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true33
  %add = add nsw i32 %conv37, 7
  %and38 = and i32 %add, 504
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true33
  %add42 = add nsw i32 %conv37, 1
  %and43 = and i32 %add42, 510
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond44 = phi i32 [ %and38, %cond.true ], [ %and43, %cond.false ]
  %cmp48 = icmp eq i32 %cond44, %conv37
  br i1 %cmp48, label %if.then105, label %if.then50

if.then50:                                        ; preds = %cond.end
  %11 = lshr exact i32 %and, 25
  %12 = or i32 %11, 4
  %13 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !0
  %14 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %bf.load57 = load i32* %1, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %idxprom60595 = zext i32 %bf.clear59 to i64
  %arrayidx61 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom60595
  %15 = load i8* %arrayidx61, align 1, !tbaa !1
  %conv62 = zext i8 %15 to i32
  br i1 %tobool34, label %cond.false65, label %cond.true56

cond.true56:                                      ; preds = %if.then50
  %add63 = add nsw i32 %conv62, 7
  %and64 = and i32 %add63, 504
  br label %cond.end74

cond.false65:                                     ; preds = %if.then50
  %add72 = add nsw i32 %conv62, 1
  %and73 = and i32 %add72, 510
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false65, %cond.true56
  %cond75 = phi i32 [ %and64, %cond.true56 ], [ %and73, %cond.false65 ]
  %conv76597 = zext i32 %cond75 to i64
  %call77 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv76597) #8
  %16 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %call78 = tail call %struct.rtx_def* @expand_binop(i32 %12, %struct.optab* %13, %struct.rtx_def* %14, %struct.rtx_def* %call77, %struct.rtx_def* %16, i32 0, i32 3) #8
  %17 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %cmp79 = icmp eq %struct.rtx_def* %call78, %17
  br i1 %cmp79, label %if.end83, label %if.then81

if.then81:                                        ; preds = %cond.end74
  %call82 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %17, %struct.rtx_def* %call78) #10
  %.pre = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  br label %if.end83

if.end83:                                         ; preds = %cond.end74, %if.then81
  %18 = phi %struct.rtx_def* [ %call78, %cond.end74 ], [ %.pre, %if.then81 ]
  %conv86 = zext i8 %10 to i64
  %19 = load i32* @target_flags, align 4, !tbaa !3
  %and87 = lshr i32 %19, 25
  %20 = and i32 %and87, 1
  %21 = or i32 %20, 4
  %call90 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 0) #8
  %call91 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %21, %struct.rtx_def* %18, %struct.rtx_def* %call90) #8
  %call92 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %x.tr.ph672, i32 %call18, %struct.rtx_def* %call91) #8
  %call93 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %y.tr657) #8
  %call94 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call92, %struct.rtx_def* %call93) #10
  %22 = load i32* @target_flags, align 4, !tbaa !3
  %and95 = lshr i32 %22, 25
  %23 = and i32 %and95, 1
  %24 = or i32 %23, 4
  %25 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %call98 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv86) #8
  %call99 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %24, %struct.rtx_def* %25, %struct.rtx_def* %call98) #8
  %call100 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %x.tr.ph672, i32 %call18, %struct.rtx_def* %call99) #8
  %call101 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %y.tr657) #8
  %call102 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call100, %struct.rtx_def* %call101) #10
  br label %if.end241

if.then105:                                       ; preds = %cond.end
  %26 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !0
  %insn_code109 = getelementptr inbounds %struct.optab* %26, i64 0, i32 1, i64 %idxprom22, i32 0
  %27 = load i32* %insn_code109, align 4, !tbaa !8
  %idxprom110 = sext i32 %27 to i64
  %genfun112 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom110, i32 2
  %28 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun112, align 8, !tbaa !0
  %rtx = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %call114 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %call18, %struct.rtx_def* %29) #8
  %call115 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %y.tr657) #8
  %call116 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %28(%struct.rtx_def* %call114, %struct.rtx_def* %call115) #8
  %call117 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call116) #8
  %30 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !0
  %insn_code121 = getelementptr inbounds %struct.optab* %30, i64 0, i32 1, i64 %idxprom22, i32 0
  %31 = load i32* %insn_code121, align 4, !tbaa !8
  %idxprom122 = sext i32 %31 to i64
  %genfun124 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom122, i32 2
  %32 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun124, align 8, !tbaa !0
  %33 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %call128 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %call18, %struct.rtx_def* %33) #8
  %call129 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %y.tr657) #8
  %call130 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %32(%struct.rtx_def* %call128, %struct.rtx_def* %call129) #8
  %call131 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call130) #8
  br label %if.end241

if.else132:                                       ; preds = %if.then28
  %arrayidx134 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom590654669.pn.pn
  %34 = load i16* %arrayidx134, align 2, !tbaa !5
  %conv135 = zext i16 %34 to i32
  %35 = lshr i32 %.pre727, 19
  %36 = and i32 %35, 64
  %mul139 = add i32 %36, 64
  %cmp140 = icmp ult i32 %conv135, %mul139
  br i1 %cmp140, label %land.lhs.true142, label %if.end197

land.lhs.true142:                                 ; preds = %if.else132
  %37 = load i32* @reload_in_progress, align 4, !tbaa !3
  %38 = load i32* @reload_completed, align 4, !tbaa !3
  %or = or i32 %38, %37
  %cmp143 = icmp eq i32 %or, 0
  br i1 %cmp143, label %if.then145, label %if.end197

if.then145:                                       ; preds = %land.lhs.true142
  %bf.load146 = load i32* %1, align 8
  %bf.clear147 = and i32 %bf.load146, 65535
  %cmp148 = icmp eq i32 %bf.clear147, 61
  br i1 %cmp148, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then145
  %39 = load i32* %rtuint, align 4, !tbaa !3
  %cmp152 = icmp ult i32 %39, 53
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then145
  %40 = phi i1 [ false, %if.then145 ], [ %cmp152, %land.rhs ]
  %41 = bitcast %struct.rtx_def* %y.tr657 to i32*
  %bf.load154 = load i32* %41, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 61
  br i1 %cmp156, label %land.rhs158, label %land.end164

land.rhs158:                                      ; preds = %land.end
  %arrayidx160 = getelementptr inbounds %struct.rtx_def* %y.tr657, i64 0, i32 1, i64 0
  %rtuint161 = bitcast %union.rtunion_def* %arrayidx160 to i32*
  %42 = load i32* %rtuint161, align 4, !tbaa !3
  %cmp162 = icmp ult i32 %42, 53
  br label %land.end164

land.end164:                                      ; preds = %land.rhs158, %land.end
  %43 = phi i1 [ false, %land.end ], [ %cmp162, %land.rhs158 ]
  %brmerge = or i1 %40, %43
  br i1 %brmerge, label %if.then169, label %if.end197

if.then169:                                       ; preds = %land.end164
  %cond172 = select i1 %cmp12, i32 2, i32 1
  %call176 = tail call i32 @mode_for_size(i32 %conv135, i32 %cond172, i32 1) #8
  %cmp177 = icmp eq i32 %call176, 51
  br i1 %cmp177, label %if.end197, label %if.then179

if.then179:                                       ; preds = %if.then169
  %arrayidx181 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom590654669.pn.pn
  %44 = load i8* %arrayidx181, align 1, !tbaa !1
  %conv182 = zext i8 %44 to i64
  %call183 = tail call %struct.rtx_def* @assign_stack_temp(i32 %call176, i64 %conv182, i32 0) #8
  %call184 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call183, i32 %bf.clear658, i64 0, i32 1, i32 1) #8
  %45 = load %struct.function** @cfun, align 8, !tbaa !0
  %cannot_inline = getelementptr inbounds %struct.function* %45, i64 0, i32 16
  store i8* getelementptr inbounds ([52 x i8]* @.str3, i64 0, i64 0), i8** %cannot_inline, align 8, !tbaa !0
  br i1 %40, label %if.then186, label %if.else190

if.then186:                                       ; preds = %if.then179
  %call187 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call176, %struct.rtx_def* %x.tr.ph672, i32 0) #8
  %call188 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %call184, %struct.rtx_def* %y.tr657) #10
  %46 = bitcast %struct.rtx_def* %call187 to i32*
  %bf.load651 = load i32* %46, align 8
  %bf.lshr652 = lshr i32 %bf.load651, 16
  %bf.clear653 = and i32 %bf.lshr652, 255
  %cmp656 = icmp ugt i32 %bf.clear653, 58
  br i1 %cmp656, label %if.then, label %if.end.lr.ph

if.else190:                                       ; preds = %if.then179
  %call192 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call176, %struct.rtx_def* %y.tr657, i32 0) #8
  %call193 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %call183, %struct.rtx_def* %call192) #10
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp ugt i32 %bf.clear, 58
  br i1 %cmp, label %if.then, label %if.end

if.end197:                                        ; preds = %land.end164, %if.then169, %land.lhs.true142, %if.else132
  %call198 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %x.tr.ph672) #8
  %call199 = tail call %struct.rtx_def* @gen_realpart(i32 %call18, %struct.rtx_def* %y.tr657) #8
  %call200 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %x.tr.ph672) #8
  %call201 = tail call %struct.rtx_def* @gen_imagpart(i32 %call18, %struct.rtx_def* %y.tr657) #8
  %cmp202 = icmp eq %struct.rtx_def* %x.tr.ph672, %y.tr657
  %47 = load i32* @reload_in_progress, align 4, !tbaa !3
  %tobool205 = icmp ne i32 %47, 0
  %or.cond466 = or i1 %cmp202, %tobool205
  %48 = load i32* @reload_completed, align 4, !tbaa !3
  %tobool207 = icmp ne i32 %48, 0
  %or.cond467 = or i1 %or.cond466, %tobool207
  br i1 %or.cond467, label %if.end221, label %land.lhs.true208

land.lhs.true208:                                 ; preds = %if.end197
  %49 = bitcast %struct.rtx_def* %call198 to i32*
  %bf.load209 = load i32* %49, align 8
  %bf.clear210 = and i32 %bf.load209, 65535
  %cmp211 = icmp eq i32 %bf.clear210, 63
  br i1 %cmp211, label %if.then218, label %lor.lhs.false213

lor.lhs.false213:                                 ; preds = %land.lhs.true208
  %50 = bitcast %struct.rtx_def* %call200 to i32*
  %bf.load214 = load i32* %50, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 63
  br i1 %cmp216, label %if.then218, label %if.end221

if.then218:                                       ; preds = %lor.lhs.false213, %land.lhs.true208
  %call219 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %x.tr.ph672) #8
  %call220 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call219) #8
  br label %if.end221

if.end221:                                        ; preds = %if.end197, %if.then218, %lor.lhs.false213
  %51 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !0
  %insn_code225 = getelementptr inbounds %struct.optab* %51, i64 0, i32 1, i64 %idxprom22, i32 0
  %52 = load i32* %insn_code225, align 4, !tbaa !8
  %idxprom226 = sext i32 %52 to i64
  %genfun228 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom226, i32 2
  %53 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun228, align 8, !tbaa !0
  %call229 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %53(%struct.rtx_def* %call198, %struct.rtx_def* %call199) #8
  %call230 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call229) #8
  %54 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 8, !tbaa !0
  %insn_code234 = getelementptr inbounds %struct.optab* %54, i64 0, i32 1, i64 %idxprom22, i32 0
  %55 = load i32* %insn_code234, align 4, !tbaa !8
  %idxprom235 = sext i32 %55 to i64
  %genfun237 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom235, i32 2
  %56 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun237, align 8, !tbaa !0
  %call238 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %56(%struct.rtx_def* %call200, %struct.rtx_def* %call201) #8
  %call239 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call238) #8
  br label %if.end241

if.end241:                                        ; preds = %if.then105, %if.end221, %if.end83
  %call242 = tail call %struct.rtx_def* @get_last_insn() #8
  br label %return

if.else243:                                       ; preds = %land.lhs.true21, %land.lhs.true, %if.else
  %arrayidx245 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom590654669.pn.pn
  %57 = load i8* %arrayidx245, align 1, !tbaa !1
  %conv246 = zext i8 %57 to i32
  %58 = load i32* @target_flags, align 4, !tbaa !3
  %and247 = lshr i32 %58, 23
  %59 = and i32 %and247, 4
  %60 = add i32 %59, 4
  %cmp250 = icmp ugt i32 %conv246, %60
  br i1 %cmp250, label %if.then252, label %if.else465

if.then252:                                       ; preds = %if.else243
  %bf.load253 = load i32* %1, align 8
  %bf.lshr254 = lshr i32 %bf.load253, 16
  %bf.clear255 = and i32 %bf.lshr254, 255
  %call256 = tail call i32 @push_operand(%struct.rtx_def* %x.tr.ph672, i32 %bf.clear255) #8
  %tobool257 = icmp eq i32 %call256, 0
  br i1 %tobool257, label %if.end331, label %if.then258

if.then258:                                       ; preds = %if.then252
  %61 = load i32* @target_flags, align 4, !tbaa !3
  %and260 = and i32 %61, 33554432
  %tobool261 = icmp eq i32 %and260, 0
  %62 = lshr exact i32 %and260, 25
  %63 = or i32 %62, 4
  %64 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !0
  %65 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %bf.load266 = load i32* %1, align 8
  %bf.lshr267 = lshr i32 %bf.load266, 16
  %bf.clear268 = and i32 %bf.lshr267, 255
  %idxprom269592 = zext i32 %bf.clear268 to i64
  %arrayidx270 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom269592
  %66 = load i8* %arrayidx270, align 1, !tbaa !1
  %conv271 = zext i8 %66 to i32
  br i1 %tobool261, label %cond.false274, label %cond.true265

cond.true265:                                     ; preds = %if.then258
  %add272 = add nsw i32 %conv271, 7
  %and273 = and i32 %add272, 504
  br label %cond.end283

cond.false274:                                    ; preds = %if.then258
  %add281 = add nsw i32 %conv271, 1
  %and282 = and i32 %add281, 510
  br label %cond.end283

cond.end283:                                      ; preds = %cond.false274, %cond.true265
  %cond284 = phi i32 [ %and273, %cond.true265 ], [ %and282, %cond.false274 ]
  %conv285596 = zext i32 %cond284 to i64
  %call286 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv285596) #8
  %67 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %call287 = tail call %struct.rtx_def* @expand_binop(i32 %63, %struct.optab* %64, %struct.rtx_def* %65, %struct.rtx_def* %call286, %struct.rtx_def* %67, i32 0, i32 3) #8
  %68 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %cmp288 = icmp eq %struct.rtx_def* %call287, %68
  br i1 %cmp288, label %if.end292, label %if.then290

if.then290:                                       ; preds = %cond.end283
  %call291 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %68, %struct.rtx_def* %call287) #10
  br label %if.end292

if.end292:                                        ; preds = %cond.end283, %if.then290
  %rtx295 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx295, align 8, !tbaa !0
  %70 = bitcast %struct.rtx_def* %69 to i32*
  %bf.load296 = load i32* %70, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  switch i32 %bf.clear297, label %if.else327 [
    i32 99, label %if.then300
    i32 98, label %if.then315
  ]

if.then300:                                       ; preds = %if.end292
  %71 = load i32* @target_flags, align 4, !tbaa !3
  %and301 = lshr i32 %71, 25
  %72 = and i32 %and301, 1
  %73 = or i32 %72, 4
  %74 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %bf.load304 = load i32* %1, align 8
  %bf.lshr305 = lshr i32 %bf.load304, 16
  %bf.clear306 = and i32 %bf.lshr305, 255
  %idxprom307594 = zext i32 %bf.clear306 to i64
  %arrayidx308 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom307594
  %75 = load i8* %arrayidx308, align 1, !tbaa !1
  %conv309 = zext i8 %75 to i64
  %sub = sub nsw i64 0, %conv309
  %call310 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #8
  %call311 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %73, %struct.rtx_def* %74, %struct.rtx_def* %call310) #8
  br label %if.end329

if.then315:                                       ; preds = %if.end292
  %76 = load i32* @target_flags, align 4, !tbaa !3
  %and316 = lshr i32 %76, 25
  %77 = and i32 %and316, 1
  %78 = or i32 %77, 4
  %79 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %bf.load319 = load i32* %1, align 8
  %bf.lshr320 = lshr i32 %bf.load319, 16
  %bf.clear321 = and i32 %bf.lshr320, 255
  %idxprom322593 = zext i32 %bf.clear321 to i64
  %arrayidx323 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom322593
  %80 = load i8* %arrayidx323, align 1, !tbaa !1
  %conv324 = zext i8 %80 to i64
  %call325 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv324) #8
  %call326 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %78, %struct.rtx_def* %79, %struct.rtx_def* %call325) #8
  br label %if.end329

if.else327:                                       ; preds = %if.end292
  %81 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  br label %if.end329

if.end329:                                        ; preds = %if.then315, %if.else327, %if.then300
  %temp259.0 = phi %struct.rtx_def* [ %call311, %if.then300 ], [ %call326, %if.then315 ], [ %81, %if.else327 ]
  %call330 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %x.tr.ph672, i32 0, %struct.rtx_def* %temp259.0) #8
  br label %if.end331

if.end331:                                        ; preds = %if.then252, %if.end329
  %x.addr.0 = phi %struct.rtx_def* [ %call330, %if.end329 ], [ %x.tr.ph672, %if.then252 ]
  %82 = load i32* @reload_in_progress, align 4, !tbaa !3
  %tobool332 = icmp eq i32 %82, 0
  br i1 %tobool332, label %if.end369, label %land.lhs.true333

land.lhs.true333:                                 ; preds = %if.end331
  %83 = bitcast %struct.rtx_def* %x.addr.0 to i32*
  %bf.load334 = load i32* %83, align 8
  %bf.clear335 = and i32 %bf.load334, 65535
  %cmp336 = icmp eq i32 %bf.clear335, 66
  br i1 %cmp336, label %land.lhs.true338, label %if.end350

land.lhs.true338:                                 ; preds = %land.lhs.true333
  %arrayidx340 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**
  %call342 = tail call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx341) #8
  %84 = load %struct.rtx_def** %rtx341, align 8, !tbaa !0
  %cmp346 = icmp eq %struct.rtx_def* %call342, %84
  br i1 %cmp346, label %if.end350, label %if.then348

if.then348:                                       ; preds = %land.lhs.true338
  %call349 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %call342) #8
  br label %if.end350

if.end350:                                        ; preds = %land.lhs.true338, %if.then348, %land.lhs.true333
  %x.addr.1.ph = phi %struct.rtx_def* [ %call349, %if.then348 ], [ %x.addr.0, %land.lhs.true333 ], [ %x.addr.0, %land.lhs.true338 ]
  %.pr = load i32* @reload_in_progress, align 4, !tbaa !3
  %tobool351 = icmp eq i32 %.pr, 0
  br i1 %tobool351, label %if.end369, label %land.lhs.true352

land.lhs.true352:                                 ; preds = %if.end350
  %85 = bitcast %struct.rtx_def* %y.tr657 to i32*
  %bf.load353 = load i32* %85, align 8
  %bf.clear354 = and i32 %bf.load353, 65535
  %cmp355 = icmp eq i32 %bf.clear354, 66
  br i1 %cmp355, label %land.lhs.true357, label %if.end369

land.lhs.true357:                                 ; preds = %land.lhs.true352
  %arrayidx359 = getelementptr inbounds %struct.rtx_def* %y.tr657, i64 0, i32 1, i64 0
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %call361 = tail call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx360) #8
  %86 = load %struct.rtx_def** %rtx360, align 8, !tbaa !0
  %cmp365 = icmp eq %struct.rtx_def* %call361, %86
  br i1 %cmp365, label %if.end369, label %if.then367

if.then367:                                       ; preds = %land.lhs.true357
  %call368 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %y.tr657, %struct.rtx_def* %call361) #8
  br label %if.end369

if.end369:                                        ; preds = %if.end331, %land.lhs.true357, %if.end350, %if.then367, %land.lhs.true352
  %x.addr.1600 = phi %struct.rtx_def* [ %x.addr.1.ph, %if.then367 ], [ %x.addr.1.ph, %land.lhs.true357 ], [ %x.addr.1.ph, %land.lhs.true352 ], [ %x.addr.1.ph, %if.end350 ], [ %x.addr.0, %if.end331 ]
  %y.addr.0 = phi %struct.rtx_def* [ %call368, %if.then367 ], [ %y.tr657, %land.lhs.true357 ], [ %y.tr657, %land.lhs.true352 ], [ %y.tr657, %if.end350 ], [ %y.tr657, %if.end331 ]
  tail call void @start_sequence() #8
  %87 = load i32* @target_flags, align 4, !tbaa !3
  %and373605 = lshr i32 %87, 23
  %88 = and i32 %and373605, 4
  %89 = add i32 %88, 4
  %sub376591606 = or i32 %88, 3
  %add377607 = add nsw i32 %sub376591606, %conv246
  %div608 = sdiv i32 %add377607, %89
  %cmp381609 = icmp sgt i32 %div608, 0
  br i1 %cmp381609, label %for.body, label %for.end

for.body:                                         ; preds = %if.end369, %if.end443
  %i.0612 = phi i32 [ %inc, %if.end443 ], [ 0, %if.end369 ]
  %need_clobber.0611 = phi i32 [ %or448, %if.end443 ], [ 0, %if.end369 ]
  %y.addr.1610 = phi %struct.rtx_def* [ %y.addr.2, %if.end443 ], [ %y.addr.0, %if.end369 ]
  %call383 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %x.addr.1600, i32 %i.0612, i32 1, i32 %bf.clear658) #8
  %call384 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %y.addr.1610, i32 %i.0612, i32 1, i32 %bf.clear658) #8
  %cmp385 = icmp eq %struct.rtx_def* %call384, null
  br i1 %cmp385, label %land.lhs.true387, label %if.end436

land.lhs.true387:                                 ; preds = %for.body
  %90 = bitcast %struct.rtx_def* %y.addr.1610 to i32*
  %bf.load388 = load i32* %90, align 8
  %bf.clear389 = and i32 %bf.load388, 65535
  switch i32 %bf.clear389, label %if.then433 [
    i32 67, label %if.then427
    i32 68, label %if.then427
    i32 54, label %if.then427
    i32 55, label %if.then427
    i32 58, label %if.then427
    i32 134, label %if.then427
    i32 56, label %if.then427
    i32 140, label %if.then427
  ]

if.then427:                                       ; preds = %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387, %land.lhs.true387
  %call428 = tail call %struct.rtx_def* @force_const_mem(i32 %bf.clear658, %struct.rtx_def* %y.addr.1610) #8
  %call429 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %call428, i32 %i.0612, i32 1, i32 %bf.clear658) #8
  br label %if.end436

if.then433:                                       ; preds = %land.lhs.true387
  %call434 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %y.addr.1610, i32 %i.0612, i32 %bf.clear658) #8
  br label %if.end436

if.end436:                                        ; preds = %for.body, %if.then433, %if.then427
  %y.addr.2 = phi %struct.rtx_def* [ %call428, %if.then427 ], [ %y.addr.1610, %if.then433 ], [ %y.addr.1610, %for.body ]
  %ypart.0 = phi %struct.rtx_def* [ %call429, %if.then427 ], [ %call434, %if.then433 ], [ %call384, %for.body ]
  %cmp437 = icmp eq %struct.rtx_def* %call383, null
  %cmp440 = icmp eq %struct.rtx_def* %ypart.0, null
  %or.cond = or i1 %cmp437, %cmp440
  br i1 %or.cond, label %if.then442, label %if.end443

if.then442:                                       ; preds = %if.end436
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 3077, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_move_insn_1, i64 0, i64 0)) #9
  unreachable

if.end443:                                        ; preds = %if.end436
  %91 = bitcast %struct.rtx_def* %call383 to i32*
  %bf.load444 = load i32* %91, align 8
  %bf.clear445 = and i32 %bf.load444, 65535
  %cmp446 = icmp eq i32 %bf.clear445, 63
  %conv447 = zext i1 %cmp446 to i32
  %or448 = or i32 %conv447, %need_clobber.0611
  %call449 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call383, %struct.rtx_def* %ypart.0) #10
  %inc = add nsw i32 %i.0612, 1
  %92 = load i32* @target_flags, align 4, !tbaa !3
  %and373 = lshr i32 %92, 23
  %93 = and i32 %and373, 4
  %94 = add i32 %93, 4
  %sub376591 = or i32 %93, 3
  %add377 = add nsw i32 %sub376591, %conv246
  %div = sdiv i32 %add377, %94
  %cmp381 = icmp slt i32 %inc, %div
  br i1 %cmp381, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %if.end443
  %phitmp = icmp eq i32 %or448, 0
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end369
  %need_clobber.0.lcssa = phi i1 [ %phitmp, %for.cond.for.end_crit_edge ], [ true, %if.end369 ]
  %y.addr.1.lcssa = phi %struct.rtx_def* [ %y.addr.2, %for.cond.for.end_crit_edge ], [ %y.addr.0, %if.end369 ]
  %last_insn.0.lcssa = phi %struct.rtx_def* [ %call449, %for.cond.for.end_crit_edge ], [ null, %if.end369 ]
  %call450 = tail call %struct.rtx_def* @gen_sequence() #8
  tail call void @end_sequence() #8
  %cmp451 = icmp eq %struct.rtx_def* %x.addr.1600, %y.addr.1.lcssa
  %95 = load i32* @reload_in_progress, align 4, !tbaa !3
  %tobool454 = icmp ne i32 %95, 0
  %or.cond468 = or i1 %cmp451, %tobool454
  %96 = load i32* @reload_completed, align 4, !tbaa !3
  %tobool456 = icmp ne i32 %96, 0
  %or.cond469 = or i1 %or.cond468, %tobool456
  %or.cond598 = or i1 %or.cond469, %need_clobber.0.lcssa
  br i1 %or.cond598, label %if.end463, label %if.then460

if.then460:                                       ; preds = %for.end
  %call461 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %x.addr.1600) #8
  %call462 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call461) #8
  br label %if.end463

if.end463:                                        ; preds = %for.end, %if.then460
  %call464 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call450) #8
  br label %return

if.else465:                                       ; preds = %if.else243
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 3101, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.emit_move_insn_1, i64 0, i64 0)) #9
  unreachable

return:                                           ; preds = %if.end463, %if.end241, %if.then4
  %retval.0 = phi %struct.rtx_def* [ %call11, %if.then4 ], [ %call242, %if.end241 ], [ %last_insn.0.lcssa, %if.end463 ]
  ret %struct.rtx_def* %retval.0
}
