define %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !2180), !dbg !3566
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %y}, i64 0, metadata !2181), !dbg !3566
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !3567
  %bf.load = load i32* %0, align 8, !dbg !3567
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3567
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3567
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !2182), !dbg !3567
  tail call void @llvm.dbg.value(metadata !3322, i64 0, metadata !2183), !dbg !3568
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x, i32 1) #11, !dbg !3569
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !2180), !dbg !3569
  %call1 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %y, i32 0) #11, !dbg !3570
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call1}, i64 0, metadata !2181), !dbg !3570
  %cmp = icmp eq i32 %bf.clear, 51, !dbg !3571
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3571

lor.lhs.false:                                    ; preds = %entry
  %1 = bitcast %struct.rtx_def* %call1 to i32*, !dbg !3571
  %bf.load2 = load i32* %1, align 8, !dbg !3571
  %bf.lshr3 = lshr i32 %bf.load2, 16, !dbg !3571
  %bf.clear4 = and i32 %bf.lshr3, 255, !dbg !3571
  %cmp5 = icmp eq i32 %bf.clear4, %bf.clear, !dbg !3571
  %cmp9 = icmp eq i32 %bf.clear4, 0, !dbg !3571
  %or.cond = or i1 %cmp5, %cmp9, !dbg !3571
  br i1 %or.cond, label %if.end, label %if.then, !dbg !3571

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 2769, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.emit_move_insn, i64 0, i64 0)) #10, !dbg !3572
  unreachable, !dbg !3572

if.end:                                           ; preds = %lor.lhs.false
  %2 = bitcast %struct.rtx_def* %call to i32*, !dbg !3573
  %bf.load50 = load i32* %2, align 8, !dbg !3573
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !3573
  %cmp52 = icmp eq i32 %bf.clear51, 66, !dbg !3573
  br i1 %cmp52, label %land.lhs.true53, label %if.end103, !dbg !3573

land.lhs.true53:                                  ; preds = %if.end
  %bf.lshr55 = lshr i32 %bf.load50, 16, !dbg !3574
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !3574
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, !dbg !3574
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3574
  %3 = load %struct.rtx_def** %rtx, align 8, !dbg !3574, !tbaa !3154
  %call57 = tail call i32 @memory_address_p(i32 %bf.clear56, %struct.rtx_def* %3) #9, !dbg !3574
  %tobool = icmp eq i32 %call57, 0, !dbg !3574
  br i1 %tobool, label %land.lhs.true58, label %lor.lhs.false64, !dbg !3574

land.lhs.true58:                                  ; preds = %land.lhs.true53
  %bf.load59 = load i32* %2, align 8, !dbg !3575
  %bf.lshr60 = lshr i32 %bf.load59, 16, !dbg !3575
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !3575
  %call62 = tail call i32 @push_operand(%struct.rtx_def* %call, i32 %bf.clear61) #9, !dbg !3575
  %tobool63 = icmp eq i32 %call62, 0, !dbg !3575
  br i1 %tobool63, label %if.then101, label %lor.lhs.false64, !dbg !3575

lor.lhs.false64:                                  ; preds = %land.lhs.true58, %land.lhs.true53
  %4 = load i32* @flag_force_addr, align 4, !dbg !3575, !tbaa !3192
  %tobool65 = icmp eq i32 %4, 0, !dbg !3575
  br i1 %tobool65, label %if.end103, label %land.lhs.true66, !dbg !3575

land.lhs.true66:                                  ; preds = %lor.lhs.false64
  %5 = load %struct.rtx_def** %rtx, align 8, !dbg !3575, !tbaa !3154
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !3575
  %bf.load70 = load i32* %6, align 8, !dbg !3575
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !3575
  switch i32 %bf.clear71, label %if.end103 [
    i32 67, label %if.then101
    i32 68, label %if.then101
    i32 54, label %if.then101
    i32 58, label %if.then101
    i32 55, label %if.then101
  ], !dbg !3575

if.then101:                                       ; preds = %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true66, %land.lhs.true58
  %call102 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call) #9, !dbg !3576
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call102}, i64 0, metadata !2180), !dbg !3576
  br label %if.end103, !dbg !3576

if.end103:                                        ; preds = %land.lhs.true66, %lor.lhs.false64, %if.then101, %if.end
  %x.addr.0 = phi %struct.rtx_def* [ %call102, %if.then101 ], [ %call, %if.end ], [ %call, %lor.lhs.false64 ], [ %call, %land.lhs.true66 ]
  %bf.load104 = load i32* %1, align 8, !dbg !3577
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !3577
  %cmp106 = icmp eq i32 %bf.clear105, 66, !dbg !3577
  br i1 %cmp106, label %land.lhs.true107, label %if.end158, !dbg !3577

land.lhs.true107:                                 ; preds = %if.end103
  %bf.lshr109 = lshr i32 %bf.load104, 16, !dbg !3578
  %bf.clear110 = and i32 %bf.lshr109, 255, !dbg !3578
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 1, i64 0, !dbg !3578
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !3578
  %7 = load %struct.rtx_def** %rtx113, align 8, !dbg !3578, !tbaa !3154
  %call114 = tail call i32 @memory_address_p(i32 %bf.clear110, %struct.rtx_def* %7) #9, !dbg !3578
  %tobool115 = icmp eq i32 %call114, 0, !dbg !3578
  br i1 %tobool115, label %if.then153, label %lor.lhs.false116, !dbg !3578

lor.lhs.false116:                                 ; preds = %land.lhs.true107
  %8 = load i32* @flag_force_addr, align 4, !dbg !3578, !tbaa !3192
  %tobool117 = icmp eq i32 %8, 0, !dbg !3578
  br i1 %tobool117, label %if.end158, label %land.lhs.true118, !dbg !3578

land.lhs.true118:                                 ; preds = %lor.lhs.false116
  %9 = load %struct.rtx_def** %rtx113, align 8, !dbg !3578, !tbaa !3154
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !3578
  %bf.load122 = load i32* %10, align 8, !dbg !3578
  %bf.clear123 = and i32 %bf.load122, 65535, !dbg !3578
  switch i32 %bf.clear123, label %if.end158 [
    i32 67, label %if.then153
    i32 68, label %if.then153
    i32 54, label %if.then153
    i32 58, label %if.then153
    i32 55, label %if.then153
  ], !dbg !3578

if.then153:                                       ; preds = %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true118, %land.lhs.true107
  %call154 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call1) #9, !dbg !3579
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call154}, i64 0, metadata !2181), !dbg !3579
  br label %if.end158, !dbg !3579

if.end158:                                        ; preds = %if.end103, %if.then153, %lor.lhs.false116, %land.lhs.true118
  %y.addr.0 = phi %struct.rtx_def* [ %call154, %if.then153 ], [ %call1, %lor.lhs.false116 ], [ %call1, %if.end103 ], [ %call1, %land.lhs.true118 ]
  %call159 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.0) #11, !dbg !3580
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call159}, i64 0, metadata !2184), !dbg !3580
  ret %struct.rtx_def* %call159, !dbg !3581
}
