define internal fastcc %struct.tlist* @new_tlist(%struct.tlist* %next, %union.tree_node* %t, %union.tree_node* %writer) #0 {
entry:
  %0 = load i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 4), align 8, !tbaa !3
  %1 = load i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !tbaa !3
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 24
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* @tlist_obstack, i32 24) #8
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %1, %entry ]
  %add.ptr = getelementptr inbounds i8* %2, i64 24
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !tbaa !3
  %3 = load i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 2), align 8, !tbaa !3
  %cmp4 = icmp eq i8* %add.ptr, %3
  br i1 %cmp4, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 10), align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 10), align 8
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then6
  %sub.ptr.lhs.cast9 = ptrtoint i8* %add.ptr to i64
  %4 = load i32* getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 6), align 8, !tbaa !0
  %conv11 = sext i32 %4 to i64
  %add = add nsw i64 %conv11, %sub.ptr.lhs.cast9
  %neg = xor i32 %4, -1
  %conv13 = sext i32 %neg to i64
  %and = and i64 %add, %conv13
  %add.ptr14 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr14, i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !tbaa !3
  %5 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 1), align 8, !tbaa !3
  %sub.ptr.lhs.cast17 = ptrtoint i8* %add.ptr14 to i64
  %sub.ptr.rhs.cast18 = ptrtoint %struct._obstack_chunk* %5 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %6 = load i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 4), align 8, !tbaa !3
  %sub.ptr.lhs.cast22 = ptrtoint i8* %6 to i64
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast18
  %cmp25 = icmp sgt i64 %sub.ptr.sub19, %sub.ptr.sub24
  br i1 %cmp25, label %if.then27, label %if.end30

if.then27:                                        ; preds = %if.end7
  store i8* %6, i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 3), align 8, !tbaa !3
  br label %if.end30

if.end30:                                         ; preds = %if.then27, %if.end7
  %7 = phi i8* [ %6, %if.then27 ], [ %add.ptr14, %if.end7 ]
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @tlist_obstack, i64 0, i32 2), align 8, !tbaa !3
  %8 = bitcast i8* %3 to %struct.tlist*
  %next33 = bitcast i8* %3 to %struct.tlist**
  store %struct.tlist* %next, %struct.tlist** %next33, align 8, !tbaa !3
  %expr = getelementptr inbounds i8* %3, i64 8
  %9 = bitcast i8* %expr to %union.tree_node**
  store %union.tree_node* %t, %union.tree_node** %9, align 8, !tbaa !3
  %writer34 = getelementptr inbounds i8* %3, i64 16
  %10 = bitcast i8* %writer34 to %union.tree_node**
  store %union.tree_node* %writer, %union.tree_node** %10, align 8, !tbaa !3
  ret %struct.tlist* %8
}
