define %union.tree_node* @c_alignof(%union.tree_node* nocapture %type) #0 {
entry:
  %code1 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code1 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 15
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %type3 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type3, align 8, !tbaa !3
  %code5 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code5 to i32*
  %bf.load6 = load i32* %2, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %type.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %type, %entry ]
  %code.0 = phi i32 [ %bf.clear7, %if.then ], [ %bf.clear, %entry ]
  switch i32 %code.0, label %if.else13 [
    i32 23, label %if.then9
    i32 5, label %if.then12
    i32 0, label %if.then12
  ]

if.then9:                                         ; preds = %if.end
  %call = tail call %union.tree_node* @size_int_wide(i64 2, i32 0) #8
  br label %if.end22

if.then12:                                        ; preds = %if.end, %if.end
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !3
  br label %if.end22

if.else13:                                        ; preds = %if.end
  %size = getelementptr inbounds %union.tree_node* %type.addr.0, i64 0, i32 0, i32 2
  %4 = bitcast i32* %size to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !3
  %cmp15 = icmp eq %union.tree_node* %5, null
  br i1 %cmp15, label %if.then16, label %if.else17

if.then16:                                        ; preds = %if.else13
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str49, i64 0, i64 0)) #8
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !3
  br label %if.end22

if.else17:                                        ; preds = %if.else13
  %align = getelementptr inbounds %union.tree_node* %type.addr.0, i64 0, i32 0, i32 7
  %7 = bitcast %union.tree_node** %align to i32*
  %8 = load i32* %7, align 4, !tbaa !0
  %div = lshr i32 %8, 3
  %conv = zext i32 %div to i64
  %call19 = tail call %union.tree_node* @size_int_wide(i64 %conv, i32 0) #8
  br label %if.end22

if.end22:                                         ; preds = %if.then12, %if.else17, %if.then16, %if.then9
  %t.0 = phi %union.tree_node* [ %call, %if.then9 ], [ %3, %if.then12 ], [ %call19, %if.else17 ], [ %6, %if.then16 ]
  %9 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 4), align 16, !tbaa !3
  %call23 = tail call %union.tree_node* @build1(i32 115, %union.tree_node* %9, %union.tree_node* %t.0) #8
  %call24 = tail call %union.tree_node* @fold(%union.tree_node* %call23) #8
  ret %union.tree_node* %call24
}
