define internal fastcc %struct.rtx_def* @c_expand_builtin_printf(%union.tree_node* %arglist, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, i32 %ignore, i32 %unlocked) #0 {
entry:
  %tobool = icmp ne i32 %unlocked, 0
  %0 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 69), align 8, !tbaa !3
  %1 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 62), align 8, !tbaa !3
  %cond = select i1 %tobool, %union.tree_node* %0, %union.tree_node* %1
  %2 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 70), align 8, !tbaa !3
  %3 = load %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*]* @built_in_decls, i64 0, i64 63), align 8, !tbaa !3
  %cond5 = select i1 %tobool, %union.tree_node* %2, %union.tree_node* %3
  %tobool6 = icmp ne i32 %ignore, 0
  %tobool6.not = xor i1 %tobool6, true
  %tobool7 = icmp eq %union.tree_node* %cond, null
  %or.cond = or i1 %tobool7, %tobool6.not
  %tobool9 = icmp eq %union.tree_node* %cond5, null
  %or.cond181 = or i1 %or.cond, %tobool9
  %cmp = icmp eq %union.tree_node* %arglist, null
  %or.cond183 = or i1 %or.cond181, %cmp
  br i1 %or.cond183, label %return, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 2
  %4 = bitcast i32* %value to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !3
  %type = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type, align 8, !tbaa !3
  %code = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp12 = icmp eq i32 %bf.clear, 13
  br i1 %cmp12, label %if.end14, label %return

if.end14:                                         ; preds = %lor.lhs.false10
  %call = call fastcc i32 @is_valid_printf_arglist(%union.tree_node* %arglist) #9
  %tobool15 = icmp eq i32 %call, 0
  br i1 %tobool15, label %return, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end14
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  %stripped_string.0.pre = load %union.tree_node** %4, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %stripped_string.0 = phi %union.tree_node* [ %10, %land.rhs ], [ %stripped_string.0.pre, %while.cond.preheader ]
  %code21 = getelementptr inbounds %union.tree_node* %stripped_string.0, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast [4 x i8]* %code21 to i32*
  %bf.load22 = load i32* %9, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %bf.clear23.off = add i32 %bf.clear23, -114
  %switch = icmp ult i32 %bf.clear23.off, 3
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %stripped_string.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %cmp37 = icmp eq %union.tree_node* %10, %8
  br i1 %cmp37, label %land.lhs.true58, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type39 = getelementptr inbounds %union.tree_node* %stripped_string.0, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type39, align 8, !tbaa !3
  %type40 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type40, i64 0, i32 6
  %12 = bitcast [4 x i8]* %mode to i32*
  %bf.load41 = load i32* %12, align 4
  %type47 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type47, align 8, !tbaa !3
  %type48 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode49 = getelementptr inbounds %struct.tree_type* %type48, i64 0, i32 6
  %14 = bitcast [4 x i8]* %mode49 to i32*
  %bf.load50 = load i32* %14, align 4
  %bf.lshr180 = xor i32 %bf.load50, %bf.load41
  %15 = and i32 %bf.lshr180, 65024
  %cmp53 = icmp eq i32 %15, 0
  br i1 %cmp53, label %while.cond, label %land.lhs.true58

while.end:                                        ; preds = %while.cond
  %tobool57 = icmp eq %union.tree_node* %stripped_string.0, null
  br i1 %tobool57, label %if.end68, label %land.lhs.true58

land.lhs.true58:                                  ; preds = %land.rhs, %land.lhs.true, %while.end
  %cmp63 = icmp eq i32 %bf.clear23, 121
  br i1 %cmp63, label %if.then64, label %if.end68

if.then64:                                        ; preds = %land.lhs.true58
  %operands66 = getelementptr inbounds %union.tree_node* %stripped_string.0, i64 0, i32 0, i32 2
  %arrayidx67 = bitcast i32* %operands66 to %union.tree_node**
  %16 = load %union.tree_node** %arrayidx67, align 8, !tbaa !3
  br label %if.end68

if.end68:                                         ; preds = %while.end, %if.then64, %land.lhs.true58
  %stripped_string.1 = phi %union.tree_node* [ %16, %if.then64 ], [ %stripped_string.0, %land.lhs.true58 ], [ null, %while.end ]
  %code70 = getelementptr inbounds %union.tree_node* %stripped_string.1, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast [4 x i8]* %code70 to i32*
  %bf.load71 = load i32* %17, align 8
  %bf.clear72 = and i32 %bf.load71, 255
  %cmp73 = icmp eq i32 %bf.clear72, 29
  br i1 %cmp73, label %if.end75, label %return

if.end75:                                         ; preds = %if.end68
  %pointer = getelementptr inbounds %union.tree_node* %stripped_string.1, i64 0, i32 0, i32 4
  %18 = load %union.tree_node** %pointer, align 8
  %19 = bitcast %union.tree_node* %18 to i8*
  %call76 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([4 x i8]* @.str227, i64 0, i64 0)) #10
  %cmp77 = icmp eq i32 %call76, 0
  br i1 %cmp77, label %if.then78, label %if.else

if.then78:                                        ; preds = %if.end75
  %chain = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %20 = load %union.tree_node** %chain, align 8, !tbaa !3
  br label %if.end135

if.else:                                          ; preds = %if.end75
  %call82 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([3 x i8]* @.str226, i64 0, i64 0)) #10
  %cmp83 = icmp eq i32 %call82, 0
  br i1 %cmp83, label %if.then84, label %if.else87

if.then84:                                        ; preds = %if.else
  %chain86 = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %21 = load %union.tree_node** %chain86, align 8, !tbaa !3
  br label %if.end135

if.else87:                                        ; preds = %if.else
  %call90 = call i8* @strchr(i8* %19, i32 37) #10
  %tobool91 = icmp eq i8* %call90, null
  br i1 %tobool91, label %if.end93, label %return

if.end93:                                         ; preds = %if.else87
  %22 = getelementptr inbounds %union.tree_node* %stripped_string.1, i64 0, i32 0, i32 2
  %23 = load i32* %22, align 4, !tbaa !0
  %cmp95 = icmp eq i32 %23, 2
  br i1 %cmp95, label %if.then96, label %if.else102

if.then96:                                        ; preds = %if.end93
  %24 = load i8* %19, align 1, !tbaa !1
  %conv = sext i8 %24 to i64
  %call100 = call %union.tree_node* @build_int_2_wide(i64 %conv, i64 0) #8
  %call101 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call100) #8
  br label %if.end135

if.else102:                                       ; preds = %if.end93
  %cmp105 = icmp sgt i32 %23, 2
  br i1 %cmp105, label %land.lhs.true107, label %return

land.lhs.true107:                                 ; preds = %if.else102
  %sub = add nsw i32 %23, -2
  %idxprom = sext i32 %sub to i64
  %arrayidx112 = getelementptr inbounds i8* %19, i64 %idxprom
  %25 = load i8* %arrayidx112, align 1, !tbaa !1
  %cmp114 = icmp eq i8 %25, 10
  br i1 %cmp114, label %if.then116, label %return

if.then116:                                       ; preds = %land.lhs.true107
  %sub119 = add nsw i32 %23, -1
  %conv120 = sext i32 %sub119 to i64
  %26 = alloca i8, i64 %conv120, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %19, i64 %idxprom, i32 1, i1 false)
  %arrayidx127 = getelementptr inbounds i8* %26, i64 %idxprom
  store i8 0, i8* %arrayidx127, align 1, !tbaa !1
  %call128 = call %union.tree_node* @build_string(i32 %sub119, i8* %26) #8
  %call129 = call %union.tree_node* @combine_strings(%union.tree_node* %call128) #9
  %call130 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %call129) #8
  br label %if.end135

if.end135:                                        ; preds = %if.then84, %if.then116, %if.then96, %if.then78
  %fn.0 = phi %union.tree_node* [ %cond5, %if.then78 ], [ %cond, %if.then84 ], [ %cond, %if.then96 ], [ %cond5, %if.then116 ]
  %arglist.addr.0 = phi %union.tree_node* [ %20, %if.then78 ], [ %21, %if.then84 ], [ %call101, %if.then96 ], [ %call130, %if.then116 ]
  %call136 = call %union.tree_node* @build_function_call(%union.tree_node* %fn.0, %union.tree_node* %arglist.addr.0) #8
  %27 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %cond141 = select i1 %tobool6, %struct.rtx_def* %27, %struct.rtx_def* %target
  %call142 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call136, %struct.rtx_def* %cond141, i32 %tmode, i32 %modifier) #8
  br label %return

return:                                           ; preds = %if.else102, %land.lhs.true107, %if.else87, %if.end68, %if.end14, %lor.lhs.false10, %entry, %if.end135
  %retval.0 = phi %struct.rtx_def* [ %call142, %if.end135 ], [ null, %entry ], [ null, %lor.lhs.false10 ], [ null, %if.end14 ], [ null, %if.end68 ], [ null, %if.else87 ], [ null, %land.lhs.true107 ], [ null, %if.else102 ]
  ret %struct.rtx_def* %retval.0
}
