define %union.tree_node* @c_add_case_label(%struct.splay_tree_s* %cases, %union.tree_node* %cond, %union.tree_node* %low_value, %union.tree_node* %high_value) #0 {
entry:
  %call = tail call %union.tree_node* @build_decl(i32 31, %union.tree_node* null, %union.tree_node* null) #8
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !3
  %context = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 9
  store %union.tree_node* %0, %union.tree_node** %context, align 8, !tbaa !3
  %tobool = icmp eq %union.tree_node* %cond, null
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  %cmp = icmp eq %union.tree_node* %1, %cond
  %or.cond201 = or i1 %tobool, %cmp
  br i1 %or.cond201, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %root = getelementptr inbounds %struct.splay_tree_s* %cases, i64 0, i32 0
  %2 = load %struct.splay_tree_node_s** %root, align 8, !tbaa !3
  %tobool1 = icmp eq %struct.splay_tree_node_s* %2, null
  br i1 %tobool1, label %if.then2, label %return

if.then2:                                         ; preds = %if.then
  %call3 = tail call %union.tree_node* @build_case_label(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %call) #8
  %call4 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call3) #8
  %.pre = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  br label %return

if.end5:                                          ; preds = %entry
  %tobool6 = icmp ne %union.tree_node* %low_value, null
  br i1 %tobool6, label %land.lhs.true, label %lor.lhs.false22

land.lhs.true:                                    ; preds = %if.end5
  %type7 = getelementptr inbounds %union.tree_node* %low_value, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type7, align 8, !tbaa !3
  %tobool8 = icmp eq %union.tree_node* %3, null
  br i1 %tobool8, label %lor.lhs.false22, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %land.lhs.true
  %code = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %lor.lhs.false22 [
    i32 13, label %if.then44
    i32 15, label %if.then44
  ]

lor.lhs.false22:                                  ; preds = %land.lhs.true9, %land.lhs.true, %if.end5
  %tobool23 = icmp eq %union.tree_node* %high_value, null
  br i1 %tobool23, label %if.end53, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %lor.lhs.false22
  %type26 = getelementptr inbounds %union.tree_node* %high_value, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type26, align 8, !tbaa !3
  %tobool27 = icmp eq %union.tree_node* %5, null
  br i1 %tobool27, label %if.end45, label %land.lhs.true28

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %code32 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %code32 to i32*
  %bf.load33 = load i32* %6, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  switch i32 %bf.clear34, label %if.end45 [
    i32 13, label %if.then44
    i32 15, label %if.then44
  ]

if.then44:                                        ; preds = %land.lhs.true28, %land.lhs.true28, %land.lhs.true9, %land.lhs.true9
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str181, i64 0, i64 0)) #8
  br label %if.end45

if.end45:                                         ; preds = %land.lhs.true28, %land.lhs.true24, %if.then44
  %tobool46 = icmp ne %union.tree_node* %high_value, null
  %7 = load i32* @pedantic, align 4, !tbaa !0
  %tobool48 = icmp ne i32 %7, 0
  %or.cond = and i1 %tobool46, %tobool48
  br i1 %or.cond, label %if.then49, label %if.end53

if.then49:                                        ; preds = %if.end45
  %8 = load i32* @c_language, align 4, !tbaa !5
  %cmp50 = icmp eq i32 %8, 1
  br i1 %cmp50, label %if.then51, label %if.else

if.then51:                                        ; preds = %if.then49
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([55 x i8]* @.str182, i64 0, i64 0)) #8
  br label %if.end53

if.else:                                          ; preds = %if.then49
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([53 x i8]* @.str183, i64 0, i64 0)) #8
  br label %if.end53

if.end53:                                         ; preds = %lor.lhs.false22, %if.then51, %if.else, %if.end45
  %tobool46210 = phi i1 [ true, %if.then51 ], [ true, %if.else ], [ %tobool46, %if.end45 ], [ false, %lor.lhs.false22 ]
  %type55 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type55, align 8, !tbaa !3
  br i1 %tobool6, label %if.then57, label %if.end60

if.then57:                                        ; preds = %if.end53
  %call58 = tail call %union.tree_node* @check_case_value(%union.tree_node* %low_value) #9
  %call59 = tail call %union.tree_node* @convert_and_check(%union.tree_node* %9, %union.tree_node* %call58) #9
  br label %if.end60

if.end60:                                         ; preds = %if.then57, %if.end53
  %low_value.addr.0 = phi %union.tree_node* [ %call59, %if.then57 ], [ null, %if.end53 ]
  br i1 %tobool46210, label %if.then62, label %if.end65

if.then62:                                        ; preds = %if.end60
  %call63 = tail call %union.tree_node* @check_case_value(%union.tree_node* %high_value) #9
  %call64 = tail call %union.tree_node* @convert_and_check(%union.tree_node* %9, %union.tree_node* %call63) #9
  br label %if.end65

if.end65:                                         ; preds = %if.end60, %if.then62
  %high_value.addr.0 = phi %union.tree_node* [ %call64, %if.then62 ], [ %high_value, %if.end60 ]
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  %cmp66 = icmp eq %union.tree_node* %low_value.addr.0, %10
  %cmp68 = icmp eq %union.tree_node* %high_value.addr.0, %10
  %or.cond202 = or i1 %cmp66, %cmp68
  br i1 %or.cond202, label %if.then69, label %if.end76

if.then69:                                        ; preds = %if.end65
  %root70 = getelementptr inbounds %struct.splay_tree_s* %cases, i64 0, i32 0
  %11 = load %struct.splay_tree_node_s** %root70, align 8, !tbaa !3
  %tobool71 = icmp eq %struct.splay_tree_node_s* %11, null
  br i1 %tobool71, label %if.then72, label %return

if.then72:                                        ; preds = %if.then69
  %call73 = tail call %union.tree_node* @build_case_label(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %call) #8
  %call74 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call73) #8
  %.pre215 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  br label %return

if.end76:                                         ; preds = %if.end65
  %call77 = tail call i32 @tree_int_cst_equal(%union.tree_node* %low_value.addr.0, %union.tree_node* %high_value.addr.0) #8
  %tobool78 = icmp eq i32 %call77, 0
  %high_value.addr.0. = select i1 %tobool78, %union.tree_node* %high_value.addr.0, %union.tree_node* null
  %tobool81 = icmp ne %union.tree_node* %low_value.addr.0, null
  %tobool81.not = xor i1 %tobool81, true
  %tobool83 = icmp eq %union.tree_node* %high_value.addr.0., null
  %or.cond203 = or i1 %tobool83, %tobool81.not
  br i1 %or.cond203, label %if.end88, label %land.lhs.true84

land.lhs.true84:                                  ; preds = %if.end76
  %call85 = tail call i32 @tree_int_cst_lt(%union.tree_node* %low_value.addr.0, %union.tree_node* %high_value.addr.0.) #8
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %land.lhs.true84
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([22 x i8]* @.str184, i64 0, i64 0)) #8
  br label %if.end88

if.end88:                                         ; preds = %if.end76, %land.lhs.true84, %if.then87
  %12 = ptrtoint %union.tree_node* %low_value.addr.0 to i64
  %call89 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %cases, i64 %12) #8
  %tobool90 = icmp eq %struct.splay_tree_node_s* %call89, null
  br i1 %tobool90, label %land.lhs.true91, label %if.then121

land.lhs.true91:                                  ; preds = %if.end88
  %or.cond205 = and i1 %tobool83, %tobool81.not
  br i1 %or.cond205, label %if.end140, label %if.then95

if.then95:                                        ; preds = %land.lhs.true91
  %call96 = tail call %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s* %cases, i64 %12) #8
  %call97 = tail call %struct.splay_tree_node_s* @splay_tree_successor(%struct.splay_tree_s* %cases, i64 %12) #8
  %tobool98 = icmp eq %struct.splay_tree_node_s* %call96, null
  br i1 %tobool98, label %if.else109, label %land.lhs.true99

land.lhs.true99:                                  ; preds = %if.then95
  %value = getelementptr inbounds %struct.splay_tree_node_s* %call96, i64 0, i32 1
  %13 = load i64* %value, align 8, !tbaa !4
  %exp = inttoptr i64 %13 to %struct.tree_exp*
  %arrayidx = getelementptr inbounds %struct.tree_exp* %exp, i64 0, i32 2, i64 1
  %14 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %tobool100 = icmp eq %union.tree_node* %14, null
  br i1 %tobool100, label %if.else109, label %land.lhs.true101

land.lhs.true101:                                 ; preds = %land.lhs.true99
  %call106 = tail call i32 @tree_int_cst_compare(%union.tree_node* %14, %union.tree_node* %low_value.addr.0) #8
  %cmp107 = icmp sgt i32 %call106, -1
  br i1 %cmp107, label %if.end119, label %if.else109

if.else109:                                       ; preds = %land.lhs.true99, %if.then95, %land.lhs.true101
  %tobool110 = icmp eq %struct.splay_tree_node_s* %call97, null
  %or.cond206 = or i1 %tobool110, %tobool83
  br i1 %or.cond206, label %if.end140, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %if.else109
  %key = getelementptr inbounds %struct.splay_tree_node_s* %call97, i64 0, i32 0
  %15 = load i64* %key, align 8, !tbaa !4
  %16 = inttoptr i64 %15 to %union.tree_node*
  %call114 = tail call i32 @tree_int_cst_compare(%union.tree_node* %16, %union.tree_node* %high_value.addr.0.) #8
  %cmp115 = icmp slt i32 %call114, 1
  %call97.call89 = select i1 %cmp115, %struct.splay_tree_node_s* %call97, %struct.splay_tree_node_s* null
  br label %if.end119

if.end119:                                        ; preds = %land.lhs.true113, %land.lhs.true101
  %node.0 = phi %struct.splay_tree_node_s* [ %call96, %land.lhs.true101 ], [ %call97.call89, %land.lhs.true113 ]
  %tobool120 = icmp eq %struct.splay_tree_node_s* %node.0, null
  br i1 %tobool120, label %if.end140, label %if.then121

if.then121:                                       ; preds = %if.end88, %if.end119
  %node.0214 = phi %struct.splay_tree_node_s* [ %node.0, %if.end119 ], [ %call89, %if.end88 ]
  %value122 = getelementptr inbounds %struct.splay_tree_node_s* %node.0214, i64 0, i32 1
  %17 = load i64* %value122, align 8, !tbaa !4
  %exp123 = inttoptr i64 %17 to %struct.tree_exp*
  %arrayidx125 = getelementptr inbounds %struct.tree_exp* %exp123, i64 0, i32 2, i64 2
  %18 = load %union.tree_node** %arrayidx125, align 8, !tbaa !3
  br i1 %tobool83, label %if.else128, label %if.then127

if.then127:                                       ; preds = %if.then121
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str185, i64 0, i64 0)) #8
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %18, i8* getelementptr inbounds ([47 x i8]* @.str186, i64 0, i64 0)) #8
  br label %if.end133

if.else128:                                       ; preds = %if.then121
  br i1 %tobool81, label %if.then130, label %if.else131

if.then130:                                       ; preds = %if.else128
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([21 x i8]* @.str187, i64 0, i64 0)) #8
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %18, i8* getelementptr inbounds ([21 x i8]* @.str188, i64 0, i64 0)) #8
  br label %if.end133

if.else131:                                       ; preds = %if.else128
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str189, i64 0, i64 0)) #8
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %18, i8* getelementptr inbounds ([32 x i8]* @.str190, i64 0, i64 0)) #8
  br label %if.end133

if.end133:                                        ; preds = %if.then130, %if.else131, %if.then127
  %root134 = getelementptr inbounds %struct.splay_tree_s* %cases, i64 0, i32 0
  %19 = load %struct.splay_tree_node_s** %root134, align 8, !tbaa !3
  %tobool135 = icmp eq %struct.splay_tree_node_s* %19, null
  br i1 %tobool135, label %if.then136, label %if.end140

if.then136:                                       ; preds = %if.end133
  %call137 = tail call %union.tree_node* @build_case_label(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %call) #8
  %call138 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call137) #8
  br label %if.end140

if.end140:                                        ; preds = %if.else109, %land.lhs.true91, %if.end133, %if.end119, %if.then136
  %call141 = tail call %union.tree_node* @build_case_label(%union.tree_node* %low_value.addr.0, %union.tree_node* %high_value.addr.0., %union.tree_node* %call) #8
  %call142 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call141) #8
  %20 = ptrtoint %union.tree_node* %call142 to i64
  %call143 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %cases, i64 %12, i64 %20) #8
  br label %return

return:                                           ; preds = %if.then72, %if.then69, %if.then2, %if.then, %if.end140
  %retval.0 = phi %union.tree_node* [ %call142, %if.end140 ], [ %1, %if.then ], [ %.pre, %if.then2 ], [ %10, %if.then69 ], [ %.pre215, %if.then72 ]
  ret %union.tree_node* %retval.0
}
