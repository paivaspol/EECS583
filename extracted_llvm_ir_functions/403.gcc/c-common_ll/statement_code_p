define i32 @statement_code_p(i32 %code) #0 {
entry:
  switch i32 %code, label %sw.default [
    i32 171, label %return
    i32 152, label %return
    i32 153, label %return
    i32 154, label %return
    i32 155, label %return
    i32 156, label %return
    i32 157, label %return
    i32 158, label %return
    i32 159, label %return
    i32 160, label %return
    i32 161, label %return
    i32 166, label %return
    i32 162, label %return
    i32 163, label %return
    i32 164, label %return
    i32 165, label %return
    i32 167, label %return
    i32 168, label %return
  ]

sw.default:                                       ; preds = %entry
  %0 = load i32 (i32)** @lang_statement_code_p, align 8, !tbaa !3
  %tobool = icmp eq i32 (i32)* %0, null
  br i1 %tobool, label %return, label %if.then

if.then:                                          ; preds = %sw.default
  %call = tail call i32 %0(i32 %code) #8
  br label %return

return:                                           ; preds = %sw.default, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 0, %sw.default ]
  ret i32 %retval.0
}
