define i32 @min_precision(%union.tree_node* %value, i32 %unsignedp) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %value}, i64 0, metadata !1635), !dbg !2732
  tail call void @llvm.dbg.value(metadata !{i32 %unsignedp}, i64 0, metadata !1636), !dbg !2733
  %call = tail call i32 @tree_int_cst_sgn(%union.tree_node* %value) #9, !dbg !2734
  %cmp = icmp slt i32 %call, 0, !dbg !2734
  br i1 %cmp, label %if.then, label %if.end, !dbg !2734

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node* %value, i64 0, i32 0, i32 0, i32 1, !dbg !2735
  %0 = load %union.tree_node** %type, align 8, !dbg !2735, !tbaa !2305
  %call1 = tail call %union.tree_node* @build1(i32 90, %union.tree_node* %0, %union.tree_node* %value) #9, !dbg !2735
  %call2 = tail call %union.tree_node* @fold(%union.tree_node* %call1) #9, !dbg !2735
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call2}, i64 0, metadata !1635), !dbg !2735
  br label %if.end, !dbg !2735

if.end:                                           ; preds = %if.then, %entry
  %value.addr.0 = phi %union.tree_node* [ %call2, %if.then ], [ %value, %entry ]
  %call3 = tail call i32 @integer_zerop(%union.tree_node* %value.addr.0) #9, !dbg !2736
  %tobool = icmp eq i32 %call3, 0, !dbg !2736
  br i1 %tobool, label %if.else, label %if.end6, !dbg !2736

if.else:                                          ; preds = %if.end
  %call5 = tail call i32 @tree_floor_log2(%union.tree_node* %value.addr.0) #9, !dbg !2737
  tail call void @llvm.dbg.value(metadata !{i32 %call5}, i64 0, metadata !1637), !dbg !2737
  %phitmp = add i32 %call5, 1
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.else
  %log.0 = phi i32 [ %phitmp, %if.else ], [ 1, %if.end ]
  %lnot = icmp eq i32 %unsignedp, 0, !dbg !2738
  %lnot.ext = zext i1 %lnot to i32, !dbg !2738
  %add8 = add nsw i32 %log.0, %lnot.ext, !dbg !2738
  ret i32 %add8, !dbg !2738
}
