define %union.tree_node* @strip_array_types(%union.tree_node* %type) #5 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %type}, i64 0, metadata !1773), !dbg !3453
  %code4 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2, !dbg !3454
  %0 = bitcast [4 x i8]* %code4 to i32*, !dbg !3454
  %bf.load5 = load i32* %0, align 8, !dbg !3454
  %bf.clear6 = and i32 %bf.load5, 255, !dbg !3454
  %cmp7 = icmp eq i32 %bf.clear6, 18, !dbg !3454
  br i1 %cmp7, label %while.body, label %while.end, !dbg !3454

while.body:                                       ; preds = %entry, %while.body
  %type.addr.08 = phi %union.tree_node* [ %1, %while.body ], [ %type, %entry ]
  %type2 = getelementptr inbounds %union.tree_node* %type.addr.08, i64 0, i32 0, i32 0, i32 1, !dbg !3455
  %1 = load %union.tree_node** %type2, align 8, !dbg !3455, !tbaa !2305
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %1}, i64 0, metadata !1773), !dbg !3455
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2, !dbg !3454
  %2 = bitcast [4 x i8]* %code to i32*, !dbg !3454
  %bf.load = load i32* %2, align 8, !dbg !3454
  %bf.clear = and i32 %bf.load, 255, !dbg !3454
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !3454
  br i1 %cmp, label %while.body, label %while.end, !dbg !3454

while.end:                                        ; preds = %while.body, %entry
  %type.addr.0.lcssa = phi %union.tree_node* [ %type, %entry ], [ %1, %while.body ]
  ret %union.tree_node* %type.addr.0.lcssa, !dbg !3456
}
