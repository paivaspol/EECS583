define void @end_alias_analysis() #0 {
entry:
  %0 = load %struct.rtx_def*** @reg_known_value, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.rtx_def** %0, i64 53
  %1 = bitcast %struct.rtx_def** %add.ptr to i8*
  tail call void @free(i8* %1) #7
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_known_value, align 8, !tbaa !0
  store i32 0, i32* @reg_known_value_size, align 4, !tbaa !4
  %2 = load i8** @reg_known_equiv_p, align 8, !tbaa !0
  %add.ptr1 = getelementptr inbounds i8* %2, i64 53
  tail call void @free(i8* %add.ptr1) #7
  store i8* null, i8** @reg_known_equiv_p, align 8, !tbaa !0
  %3 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def** %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = bitcast %struct.rtx_def** %3 to i8*
  tail call void @ggc_del_root(i8* %4) #7
  %5 = load %struct.rtx_def*** @reg_base_value, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def** %5 to i8*
  tail call void @free(i8* %6) #7
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_base_value, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  store i32 0, i32* @reg_base_value_size, align 4, !tbaa !4
  %7 = load %struct.rtx_def*** @alias_invariant, align 8, !tbaa !0
  %tobool2 = icmp eq %struct.rtx_def** %7, null
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  %8 = bitcast %struct.rtx_def** %7 to i8*
  tail call void @free(i8* %8) #7
  store %struct.rtx_def** null, %struct.rtx_def*** @alias_invariant, align 8, !tbaa !0
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then3
  ret void
}
