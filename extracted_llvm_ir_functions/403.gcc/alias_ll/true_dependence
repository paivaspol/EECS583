define i32 @true_dependence(%struct.rtx_def* %mem, i32 %mem_mode, %struct.rtx_def* %x, i32 (%struct.rtx_def*, i32)* nocapture %varies) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = bitcast %struct.rtx_def* %mem to i32*
  %bf.load1 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load1, 134217728
  %tobool4 = icmp eq i32 %bf.clear3, 0
  br i1 %tobool4, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %bf.clear7 = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear7, 3342336
  br i1 %cmp, label %land.lhs.true8, label %if.end13

land.lhs.true8:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 62
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %land.lhs.true8, %if.end
  %4 = bitcast %struct.rtx_def* %mem to i32*
  %bf.load14 = load i32* %4, align 8
  %bf.clear16 = and i32 %bf.load14, 16711680
  %cmp17 = icmp eq i32 %bf.clear16, 3342336
  br i1 %cmp17, label %land.lhs.true18, label %if.end26

land.lhs.true18:                                  ; preds = %if.end13
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx21, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load22 = load i32* %6, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 62
  br i1 %cmp24, label %return, label %if.end26

if.end26:                                         ; preds = %land.lhs.true18, %if.end13
  %call = tail call fastcc i32 @mems_in_disjoint_alias_sets_p(%struct.rtx_def* %x, %struct.rtx_def* %mem) #8
  %tobool27 = icmp eq i32 %call, 0
  br i1 %tobool27, label %if.end29, label %return

if.end29:                                         ; preds = %if.end26
  %bf.load30 = load i32* %0, align 8
  %bf.clear32 = and i32 %bf.load30, 67108864
  %tobool33 = icmp eq i32 %bf.clear32, 0
  br i1 %tobool33, label %if.end40, label %land.lhs.true34

land.lhs.true34:                                  ; preds = %if.end29
  %bf.load35 = load i32* %4, align 8
  %bf.clear37 = and i32 %bf.load35, 67108864
  %tobool38 = icmp eq i32 %bf.clear37, 0
  br i1 %tobool38, label %return, label %if.end40

if.end40:                                         ; preds = %land.lhs.true34, %if.end29
  %call41 = tail call fastcc i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %mem, %struct.rtx_def* %x) #8
  %tobool42 = icmp eq i32 %call41, 0
  br i1 %tobool42, label %if.end44, label %return

if.end44:                                         ; preds = %if.end40
  %cmp45 = icmp eq i32 %mem_mode, 0
  br i1 %cmp45, label %if.then46, label %if.end50

if.then46:                                        ; preds = %if.end44
  %bf.load47 = load i32* %4, align 8
  %bf.lshr48 = lshr i32 %bf.load47, 16
  %bf.clear49 = and i32 %bf.lshr48, 255
  br label %if.end50

if.end50:                                         ; preds = %if.then46, %if.end44
  %mem_mode.addr.0 = phi i32 [ %bf.clear49, %if.then46 ], [ %mem_mode, %if.end44 ]
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx53, align 8, !tbaa !0
  %call54 = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %7) #8
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx57, align 8, !tbaa !0
  %call58 = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %8) #8
  %call59 = tail call fastcc %struct.rtx_def* @find_base_term(%struct.rtx_def* %call54) #8
  %tobool60 = icmp eq %struct.rtx_def* %call59, null
  br i1 %tobool60, label %if.end74, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %if.end50
  %9 = bitcast %struct.rtx_def* %call59 to i32*
  %bf.load62 = load i32* %9, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  switch i32 %bf.clear63, label %if.end74 [
    i32 67, label %return
    i32 68, label %land.lhs.true68
  ]

land.lhs.true68:                                  ; preds = %land.lhs.true61
  %bf.clear71 = and i32 %bf.load62, 67108864
  %tobool72 = icmp eq i32 %bf.clear71, 0
  br i1 %tobool72, label %if.end74, label %return

if.end74:                                         ; preds = %land.lhs.true61, %land.lhs.true68, %if.end50
  %bf.load75 = load i32* %0, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 16
  %bf.clear77 = and i32 %bf.lshr76, 255
  %call78 = tail call fastcc i32 @base_alias_check(%struct.rtx_def* %call54, %struct.rtx_def* %call58, i32 %bf.clear77, i32 %mem_mode.addr.0) #8
  %tobool79 = icmp eq i32 %call78, 0
  br i1 %tobool79, label %return, label %if.end81

if.end81:                                         ; preds = %if.end74
  %call82 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call54) #8
  %call83 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call58) #8
  %idxprom = sext i32 %mem_mode.addr.0 to i64
  %arrayidx84 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %10 = load i8* %arrayidx84, align 1, !tbaa !1
  %conv = zext i8 %10 to i32
  %bf.load85 = load i32* %0, align 8
  %bf.lshr86 = lshr i32 %bf.load85, 16
  %bf.clear87 = and i32 %bf.lshr86, 255
  %idxprom88154 = zext i32 %bf.clear87 to i64
  %arrayidx89 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom88154
  %11 = load i8* %arrayidx89, align 1, !tbaa !1
  %conv90 = zext i8 %11 to i32
  %call91 = tail call fastcc i32 @memrefs_conflict_p(i32 %conv, %struct.rtx_def* %call83, i32 %conv90, %struct.rtx_def* %call82, i64 0) #8
  %tobool92 = icmp eq i32 %call91, 0
  br i1 %tobool92, label %return, label %if.end94

if.end94:                                         ; preds = %if.end81
  %12 = load %struct.rtx_def** %rtx53, align 8, !tbaa !0
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load.i = load i32* %13, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 83
  %cmp99 = icmp eq i32 %mem_mode.addr.0, 2
  %or.cond = or i1 %cmp.i, %cmp99
  br i1 %or.cond, label %return, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %if.end94
  %14 = bitcast %struct.rtx_def* %call83 to i32*
  %bf.load102 = load i32* %14, align 8
  %bf.clear103 = and i32 %bf.load102, 65535
  %cmp104 = icmp eq i32 %bf.clear103, 83
  %cmp108 = icmp eq i32 %mem_mode.addr.0, 51
  %or.cond155 = or i1 %cmp104, %cmp108
  br i1 %or.cond155, label %return, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false101
  %bf.load111 = load i32* %0, align 8
  %bf.clear113 = and i32 %bf.load111, 16711680
  %cmp114 = icmp eq i32 %bf.clear113, 3342336
  br i1 %cmp114, label %return, label %if.end117

if.end117:                                        ; preds = %lor.lhs.false110
  %call118 = tail call fastcc %struct.rtx_def* @fixed_scalar_and_varying_struct_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, %struct.rtx_def* %call83, %struct.rtx_def* %call82, i32 (%struct.rtx_def*, i32)* %varies) #8
  %lnot = icmp eq %struct.rtx_def* %call118, null
  %lnot.ext = zext i1 %lnot to i32
  br label %return

return:                                           ; preds = %if.end94, %lor.lhs.false110, %lor.lhs.false101, %if.end81, %if.end74, %land.lhs.true68, %land.lhs.true61, %if.end40, %land.lhs.true34, %if.end26, %land.lhs.true18, %land.lhs.true8, %land.lhs.true, %if.end117
  %retval.0 = phi i32 [ %lnot.ext, %if.end117 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true8 ], [ 1, %land.lhs.true18 ], [ 0, %if.end26 ], [ 0, %land.lhs.true34 ], [ 0, %if.end40 ], [ 0, %land.lhs.true61 ], [ 0, %land.lhs.true68 ], [ 0, %if.end74 ], [ 0, %if.end81 ], [ 1, %if.end94 ], [ 1, %lor.lhs.false101 ], [ 1, %lor.lhs.false110 ]
  ret i32 %retval.0
}
