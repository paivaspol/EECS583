define internal fastcc %struct.rtx_def* @adjust_offset_for_component_ref(%union.tree_node* nocapture %x, %struct.rtx_def* %offset) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %x}, i64 0, metadata !1501), !dbg !2458
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %offset}, i64 0, metadata !1502), !dbg !2459
  %tobool = icmp eq %struct.rtx_def* %offset, null, !dbg !2460
  br i1 %tobool, label %return, label %if.end, !dbg !2460

if.end:                                           ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %offset, i64 0, i32 1, i64 0, i32 0, !dbg !2461
  %0 = load i64* %rtwint, align 8, !dbg !2461, !tbaa !1584
  tail call void @llvm.dbg.value(metadata !{i64 %0}, i64 0, metadata !1503), !dbg !2461
  br label %do.body, !dbg !2462

do.body:                                          ; preds = %land.rhs, %if.end
  %x.addr.0 = phi %union.tree_node* [ %x, %if.end ], [ %6, %land.rhs ]
  %ioffset.0 = phi i64 [ %0, %if.end ], [ %add10, %land.rhs ]
  %operands = getelementptr inbounds %union.tree_node* %x.addr.0, i64 0, i32 0, i32 2, !dbg !2463
  %arrayidx1 = getelementptr inbounds i32* %operands, i64 2, !dbg !2463
  %1 = bitcast i32* %arrayidx1 to %union.tree_node**, !dbg !2463
  %2 = load %union.tree_node** %1, align 8, !dbg !2463, !tbaa !1579
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %2}, i64 0, metadata !1504), !dbg !2463
  %arguments = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 10, !dbg !2464
  %3 = load %union.tree_node** %arguments, align 8, !dbg !2464, !tbaa !1579
  %call = tail call i32 @host_integerp(%union.tree_node* %3, i32 1) #8, !dbg !2464
  %tobool2 = icmp eq i32 %call, 0, !dbg !2464
  br i1 %tobool2, label %return, label %if.end4, !dbg !2464

if.end4:                                          ; preds = %do.body
  %4 = load %union.tree_node** %arguments, align 8, !dbg !2465, !tbaa !1579
  %call7 = tail call i64 @tree_low_cst(%union.tree_node* %4, i32 1) #8, !dbg !2465
  %u2 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 19, !dbg !2466
  %t = bitcast %union.anon.2* %u2 to %union.tree_node**, !dbg !2466
  %5 = load %union.tree_node** %t, align 8, !dbg !2466, !tbaa !1579
  %call9 = tail call i64 @tree_low_cst(%union.tree_node* %5, i32 1) #8, !dbg !2466
  %div = sdiv i64 %call9, 8, !dbg !2466
  %add = add i64 %call7, %ioffset.0, !dbg !2466
  %add10 = add i64 %add, %div, !dbg !2466
  tail call void @llvm.dbg.value(metadata !{i64 %add10}, i64 0, metadata !1503), !dbg !2466
  %arrayidx13 = bitcast i32* %operands to %union.tree_node**, !dbg !2467
  %6 = load %union.tree_node** %arrayidx13, align 8, !dbg !2467, !tbaa !1579
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %6}, i64 0, metadata !1501), !dbg !2467
  %tobool14 = icmp eq %union.tree_node* %6, null, !dbg !2468
  br i1 %tobool14, label %do.end, label %land.rhs, !dbg !2468

land.rhs:                                         ; preds = %if.end4
  %code = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2, !dbg !2468
  %7 = bitcast [4 x i8]* %code to i32*, !dbg !2468
  %bf.load = load i32* %7, align 8, !dbg !2468
  %bf.clear = and i32 %bf.load, 255, !dbg !2468
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !2468
  br i1 %cmp, label %do.body, label %do.end

do.end:                                           ; preds = %if.end4, %land.rhs
  %call15 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add10) #8, !dbg !2469
  br label %return, !dbg !2469

return:                                           ; preds = %do.body, %entry, %do.end
  %retval.0 = phi %struct.rtx_def* [ %call15, %do.end ], [ null, %entry ], [ null, %do.body ]
  ret %struct.rtx_def* %retval.0, !dbg !2470
}
