define internal i32 @mark_references(%struct.rtx_def** nocapture %current_rtx, i8* %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %current_rtx}, i64 0, metadata !530), !dbg !912
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !531), !dbg !913
  %0 = load %struct.rtx_def** %current_rtx, align 8, !dbg !914, !tbaa !704
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !532), !dbg !914
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !915
  br i1 %cmp, label %return, label %if.end, !dbg !915

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !916
  %bf.load = load i32* %1, align 8, !dbg !916
  %bf.clear = and i32 %bf.load, 65535, !dbg !916
  switch i32 %bf.clear, label %if.else78 [
    i32 47, label %if.then2
    i32 61, label %if.then58
    i32 49, label %return
  ], !dbg !916

if.then2:                                         ; preds = %if.end
  %fld = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, !dbg !917
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !917
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !917, !tbaa !704
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %2}, i64 0, metadata !534), !dbg !917
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !918
  %bf.load3 = load i32* %3, align 8, !dbg !918
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !918
  switch i32 %bf.clear4, label %if.end46 [
    i32 64, label %while.cond
    i32 63, label %while.cond
    i32 132, label %while.cond
    i32 133, label %while.cond
  ], !dbg !918

while.cond:                                       ; preds = %if.then2, %if.then2, %if.then2, %if.then2, %while.body
  %bf.load18 = phi i32 [ %bf.load18.pre, %while.body ], [ %bf.load3, %if.then2 ], [ %bf.load3, %if.then2 ], [ %bf.load3, %if.then2 ], [ %bf.load3, %if.then2 ]
  %reg.0 = phi %struct.rtx_def* [ %4, %while.body ], [ %2, %if.then2 ], [ %2, %if.then2 ], [ %2, %if.then2 ], [ %2, %if.then2 ]
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !919
  switch i32 %bf.clear19, label %if.end46 [
    i32 64, label %while.body
    i32 63, label %while.body
    i32 132, label %while.body
    i32 133, label %while.body
    i32 61, label %if.then38
  ], !dbg !919

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0, !dbg !920
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !920
  %4 = load %struct.rtx_def** %rtx34, align 8, !dbg !920, !tbaa !704
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %4}, i64 0, metadata !536), !dbg !920
  %.phi.trans.insert = bitcast %struct.rtx_def* %4 to i32*
  %bf.load18.pre = load i32* %.phi.trans.insert, align 8, !dbg !919
  br label %while.cond, !dbg !920

if.then38:                                        ; preds = %while.cond
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0, !dbg !921
  %rtuint = bitcast %union.rtunion_def* %arrayidx40 to i32*, !dbg !921
  %5 = load i32* %rtuint, align 4, !dbg !921, !tbaa !722
  %rem = and i32 %5, 63, !dbg !921
  %sh_prom = zext i32 %rem to i64, !dbg !921
  %shl = shl i64 1, %sh_prom, !dbg !921
  %div = lshr i32 %5, 6, !dbg !921
  %idxprom = zext i32 %div to i64, !dbg !921
  %elms = getelementptr inbounds i8* %data, i64 16, !dbg !921
  %6 = bitcast i8* %elms to [1 x i64]*, !dbg !921
  %arrayidx44 = getelementptr inbounds [1 x i64]* %6, i64 0, i64 %idxprom, !dbg !921
  %7 = load i64* %arrayidx44, align 8, !dbg !921, !tbaa !712
  %or = or i64 %shl, %7, !dbg !921
  store i64 %or, i64* %arrayidx44, align 8, !dbg !921, !tbaa !712
  %bf.load47.pre = load i32* %3, align 8, !dbg !922
  br label %if.end46, !dbg !921

if.end46:                                         ; preds = %while.cond, %if.then2, %if.then38
  %bf.load47 = phi i32 [ %bf.load3, %if.then2 ], [ %bf.load47.pre, %if.then38 ], [ %bf.load3, %while.cond ]
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !922
  %cmp49 = icmp eq i32 %bf.clear48, 61, !dbg !922
  br i1 %cmp49, label %if.then50, label %return, !dbg !922

if.then50:                                        ; preds = %if.end46
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, !dbg !923
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !923
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** %rtx53, i32 (%struct.rtx_def**, i8*)* @mark_references, i8* %data) #4, !dbg !923
  br label %return, !dbg !925

if.then58:                                        ; preds = %if.end
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !926
  %rtuint61 = bitcast %union.rtunion_def* %arrayidx60 to i32*, !dbg !926
  %8 = load i32* %rtuint61, align 4, !dbg !926, !tbaa !722
  %rem62 = and i32 %8, 63, !dbg !926
  %sh_prom63 = zext i32 %rem62 to i64, !dbg !926
  %shl64 = shl i64 1, %sh_prom63, !dbg !926
  %div68 = lshr i32 %8, 6, !dbg !926
  %idxprom69 = zext i32 %div68 to i64, !dbg !926
  %elms70 = getelementptr inbounds i8* %data, i64 16, !dbg !926
  %9 = bitcast i8* %elms70 to [1 x i64]*, !dbg !926
  %arrayidx71 = getelementptr inbounds [1 x i64]* %9, i64 0, i64 %idxprom69, !dbg !926
  %10 = load i64* %arrayidx71, align 8, !dbg !926, !tbaa !712
  %or72 = or i64 %shl64, %10, !dbg !926
  store i64 %or72, i64* %arrayidx71, align 8, !dbg !926, !tbaa !712
  br label %return, !dbg !928

if.else78:                                        ; preds = %if.end
  br label %return, !dbg !929

return:                                           ; preds = %if.end, %if.end46, %entry, %if.else78, %if.then58, %if.then50
  %retval.0 = phi i32 [ -1, %if.then50 ], [ -1, %if.then58 ], [ 0, %if.else78 ], [ 0, %entry ], [ 0, %if.end46 ], [ -1, %if.end ]
  ret i32 %retval.0, !dbg !929
}
