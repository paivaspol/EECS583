define i32 @flow_call_edges_add(%struct.simple_bitmap_def* %blocks) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %conv = sext i32 %0 to i64
  %mul = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @xmalloc(i64 %mul) #6
  %1 = bitcast i8* %call to %struct.basic_block_def**
  %tobool = icmp eq %struct.simple_bitmap_def* %blocks, null
  br i1 %tobool, label %for.cond.preheader, label %do.body

for.cond.preheader:                               ; preds = %entry
  %2 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %cmp190 = icmp sgt i32 %2, 0
  br i1 %cmp190, label %for.body.lr.ph, label %if.then47

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %3 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %4 = icmp sgt i32 %2, 1
  %scevgep = getelementptr %struct.varray_head_tag* %3, i64 0, i32 4, i32 0, i64 0
  %scevgep211 = bitcast %struct.const_equiv_data* %scevgep to i8*
  %smax212 = select i1 %4, i32 %2, i32 1
  %5 = add i32 %smax212, -1
  %6 = zext i32 %5 to i64
  %7 = shl nuw nsw i64 %6, 3
  %8 = add i64 %7, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call, i8* %scevgep211, i64 %8, i32 8, i1 false)
  br label %if.then47

do.body:                                          ; preds = %entry
  %size = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 1
  %9 = load i32* %size, align 4, !tbaa !3
  %cmp6198 = icmp eq i32 %9, 0
  br i1 %cmp6198, label %if.end128, label %for.body8.lr.ph

for.body8.lr.ph:                                  ; preds = %do.body
  %10 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data24 = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 4
  %bb25 = bitcast %union.varray_data_tag* %data24 to [1 x %struct.basic_block_def*]*
  %11 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %sub = add nsw i32 %11, -1
  br label %for.body8

for.body8:                                        ; preds = %for.inc42, %for.body8.lr.ph
  %indvars.iv215 = phi i64 [ 0, %for.body8.lr.ph ], [ %indvars.iv.next216, %for.inc42 ]
  %bb_num.1201 = phi i32 [ 0, %for.body8.lr.ph ], [ %bb_num.4, %for.inc42 ]
  %check_last_block.0200 = phi i8 [ 0, %for.body8.lr.ph ], [ %check_last_block.4, %for.inc42 ]
  %arrayidx10 = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %indvars.iv215
  %12 = load i64* %arrayidx10, align 8, !tbaa !4
  %cmp11 = icmp eq i64 %12, 0
  br i1 %cmp11, label %for.inc42, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body8
  %13 = trunc i64 %indvars.iv215 to i32
  %mul22 = shl i32 %13, 6
  br label %for.body17

for.body17:                                       ; preds = %for.cond14.preheader, %for.inc38
  %indvars.iv213 = phi i64 [ 0, %for.cond14.preheader ], [ %indvars.iv.next214, %for.inc38 ]
  %bb_num.2197 = phi i32 [ %bb_num.1201, %for.cond14.preheader ], [ %bb_num.3, %for.inc38 ]
  %check_last_block.1196 = phi i8 [ %check_last_block.0200, %for.cond14.preheader ], [ %check_last_block.3, %for.inc38 ]
  %word_.0195 = phi i64 [ %12, %for.cond14.preheader ], [ %word_.1, %for.inc38 ]
  %sh_prom = and i64 %indvars.iv213, 4294967295
  %shl = shl i64 1, %sh_prom
  %and = and i64 %shl, %word_.0195
  %cmp18 = icmp eq i64 %and, 0
  br i1 %cmp18, label %for.inc38, label %if.then20

if.then20:                                        ; preds = %for.body17
  %14 = trunc i64 %indvars.iv213 to i32
  %neg = xor i64 %shl, -1
  %and21 = and i64 %word_.0195, %neg
  %add = add i32 %14, %mul22
  %idxprom23 = sext i32 %add to i64
  %arrayidx26 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb25, i64 0, i64 %idxprom23
  %15 = load %struct.basic_block_def** %arrayidx26, align 8, !tbaa !0
  %inc27 = add nsw i32 %bb_num.2197, 1
  %idxprom28 = sext i32 %bb_num.2197 to i64
  %arrayidx29 = getelementptr inbounds %struct.basic_block_def** %1, i64 %idxprom28
  store %struct.basic_block_def* %15, %struct.basic_block_def** %arrayidx29, align 8, !tbaa !0
  %cmp30 = icmp eq i32 %add, %sub
  %.check_last_block.1 = select i1 %cmp30, i8 1, i8 %check_last_block.1196
  %cmp33 = icmp eq i64 %and21, 0
  br i1 %cmp33, label %for.inc42, label %for.inc38

for.inc38:                                        ; preds = %for.body17, %if.then20
  %word_.1 = phi i64 [ %and21, %if.then20 ], [ %word_.0195, %for.body17 ]
  %check_last_block.3 = phi i8 [ %.check_last_block.1, %if.then20 ], [ %check_last_block.1196, %for.body17 ]
  %bb_num.3 = phi i32 [ %inc27, %if.then20 ], [ %bb_num.2197, %for.body17 ]
  %indvars.iv.next214 = add i64 %indvars.iv213, 1
  %16 = trunc i64 %indvars.iv.next214 to i32
  %cmp15 = icmp ult i32 %16, 64
  br i1 %cmp15, label %for.body17, label %for.inc42

for.inc42:                                        ; preds = %if.then20, %for.inc38, %for.body8
  %check_last_block.4 = phi i8 [ %check_last_block.0200, %for.body8 ], [ %.check_last_block.1, %if.then20 ], [ %check_last_block.3, %for.inc38 ]
  %bb_num.4 = phi i32 [ %bb_num.1201, %for.body8 ], [ %inc27, %if.then20 ], [ %bb_num.3, %for.inc38 ]
  %indvars.iv.next216 = add i64 %indvars.iv215, 1
  %lftr.wideiv217 = trunc i64 %indvars.iv.next216 to i32
  %exitcond218 = icmp eq i32 %lftr.wideiv217, %9
  br i1 %exitcond218, label %if.end45, label %for.body8

if.end45:                                         ; preds = %for.inc42
  %17 = and i8 %check_last_block.4, 1
  %tobool46 = icmp eq i8 %17, 0
  br i1 %tobool46, label %for.cond73.preheader, label %if.end45.if.then47_crit_edge

if.end45.if.then47_crit_edge:                     ; preds = %if.end45
  %.pre = load i32* @n_basic_blocks, align 4, !tbaa !3
  br label %if.then47

if.then47:                                        ; preds = %for.cond.preheader, %for.body.lr.ph, %if.end45.if.then47_crit_edge
  %18 = phi i32 [ %.pre, %if.end45.if.then47_crit_edge ], [ %2, %for.body.lr.ph ], [ %2, %for.cond.preheader ]
  %bb_num.5174 = phi i32 [ %bb_num.4, %if.end45.if.then47_crit_edge ], [ %smax212, %for.body.lr.ph ], [ 0, %for.cond.preheader ]
  %sub49 = add nsw i32 %18, -1
  %idxprom50 = sext i32 %sub49 to i64
  %19 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data51 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 4
  %bb52 = bitcast %union.varray_data_tag* %data51 to [1 x %struct.basic_block_def*]*
  %arrayidx53 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb52, i64 0, i64 %idxprom50
  %20 = load %struct.basic_block_def** %arrayidx53, align 8, !tbaa !0
  %end = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 1
  %insn.0186 = load %struct.rtx_def** %end, align 8
  %head = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 0
  %21 = load %struct.rtx_def** %head, align 8, !tbaa !0
  %cmp54187 = icmp eq %struct.rtx_def* %insn.0186, %21
  br i1 %cmp54187, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %if.then47, %while.body
  %insn.0188 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ %insn.0186, %if.then47 ]
  %call56 = tail call fastcc zeroext i1 @keep_with_call_p(%struct.rtx_def* %insn.0188) #7
  br i1 %call56, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %insn.0188, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx, align 8
  %22 = load %struct.rtx_def** %head, align 8, !tbaa !0
  %cmp54 = icmp eq %struct.rtx_def* %insn.0, %22
  br i1 %cmp54, label %while.end, label %land.rhs

while.end:                                        ; preds = %while.body, %land.rhs, %if.then47
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0186, %if.then47 ], [ %insn.0188, %land.rhs ], [ %insn.0, %while.body ]
  %call59 = tail call fastcc zeroext i1 @need_fake_edge_p(%struct.rtx_def* %insn.0.lcssa) #7
  br i1 %call59, label %if.then60, label %for.cond73.preheader

if.then60:                                        ; preds = %while.end
  %succ = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 5
  %e.0182 = load %struct.edge_def** %succ, align 8
  %tobool62183 = icmp eq %struct.edge_def* %e.0182, null
  br i1 %tobool62183, label %for.end69, label %for.body63

for.cond61:                                       ; preds = %for.body63
  %succ_next = getelementptr inbounds %struct.edge_def* %e.0184, i64 0, i32 1
  %e.0 = load %struct.edge_def** %succ_next, align 8
  %tobool62 = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool62, label %for.end69, label %for.body63

for.body63:                                       ; preds = %if.then60, %for.cond61
  %e.0184 = phi %struct.edge_def* [ %e.0, %for.cond61 ], [ %e.0182, %if.then60 ]
  %dest = getelementptr inbounds %struct.edge_def* %e.0184, i64 0, i32 3
  %23 = load %struct.basic_block_def** %dest, align 8, !tbaa !0
  %cmp64 = icmp eq %struct.basic_block_def* %23, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp64, label %for.end69, label %for.cond61

for.end69:                                        ; preds = %for.cond61, %for.body63, %if.then60
  %e.0.lcssa = phi %struct.edge_def* [ null, %if.then60 ], [ %e.0184, %for.body63 ], [ null, %for.cond61 ]
  %24 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call70 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %24) #6
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call70, %struct.edge_def* %e.0.lcssa) #6
  tail call void @commit_edge_insertions() #6
  br label %for.cond73.preheader

for.cond73.preheader:                             ; preds = %if.end45, %while.end, %for.end69
  %bb_num.5175.ph = phi i32 [ %bb_num.5174, %for.end69 ], [ %bb_num.5174, %while.end ], [ %bb_num.4, %if.end45 ]
  %cmp74178 = icmp sgt i32 %bb_num.5175.ph, 0
  br i1 %cmp74178, label %for.body76, label %if.end128

for.body76:                                       ; preds = %for.cond73.preheader, %for.inc123
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc123 ], [ 0, %for.cond73.preheader ]
  %blocks_split.0179 = phi i32 [ %blocks_split.3, %for.inc123 ], [ 0, %for.cond73.preheader ]
  %arrayidx79 = getelementptr inbounds %struct.basic_block_def** %1, i64 %indvars.iv
  %25 = load %struct.basic_block_def** %arrayidx79, align 8, !tbaa !0
  %end81 = getelementptr inbounds %struct.basic_block_def* %25, i64 0, i32 1
  %26 = load %struct.rtx_def** %end81, align 8, !tbaa !0
  %head116 = getelementptr inbounds %struct.basic_block_def* %25, i64 0, i32 0
  br label %for.cond82

for.cond82:                                       ; preds = %if.end115, %for.body76
  %insn80.0 = phi %struct.rtx_def* [ %26, %for.body76 ], [ %27, %if.end115 ]
  %blocks_split.1 = phi i32 [ %blocks_split.0179, %for.body76 ], [ %blocks_split.3, %if.end115 ]
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %insn80.0, i64 0, i32 1, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx85, align 8, !tbaa !0
  %call86 = tail call fastcc zeroext i1 @need_fake_edge_p(%struct.rtx_def* %insn80.0) #7
  br i1 %call86, label %if.then87, label %if.end115

if.then87:                                        ; preds = %for.cond82
  %28 = bitcast %struct.rtx_def* %insn80.0 to i32*
  %bf.load = load i32* %28, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp89 = icmp eq i32 %bf.clear, 34
  br i1 %cmp89, label %while.cond92.preheader, label %if.end108

while.cond92.preheader:                           ; preds = %if.then87
  %29 = load %struct.rtx_def** %end81, align 8, !tbaa !0
  %cmp94176 = icmp eq %struct.rtx_def* %insn80.0, %29
  br i1 %cmp94176, label %if.end108, label %land.rhs96

land.rhs96:                                       ; preds = %while.cond92.preheader, %while.body103
  %split_at_insn.0177 = phi %struct.rtx_def* [ %31, %while.body103 ], [ %insn80.0, %while.cond92.preheader ]
  %arrayidx98 = getelementptr inbounds %struct.rtx_def* %split_at_insn.0177, i64 0, i32 1, i64 2
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx99, align 8, !tbaa !0
  %call100 = tail call fastcc zeroext i1 @keep_with_call_p(%struct.rtx_def* %30) #7
  br i1 %call100, label %while.body103, label %if.end108

while.body103:                                    ; preds = %land.rhs96
  %31 = load %struct.rtx_def** %rtx99, align 8, !tbaa !0
  %32 = load %struct.rtx_def** %end81, align 8, !tbaa !0
  %cmp94 = icmp eq %struct.rtx_def* %31, %32
  br i1 %cmp94, label %if.end108, label %land.rhs96

if.end108:                                        ; preds = %while.cond92.preheader, %land.rhs96, %while.body103, %if.then87
  %split_at_insn.1 = phi %struct.rtx_def* [ %insn80.0, %if.then87 ], [ %insn80.0, %while.cond92.preheader ], [ %split_at_insn.0177, %land.rhs96 ], [ %31, %while.body103 ]
  %call109 = tail call %struct.edge_def* @split_block(%struct.basic_block_def* %25, %struct.rtx_def* %split_at_insn.1) #6
  %not.tobool110 = icmp ne %struct.edge_def* %call109, null
  %inc112 = zext i1 %not.tobool110 to i32
  %blocks_split.1.inc112 = add nsw i32 %inc112, %blocks_split.1
  %call114 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %25, %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), i32 16) #6
  br label %if.end115

if.end115:                                        ; preds = %if.end108, %for.cond82
  %blocks_split.3 = phi i32 [ %blocks_split.1.inc112, %if.end108 ], [ %blocks_split.1, %for.cond82 ]
  %33 = load %struct.rtx_def** %head116, align 8, !tbaa !0
  %cmp117 = icmp eq %struct.rtx_def* %insn80.0, %33
  br i1 %cmp117, label %for.inc123, label %for.cond82

for.inc123:                                       ; preds = %if.end115
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %bb_num.5175.ph
  br i1 %exitcond, label %for.end125, label %for.body76

for.end125:                                       ; preds = %for.inc123
  %tobool126 = icmp eq i32 %blocks_split.3, 0
  br i1 %tobool126, label %if.end128, label %if.then127

if.then127:                                       ; preds = %for.end125
  tail call void @verify_flow_info() #6
  br label %if.end128

if.end128:                                        ; preds = %do.body, %for.cond73.preheader, %for.end125, %if.then127
  %blocks_split.0.lcssa222 = phi i32 [ 0, %for.end125 ], [ %blocks_split.3, %if.then127 ], [ 0, %for.cond73.preheader ], [ 0, %do.body ]
  tail call void @free(i8* %call) #6
  ret i32 %blocks_split.0.lcssa222
}
