define void @flow_edge_list_print(i8* %str, %struct.edge_def** %edge_list, i32 %num_edges, %struct._IO_FILE* nocapture %file) #0 {
entry:
  %tobool = icmp eq %struct.edge_def** %edge_list, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8]* @.str15, i64 0, i64 0), i8* %str) #6
  %cmp12 = icmp sgt i32 %num_edges, 0
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %if.end, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds %struct.edge_def** %edge_list, i64 %indvars.iv
  %0 = load %struct.edge_def** %arrayidx, align 8, !tbaa !0
  %src = getelementptr inbounds %struct.edge_def* %0, i64 0, i32 2
  %1 = load %struct.basic_block_def** %src, align 8, !tbaa !0
  %index = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 11
  %2 = load i32* %index, align 4, !tbaa !3
  %dest = getelementptr inbounds %struct.edge_def* %0, i64 0, i32 3
  %3 = load %struct.basic_block_def** %dest, align 8, !tbaa !0
  %index3 = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 11
  %4 = load i32* %index3, align 4, !tbaa !3
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8]* @.str18, i64 0, i64 0), i32 %2, i32 %4) #6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %num_edges
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  br label %return

return:                                           ; preds = %entry, %for.end
  ret void
}
