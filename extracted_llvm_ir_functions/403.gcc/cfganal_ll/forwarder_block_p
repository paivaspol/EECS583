define zeroext i1 @forwarder_block_p(%struct.basic_block_def* %bb) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %bb}, i64 0, metadata !395), !dbg !739
  %cmp = icmp eq %struct.basic_block_def* %bb, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), !dbg !740
  %cmp1 = icmp eq %struct.basic_block_def* %bb, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), !dbg !740
  %or.cond = or i1 %cmp, %cmp1, !dbg !740
  br i1 %or.cond, label %return, label %lor.lhs.false2, !dbg !740

lor.lhs.false2:                                   ; preds = %entry
  %succ = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 5, !dbg !740
  %0 = load %struct.edge_def** %succ, align 8, !dbg !740, !tbaa !741
  %tobool = icmp eq %struct.edge_def* %0, null, !dbg !740
  br i1 %tobool, label %return, label %lor.lhs.false3, !dbg !740

lor.lhs.false3:                                   ; preds = %lor.lhs.false2
  %succ_next = getelementptr inbounds %struct.edge_def* %0, i64 0, i32 1, !dbg !740
  %1 = load %struct.edge_def** %succ_next, align 8, !dbg !740, !tbaa !741
  %tobool5 = icmp eq %struct.edge_def* %1, null, !dbg !740
  br i1 %tobool5, label %if.end, label %return, !dbg !740

if.end:                                           ; preds = %lor.lhs.false3
  %head = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !744
  %insn.045 = load %struct.rtx_def** %head, align 8, !dbg !744
  %end = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !744
  %2 = load %struct.rtx_def** %end, align 8, !dbg !744, !tbaa !741
  %cmp646 = icmp eq %struct.rtx_def* %insn.045, %2, !dbg !744
  %3 = bitcast %struct.rtx_def* %insn.045 to i32*, !dbg !746
  %bf.load47 = load i32* %3, align 8, !dbg !746
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !746
  %idxprom4149 = zext i32 %bf.clear48 to i64, !dbg !746
  %arrayidx50 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom4149, !dbg !746
  %4 = load i8* %arrayidx50, align 1, !dbg !746, !tbaa !742
  %cmp751 = icmp eq i8 %4, 105, !dbg !746
  br i1 %cmp646, label %for.end, label %for.body, !dbg !744

for.body:                                         ; preds = %if.end, %for.inc
  %5 = phi %struct.rtx_def* [ %6, %for.inc ], [ %2, %if.end ]
  %cmp753 = phi i1 [ %cmp7, %for.inc ], [ %cmp751, %if.end ]
  %insn.052 = phi %struct.rtx_def* [ %insn.0, %for.inc ], [ %insn.045, %if.end ]
  br i1 %cmp753, label %land.lhs.true, label %for.inc, !dbg !746

land.lhs.true:                                    ; preds = %for.body
  %call = tail call i32 @active_insn_p(%struct.rtx_def* %insn.052) #7, !dbg !746
  %tobool9 = icmp eq i32 %call, 0, !dbg !746
  br i1 %tobool9, label %land.lhs.true.for.inc_crit_edge, label %return, !dbg !746

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  %.pre = load %struct.rtx_def** %end, align 8, !dbg !744, !tbaa !741
  br label %for.inc, !dbg !746

for.inc:                                          ; preds = %land.lhs.true.for.inc_crit_edge, %for.body
  %6 = phi %struct.rtx_def* [ %.pre, %land.lhs.true.for.inc_crit_edge ], [ %5, %for.body ], !dbg !744
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %insn.052, i64 0, i32 1, i64 2, !dbg !744
  %rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !744
  %insn.0 = load %struct.rtx_def** %rtx, align 8, !dbg !744
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %6, !dbg !744
  %7 = bitcast %struct.rtx_def* %insn.0 to i32*, !dbg !746
  %bf.load = load i32* %7, align 8, !dbg !746
  %bf.clear = and i32 %bf.load, 65535, !dbg !746
  %idxprom41 = zext i32 %bf.clear to i64, !dbg !746
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom41, !dbg !746
  %8 = load i8* %arrayidx, align 1, !dbg !746, !tbaa !742
  %cmp7 = icmp eq i8 %8, 105, !dbg !746
  br i1 %cmp6, label %for.end, label %for.body, !dbg !744

for.end:                                          ; preds = %for.inc, %if.end
  %cmp7.lcssa = phi i1 [ %cmp751, %if.end ], [ %cmp7, %for.inc ]
  %bf.clear.lcssa = phi i32 [ %bf.clear48, %if.end ], [ %bf.clear, %for.inc ]
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.045, %if.end ], [ %6, %for.inc ]
  br i1 %cmp7.lcssa, label %lor.lhs.false20, label %return, !dbg !747

lor.lhs.false20:                                  ; preds = %for.end
  %cmp23 = icmp eq i32 %bf.clear.lcssa, 33, !dbg !747
  br i1 %cmp23, label %land.lhs.true25, label %lor.rhs, !dbg !747

land.lhs.true25:                                  ; preds = %lor.lhs.false20
  %call26 = tail call i32 @simplejump_p(%struct.rtx_def* %insn.0.lcssa) #7, !dbg !748
  %tobool27 = icmp eq i32 %call26, 0, !dbg !748
  br i1 %tobool27, label %lor.rhs, label %return, !dbg !748

lor.rhs:                                          ; preds = %land.lhs.true25, %lor.lhs.false20
  %call28 = tail call i32 @active_insn_p(%struct.rtx_def* %insn.0.lcssa) #7, !dbg !749
  %lnot = icmp eq i32 %call28, 0, !dbg !749
  br label %return, !dbg !749

return:                                           ; preds = %land.lhs.true, %for.end, %lor.rhs, %land.lhs.true25, %entry, %lor.lhs.false2, %lor.lhs.false3
  %retval.0 = phi i1 [ false, %lor.lhs.false3 ], [ false, %lor.lhs.false2 ], [ false, %entry ], [ true, %land.lhs.true25 ], [ true, %for.end ], [ %lnot, %lor.rhs ], [ false, %land.lhs.true ]
  ret i1 %retval.0, !dbg !750
}
