define zeroext i1 @can_fallthru(%struct.basic_block_def* nocapture %src, %struct.basic_block_def* nocapture %target) #0 {
entry:
  %end = getelementptr inbounds %struct.basic_block_def* %src, i64 0, i32 1
  %0 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %head = getelementptr inbounds %struct.basic_block_def* %target, i64 0, i32 0
  %1 = load %struct.rtx_def** %head, align 8, !tbaa !0
  %index = getelementptr inbounds %struct.basic_block_def* %src, i64 0, i32 11
  %2 = load i32* %index, align 4, !tbaa !3
  %add = add nsw i32 %2, 1
  %index1 = getelementptr inbounds %struct.basic_block_def* %target, i64 0, i32 11
  %3 = load i32* %index1, align 4, !tbaa !3
  %cmp = icmp eq i32 %add, %3
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @active_insn_p(%struct.rtx_def* %1) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %1) #6
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %insn2.0 = phi %struct.rtx_def* [ %1, %land.lhs.true ], [ %call2, %if.then ], [ %1, %entry ]
  %call3 = tail call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %0) #6
  %cmp4 = icmp eq %struct.rtx_def* %call3, %insn2.0
  ret i1 %cmp4
}
