define zeroext i1 @mark_dfs_back_edges() #0 {
entry:
  tail call void @llvm.dbg.value(metadata !758, i64 0, metadata !415), !dbg !759
  tail call void @llvm.dbg.value(metadata !758, i64 0, metadata !416), !dbg !760
  tail call void @llvm.dbg.value(metadata !761, i64 0, metadata !428), !dbg !762
  %0 = load i32* @n_basic_blocks, align 4, !dbg !763, !tbaa !755
  %conv = sext i32 %0 to i64, !dbg !763
  %call = tail call noalias i8* @xcalloc(i64 %conv, i64 4) #7, !dbg !763
  %1 = bitcast i8* %call to i32*, !dbg !763
  tail call void @llvm.dbg.value(metadata !{i32* %1}, i64 0, metadata !411), !dbg !763
  %2 = load i32* @n_basic_blocks, align 4, !dbg !764, !tbaa !755
  %conv1 = sext i32 %2 to i64, !dbg !764
  %call2 = tail call noalias i8* @xcalloc(i64 %conv1, i64 4) #7, !dbg !764
  %3 = bitcast i8* %call2 to i32*, !dbg !764
  tail call void @llvm.dbg.value(metadata !{i32* %3}, i64 0, metadata !413), !dbg !764
  %4 = load i32* @n_basic_blocks, align 4, !dbg !765, !tbaa !755
  %add = add nsw i32 %4, 1, !dbg !765
  %conv3 = sext i32 %add to i64, !dbg !765
  %mul = shl nsw i64 %conv3, 3, !dbg !765
  %call4 = tail call noalias i8* @xmalloc(i64 %mul) #7, !dbg !765
  %5 = bitcast i8* %call4 to %struct.edge_def**, !dbg !765
  tail call void @llvm.dbg.value(metadata !{%struct.edge_def** %5}, i64 0, metadata !409), !dbg !765
  tail call void @llvm.dbg.value(metadata !255, i64 0, metadata !414), !dbg !766
  %6 = load i32* @n_basic_blocks, align 4, !dbg !767, !tbaa !755
  %call5 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %6) #7, !dbg !767
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %call5}, i64 0, metadata !417), !dbg !767
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call5) #7, !dbg !768
  %7 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8, !dbg !769, !tbaa !741
  tail call void @llvm.dbg.value(metadata !758, i64 0, metadata !414), !dbg !769
  store %struct.edge_def* %7, %struct.edge_def** %5, align 8, !dbg !769, !tbaa !741
  br label %while.body.lr.ph.lr.ph, !dbg !770

while.body.lr.ph.lr.ph:                           ; preds = %entry, %while.cond.outer.backedge
  %sp.0.ph176 = phi i32 [ 1, %entry ], [ %sp.0.ph.be, %while.cond.outer.backedge ]
  %prenum.0.ph175 = phi i32 [ 1, %entry ], [ %prenum.0159, %while.cond.outer.backedge ]
  %postnum.0.ph174 = phi i32 [ 1, %entry ], [ %postnum.1230, %while.cond.outer.backedge ]
  %found.0.ph173 = phi i8 [ 0, %entry ], [ %found.1227229, %while.cond.outer.backedge ]
  br label %while.body.lr.ph, !dbg !770

while.body.lr.ph:                                 ; preds = %while.body.lr.ph.lr.ph, %if.else
  %sp.0.ph128168 = phi i32 [ %sp.0.ph176, %while.body.lr.ph.lr.ph ], [ %sp.0160, %if.else ]
  %prenum.0.ph127167 = phi i32 [ %prenum.0.ph175, %while.body.lr.ph.lr.ph ], [ %inc24, %if.else ]
  %postnum.0.ph126166 = phi i32 [ %postnum.0.ph174, %while.body.lr.ph.lr.ph ], [ %inc34, %if.else ]
  %8 = sext i32 %sp.0.ph128168 to i64
  br label %while.body, !dbg !770

while.body:                                       ; preds = %while.body.lr.ph, %if.then29
  %indvars.iv = phi i64 [ %8, %while.body.lr.ph ], [ %indvars.iv.next, %if.then29 ]
  %sp.0160 = phi i32 [ %sp.0.ph128168, %while.body.lr.ph ], [ %inc31, %if.then29 ]
  %prenum.0159 = phi i32 [ %prenum.0.ph127167, %while.body.lr.ph ], [ %inc24, %if.then29 ]
  %9 = add nsw i64 %indvars.iv, -1, !dbg !771
  %sub = add nsw i32 %sp.0160, -1, !dbg !771
  %arrayidx7 = getelementptr inbounds %struct.edge_def** %5, i64 %9, !dbg !771
  %10 = load %struct.edge_def** %arrayidx7, align 8, !dbg !771, !tbaa !741
  tail call void @llvm.dbg.value(metadata !{%struct.edge_def* %10}, i64 0, metadata !429), !dbg !771
  %src8 = getelementptr inbounds %struct.edge_def* %10, i64 0, i32 2, !dbg !772
  %11 = load %struct.basic_block_def** %src8, align 8, !dbg !772, !tbaa !741
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %11}, i64 0, metadata !431), !dbg !772
  %dest9 = getelementptr inbounds %struct.edge_def* %10, i64 0, i32 3, !dbg !773
  %12 = load %struct.basic_block_def** %dest9, align 8, !dbg !773, !tbaa !741
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %12}, i64 0, metadata !432), !dbg !773
  %flags = getelementptr inbounds %struct.edge_def* %10, i64 0, i32 6, !dbg !774
  %13 = load i32* %flags, align 4, !dbg !774, !tbaa !755
  %and = and i32 %13, -33, !dbg !774
  store i32 %and, i32* %flags, align 4, !dbg !774, !tbaa !755
  %cmp = icmp eq %struct.basic_block_def* %12, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), !dbg !775
  br i1 %cmp, label %if.end62, label %land.lhs.true, !dbg !775

land.lhs.true:                                    ; preds = %while.body
  %index = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 11, !dbg !775
  %14 = load i32* %index, align 4, !dbg !775, !tbaa !755
  %div = lshr i32 %14, 6, !dbg !775
  %idxprom11 = zext i32 %div to i64, !dbg !775
  %arrayidx12 = getelementptr inbounds %struct.simple_bitmap_def* %call5, i64 0, i32 3, i64 %idxprom11, !dbg !775
  %15 = load i64* %arrayidx12, align 8, !dbg !775, !tbaa !776
  %rem = and i32 %14, 63, !dbg !775
  %sh_prom = zext i32 %rem to i64, !dbg !775
  %16 = shl i64 1, %sh_prom, !dbg !775
  %and14123 = and i64 %16, %15, !dbg !775
  %tobool15 = icmp eq i64 %and14123, 0, !dbg !775
  br i1 %tobool15, label %if.then, label %if.else38, !dbg !775

if.then:                                          ; preds = %land.lhs.true
  %or = or i64 %16, %15, !dbg !777
  store i64 %or, i64* %arrayidx12, align 8, !dbg !777, !tbaa !776
  %inc24 = add nsw i32 %prenum.0159, 1, !dbg !779
  tail call void @llvm.dbg.value(metadata !{i32 %inc24}, i64 0, metadata !415), !dbg !779
  %idxprom26 = sext i32 %14 to i64, !dbg !779
  %arrayidx27 = getelementptr inbounds i32* %1, i64 %idxprom26, !dbg !779
  store i32 %prenum.0159, i32* %arrayidx27, align 4, !dbg !779, !tbaa !755
  %succ = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 5, !dbg !780
  %17 = load %struct.edge_def** %succ, align 8, !dbg !780, !tbaa !741
  %tobool28 = icmp eq %struct.edge_def* %17, null, !dbg !780
  br i1 %tobool28, label %if.else, label %if.then29, !dbg !780

if.then29:                                        ; preds = %if.then
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !770
  %inc31 = add nsw i32 %sp.0160, 1, !dbg !781
  tail call void @llvm.dbg.value(metadata !{i32 %inc31}, i64 0, metadata !414), !dbg !781
  %arrayidx33 = getelementptr inbounds %struct.edge_def** %5, i64 %indvars.iv, !dbg !781
  store %struct.edge_def* %17, %struct.edge_def** %arrayidx33, align 8, !dbg !781, !tbaa !741
  %18 = trunc i64 %indvars.iv.next to i32, !dbg !770
  %tobool = icmp eq i32 %18, 0, !dbg !770
  br i1 %tobool, label %while.end, label %while.body, !dbg !770

if.else:                                          ; preds = %if.then
  %inc34 = add nsw i32 %postnum.0.ph126166, 1, !dbg !783
  tail call void @llvm.dbg.value(metadata !{i32 %inc34}, i64 0, metadata !416), !dbg !783
  %arrayidx37 = getelementptr inbounds i32* %3, i64 %idxprom26, !dbg !783
  store i32 %postnum.0.ph126166, i32* %arrayidx37, align 4, !dbg !783, !tbaa !755
  %tobool158 = icmp eq i32 %sp.0160, 0, !dbg !770
  br i1 %tobool158, label %while.end, label %while.body.lr.ph, !dbg !770

if.else38:                                        ; preds = %land.lhs.true
  %cmp42 = icmp eq %struct.basic_block_def* %11, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), !dbg !784
  br i1 %cmp42, label %if.end62.thread, label %land.lhs.true44, !dbg !784

if.end62.thread:                                  ; preds = %if.else38
  %succ_next223 = getelementptr inbounds %struct.edge_def* %10, i64 0, i32 1, !dbg !786
  %19 = load %struct.edge_def** %succ_next223, align 8, !dbg !786, !tbaa !741
  br label %if.end72, !dbg !786

land.lhs.true44:                                  ; preds = %if.else38
  %index45 = getelementptr inbounds %struct.basic_block_def* %11, i64 0, i32 11, !dbg !784
  %20 = load i32* %index45, align 4, !dbg !784, !tbaa !755
  %idxprom46 = sext i32 %20 to i64, !dbg !784
  %arrayidx47 = getelementptr inbounds i32* %1, i64 %idxprom46, !dbg !784
  %21 = load i32* %arrayidx47, align 4, !dbg !784, !tbaa !755
  %idxprom49 = sext i32 %14 to i64, !dbg !784
  %arrayidx50 = getelementptr inbounds i32* %1, i64 %idxprom49, !dbg !784
  %22 = load i32* %arrayidx50, align 4, !dbg !784, !tbaa !755
  %cmp51 = icmp slt i32 %21, %22, !dbg !784
  br i1 %cmp51, label %if.end62, label %land.lhs.true53, !dbg !784

land.lhs.true53:                                  ; preds = %land.lhs.true44
  %arrayidx56 = getelementptr inbounds i32* %3, i64 %idxprom49, !dbg !784
  %23 = load i32* %arrayidx56, align 4, !dbg !784, !tbaa !755
  %cmp57 = icmp eq i32 %23, 0, !dbg !784
  br i1 %cmp57, label %if.then59, label %if.end62, !dbg !784

if.then59:                                        ; preds = %land.lhs.true53
  %or61 = or i32 %13, 32, !dbg !787
  store i32 %or61, i32* %flags, align 4, !dbg !787, !tbaa !755
  tail call void @llvm.dbg.value(metadata !788, i64 0, metadata !428), !dbg !787
  br label %if.end62, !dbg !787

if.end62:                                         ; preds = %while.body, %land.lhs.true44, %if.then59, %land.lhs.true53
  %found.1 = phi i8 [ 1, %if.then59 ], [ %found.0.ph173, %land.lhs.true53 ], [ %found.0.ph173, %land.lhs.true44 ], [ %found.0.ph173, %while.body ]
  %succ_next = getelementptr inbounds %struct.edge_def* %10, i64 0, i32 1, !dbg !786
  %24 = load %struct.edge_def** %succ_next, align 8, !dbg !786, !tbaa !741
  %tobool63 = icmp ne %struct.edge_def* %24, null, !dbg !786
  %cmp65 = icmp eq %struct.basic_block_def* %11, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), !dbg !786
  %or.cond124 = or i1 %tobool63, %cmp65, !dbg !786
  br i1 %or.cond124, label %if.end72, label %if.end72.thread, !dbg !786

if.end72.thread:                                  ; preds = %if.end62
  %inc68 = add nsw i32 %postnum.0.ph126166, 1, !dbg !789
  tail call void @llvm.dbg.value(metadata !{i32 %inc68}, i64 0, metadata !416), !dbg !789
  %index69 = getelementptr inbounds %struct.basic_block_def* %11, i64 0, i32 11, !dbg !789
  %25 = load i32* %index69, align 4, !dbg !789, !tbaa !755
  %idxprom70 = sext i32 %25 to i64, !dbg !789
  %arrayidx71 = getelementptr inbounds i32* %3, i64 %idxprom70, !dbg !789
  store i32 %postnum.0.ph126166, i32* %arrayidx71, align 4, !dbg !789, !tbaa !755
  br label %while.cond.outer.backedge, !dbg !790

if.end72:                                         ; preds = %if.end62.thread, %if.end62
  %found.1227 = phi i8 [ %found.1, %if.end62 ], [ %found.0.ph173, %if.end62.thread ]
  %26 = phi %struct.edge_def* [ %24, %if.end62 ], [ %19, %if.end62.thread ], !dbg !790
  %tobool74 = icmp eq %struct.edge_def* %26, null, !dbg !790
  br i1 %tobool74, label %while.cond.outer.backedge, label %if.then75, !dbg !790

if.then75:                                        ; preds = %if.end72
  store %struct.edge_def* %26, %struct.edge_def** %arrayidx7, align 8, !dbg !791, !tbaa !741
  br label %while.cond.outer.backedge, !dbg !791

while.cond.outer.backedge:                        ; preds = %if.end72.thread, %if.then75, %if.end72
  %postnum.1230 = phi i32 [ %postnum.0.ph126166, %if.then75 ], [ %postnum.0.ph126166, %if.end72 ], [ %inc68, %if.end72.thread ]
  %found.1227229 = phi i8 [ %found.1227, %if.then75 ], [ %found.1227, %if.end72 ], [ %found.1, %if.end72.thread ]
  %sp.0.ph.be = phi i32 [ %sp.0160, %if.then75 ], [ %sub, %if.end72 ], [ %sub, %if.end72.thread ]
  %tobool158165 = icmp eq i32 %sp.0.ph.be, 0, !dbg !770
  br i1 %tobool158165, label %while.end, label %while.body.lr.ph.lr.ph, !dbg !770

while.end:                                        ; preds = %if.else, %while.cond.outer.backedge, %if.then29
  %found.0.ph171 = phi i8 [ %found.0.ph173, %if.then29 ], [ %found.0.ph173, %if.else ], [ %found.1227229, %while.cond.outer.backedge ]
  tail call void @free(i8* %call) #7, !dbg !792
  tail call void @free(i8* %call2) #7, !dbg !793
  tail call void @free(i8* %call4) #7, !dbg !794
  %27 = bitcast %struct.simple_bitmap_def* %call5 to i8*, !dbg !795
  tail call void @free(i8* %27) #7, !dbg !795
  %28 = and i8 %found.0.ph171, 1, !dbg !796
  %tobool83 = icmp ne i8 %28, 0, !dbg !796
  ret i1 %tobool83, !dbg !796
}
