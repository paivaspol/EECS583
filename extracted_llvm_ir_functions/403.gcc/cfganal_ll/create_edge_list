define noalias %struct.edge_list* @create_edge_list() #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %add = add nsw i32 %0, 2
  %cmp95 = icmp sgt i32 %0, 0
  br i1 %cmp95, label %for.body.lr.ph, label %for.cond7.preheader

for.body.lr.ph:                                   ; preds = %entry
  %1 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  br label %for.body

for.cond7.preheader:                              ; preds = %for.inc4, %entry
  %num_edges.0.lcssa = phi i32 [ 0, %entry ], [ %num_edges.1.lcssa, %for.inc4 ]
  %e.185 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %tobool886 = icmp eq %struct.edge_def* %e.185, null
  br i1 %tobool886, label %for.end13, label %for.body9

for.body:                                         ; preds = %for.body.lr.ph, %for.inc4
  %indvars.iv103 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next104, %for.inc4 ]
  %num_edges.097 = phi i32 [ 0, %for.body.lr.ph ], [ %num_edges.1.lcssa, %for.inc4 ]
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb1, i64 0, i64 %indvars.iv103
  %2 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !0
  %succ = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 5
  %e.090 = load %struct.edge_def** %succ, align 8
  %tobool91 = icmp eq %struct.edge_def* %e.090, null
  br i1 %tobool91, label %for.inc4, label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %e.093 = phi %struct.edge_def* [ %e.0, %for.body3 ], [ %e.090, %for.body ]
  %num_edges.192 = phi i32 [ %inc, %for.body3 ], [ %num_edges.097, %for.body ]
  %inc = add nsw i32 %num_edges.192, 1
  %succ_next = getelementptr inbounds %struct.edge_def* %e.093, i64 0, i32 1
  %e.0 = load %struct.edge_def** %succ_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %for.inc4, label %for.body3

for.inc4:                                         ; preds = %for.body3, %for.body
  %num_edges.1.lcssa = phi i32 [ %num_edges.097, %for.body ], [ %inc, %for.body3 ]
  %indvars.iv.next104 = add i64 %indvars.iv103, 1
  %3 = trunc i64 %indvars.iv.next104 to i32
  %cmp = icmp slt i32 %3, %0
  br i1 %cmp, label %for.body, label %for.cond7.preheader

for.body9:                                        ; preds = %for.cond7.preheader, %for.body9
  %e.188 = phi %struct.edge_def* [ %e.1, %for.body9 ], [ %e.185, %for.cond7.preheader ]
  %num_edges.287 = phi i32 [ %inc10, %for.body9 ], [ %num_edges.0.lcssa, %for.cond7.preheader ]
  %inc10 = add nsw i32 %num_edges.287, 1
  %succ_next12 = getelementptr inbounds %struct.edge_def* %e.188, i64 0, i32 1
  %e.1 = load %struct.edge_def** %succ_next12, align 8
  %tobool8 = icmp eq %struct.edge_def* %e.1, null
  br i1 %tobool8, label %for.end13, label %for.body9

for.end13:                                        ; preds = %for.body9, %for.cond7.preheader
  %num_edges.2.lcssa = phi i32 [ %num_edges.0.lcssa, %for.cond7.preheader ], [ %inc10, %for.body9 ]
  %call = tail call noalias i8* @xmalloc(i64 16) #6
  %4 = bitcast i8* %call to %struct.edge_list*
  %num_blocks = bitcast i8* %call to i32*
  store i32 %add, i32* %num_blocks, align 4, !tbaa !3
  %num_edges14 = getelementptr inbounds i8* %call, i64 4
  %5 = bitcast i8* %num_edges14 to i32*
  store i32 %num_edges.2.lcssa, i32* %5, align 4, !tbaa !3
  %conv = sext i32 %num_edges.2.lcssa to i64
  %mul = shl nsw i64 %conv, 3
  %call15 = tail call noalias i8* @xmalloc(i64 %mul) #6
  %6 = bitcast i8* %call15 to %struct.edge_def**
  %index_to_edge = getelementptr inbounds i8* %call, i64 8
  %7 = bitcast i8* %index_to_edge to %struct.edge_def***
  store %struct.edge_def** %6, %struct.edge_def*** %7, align 8, !tbaa !0
  %e.280 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %tobool1781 = icmp eq %struct.edge_def* %e.280, null
  br i1 %tobool1781, label %for.cond26.preheader, label %for.body18

for.cond26.preheader:                             ; preds = %for.body18, %for.end13
  %num_edges.3.lcssa = phi i32 [ 0, %for.end13 ], [ %inc19, %for.body18 ]
  %8 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %cmp2777 = icmp sgt i32 %8, 0
  br i1 %cmp2777, label %for.body29, label %for.end48

for.body18:                                       ; preds = %for.end13, %for.body18
  %indvars.iv101 = phi i64 [ %indvars.iv.next102, %for.body18 ], [ 0, %for.end13 ]
  %e.283 = phi %struct.edge_def* [ %e.2, %for.body18 ], [ %e.280, %for.end13 ]
  %num_edges.382 = phi i32 [ %inc19, %for.body18 ], [ 0, %for.end13 ]
  %indvars.iv.next102 = add i64 %indvars.iv101, 1
  %inc19 = add nsw i32 %num_edges.382, 1
  %arrayidx22 = getelementptr inbounds %struct.edge_def** %6, i64 %indvars.iv101
  store %struct.edge_def* %e.283, %struct.edge_def** %arrayidx22, align 8, !tbaa !0
  %succ_next24 = getelementptr inbounds %struct.edge_def* %e.283, i64 0, i32 1
  %e.2 = load %struct.edge_def** %succ_next24, align 8
  %tobool17 = icmp eq %struct.edge_def* %e.2, null
  br i1 %tobool17, label %for.cond26.preheader, label %for.body18

for.body29:                                       ; preds = %for.inc46, %for.cond26.preheader
  %indvars.iv99 = phi i64 [ 0, %for.cond26.preheader ], [ %indvars.iv.next100, %for.inc46 ]
  %num_edges.479 = phi i32 [ %num_edges.3.lcssa, %for.cond26.preheader ], [ %num_edges.5.lcssa, %for.inc46 ]
  %9 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data32 = getelementptr inbounds %struct.varray_head_tag* %9, i64 0, i32 4
  %bb33 = bitcast %union.varray_data_tag* %data32 to [1 x %struct.basic_block_def*]*
  %arrayidx34 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb33, i64 0, i64 %indvars.iv99
  %10 = load %struct.basic_block_def** %arrayidx34, align 8, !tbaa !0
  %succ35 = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 5
  %e.373 = load %struct.edge_def** %succ35, align 8
  %tobool3774 = icmp eq %struct.edge_def* %e.373, null
  br i1 %tobool3774, label %for.inc46, label %for.body38.lr.ph

for.body38.lr.ph:                                 ; preds = %for.body29
  %11 = sext i32 %num_edges.479 to i64
  br label %for.body38

for.body38:                                       ; preds = %for.body38.lr.ph, %for.body38
  %indvars.iv = phi i64 [ %11, %for.body38.lr.ph ], [ %indvars.iv.next, %for.body38 ]
  %e.376 = phi %struct.edge_def* [ %e.373, %for.body38.lr.ph ], [ %e.3, %for.body38 ]
  %num_edges.575 = phi i32 [ %num_edges.479, %for.body38.lr.ph ], [ %inc39, %for.body38 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc39 = add nsw i32 %num_edges.575, 1
  %arrayidx42 = getelementptr inbounds %struct.edge_def** %6, i64 %indvars.iv
  store %struct.edge_def* %e.376, %struct.edge_def** %arrayidx42, align 8, !tbaa !0
  %succ_next44 = getelementptr inbounds %struct.edge_def* %e.376, i64 0, i32 1
  %e.3 = load %struct.edge_def** %succ_next44, align 8
  %tobool37 = icmp eq %struct.edge_def* %e.3, null
  br i1 %tobool37, label %for.inc46, label %for.body38

for.inc46:                                        ; preds = %for.body38, %for.body29
  %num_edges.5.lcssa = phi i32 [ %num_edges.479, %for.body29 ], [ %inc39, %for.body38 ]
  %indvars.iv.next100 = add i64 %indvars.iv99, 1
  %12 = trunc i64 %indvars.iv.next100 to i32
  %cmp27 = icmp slt i32 %12, %8
  br i1 %cmp27, label %for.body29, label %for.end48

for.end48:                                        ; preds = %for.inc46, %for.cond26.preheader
  ret %struct.edge_list* %4
}
