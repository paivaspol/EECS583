define void @flow_nodes_print(i8* %str, %struct.simple_bitmap_def* %nodes, %struct._IO_FILE* nocapture %file) #0 {
entry:
  %tobool = icmp eq %struct.simple_bitmap_def* %nodes, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8]* @.str15, i64 0, i64 0), i8* %str) #6
  %size = getelementptr inbounds %struct.simple_bitmap_def* %nodes, i64 0, i32 1
  %0 = load i32* %size, align 4, !tbaa !3
  %cmp35 = icmp eq i32 %0, 0
  br i1 %cmp35, label %do.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc15
  %indvars.iv37 = phi i64 [ %indvars.iv.next38, %for.inc15 ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def* %nodes, i64 0, i32 3, i64 %indvars.iv37
  %1 = load i64* %arrayidx, align 8, !tbaa !4
  %cmp1 = icmp eq i64 %1, 0
  br i1 %cmp1, label %for.inc15, label %for.cond3.preheader

for.cond3.preheader:                              ; preds = %for.body
  %2 = trunc i64 %indvars.iv37 to i32
  %mul = shl i32 %2, 6
  br label %for.body5

for.body5:                                        ; preds = %for.cond3.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond3.preheader ], [ %indvars.iv.next, %for.inc ]
  %word_.034 = phi i64 [ %1, %for.cond3.preheader ], [ %word_.1, %for.inc ]
  %shl = shl i64 1, %indvars.iv
  %and = and i64 %shl, %word_.034
  %cmp6 = icmp eq i64 %and, 0
  br i1 %cmp6, label %for.inc, label %if.then7

if.then7:                                         ; preds = %for.body5
  %neg = xor i64 %shl, -1
  %and8 = and i64 %word_.034, %neg
  %3 = trunc i64 %indvars.iv to i32
  %add = add i32 %3, %mul
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str16, i64 0, i64 0), i32 %add) #6
  %cmp10 = icmp eq i64 %and8, 0
  br i1 %cmp10, label %for.inc15, label %for.inc

for.inc:                                          ; preds = %for.body5, %if.then7
  %word_.1 = phi i64 [ %and8, %if.then7 ], [ %word_.034, %for.body5 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp4 = icmp ult i32 %4, 64
  br i1 %cmp4, label %for.body5, label %for.inc15

for.inc15:                                        ; preds = %if.then7, %for.inc, %for.body
  %indvars.iv.next38 = add i64 %indvars.iv37, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next38 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %0
  br i1 %exitcond, label %do.end, label %for.body

do.end:                                           ; preds = %for.inc15, %if.end
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  br label %return

return:                                           ; preds = %entry, %do.end
  ret void
}
