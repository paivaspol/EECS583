define internal fastcc zeroext i1 @need_fake_edge_p(%struct.rtx_def* %insn) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !734), !dbg !856
  %0 = bitcast %struct.rtx_def* %insn to i32*, !dbg !857
  %bf.load = load i32* %0, align 8, !dbg !857
  %bf.clear = and i32 %bf.load, 65535, !dbg !857
  %idxprom73 = zext i32 %bf.clear to i64, !dbg !857
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom73, !dbg !857
  %1 = load i8* %arrayidx, align 1, !dbg !857, !tbaa !742
  %cmp = icmp eq i8 %1, 105, !dbg !857
  br i1 %cmp, label %if.end, label %return, !dbg !857

if.end:                                           ; preds = %entry
  %2 = and i32 %bf.load, 16842751, !dbg !858
  %3 = icmp eq i32 %2, 34, !dbg !858
  br i1 %3, label %land.lhs.true8, label %if.end19, !dbg !858

land.lhs.true8:                                   ; preds = %if.end
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 26, %struct.rtx_def* null) #7, !dbg !859
  %tobool9 = icmp eq %struct.rtx_def* %call, null, !dbg !859
  br i1 %tobool9, label %land.lhs.true10, label %if.end19, !dbg !859

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %call11 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 29, %struct.rtx_def* null) #7, !dbg !860
  %tobool12 = icmp eq %struct.rtx_def* %call11, null, !dbg !860
  br i1 %tobool12, label %land.lhs.true13, label %if.end19, !dbg !860

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %bf.load14 = load i32* %0, align 8, !dbg !860
  %bf.clear16 = and i32 %bf.load14, 67108864, !dbg !860
  %tobool17 = icmp eq i32 %bf.clear16, 0, !dbg !860
  br i1 %tobool17, label %return, label %if.end19, !dbg !860

if.end19:                                         ; preds = %land.lhs.true13, %land.lhs.true10, %land.lhs.true8, %if.end
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !861
  %rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !861
  %4 = load %struct.rtx_def** %rtx, align 8, !dbg !861, !tbaa !741
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !861
  %bf.load21 = load i32* %5, align 8, !dbg !861
  %6 = and i32 %bf.load21, 134283263, !dbg !861
  %7 = icmp eq i32 %6, 134217769, !dbg !861
  br i1 %7, label %return, label %lor.lhs.false, !dbg !861

lor.lhs.false:                                    ; preds = %if.end19
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !861
  %cmp38 = icmp eq i32 %bf.clear22, 39, !dbg !861
  br i1 %cmp38, label %land.lhs.true40, label %lor.rhs, !dbg !861

land.lhs.true40:                                  ; preds = %lor.lhs.false
  %call41 = tail call i32 @asm_noperands(%struct.rtx_def* %insn) #7, !dbg !862
  %cmp42 = icmp eq i32 %call41, -1, !dbg !862
  %.pre = load %struct.rtx_def** %rtx, align 8, !dbg !862, !tbaa !741
  br i1 %cmp42, label %lor.rhs, label %land.lhs.true44, !dbg !862

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 1, i64 0, !dbg !862
  %rtvec = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtvec_def**, !dbg !862
  %8 = load %struct.rtvec_def** %rtvec, align 8, !dbg !862, !tbaa !741
  %arrayidx50 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 0, !dbg !862
  %9 = load %struct.rtx_def** %arrayidx50, align 8, !dbg !862, !tbaa !741
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !862
  %bf.load51 = load i32* %10, align 8, !dbg !862
  %bf.clear53 = and i32 %bf.load51, 134217728, !dbg !862
  %tobool54 = icmp eq i32 %bf.clear53, 0, !dbg !862
  br i1 %tobool54, label %lor.rhs, label %return, !dbg !862

lor.rhs:                                          ; preds = %land.lhs.true40, %land.lhs.true44, %lor.lhs.false
  %11 = phi %struct.rtx_def* [ %4, %lor.lhs.false ], [ %.pre, %land.lhs.true44 ], [ %.pre, %land.lhs.true40 ]
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !862
  %bf.load58 = load i32* %12, align 8, !dbg !862
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !862
  %cmp60 = icmp eq i32 %bf.clear59, 40, !dbg !862
  br label %return, !dbg !862

return:                                           ; preds = %if.end19, %lor.rhs, %land.lhs.true44, %land.lhs.true13, %entry
  %retval.0 = phi i1 [ false, %entry ], [ true, %land.lhs.true13 ], [ true, %land.lhs.true44 ], [ %cmp60, %lor.rhs ], [ true, %if.end19 ]
  ret i1 %retval.0, !dbg !863
}
