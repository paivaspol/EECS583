define void @output_add_newline(%struct.output_buffer* %buffer) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.output_buffer* %buffer}, i64 0, metadata !532), !dbg !1337
  tail call void @llvm.dbg.value(metadata !{%struct.obstack* %obstack}, i64 0, metadata !533), !dbg !1338
  %next_free = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 2, i32 3, !dbg !1338
  %0 = load i8** %next_free, align 8, !dbg !1338, !tbaa !1178
  %add.ptr = getelementptr inbounds i8* %0, i64 1, !dbg !1338
  %chunk_limit = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 2, i32 4, !dbg !1338
  %1 = load i8** %chunk_limit, align 8, !dbg !1338, !tbaa !1178
  %cmp = icmp ugt i8* %add.ptr, %1, !dbg !1338
  br i1 %cmp, label %if.then, label %if.end, !dbg !1338

if.then:                                          ; preds = %entry
  %obstack = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 2, !dbg !1338
  tail call void @_obstack_newchunk(%struct.obstack* %obstack, i32 1) #11, !dbg !1338
  %.pre = load i8** %next_free, align 8, !dbg !1338, !tbaa !1178
  br label %if.end, !dbg !1338

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %0, %entry ]
  %incdec.ptr = getelementptr inbounds i8* %2, i64 1, !dbg !1338
  store i8* %incdec.ptr, i8** %next_free, align 8, !dbg !1338, !tbaa !1178
  store i8 10, i8* %2, align 1, !dbg !1338, !tbaa !1173
  %line_length = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 3, !dbg !1339
  store i32 0, i32* %line_length, align 4, !dbg !1339, !tbaa !1172
  ret void, !dbg !1340
}
