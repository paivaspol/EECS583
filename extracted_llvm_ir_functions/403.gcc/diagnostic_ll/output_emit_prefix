define void @output_emit_prefix(%struct.output_buffer* %buffer) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.output_buffer* %buffer}, i64 0, metadata !525), !dbg !1310
  %prefix = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 0, !dbg !1311
  %0 = load i8** %prefix, align 8, !dbg !1311, !tbaa !1178
  %cmp = icmp eq i8* %0, null, !dbg !1311
  br i1 %cmp, label %if.end12, label %if.then, !dbg !1311

if.then:                                          ; preds = %entry
  %prefixing_rule = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 6, !dbg !1312
  %1 = load i32* %prefixing_rule, align 4, !dbg !1312, !tbaa !1173
  switch i32 %1, label %if.end12 [
    i32 2, label %if.then.sw.bb5_crit_edge
    i32 0, label %sw.bb
  ], !dbg !1312

if.then.sw.bb5_crit_edge:                         ; preds = %if.then
  %emitted_prefix_p11.pre = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 4, !dbg !1313
  br label %sw.bb5, !dbg !1312

sw.bb:                                            ; preds = %if.then
  %emitted_prefix_p = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 4, !dbg !1314
  %2 = load i8* %emitted_prefix_p, align 1, !dbg !1314, !tbaa !1204, !range !1315
  %tobool = icmp eq i8 %2, 0, !dbg !1314
  %indent_skip = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 3, !dbg !1316
  %3 = load i32* %indent_skip, align 4, !dbg !1316, !tbaa !1172
  br i1 %tobool, label %if.end, label %if.then3, !dbg !1314

if.then3:                                         ; preds = %sw.bb
  tail call void @llvm.dbg.value(metadata !{%struct.output_buffer* %buffer}, i64 0, metadata !1317) #4, !dbg !1320
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !1321) #4, !dbg !1322
  tail call void @llvm.dbg.value(metadata !289, i64 0, metadata !1323) #4, !dbg !1324
  %cmp3.i = icmp sgt i32 %3, 0, !dbg !1324
  br i1 %cmp3.i, label %for.body.i, label %if.end12, !dbg !1324

for.body.i:                                       ; preds = %if.then3, %for.body.i
  %i.04.i = phi i32 [ %inc.i, %for.body.i ], [ 0, %if.then3 ]
  tail call void @output_add_character(%struct.output_buffer* %buffer, i32 32) #11, !dbg !1326
  %inc.i = add nsw i32 %i.04.i, 1, !dbg !1324
  tail call void @llvm.dbg.value(metadata !{i32 %inc.i}, i64 0, metadata !1323) #4, !dbg !1324
  %exitcond.i = icmp eq i32 %inc.i, %3, !dbg !1324
  br i1 %exitcond.i, label %if.end12, label %for.body.i, !dbg !1324

if.end:                                           ; preds = %sw.bb
  %add = add nsw i32 %3, 3, !dbg !1316
  store i32 %add, i32* %indent_skip, align 4, !dbg !1316, !tbaa !1172
  br label %sw.bb5, !dbg !1316

sw.bb5:                                           ; preds = %if.then.sw.bb5_crit_edge, %if.end
  %emitted_prefix_p11.pre-phi = phi i8* [ %emitted_prefix_p11.pre, %if.then.sw.bb5_crit_edge ], [ %emitted_prefix_p, %if.end ], !dbg !1313
  %call = tail call i64 @strlen(i8* %0) #13, !dbg !1327
  %conv = trunc i64 %call to i32, !dbg !1327
  tail call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !526), !dbg !1327
  tail call fastcc void @output_append_r(%struct.output_buffer* %buffer, i8* %0, i32 %conv) #12, !dbg !1328
  store i8 1, i8* %emitted_prefix_p11.pre-phi, align 1, !dbg !1313, !tbaa !1204
  br label %if.end12, !dbg !1329

if.end12:                                         ; preds = %for.body.i, %if.then3, %entry, %sw.bb5, %if.then
  ret void, !dbg !1330
}
