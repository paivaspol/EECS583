define void @output_emit_prefix(%struct.output_buffer* %buffer) #2 {
entry:
  %prefix = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 0
  %0 = load i8** %prefix, align 8, !tbaa !3
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.end12, label %if.then

if.then:                                          ; preds = %entry
  %prefixing_rule = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 6
  %1 = load i32* %prefixing_rule, align 4, !tbaa !1
  switch i32 %1, label %if.end12 [
    i32 2, label %if.then.sw.bb5_crit_edge
    i32 0, label %sw.bb
  ]

if.then.sw.bb5_crit_edge:                         ; preds = %if.then
  %emitted_prefix_p11.pre = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 4
  br label %sw.bb5

sw.bb:                                            ; preds = %if.then
  %emitted_prefix_p = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 4
  %2 = load i8* %emitted_prefix_p, align 1, !tbaa !4, !range !5
  %tobool = icmp eq i8 %2, 0
  %indent_skip = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 3
  %3 = load i32* %indent_skip, align 4, !tbaa !0
  br i1 %tobool, label %if.end, label %if.then3

if.then3:                                         ; preds = %sw.bb
  %cmp3.i = icmp sgt i32 %3, 0
  br i1 %cmp3.i, label %for.body.i, label %if.end12

for.body.i:                                       ; preds = %if.then3, %for.body.i
  %i.04.i = phi i32 [ %inc.i, %for.body.i ], [ 0, %if.then3 ]
  tail call void @output_add_character(%struct.output_buffer* %buffer, i32 32) #10
  %inc.i = add nsw i32 %i.04.i, 1
  %exitcond.i = icmp eq i32 %inc.i, %3
  br i1 %exitcond.i, label %if.end12, label %for.body.i

if.end:                                           ; preds = %sw.bb
  %add = add nsw i32 %3, 3
  store i32 %add, i32* %indent_skip, align 4, !tbaa !0
  br label %sw.bb5

sw.bb5:                                           ; preds = %if.then.sw.bb5_crit_edge, %if.end
  %emitted_prefix_p11.pre-phi = phi i8* [ %emitted_prefix_p11.pre, %if.then.sw.bb5_crit_edge ], [ %emitted_prefix_p, %if.end ]
  %call = tail call i64 @strlen(i8* %0) #12
  %conv = trunc i64 %call to i32
  tail call fastcc void @output_append_r(%struct.output_buffer* %buffer, i8* %0, i32 %conv) #11
  store i8 1, i8* %emitted_prefix_p11.pre-phi, align 1, !tbaa !4
  br label %if.end12

if.end12:                                         ; preds = %for.body.i, %if.then3, %entry, %sw.bb5, %if.then
  ret void
}
