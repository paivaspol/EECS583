define internal fastcc void @diagnostic_finish(%struct.output_buffer* %buffer) #2 {
entry:
  %call.i = tail call i8* @output_finalize_message(%struct.output_buffer* %buffer) #10
  %stream.i = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 1
  %0 = load %struct._IO_FILE** %stream.i, align 8, !tbaa !3
  %call1.i = tail call i32 @fputs(i8* %call.i, %struct._IO_FILE* %0) #10
  tail call void @output_clear_message_text(%struct.output_buffer* %buffer) #10
  %cursor.i = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 7
  %emitted_prefix_p.i = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 4
  store i8 0, i8* %emitted_prefix_p.i, align 1, !tbaa !4
  %indent_skip.i = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 3
  store i32 0, i32* %indent_skip.i, align 4, !tbaa !0
  %1 = bitcast i8** %cursor.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 16, i32 8, i1 false) #3
  %2 = load %struct._IO_FILE** %stream.i, align 8, !tbaa !3
  %call = tail call i32 @fputc(i32 10, %struct._IO_FILE* %2) #10
  %3 = load %struct._IO_FILE** %stream.i, align 8, !tbaa !3
  %call2 = tail call i32 @fflush(%struct._IO_FILE* %3) #10
  ret void
}
