define void @announce_function(%union.tree_node* %decl) #2 {
entry:
  %0 = load i32* @quiet_flag, align 4, !tbaa !0
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %1 = load i32* @rtl_dump_and_exit, align 4, !tbaa !0
  %tobool1 = icmp eq i32 %1, 0
  br i1 %tobool1, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %2 = load %union.tree_node** %name, align 8, !tbaa !3
  %id = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds i8** %id, i64 1
  %4 = load i8** %3, align 8, !tbaa !3
  tail call void (i8*, ...)* @verbatim(i8* getelementptr inbounds ([4 x i8]* @.str8, i64 0, i64 0), i8* %4) #11
  br label %if.end

if.else:                                          ; preds = %if.then
  %5 = load i8* (%union.tree_node*, i32)** @decl_printable_name, align 8, !tbaa !3
  %call = tail call i8* %5(%union.tree_node* %decl, i32 2) #10
  tail call void (i8*, ...)* @verbatim(i8* getelementptr inbounds ([4 x i8]* @.str9, i64 0, i64 0), i8* %call) #11
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call4 = tail call i32 @fflush(%struct._IO_FILE* %6) #10
  %7 = load %struct.output_buffer** @diagnostic_buffer, align 8, !tbaa !3
  %need_newline_p = getelementptr inbounds %struct.output_buffer* %7, i64 0, i32 0, i32 5
  store i8 1, i8* %need_newline_p, align 1, !tbaa !4
  %8 = load %union.tree_node** @current_function_decl, align 8, !tbaa !3
  store %union.tree_node* %8, %union.tree_node** @last_error_function, align 8, !tbaa !3
  br label %if.end5

if.end5:                                          ; preds = %entry, %if.end
  ret void
}
