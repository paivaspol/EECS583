define void @output_add_character(%struct.output_buffer* %buffer, i32 %c) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.output_buffer* %buffer}, i64 0, metadata !537), !dbg !1341
  tail call void @llvm.dbg.value(metadata !{i32 %c}, i64 0, metadata !538), !dbg !1342
  tail call void @llvm.dbg.value(metadata !{%struct.output_buffer* %buffer}, i64 0, metadata !1343), !dbg !1345
  %ideal_maximum_length.i = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 2, !dbg !1346
  %0 = load i32* %ideal_maximum_length.i, align 4, !dbg !1346, !tbaa !1172
  %cmp.i = icmp sgt i32 %0, 0, !dbg !1346
  br i1 %cmp.i, label %land.lhs.true, label %if.end, !dbg !1344

land.lhs.true:                                    ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%struct.output_buffer* %buffer}, i64 0, metadata !1347), !dbg !1348
  %maximum_length.i = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 0, i32 1, !dbg !1349
  %1 = load i32* %maximum_length.i, align 4, !dbg !1349, !tbaa !1172
  %line_length.i = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 3, !dbg !1349
  %2 = load i32* %line_length.i, align 4, !dbg !1349, !tbaa !1172
  %sub.i = sub nsw i32 %1, %2, !dbg !1349
  %cmp = icmp slt i32 %sub.i, 1, !dbg !1344
  br i1 %cmp, label %if.then, label %if.end, !dbg !1344

if.then:                                          ; preds = %land.lhs.true
  tail call void @output_add_newline(%struct.output_buffer* %buffer) #12, !dbg !1350
  br label %if.end, !dbg !1350

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  tail call void @llvm.dbg.value(metadata !{%struct.obstack* %obstack}, i64 0, metadata !539), !dbg !1351
  %next_free = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 2, i32 3, !dbg !1351
  %3 = load i8** %next_free, align 8, !dbg !1351, !tbaa !1178
  %add.ptr = getelementptr inbounds i8* %3, i64 1, !dbg !1351
  %chunk_limit = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 2, i32 4, !dbg !1351
  %4 = load i8** %chunk_limit, align 8, !dbg !1351, !tbaa !1178
  %cmp2 = icmp ugt i8* %add.ptr, %4, !dbg !1351
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1351

if.then3:                                         ; preds = %if.end
  %obstack = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 2, !dbg !1351
  tail call void @_obstack_newchunk(%struct.obstack* %obstack, i32 1) #11, !dbg !1351
  %.pre = load i8** %next_free, align 8, !dbg !1351, !tbaa !1178
  br label %if.end4, !dbg !1351

if.end4:                                          ; preds = %if.then3, %if.end
  %5 = phi i8* [ %.pre, %if.then3 ], [ %3, %if.end ]
  %conv = trunc i32 %c to i8, !dbg !1351
  %incdec.ptr = getelementptr inbounds i8* %5, i64 1, !dbg !1351
  store i8* %incdec.ptr, i8** %next_free, align 8, !dbg !1351, !tbaa !1178
  store i8 %conv, i8* %5, align 1, !dbg !1351, !tbaa !1173
  %line_length = getelementptr inbounds %struct.output_buffer* %buffer, i64 0, i32 3, !dbg !1352
  %6 = load i32* %line_length, align 4, !dbg !1352, !tbaa !1172
  %inc = add nsw i32 %6, 1, !dbg !1352
  store i32 %inc, i32* %line_length, align 4, !dbg !1352, !tbaa !1172
  ret void, !dbg !1353
}
