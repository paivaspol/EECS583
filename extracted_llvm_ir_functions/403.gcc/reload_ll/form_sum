define %struct.rtx_def* @form_sum(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then180, %if.then111, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %11, %if.then111 ], [ %call184, %if.then180 ]
  %y.tr = phi %struct.rtx_def* [ %y, %entry ], [ %call118, %if.then111 ], [ %16, %if.then180 ]
  %0 = bitcast %struct.rtx_def* %x.tr to i32*
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.end, label %if.end6

if.end:                                           ; preds = %tailrecurse
  %1 = bitcast %struct.rtx_def* %y.tr to i32*
  %bf.load1 = load i32* %1, align 8
  %bf.lshr2 = lshr i32 %bf.load1, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  %cmp4 = icmp eq i32 %bf.clear3, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %2 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %2, 25
  %3 = and i32 %and, 1
  %4 = or i32 %3, 4
  br label %if.end6

if.end6:                                          ; preds = %tailrecurse, %if.then5, %if.end
  %mode.1 = phi i32 [ %4, %if.then5 ], [ %bf.clear3, %if.end ], [ %bf.clear, %tailrecurse ]
  %bf.clear8 = and i32 %bf.load, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 54
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end6
  %rtwint = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %y.tr, i64 %5) #6
  br label %return

if.else:                                          ; preds = %if.end6
  %6 = bitcast %struct.rtx_def* %y.tr to i32*
  %bf.load11 = load i32* %6, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 54
  br i1 %cmp13, label %if.then14, label %if.else19

if.then14:                                        ; preds = %if.else
  %rtwint17 = getelementptr inbounds %struct.rtx_def* %y.tr, i64 0, i32 1, i64 0, i32 0
  %7 = load i64* %rtwint17, align 8, !tbaa !6
  %call18 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %x.tr, i64 %7) #6
  br label %return

if.else19:                                        ; preds = %if.else
  %bf.clear8.off = add i32 %bf.clear8, -67
  %switch = icmp ult i32 %bf.clear8.off, 2
  br i1 %switch, label %if.then50, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %if.else19
  switch i32 %bf.clear8, label %if.end53 [
    i32 140, label %if.then50
    i32 134, label %if.then50
    i32 58, label %if.then50
    i32 56, label %if.then50
    i32 55, label %if.then50
    i32 54, label %if.then50
  ]

if.then50:                                        ; preds = %lor.lhs.false26, %lor.lhs.false26, %lor.lhs.false26, %lor.lhs.false26, %lor.lhs.false26, %lor.lhs.false26, %if.else19
  br label %if.end53

if.end53:                                         ; preds = %lor.lhs.false26, %if.then50
  %bf.load54 = phi i32 [ %bf.load11, %if.then50 ], [ %bf.load, %lor.lhs.false26 ]
  %x.addr.0 = phi %struct.rtx_def* [ %y.tr, %if.then50 ], [ %x.tr, %lor.lhs.false26 ]
  %y.addr.0 = phi %struct.rtx_def* [ %x.tr, %if.then50 ], [ %y.tr, %lor.lhs.false26 ]
  %8 = bitcast %struct.rtx_def* %x.addr.0 to i32*
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 75
  br i1 %cmp56, label %land.lhs.true, label %if.end120

land.lhs.true:                                    ; preds = %if.end53
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load59 = load i32* %10, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  switch i32 %bf.clear60, label %if.end120 [
    i32 67, label %if.then111
    i32 68, label %if.then111
    i32 54, label %if.then111
    i32 55, label %if.then111
    i32 58, label %if.then111
    i32 134, label %if.then111
    i32 56, label %if.then111
    i32 140, label %if.then111
  ]

if.then111:                                       ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true
  %arrayidx113 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx114, align 8, !tbaa !5
  %call118 = tail call %struct.rtx_def* @form_sum(%struct.rtx_def* %9, %struct.rtx_def* %y.addr.0) #7
  br label %tailrecurse

if.end120:                                        ; preds = %land.lhs.true, %if.end53
  %12 = bitcast %struct.rtx_def* %y.addr.0 to i32*
  %bf.load121 = load i32* %12, align 8
  %bf.clear122 = and i32 %bf.load121, 65535
  %cmp123 = icmp eq i32 %bf.clear122, 75
  br i1 %cmp123, label %land.lhs.true124, label %if.end189

land.lhs.true124:                                 ; preds = %if.end120
  %arrayidx126 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 1
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx127, align 8, !tbaa !5
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load128 = load i32* %14, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  switch i32 %bf.clear129, label %if.end189 [
    i32 67, label %if.then180
    i32 68, label %if.then180
    i32 54, label %if.then180
    i32 55, label %if.then180
    i32 58, label %if.then180
    i32 134, label %if.then180
    i32 56, label %if.then180
    i32 140, label %if.then180
  ]

if.then180:                                       ; preds = %land.lhs.true124, %land.lhs.true124, %land.lhs.true124, %land.lhs.true124, %land.lhs.true124, %land.lhs.true124, %land.lhs.true124, %land.lhs.true124
  %arrayidx182 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx183, align 8, !tbaa !5
  %call184 = tail call %struct.rtx_def* @form_sum(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %15) #7
  %16 = load %struct.rtx_def** %rtx127, align 8, !tbaa !5
  br label %tailrecurse

if.end189:                                        ; preds = %land.lhs.true124, %if.end120
  %bf.load190 = load i32* %8, align 8
  %bf.clear191 = and i32 %bf.load190, 65535
  switch i32 %bf.clear191, label %if.end272 [
    i32 67, label %land.lhs.true221
    i32 68, label %land.lhs.true221
    i32 54, label %land.lhs.true221
    i32 55, label %land.lhs.true221
    i32 58, label %land.lhs.true221
    i32 134, label %land.lhs.true221
    i32 56, label %land.lhs.true221
    i32 140, label %land.lhs.true221
  ]

land.lhs.true221:                                 ; preds = %if.end189, %if.end189, %if.end189, %if.end189, %if.end189, %if.end189, %if.end189, %if.end189
  switch i32 %bf.clear122, label %if.end272 [
    i32 67, label %if.then253
    i32 68, label %if.then253
    i32 54, label %if.then253
    i32 55, label %if.then253
    i32 58, label %if.then253
    i32 134, label %if.then253
    i32 56, label %if.then253
    i32 140, label %if.then253
  ]

if.then253:                                       ; preds = %land.lhs.true221, %land.lhs.true221, %land.lhs.true221, %land.lhs.true221, %land.lhs.true221, %land.lhs.true221, %land.lhs.true221, %land.lhs.true221
  %cmp256 = icmp eq i32 %bf.clear191, 58
  br i1 %cmp256, label %if.then257, label %if.end261

if.then257:                                       ; preds = %if.then253
  %arrayidx259 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx260, align 8, !tbaa !5
  br label %if.end261

if.end261:                                        ; preds = %if.then257, %if.then253
  %x.addr.1 = phi %struct.rtx_def* [ %17, %if.then257 ], [ %x.addr.0, %if.then253 ]
  %cmp264 = icmp eq i32 %bf.clear122, 58
  br i1 %cmp264, label %if.then265, label %if.end269

if.then265:                                       ; preds = %if.end261
  %arrayidx267 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rtx268 = bitcast %union.rtunion_def* %arrayidx267 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx268, align 8, !tbaa !5
  br label %if.end269

if.end269:                                        ; preds = %if.then265, %if.end261
  %y.addr.1 = phi %struct.rtx_def* [ %18, %if.then265 ], [ %y.addr.0, %if.end261 ]
  %call270 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.1, %struct.rtx_def* %x.addr.1, %struct.rtx_def* %y.addr.1) #6
  %call271 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 0, %struct.rtx_def* %call270) #6
  br label %return

if.end272:                                        ; preds = %land.lhs.true221, %if.end189
  %call273 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.1, %struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.0) #6
  br label %return

return:                                           ; preds = %if.end272, %if.end269, %if.then14, %if.then10
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then10 ], [ %call18, %if.then14 ], [ %call271, %if.end269 ], [ %call273, %if.end272 ]
  ret %struct.rtx_def* %retval.0
}
