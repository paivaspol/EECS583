define %struct.rtx_def* @find_equiv_reg(%struct.rtx_def* %goal, %struct.rtx_def* %insn, i32 %class, i32 %other, i16* %reload_reg_p, i32 %goalreg, i32 %mode) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %goal, null
  br i1 %cmp, label %while.body.preheader, label %if.else

if.else:                                          ; preds = %entry
  %0 = bitcast %struct.rtx_def* %goal to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 61, label %if.then2
    i32 66, label %if.then7
    i32 67, label %while.body.preheader
    i32 68, label %while.body.preheader
    i32 54, label %while.body.preheader
    i32 55, label %while.body.preheader
    i32 58, label %while.body.preheader
    i32 134, label %while.body.preheader
    i32 56, label %while.body.preheader
    i32 140, label %while.body.preheader
    i32 75, label %land.lhs.true59
  ]

if.then2:                                         ; preds = %if.else
  %arrayidx = getelementptr inbounds %struct.rtx_def* %goal, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !3
  br label %while.body.preheader

if.then7:                                         ; preds = %if.else
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %goal, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load10 = load i32* %3, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %bf.clear13 = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear13, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %if.then7
  %4 = load i32* @flag_float_store, align 4, !tbaa !3
  %tobool15 = icmp eq i32 %4, 0
  br i1 %tobool15, label %if.end22, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr17 = lshr i32 %bf.load, 16
  %bf.clear18 = and i32 %bf.lshr17, 255
  %idxprom2393 = zext i32 %bf.clear18 to i64
  %arrayidx19 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom2393
  %5 = load i32* %arrayidx19, align 4, !tbaa !4
  %cmp20 = icmp eq i32 %5, 2
  br i1 %cmp20, label %return, label %if.end22

if.end22:                                         ; preds = %if.end, %land.lhs.true
  %.off = add i32 %bf.clear11, -96
  %switch = icmp ult i32 %.off, 6
  br i1 %switch, label %return, label %while.body.preheader

land.lhs.true59:                                  ; preds = %if.else
  %fld60 = getelementptr inbounds %struct.rtx_def* %goal, i64 0, i32 1
  %rtx62 = bitcast [1 x %union.rtunion_def]* %fld60 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx62, align 8, !tbaa !5
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !5
  %cmp63 = icmp eq %struct.rtx_def* %6, %7
  br i1 %cmp63, label %land.lhs.true64, label %land.lhs.true125

land.lhs.true64:                                  ; preds = %land.lhs.true59
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %goal, i64 0, i32 1, i64 1
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx67, align 8, !tbaa !5
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load68 = load i32* %9, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  switch i32 %bf.clear69, label %if.else121 [
    i32 67, label %while.body.preheader
    i32 68, label %while.body.preheader
    i32 54, label %while.body.preheader
    i32 55, label %while.body.preheader
    i32 58, label %while.body.preheader
    i32 134, label %while.body.preheader
    i32 56, label %while.body.preheader
    i32 140, label %while.body.preheader
  ]

if.else121:                                       ; preds = %land.lhs.true64
  %cmp124 = icmp eq i32 %bf.clear, 75
  br i1 %cmp124, label %land.lhs.true125, label %return

land.lhs.true125:                                 ; preds = %land.lhs.true59, %if.else121
  %fld126 = getelementptr inbounds %struct.rtx_def* %goal, i64 0, i32 1
  %rtx128 = bitcast [1 x %union.rtunion_def]* %fld126 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx128, align 8, !tbaa !5
  %11 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !5
  %cmp129 = icmp eq %struct.rtx_def* %10, %11
  br i1 %cmp129, label %land.lhs.true130, label %return

land.lhs.true130:                                 ; preds = %land.lhs.true125
  %arrayidx132 = getelementptr inbounds %struct.rtx_def* %goal, i64 0, i32 1, i64 1
  %rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx133, align 8, !tbaa !5
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load134 = load i32* %13, align 8
  %bf.clear135 = and i32 %bf.load134, 65535
  switch i32 %bf.clear135, label %return [
    i32 67, label %while.body.preheader
    i32 68, label %while.body.preheader
    i32 54, label %while.body.preheader
    i32 55, label %while.body.preheader
    i32 58, label %while.body.preheader
    i32 134, label %while.body.preheader
    i32 56, label %while.body.preheader
    i32 140, label %while.body.preheader
  ]

while.body.preheader:                             ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.then2, %entry, %if.end22, %land.lhs.true64, %land.lhs.true64, %land.lhs.true64, %land.lhs.true64, %land.lhs.true64, %land.lhs.true64, %land.lhs.true64, %land.lhs.true64, %land.lhs.true130, %land.lhs.true130, %land.lhs.true130, %land.lhs.true130, %land.lhs.true130, %land.lhs.true130, %land.lhs.true130, %land.lhs.true130
  %need_stable_sp.0.ph = phi i32 [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.end22 ], [ 0, %entry ], [ 0, %if.then2 ]
  %goal_const.0.ph = phi i32 [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true64 ], [ 1, %if.else ], [ 1, %if.else ], [ 1, %if.else ], [ 1, %if.else ], [ 1, %if.else ], [ 1, %if.else ], [ 1, %if.else ], [ 1, %if.else ], [ 0, %if.end22 ], [ 0, %entry ], [ 0, %if.then2 ]
  %goal_mem.0.ph = phi i32 [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true130 ], [ 0, %land.lhs.true64 ], [ 0, %land.lhs.true64 ], [ 0, %land.lhs.true64 ], [ 0, %land.lhs.true64 ], [ 0, %land.lhs.true64 ], [ 0, %land.lhs.true64 ], [ 0, %land.lhs.true64 ], [ 0, %land.lhs.true64 ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 0, %if.else ], [ 1, %if.end22 ], [ 0, %entry ], [ 0, %if.then2 ]
  %regno.0.ph = phi i32 [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true130 ], [ -1, %land.lhs.true64 ], [ -1, %land.lhs.true64 ], [ -1, %land.lhs.true64 ], [ -1, %land.lhs.true64 ], [ -1, %land.lhs.true64 ], [ -1, %land.lhs.true64 ], [ -1, %land.lhs.true64 ], [ -1, %land.lhs.true64 ], [ -1, %if.else ], [ -1, %if.else ], [ -1, %if.else ], [ -1, %if.else ], [ -1, %if.else ], [ -1, %if.else ], [ -1, %if.else ], [ -1, %if.else ], [ -1, %if.end22 ], [ %goalreg, %entry ], [ %1, %if.then2 ]
  %arrayidx1952522 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1
  %rtx1962523 = bitcast %union.rtunion_def* %arrayidx1952522 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx1962523, align 8, !tbaa !5
  %cmp1972524 = icmp eq %struct.rtx_def* %14, null
  br i1 %cmp1972524, label %return, label %lor.lhs.false198.lr.ph

lor.lhs.false198.lr.ph:                           ; preds = %while.body.preheader
  %cmp208 = icmp eq i16* %reload_reg_p, null
  %magicptr = ptrtoint i16* %reload_reg_p to i64
  %switch2468 = icmp ult i16* %reload_reg_p, inttoptr (i64 2 to i16*)
  %cmp242 = icmp sgt i32 %regno.0.ph, -1
  %cmp460 = icmp sgt i32 %other, -1
  %idxprom496 = sext i32 %mode to i64
  %arrayidx497 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom496
  %arrayidx520 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom496
  %idxprom537 = sext i32 %class to i64
  %arrayidx538 = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom537
  %tobool297 = icmp ne i32 %goal_mem.0.ph, 0
  %15 = bitcast %struct.rtx_def* %goal to i32*
  br label %lor.lhs.false198

lor.lhs.false198:                                 ; preds = %lor.lhs.false198.lr.ph, %while.body.backedge
  %16 = phi %struct.rtx_def* [ %14, %lor.lhs.false198.lr.ph ], [ %49, %while.body.backedge ]
  %goal_const.02525 = phi i32 [ %goal_const.0.ph, %lor.lhs.false198.lr.ph ], [ %goal_const.0.be, %while.body.backedge ]
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load199 = load i32* %17, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  switch i32 %bf.clear200, label %while.body.backedge [
    i32 36, label %return
    i32 32, label %land.lhs.true207
  ]

land.lhs.true207:                                 ; preds = %lor.lhs.false198
  br i1 %switch2468, label %if.then215, label %lor.lhs.false211

lor.lhs.false211:                                 ; preds = %land.lhs.true207
  %arrayidx213 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx213 to i32*
  %18 = load i32* %rtint, align 4, !tbaa !3
  %19 = load i32* @reload_first_uid, align 4, !tbaa !3
  %cmp214 = icmp slt i32 %18, %19
  %20 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1, !tbaa !1
  %cmp220 = icmp eq i8 %20, 105
  %or.cond2564 = and i1 %cmp214, %cmp220
  br i1 %or.cond2564, label %cond.true, label %while.body.backedge

if.then215:                                       ; preds = %land.lhs.true207
  %.old = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1, !tbaa !1
  %cmp220.old = icmp eq i8 %.old, 105
  br i1 %cmp220.old, label %cond.true, label %while.body.backedge

cond.true:                                        ; preds = %lor.lhs.false211, %if.then215
  %arrayidx223 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 3
  %rtx224 = bitcast %union.rtunion_def* %arrayidx223 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx224, align 8, !tbaa !5
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load225 = load i32* %22, align 8
  %bf.clear226 = and i32 %bf.load225, 65535
  %cmp227 = icmp eq i32 %bf.clear226, 47
  br i1 %cmp227, label %cond.end237, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %16, %struct.rtx_def* %21) #6
  br label %cond.end237

cond.end237:                                      ; preds = %cond.true, %cond.false
  %cond238 = phi %struct.rtx_def* [ %call, %cond.false ], [ %21, %cond.true ]
  %cmp239 = icmp eq %struct.rtx_def* %cond238, null
  br i1 %cmp239, label %while.body.backedge, label %land.lhs.true241

land.lhs.true241:                                 ; preds = %cond.end237
  br i1 %cmp242, label %land.lhs.true244, label %lor.lhs.false275

land.lhs.true244:                                 ; preds = %land.lhs.true241
  %arrayidx246 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 1
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx247, align 8, !tbaa !5
  %call248 = tail call i32 @true_regnum(%struct.rtx_def* %23) #6
  %cmp249 = icmp eq i32 %call248, %regno.0.ph
  br i1 %cmp249, label %land.lhs.true251, label %land.lhs.true261

land.lhs.true251:                                 ; preds = %land.lhs.true244
  %arrayidx253 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 0
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx254, align 8, !tbaa !5
  %call255 = tail call i32 @true_regnum(%struct.rtx_def* %24) #6
  %cmp256 = icmp sgt i32 %call255, -1
  br i1 %cmp256, label %if.then459, label %land.lhs.true261

land.lhs.true261:                                 ; preds = %land.lhs.true251, %land.lhs.true244
  %fld262 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1
  %rtx264 = bitcast [1 x %union.rtunion_def]* %fld262 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx264, align 8, !tbaa !5
  %call265 = tail call i32 @true_regnum(%struct.rtx_def* %25) #6
  %cmp266 = icmp eq i32 %call265, %regno.0.ph
  br i1 %cmp266, label %land.lhs.true268, label %lor.lhs.false275

land.lhs.true268:                                 ; preds = %land.lhs.true261
  %26 = load %struct.rtx_def** %rtx247, align 8, !tbaa !5
  %call272 = tail call i32 @true_regnum(%struct.rtx_def* %26) #6
  %cmp273 = icmp sgt i32 %call272, -1
  br i1 %cmp273, label %if.then459, label %lor.lhs.false275

lor.lhs.false275:                                 ; preds = %land.lhs.true241, %land.lhs.true268, %land.lhs.true261
  %tobool276 = icmp ne i32 %goal_const.02525, 0
  br i1 %tobool276, label %land.lhs.true277, label %lor.lhs.false296

land.lhs.true277:                                 ; preds = %lor.lhs.false275
  %arrayidx279 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 1
  %rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx280, align 8, !tbaa !5
  %call281 = tail call i32 @rtx_equal_p(%struct.rtx_def* %27, %struct.rtx_def* %goal) #6
  %tobool282 = icmp eq i32 %call281, 0
  br i1 %tobool282, label %lor.lhs.false296, label %land.lhs.true283

land.lhs.true283:                                 ; preds = %land.lhs.true277
  %arrayidx285 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 0
  %rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx286, align 8, !tbaa !5
  %call287 = tail call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %28, %struct.rtx_def* %goal) #7
  %tobool288 = icmp eq i32 %call287, 0
  br i1 %tobool288, label %land.lhs.true289, label %lor.lhs.false296

land.lhs.true289:                                 ; preds = %land.lhs.true283
  %29 = load %struct.rtx_def** %rtx286, align 8, !tbaa !5
  %call293 = tail call i32 @true_regnum(%struct.rtx_def* %29) #6
  %cmp294 = icmp sgt i32 %call293, -1
  br i1 %cmp294, label %if.then459, label %lor.lhs.false296

lor.lhs.false296:                                 ; preds = %land.lhs.true283, %land.lhs.true277, %land.lhs.true289, %lor.lhs.false275
  br i1 %tobool297, label %land.lhs.true298, label %lor.lhs.false326

land.lhs.true298:                                 ; preds = %lor.lhs.false296
  %fld299 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1
  %rtx301 = bitcast [1 x %union.rtunion_def]* %fld299 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx301, align 8, !tbaa !5
  %call302 = tail call i32 @true_regnum(%struct.rtx_def* %30) #6
  %cmp303 = icmp sgt i32 %call302, -1
  %arrayidx307 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 1
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  br i1 %cmp303, label %land.lhs.true305, label %land.lhs.true313

land.lhs.true305:                                 ; preds = %land.lhs.true298
  %31 = load %struct.rtx_def** %rtx308, align 8, !tbaa !5
  %call309 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %goal, %struct.rtx_def* %31) #6
  %tobool310 = icmp eq i32 %call309, 0
  br i1 %tobool310, label %land.lhs.true313, label %if.then459

land.lhs.true313:                                 ; preds = %land.lhs.true298, %land.lhs.true305
  %32 = load %struct.rtx_def** %rtx308, align 8, !tbaa !5
  %call317 = tail call i32 @true_regnum(%struct.rtx_def* %32) #6
  %cmp318 = icmp sgt i32 %call317, -1
  br i1 %cmp318, label %land.lhs.true320, label %lor.lhs.false326

land.lhs.true320:                                 ; preds = %land.lhs.true313
  %arrayidx322 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 0
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx323, align 8, !tbaa !5
  %call324 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %goal, %struct.rtx_def* %33) #6
  %tobool325 = icmp eq i32 %call324, 0
  br i1 %tobool325, label %lor.lhs.false326, label %if.then459

lor.lhs.false326:                                 ; preds = %lor.lhs.false296, %land.lhs.true320, %land.lhs.true313
  br i1 %tobool276, label %land.lhs.true328, label %while.body.backedge

land.lhs.true328:                                 ; preds = %lor.lhs.false326
  %arrayidx330 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 6
  %rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx331, align 8, !tbaa !5
  %cmp332 = icmp eq %struct.rtx_def* %34, null
  br i1 %cmp332, label %land.lhs.true404, label %land.lhs.true334

land.lhs.true334:                                 ; preds = %land.lhs.true328
  %call335 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %16, i32 3, %struct.rtx_def* null) #6
  %tobool336 = icmp eq %struct.rtx_def* %call335, null
  br i1 %tobool336, label %land.lhs.true404, label %land.lhs.true337

land.lhs.true337:                                 ; preds = %land.lhs.true334
  %arrayidx339 = getelementptr inbounds %struct.rtx_def* %call335, i64 0, i32 1, i64 0
  %rtx340 = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx340, align 8, !tbaa !5
  %call341 = tail call i32 @rtx_equal_p(%struct.rtx_def* %35, %struct.rtx_def* %goal) #6
  %tobool342 = icmp eq i32 %call341, 0
  %arrayidx352.pre = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 0
  %rtx353.pre = bitcast %union.rtunion_def* %arrayidx352.pre to %struct.rtx_def**
  br i1 %tobool342, label %lor.lhs.false350, label %land.lhs.true343

land.lhs.true343:                                 ; preds = %land.lhs.true337
  %36 = load %struct.rtx_def** %rtx353.pre, align 8, !tbaa !5
  %call347 = tail call i32 @true_regnum(%struct.rtx_def* %36) #6
  %cmp348 = icmp sgt i32 %call347, -1
  br i1 %cmp348, label %if.then459, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %land.lhs.true337, %land.lhs.true343
  %37 = load %struct.rtx_def** %rtx353.pre, align 8, !tbaa !5
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load354 = load i32* %38, align 8
  %bf.clear355 = and i32 %bf.load354, 65535
  %cmp356 = icmp eq i32 %bf.clear355, 61
  br i1 %cmp356, label %land.lhs.true358, label %land.lhs.true404

land.lhs.true358:                                 ; preds = %lor.lhs.false350
  %39 = load %struct.rtx_def** %rtx340, align 8, !tbaa !5
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load362 = load i32* %40, align 8
  %bf.clear363 = and i32 %bf.load362, 65535
  %cmp364 = icmp eq i32 %bf.clear363, 55
  br i1 %cmp364, label %land.lhs.true366, label %land.lhs.true404

land.lhs.true366:                                 ; preds = %land.lhs.true358
  %bf.lshr371 = lshr i32 %bf.load362, 16
  %bf.clear372 = and i32 %bf.lshr371, 255
  %idxprom3732392 = zext i32 %bf.clear372 to i64
  %arrayidx374 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom3732392
  %41 = load i32* %arrayidx374, align 4, !tbaa !4
  %cmp375 = icmp eq i32 %41, 2
  br i1 %cmp375, label %land.lhs.true377, label %land.lhs.true404

land.lhs.true377:                                 ; preds = %land.lhs.true366
  %bf.load378 = load i32* %15, align 8
  %bf.clear379 = and i32 %bf.load378, 65535
  %cmp380 = icmp eq i32 %bf.clear379, 54
  br i1 %cmp380, label %land.lhs.true382, label %land.lhs.true404

land.lhs.true382:                                 ; preds = %land.lhs.true377
  %call386 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %39, i32 0, i32 0, i32 0) #6
  %cmp387 = icmp eq %struct.rtx_def* %call386, null
  br i1 %cmp387, label %land.lhs.true404, label %land.lhs.true389

land.lhs.true389:                                 ; preds = %land.lhs.true382
  %call390 = tail call i32 @rtx_equal_p(%struct.rtx_def* %goal, %struct.rtx_def* %call386) #6
  %tobool391 = icmp eq i32 %call390, 0
  br i1 %tobool391, label %land.lhs.true404, label %land.lhs.true392

land.lhs.true392:                                 ; preds = %land.lhs.true389
  %42 = load %struct.rtx_def** %rtx353.pre, align 8, !tbaa !5
  %call396 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %42, i32 0, i32 0, i32 0) #6
  %tobool397 = icmp eq %struct.rtx_def* %call396, null
  br i1 %tobool397, label %land.lhs.true404, label %land.lhs.true398

land.lhs.true398:                                 ; preds = %land.lhs.true392
  %call399 = tail call i32 @true_regnum(%struct.rtx_def* %call396) #6
  %cmp400 = icmp sgt i32 %call399, -1
  br i1 %cmp400, label %if.then459, label %land.lhs.true404

land.lhs.true404:                                 ; preds = %lor.lhs.false350, %land.lhs.true358, %land.lhs.true366, %land.lhs.true377, %land.lhs.true398, %land.lhs.true334, %land.lhs.true382, %land.lhs.true389, %land.lhs.true392, %land.lhs.true328
  %call405 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %16, i32 3, %struct.rtx_def* null) #6
  %tobool406 = icmp eq %struct.rtx_def* %call405, null
  br i1 %tobool406, label %while.body.backedge, label %land.lhs.true407

land.lhs.true407:                                 ; preds = %land.lhs.true404
  %arrayidx409 = getelementptr inbounds %struct.rtx_def* %cond238, i64 0, i32 1, i64 0
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx410, align 8, !tbaa !5
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load411 = load i32* %44, align 8
  %bf.clear412 = and i32 %bf.load411, 65535
  %cmp413 = icmp eq i32 %bf.clear412, 61
  br i1 %cmp413, label %land.lhs.true415, label %while.body.backedge

land.lhs.true415:                                 ; preds = %land.lhs.true407
  %arrayidx417 = getelementptr inbounds %struct.rtx_def* %call405, i64 0, i32 1, i64 0
  %rtx418 = bitcast %union.rtunion_def* %arrayidx417 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx418, align 8, !tbaa !5
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load419 = load i32* %46, align 8
  %bf.clear420 = and i32 %bf.load419, 65535
  %cmp421 = icmp eq i32 %bf.clear420, 55
  br i1 %cmp421, label %land.lhs.true423, label %while.body.backedge

land.lhs.true423:                                 ; preds = %land.lhs.true415
  %bf.lshr428 = lshr i32 %bf.load419, 16
  %bf.clear429 = and i32 %bf.lshr428, 255
  %idxprom4302331 = zext i32 %bf.clear429 to i64
  %arrayidx431 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom4302331
  %47 = load i32* %arrayidx431, align 4, !tbaa !4
  %cmp432 = icmp eq i32 %47, 2
  br i1 %cmp432, label %land.lhs.true434, label %while.body.backedge

land.lhs.true434:                                 ; preds = %land.lhs.true423
  %bf.load435 = load i32* %15, align 8
  %bf.clear436 = and i32 %bf.load435, 65535
  %cmp437 = icmp eq i32 %bf.clear436, 54
  br i1 %cmp437, label %land.lhs.true439, label %while.body.backedge

land.lhs.true439:                                 ; preds = %land.lhs.true434
  %call443 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %45, i32 1, i32 0, i32 0) #6
  %cmp444 = icmp eq %struct.rtx_def* %call443, null
  br i1 %cmp444, label %while.body.backedge, label %land.lhs.true446

land.lhs.true446:                                 ; preds = %land.lhs.true439
  %call447 = tail call i32 @rtx_equal_p(%struct.rtx_def* %goal, %struct.rtx_def* %call443) #6
  %tobool448 = icmp eq i32 %call447, 0
  br i1 %tobool448, label %while.body.backedge, label %land.lhs.true449

land.lhs.true449:                                 ; preds = %land.lhs.true446
  %48 = load %struct.rtx_def** %rtx410, align 8, !tbaa !5
  %call453 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %48, i32 1, i32 0, i32 0) #6
  %tobool454 = icmp eq %struct.rtx_def* %call453, null
  br i1 %tobool454, label %while.body.backedge, label %land.lhs.true455

land.lhs.true455:                                 ; preds = %land.lhs.true449
  %call456 = tail call i32 @true_regnum(%struct.rtx_def* %call453) #6
  %cmp457 = icmp sgt i32 %call456, -1
  br i1 %cmp457, label %if.then459, label %while.body.backedge

if.then459:                                       ; preds = %land.lhs.true305, %land.lhs.true320, %land.lhs.true455, %land.lhs.true398, %land.lhs.true343, %land.lhs.true289, %land.lhs.true268, %land.lhs.true251
  %valueno.0 = phi i32 [ %call255, %land.lhs.true251 ], [ %call272, %land.lhs.true268 ], [ %call302, %land.lhs.true305 ], [ %call317, %land.lhs.true320 ], [ %call347, %land.lhs.true343 ], [ %call399, %land.lhs.true398 ], [ %call456, %land.lhs.true455 ], [ %call293, %land.lhs.true289 ]
  %valtry.0 = phi %struct.rtx_def* [ %24, %land.lhs.true251 ], [ %26, %land.lhs.true268 ], [ %30, %land.lhs.true305 ], [ %32, %land.lhs.true320 ], [ %36, %land.lhs.true343 ], [ %call396, %land.lhs.true398 ], [ %call453, %land.lhs.true455 ], [ %29, %land.lhs.true289 ]
  br i1 %cmp460, label %if.then462, label %if.else467

if.then462:                                       ; preds = %if.then459
  %cmp463 = icmp eq i32 %valueno.0, %other
  br i1 %cmp463, label %if.end549, label %while.body.backedge

if.else467:                                       ; preds = %if.then459
  %cmp468 = icmp ugt i32 %valueno.0, 52
  br i1 %cmp468, label %while.body.backedge, label %if.else471

while.body.backedge:                              ; preds = %for.body, %if.else467, %land.lhs.true407, %land.lhs.true415, %land.lhs.true423, %land.lhs.true434, %land.lhs.true455, %lor.lhs.false211, %cond.end237, %land.lhs.true404, %land.lhs.true439, %land.lhs.true446, %land.lhs.true449, %if.then462, %lor.lhs.false198, %lor.lhs.false326, %if.then215
  %goal_const.0.be = phi i32 [ %goal_const.02525, %if.then462 ], [ %goal_const.02525, %if.else467 ], [ %goal_const.02525, %land.lhs.true455 ], [ %goal_const.02525, %land.lhs.true449 ], [ %goal_const.02525, %land.lhs.true446 ], [ %goal_const.02525, %land.lhs.true439 ], [ %goal_const.02525, %land.lhs.true434 ], [ %goal_const.02525, %land.lhs.true423 ], [ %goal_const.02525, %land.lhs.true415 ], [ %goal_const.02525, %land.lhs.true407 ], [ %goal_const.02525, %land.lhs.true404 ], [ %goal_const.02525, %cond.end237 ], [ %goal_const.02525, %lor.lhs.false211 ], [ %goal_const.02525, %lor.lhs.false198 ], [ 0, %lor.lhs.false326 ], [ %goal_const.02525, %if.then215 ], [ %goal_const.02525, %for.body ]
  %arrayidx195 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 1
  %rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx196, align 8, !tbaa !5
  %cmp197 = icmp eq %struct.rtx_def* %49, null
  br i1 %cmp197, label %return, label %lor.lhs.false198

if.else471:                                       ; preds = %if.else467
  %valueno.0.off = add i32 %valueno.0, -8
  %50 = icmp ult i32 %valueno.0.off, 8
  %valueno.0.off2332 = add i32 %valueno.0, -21
  %51 = icmp ult i32 %valueno.0.off2332, 8
  %or.cond2395 = or i1 %50, %51
  %valueno.0.off2333 = add i32 %valueno.0, -45
  %52 = icmp ult i32 %valueno.0.off2333, 8
  %or.cond2397 = or i1 %or.cond2395, %52
  %valueno.0.off2334 = add i32 %valueno.0, -29
  %53 = icmp ult i32 %valueno.0.off2334, 8
  %or.cond2399 = or i1 %or.cond2397, %53
  br i1 %or.cond2399, label %cond.true495, label %cond.false505

cond.true495:                                     ; preds = %if.else471
  %54 = load i32* %arrayidx497, align 4, !tbaa !4
  %cmp498 = icmp eq i32 %54, 5
  br i1 %cmp498, label %for.cond, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true495
  %cmp502 = icmp eq i32 %54, 6
  %phitmp2391 = select i1 %cmp502, i32 2, i32 1
  br label %for.cond

cond.false505:                                    ; preds = %if.else471
  switch i32 %mode, label %cond.false518 [
    i32 18, label %cond.true508
    i32 24, label %cond.true514
  ]

cond.true508:                                     ; preds = %cond.false505
  %55 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %55, 25
  %56 = and i32 %and, 1
  %57 = xor i32 %56, 3
  br label %for.cond

cond.true514:                                     ; preds = %cond.false505
  %58 = load i32* @target_flags, align 4, !tbaa !3
  %and515 = lshr i32 %58, 24
  %59 = and i32 %and515, 2
  %60 = xor i32 %59, 6
  br label %for.cond

cond.false518:                                    ; preds = %cond.false505
  %61 = load i8* %arrayidx520, align 1, !tbaa !1
  %conv521 = zext i8 %61 to i32
  %62 = load i32* @target_flags, align 4, !tbaa !3
  %and522 = lshr i32 %62, 23
  %63 = and i32 %and522, 4
  %64 = add i32 %63, 4
  %add = add i32 %conv521, -1
  %sub = add i32 %add, %64
  %div = sdiv i32 %sub, %64
  br label %for.cond

for.cond:                                         ; preds = %cond.true514, %cond.false518, %cond.true508, %lor.rhs, %cond.true495, %for.body
  %i.0.in = phi i32 [ %i.0, %for.body ], [ %60, %cond.true514 ], [ %div, %cond.false518 ], [ %57, %cond.true508 ], [ %phitmp2391, %lor.rhs ], [ 2, %cond.true495 ]
  %i.0 = add nsw i32 %i.0.in, -1
  %cmp535 = icmp sgt i32 %i.0.in, 0
  br i1 %cmp535, label %for.body, label %if.end549

for.body:                                         ; preds = %for.cond
  %65 = load i64* %arrayidx538, align 8, !tbaa !6
  %add539 = add nsw i32 %i.0, %valueno.0
  %sh_prom = zext i32 %add539 to i64
  %shl = shl i64 1, %sh_prom
  %and540 = and i64 %65, %shl
  %tobool541 = icmp eq i64 %and540, 0
  br i1 %tobool541, label %while.body.backedge, label %for.cond

if.end549:                                        ; preds = %if.then462, %for.cond
  %valueno.02555 = phi i32 [ %valueno.0, %for.cond ], [ %other, %if.then462 ]
  %arrayidx553 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 6
  %rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**
  %66 = load %struct.rtx_def** %rtx554, align 8, !tbaa !5
  %cmp555 = icmp eq %struct.rtx_def* %66, null
  br i1 %cmp555, label %if.end561, label %land.lhs.true557

land.lhs.true557:                                 ; preds = %if.end549
  %call558 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %16, i32 10, %struct.rtx_def* %valtry.0) #6
  %tobool559 = icmp eq %struct.rtx_def* %call558, null
  br i1 %tobool559, label %if.end561, label %return

if.end561:                                        ; preds = %land.lhs.true557, %if.end549
  %cmp562 = icmp eq i32 %valueno.02555, 7
  %cmp565 = icmp eq i32 %regno.0.ph, 7
  %or.cond2400 = or i1 %cmp562, %cmp565
  br i1 %or.cond2400, label %if.then572, label %lor.lhs.false567

lor.lhs.false567:                                 ; preds = %if.end561
  %tobool568 = icmp eq i32 %goal_mem.0.ph, 0
  br i1 %tobool568, label %if.end573, label %land.lhs.true569

land.lhs.true569:                                 ; preds = %lor.lhs.false567
  %67 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !5
  %call570 = tail call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %67, %struct.rtx_def* %goal) #7
  %tobool571 = icmp eq i32 %call570, 0
  br i1 %tobool571, label %if.end573, label %if.then572

if.then572:                                       ; preds = %land.lhs.true569, %if.end561
  br label %if.end573

if.end573:                                        ; preds = %land.lhs.true569, %lor.lhs.false567, %if.then572
  %need_stable_sp.1 = phi i32 [ 1, %if.then572 ], [ %need_stable_sp.0.ph, %land.lhs.true569 ], [ %need_stable_sp.0.ph, %lor.lhs.false567 ]
  %68 = bitcast %struct.rtx_def* %valtry.0 to i32*
  %bf.load574 = load i32* %68, align 8
  %bf.lshr575 = lshr i32 %bf.load574, 16
  %bf.clear576 = and i32 %bf.lshr575, 255
  %cmp577 = icmp eq i32 %bf.clear576, %mode
  br i1 %cmp577, label %if.end580, label %return

if.end580:                                        ; preds = %if.end573
  br i1 %tobool297, label %land.lhs.true582, label %land.lhs.true692.critedge

land.lhs.true582:                                 ; preds = %if.end580
  %69 = load %struct.rtx_def** %rtx224, align 8, !tbaa !5
  %70 = bitcast %struct.rtx_def* %69 to i32*
  %bf.load594 = load i32* %70, align 8
  %bf.clear595 = and i32 %bf.load594, 65535
  %cmp596 = icmp eq i32 %bf.clear595, 47
  br i1 %cmp596, label %cond.end610, label %cond.false602

cond.false602:                                    ; preds = %land.lhs.true582
  %call606 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %16, %struct.rtx_def* %69) #6
  br label %cond.end610

cond.end610:                                      ; preds = %land.lhs.true582, %cond.false602
  %cond611 = phi %struct.rtx_def* [ %call606, %cond.false602 ], [ %69, %land.lhs.true582 ]
  %arrayidx613 = getelementptr inbounds %struct.rtx_def* %cond611, i64 0, i32 1, i64 0
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx614, align 8, !tbaa !5
  %cmp615 = icmp eq %struct.rtx_def* %valtry.0, %71
  br i1 %cmp615, label %land.lhs.true617, label %if.end839

land.lhs.true617:                                 ; preds = %cond.end610
  %valueno.0.off2386 = add i32 %valueno.02555, -8
  %72 = icmp ult i32 %valueno.0.off2386, 8
  %valueno.0.off2387 = add i32 %valueno.02555, -21
  %73 = icmp ult i32 %valueno.0.off2387, 8
  %or.cond2402 = or i1 %72, %73
  %valueno.0.off2388 = add i32 %valueno.02555, -45
  %74 = icmp ult i32 %valueno.0.off2388, 8
  %or.cond2404 = or i1 %or.cond2402, %74
  %valueno.0.off2389 = add i32 %valueno.02555, -29
  %75 = icmp ult i32 %valueno.0.off2389, 8
  %or.cond2406 = or i1 %or.cond2404, %75
  br i1 %or.cond2406, label %cond.true641, label %cond.false653

cond.true641:                                     ; preds = %land.lhs.true617
  %76 = load i32* %arrayidx497, align 4, !tbaa !4
  %cmp644 = icmp eq i32 %76, 5
  br i1 %cmp644, label %cond.end684, label %lor.rhs646

lor.rhs646:                                       ; preds = %cond.true641
  %cmp649 = icmp eq i32 %76, 6
  %phitmp2390 = select i1 %cmp649, i32 2, i32 1
  br label %cond.end684

cond.false653:                                    ; preds = %land.lhs.true617
  switch i32 %mode, label %cond.false667 [
    i32 18, label %cond.true656
    i32 24, label %cond.true663
  ]

cond.true656:                                     ; preds = %cond.false653
  %77 = load i32* @target_flags, align 4, !tbaa !3
  %and657 = lshr i32 %77, 25
  %78 = and i32 %and657, 1
  %79 = xor i32 %78, 3
  br label %cond.end684

cond.true663:                                     ; preds = %cond.false653
  %80 = load i32* @target_flags, align 4, !tbaa !3
  %and664 = lshr i32 %80, 24
  %81 = and i32 %and664, 2
  %82 = xor i32 %81, 6
  br label %cond.end684

cond.false667:                                    ; preds = %cond.false653
  %83 = load i8* %arrayidx520, align 1, !tbaa !1
  %conv670 = zext i8 %83 to i32
  %84 = load i32* @target_flags, align 4, !tbaa !3
  %and671 = lshr i32 %84, 23
  %85 = and i32 %and671, 4
  %86 = add i32 %85, 4
  %add674 = add i32 %conv670, -1
  %sub675 = add i32 %add674, %86
  %div679 = sdiv i32 %sub675, %86
  br label %cond.end684

cond.end684:                                      ; preds = %cond.true641, %lor.rhs646, %cond.true656, %cond.false667, %cond.true663
  %cond685 = phi i32 [ %79, %cond.true656 ], [ %82, %cond.true663 ], [ %div679, %cond.false667 ], [ 2, %cond.true641 ], [ %phitmp2390, %lor.rhs646 ]
  %add686 = add nsw i32 %cond685, %valueno.02555
  %call687 = tail call i32 @refers_to_regno_for_reload_p(i32 %valueno.02555, i32 %add686, %struct.rtx_def* %goal, %struct.rtx_def** null) #7
  %tobool688 = icmp eq i32 %call687, 0
  br i1 %tobool688, label %if.end839, label %return

land.lhs.true692.critedge:                        ; preds = %if.end580
  %tobool693.old = icmp eq i32 %goal_const.02525, 0
  br i1 %tobool693.old, label %land.lhs.true694, label %if.end839

land.lhs.true694:                                 ; preds = %land.lhs.true692.critedge
  %regno.0.off = add i32 %regno.0.ph, -8
  %87 = icmp ult i32 %regno.0.off, 8
  %regno.0.off2335 = add i32 %regno.0.ph, -21
  %88 = icmp ult i32 %regno.0.off2335, 8
  %or.cond2409 = or i1 %87, %88
  %regno.0.off2336 = add i32 %regno.0.ph, -45
  %89 = icmp ult i32 %regno.0.off2336, 8
  %or.cond2411 = or i1 %or.cond2409, %89
  %regno.0.off2337 = add i32 %regno.0.ph, -29
  %90 = icmp ult i32 %regno.0.off2337, 8
  %or.cond2413 = or i1 %or.cond2411, %90
  br i1 %or.cond2413, label %cond.true718, label %cond.false730

cond.true718:                                     ; preds = %land.lhs.true694
  %91 = load i32* %arrayidx497, align 4, !tbaa !4
  %cmp721 = icmp eq i32 %91, 5
  br i1 %cmp721, label %cond.end761, label %lor.rhs723

lor.rhs723:                                       ; preds = %cond.true718
  %cmp726 = icmp eq i32 %91, 6
  %phitmp2384 = select i1 %cmp726, i32 2, i32 1
  br label %cond.end761

cond.false730:                                    ; preds = %land.lhs.true694
  switch i32 %mode, label %cond.false744 [
    i32 18, label %cond.true733
    i32 24, label %cond.true740
  ]

cond.true733:                                     ; preds = %cond.false730
  %92 = load i32* @target_flags, align 4, !tbaa !3
  %and734 = lshr i32 %92, 25
  %93 = and i32 %and734, 1
  %94 = xor i32 %93, 3
  br label %cond.end761

cond.true740:                                     ; preds = %cond.false730
  %95 = load i32* @target_flags, align 4, !tbaa !3
  %and741 = lshr i32 %95, 24
  %96 = and i32 %and741, 2
  %97 = xor i32 %96, 6
  br label %cond.end761

cond.false744:                                    ; preds = %cond.false730
  %98 = load i8* %arrayidx520, align 1, !tbaa !1
  %conv747 = zext i8 %98 to i32
  %99 = load i32* @target_flags, align 4, !tbaa !3
  %and748 = lshr i32 %99, 23
  %100 = and i32 %and748, 4
  %101 = add i32 %100, 4
  %add751 = add i32 %conv747, -1
  %sub752 = add i32 %add751, %101
  %div756 = sdiv i32 %sub752, %101
  br label %cond.end761

cond.end761:                                      ; preds = %cond.true718, %lor.rhs723, %cond.true733, %cond.false744, %cond.true740
  %cond762 = phi i32 [ %94, %cond.true733 ], [ %97, %cond.true740 ], [ %div756, %cond.false744 ], [ 2, %cond.true718 ], [ %phitmp2384, %lor.rhs723 ]
  %add763 = add nsw i32 %cond762, %regno.0.ph
  %cmp764 = icmp sgt i32 %add763, %valueno.02555
  br i1 %cmp764, label %land.lhs.true766, label %if.end839

land.lhs.true766:                                 ; preds = %cond.end761
  %valueno.0.off2379 = add i32 %valueno.02555, -8
  %102 = icmp ult i32 %valueno.0.off2379, 8
  %valueno.0.off2380 = add i32 %valueno.02555, -21
  %103 = icmp ult i32 %valueno.0.off2380, 8
  %or.cond2415 = or i1 %102, %103
  %valueno.0.off2381 = add i32 %valueno.02555, -45
  %104 = icmp ult i32 %valueno.0.off2381, 8
  %or.cond2417 = or i1 %or.cond2415, %104
  %valueno.0.off2382 = add i32 %valueno.02555, -29
  %105 = icmp ult i32 %valueno.0.off2382, 8
  %or.cond2419 = or i1 %or.cond2417, %105
  br i1 %or.cond2419, label %cond.true790, label %cond.false802

cond.true790:                                     ; preds = %land.lhs.true766
  %106 = load i32* %arrayidx497, align 4, !tbaa !4
  %cmp793 = icmp eq i32 %106, 5
  br i1 %cmp793, label %cond.end833, label %lor.rhs795

lor.rhs795:                                       ; preds = %cond.true790
  %cmp798 = icmp eq i32 %106, 6
  %phitmp2383 = select i1 %cmp798, i32 2, i32 1
  br label %cond.end833

cond.false802:                                    ; preds = %land.lhs.true766
  switch i32 %mode, label %cond.false816 [
    i32 18, label %cond.true805
    i32 24, label %cond.true812
  ]

cond.true805:                                     ; preds = %cond.false802
  %107 = load i32* @target_flags, align 4, !tbaa !3
  %and806 = lshr i32 %107, 25
  %108 = and i32 %and806, 1
  %109 = xor i32 %108, 3
  br label %cond.end833

cond.true812:                                     ; preds = %cond.false802
  %110 = load i32* @target_flags, align 4, !tbaa !3
  %and813 = lshr i32 %110, 24
  %111 = and i32 %and813, 2
  %112 = xor i32 %111, 6
  br label %cond.end833

cond.false816:                                    ; preds = %cond.false802
  %113 = load i8* %arrayidx520, align 1, !tbaa !1
  %conv819 = zext i8 %113 to i32
  %114 = load i32* @target_flags, align 4, !tbaa !3
  %and820 = lshr i32 %114, 23
  %115 = and i32 %and820, 4
  %116 = add i32 %115, 4
  %add823 = add i32 %conv819, -1
  %sub824 = add i32 %add823, %116
  %div828 = sdiv i32 %sub824, %116
  br label %cond.end833

cond.end833:                                      ; preds = %cond.true790, %lor.rhs795, %cond.true805, %cond.false816, %cond.true812
  %cond834 = phi i32 [ %109, %cond.true805 ], [ %112, %cond.true812 ], [ %div828, %cond.false816 ], [ 2, %cond.true790 ], [ %phitmp2383, %lor.rhs795 ]
  %add835 = add nsw i32 %cond834, %valueno.02555
  %cmp836 = icmp slt i32 %regno.0.ph, %add835
  br i1 %cmp836, label %return, label %if.end839

if.end839:                                        ; preds = %cond.end610, %cond.end684, %land.lhs.true692.critedge, %cond.end833, %cond.end761
  %regno.0.off2338 = add i32 %regno.0.ph, -8
  %117 = icmp ult i32 %regno.0.off2338, 8
  %regno.0.off2339 = add i32 %regno.0.ph, -21
  %118 = icmp ult i32 %regno.0.off2339, 8
  %or.cond2421 = or i1 %117, %118
  %regno.0.off2340 = add i32 %regno.0.ph, -45
  %119 = icmp ult i32 %regno.0.off2340, 8
  %or.cond2423 = or i1 %or.cond2421, %119
  %regno.0.off2341 = add i32 %regno.0.ph, -29
  %120 = icmp ult i32 %regno.0.off2341, 8
  %or.cond2425 = or i1 %or.cond2423, %120
  br i1 %or.cond2425, label %cond.true863, label %cond.false875

cond.true863:                                     ; preds = %if.end839
  %121 = load i32* %arrayidx497, align 4, !tbaa !4
  %cmp866 = icmp eq i32 %121, 5
  br i1 %cmp866, label %cond.end906, label %lor.rhs868

lor.rhs868:                                       ; preds = %cond.true863
  %cmp871 = icmp eq i32 %121, 6
  %phitmp2378 = select i1 %cmp871, i32 2, i32 1
  br label %cond.end906

cond.false875:                                    ; preds = %if.end839
  switch i32 %mode, label %cond.false889 [
    i32 18, label %cond.true878
    i32 24, label %cond.true885
  ]

cond.true878:                                     ; preds = %cond.false875
  %122 = load i32* @target_flags, align 4, !tbaa !3
  %and879 = lshr i32 %122, 25
  %123 = and i32 %and879, 1
  %124 = xor i32 %123, 3
  br label %cond.end906

cond.true885:                                     ; preds = %cond.false875
  %125 = load i32* @target_flags, align 4, !tbaa !3
  %and886 = lshr i32 %125, 24
  %126 = and i32 %and886, 2
  %127 = xor i32 %126, 6
  br label %cond.end906

cond.false889:                                    ; preds = %cond.false875
  %128 = load i8* %arrayidx520, align 1, !tbaa !1
  %conv892 = zext i8 %128 to i32
  %129 = load i32* @target_flags, align 4, !tbaa !3
  %and893 = lshr i32 %129, 23
  %130 = and i32 %and893, 4
  %131 = add i32 %130, 4
  %add896 = add i32 %conv892, -1
  %sub897 = add i32 %add896, %131
  %div901 = sdiv i32 %sub897, %131
  br label %cond.end906

cond.end906:                                      ; preds = %cond.true863, %lor.rhs868, %cond.true878, %cond.false889, %cond.true885
  %cond907 = phi i32 [ %124, %cond.true878 ], [ %127, %cond.true885 ], [ %div901, %cond.false889 ], [ 2, %cond.true863 ], [ %phitmp2378, %lor.rhs868 ]
  %valueno.0.off2342 = add i32 %valueno.02555, -8
  %132 = icmp ult i32 %valueno.0.off2342, 8
  %valueno.0.off2343 = add i32 %valueno.02555, -21
  %133 = icmp ult i32 %valueno.0.off2343, 8
  %or.cond2427 = or i1 %132, %133
  %valueno.0.off2344 = add i32 %valueno.02555, -45
  %134 = icmp ult i32 %valueno.0.off2344, 8
  %or.cond2429 = or i1 %or.cond2427, %134
  %valueno.0.off2345 = add i32 %valueno.02555, -29
  %135 = icmp ult i32 %valueno.0.off2345, 8
  %or.cond2431 = or i1 %or.cond2429, %135
  br i1 %or.cond2431, label %cond.true931, label %cond.false943

cond.true931:                                     ; preds = %cond.end906
  %136 = load i32* %arrayidx497, align 4, !tbaa !4
  %cmp934 = icmp eq i32 %136, 5
  br i1 %cmp934, label %cond.end974, label %lor.rhs936

lor.rhs936:                                       ; preds = %cond.true931
  %cmp939 = icmp eq i32 %136, 6
  %phitmp2377 = select i1 %cmp939, i32 2, i32 1
  br label %cond.end974

cond.false943:                                    ; preds = %cond.end906
  switch i32 %mode, label %cond.false957 [
    i32 18, label %cond.true946
    i32 24, label %cond.true953
  ]

cond.true946:                                     ; preds = %cond.false943
  %137 = load i32* @target_flags, align 4, !tbaa !3
  %and947 = lshr i32 %137, 25
  %138 = and i32 %and947, 1
  %139 = xor i32 %138, 3
  br label %cond.end974

cond.true953:                                     ; preds = %cond.false943
  %140 = load i32* @target_flags, align 4, !tbaa !3
  %and954 = lshr i32 %140, 24
  %141 = and i32 %and954, 2
  %142 = xor i32 %141, 6
  br label %cond.end974

cond.false957:                                    ; preds = %cond.false943
  %143 = load i8* %arrayidx520, align 1, !tbaa !1
  %conv960 = zext i8 %143 to i32
  %144 = load i32* @target_flags, align 4, !tbaa !3
  %and961 = lshr i32 %144, 23
  %145 = and i32 %and961, 4
  %146 = add i32 %145, 4
  %add964 = add i32 %conv960, -1
  %sub965 = add i32 %add964, %146
  %div969 = sdiv i32 %sub965, %146
  br label %cond.end974

cond.end974:                                      ; preds = %cond.true931, %lor.rhs936, %cond.true946, %cond.false957, %cond.true953
  %cond975 = phi i32 [ %139, %cond.true946 ], [ %142, %cond.true953 ], [ %div969, %cond.false957 ], [ 2, %cond.true931 ], [ %phitmp2377, %lor.rhs936 ]
  switch i64 %magicptr, label %for.cond983.preheader [
    i64 0, label %if.end1132
    i64 1, label %for.cond1002.preheader
  ]

for.cond983.preheader:                            ; preds = %cond.end974
  %cmp9842504 = icmp sgt i32 %cond975, 0
  br i1 %cmp9842504, label %for.body986.lr.ph, label %if.end997

for.body986.lr.ph:                                ; preds = %for.cond983.preheader
  %147 = sext i32 %valueno.02555 to i64
  br label %for.body986

for.cond983:                                      ; preds = %for.body986
  %148 = trunc i64 %indvars.iv.next2544 to i32
  %cmp984 = icmp slt i32 %148, %cond975
  br i1 %cmp984, label %for.body986, label %if.end997

for.body986:                                      ; preds = %for.body986.lr.ph, %for.cond983
  %indvars.iv2543 = phi i64 [ 0, %for.body986.lr.ph ], [ %indvars.iv.next2544, %for.cond983 ]
  %149 = add nsw i64 %indvars.iv2543, %147
  %arrayidx989 = getelementptr inbounds i16* %reload_reg_p, i64 %149
  %150 = load i16* %arrayidx989, align 2, !tbaa !0
  %cmp991 = icmp sgt i16 %150, -1
  %indvars.iv.next2544 = add i64 %indvars.iv2543, 1
  br i1 %cmp991, label %return, label %for.cond983

if.end997:                                        ; preds = %for.cond983, %for.cond983.preheader
  br i1 %cmp208, label %if.end1132, label %for.cond1002.preheader

for.cond1002.preheader:                           ; preds = %cond.end974, %if.end997
  %151 = load i32* @n_reloads, align 4, !tbaa !3
  %cmp10032501 = icmp sgt i32 %151, 0
  br i1 %cmp10032501, label %for.body1005.lr.ph, label %if.end1132

for.body1005.lr.ph:                               ; preds = %for.cond1002.preheader
  %add1119 = add nsw i32 %cond975, %valueno.02555
  %152 = load i32* @target_flags, align 4, !tbaa !3
  %and1104 = lshr i32 %152, 23
  %153 = and i32 %and1104, 4
  %154 = add i32 %153, 4
  %and1078 = lshr i32 %152, 25
  %155 = and i32 %and1078, 1
  %156 = xor i32 %155, 3
  %and1091 = lshr i32 %152, 24
  %157 = and i32 %and1091, 2
  %158 = xor i32 %157, 6
  br label %for.body1005

for.body1005:                                     ; preds = %for.body1005.lr.ph, %for.inc1129
  %indvars.iv2541 = phi i64 [ 0, %for.body1005.lr.ph ], [ %indvars.iv.next2542, %for.inc1129 ]
  %reg_rtx = getelementptr inbounds [180 x %struct.reload]* @rld, i64 0, i64 %indvars.iv2541, i32 11
  %159 = load %struct.rtx_def** %reg_rtx, align 8, !tbaa !5
  %cmp1008 = icmp eq %struct.rtx_def* %159, null
  br i1 %cmp1008, label %for.inc1129, label %land.lhs.true1010

land.lhs.true1010:                                ; preds = %for.body1005
  %in = getelementptr inbounds [180 x %struct.reload]* @rld, i64 0, i64 %indvars.iv2541, i32 0
  %160 = load %struct.rtx_def** %in, align 8, !tbaa !5
  %tobool1013 = icmp eq %struct.rtx_def* %160, null
  br i1 %tobool1013, label %for.inc1129, label %if.then1014

if.then1014:                                      ; preds = %land.lhs.true1010
  %arrayidx1019 = getelementptr inbounds %struct.rtx_def* %159, i64 0, i32 1, i64 0
  %rtuint1020 = bitcast %union.rtunion_def* %arrayidx1019 to i32*
  %161 = load i32* %rtuint1020, align 4, !tbaa !3
  %.off2370 = add i32 %161, -8
  %162 = icmp ult i32 %.off2370, 8
  %.off2371 = add i32 %161, -21
  %163 = icmp ult i32 %.off2371, 8
  %or.cond = or i1 %162, %163
  %.off2372 = add i32 %161, -45
  %164 = icmp ult i32 %.off2372, 8
  %or.cond2436 = or i1 %or.cond, %164
  %.off2373 = add i32 %161, -29
  %165 = icmp ult i32 %.off2373, 8
  %or.cond2438 = or i1 %or.cond2436, %165
  %166 = bitcast %struct.rtx_def* %159 to i32*
  %bf.load1048 = load i32* %166, align 8
  %bf.lshr1049 = lshr i32 %bf.load1048, 16
  %bf.clear1050 = and i32 %bf.lshr1049, 255
  br i1 %or.cond2438, label %cond.true1044, label %cond.false1068

cond.true1044:                                    ; preds = %if.then1014
  %idxprom10512375 = zext i32 %bf.clear1050 to i64
  %arrayidx1052 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom10512375
  %167 = load i32* %arrayidx1052, align 4, !tbaa !4
  %cmp1053 = icmp eq i32 %167, 5
  br i1 %cmp1053, label %cond.end1117, label %lor.rhs1055

lor.rhs1055:                                      ; preds = %cond.true1044
  %cmp1064 = icmp eq i32 %167, 6
  %phitmp2376 = select i1 %cmp1064, i32 2, i32 1
  br label %cond.end1117

cond.false1068:                                   ; preds = %if.then1014
  switch i32 %bf.clear1050, label %cond.false1094 [
    i32 18, label %cond.end1117
    i32 24, label %cond.true1090
  ]

cond.true1090:                                    ; preds = %cond.false1068
  br label %cond.end1117

cond.false1094:                                   ; preds = %cond.false1068
  %idxprom11012374 = zext i32 %bf.clear1050 to i64
  %arrayidx1102 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom11012374
  %168 = load i8* %arrayidx1102, align 1, !tbaa !1
  %conv1103 = zext i8 %168 to i32
  %add1107 = add i32 %conv1103, -1
  %sub1108 = add i32 %add1107, %154
  %div1112 = sdiv i32 %sub1108, %154
  br label %cond.end1117

cond.end1117:                                     ; preds = %cond.false1068, %cond.true1044, %lor.rhs1055, %cond.false1094, %cond.true1090
  %cond1118 = phi i32 [ %158, %cond.true1090 ], [ %div1112, %cond.false1094 ], [ 2, %cond.true1044 ], [ %phitmp2376, %lor.rhs1055 ], [ %156, %cond.false1068 ]
  %cmp1120 = icmp slt i32 %161, %add1119
  br i1 %cmp1120, label %land.lhs.true1122, label %for.inc1129

land.lhs.true1122:                                ; preds = %cond.end1117
  %add1123 = add nsw i32 %cond1118, %161
  %cmp1124 = icmp sgt i32 %add1123, %valueno.02555
  br i1 %cmp1124, label %return, label %for.inc1129

for.inc1129:                                      ; preds = %land.lhs.true1010, %for.body1005, %land.lhs.true1122, %cond.end1117
  %indvars.iv.next2542 = add i64 %indvars.iv2541, 1
  %169 = trunc i64 %indvars.iv.next2542 to i32
  %cmp1003 = icmp slt i32 %169, %151
  br i1 %cmp1003, label %for.body1005, label %if.end1132

if.end1132:                                       ; preds = %for.cond1002.preheader, %for.inc1129, %if.end997, %cond.end974
  br i1 %tobool297, label %if.then1134, label %if.end1175

if.then1134:                                      ; preds = %if.end1132
  %arrayidx1136 = getelementptr inbounds %struct.rtx_def* %goal, i64 0, i32 1, i64 0
  %rtx1137 = bitcast %union.rtunion_def* %arrayidx1136 to %struct.rtx_def**
  %170 = load %struct.rtx_def** %rtx1137, align 8, !tbaa !5
  %171 = bitcast %struct.rtx_def* %170 to i32*
  %bf.load1138 = load i32* %171, align 8
  %bf.clear1139 = and i32 %bf.load1138, 65535
  %switch.tableidx = add i32 %bf.clear1139, -54
  %172 = icmp ult i32 %switch.tableidx, 15
  br i1 %172, label %switch.lookup, label %if.end1175

switch.lookup:                                    ; preds = %if.then1134
  %switch.cast = trunc i32 %switch.tableidx to i15
  %switch.downshift = lshr i15 8172, %switch.cast
  %switch.masked = zext i15 %switch.downshift to i32
  %phitmp2471 = and i32 %switch.masked, 1
  br label %if.end1175

if.end1175:                                       ; preds = %switch.lookup, %if.then1134, %if.end1132
  %goal_mem_addr_varies.0 = phi i32 [ 0, %if.end1132 ], [ %phitmp2471, %switch.lookup ], [ 1, %if.then1134 ]
  %173 = load %struct.rtx_def** %rtx1962523, align 8, !tbaa !5
  %cmp11802499 = icmp eq %struct.rtx_def* %173, %16
  br i1 %cmp11802499, label %return, label %if.end1183.lr.ph

if.end1183.lr.ph:                                 ; preds = %if.end1175
  %tobool581.not2439 = xor i1 %tobool297, true
  %tobool1192 = icmp eq i32 %need_stable_sp.1, 0
  %or.cond2440 = and i1 %tobool1192, %tobool581.not2439
  %add1840 = add nsw i32 %cond907, %regno.0.ph
  %add1849 = add nsw i32 %cond975, %valueno.02555
  %tobool1858 = icmp eq i32 %goal_mem_addr_varies.0, 0
  %cmp1688 = icmp sgt i32 %regno.0.ph, 52
  %idxprom1691 = sext i32 %regno.0.ph to i64
  %174 = sext i32 %valueno.02555 to i64
  br label %if.end1183

if.end1183:                                       ; preds = %if.end1183.lr.ph, %while.body1176.backedge
  %175 = phi %struct.rtx_def* [ %173, %if.end1183.lr.ph ], [ %233, %while.body1176.backedge ]
  %176 = bitcast %struct.rtx_def* %175 to i32*
  %bf.load1184 = load i32* %176, align 8
  %bf.clear1185 = and i32 %bf.load1184, 65535
  %cmp1186 = icmp eq i32 %bf.clear1185, 34
  br i1 %cmp1186, label %if.then1188, label %if.end1235

if.then1188:                                      ; preds = %if.end1183
  br i1 %or.cond2440, label %if.end1194, label %return

if.end1194:                                       ; preds = %if.then1188
  %.not = icmp ugt i32 %regno.0.ph, 52
  %cmp12022472.not = icmp slt i32 %cond907, 1
  %brmerge = or i1 %.not, %cmp12022472.not
  br i1 %brmerge, label %if.end1214, label %for.body1204

for.cond1201:                                     ; preds = %for.body1204
  %177 = trunc i64 %indvars.iv.next to i32
  %cmp1202 = icmp slt i32 %177, %cond907
  br i1 %cmp1202, label %for.body1204, label %if.end1214

for.body1204:                                     ; preds = %if.end1194, %for.cond1201
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond1201 ], [ 0, %if.end1194 ]
  %178 = add nsw i64 %indvars.iv, %idxprom1691
  %arrayidx1207 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %178
  %179 = load i8* %arrayidx1207, align 1, !tbaa !1
  %tobool1208 = icmp eq i8 %179, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %tobool1208, label %for.cond1201, label %return

if.end1214:                                       ; preds = %if.end1194, %for.cond1201
  %.not2565 = icmp ugt i32 %valueno.02555, 52
  %cmp12222475.not = icmp slt i32 %cond975, 1
  %brmerge2566 = or i1 %.not2565, %cmp12222475.not
  br i1 %brmerge2566, label %if.end1235, label %for.body1224

for.cond1221:                                     ; preds = %for.body1224
  %180 = trunc i64 %indvars.iv.next2528 to i32
  %cmp1222 = icmp slt i32 %180, %cond975
  br i1 %cmp1222, label %for.body1224, label %if.end1235

for.body1224:                                     ; preds = %if.end1214, %for.cond1221
  %indvars.iv2527 = phi i64 [ %indvars.iv.next2528, %for.cond1221 ], [ 0, %if.end1214 ]
  %181 = add nsw i64 %indvars.iv2527, %174
  %arrayidx1227 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %181
  %182 = load i8* %arrayidx1227, align 1, !tbaa !1
  %tobool1228 = icmp eq i8 %182, 0
  %indvars.iv.next2528 = add i64 %indvars.iv2527, 1
  br i1 %tobool1228, label %for.cond1221, label %return

if.end1235:                                       ; preds = %if.end1214, %for.cond1221, %if.end1183
  %idxprom12382346 = zext i32 %bf.clear1185 to i64
  %arrayidx1239 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom12382346
  %183 = load i8* %arrayidx1239, align 1, !tbaa !1
  %cmp1241 = icmp eq i8 %183, 105
  br i1 %cmp1241, label %if.then1243, label %while.body1176.backedge

if.then1243:                                      ; preds = %if.end1235
  %arrayidx1245 = getelementptr inbounds %struct.rtx_def* %175, i64 0, i32 1, i64 3
  %rtx1246 = bitcast %union.rtunion_def* %arrayidx1245 to %struct.rtx_def**
  %184 = load %struct.rtx_def** %rtx1246, align 8, !tbaa !5
  %call1247 = tail call i32 @volatile_insn_p(%struct.rtx_def* %184) #6
  %tobool1248 = icmp eq i32 %call1247, 0
  br i1 %tobool1248, label %if.end1250, label %return

if.end1250:                                       ; preds = %if.then1243
  %185 = bitcast %struct.rtx_def* %184 to i32*
  %bf.load1251 = load i32* %185, align 8
  %bf.clear1252 = and i32 %bf.load1251, 65535
  %cmp1253 = icmp eq i32 %bf.clear1252, 38
  br i1 %cmp1253, label %if.then1255, label %if.end1259

if.then1255:                                      ; preds = %if.end1250
  %arrayidx1257 = getelementptr inbounds %struct.rtx_def* %184, i64 0, i32 1, i64 1
  %rtx1258 = bitcast %union.rtunion_def* %arrayidx1257 to %struct.rtx_def**
  %186 = load %struct.rtx_def** %rtx1258, align 8, !tbaa !5
  %.phi.trans.insert = bitcast %struct.rtx_def* %186 to i32*
  %bf.load1260.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end1259

if.end1259:                                       ; preds = %if.then1255, %if.end1250
  %bf.load1260 = phi i32 [ %bf.load1260.pre, %if.then1255 ], [ %bf.load1251, %if.end1250 ]
  %pat.0 = phi %struct.rtx_def* [ %186, %if.then1255 ], [ %184, %if.end1250 ]
  %bf.clear1261 = and i32 %bf.load1260, 65535
  switch i32 %bf.clear1261, label %if.end1714 [
    i32 47, label %while.cond1273
    i32 49, label %while.cond1273
    i32 39, label %if.then1474
  ]

while.cond1273:                                   ; preds = %while.cond1273, %while.cond1273, %while.cond1273, %while.cond1273, %if.end1259, %if.end1259
  %pat.0.pn = phi %struct.rtx_def* [ %pat.0, %if.end1259 ], [ %pat.0, %if.end1259 ], [ %dest.0, %while.cond1273 ], [ %dest.0, %while.cond1273 ], [ %dest.0, %while.cond1273 ], [ %dest.0, %while.cond1273 ]
  %dest.0.in.in = getelementptr inbounds %struct.rtx_def* %pat.0.pn, i64 0, i32 1, i64 0
  %dest.0.in = bitcast %union.rtunion_def* %dest.0.in.in to %struct.rtx_def**
  %dest.0 = load %struct.rtx_def** %dest.0.in, align 8
  %187 = bitcast %struct.rtx_def* %dest.0 to i32*
  %bf.load1274 = load i32* %187, align 8
  %bf.clear1275 = and i32 %bf.load1274, 65535
  switch i32 %bf.clear1275, label %if.else1428 [
    i32 63, label %while.cond1273
    i32 133, label %while.cond1273
    i32 132, label %while.cond1273
    i32 64, label %while.cond1273
    i32 61, label %if.then1303
  ]

if.then1303:                                      ; preds = %while.cond1273
  %arrayidx1305 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %rtuint1306 = bitcast %union.rtunion_def* %arrayidx1305 to i32*
  %188 = load i32* %rtuint1306, align 4, !tbaa !3
  %cmp1310 = icmp ult i32 %188, 53
  br i1 %cmp1310, label %if.then1312, label %if.end1397

if.then1312:                                      ; preds = %if.then1303
  %.off2360 = add i32 %188, -8
  %189 = icmp ult i32 %.off2360, 8
  %.off2361 = add i32 %188, -21
  %190 = icmp ult i32 %.off2361, 8
  %or.cond2443 = or i1 %189, %190
  %.off2362 = add i32 %188, -45
  %191 = icmp ult i32 %.off2362, 8
  %or.cond2445 = or i1 %or.cond2443, %191
  %.off2363 = add i32 %188, -29
  %192 = icmp ult i32 %.off2363, 8
  %or.cond2447 = or i1 %or.cond2445, %192
  %bf.lshr1338 = lshr i32 %bf.load1274, 16
  %bf.clear1339 = and i32 %bf.lshr1338, 255
  br i1 %or.cond2447, label %cond.true1336, label %cond.false1354

cond.true1336:                                    ; preds = %if.then1312
  %idxprom13402365 = zext i32 %bf.clear1339 to i64
  %arrayidx1341 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom13402365
  %193 = load i32* %arrayidx1341, align 4, !tbaa !4
  %cmp1342 = icmp eq i32 %193, 5
  br i1 %cmp1342, label %if.end1397, label %lor.rhs1344

lor.rhs1344:                                      ; preds = %cond.true1336
  %cmp1350 = icmp eq i32 %193, 6
  %phitmp2366 = select i1 %cmp1350, i32 2, i32 1
  br label %if.end1397

cond.false1354:                                   ; preds = %if.then1312
  switch i32 %bf.clear1339, label %cond.false1374 [
    i32 18, label %cond.true1360
    i32 24, label %cond.true1370
  ]

cond.true1360:                                    ; preds = %cond.false1354
  %194 = load i32* @target_flags, align 4, !tbaa !3
  %and1361 = lshr i32 %194, 25
  %195 = and i32 %and1361, 1
  %196 = xor i32 %195, 3
  br label %if.end1397

cond.true1370:                                    ; preds = %cond.false1354
  %197 = load i32* @target_flags, align 4, !tbaa !3
  %and1371 = lshr i32 %197, 24
  %198 = and i32 %and1371, 2
  %199 = xor i32 %198, 6
  br label %if.end1397

cond.false1374:                                   ; preds = %cond.false1354
  %idxprom13782364 = zext i32 %bf.clear1339 to i64
  %arrayidx1379 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom13782364
  %200 = load i8* %arrayidx1379, align 1, !tbaa !1
  %conv1380 = zext i8 %200 to i32
  %201 = load i32* @target_flags, align 4, !tbaa !3
  %and1381 = lshr i32 %201, 23
  %202 = and i32 %and1381, 4
  %203 = add i32 %202, 4
  %add1384 = add i32 %conv1380, -1
  %sub1385 = add i32 %add1384, %203
  %div1389 = sdiv i32 %sub1385, %203
  br label %if.end1397

if.end1397:                                       ; preds = %if.then1303, %cond.true1370, %cond.false1374, %cond.true1360, %lor.rhs1344, %cond.true1336
  %xnregs.0 = phi i32 [ %196, %cond.true1360 ], [ %199, %cond.true1370 ], [ %div1389, %cond.false1374 ], [ 2, %cond.true1336 ], [ %phitmp2366, %lor.rhs1344 ], [ 1, %if.then1303 ]
  %cmp1399 = icmp slt i32 %188, %add1840
  br i1 %cmp1399, label %land.lhs.true1401, label %if.end1406

land.lhs.true1401:                                ; preds = %if.end1397
  %add1402 = add nsw i32 %xnregs.0, %188
  %cmp1403 = icmp sgt i32 %add1402, %regno.0.ph
  br i1 %cmp1403, label %return, label %if.end1406

if.end1406:                                       ; preds = %land.lhs.true1401, %if.end1397
  %cmp1408 = icmp slt i32 %188, %add1849
  br i1 %cmp1408, label %land.lhs.true1410, label %if.end1415

land.lhs.true1410:                                ; preds = %if.end1406
  %add1411 = add nsw i32 %xnregs.0, %188
  %cmp1412 = icmp sgt i32 %add1411, %valueno.02555
  br i1 %cmp1412, label %return, label %if.end1415

if.end1415:                                       ; preds = %land.lhs.true1410, %if.end1406
  br i1 %tobool1858, label %if.end1421, label %land.lhs.true1417

land.lhs.true1417:                                ; preds = %if.end1415
  %call1418 = tail call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %dest.0, %struct.rtx_def* %goal) #7
  %tobool1419 = icmp eq i32 %call1418, 0
  br i1 %tobool1419, label %if.end1421, label %return

if.end1421:                                       ; preds = %land.lhs.true1417, %if.end1415
  %cmp1422 = icmp ne i32 %188, 7
  %or.cond2448 = or i1 %cmp1422, %tobool1192
  br i1 %or.cond2448, label %if.end1714, label %return

if.else1428:                                      ; preds = %while.cond1273
  %cmp1433 = icmp eq i32 %bf.clear1275, 66
  %or.cond2449 = and i1 %tobool297, %cmp1433
  br i1 %or.cond2449, label %land.lhs.true1435, label %if.else1442

land.lhs.true1435:                                ; preds = %if.else1428
  %bf.lshr1437 = lshr i32 %bf.load1274, 16
  %bf.clear1438 = and i32 %bf.lshr1437, 255
  %call1439 = tail call i32 @push_operand(%struct.rtx_def* %dest.0, i32 %bf.clear1438) #6
  %tobool1440 = icmp eq i32 %call1439, 0
  br i1 %tobool1440, label %return, label %land.lhs.true1435.if.else1442_crit_edge

land.lhs.true1435.if.else1442_crit_edge:          ; preds = %land.lhs.true1435
  %bf.load1443.pre = load i32* %187, align 8
  br label %if.else1442

if.else1442:                                      ; preds = %land.lhs.true1435.if.else1442_crit_edge, %if.else1428
  %bf.load1443 = phi i32 [ %bf.load1443.pre, %land.lhs.true1435.if.else1442_crit_edge ], [ %bf.load1274, %if.else1428 ]
  %bf.clear1444 = and i32 %bf.load1443, 65535
  %cmp1445 = icmp eq i32 %bf.clear1444, 66
  %or.cond2450 = and i1 %cmp1445, %cmp1688
  br i1 %or.cond2450, label %land.lhs.true1450, label %if.else1456

land.lhs.true1450:                                ; preds = %if.else1442
  %204 = load %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !tbaa !5
  %arrayidx1452 = getelementptr inbounds %struct.rtx_def** %204, i64 %idxprom1691
  %205 = load %struct.rtx_def** %arrayidx1452, align 8, !tbaa !5
  %cmp1453 = icmp eq %struct.rtx_def* %205, null
  br i1 %cmp1453, label %if.else1456, label %return

if.else1456:                                      ; preds = %land.lhs.true1450, %if.else1442
  br i1 %tobool1192, label %if.end1714, label %land.lhs.true1458

land.lhs.true1458:                                ; preds = %if.else1456
  %bf.lshr1460 = lshr i32 %bf.load1443, 16
  %bf.clear1461 = and i32 %bf.lshr1460, 255
  %call1462 = tail call i32 @push_operand(%struct.rtx_def* %dest.0, i32 %bf.clear1461) #6
  %tobool1463 = icmp eq i32 %call1462, 0
  br i1 %tobool1463, label %if.end1714, label %return

if.then1474:                                      ; preds = %if.end1259
  %arrayidx1477 = getelementptr inbounds %struct.rtx_def* %pat.0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx1477 to %struct.rtvec_def**
  %206 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %206, i64 0, i32 0
  %207 = load i32* %num_elem, align 4, !tbaa !3
  %cmp14802483 = icmp sgt i32 %207, 0
  br i1 %cmp14802483, label %for.body1482.lr.ph, label %if.end1714

for.body1482.lr.ph:                               ; preds = %if.then1474
  %208 = sext i32 %207 to i64
  br label %for.body1482

for.body1482:                                     ; preds = %for.cond1479.backedge.for.body1482_crit_edge, %for.body1482.lr.ph
  %209 = phi %struct.rtvec_def* [ %206, %for.body1482.lr.ph ], [ %.pre, %for.cond1479.backedge.for.body1482_crit_edge ]
  %indvars.iv2534 = phi i64 [ %208, %for.body1482.lr.ph ], [ %indvars.iv.next2535, %for.cond1479.backedge.for.body1482_crit_edge ]
  %indvars.iv.next2535 = add i64 %indvars.iv2534, -1
  %arrayidx1487 = getelementptr inbounds %struct.rtvec_def* %209, i64 0, i32 1, i64 %indvars.iv.next2535
  %210 = load %struct.rtx_def** %arrayidx1487, align 8, !tbaa !5
  %211 = bitcast %struct.rtx_def* %210 to i32*
  %bf.load1488 = load i32* %211, align 8
  %bf.clear1489 = and i32 %bf.load1488, 65535
  %cmp1490 = icmp eq i32 %bf.clear1489, 38
  br i1 %cmp1490, label %if.then1492, label %if.end1496

if.then1492:                                      ; preds = %for.body1482
  %arrayidx1494 = getelementptr inbounds %struct.rtx_def* %210, i64 0, i32 1, i64 1
  %rtx1495 = bitcast %union.rtunion_def* %arrayidx1494 to %struct.rtx_def**
  %212 = load %struct.rtx_def** %rtx1495, align 8, !tbaa !5
  %.phi.trans.insert2559 = bitcast %struct.rtx_def* %212 to i32*
  %bf.load1497.pre = load i32* %.phi.trans.insert2559, align 8
  br label %if.end1496

if.end1496:                                       ; preds = %if.then1492, %for.body1482
  %bf.load1497 = phi i32 [ %bf.load1497.pre, %if.then1492 ], [ %bf.load1488, %for.body1482 ]
  %v1.0 = phi %struct.rtx_def* [ %212, %if.then1492 ], [ %210, %for.body1482 ]
  %bf.clear1498 = and i32 %bf.load1497, 65535
  switch i32 %bf.clear1498, label %for.cond1479.backedge [
    i32 47, label %while.cond1511
    i32 49, label %while.cond1511
  ]

while.cond1511:                                   ; preds = %while.cond1511, %while.cond1511, %while.cond1511, %while.cond1511, %if.end1496, %if.end1496
  %v1.0.pn = phi %struct.rtx_def* [ %v1.0, %if.end1496 ], [ %v1.0, %if.end1496 ], [ %dest1507.0, %while.cond1511 ], [ %dest1507.0, %while.cond1511 ], [ %dest1507.0, %while.cond1511 ], [ %dest1507.0, %while.cond1511 ]
  %dest1507.0.in.in = getelementptr inbounds %struct.rtx_def* %v1.0.pn, i64 0, i32 1, i64 0
  %dest1507.0.in = bitcast %union.rtunion_def* %dest1507.0.in.in to %struct.rtx_def**
  %dest1507.0 = load %struct.rtx_def** %dest1507.0.in, align 8
  %213 = bitcast %struct.rtx_def* %dest1507.0 to i32*
  %bf.load1512 = load i32* %213, align 8
  %bf.clear1513 = and i32 %bf.load1512, 65535
  switch i32 %bf.clear1513, label %if.else1668 [
    i32 63, label %while.cond1511
    i32 133, label %while.cond1511
    i32 132, label %while.cond1511
    i32 64, label %while.cond1511
    i32 61, label %if.then1541
  ]

if.then1541:                                      ; preds = %while.cond1511
  %arrayidx1544 = getelementptr inbounds %struct.rtx_def* %dest1507.0, i64 0, i32 1, i64 0
  %rtuint1545 = bitcast %union.rtunion_def* %arrayidx1544 to i32*
  %214 = load i32* %rtuint1545, align 4, !tbaa !3
  %cmp1550 = icmp ult i32 %214, 53
  br i1 %cmp1550, label %if.then1552, label %if.end1637

if.then1552:                                      ; preds = %if.then1541
  %.off2353 = add i32 %214, -8
  %215 = icmp ult i32 %.off2353, 8
  %.off2354 = add i32 %214, -21
  %216 = icmp ult i32 %.off2354, 8
  %or.cond2453 = or i1 %215, %216
  %.off2355 = add i32 %214, -45
  %217 = icmp ult i32 %.off2355, 8
  %or.cond2455 = or i1 %or.cond2453, %217
  %.off2356 = add i32 %214, -29
  %218 = icmp ult i32 %.off2356, 8
  %or.cond2457 = or i1 %or.cond2455, %218
  %bf.lshr1578 = lshr i32 %bf.load1512, 16
  %bf.clear1579 = and i32 %bf.lshr1578, 255
  br i1 %or.cond2457, label %cond.true1576, label %cond.false1594

cond.true1576:                                    ; preds = %if.then1552
  %idxprom15802358 = zext i32 %bf.clear1579 to i64
  %arrayidx1581 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom15802358
  %219 = load i32* %arrayidx1581, align 4, !tbaa !4
  %cmp1582 = icmp eq i32 %219, 5
  br i1 %cmp1582, label %if.end1637, label %lor.rhs1584

lor.rhs1584:                                      ; preds = %cond.true1576
  %cmp1590 = icmp eq i32 %219, 6
  %phitmp2359 = select i1 %cmp1590, i32 2, i32 1
  br label %if.end1637

cond.false1594:                                   ; preds = %if.then1552
  switch i32 %bf.clear1579, label %cond.false1614 [
    i32 18, label %cond.true1600
    i32 24, label %cond.true1610
  ]

cond.true1600:                                    ; preds = %cond.false1594
  %220 = load i32* @target_flags, align 4, !tbaa !3
  %and1601 = lshr i32 %220, 25
  %221 = and i32 %and1601, 1
  %222 = xor i32 %221, 3
  br label %if.end1637

cond.true1610:                                    ; preds = %cond.false1594
  %223 = load i32* @target_flags, align 4, !tbaa !3
  %and1611 = lshr i32 %223, 24
  %224 = and i32 %and1611, 2
  %225 = xor i32 %224, 6
  br label %if.end1637

cond.false1614:                                   ; preds = %cond.false1594
  %idxprom16182357 = zext i32 %bf.clear1579 to i64
  %arrayidx1619 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom16182357
  %226 = load i8* %arrayidx1619, align 1, !tbaa !1
  %conv1620 = zext i8 %226 to i32
  %227 = load i32* @target_flags, align 4, !tbaa !3
  %and1621 = lshr i32 %227, 23
  %228 = and i32 %and1621, 4
  %229 = add i32 %228, 4
  %add1624 = add i32 %conv1620, -1
  %sub1625 = add i32 %add1624, %229
  %div1629 = sdiv i32 %sub1625, %229
  br label %if.end1637

if.end1637:                                       ; preds = %if.then1541, %cond.true1610, %cond.false1614, %cond.true1600, %lor.rhs1584, %cond.true1576
  %xnregs1546.0 = phi i32 [ %222, %cond.true1600 ], [ %225, %cond.true1610 ], [ %div1629, %cond.false1614 ], [ 2, %cond.true1576 ], [ %phitmp2359, %lor.rhs1584 ], [ 1, %if.then1541 ]
  %cmp1639 = icmp slt i32 %214, %add1840
  br i1 %cmp1639, label %land.lhs.true1641, label %if.end1646

land.lhs.true1641:                                ; preds = %if.end1637
  %add1642 = add nsw i32 %xnregs1546.0, %214
  %cmp1643 = icmp sgt i32 %add1642, %regno.0.ph
  br i1 %cmp1643, label %return, label %if.end1646

if.end1646:                                       ; preds = %land.lhs.true1641, %if.end1637
  %cmp1648 = icmp slt i32 %214, %add1849
  br i1 %cmp1648, label %land.lhs.true1650, label %if.end1655

land.lhs.true1650:                                ; preds = %if.end1646
  %add1651 = add nsw i32 %xnregs1546.0, %214
  %cmp1652 = icmp sgt i32 %add1651, %valueno.02555
  br i1 %cmp1652, label %return, label %if.end1655

if.end1655:                                       ; preds = %land.lhs.true1650, %if.end1646
  br i1 %tobool1858, label %if.end1661, label %land.lhs.true1657

land.lhs.true1657:                                ; preds = %if.end1655
  %call1658 = tail call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %dest1507.0, %struct.rtx_def* %goal) #7
  %tobool1659 = icmp eq i32 %call1658, 0
  br i1 %tobool1659, label %if.end1661, label %return

if.end1661:                                       ; preds = %land.lhs.true1657, %if.end1655
  %cmp1662 = icmp ne i32 %214, 7
  %or.cond2458 = or i1 %cmp1662, %tobool1192
  br i1 %or.cond2458, label %for.cond1479.backedge, label %return

for.cond1479.backedge:                            ; preds = %if.end1661, %if.end1496, %land.lhs.true1698, %if.else1696
  %230 = trunc i64 %indvars.iv.next2535 to i32
  %cmp1480 = icmp sgt i32 %230, 0
  br i1 %cmp1480, label %for.cond1479.backedge.for.body1482_crit_edge, label %if.end1714

for.cond1479.backedge.for.body1482_crit_edge:     ; preds = %for.cond1479.backedge
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  br label %for.body1482

if.else1668:                                      ; preds = %while.cond1511
  %cmp1673 = icmp eq i32 %bf.clear1513, 66
  %or.cond2459 = and i1 %tobool297, %cmp1673
  br i1 %or.cond2459, label %land.lhs.true1675, label %if.else1682

land.lhs.true1675:                                ; preds = %if.else1668
  %bf.lshr1677 = lshr i32 %bf.load1512, 16
  %bf.clear1678 = and i32 %bf.lshr1677, 255
  %call1679 = tail call i32 @push_operand(%struct.rtx_def* %dest1507.0, i32 %bf.clear1678) #6
  %tobool1680 = icmp eq i32 %call1679, 0
  br i1 %tobool1680, label %return, label %land.lhs.true1675.if.else1682_crit_edge

land.lhs.true1675.if.else1682_crit_edge:          ; preds = %land.lhs.true1675
  %bf.load1683.pre = load i32* %213, align 8
  br label %if.else1682

if.else1682:                                      ; preds = %land.lhs.true1675.if.else1682_crit_edge, %if.else1668
  %bf.load1683 = phi i32 [ %bf.load1683.pre, %land.lhs.true1675.if.else1682_crit_edge ], [ %bf.load1512, %if.else1668 ]
  %bf.clear1684 = and i32 %bf.load1683, 65535
  %cmp1685 = icmp eq i32 %bf.clear1684, 66
  %or.cond2460 = and i1 %cmp1685, %cmp1688
  br i1 %or.cond2460, label %land.lhs.true1690, label %if.else1696

land.lhs.true1690:                                ; preds = %if.else1682
  %231 = load %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !tbaa !5
  %arrayidx1692 = getelementptr inbounds %struct.rtx_def** %231, i64 %idxprom1691
  %232 = load %struct.rtx_def** %arrayidx1692, align 8, !tbaa !5
  %cmp1693 = icmp eq %struct.rtx_def* %232, null
  br i1 %cmp1693, label %if.else1696, label %return

if.else1696:                                      ; preds = %land.lhs.true1690, %if.else1682
  br i1 %tobool1192, label %for.cond1479.backedge, label %land.lhs.true1698

land.lhs.true1698:                                ; preds = %if.else1696
  %bf.lshr1700 = lshr i32 %bf.load1683, 16
  %bf.clear1701 = and i32 %bf.lshr1700, 255
  %call1702 = tail call i32 @push_operand(%struct.rtx_def* %dest1507.0, i32 %bf.clear1701) #6
  %tobool1703 = icmp eq i32 %call1702, 0
  br i1 %tobool1703, label %for.cond1479.backedge, label %return

if.end1714:                                       ; preds = %if.then1474, %for.cond1479.backedge, %if.end1259, %if.end1421, %land.lhs.true1458, %if.else1456
  %bf.load1715 = load i32* %176, align 8
  %bf.clear1716 = and i32 %bf.load1715, 65535
  %cmp1717 = icmp eq i32 %bf.clear1716, 34
  br i1 %cmp1717, label %land.lhs.true1719, label %while.body1176.backedge

while.body1176.backedge:                          ; preds = %for.cond1728.preheader, %for.inc1893, %if.end1714, %if.end1235, %land.lhs.true1719
  %arrayidx1178 = getelementptr inbounds %struct.rtx_def* %175, i64 0, i32 1, i64 1
  %rtx1179 = bitcast %union.rtunion_def* %arrayidx1178 to %struct.rtx_def**
  %233 = load %struct.rtx_def** %rtx1179, align 8, !tbaa !5
  %cmp1180 = icmp eq %struct.rtx_def* %233, %16
  br i1 %cmp1180, label %return, label %if.end1183

land.lhs.true1719:                                ; preds = %if.end1714
  %arrayidx1721 = getelementptr inbounds %struct.rtx_def* %175, i64 0, i32 1, i64 7
  %rtx1722 = bitcast %union.rtunion_def* %arrayidx1721 to %struct.rtx_def**
  %234 = load %struct.rtx_def** %rtx1722, align 8, !tbaa !5
  %tobool1723 = icmp eq %struct.rtx_def* %234, null
  br i1 %tobool1723, label %while.body1176.backedge, label %for.cond1728.preheader

for.cond1728.preheader:                           ; preds = %land.lhs.true1719
  %arrayidx17302491 = getelementptr inbounds %struct.rtx_def* %234, i64 0, i32 1, i64 1
  %rtx17312492 = bitcast %union.rtunion_def* %arrayidx17302491 to %struct.rtx_def**
  %235 = load %struct.rtx_def** %rtx17312492, align 8, !tbaa !5
  %cmp17322493 = icmp eq %struct.rtx_def* %235, null
  br i1 %cmp17322493, label %while.body1176.backedge, label %for.body1734

for.body1734:                                     ; preds = %for.cond1728.preheader, %for.inc1893
  %rtx17312495 = phi %struct.rtx_def** [ %rtx1731, %for.inc1893 ], [ %rtx17312492, %for.cond1728.preheader ]
  %link.02494 = phi %struct.rtx_def* [ %256, %for.inc1893 ], [ %234, %for.cond1728.preheader ]
  %arrayidx1736 = getelementptr inbounds %struct.rtx_def* %link.02494, i64 0, i32 1, i64 0
  %rtx1737 = bitcast %union.rtunion_def* %arrayidx1736 to %struct.rtx_def**
  %236 = load %struct.rtx_def** %rtx1737, align 8, !tbaa !5
  %237 = bitcast %struct.rtx_def* %236 to i32*
  %bf.load1738 = load i32* %237, align 8
  %bf.clear1739 = and i32 %bf.load1738, 65535
  %cmp1740 = icmp eq i32 %bf.clear1739, 49
  br i1 %cmp1740, label %if.then1742, label %for.inc1893

if.then1742:                                      ; preds = %for.body1734
  %arrayidx1745 = getelementptr inbounds %struct.rtx_def* %236, i64 0, i32 1, i64 0
  %rtx1746 = bitcast %union.rtunion_def* %arrayidx1745 to %struct.rtx_def**
  %238 = load %struct.rtx_def** %rtx1746, align 8, !tbaa !5
  %239 = bitcast %struct.rtx_def* %238 to i32*
  %bf.load1747 = load i32* %239, align 8
  %bf.clear1748 = and i32 %bf.load1747, 65535
  %cmp1749 = icmp eq i32 %bf.clear1748, 61
  br i1 %cmp1749, label %if.then1751, label %if.else1866

if.then1751:                                      ; preds = %if.then1742
  %arrayidx1754 = getelementptr inbounds %struct.rtx_def* %238, i64 0, i32 1, i64 0
  %rtuint1755 = bitcast %union.rtunion_def* %arrayidx1754 to i32*
  %240 = load i32* %rtuint1755, align 4, !tbaa !3
  %.off2347 = add i32 %240, -8
  %241 = icmp ult i32 %.off2347, 8
  %.off2348 = add i32 %240, -21
  %242 = icmp ult i32 %.off2348, 8
  %or.cond2462 = or i1 %241, %242
  %.off2349 = add i32 %240, -45
  %243 = icmp ult i32 %.off2349, 8
  %or.cond2464 = or i1 %or.cond2462, %243
  %.off2350 = add i32 %240, -29
  %244 = icmp ult i32 %.off2350, 8
  %or.cond2466 = or i1 %or.cond2464, %244
  %bf.lshr1782 = lshr i32 %bf.load1747, 16
  %bf.clear1783 = and i32 %bf.lshr1782, 255
  br i1 %or.cond2466, label %cond.true1780, label %cond.false1798

cond.true1780:                                    ; preds = %if.then1751
  %idxprom17842352 = zext i32 %bf.clear1783 to i64
  %arrayidx1785 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom17842352
  %245 = load i32* %arrayidx1785, align 4, !tbaa !4
  %cmp1786 = icmp eq i32 %245, 5
  br i1 %cmp1786, label %cond.end1838, label %lor.rhs1788

lor.rhs1788:                                      ; preds = %cond.true1780
  %cmp1794 = icmp eq i32 %245, 6
  %phitmp = select i1 %cmp1794, i32 2, i32 1
  br label %cond.end1838

cond.false1798:                                   ; preds = %if.then1751
  switch i32 %bf.clear1783, label %cond.false1818 [
    i32 18, label %cond.true1804
    i32 24, label %cond.true1814
  ]

cond.true1804:                                    ; preds = %cond.false1798
  %246 = load i32* @target_flags, align 4, !tbaa !3
  %and1805 = lshr i32 %246, 25
  %247 = and i32 %and1805, 1
  %248 = xor i32 %247, 3
  br label %cond.end1838

cond.true1814:                                    ; preds = %cond.false1798
  %249 = load i32* @target_flags, align 4, !tbaa !3
  %and1815 = lshr i32 %249, 24
  %250 = and i32 %and1815, 2
  %251 = xor i32 %250, 6
  br label %cond.end1838

cond.false1818:                                   ; preds = %cond.false1798
  %idxprom18222351 = zext i32 %bf.clear1783 to i64
  %arrayidx1823 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom18222351
  %252 = load i8* %arrayidx1823, align 1, !tbaa !1
  %conv1824 = zext i8 %252 to i32
  %253 = load i32* @target_flags, align 4, !tbaa !3
  %and1825 = lshr i32 %253, 23
  %254 = and i32 %and1825, 4
  %255 = add i32 %254, 4
  %add1828 = add i32 %conv1824, -1
  %sub1829 = add i32 %add1828, %255
  %div1833 = sdiv i32 %sub1829, %255
  br label %cond.end1838

cond.end1838:                                     ; preds = %cond.true1780, %lor.rhs1788, %cond.true1804, %cond.false1818, %cond.true1814
  %cond1839 = phi i32 [ %248, %cond.true1804 ], [ %251, %cond.true1814 ], [ %div1833, %cond.false1818 ], [ 2, %cond.true1780 ], [ %phitmp, %lor.rhs1788 ]
  %cmp1841 = icmp slt i32 %240, %add1840
  br i1 %cmp1841, label %land.lhs.true1843, label %if.else1848

land.lhs.true1843:                                ; preds = %cond.end1838
  %add1844 = add nsw i32 %cond1839, %240
  %cmp1845 = icmp sgt i32 %add1844, %regno.0.ph
  br i1 %cmp1845, label %return, label %if.else1848

if.else1848:                                      ; preds = %land.lhs.true1843, %cond.end1838
  %cmp1850 = icmp slt i32 %240, %add1849
  br i1 %cmp1850, label %land.lhs.true1852, label %if.else1857

land.lhs.true1852:                                ; preds = %if.else1848
  %add1853 = add nsw i32 %cond1839, %240
  %cmp1854 = icmp sgt i32 %add1853, %valueno.02555
  br i1 %cmp1854, label %return, label %if.else1857

if.else1857:                                      ; preds = %land.lhs.true1852, %if.else1848
  br i1 %tobool1858, label %for.inc1893, label %land.lhs.true1859

land.lhs.true1859:                                ; preds = %if.else1857
  %call1860 = tail call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %238, %struct.rtx_def* %goal) #7
  %tobool1861 = icmp eq i32 %call1860, 0
  br i1 %tobool1861, label %for.inc1893, label %return

if.else1866:                                      ; preds = %if.then1742
  %cmp1871 = icmp eq i32 %bf.clear1748, 66
  %or.cond2467 = and i1 %tobool297, %cmp1871
  br i1 %or.cond2467, label %land.lhs.true1873, label %if.else1880

land.lhs.true1873:                                ; preds = %if.else1866
  %bf.lshr1875 = lshr i32 %bf.load1747, 16
  %bf.clear1876 = and i32 %bf.lshr1875, 255
  %call1877 = tail call i32 @push_operand(%struct.rtx_def* %238, i32 %bf.clear1876) #6
  %tobool1878 = icmp eq i32 %call1877, 0
  br i1 %tobool1878, label %return, label %if.else1880

if.else1880:                                      ; preds = %land.lhs.true1873, %if.else1866
  br i1 %tobool1192, label %for.inc1893, label %land.lhs.true1882

land.lhs.true1882:                                ; preds = %if.else1880
  %bf.load1883 = load i32* %239, align 8
  %bf.lshr1884 = lshr i32 %bf.load1883, 16
  %bf.clear1885 = and i32 %bf.lshr1884, 255
  %call1886 = tail call i32 @push_operand(%struct.rtx_def* %238, i32 %bf.clear1885) #6
  %tobool1887 = icmp eq i32 %call1886, 0
  br i1 %tobool1887, label %for.inc1893, label %return

for.inc1893:                                      ; preds = %land.lhs.true1882, %if.else1880, %land.lhs.true1859, %if.else1857, %for.body1734
  %256 = load %struct.rtx_def** %rtx17312495, align 8, !tbaa !5
  %arrayidx1730 = getelementptr inbounds %struct.rtx_def* %256, i64 0, i32 1, i64 1
  %rtx1731 = bitcast %union.rtunion_def* %arrayidx1730 to %struct.rtx_def**
  %257 = load %struct.rtx_def** %rtx1731, align 8, !tbaa !5
  %cmp1732 = icmp eq %struct.rtx_def* %257, null
  br i1 %cmp1732, label %while.body1176.backedge, label %for.body1734

return:                                           ; preds = %if.else, %while.body.preheader, %lor.lhs.false198, %while.body.backedge, %for.body986, %land.lhs.true1122, %if.end1175, %land.lhs.true1458, %land.lhs.true1450, %land.lhs.true1435, %if.end1421, %land.lhs.true1417, %land.lhs.true1410, %land.lhs.true1401, %if.then1243, %if.then1188, %while.body1176.backedge, %land.lhs.true1882, %land.lhs.true1873, %land.lhs.true1859, %land.lhs.true1852, %land.lhs.true1843, %land.lhs.true1698, %land.lhs.true1690, %land.lhs.true1675, %if.end1661, %land.lhs.true1657, %land.lhs.true1650, %land.lhs.true1641, %for.body1224, %for.body1204, %cond.end833, %cond.end684, %if.end573, %land.lhs.true557, %if.else121, %land.lhs.true125, %land.lhs.true130, %if.end22, %land.lhs.true, %if.then7
  %retval.0 = phi %struct.rtx_def* [ null, %if.then7 ], [ null, %land.lhs.true ], [ null, %if.end22 ], [ null, %land.lhs.true130 ], [ null, %land.lhs.true125 ], [ null, %if.else121 ], [ null, %land.lhs.true557 ], [ null, %if.end573 ], [ null, %cond.end684 ], [ null, %cond.end833 ], [ null, %for.body1204 ], [ null, %for.body1224 ], [ null, %land.lhs.true1641 ], [ null, %land.lhs.true1650 ], [ null, %land.lhs.true1657 ], [ null, %if.end1661 ], [ null, %land.lhs.true1675 ], [ null, %land.lhs.true1690 ], [ null, %land.lhs.true1698 ], [ null, %land.lhs.true1843 ], [ null, %land.lhs.true1852 ], [ null, %land.lhs.true1859 ], [ null, %land.lhs.true1873 ], [ null, %land.lhs.true1882 ], [ %valtry.0, %if.end1175 ], [ null, %land.lhs.true1458 ], [ null, %land.lhs.true1450 ], [ null, %land.lhs.true1435 ], [ null, %if.end1421 ], [ null, %land.lhs.true1417 ], [ null, %land.lhs.true1410 ], [ null, %land.lhs.true1401 ], [ null, %if.then1243 ], [ null, %if.then1188 ], [ %valtry.0, %while.body1176.backedge ], [ null, %land.lhs.true1122 ], [ null, %for.body986 ], [ null, %while.body.backedge ], [ null, %lor.lhs.false198 ], [ null, %while.body.preheader ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0
}
