define i32 @regno_clobbered_p(i32 %regno, %struct.rtx_def* nocapture %insn, i32 %mode, i32 %sets) #4 {
entry:
  %regno.off = add i32 %regno, -8
  %0 = icmp ult i32 %regno.off, 8
  %regno.off172 = add i32 %regno, -21
  %1 = icmp ult i32 %regno.off172, 8
  %or.cond = or i1 %0, %1
  %regno.off173 = add i32 %regno, -45
  %2 = icmp ult i32 %regno.off173, 8
  %or.cond177 = or i1 %or.cond, %2
  %regno.off174 = add i32 %regno, -29
  %3 = icmp ult i32 %regno.off174, 8
  %or.cond179 = or i1 %or.cond177, %3
  br i1 %or.cond179, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %4 = load i32* %arrayidx, align 4, !tbaa !4
  %cmp13 = icmp eq i32 %4, 5
  br i1 %cmp13, label %cond.end38, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp16 = icmp eq i32 %4, 6
  %phitmp = select i1 %cmp16, i32 2, i32 1
  br label %cond.end38

cond.false:                                       ; preds = %entry
  switch i32 %mode, label %cond.false26 [
    i32 18, label %cond.true18
    i32 24, label %cond.true22
  ]

cond.true18:                                      ; preds = %cond.false
  %5 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %5, 25
  %6 = and i32 %and, 1
  %7 = xor i32 %6, 3
  br label %cond.end38

cond.true22:                                      ; preds = %cond.false
  %8 = load i32* @target_flags, align 4, !tbaa !3
  %and23 = lshr i32 %8, 24
  %9 = and i32 %and23, 2
  %10 = xor i32 %9, 6
  br label %cond.end38

cond.false26:                                     ; preds = %cond.false
  %idxprom27 = sext i32 %mode to i64
  %arrayidx28 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27
  %11 = load i8* %arrayidx28, align 1, !tbaa !1
  %conv = zext i8 %11 to i32
  %12 = load i32* @target_flags, align 4, !tbaa !3
  %and29 = lshr i32 %12, 23
  %13 = and i32 %and29, 4
  %14 = add i32 %13, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %14
  %div = sdiv i32 %sub, %14
  br label %cond.end38

cond.end38:                                       ; preds = %cond.true, %lor.rhs, %cond.true18, %cond.false26, %cond.true22
  %cond39 = phi i32 [ %7, %cond.true18 ], [ %10, %cond.true22 ], [ %div, %cond.false26 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %add40 = add i32 %cond39, %regno
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load = load i32* %16, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp42 = icmp eq i32 %bf.clear, 49
  br i1 %cmp42, label %land.lhs.true54, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %cond.end38
  %tobool45 = icmp ne i32 %sets, 0
  %cmp52 = icmp eq i32 %bf.clear, 47
  %or.cond180 = and i1 %tobool45, %cmp52
  br i1 %or.cond180, label %land.lhs.true54, label %if.end

land.lhs.true54:                                  ; preds = %lor.lhs.false44, %cond.end38
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx60, align 8, !tbaa !5
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load61 = load i32* %18, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 61
  br i1 %cmp63, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true54
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx72 to i32*
  %19 = load i32* %rtuint, align 4, !tbaa !3
  %cmp75 = icmp ult i32 %19, %add40
  %not.cmp73 = icmp uge i32 %19, %regno
  %.cmp75 = and i1 %cmp75, %not.cmp73
  %land.ext = zext i1 %.cmp75 to i32
  br label %return

if.end:                                           ; preds = %lor.lhs.false44, %land.lhs.true54
  %cmp82 = icmp eq i32 %bf.clear, 39
  br i1 %cmp82, label %if.then84, label %return

if.then84:                                        ; preds = %if.end
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtvec_def**
  %20 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %20, i64 0, i32 0
  %21 = load i32* %num_elem, align 4, !tbaa !3
  %cmp91183 = icmp sgt i32 %21, 0
  br i1 %cmp91183, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %if.then84
  %22 = sext i32 %21 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %22, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx100 = getelementptr inbounds %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv.next
  %23 = load %struct.rtx_def** %arrayidx100, align 8, !tbaa !5
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load101 = load i32* %24, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 49
  br i1 %cmp103, label %land.lhs.true115, label %for.cond.backedge

land.lhs.true115:                                 ; preds = %for.body
  %arrayidx117 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx118, align 8, !tbaa !5
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load119 = load i32* %26, align 8
  %bf.clear120 = and i32 %bf.load119, 65535
  %cmp121 = icmp eq i32 %bf.clear120, 61
  br i1 %cmp121, label %if.then123, label %for.cond.backedge

if.then123:                                       ; preds = %land.lhs.true115
  %arrayidx129 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0
  %rtuint130 = bitcast %union.rtunion_def* %arrayidx129 to i32*
  %27 = load i32* %rtuint130, align 4, !tbaa !3
  %cmp131 = icmp uge i32 %27, %regno
  %cmp134 = icmp ult i32 %27, %add40
  %or.cond181 = and i1 %cmp131, %cmp134
  br i1 %or.cond181, label %return, label %for.cond.backedge

for.cond.backedge:                                ; preds = %for.body, %if.then123, %land.lhs.true115
  %28 = trunc i64 %indvars.iv.next to i32
  %cmp91 = icmp sgt i32 %28, 0
  br i1 %cmp91, label %for.body, label %return

return:                                           ; preds = %if.then84, %if.then123, %for.cond.backedge, %if.end, %if.then
  %retval.0 = phi i32 [ %land.ext, %if.then ], [ 0, %if.end ], [ 0, %if.then84 ], [ 1, %if.then123 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}
