define i32 @operands_match_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %cmp368 = icmp eq %struct.rtx_def* %x, %y
  br i1 %cmp368, label %return, label %if.end.lr.ph

if.end.lr.ph:                                     ; preds = %entry
  %1 = bitcast %struct.rtx_def* %y to i32*
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  br label %if.end

if.end:                                           ; preds = %if.end.lr.ph, %if.then101
  %bf.load46.in = phi i32* [ %0, %if.end.lr.ph ], [ %20, %if.then101 ]
  %2 = phi i32* [ %0, %if.end.lr.ph ], [ %20, %if.then101 ]
  %x.tr369 = phi %struct.rtx_def* [ %x, %if.end.lr.ph ], [ %19, %if.then101 ]
  %bf.load46 = load i32* %bf.load46.in, align 8
  %bf.clear371 = and i32 %bf.load46, 65535
  switch i32 %bf.clear371, label %if.end92 [
    i32 61, label %land.lhs.true6
    i32 63, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load3 = load i32* %4, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 61
  br i1 %cmp5, label %land.lhs.true6, label %if.end92

land.lhs.true6:                                   ; preds = %land.lhs.true, %if.end
  %bf.load7 = load i32* %1, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  switch i32 %bf.clear8, label %if.end92 [
    i32 61, label %if.then21
    i32 63, label %land.lhs.true14
  ]

land.lhs.true14:                                  ; preds = %land.lhs.true6
  %5 = load %struct.rtx_def** %rtx17, align 8, !tbaa !5
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load18 = load i32* %6, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 61
  br i1 %cmp20, label %if.then21, label %if.end92

if.then21:                                        ; preds = %land.lhs.true6, %land.lhs.true14
  %cmp22 = icmp eq i32 %bf.clear371, 63
  %fld24 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1
  br i1 %cmp22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.then21
  %rtx26 = bitcast [1 x %union.rtunion_def]* %fld24 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx26, align 8, !tbaa !5
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %8 = load i32* %rtuint, align 4, !tbaa !3
  %cmp29 = icmp sgt i32 %8, 52
  br i1 %cmp29, label %slow, label %if.end31

if.end31:                                         ; preds = %if.then23
  %9 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load41 = load i32* %9, align 8
  %bf.lshr = lshr i32 %bf.load41, 16
  %bf.clear42 = and i32 %bf.lshr, 255
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 1
  %rtuint45 = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %10 = load i32* %rtuint45, align 4, !tbaa !3
  %bf.lshr47 = lshr i32 %bf.load46, 16
  %bf.clear48 = and i32 %bf.lshr47, 255
  %call = tail call i32 @subreg_regno_offset(i32 %8, i32 %bf.clear42, i32 %10, i32 %bf.clear48) #6
  %add = add i32 %call, %8
  %bf.load53.pre = load i32* %1, align 8
  br label %if.end52

if.else:                                          ; preds = %if.then21
  %rtuint51 = bitcast [1 x %union.rtunion_def]* %fld24 to i32*
  %11 = load i32* %rtuint51, align 4, !tbaa !3
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.end31
  %bf.load53 = phi i32 [ %bf.load53.pre, %if.end31 ], [ %bf.load7, %if.else ]
  %i.0 = phi i32 [ %add, %if.end31 ], [ %11, %if.else ]
  %bf.clear54 = and i32 %bf.load53, 65535
  %cmp55 = icmp eq i32 %bf.clear54, 63
  %fld57 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1
  br i1 %cmp55, label %if.then56, label %if.else86

if.then56:                                        ; preds = %if.end52
  %rtx59 = bitcast [1 x %union.rtunion_def]* %fld57 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx59, align 8, !tbaa !5
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint62 = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %13 = load i32* %rtuint62, align 4, !tbaa !3
  %cmp63 = icmp sgt i32 %13, 52
  br i1 %cmp63, label %slow, label %if.end65

if.end65:                                         ; preds = %if.then56
  %14 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load75 = load i32* %14, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 16
  %bf.clear77 = and i32 %bf.lshr76, 255
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 1
  %rtuint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*
  %15 = load i32* %rtuint80, align 4, !tbaa !3
  %bf.lshr82 = lshr i32 %bf.load53, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %call84 = tail call i32 @subreg_regno_offset(i32 %13, i32 %bf.clear77, i32 %15, i32 %bf.clear83) #6
  %add85 = add i32 %call84, %13
  br label %if.end90

if.else86:                                        ; preds = %if.end52
  %rtuint89 = bitcast [1 x %union.rtunion_def]* %fld57 to i32*
  %16 = load i32* %rtuint89, align 4, !tbaa !3
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.end65
  %j.0 = phi i32 [ %add85, %if.end65 ], [ %16, %if.else86 ]
  %cmp91 = icmp eq i32 %i.0, %j.0
  %conv = zext i1 %cmp91 to i32
  br label %return

if.end92:                                         ; preds = %land.lhs.true6, %if.end, %land.lhs.true14, %land.lhs.true
  %17 = and i32 %bf.load46, 65534
  %18 = icmp eq i32 %17, 98
  %cmp99 = icmp eq i32 %bf.clear371, 101
  %or.cond266 = or i1 %18, %cmp99
  br i1 %or.cond266, label %if.then101, label %if.end106

if.then101:                                       ; preds = %if.end92
  %arrayidx103 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx104, align 8, !tbaa !5
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %cmp = icmp eq %struct.rtx_def* %19, %y
  br i1 %cmp, label %return, label %if.end

if.end106:                                        ; preds = %if.end92
  %bf.load107 = load i32* %1, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  switch i32 %bf.clear108, label %slow [
    i32 96, label %if.then121
    i32 97, label %if.then121
    i32 100, label %if.then121
  ]

if.then121:                                       ; preds = %if.end106, %if.end106, %if.end106
  %21 = load %struct.rtx_def** %rtx17, align 8, !tbaa !5
  %call125 = tail call i32 @operands_match_p(%struct.rtx_def* %x.tr369, %struct.rtx_def* %21) #7
  %tobool = icmp ne i32 %call125, 0
  %cond = select i1 %tobool, i32 2, i32 0
  ret i32 %cond

slow:                                             ; preds = %if.end106, %if.then56, %if.then23
  %bf.load127 = phi i32 [ %bf.load107, %if.end106 ], [ %bf.load53, %if.then56 ], [ %bf.load7, %if.then23 ]
  %bf.clear371409 = phi i32 [ %bf.clear371, %if.end106 ], [ %bf.clear371, %if.then56 ], [ 63, %if.then23 ]
  %bf.clear128 = and i32 %bf.load127, 65535
  %cmp129 = icmp eq i32 %bf.clear371409, %bf.clear128
  br i1 %cmp129, label %if.end132, label %return

if.end132:                                        ; preds = %slow
  switch i32 %bf.clear371409, label %if.end155 [
    i32 67, label %if.then135
    i32 68, label %if.then147
  ]

if.then135:                                       ; preds = %if.end132
  %arrayidx137 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 0
  %rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx138, align 8, !tbaa !5
  %23 = load %struct.rtx_def** %rtx17, align 8, !tbaa !5
  %cmp142 = icmp eq %struct.rtx_def* %22, %23
  %conv143 = zext i1 %cmp142 to i32
  br label %return

if.then147:                                       ; preds = %if.end132
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx149 to i8**
  %24 = load i8** %rtstr, align 8, !tbaa !5
  %rtstr152 = bitcast %union.rtunion_def* %arrayidx16 to i8**
  %25 = load i8** %rtstr152, align 8, !tbaa !5
  %cmp153 = icmp eq i8* %24, %25
  %conv154 = zext i1 %cmp153 to i32
  br label %return

if.end155:                                        ; preds = %if.end132
  %bf.load156 = load i32* %2, align 8
  %bf.lshr157342 = xor i32 %bf.load156, %bf.load127
  %26 = and i32 %bf.lshr157342, 16711680
  %cmp162 = icmp eq i32 %26, 0
  br i1 %cmp162, label %if.end165, label %return

if.end165:                                        ; preds = %if.end155
  %idxprom341 = zext i32 %bf.clear371409 to i64
  %arrayidx166 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom341
  %27 = load i8** %arrayidx166, align 8, !tbaa !5
  %arrayidx168 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom341
  %28 = load i8* %arrayidx168, align 1, !tbaa !1
  %cmp170355380 = icmp eq i8 %28, 0
  br i1 %cmp170355380, label %for.end264, label %for.body.lr.ph.lr.ph

for.body.lr.ph.lr.ph:                             ; preds = %if.end165
  %conv169 = zext i8 %28 to i32
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.body.lr.ph.lr.ph, %for.cond.outer.backedge
  %i.1354382.in = phi i32 [ %conv169, %for.body.lr.ph.lr.ph ], [ %i.1356, %for.cond.outer.backedge ]
  %success_2.0.ph381 = phi i32 [ 0, %for.body.lr.ph.lr.ph ], [ %success_2.0.ph.be, %for.cond.outer.backedge ]
  %29 = sext i32 %i.1354382.in to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %29, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %i.1356.in = phi i32 [ %i.1354382.in, %for.body.lr.ph ], [ %i.1356, %for.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %i.1356 = add nsw i32 %i.1356.in, -1
  %arrayidx174 = getelementptr inbounds i8* %27, i64 %indvars.iv.next
  %30 = load i8* %arrayidx174, align 1, !tbaa !1
  %conv175 = sext i8 %30 to i32
  switch i32 %conv175, label %sw.default [
    i32 119, label %sw.bb
    i32 105, label %sw.bb187
    i32 101, label %sw.bb199
    i32 48, label %for.cond.backedge
    i32 69, label %sw.bb217
  ]

sw.bb:                                            ; preds = %for.body
  %rtwint = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 %indvars.iv.next, i32 0
  %31 = load i64* %rtwint, align 8, !tbaa !6
  %rtwint182 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 %indvars.iv.next, i32 0
  %32 = load i64* %rtwint182, align 8, !tbaa !6
  %cmp183 = icmp eq i64 %31, %32
  br i1 %cmp183, label %for.cond.backedge, label %return

sw.bb187:                                         ; preds = %for.body
  %arrayidx190 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 %indvars.iv.next
  %rtint = bitcast %union.rtunion_def* %arrayidx190 to i32*
  %33 = load i32* %rtint, align 4, !tbaa !3
  %arrayidx193 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 %indvars.iv.next
  %rtint194 = bitcast %union.rtunion_def* %arrayidx193 to i32*
  %34 = load i32* %rtint194, align 4, !tbaa !3
  %cmp195 = icmp eq i32 %33, %34
  br i1 %cmp195, label %for.cond.backedge, label %return

sw.bb199:                                         ; preds = %for.body
  %arrayidx202 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 %indvars.iv.next
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx203, align 8, !tbaa !5
  %arrayidx206 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 %indvars.iv.next
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx207, align 8, !tbaa !5
  %call208 = tail call i32 @operands_match_p(%struct.rtx_def* %35, %struct.rtx_def* %36) #7
  switch i32 %call208, label %for.cond.backedge [
    i32 0, label %return
    i32 2, label %for.cond.outer.backedge
  ]

for.cond.backedge:                                ; preds = %sw.bb199, %sw.bb, %sw.bb187, %for.body
  %37 = trunc i64 %indvars.iv.next to i32
  %cmp170 = icmp sgt i32 %37, 0
  br i1 %cmp170, label %for.body, label %for.end264

for.cond.outer.backedge:                          ; preds = %sw.bb199, %for.cond236
  %success_2.0.ph.be = phi i32 [ %success_2.1.ph, %for.cond236 ], [ 1, %sw.bb199 ]
  %cmp170355 = icmp sgt i32 %i.1356, 0
  br i1 %cmp170355, label %for.body.lr.ph, label %for.end264

sw.bb217:                                         ; preds = %for.body
  %arrayidx220 = getelementptr inbounds %struct.rtx_def* %x.tr369, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtvec_def**
  %38 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %38, i64 0, i32 0
  %39 = load i32* %num_elem, align 4, !tbaa !3
  %arrayidx223 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec224 = bitcast %union.rtunion_def* %arrayidx223 to %struct.rtvec_def**
  %40 = load %struct.rtvec_def** %rtvec224, align 8, !tbaa !5
  %num_elem225 = getelementptr inbounds %struct.rtvec_def* %40, i64 0, i32 0
  %41 = load i32* %num_elem225, align 4, !tbaa !3
  %cmp226 = icmp eq i32 %39, %41
  br i1 %cmp226, label %for.cond236.outer, label %return

for.cond236.outer:                                ; preds = %for.body239, %sw.bb217
  %success_2.1.ph = phi i32 [ %success_2.0.ph381, %sw.bb217 ], [ 1, %for.body239 ]
  %j172.0.in.ph = phi i32 [ %39, %sw.bb217 ], [ %j172.0, %for.body239 ]
  %42 = sext i32 %j172.0.in.ph to i64
  br label %for.cond236

for.cond236:                                      ; preds = %for.cond236.outer, %for.body239
  %indvars.iv394 = phi i64 [ %42, %for.cond236.outer ], [ %indvars.iv.next395, %for.body239 ]
  %j172.0.in = phi i32 [ %j172.0.in.ph, %for.cond236.outer ], [ %j172.0, %for.body239 ]
  %indvars.iv.next395 = add i64 %indvars.iv394, -1
  %j172.0 = add nsw i32 %j172.0.in, -1
  %43 = trunc i64 %indvars.iv394 to i32
  %cmp237 = icmp sgt i32 %43, 0
  br i1 %cmp237, label %for.body239, label %for.cond.outer.backedge

for.body239:                                      ; preds = %for.cond236
  %44 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx245 = getelementptr inbounds %struct.rtvec_def* %44, i64 0, i32 1, i64 %indvars.iv.next395
  %45 = load %struct.rtx_def** %arrayidx245, align 8, !tbaa !5
  %46 = load %struct.rtvec_def** %rtvec224, align 8, !tbaa !5
  %arrayidx252 = getelementptr inbounds %struct.rtvec_def* %46, i64 0, i32 1, i64 %indvars.iv.next395
  %47 = load %struct.rtx_def** %arrayidx252, align 8, !tbaa !5
  %call253 = tail call i32 @operands_match_p(%struct.rtx_def* %45, %struct.rtx_def* %47) #7
  switch i32 %call253, label %for.cond236 [
    i32 0, label %return
    i32 2, label %for.cond236.outer
  ]

sw.default:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2206, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.operands_match_p, i64 0, i64 0)) #8
  unreachable

for.end264:                                       ; preds = %if.end165, %for.cond.outer.backedge, %for.cond.backedge
  %success_2.0.ph378 = phi i32 [ %success_2.0.ph381, %for.cond.backedge ], [ 0, %if.end165 ], [ %success_2.0.ph.be, %for.cond.outer.backedge ]
  %add265 = add nsw i32 %success_2.0.ph378, 1
  br label %return

return:                                           ; preds = %entry, %if.then101, %sw.bb199, %sw.bb187, %sw.bb, %sw.bb217, %for.body239, %if.end155, %slow, %for.end264, %if.then147, %if.then135, %if.end90
  %retval.0 = phi i32 [ %conv143, %if.then135 ], [ %conv154, %if.then147 ], [ %add265, %for.end264 ], [ %conv, %if.end90 ], [ 0, %slow ], [ 0, %if.end155 ], [ 0, %for.body239 ], [ 0, %sw.bb217 ], [ 0, %sw.bb ], [ 0, %sw.bb187 ], [ 0, %sw.bb199 ], [ 1, %if.then101 ], [ 1, %entry ]
  ret i32 %retval.0
}
