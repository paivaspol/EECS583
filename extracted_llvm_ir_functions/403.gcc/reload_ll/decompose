define internal fastcc void @decompose(%struct.decomposition* noalias sret %agg.result, %struct.rtx_def* %x) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then565, %if.then585, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %57, %if.then585 ], [ %55, %if.then565 ]
  %0 = bitcast %struct.rtx_def* %x.tr to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else733 [
    i32 66, label %if.then
    i32 61, label %if.then454
    i32 63, label %if.then565
    i32 67, label %if.end737
    i32 68, label %if.end737
    i32 54, label %if.end737
    i32 55, label %if.end737
    i32 58, label %if.end737
    i32 134, label %if.end737
    i32 56, label %if.end737
    i32 140, label %if.end737
    i32 62, label %if.end737
  ]

if.then:                                          ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  switch i32 %bf.clear3, label %if.end197 [
    i32 96, label %if.then16
    i32 97, label %if.then16
    i32 98, label %if.then16
    i32 99, label %if.then16
    i32 100, label %if.then48
    i32 101, label %if.then48
    i32 58, label %if.then193
  ]

if.then16:                                        ; preds = %if.then, %if.then, %if.then, %if.then
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear22 = and i32 %bf.lshr, 255
  %idxprom895 = zext i32 %bf.clear22 to i64
  %arrayidx23 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom895
  %4 = load i8* %arrayidx23, align 1, !tbaa !1
  %conv = zext i8 %4 to i64
  %sub = sub i64 0, %conv
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx35 to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !3
  %cmp36 = icmp eq i32 %5, 7
  %conv37 = zext i1 %cmp36 to i32
  %val.sroa.0.0.idx = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 0
  store i32 0, i32* %val.sroa.0.0.idx, align 8
  %val.sroa.1.4.idx809 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 1
  store i32 %conv37, i32* %val.sroa.1.4.idx809, align 4
  %val.sroa.2.8.idx816 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 2
  store %struct.rtx_def* %3, %struct.rtx_def** %val.sroa.2.8.idx816, align 8
  %val.sroa.3.16.idx824 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 3
  store i64 %sub, i64* %val.sroa.3.16.idx824, align 8
  %val.sroa.4.24.idx852 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 4
  store i64 %conv, i64* %val.sroa.4.24.idx852, align 8
  br label %return

if.then48:                                        ; preds = %if.then, %if.then
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx51, align 8, !tbaa !5
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load52 = load i32* %7, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 75
  br i1 %cmp54, label %land.lhs.true, label %if.end188

land.lhs.true:                                    ; preds = %if.then48
  %arrayidx57 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx58, align 8, !tbaa !5
  %fld62 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtx64 = bitcast [1 x %union.rtunion_def]* %fld62 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx64, align 8, !tbaa !5
  %cmp65 = icmp eq %struct.rtx_def* %8, %9
  br i1 %cmp65, label %land.lhs.true67, label %if.end188

land.lhs.true67:                                  ; preds = %land.lhs.true
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx73, align 8, !tbaa !5
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load74 = load i32* %11, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  switch i32 %bf.clear75, label %if.end188 [
    i32 67, label %if.then155
    i32 68, label %if.then155
    i32 54, label %if.then155
    i32 55, label %if.then155
    i32 58, label %if.then155
    i32 134, label %if.then155
    i32 56, label %if.then155
    i32 140, label %if.then155
  ]

if.then155:                                       ; preds = %land.lhs.true67, %land.lhs.true67, %land.lhs.true67, %land.lhs.true67, %land.lhs.true67, %land.lhs.true67, %land.lhs.true67, %land.lhs.true67
  %rtwint = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0, i32 0
  %12 = load i64* %rtwint, align 8, !tbaa !6
  %sub168 = sub nsw i64 0, %12
  %arrayidx182 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint183 = bitcast %union.rtunion_def* %arrayidx182 to i32*
  %13 = load i32* %rtuint183, align 4, !tbaa !3
  %cmp184 = icmp eq i32 %13, 7
  %conv185 = zext i1 %cmp184 to i32
  %val.sroa.0.0.idx803 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 0
  store i32 0, i32* %val.sroa.0.0.idx803, align 8
  %val.sroa.1.4.idx810 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 1
  store i32 %conv185, i32* %val.sroa.1.4.idx810, align 4
  %val.sroa.2.8.idx818 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 2
  store %struct.rtx_def* %8, %struct.rtx_def** %val.sroa.2.8.idx818, align 8
  %val.sroa.3.16.idx825 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 3
  store i64 %sub168, i64* %val.sroa.3.16.idx825, align 8
  %val.sroa.4.24.idx853 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 4
  store i64 %12, i64* %val.sroa.4.24.idx853, align 8
  br label %return

if.end188:                                        ; preds = %land.lhs.true67, %if.then48, %land.lhs.true
  %cmp191 = icmp eq i32 %bf.clear3, 58
  br i1 %cmp191, label %if.then193, label %if.end197

if.then193:                                       ; preds = %if.then, %if.end188
  %arrayidx195 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx196, align 8, !tbaa !5
  %.phi.trans.insert = bitcast %struct.rtx_def* %14 to i32*
  %bf.load198.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end197

if.end197:                                        ; preds = %if.then, %if.then193, %if.end188
  %bf.load198 = phi i32 [ %bf.load198.pre, %if.then193 ], [ %bf.load2, %if.end188 ], [ %bf.load2, %if.then ]
  %all_const.0 = phi i32 [ 1, %if.then193 ], [ 0, %if.end188 ], [ 0, %if.then ]
  %addr.0 = phi %struct.rtx_def* [ %14, %if.then193 ], [ %1, %if.end188 ], [ %1, %if.then ]
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 75
  br i1 %cmp200, label %if.then202, label %if.end345

if.then202:                                       ; preds = %if.end197
  %fld203 = getelementptr inbounds %struct.rtx_def* %addr.0, i64 0, i32 1
  %rtx205 = bitcast [1 x %union.rtunion_def]* %fld203 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx205, align 8, !tbaa !5
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load206 = load i32* %16, align 8
  %bf.clear207 = and i32 %bf.load206, 65535
  switch i32 %bf.clear207, label %if.else [
    i32 67, label %if.then266
    i32 68, label %if.then266
    i32 54, label %if.then266
    i32 55, label %if.then266
    i32 58, label %if.then266
    i32 134, label %if.then266
    i32 56, label %if.then266
    i32 140, label %if.then266
  ]

if.then266:                                       ; preds = %if.then202, %if.then202, %if.then202, %if.then202, %if.then202, %if.then202, %if.then202, %if.then202
  %arrayidx268 = getelementptr inbounds %struct.rtx_def* %addr.0, i64 0, i32 1, i64 1
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx269, align 8, !tbaa !5
  br label %if.end345

if.else:                                          ; preds = %if.then202
  %arrayidx274 = getelementptr inbounds %struct.rtx_def* %addr.0, i64 0, i32 1, i64 1
  %rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx275, align 8, !tbaa !5
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load276 = load i32* %19, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  switch i32 %bf.clear277, label %if.end345 [
    i32 67, label %if.then336
    i32 68, label %if.then336
    i32 54, label %if.then336
    i32 55, label %if.then336
    i32 58, label %if.then336
    i32 134, label %if.then336
    i32 56, label %if.then336
    i32 140, label %if.then336
  ]

if.then336:                                       ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else
  br label %if.end345

if.end345:                                        ; preds = %if.else, %if.then266, %if.then336, %if.end197
  %base1.0 = phi %struct.rtx_def* [ %17, %if.then266 ], [ %15, %if.then336 ], [ null, %if.end197 ], [ null, %if.else ]
  %offset.0 = phi %struct.rtx_def* [ %15, %if.then266 ], [ %18, %if.then336 ], [ null, %if.end197 ], [ null, %if.else ]
  %cmp346 = icmp eq %struct.rtx_def* %offset.0, null
  %20 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %addr.0.base1.0 = select i1 %cmp346, %struct.rtx_def* %addr.0, %struct.rtx_def* %base1.0
  %.offset.0 = select i1 %cmp346, %struct.rtx_def* %20, %struct.rtx_def* %offset.0
  %21 = bitcast %struct.rtx_def* %.offset.0 to i32*
  %bf.load350 = load i32* %21, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  %cmp352 = icmp eq i32 %bf.clear351, 58
  br i1 %cmp352, label %if.then354, label %if.end358

if.then354:                                       ; preds = %if.end345
  %arrayidx356 = getelementptr inbounds %struct.rtx_def* %.offset.0, i64 0, i32 1, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx357, align 8, !tbaa !5
  %.phi.trans.insert937 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load359.pre = load i32* %.phi.trans.insert937, align 8
  br label %if.end358

if.end358:                                        ; preds = %if.then354, %if.end345
  %bf.load359 = phi i32 [ %bf.load359.pre, %if.then354 ], [ %bf.load350, %if.end345 ]
  %offset.2 = phi %struct.rtx_def* [ %22, %if.then354 ], [ %.offset.0, %if.end345 ]
  %bf.clear360 = and i32 %bf.load359, 65535
  switch i32 %bf.clear360, label %if.then412 [
    i32 75, label %if.then363
    i32 54, label %if.end418
  ]

if.then363:                                       ; preds = %if.end358
  %fld364 = getelementptr inbounds %struct.rtx_def* %offset.2, i64 0, i32 1
  %rtx366 = bitcast [1 x %union.rtunion_def]* %fld364 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx366, align 8, !tbaa !5
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load367 = load i32* %24, align 8
  %bf.clear368 = and i32 %bf.load367, 65535
  %cmp369 = icmp eq i32 %bf.clear368, 54
  br i1 %cmp369, label %if.then371, label %if.else381

if.then371:                                       ; preds = %if.then363
  %25 = bitcast %struct.rtx_def* %addr.0.base1.0 to i32*
  %bf.load372 = load i32* %25, align 8
  %bf.lshr373 = lshr i32 %bf.load372, 16
  %bf.clear374 = and i32 %bf.lshr373, 255
  %arrayidx376 = getelementptr inbounds %struct.rtx_def* %offset.2, i64 0, i32 1, i64 1
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx377, align 8, !tbaa !5
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear374, %struct.rtx_def* %addr.0.base1.0, %struct.rtx_def* %26) #6
  %27 = load %struct.rtx_def** %rtx366, align 8, !tbaa !5
  br label %if.end418

if.else381:                                       ; preds = %if.then363
  %arrayidx383 = getelementptr inbounds %struct.rtx_def* %offset.2, i64 0, i32 1, i64 1
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx384, align 8, !tbaa !5
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load385 = load i32* %29, align 8
  %bf.clear386 = and i32 %bf.load385, 65535
  %cmp387 = icmp eq i32 %bf.clear386, 54
  %30 = bitcast %struct.rtx_def* %addr.0.base1.0 to i32*
  %bf.load390 = load i32* %30, align 8
  %bf.lshr391 = lshr i32 %bf.load390, 16
  %bf.clear392 = and i32 %bf.lshr391, 255
  br i1 %cmp387, label %if.then389, label %if.else400

if.then389:                                       ; preds = %if.else381
  %call396 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear392, %struct.rtx_def* %addr.0.base1.0, %struct.rtx_def* %23) #6
  %31 = load %struct.rtx_def** %rtx384, align 8, !tbaa !5
  br label %if.end418

if.else400:                                       ; preds = %if.else381
  %call404 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear392, %struct.rtx_def* %addr.0.base1.0, %struct.rtx_def* %offset.2) #6
  %32 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %if.end418

if.then412:                                       ; preds = %if.end358
  %33 = bitcast %struct.rtx_def* %addr.0.base1.0 to i32*
  %bf.load413 = load i32* %33, align 8
  %bf.lshr414 = lshr i32 %bf.load413, 16
  %bf.clear415 = and i32 %bf.lshr414, 255
  %call416 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear415, %struct.rtx_def* %addr.0.base1.0, %struct.rtx_def* %offset.2) #6
  %34 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  br label %if.end418

if.end418:                                        ; preds = %if.end358, %if.then412, %if.then371, %if.else400, %if.then389
  %base1.2 = phi %struct.rtx_def* [ %call, %if.then371 ], [ %call396, %if.then389 ], [ %call404, %if.else400 ], [ %call416, %if.then412 ], [ %addr.0.base1.0, %if.end358 ]
  %offset.3 = phi %struct.rtx_def* [ %27, %if.then371 ], [ %31, %if.then389 ], [ %32, %if.else400 ], [ %34, %if.then412 ], [ %offset.2, %if.end358 ]
  %tobool = icmp eq i32 %all_const.0, 0
  br i1 %tobool, label %if.end429, label %land.lhs.true419

land.lhs.true419:                                 ; preds = %if.end418
  %35 = bitcast %struct.rtx_def* %base1.2 to i32*
  %bf.load420 = load i32* %35, align 8
  %bf.clear421 = and i32 %bf.load420, 65535
  %cmp422 = icmp eq i32 %bf.clear421, 75
  br i1 %cmp422, label %if.then424, label %if.end429

if.then424:                                       ; preds = %land.lhs.true419
  %bf.lshr426 = lshr i32 %bf.load420, 16
  %bf.clear427 = and i32 %bf.lshr426, 255
  %call428 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %bf.clear427, %struct.rtx_def* %base1.2) #6
  br label %if.end429

if.end429:                                        ; preds = %land.lhs.true419, %if.end418, %if.then424
  %base1.3 = phi %struct.rtx_def* [ %call428, %if.then424 ], [ %base1.2, %if.end418 ], [ %base1.2, %land.lhs.true419 ]
  %36 = bitcast %struct.rtx_def* %offset.3 to i32*
  %bf.load430 = load i32* %36, align 8
  %bf.clear431 = and i32 %bf.load430, 65535
  %cmp432 = icmp eq i32 %bf.clear431, 54
  br i1 %cmp432, label %if.end435, label %if.then434

if.then434:                                       ; preds = %if.end429
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2315, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.decompose, i64 0, i64 0)) #8
  unreachable

if.end435:                                        ; preds = %if.end429
  %rtwint438 = getelementptr inbounds %struct.rtx_def* %offset.3, i64 0, i32 1, i64 0, i32 0
  %37 = load i64* %rtwint438, align 8, !tbaa !6
  %bf.load441 = load i32* %0, align 8
  %bf.lshr442 = lshr i32 %bf.load441, 16
  %bf.clear443 = and i32 %bf.lshr442, 255
  %idxprom444894 = zext i32 %bf.clear443 to i64
  %arrayidx445 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom444894
  %38 = load i8* %arrayidx445, align 1, !tbaa !1
  %conv446 = zext i8 %38 to i64
  %add = add nsw i64 %conv446, %37
  %val.sroa.0.0.idx805 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 0
  store i32 0, i32* %val.sroa.0.0.idx805, align 8
  %val.sroa.1.4.idx812 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 1
  store i32 0, i32* %val.sroa.1.4.idx812, align 4
  %val.sroa.2.8.idx820 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 2
  store %struct.rtx_def* %base1.3, %struct.rtx_def** %val.sroa.2.8.idx820, align 8
  %val.sroa.3.16.idx827 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 3
  store i64 %37, i64* %val.sroa.3.16.idx827, align 8
  %val.sroa.4.24.idx855 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 4
  store i64 %add, i64* %val.sroa.4.24.idx855, align 8
  br label %return

if.then454:                                       ; preds = %tailrecurse
  %call456 = tail call i32 @true_regnum(%struct.rtx_def* %x.tr) #6
  %conv457 = sext i32 %call456 to i64
  %cmp460 = icmp slt i32 %call456, 0
  br i1 %cmp460, label %if.then462, label %if.else471

if.then462:                                       ; preds = %if.then454
  %arrayidx464 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtuint465 = bitcast %union.rtunion_def* %arrayidx464 to i32*
  %39 = load i32* %rtuint465, align 4, !tbaa !3
  %conv466 = zext i32 %39 to i64
  %add469 = add nsw i64 %conv466, 1
  br label %if.end737

if.else471:                                       ; preds = %if.then454
  %call456.off = add i32 %call456, -8
  %40 = icmp ult i32 %call456.off, 8
  %call456.off906 = add i32 %call456, -21
  %41 = icmp ult i32 %call456.off906, 8
  %or.cond = or i1 %40, %41
  %call456.off907 = add i32 %call456, -45
  %42 = icmp ult i32 %call456.off907, 8
  %or.cond911 = or i1 %or.cond, %42
  %call456.off908 = add i32 %call456, -29
  %43 = icmp ult i32 %call456.off908, 8
  %or.cond913 = or i1 %or.cond911, %43
  %bf.load504 = load i32* %0, align 8
  %bf.lshr505 = lshr i32 %bf.load504, 16
  %bf.clear506 = and i32 %bf.lshr505, 255
  br i1 %or.cond913, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else471
  %idxprom507892 = zext i32 %bf.clear506 to i64
  %arrayidx508 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom507892
  %44 = load i32* %arrayidx508, align 4, !tbaa !4
  %cmp509 = icmp eq i32 %44, 5
  br i1 %cmp509, label %cond.end554, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp516 = icmp eq i32 %44, 6
  %phitmp893 = select i1 %cmp516, i32 2, i32 1
  br label %cond.end554

cond.false:                                       ; preds = %if.else471
  switch i32 %bf.clear506, label %cond.false536 [
    i32 18, label %cond.true523
    i32 24, label %cond.true532
  ]

cond.true523:                                     ; preds = %cond.false
  %45 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %45, 25
  %46 = and i32 %and, 1
  %47 = xor i32 %46, 3
  br label %cond.end554

cond.true532:                                     ; preds = %cond.false
  %48 = load i32* @target_flags, align 4, !tbaa !3
  %and533 = lshr i32 %48, 24
  %49 = and i32 %and533, 2
  %50 = xor i32 %49, 6
  br label %cond.end554

cond.false536:                                    ; preds = %cond.false
  %idxprom540891 = zext i32 %bf.clear506 to i64
  %arrayidx541 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom540891
  %51 = load i8* %arrayidx541, align 1, !tbaa !1
  %conv542 = zext i8 %51 to i32
  %52 = load i32* @target_flags, align 4, !tbaa !3
  %and543 = lshr i32 %52, 23
  %53 = and i32 %and543, 4
  %54 = add i32 %53, 4
  %add546 = add i32 %conv542, -1
  %sub547 = add i32 %add546, %54
  %div = sdiv i32 %sub547, %54
  br label %cond.end554

cond.end554:                                      ; preds = %cond.true, %lor.rhs, %cond.true523, %cond.false536, %cond.true532
  %cond555 = phi i32 [ %47, %cond.true523 ], [ %50, %cond.true532 ], [ %div, %cond.false536 ], [ 2, %cond.true ], [ %phitmp893, %lor.rhs ]
  %conv556 = sext i32 %cond555 to i64
  %add557 = add nsw i64 %conv556, %conv457
  br label %if.end737

if.then565:                                       ; preds = %tailrecurse
  %arrayidx567 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx568 = bitcast %union.rtunion_def* %arrayidx567 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx568, align 8, !tbaa !5
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load569 = load i32* %56, align 8
  %bf.clear570 = and i32 %bf.load569, 65535
  %cmp571 = icmp eq i32 %bf.clear570, 61
  br i1 %cmp571, label %if.end577, label %tailrecurse

if.end577:                                        ; preds = %if.then565
  %call579 = tail call i32 @true_regnum(%struct.rtx_def* %x.tr) #6
  %conv580 = sext i32 %call579 to i64
  %cmp583 = icmp slt i32 %call579, 0
  br i1 %cmp583, label %if.then585, label %if.else589

if.then585:                                       ; preds = %if.end577
  %57 = load %struct.rtx_def** %rtx568, align 8, !tbaa !5
  br label %tailrecurse

if.else589:                                       ; preds = %if.end577
  %call579.off = add i32 %call579, -8
  %58 = icmp ult i32 %call579.off, 8
  %call579.off903 = add i32 %call579, -21
  %59 = icmp ult i32 %call579.off903, 8
  %or.cond915 = or i1 %58, %59
  %call579.off904 = add i32 %call579, -45
  %60 = icmp ult i32 %call579.off904, 8
  %or.cond917 = or i1 %or.cond915, %60
  %call579.off905 = add i32 %call579, -29
  %61 = icmp ult i32 %call579.off905, 8
  %or.cond919 = or i1 %or.cond917, %61
  %bf.load623 = load i32* %0, align 8
  %bf.lshr624 = lshr i32 %bf.load623, 16
  %bf.clear625 = and i32 %bf.lshr624, 255
  br i1 %or.cond919, label %cond.true622, label %cond.false640

cond.true622:                                     ; preds = %if.else589
  %idxprom626890 = zext i32 %bf.clear625 to i64
  %arrayidx627 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom626890
  %62 = load i32* %arrayidx627, align 4, !tbaa !4
  %cmp628 = icmp eq i32 %62, 5
  br i1 %cmp628, label %cond.end680, label %lor.rhs630

lor.rhs630:                                       ; preds = %cond.true622
  %cmp636 = icmp eq i32 %62, 6
  %phitmp = select i1 %cmp636, i32 2, i32 1
  br label %cond.end680

cond.false640:                                    ; preds = %if.else589
  switch i32 %bf.clear625, label %cond.false660 [
    i32 18, label %cond.true646
    i32 24, label %cond.true656
  ]

cond.true646:                                     ; preds = %cond.false640
  %63 = load i32* @target_flags, align 4, !tbaa !3
  %and647 = lshr i32 %63, 25
  %64 = and i32 %and647, 1
  %65 = xor i32 %64, 3
  br label %cond.end680

cond.true656:                                     ; preds = %cond.false640
  %66 = load i32* @target_flags, align 4, !tbaa !3
  %and657 = lshr i32 %66, 24
  %67 = and i32 %and657, 2
  %68 = xor i32 %67, 6
  br label %cond.end680

cond.false660:                                    ; preds = %cond.false640
  %idxprom664889 = zext i32 %bf.clear625 to i64
  %arrayidx665 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom664889
  %69 = load i8* %arrayidx665, align 1, !tbaa !1
  %conv666 = zext i8 %69 to i32
  %70 = load i32* @target_flags, align 4, !tbaa !3
  %and667 = lshr i32 %70, 23
  %71 = and i32 %and667, 4
  %72 = add i32 %71, 4
  %add670 = add i32 %conv666, -1
  %sub671 = add i32 %add670, %72
  %div675 = sdiv i32 %sub671, %72
  br label %cond.end680

cond.end680:                                      ; preds = %cond.true622, %lor.rhs630, %cond.true646, %cond.false660, %cond.true656
  %cond681 = phi i32 [ %65, %cond.true646 ], [ %68, %cond.true656 ], [ %div675, %cond.false660 ], [ 2, %cond.true622 ], [ %phitmp, %lor.rhs630 ]
  %conv682 = sext i32 %cond681 to i64
  %add683 = add nsw i64 %conv682, %conv580
  br label %if.end737

if.else733:                                       ; preds = %tailrecurse
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2354, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.decompose, i64 0, i64 0)) #8
  unreachable

if.end737:                                        ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %cond.end554, %if.then462, %cond.end680
  %val.sroa.4.0 = phi i64 [ %add469, %if.then462 ], [ %add557, %cond.end554 ], [ %add683, %cond.end680 ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ]
  %val.sroa.3.0 = phi i64 [ %conv466, %if.then462 ], [ %conv457, %cond.end554 ], [ %conv580, %cond.end680 ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ]
  %val.sroa.1.0 = phi i32 [ 0, %if.then462 ], [ 0, %cond.end554 ], [ 0, %cond.end680 ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ]
  %val.sroa.0.0 = phi i32 [ 1, %if.then462 ], [ 1, %cond.end554 ], [ 1, %cond.end680 ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ]
  %val.sroa.0.0.idx807 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 0
  store i32 %val.sroa.0.0, i32* %val.sroa.0.0.idx807, align 8
  %val.sroa.1.4.idx814 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 1
  store i32 %val.sroa.1.0, i32* %val.sroa.1.4.idx814, align 4
  %val.sroa.2.8.idx822 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 2
  store %struct.rtx_def* null, %struct.rtx_def** %val.sroa.2.8.idx822, align 8
  %val.sroa.3.16.idx850 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 3
  store i64 %val.sroa.3.0, i64* %val.sroa.3.16.idx850, align 8
  %val.sroa.4.24.idx857 = getelementptr inbounds %struct.decomposition* %agg.result, i64 0, i32 4
  store i64 %val.sroa.4.0, i64* %val.sroa.4.24.idx857, align 8
  br label %return

return:                                           ; preds = %if.end737, %if.end435, %if.then155, %if.then16
  ret void
}
