define %struct.ht_identifier* @ht_lookup(%struct.ht* %table, i8* %str, i32 %len, i32 %insert) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.ht* %table}, i64 0, metadata !103), !dbg !213
  tail call void @llvm.dbg.value(metadata !{i8* %str}, i64 0, metadata !104), !dbg !214
  tail call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !105), !dbg !215
  tail call void @llvm.dbg.value(metadata !{i32 %insert}, i64 0, metadata !106), !dbg !216
  tail call void @llvm.dbg.value(metadata !{i8* %str}, i64 0, metadata !217), !dbg !219
  tail call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !220), !dbg !221
  tail call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !222), !dbg !223
  tail call void @llvm.dbg.value(metadata !9, i64 0, metadata !224), !dbg !225
  %tobool3.i = icmp eq i32 %len, 0, !dbg !226
  br i1 %tobool3.i, label %calc_hash.exit, label %while.body.i, !dbg !226

while.body.i:                                     ; preds = %entry, %while.body.i
  %r.06.i = phi i32 [ %add.i, %while.body.i ], [ 0, %entry ]
  %n.05.i = phi i32 [ %dec.i, %while.body.i ], [ %len, %entry ]
  %str.addr.04.i = phi i8* [ %incdec.ptr.i, %while.body.i ], [ %str, %entry ]
  %dec.i = add i32 %n.05.i, -1, !dbg !226
  %mul.i = mul i32 %r.06.i, 67, !dbg !227
  %incdec.ptr.i = getelementptr inbounds i8* %str.addr.04.i, i64 1, !dbg !227
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !217), !dbg !227
  %0 = load i8* %str.addr.04.i, align 1, !dbg !227, !tbaa !201
  %conv.i = zext i8 %0 to i32, !dbg !227
  %sub.i = add i32 %mul.i, -113, !dbg !227
  %add.i = add i32 %sub.i, %conv.i, !dbg !227
  tail call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !224), !dbg !227
  %tobool.i = icmp eq i32 %dec.i, 0, !dbg !226
  br i1 %tobool.i, label %calc_hash.exit, label %while.body.i, !dbg !226

calc_hash.exit:                                   ; preds = %while.body.i, %entry
  %r.0.lcssa.i = phi i32 [ 0, %entry ], [ %add.i, %while.body.i ]
  %add1.i = add i32 %r.0.lcssa.i, %len, !dbg !228
  tail call void @llvm.dbg.value(metadata !{i32 %add1.i}, i64 0, metadata !107), !dbg !218
  %nslots = getelementptr inbounds %struct.ht* %table, i64 0, i32 3, !dbg !229
  %1 = load i32* %nslots, align 4, !dbg !229, !tbaa !200
  %sub = add i32 %1, -1, !dbg !229
  %mul = mul i32 %add1.i, 17, !dbg !230
  %and4167 = and i32 %mul, %sub, !dbg !230
  %or = or i32 %and4167, 1, !dbg !230
  tail call void @llvm.dbg.value(metadata !{i32 %or}, i64 0, metadata !108), !dbg !230
  %searches = getelementptr inbounds %struct.ht* %table, i64 0, i32 6, !dbg !231
  %2 = load i32* %searches, align 4, !dbg !231, !tbaa !200
  %inc = add i32 %2, 1, !dbg !231
  store i32 %inc, i32* %searches, align 4, !dbg !231, !tbaa !200
  %index.0178 = and i32 %add1.i, %sub, !dbg !232
  %idxprom179 = zext i32 %index.0178 to i64, !dbg !233
  %entries = getelementptr inbounds %struct.ht* %table, i64 0, i32 1, !dbg !233
  %3 = load %struct.ht_identifier*** %entries, align 8, !dbg !233, !tbaa !204
  %arrayidx180 = getelementptr inbounds %struct.ht_identifier** %3, i64 %idxprom179, !dbg !233
  %4 = load %struct.ht_identifier** %arrayidx180, align 8, !dbg !233, !tbaa !204
  tail call void @llvm.dbg.value(metadata !{%struct.ht_identifier* %5}, i64 0, metadata !113), !dbg !233
  %cmp181 = icmp eq %struct.ht_identifier* %4, null, !dbg !234
  br i1 %cmp181, label %for.end, label %if.end.lr.ph, !dbg !234

if.end.lr.ph:                                     ; preds = %calc_hash.exit
  %conv11 = zext i32 %len to i64, !dbg !235
  %collisions = getelementptr inbounds %struct.ht* %table, i64 0, i32 7, !dbg !236
  br label %if.end, !dbg !234

if.end:                                           ; preds = %if.end.lr.ph, %if.end25
  %5 = phi %struct.ht_identifier* [ %4, %if.end.lr.ph ], [ %12, %if.end25 ]
  %index.0182 = phi i32 [ %index.0178, %if.end.lr.ph ], [ %index.0, %if.end25 ]
  %len7 = getelementptr inbounds %struct.ht_identifier* %5, i64 0, i32 0, !dbg !235
  %6 = load i32* %len7, align 4, !dbg !235, !tbaa !200
  %cmp8 = icmp eq i32 %6, %len, !dbg !235
  br i1 %cmp8, label %land.lhs.true, label %if.end25, !dbg !235

land.lhs.true:                                    ; preds = %if.end
  %str10 = getelementptr inbounds %struct.ht_identifier* %5, i64 0, i32 1, !dbg !235
  %7 = load i8** %str10, align 8, !dbg !235, !tbaa !204
  %call12 = tail call i32 @memcmp(i8* %7, i8* %str, i64 %conv11) #8, !dbg !235
  %tobool = icmp eq i32 %call12, 0, !dbg !235
  br i1 %tobool, label %if.then13, label %if.end25, !dbg !235

if.then13:                                        ; preds = %land.lhs.true
  %cmp14 = icmp eq i32 %insert, 2, !dbg !237
  br i1 %cmp14, label %if.then16, label %return, !dbg !237

if.then16:                                        ; preds = %if.then13
  %stack = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, !dbg !238
  tail call void @llvm.dbg.value(metadata !{%struct.obstack* %stack}, i64 0, metadata !114), !dbg !238
  tail call void @llvm.dbg.value(metadata !{i8* %str}, i64 0, metadata !119), !dbg !238
  %chunk = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 1, !dbg !238
  %8 = load %struct._obstack_chunk** %chunk, align 8, !dbg !238, !tbaa !204
  %9 = bitcast %struct._obstack_chunk* %8 to i8*, !dbg !238
  %cmp17 = icmp ult i8* %9, %str, !dbg !238
  br i1 %cmp17, label %land.lhs.true19, label %if.else, !dbg !238

land.lhs.true19:                                  ; preds = %if.then16
  %chunk_limit = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 4, !dbg !238
  %10 = load i8** %chunk_limit, align 8, !dbg !238, !tbaa !204
  %cmp20 = icmp ugt i8* %10, %str, !dbg !238
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !238

if.then22:                                        ; preds = %land.lhs.true19
  %object_base = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 2, !dbg !238
  store i8* %str, i8** %object_base, align 8, !dbg !238, !tbaa !204
  %next_free = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 3, !dbg !238
  store i8* %str, i8** %next_free, align 8, !dbg !238, !tbaa !204
  br label %return, !dbg !238

if.else:                                          ; preds = %land.lhs.true19, %if.then16
  tail call void @obstack_free(%struct.obstack* %stack, i8* %str) #7, !dbg !238
  br label %return

if.end25:                                         ; preds = %land.lhs.true, %if.end
  %add = add i32 %index.0182, %or, !dbg !239
  %11 = load i32* %collisions, align 4, !dbg !236, !tbaa !200
  %inc29 = add i32 %11, 1, !dbg !236
  store i32 %inc29, i32* %collisions, align 4, !dbg !236, !tbaa !200
  %index.0 = and i32 %add, %sub, !dbg !232
  %idxprom = zext i32 %index.0 to i64, !dbg !233
  %arrayidx = getelementptr inbounds %struct.ht_identifier** %3, i64 %idxprom, !dbg !233
  %12 = load %struct.ht_identifier** %arrayidx, align 8, !dbg !233, !tbaa !204
  tail call void @llvm.dbg.value(metadata !{%struct.ht_identifier* %5}, i64 0, metadata !113), !dbg !233
  %cmp = icmp eq %struct.ht_identifier* %12, null, !dbg !234
  br i1 %cmp, label %for.end, label %if.end, !dbg !234

for.end:                                          ; preds = %if.end25, %calc_hash.exit
  %idxprom.lcssa = phi i64 [ %idxprom179, %calc_hash.exit ], [ %idxprom, %if.end25 ]
  %cmp30 = icmp eq i32 %insert, 0, !dbg !240
  br i1 %cmp30, label %return, label %if.end33, !dbg !240

if.end33:                                         ; preds = %for.end
  %alloc_node = getelementptr inbounds %struct.ht* %table, i64 0, i32 2, !dbg !241
  %13 = load %struct.ht_identifier* (%struct.ht*)** %alloc_node, align 8, !dbg !241, !tbaa !204
  %call34 = tail call %struct.ht_identifier* %13(%struct.ht* %table) #7, !dbg !241
  tail call void @llvm.dbg.value(metadata !{%struct.ht_identifier* %call34}, i64 0, metadata !113), !dbg !241
  %14 = load %struct.ht_identifier*** %entries, align 8, !dbg !242, !tbaa !204
  %arrayidx37 = getelementptr inbounds %struct.ht_identifier** %14, i64 %idxprom.lcssa, !dbg !242
  store %struct.ht_identifier* %call34, %struct.ht_identifier** %arrayidx37, align 8, !dbg !242, !tbaa !204
  %len38 = getelementptr inbounds %struct.ht_identifier* %call34, i64 0, i32 0, !dbg !243
  store i32 %len, i32* %len38, align 4, !dbg !243, !tbaa !200
  %cmp39 = icmp eq i32 %insert, 1, !dbg !244
  br i1 %cmp39, label %if.then41, label %if.else90, !dbg !244

if.then41:                                        ; preds = %if.end33
  tail call void @llvm.dbg.value(metadata !{%struct.obstack* %stack42}, i64 0, metadata !120), !dbg !245
  tail call void @llvm.dbg.value(metadata !{%struct.obstack* %stack42}, i64 0, metadata !122), !dbg !246
  tail call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !124), !dbg !246
  %next_free44 = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 3, !dbg !246
  %15 = load i8** %next_free44, align 8, !dbg !246, !tbaa !204
  %idx.ext = sext i32 %len to i64, !dbg !246
  %add.ptr.sum = add i64 %idx.ext, 1, !dbg !246
  %add.ptr45 = getelementptr inbounds i8* %15, i64 %add.ptr.sum, !dbg !246
  %chunk_limit46 = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 4, !dbg !246
  %16 = load i8** %chunk_limit46, align 8, !dbg !246, !tbaa !204
  %cmp47 = icmp ugt i8* %add.ptr45, %16, !dbg !246
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !246

if.then49:                                        ; preds = %if.then41
  %stack42 = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, !dbg !245
  %add50 = add nsw i32 %len, 1, !dbg !246
  tail call void @_obstack_newchunk(%struct.obstack* %stack42, i32 %add50) #7, !dbg !246
  %.pre = load i8** %next_free44, align 8, !dbg !246, !tbaa !204
  br label %if.end51, !dbg !246

if.end51:                                         ; preds = %if.then49, %if.then41
  %17 = phi i8* [ %.pre, %if.then49 ], [ %15, %if.then41 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %str, i64 %idx.ext, i32 1, i1 false), !dbg !246
  %18 = load i8** %next_free44, align 8, !dbg !246, !tbaa !204
  %add.ptr56 = getelementptr inbounds i8* %18, i64 %idx.ext, !dbg !246
  %incdec.ptr = getelementptr inbounds i8* %18, i64 %add.ptr.sum, !dbg !246
  store i8* %incdec.ptr, i8** %next_free44, align 8, !dbg !246, !tbaa !204
  store i8 0, i8* %add.ptr56, align 1, !dbg !246, !tbaa !201
  tail call void @llvm.dbg.value(metadata !{%struct.obstack* %stack42}, i64 0, metadata !125), !dbg !247
  %object_base58 = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 2, !dbg !247
  %19 = load i8** %object_base58, align 8, !dbg !247, !tbaa !204
  tail call void @llvm.dbg.value(metadata !{i8* %19}, i64 0, metadata !127), !dbg !247
  %20 = load i8** %next_free44, align 8, !dbg !247, !tbaa !204
  %cmp60 = icmp eq i8* %20, %19, !dbg !247
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !247

if.then62:                                        ; preds = %if.end51
  %maybe_empty_object = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 10, !dbg !247
  %bf.load = load i8* %maybe_empty_object, align 8, !dbg !247
  %bf.set = or i8 %bf.load, 2, !dbg !247
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !247
  br label %if.end63, !dbg !247

if.end63:                                         ; preds = %if.then62, %if.end51
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64, !dbg !247
  %alignment_mask = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 6, !dbg !247
  %21 = load i32* %alignment_mask, align 4, !dbg !247, !tbaa !200
  %conv65 = sext i32 %21 to i64, !dbg !247
  %add66 = add nsw i64 %conv65, %sub.ptr.lhs.cast, !dbg !247
  %neg = xor i32 %21, -1, !dbg !247
  %conv68 = sext i32 %neg to i64, !dbg !247
  %and69 = and i64 %add66, %conv68, !dbg !247
  %add.ptr70 = getelementptr inbounds i8* null, i64 %and69, !dbg !247
  store i8* %add.ptr70, i8** %next_free44, align 8, !dbg !247, !tbaa !204
  %chunk73 = getelementptr inbounds %struct.ht* %table, i64 0, i32 0, i32 1, !dbg !247
  %22 = load %struct._obstack_chunk** %chunk73, align 8, !dbg !247, !tbaa !204
  %sub.ptr.lhs.cast74 = ptrtoint i8* %add.ptr70 to i64, !dbg !247
  %sub.ptr.rhs.cast = ptrtoint %struct._obstack_chunk* %22 to i64, !dbg !247
  %sub.ptr.sub75 = sub i64 %sub.ptr.lhs.cast74, %sub.ptr.rhs.cast, !dbg !247
  %23 = load i8** %chunk_limit46, align 8, !dbg !247, !tbaa !204
  %sub.ptr.lhs.cast78 = ptrtoint i8* %23 to i64, !dbg !247
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast, !dbg !247
  %cmp81 = icmp sgt i64 %sub.ptr.sub75, %sub.ptr.sub80, !dbg !247
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !247

if.then83:                                        ; preds = %if.end63
  store i8* %23, i8** %next_free44, align 8, !dbg !247, !tbaa !204
  br label %if.end86, !dbg !247

if.end86:                                         ; preds = %if.then83, %if.end63
  %24 = phi i8* [ %23, %if.then83 ], [ %add.ptr70, %if.end63 ]
  store i8* %24, i8** %object_base58, align 8, !dbg !247, !tbaa !204
  %str89 = getelementptr inbounds %struct.ht_identifier* %call34, i64 0, i32 1, !dbg !245
  store i8* %19, i8** %str89, align 8, !dbg !245, !tbaa !204
  br label %if.end92, !dbg !245

if.else90:                                        ; preds = %if.end33
  %str91 = getelementptr inbounds %struct.ht_identifier* %call34, i64 0, i32 1, !dbg !248
  store i8* %str, i8** %str91, align 8, !dbg !248, !tbaa !204
  br label %if.end92

if.end92:                                         ; preds = %if.else90, %if.end86
  %nelements = getelementptr inbounds %struct.ht* %table, i64 0, i32 4, !dbg !249
  %25 = load i32* %nelements, align 4, !dbg !249, !tbaa !200
  %inc93 = add i32 %25, 1, !dbg !249
  store i32 %inc93, i32* %nelements, align 4, !dbg !249, !tbaa !200
  %mul94 = shl i32 %inc93, 2, !dbg !249
  %26 = load i32* %nslots, align 4, !dbg !249, !tbaa !200
  %mul96 = mul i32 %26, 3, !dbg !249
  %cmp97 = icmp ult i32 %mul94, %mul96, !dbg !249
  br i1 %cmp97, label %return, label %if.then99, !dbg !249

if.then99:                                        ; preds = %if.end92
  tail call void @llvm.dbg.value(metadata !{%struct.ht* %table}, i64 0, metadata !250) #3, !dbg !252
  %mul.i169 = shl i32 %26, 1, !dbg !253
  tail call void @llvm.dbg.value(metadata !{i32 %mul.i169}, i64 0, metadata !254) #3, !dbg !253
  %conv.i170 = zext i32 %mul.i169 to i64, !dbg !255
  %call.i = tail call noalias i8* @xcalloc(i64 %conv.i170, i64 8) #7, !dbg !255
  %27 = bitcast i8* %call.i to %struct.ht_identifier**, !dbg !255
  tail call void @llvm.dbg.value(metadata !{%struct.ht_identifier** %27}, i64 0, metadata !256) #3, !dbg !255
  %sub.i171 = add i32 %mul.i169, -1, !dbg !257
  tail call void @llvm.dbg.value(metadata !{i32 %sub.i171}, i64 0, metadata !258) #3, !dbg !257
  %28 = load %struct.ht_identifier*** %entries, align 8, !dbg !259, !tbaa !204
  tail call void @llvm.dbg.value(metadata !{%struct.ht_identifier** %28}, i64 0, metadata !260) #3, !dbg !259
  %29 = load i32* %nslots, align 4, !dbg !261, !tbaa !200
  %idx.ext.i = zext i32 %29 to i64, !dbg !261
  %add.ptr.i = getelementptr inbounds %struct.ht_identifier** %28, i64 %idx.ext.i, !dbg !261
  tail call void @llvm.dbg.value(metadata !{%struct.ht_identifier** %add.ptr.i}, i64 0, metadata !262) #3, !dbg !261
  br label %do.body.i, !dbg !263

do.body.i:                                        ; preds = %do.cond.i, %if.then99
  %p.0.i = phi %struct.ht_identifier** [ %28, %if.then99 ], [ %incdec.ptr.i174, %do.cond.i ]
  %30 = load %struct.ht_identifier** %p.0.i, align 8, !dbg !264, !tbaa !204
  %tobool.i172 = icmp eq %struct.ht_identifier* %30, null, !dbg !264
  br i1 %tobool.i172, label %do.cond.i, label %if.then.i, !dbg !264

if.then.i:                                        ; preds = %do.body.i
  %len.i = getelementptr inbounds %struct.ht_identifier* %30, i64 0, i32 0, !dbg !265
  %31 = load i32* %len.i, align 4, !dbg !265, !tbaa !200
  tail call void @llvm.dbg.value(metadata !{i32 %31}, i64 0, metadata !266) #3, !dbg !267
  tail call void @llvm.dbg.value(metadata !{i32 %31}, i64 0, metadata !268) #3, !dbg !269
  tail call void @llvm.dbg.value(metadata !9, i64 0, metadata !270) #3, !dbg !271
  %tobool3.i.i = icmp eq i32 %31, 0, !dbg !272
  br i1 %tobool3.i.i, label %calc_hash.exit.i, label %while.body.i.preheader.i, !dbg !272

while.body.i.preheader.i:                         ; preds = %if.then.i
  %str.i = getelementptr inbounds %struct.ht_identifier* %30, i64 0, i32 1, !dbg !265
  %32 = load i8** %str.i, align 8, !dbg !265, !tbaa !204
  br label %while.body.i.i, !dbg !272

while.body.i.i:                                   ; preds = %while.body.i.i, %while.body.i.preheader.i
  %r.06.i.i = phi i32 [ %add.i.i, %while.body.i.i ], [ 0, %while.body.i.preheader.i ]
  %n.05.i.i = phi i32 [ %dec.i.i, %while.body.i.i ], [ %31, %while.body.i.preheader.i ]
  %str.addr.04.i.i = phi i8* [ %incdec.ptr.i.i, %while.body.i.i ], [ %32, %while.body.i.preheader.i ]
  %dec.i.i = add i32 %n.05.i.i, -1, !dbg !272
  %mul.i.i = mul i32 %r.06.i.i, 67, !dbg !273
  %incdec.ptr.i.i = getelementptr inbounds i8* %str.addr.04.i.i, i64 1, !dbg !273
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i.i}, i64 0, metadata !274) #3, !dbg !273
  %33 = load i8* %str.addr.04.i.i, align 1, !dbg !273, !tbaa !201
  %conv.i.i = zext i8 %33 to i32, !dbg !273
  %sub.i.i = add i32 %mul.i.i, -113, !dbg !273
  %add.i.i = add i32 %sub.i.i, %conv.i.i, !dbg !273
  tail call void @llvm.dbg.value(metadata !{i32 %add.i.i}, i64 0, metadata !270) #3, !dbg !273
  %tobool.i.i = icmp eq i32 %dec.i.i, 0, !dbg !272
  br i1 %tobool.i.i, label %calc_hash.exit.i, label %while.body.i.i, !dbg !272

calc_hash.exit.i:                                 ; preds = %while.body.i.i, %if.then.i
  %r.0.lcssa.i.i = phi i32 [ 0, %if.then.i ], [ %add.i.i, %while.body.i.i ]
  %add1.i.i = add i32 %r.0.lcssa.i.i, %31, !dbg !275
  tail call void @llvm.dbg.value(metadata !{i32 %add1.i.i}, i64 0, metadata !276) #3, !dbg !265
  %mul3.i = mul i32 %add1.i.i, 17, !dbg !277
  %and.i = and i32 %mul3.i, %sub.i171, !dbg !277
  %or.i = or i32 %and.i, 1, !dbg !277
  tail call void @llvm.dbg.value(metadata !{i32 %or.i}, i64 0, metadata !278) #3, !dbg !277
  br label %for.cond.i, !dbg !279

for.cond.i:                                       ; preds = %for.cond.i, %calc_hash.exit.i
  %call2.pn.i = phi i32 [ %add1.i.i, %calc_hash.exit.i ], [ %add.i173, %for.cond.i ]
  %index.0.i = and i32 %call2.pn.i, %sub.i171, !dbg !281
  %idxprom.i = zext i32 %index.0.i to i64, !dbg !282
  %arrayidx.i = getelementptr inbounds %struct.ht_identifier** %27, i64 %idxprom.i, !dbg !282
  %34 = load %struct.ht_identifier** %arrayidx.i, align 8, !dbg !282, !tbaa !204
  %tobool5.i = icmp eq %struct.ht_identifier* %34, null, !dbg !282
  %add.i173 = add i32 %index.0.i, %or.i, !dbg !284
  br i1 %tobool5.i, label %if.then6.i, label %for.cond.i, !dbg !282

if.then6.i:                                       ; preds = %for.cond.i
  store %struct.ht_identifier* %30, %struct.ht_identifier** %arrayidx.i, align 8, !dbg !285, !tbaa !204
  br label %do.cond.i, !dbg !287

do.cond.i:                                        ; preds = %if.then6.i, %do.body.i
  %incdec.ptr.i174 = getelementptr inbounds %struct.ht_identifier** %p.0.i, i64 1, !dbg !287
  tail call void @llvm.dbg.value(metadata !{%struct.ht_identifier** %incdec.ptr.i174}, i64 0, metadata !260) #3, !dbg !287
  %cmp.i = icmp ult %struct.ht_identifier** %incdec.ptr.i174, %add.ptr.i, !dbg !287
  br i1 %cmp.i, label %do.body.i, label %ht_expand.exit, !dbg !287

ht_expand.exit:                                   ; preds = %do.cond.i
  %35 = bitcast %struct.ht_identifier** %28 to i8*, !dbg !288
  tail call void @free(i8* %35) #7, !dbg !288
  store %struct.ht_identifier** %27, %struct.ht_identifier*** %entries, align 8, !dbg !289, !tbaa !204
  store i32 %mul.i169, i32* %nslots, align 4, !dbg !290, !tbaa !200
  br label %return, !dbg !251

return:                                           ; preds = %ht_expand.exit, %if.end92, %for.end, %if.then13, %if.else, %if.then22
  %retval.0 = phi %struct.ht_identifier* [ %5, %if.then22 ], [ %5, %if.else ], [ %5, %if.then13 ], [ null, %for.end ], [ %call34, %if.end92 ], [ %call34, %ht_expand.exit ]
  ret %struct.ht_identifier* %retval.0, !dbg !291
}
