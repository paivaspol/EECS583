define internal void @reload_combine_note_store(%struct.rtx_def* nocapture %dst, %struct.rtx_def* nocapture %set, i8* nocapture %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %dst}, i64 0, metadata !2077), !dbg !5866
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %set}, i64 0, metadata !2078), !dbg !5866
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !2079), !dbg !5867
  tail call void @llvm.dbg.value(metadata !1063, i64 0, metadata !2080), !dbg !5868
  %0 = bitcast %struct.rtx_def* %dst to i32*, !dbg !5869
  %bf.load = load i32* %0, align 8, !dbg !5869
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5869
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5869
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !2082), !dbg !5869
  %bf.clear2 = and i32 %bf.load, 65535, !dbg !5870
  %cmp = icmp eq i32 %bf.clear2, 63, !dbg !5870
  br i1 %cmp, label %if.then, label %if.end, !dbg !5870

if.then:                                          ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %dst, i64 0, i32 1, !dbg !5871
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !5871
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !5871, !tbaa !3248
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0, !dbg !5871
  %rtuint = bitcast %union.rtunion_def* %arrayidx4 to i32*, !dbg !5871
  %2 = load i32* %rtuint, align 4, !dbg !5871, !tbaa !3224
  %3 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5871
  %bf.load8 = load i32* %3, align 8, !dbg !5871
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !5871
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !5871
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %dst, i64 0, i32 1, i64 1, !dbg !5871
  %rtuint13 = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !5871
  %4 = load i32* %rtuint13, align 4, !dbg !5871, !tbaa !3224
  %call = tail call i32 @subreg_regno_offset(i32 %2, i32 %bf.clear10, i32 %4, i32 %bf.clear) #8, !dbg !5871
  tail call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !2080), !dbg !5871
  %5 = load %struct.rtx_def** %rtx, align 8, !dbg !5873, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %5}, i64 0, metadata !2077), !dbg !5873
  %.phi.trans.insert = bitcast %struct.rtx_def* %5 to i32*
  %bf.load20.pre = load i32* %.phi.trans.insert, align 8, !dbg !5874
  br label %if.end, !dbg !5875

if.end:                                           ; preds = %if.then, %entry
  %bf.load20 = phi i32 [ %bf.load20.pre, %if.then ], [ %bf.load, %entry ]
  %regno.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  %dst.addr.0 = phi %struct.rtx_def* [ %5, %if.then ], [ %dst, %entry ]
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5874
  %cmp22 = icmp eq i32 %bf.clear21, 61, !dbg !5874
  br i1 %cmp22, label %if.end24, label %if.end186, !dbg !5874

if.end24:                                         ; preds = %if.end
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %dst.addr.0, i64 0, i32 1, i64 0, !dbg !5876
  %rtuint27 = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !5876
  %6 = load i32* %rtuint27, align 4, !dbg !5876, !tbaa !3224
  %add = add i32 %6, %regno.0, !dbg !5876
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !2080), !dbg !5876
  %7 = bitcast %struct.rtx_def* %set to i32*, !dbg !5877
  %bf.load28 = load i32* %7, align 8, !dbg !5877
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !5877
  %cmp30 = icmp eq i32 %bf.clear29, 47, !dbg !5877
  br i1 %cmp30, label %lor.lhs.false, label %if.then51, !dbg !5877

lor.lhs.false:                                    ; preds = %if.end24
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %set, i64 0, i32 1, i64 0, !dbg !5877
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !5877
  %8 = load %struct.rtx_def** %rtx33, align 8, !dbg !5877, !tbaa !3248
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5877
  %bf.load34 = load i32* %9, align 8, !dbg !5877
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !5877
  switch i32 %bf.clear35, label %if.else [
    i32 133, label %if.then51
    i32 132, label %if.then51
    i32 64, label %if.then51
  ], !dbg !5877

if.then51:                                        ; preds = %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %if.end24
  %add.off246 = add i32 %add, -8, !dbg !5878
  %10 = icmp ult i32 %add.off246, 8, !dbg !5878
  %add.off247 = add i32 %add, -21, !dbg !5878
  %11 = icmp ult i32 %add.off247, 8, !dbg !5878
  %or.cond = or i1 %10, %11, !dbg !5878
  %add.off248 = add i32 %add, -45, !dbg !5878
  %12 = icmp ult i32 %add.off248, 8, !dbg !5878
  %or.cond255 = or i1 %or.cond, %12, !dbg !5878
  %add.off249 = add i32 %add, -29, !dbg !5878
  %13 = icmp ult i32 %add.off249, 8, !dbg !5878
  %or.cond257 = or i1 %or.cond255, %13, !dbg !5878
  br i1 %or.cond257, label %cond.true, label %cond.false, !dbg !5878

cond.true:                                        ; preds = %if.then51
  %idxprom251 = zext i32 %bf.clear to i64, !dbg !5878
  %arrayidx66 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom251, !dbg !5878
  %14 = load i32* %arrayidx66, align 4, !dbg !5878, !tbaa !3286
  %cmp67 = icmp eq i32 %14, 5, !dbg !5878
  br i1 %cmp67, label %cond.end93, label %lor.rhs, !dbg !5878

lor.rhs:                                          ; preds = %cond.true
  %cmp70 = icmp eq i32 %14, 6, !dbg !5878
  %phitmp252 = select i1 %cmp70, i32 2, i32 1, !dbg !5878
  br label %cond.end93, !dbg !5878

cond.false:                                       ; preds = %if.then51
  switch i32 %bf.clear, label %cond.false80 [
    i32 18, label %cond.true72
    i32 24, label %cond.true76
  ], !dbg !5878

cond.true72:                                      ; preds = %cond.false
  %15 = load i32* @target_flags, align 4, !dbg !5878, !tbaa !3224
  %and = lshr i32 %15, 25, !dbg !5878
  %16 = and i32 %and, 1, !dbg !5878
  %17 = xor i32 %16, 3, !dbg !5878
  br label %cond.end93, !dbg !5878

cond.true76:                                      ; preds = %cond.false
  %18 = load i32* @target_flags, align 4, !dbg !5878, !tbaa !3224
  %and77 = lshr i32 %18, 24, !dbg !5878
  %19 = and i32 %and77, 2, !dbg !5878
  %20 = xor i32 %19, 6, !dbg !5878
  br label %cond.end93, !dbg !5878

cond.false80:                                     ; preds = %cond.false
  %idxprom81250 = zext i32 %bf.clear to i64, !dbg !5878
  %arrayidx82 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom81250, !dbg !5878
  %21 = load i8* %arrayidx82, align 1, !dbg !5878, !tbaa !3225
  %conv = zext i8 %21 to i32, !dbg !5878
  %22 = load i32* @target_flags, align 4, !dbg !5878, !tbaa !3224
  %and83 = lshr i32 %22, 23, !dbg !5878
  %23 = and i32 %and83, 4, !dbg !5878
  %24 = add i32 %23, 4, !dbg !5878
  %add86 = add i32 %conv, -1, !dbg !5878
  %sub = add i32 %add86, %24, !dbg !5878
  %div = sdiv i32 %sub, %24, !dbg !5878
  br label %cond.end93, !dbg !5878

cond.end93:                                       ; preds = %cond.true, %lor.rhs, %cond.true72, %cond.false80, %cond.true76
  %cond94 = phi i32 [ %17, %cond.true72 ], [ %20, %cond.true76 ], [ %div, %cond.false80 ], [ 2, %cond.true ], [ %phitmp252, %lor.rhs ], !dbg !5878
  %sub95 = add i32 %add, -1, !dbg !5878
  %add96 = add i32 %sub95, %cond94, !dbg !5878
  tail call void @llvm.dbg.value(metadata !{i32 %add96}, i64 0, metadata !2081), !dbg !5878
  %cmp97267 = icmp slt i32 %add96, %add, !dbg !5878
  br i1 %cmp97267, label %if.end186, label %for.body.lr.ph, !dbg !5878

for.body.lr.ph:                                   ; preds = %cond.end93
  %25 = load i32* @reload_combine_ruid, align 4, !dbg !5881, !tbaa !3224
  %26 = add i32 %cond94, %regno.0, !dbg !5878
  %27 = add i32 %26, %6, !dbg !5878
  %28 = add i32 %27, -1, !dbg !5878
  %29 = sext i32 %28 to i64
  br label %for.body, !dbg !5878

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv270 = phi i64 [ %indvars.iv.next271, %for.body ], [ %29, %for.body.lr.ph ]
  %use_index = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %indvars.iv270, i32 1, !dbg !5883
  store i32 -1, i32* %use_index, align 8, !dbg !5883, !tbaa !3224
  %store_ruid = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %indvars.iv270, i32 3, !dbg !5881
  store i32 %25, i32* %store_ruid, align 8, !dbg !5881, !tbaa !3224
  %30 = trunc i64 %indvars.iv270 to i32, !dbg !5878
  %cmp97 = icmp sgt i32 %30, %add, !dbg !5878
  %indvars.iv.next271 = add i64 %indvars.iv270, -1, !dbg !5878
  br i1 %cmp97, label %for.body, label %if.end186, !dbg !5878

if.else:                                          ; preds = %lor.lhs.false
  %add.off = add i32 %add, -8, !dbg !5884
  %31 = icmp ult i32 %add.off, 8, !dbg !5884
  %add.off241 = add i32 %add, -21, !dbg !5884
  %32 = icmp ult i32 %add.off241, 8, !dbg !5884
  %or.cond259 = or i1 %31, %32, !dbg !5884
  %add.off242 = add i32 %add, -45, !dbg !5884
  %33 = icmp ult i32 %add.off242, 8, !dbg !5884
  %or.cond261 = or i1 %or.cond259, %33, !dbg !5884
  %add.off243 = add i32 %add, -29, !dbg !5884
  %34 = icmp ult i32 %add.off243, 8, !dbg !5884
  %or.cond263 = or i1 %or.cond261, %34, !dbg !5884
  br i1 %or.cond263, label %cond.true126, label %cond.false138, !dbg !5884

cond.true126:                                     ; preds = %if.else
  %idxprom127245 = zext i32 %bf.clear to i64, !dbg !5884
  %arrayidx128 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom127245, !dbg !5884
  %35 = load i32* %arrayidx128, align 4, !dbg !5884, !tbaa !3286
  %cmp129 = icmp eq i32 %35, 5, !dbg !5884
  br i1 %cmp129, label %cond.end169, label %lor.rhs131, !dbg !5884

lor.rhs131:                                       ; preds = %cond.true126
  %cmp134 = icmp eq i32 %35, 6, !dbg !5884
  %phitmp = select i1 %cmp134, i32 2, i32 1, !dbg !5884
  br label %cond.end169, !dbg !5884

cond.false138:                                    ; preds = %if.else
  switch i32 %bf.clear, label %cond.false152 [
    i32 18, label %cond.true141
    i32 24, label %cond.true148
  ], !dbg !5884

cond.true141:                                     ; preds = %cond.false138
  %36 = load i32* @target_flags, align 4, !dbg !5884, !tbaa !3224
  %and142 = lshr i32 %36, 25, !dbg !5884
  %37 = and i32 %and142, 1, !dbg !5884
  %38 = xor i32 %37, 3, !dbg !5884
  br label %cond.end169, !dbg !5884

cond.true148:                                     ; preds = %cond.false138
  %39 = load i32* @target_flags, align 4, !dbg !5884, !tbaa !3224
  %and149 = lshr i32 %39, 24, !dbg !5884
  %40 = and i32 %and149, 2, !dbg !5884
  %41 = xor i32 %40, 6, !dbg !5884
  br label %cond.end169, !dbg !5884

cond.false152:                                    ; preds = %cond.false138
  %idxprom153244 = zext i32 %bf.clear to i64, !dbg !5884
  %arrayidx154 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom153244, !dbg !5884
  %42 = load i8* %arrayidx154, align 1, !dbg !5884, !tbaa !3225
  %conv155 = zext i8 %42 to i32, !dbg !5884
  %43 = load i32* @target_flags, align 4, !dbg !5884, !tbaa !3224
  %and156 = lshr i32 %43, 23, !dbg !5884
  %44 = and i32 %and156, 4, !dbg !5884
  %45 = add i32 %44, 4, !dbg !5884
  %add159 = add i32 %conv155, -1, !dbg !5884
  %sub160 = add i32 %add159, %45, !dbg !5884
  %div164 = sdiv i32 %sub160, %45, !dbg !5884
  br label %cond.end169, !dbg !5884

cond.end169:                                      ; preds = %cond.true126, %lor.rhs131, %cond.true141, %cond.false152, %cond.true148
  %cond170 = phi i32 [ %38, %cond.true141 ], [ %41, %cond.true148 ], [ %div164, %cond.false152 ], [ 2, %cond.true126 ], [ %phitmp, %lor.rhs131 ], !dbg !5884
  %sub171 = add i32 %add, -1, !dbg !5884
  %add172 = add i32 %sub171, %cond170, !dbg !5884
  tail call void @llvm.dbg.value(metadata !{i32 %add172}, i64 0, metadata !2081), !dbg !5884
  %cmp174264 = icmp slt i32 %add172, %add, !dbg !5884
  br i1 %cmp174264, label %if.end186, label %for.body176.lr.ph, !dbg !5884

for.body176.lr.ph:                                ; preds = %cond.end169
  %46 = load i32* @reload_combine_ruid, align 4, !dbg !5887, !tbaa !3224
  %47 = add i32 %cond170, %regno.0, !dbg !5884
  %48 = add i32 %47, %6, !dbg !5884
  %49 = add i32 %48, -1, !dbg !5884
  %50 = sext i32 %49 to i64
  br label %for.body176, !dbg !5884

for.body176:                                      ; preds = %for.body176, %for.body176.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body176 ], [ %50, %for.body176.lr.ph ]
  %store_ruid179 = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %indvars.iv, i32 3, !dbg !5887
  store i32 %46, i32* %store_ruid179, align 8, !dbg !5887, !tbaa !3224
  %use_index182 = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %indvars.iv, i32 1, !dbg !5889
  store i32 6, i32* %use_index182, align 8, !dbg !5889, !tbaa !3224
  %51 = trunc i64 %indvars.iv to i32, !dbg !5884
  %cmp174 = icmp sgt i32 %51, %add, !dbg !5884
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !5884
  br i1 %cmp174, label %for.body176, label %if.end186, !dbg !5884

if.end186:                                        ; preds = %cond.end93, %for.body, %cond.end169, %for.body176, %if.end
  ret void, !dbg !5890
}
