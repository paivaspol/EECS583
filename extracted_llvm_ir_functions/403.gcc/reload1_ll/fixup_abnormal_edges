define void @fixup_abnormal_edges() #0 {
entry:
  tail call void @llvm.dbg.value(metadata !5329, i64 0, metadata !1929), !dbg !5330
  tail call void @llvm.dbg.value(metadata !1063, i64 0, metadata !1928), !dbg !5331
  %0 = load i32* @n_basic_blocks, align 4, !dbg !5331, !tbaa !3224
  %cmp128 = icmp sgt i32 %0, 0, !dbg !5331
  br i1 %cmp128, label %for.body, label %if.end81, !dbg !5331

for.body:                                         ; preds = %for.inc77, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc77 ]
  %inserted.0129 = phi i8 [ 0, %entry ], [ %inserted.1, %for.inc77 ]
  %1 = load %struct.varray_head_tag** @basic_block_info, align 8, !dbg !5332, !tbaa !3248
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4, !dbg !5332
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*, !dbg !5332
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb1, i64 0, i64 %indvars.iv, !dbg !5332
  %2 = load %struct.basic_block_def** %arrayidx, align 8, !dbg !5332, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %2}, i64 0, metadata !1931), !dbg !5332
  %succ = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 5, !dbg !5333
  %e.0116 = load %struct.edge_def** %succ, align 8, !dbg !5333
  %tobool117 = icmp eq %struct.edge_def* %e.0116, null, !dbg !5333
  br i1 %tobool117, label %for.inc77, label %for.body3, !dbg !5333

for.cond2:                                        ; preds = %for.body3
  %succ_next = getelementptr inbounds %struct.edge_def* %e.0118, i64 0, i32 1, !dbg !5333
  %e.0 = load %struct.edge_def** %succ_next, align 8, !dbg !5333
  %tobool = icmp eq %struct.edge_def* %e.0, null, !dbg !5333
  br i1 %tobool, label %for.inc77, label %for.body3, !dbg !5333

for.body3:                                        ; preds = %for.body, %for.cond2
  %e.0118 = phi %struct.edge_def* [ %e.0, %for.cond2 ], [ %e.0116, %for.body ]
  %flags = getelementptr inbounds %struct.edge_def* %e.0118, i64 0, i32 6, !dbg !5335
  %3 = load i32* %flags, align 4, !dbg !5335, !tbaa !3224
  %and = and i32 %3, 4, !dbg !5335
  %tobool4 = icmp ne i32 %and, 0, !dbg !5335
  %and6 = and i32 %3, 10, !dbg !5337
  %cmp7 = icmp eq i32 %and6, 10, !dbg !5337
  %or.cond = or i1 %tobool4, %cmp7, !dbg !5335
  br i1 %or.cond, label %land.lhs.true, label %for.cond2, !dbg !5335

land.lhs.true:                                    ; preds = %for.body3
  %end = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 1, !dbg !5338
  %4 = load %struct.rtx_def** %end, align 8, !dbg !5338, !tbaa !3248
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5338
  %bf.load = load i32* %5, align 8, !dbg !5338
  %bf.clear = and i32 %bf.load, 65535, !dbg !5338
  %cmp11 = icmp eq i32 %bf.clear, 34, !dbg !5338
  br i1 %cmp11, label %for.inc77, label %land.lhs.true12, !dbg !5338

land.lhs.true12:                                  ; preds = %land.lhs.true
  %call = tail call zeroext i1 @can_throw_internal(%struct.rtx_def* %4) #8, !dbg !5338
  br i1 %call, label %for.inc77, label %if.then14, !dbg !5338

if.then14:                                        ; preds = %land.lhs.true12
  %6 = load %struct.rtx_def** %end, align 8, !dbg !5339, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !1936), !dbg !5339
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 2, !dbg !5339
  %rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !5339
  %7 = load %struct.rtx_def** %rtx, align 8, !dbg !5339, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %7}, i64 0, metadata !1938), !dbg !5339
  %e.1119 = load %struct.edge_def** %succ, align 8, !dbg !5340
  %tobool20120 = icmp eq %struct.edge_def* %e.1119, null, !dbg !5340
  br i1 %tobool20120, label %while.cond.loopexit, label %for.body21, !dbg !5340

for.cond19:                                       ; preds = %for.body21
  %succ_next28 = getelementptr inbounds %struct.edge_def* %e.1121, i64 0, i32 1, !dbg !5340
  %e.1 = load %struct.edge_def** %succ_next28, align 8, !dbg !5340
  %tobool20 = icmp eq %struct.edge_def* %e.1, null, !dbg !5340
  br i1 %tobool20, label %while.cond.loopexit, label %for.body21, !dbg !5340

for.body21:                                       ; preds = %if.then14, %for.cond19
  %e.1121 = phi %struct.edge_def* [ %e.1, %for.cond19 ], [ %e.1119, %if.then14 ]
  %flags22 = getelementptr inbounds %struct.edge_def* %e.1121, i64 0, i32 6, !dbg !5342
  %8 = load i32* %flags22, align 4, !dbg !5342, !tbaa !3224
  %and23 = and i32 %8, 1, !dbg !5342
  %tobool24 = icmp eq i32 %and23, 0, !dbg !5342
  br i1 %tobool24, label %for.cond19, label %while.cond.loopexit, !dbg !5342

while.cond.loopexit:                              ; preds = %for.cond19, %for.body21, %if.then14
  %e.1.lcssa = phi %struct.edge_def* [ null, %if.then14 ], [ %e.1121, %for.body21 ], [ null, %for.cond19 ]
  %head = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 0, !dbg !5343
  br label %while.cond

while.cond:                                       ; preds = %while.cond.loopexit, %while.body
  %insn.0 = phi %struct.rtx_def* [ %11, %while.body ], [ %6, %while.cond.loopexit ]
  %9 = bitcast %struct.rtx_def* %insn.0 to i32*, !dbg !5344
  %bf.load30 = load i32* %9, align 8, !dbg !5344
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !5344
  switch i32 %bf.clear31, label %while.end [
    i32 32, label %land.lhs.true36
    i32 37, label %land.lhs.true36
  ], !dbg !5344

land.lhs.true36:                                  ; preds = %while.cond, %while.cond
  %call37 = tail call zeroext i1 @can_throw_internal(%struct.rtx_def* %insn.0) #8, !dbg !5343
  br i1 %call37, label %while.end, label %land.rhs, !dbg !5343

land.rhs:                                         ; preds = %land.lhs.true36
  %10 = load %struct.rtx_def** %head, align 8, !dbg !5343, !tbaa !3248
  %cmp38 = icmp eq %struct.rtx_def* %insn.0, %10, !dbg !5343
  br i1 %cmp38, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 1, !dbg !5345
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !5345
  %11 = load %struct.rtx_def** %rtx41, align 8, !dbg !5345, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %11}, i64 0, metadata !1936), !dbg !5345
  br label %while.cond, !dbg !5345

while.end:                                        ; preds = %land.rhs, %land.lhs.true36, %while.cond
  %bf.load42 = load i32* %9, align 8, !dbg !5346
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !5346
  %cmp44 = icmp eq i32 %bf.clear43, 34, !dbg !5346
  br i1 %cmp44, label %if.end48, label %land.lhs.true45, !dbg !5346

land.lhs.true45:                                  ; preds = %while.end
  %call46 = tail call zeroext i1 @can_throw_internal(%struct.rtx_def* %insn.0) #8, !dbg !5346
  br i1 %call46, label %if.end48, label %if.then47, !dbg !5346

if.then47:                                        ; preds = %land.lhs.true45
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str1, i64 0, i64 0), i32 9527, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.fixup_abnormal_edges, i64 0, i64 0)) #9, !dbg !5347
  unreachable, !dbg !5347

if.end48:                                         ; preds = %while.end, %land.lhs.true45
  store %struct.rtx_def* %insn.0, %struct.rtx_def** %end, align 8, !dbg !5348, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !5349, i64 0, metadata !1929), !dbg !5350
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 2, !dbg !5351
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !5351
  %12 = load %struct.rtx_def** %rtx52, align 8, !dbg !5351, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %12}, i64 0, metadata !1936), !dbg !5351
  %tobool54123 = icmp eq %struct.rtx_def* %12, null, !dbg !5352
  %cmp56124 = icmp eq %struct.rtx_def* %12, %7, !dbg !5352
  %or.cond115125 = or i1 %tobool54123, %cmp56124, !dbg !5352
  br i1 %or.cond115125, label %for.inc77, label %while.body58, !dbg !5352

while.body58:                                     ; preds = %if.end48, %while.cond53.backedge
  %insn.1126 = phi %struct.rtx_def* [ %13, %while.cond53.backedge ], [ %12, %if.end48 ]
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %insn.1126, i64 0, i32 1, i64 2, !dbg !5353
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**, !dbg !5353
  %13 = load %struct.rtx_def** %rtx61, align 8, !dbg !5353, !tbaa !3248
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %13}, i64 0, metadata !1939), !dbg !5353
  %14 = bitcast %struct.rtx_def* %insn.1126 to i32*, !dbg !5354
  %bf.load62 = load i32* %14, align 8, !dbg !5354
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !5354
  %idxprom64113 = zext i32 %bf.clear63 to i64, !dbg !5354
  %arrayidx65 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom64113, !dbg !5354
  %15 = load i8* %arrayidx65, align 1, !dbg !5354, !tbaa !3225
  %cmp66 = icmp eq i8 %15, 105, !dbg !5354
  br i1 %cmp66, label %if.then68, label %while.cond53.backedge, !dbg !5354

if.then68:                                        ; preds = %while.body58
  %call69 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn.1126) #8, !dbg !5355
  %bf.load70 = load i32* %14, align 8, !dbg !5356
  %bf.clear71 = and i32 %bf.load70, -134217729, !dbg !5356
  store i32 %bf.clear71, i32* %14, align 8, !dbg !5356
  %call72 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %insn.1126) #8, !dbg !5357
  %call73 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 24, i32 0, %struct.rtvec_def* %call72) #8, !dbg !5357
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call73}, i64 0, metadata !1940), !dbg !5357
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call73, %struct.edge_def* %e.1.lcssa) #8, !dbg !5358
  br label %while.cond53.backedge, !dbg !5359

while.cond53.backedge:                            ; preds = %if.then68, %while.body58
  %tobool54 = icmp eq %struct.rtx_def* %13, null, !dbg !5352
  %cmp56 = icmp eq %struct.rtx_def* %13, %7, !dbg !5352
  %or.cond115 = or i1 %tobool54, %cmp56, !dbg !5352
  br i1 %or.cond115, label %for.inc77, label %while.body58, !dbg !5352

for.inc77:                                        ; preds = %if.end48, %while.cond53.backedge, %for.body, %for.cond2, %land.lhs.true12, %land.lhs.true
  %inserted.1 = phi i8 [ %inserted.0129, %land.lhs.true ], [ %inserted.0129, %land.lhs.true12 ], [ %inserted.0129, %for.cond2 ], [ %inserted.0129, %for.body ], [ 1, %while.cond53.backedge ], [ 1, %if.end48 ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !5331
  %16 = load i32* @n_basic_blocks, align 4, !dbg !5331, !tbaa !3224
  %17 = trunc i64 %indvars.iv.next to i32, !dbg !5331
  %cmp = icmp slt i32 %17, %16, !dbg !5331
  br i1 %cmp, label %for.body, label %for.end78, !dbg !5331

for.end78:                                        ; preds = %for.inc77
  %18 = and i8 %inserted.1, 1, !dbg !5360
  %tobool79 = icmp eq i8 %18, 0, !dbg !5360
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !5360

if.then80:                                        ; preds = %for.end78
  tail call void @commit_edge_insertions() #8, !dbg !5361
  br label %if.end81, !dbg !5361

if.end81:                                         ; preds = %entry, %for.end78, %if.then80
  ret void, !dbg !5362
}
