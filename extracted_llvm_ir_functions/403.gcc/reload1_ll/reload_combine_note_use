define internal fastcc void @reload_combine_note_use(%struct.rtx_def** %xp, %struct.rtx_def* %insn) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then, %entry
  %xp.tr = phi %struct.rtx_def** [ %xp, %entry ], [ %rtx5, %if.then ]
  %1 = load %struct.rtx_def** %xp.tr, align 8, !tbaa !3
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 47, label %sw.bb
    i32 48, label %sw.bb6
    i32 49, label %sw.bb88
    i32 75, label %sw.bb108
    i32 61, label %sw.bb132
  ]

sw.bb:                                            ; preds = %tailrecurse
  %fld = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load1 = load i32* %4, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 61
  br i1 %cmp, label %if.then, label %sw.epilog

if.then:                                          ; preds = %sw.bb
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  br label %tailrecurse

sw.bb6:                                           ; preds = %tailrecurse
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx9, align 8, !tbaa !3
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load10 = load i32* %6, align 8
  %7 = and i32 %bf.load10, 1073807359
  %8 = icmp eq i32 %7, 1073741885
  br i1 %8, label %if.then18, label %sw.epilog

if.then18:                                        ; preds = %sw.bb6
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx23 to i32*
  %9 = load i32* %rtuint, align 4, !tbaa !0
  %.off402 = add i32 %9, -8
  %10 = icmp ult i32 %.off402, 8
  %.off403 = add i32 %9, -21
  %11 = icmp ult i32 %.off403, 8
  %or.cond410 = or i1 %10, %11
  %.off404 = add i32 %9, -45
  %12 = icmp ult i32 %.off404, 8
  %or.cond412 = or i1 %or.cond410, %12
  %.off405 = add i32 %9, -29
  %13 = icmp ult i32 %.off405, 8
  %or.cond414 = or i1 %or.cond412, %13
  %bf.lshr39 = lshr i32 %bf.load10, 16
  %bf.clear40 = and i32 %bf.lshr39, 255
  br i1 %or.cond414, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then18
  %idxprom407 = zext i32 %bf.clear40 to i64
  %arrayidx41 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom407
  %14 = load i32* %arrayidx41, align 4, !tbaa !6
  %cmp42 = icmp eq i32 %14, 5
  br i1 %cmp42, label %while.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp48 = icmp eq i32 %14, 6
  %phitmp408 = select i1 %cmp48, i32 2, i32 1
  br label %while.body.lr.ph

cond.false:                                       ; preds = %if.then18
  switch i32 %bf.clear40, label %while.cond.preheader [
    i32 18, label %cond.true53
    i32 24, label %cond.true61
  ]

cond.true53:                                      ; preds = %cond.false
  %15 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %15, 25
  %16 = and i32 %and, 1
  %17 = xor i32 %16, 3
  br label %while.body.lr.ph

cond.true61:                                      ; preds = %cond.false
  %18 = load i32* @target_flags, align 4, !tbaa !0
  %and62 = lshr i32 %18, 24
  %19 = and i32 %and62, 2
  %20 = xor i32 %19, 6
  br label %while.body.lr.ph

while.cond.preheader:                             ; preds = %cond.false
  %idxprom69406 = zext i32 %bf.clear40 to i64
  %arrayidx70 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom69406
  %21 = load i8* %arrayidx70, align 1, !tbaa !1
  %conv = zext i8 %21 to i32
  %22 = load i32* @target_flags, align 4, !tbaa !0
  %and71 = lshr i32 %22, 23
  %23 = and i32 %and71, 4
  %24 = add i32 %23, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %24
  %div = sdiv i32 %sub, %24
  %cmp82430 = icmp sgt i32 %div, 0
  br i1 %cmp82430, label %while.body.lr.ph, label %for.end320

while.body.lr.ph:                                 ; preds = %cond.true, %lor.rhs, %cond.true53, %cond.true61, %while.cond.preheader
  %nregs.0.ph479 = phi i32 [ %div, %while.cond.preheader ], [ %20, %cond.true61 ], [ %17, %cond.true53 ], [ %phitmp408, %lor.rhs ], [ 2, %cond.true ]
  %25 = sext i32 %nregs.0.ph479 to i64
  %26 = sext i32 %9 to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv457 = phi i64 [ %25, %while.body.lr.ph ], [ %indvars.iv.next458, %while.body ]
  %indvars.iv.next458 = add i64 %indvars.iv457, -1
  %27 = add nsw i64 %indvars.iv.next458, %26
  %use_index = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %27, i32 1
  store i32 -1, i32* %use_index, align 8, !tbaa !0
  %28 = trunc i64 %indvars.iv.next458 to i32
  %cmp82 = icmp sgt i32 %28, 0
  br i1 %cmp82, label %while.body, label %for.end320

sw.bb88:                                          ; preds = %tailrecurse
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx91, align 8, !tbaa !3
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load92 = load i32* %30, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 61
  br i1 %cmp94, label %if.then96, label %sw.epilog

if.then96:                                        ; preds = %sw.bb88
  %arrayidx101 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0
  %rtuint102 = bitcast %union.rtunion_def* %arrayidx101 to i32*
  %31 = load i32* %rtuint102, align 4, !tbaa !0
  %cmp103 = icmp ugt i32 %31, 52
  br i1 %cmp103, label %if.then105, label %for.end320

if.then105:                                       ; preds = %if.then96
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str1, i64 0, i64 0), i32 8994, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.reload_combine_note_use, i64 0, i64 0)) #8
  unreachable

sw.bb108:                                         ; preds = %tailrecurse
  %fld109 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx111 = bitcast [1 x %union.rtunion_def]* %fld109 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx111, align 8, !tbaa !3
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load112 = load i32* %33, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 61
  br i1 %cmp114, label %lor.lhs.false116, label %sw.epilog

lor.lhs.false116:                                 ; preds = %sw.bb108
  %arrayidx118 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx119, align 8, !tbaa !3
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load120 = load i32* %35, align 8
  %bf.clear121 = and i32 %bf.load120, 65535
  %cmp122 = icmp eq i32 %bf.clear121, 54
  br i1 %cmp122, label %sw.bb132, label %sw.epilog

sw.bb132:                                         ; preds = %tailrecurse, %lor.lhs.false116
  %bf.load167 = phi i32 [ %bf.load112, %lor.lhs.false116 ], [ %bf.load, %tailrecurse ]
  %offset.0 = phi %struct.rtx_def* [ %34, %lor.lhs.false116 ], [ %0, %tailrecurse ]
  %x.0 = phi %struct.rtx_def* [ %32, %lor.lhs.false116 ], [ %1, %tailrecurse ]
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtuint136 = bitcast %union.rtunion_def* %arrayidx135 to i32*
  %36 = load i32* %rtuint136, align 4, !tbaa !0
  %cmp139 = icmp sgt i32 %36, 52
  br i1 %cmp139, label %if.then141, label %if.end142

if.then141:                                       ; preds = %sw.bb132
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str1, i64 0, i64 0), i32 9015, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.reload_combine_note_use, i64 0, i64 0)) #8
  unreachable

if.end142:                                        ; preds = %sw.bb132
  %.off = add i32 %36, -8
  %37 = icmp ult i32 %.off, 8
  %.off396 = add i32 %36, -21
  %38 = icmp ult i32 %.off396, 8
  %or.cond416 = or i1 %37, %38
  %.off397 = add i32 %36, -45
  %39 = icmp ult i32 %.off397, 8
  %or.cond418 = or i1 %or.cond416, %39
  %.off398 = add i32 %36, -29
  %40 = icmp ult i32 %.off398, 8
  %or.cond420 = or i1 %or.cond418, %40
  %bf.lshr168 = lshr i32 %bf.load167, 16
  %bf.clear169 = and i32 %bf.lshr168, 255
  br i1 %or.cond420, label %cond.true166, label %cond.false184

cond.true166:                                     ; preds = %if.end142
  %idxprom170400 = zext i32 %bf.clear169 to i64
  %arrayidx171 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170400
  %41 = load i32* %arrayidx171, align 4, !tbaa !6
  %cmp172 = icmp eq i32 %41, 5
  br i1 %cmp172, label %while.body233.lr.ph, label %lor.rhs174

lor.rhs174:                                       ; preds = %cond.true166
  %cmp180 = icmp eq i32 %41, 6
  %phitmp = select i1 %cmp180, i32 2, i32 1
  br label %cond.end224

cond.false184:                                    ; preds = %if.end142
  switch i32 %bf.clear169, label %cond.false204 [
    i32 18, label %cond.true190
    i32 24, label %cond.true200
  ]

cond.true190:                                     ; preds = %cond.false184
  %42 = load i32* @target_flags, align 4, !tbaa !0
  %and191 = lshr i32 %42, 25
  %43 = and i32 %and191, 1
  %44 = xor i32 %43, 3
  br label %cond.end224

cond.true200:                                     ; preds = %cond.false184
  %45 = load i32* @target_flags, align 4, !tbaa !0
  %and201 = lshr i32 %45, 24
  %46 = and i32 %and201, 2
  %47 = xor i32 %46, 6
  br label %cond.end224

cond.false204:                                    ; preds = %cond.false184
  %idxprom208399 = zext i32 %bf.clear169 to i64
  %arrayidx209 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom208399
  %48 = load i8* %arrayidx209, align 1, !tbaa !1
  %conv210 = zext i8 %48 to i32
  %49 = load i32* @target_flags, align 4, !tbaa !0
  %and211 = lshr i32 %49, 23
  %50 = and i32 %and211, 4
  %51 = add i32 %50, 4
  %add214 = add i32 %conv210, -1
  %sub215 = add i32 %add214, %51
  %div219 = sdiv i32 %sub215, %51
  br label %cond.end224

cond.end224:                                      ; preds = %lor.rhs174, %cond.true190, %cond.false204, %cond.true200
  %cond225 = phi i32 [ %44, %cond.true190 ], [ %47, %cond.true200 ], [ %div219, %cond.false204 ], [ %phitmp, %lor.rhs174 ]
  %cmp226 = icmp sgt i32 %cond225, 1
  br i1 %cmp226, label %while.body233.lr.ph, label %if.end239

while.body233.lr.ph:                              ; preds = %cond.true166, %cond.end224
  %nregs138.0.ph.ph = phi i32 [ 2, %cond.true166 ], [ %cond225, %cond.end224 ]
  %52 = sext i32 %nregs138.0.ph.ph to i64
  %53 = sext i32 %36 to i64
  br label %while.body233

while.body233:                                    ; preds = %while.body233.lr.ph, %while.body233
  %indvars.iv460 = phi i64 [ %52, %while.body233.lr.ph ], [ %indvars.iv.next461, %while.body233 ]
  %indvars.iv.next461 = add i64 %indvars.iv460, -1
  %54 = add nsw i64 %indvars.iv.next461, %53
  %use_index237 = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %54, i32 1
  store i32 -1, i32* %use_index237, align 8, !tbaa !0
  %55 = trunc i64 %indvars.iv.next461 to i32
  %cmp231 = icmp sgt i32 %55, 0
  br i1 %cmp231, label %while.body233, label %for.end320

if.end239:                                        ; preds = %cond.end224
  %idxprom240 = sext i32 %36 to i64
  %use_index242 = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %idxprom240, i32 1
  %56 = load i32* %use_index242, align 8, !tbaa !0
  %dec243 = add nsw i32 %56, -1
  store i32 %dec243, i32* %use_index242, align 8, !tbaa !0
  %cmp244 = icmp slt i32 %56, 1
  br i1 %cmp244, label %for.end320, label %if.end247

if.end247:                                        ; preds = %if.end239
  %cmp248 = icmp eq i32 %dec243, 5
  %offset253 = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %idxprom240, i32 2
  br i1 %cmp248, label %if.else, label %if.then250

if.then250:                                       ; preds = %if.end247
  %57 = load %struct.rtx_def** %offset253, align 8, !tbaa !3
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %offset.0, %struct.rtx_def* %57) #7
  %tobool254 = icmp eq i32 %call, 0
  br i1 %tobool254, label %if.then255, label %if.end265

if.then255:                                       ; preds = %if.then250
  store i32 -1, i32* %use_index242, align 8, !tbaa !0
  br label %for.end320

if.else:                                          ; preds = %if.end247
  store %struct.rtx_def* %offset.0, %struct.rtx_def** %offset253, align 8, !tbaa !3
  %58 = load i32* @reload_combine_ruid, align 4, !tbaa !0
  %use_ruid = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %idxprom240, i32 4
  store i32 %58, i32* %use_ruid, align 4, !tbaa !0
  br label %if.end265

if.end265:                                        ; preds = %if.then250, %if.else
  %idxprom266 = sext i32 %dec243 to i64
  %insn270 = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %idxprom240, i32 0, i64 %idxprom266, i32 0
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn270, align 8, !tbaa !3
  %usep = getelementptr inbounds [53 x %struct.anon.5]* @reg_state, i64 0, i64 %idxprom240, i32 0, i64 %idxprom266, i32 1
  store %struct.rtx_def** %xp.tr, %struct.rtx_def*** %usep, align 8, !tbaa !3
  br label %for.end320

sw.epilog:                                        ; preds = %tailrecurse, %sw.bb, %sw.bb6, %lor.lhs.false116, %sw.bb108, %sw.bb88
  %bf.clear476 = phi i32 [ 48, %sw.bb6 ], [ 75, %lor.lhs.false116 ], [ 75, %sw.bb108 ], [ 49, %sw.bb88 ], [ 47, %sw.bb ], [ %bf.clear, %tailrecurse ]
  %idxprom276401 = zext i32 %bf.clear476 to i64
  %arrayidx277 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom276401
  %59 = load i8** %arrayidx277, align 8, !tbaa !3
  %arrayidx279 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom276401
  %60 = load i8* %arrayidx279, align 1, !tbaa !1
  %cmp282426 = icmp eq i8 %60, 0
  br i1 %cmp282426, label %for.end320, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %61 = zext i8 %60 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv455 = phi i64 [ %61, %for.body.lr.ph ], [ %indvars.iv.next456, %for.cond.backedge ]
  %indvars.iv.next456 = add i64 %indvars.iv455, -1
  %arrayidx285 = getelementptr inbounds i8* %59, i64 %indvars.iv.next456
  %62 = load i8* %arrayidx285, align 1, !tbaa !1
  switch i8 %62, label %for.cond.backedge [
    i8 101, label %if.then289
    i8 69, label %if.then300
  ]

for.cond.backedge:                                ; preds = %if.then300, %for.body308, %for.body, %if.then289
  %63 = trunc i64 %indvars.iv.next456 to i32
  %cmp282 = icmp sgt i32 %63, 0
  br i1 %cmp282, label %for.body, label %for.end320

if.then289:                                       ; preds = %for.body
  %arrayidx292 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 %indvars.iv.next456
  %rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**
  tail call fastcc void @reload_combine_note_use(%struct.rtx_def** %rtx293, %struct.rtx_def* %insn) #9
  br label %for.cond.backedge

if.then300:                                       ; preds = %for.body
  %arrayidx303 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 %indvars.iv.next456
  %rtvec = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtvec_def**
  %64 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  %num_elem = getelementptr inbounds %struct.rtvec_def* %64, i64 0, i32 0
  %65 = load i32* %num_elem, align 4, !tbaa !0
  %cmp306423 = icmp sgt i32 %65, 0
  br i1 %cmp306423, label %for.body308.lr.ph, label %for.cond.backedge

for.body308.lr.ph:                                ; preds = %if.then300
  %66 = sext i32 %65 to i64
  br label %for.body308

for.body308:                                      ; preds = %for.body308.for.body308_crit_edge, %for.body308.lr.ph
  %67 = phi %struct.rtvec_def* [ %64, %for.body308.lr.ph ], [ %.pre, %for.body308.for.body308_crit_edge ]
  %indvars.iv = phi i64 [ %66, %for.body308.lr.ph ], [ %indvars.iv.next, %for.body308.for.body308_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx314 = getelementptr inbounds %struct.rtvec_def* %67, i64 0, i32 1, i64 %indvars.iv.next
  tail call fastcc void @reload_combine_note_use(%struct.rtx_def** %arrayidx314, %struct.rtx_def* %insn) #9
  %68 = trunc i64 %indvars.iv.next to i32
  %cmp306 = icmp sgt i32 %68, 0
  br i1 %cmp306, label %for.body308.for.body308_crit_edge, label %for.cond.backedge

for.body308.for.body308_crit_edge:                ; preds = %for.body308
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  br label %for.body308

for.end320:                                       ; preds = %while.body233, %while.cond.preheader, %while.body, %sw.epilog, %for.cond.backedge, %if.end239, %if.then96, %if.then255, %if.end265
  ret void
}
