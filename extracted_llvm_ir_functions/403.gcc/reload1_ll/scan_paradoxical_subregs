define internal fastcc void @scan_paradoxical_subregs(%struct.rtx_def* nocapture %x) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 61, label %for.end73
    i32 54, label %for.end73
    i32 58, label %for.end73
    i32 68, label %for.end73
    i32 67, label %for.end73
    i32 55, label %for.end73
    i32 56, label %for.end73
    i32 69, label %for.end73
    i32 59, label %for.end73
    i32 48, label %for.end73
    i32 49, label %for.end73
    i32 63, label %sw.bb2
  ]

sw.bb2:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load3 = load i32* %2, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp = icmp eq i32 %bf.clear4, 61
  br i1 %cmp, label %land.lhs.true, label %for.end73

land.lhs.true:                                    ; preds = %sw.bb2
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear6 = and i32 %bf.lshr, 255
  %idxprom92 = zext i32 %bf.clear6 to i64
  %arrayidx7 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom92
  %3 = load i8* %arrayidx7, align 1, !tbaa !1
  %bf.lshr12 = lshr i32 %bf.load3, 16
  %bf.clear13 = and i32 %bf.lshr12, 255
  %idxprom1493 = zext i32 %bf.clear13 to i64
  %arrayidx15 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1493
  %4 = load i8* %arrayidx15, align 1, !tbaa !1
  %cmp17 = icmp ugt i8 %3, %4
  br i1 %cmp17, label %if.then, label %for.end73

if.then:                                          ; preds = %land.lhs.true
  %conv = zext i8 %3 to i32
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx29 to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !0
  %idxprom30 = zext i32 %5 to i64
  %6 = load i32** @reg_max_ref_width, align 8, !tbaa !3
  %arrayidx31 = getelementptr inbounds i32* %6, i64 %idxprom30
  store i32 %conv, i32* %arrayidx31, align 4, !tbaa !0
  br label %for.end73

sw.epilog:                                        ; preds = %entry
  %idxprom3294 = zext i32 %bf.clear to i64
  %arrayidx33 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom3294
  %7 = load i8** %arrayidx33, align 8, !tbaa !3
  %arrayidx35 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom3294
  %8 = load i8* %arrayidx35, align 1, !tbaa !1
  %cmp3799 = icmp eq i8 %8, 0
  br i1 %cmp3799, label %for.end73, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %9 = zext i8 %8 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv101 = phi i64 [ %9, %for.body.lr.ph ], [ %indvars.iv.next102, %for.cond.backedge ]
  %indvars.iv.next102 = add i64 %indvars.iv101, -1
  %arrayidx40 = getelementptr inbounds i8* %7, i64 %indvars.iv.next102
  %10 = load i8* %arrayidx40, align 1, !tbaa !1
  switch i8 %10, label %for.cond.backedge [
    i8 101, label %if.then44
    i8 69, label %if.then54
  ]

for.cond.backedge:                                ; preds = %if.then54, %for.body62, %for.body, %if.then44
  %11 = trunc i64 %indvars.iv.next102 to i32
  %cmp37 = icmp sgt i32 %11, 0
  br i1 %cmp37, label %for.body, label %for.end73

if.then44:                                        ; preds = %for.body
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next102
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx48, align 8, !tbaa !3
  tail call fastcc void @scan_paradoxical_subregs(%struct.rtx_def* %12) #9
  br label %for.cond.backedge

if.then54:                                        ; preds = %for.body
  %arrayidx57 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next102
  %rtvec = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtvec_def**
  %13 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  %num_elem = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 0
  %14 = load i32* %num_elem, align 4, !tbaa !0
  %cmp6096 = icmp sgt i32 %14, 0
  br i1 %cmp6096, label %for.body62.lr.ph, label %for.cond.backedge

for.body62.lr.ph:                                 ; preds = %if.then54
  %15 = sext i32 %14 to i64
  br label %for.body62

for.body62:                                       ; preds = %for.body62.for.body62_crit_edge, %for.body62.lr.ph
  %16 = phi %struct.rtvec_def* [ %13, %for.body62.lr.ph ], [ %.pre, %for.body62.for.body62_crit_edge ]
  %indvars.iv = phi i64 [ %15, %for.body62.lr.ph ], [ %indvars.iv.next, %for.body62.for.body62_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx68 = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv.next
  %17 = load %struct.rtx_def** %arrayidx68, align 8, !tbaa !3
  tail call fastcc void @scan_paradoxical_subregs(%struct.rtx_def* %17) #9
  %18 = trunc i64 %indvars.iv.next to i32
  %cmp60 = icmp sgt i32 %18, 0
  br i1 %cmp60, label %for.body62.for.body62_crit_edge, label %for.cond.backedge

for.body62.for.body62_crit_edge:                  ; preds = %for.body62
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  br label %for.body62

for.end73:                                        ; preds = %sw.epilog, %for.cond.backedge, %sw.bb2, %land.lhs.true, %if.then, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  ret void
}
