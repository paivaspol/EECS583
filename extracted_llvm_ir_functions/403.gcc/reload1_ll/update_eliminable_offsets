define internal fastcc void @update_eliminable_offsets() #0 {
for.body.lr.ph:
  store i32 0, i32* @num_not_at_initial_offset, align 4, !tbaa !0
  %0 = load %struct.elim_table** @reg_eliminate, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.elim_table* %0, i64 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %ep.011 = phi %struct.elim_table* [ %0, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %offset = getelementptr inbounds %struct.elim_table* %ep.011, i64 0, i32 5
  %1 = load i32* %offset, align 4, !tbaa !0
  %previous_offset = getelementptr inbounds %struct.elim_table* %ep.011, i64 0, i32 6
  store i32 %1, i32* %previous_offset, align 4, !tbaa !0
  %can_eliminate = getelementptr inbounds %struct.elim_table* %ep.011, i64 0, i32 3
  %2 = load i32* %can_eliminate, align 4, !tbaa !0
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %initial_offset = getelementptr inbounds %struct.elim_table* %ep.011, i64 0, i32 2
  %3 = load i32* %initial_offset, align 4, !tbaa !0
  %cmp2 = icmp eq i32 %1, %3
  br i1 %cmp2, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32* @num_not_at_initial_offset, align 4, !tbaa !0
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* @num_not_at_initial_offset, align 4, !tbaa !0
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %struct.elim_table* %ep.011, i64 1
  %cmp = icmp ult %struct.elim_table* %incdec.ptr, %arrayidx
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  ret void
}
