define internal fastcc void @count_spilled_pseudo(i32 %spilled, i32 %spilled_nregs, i32 %reg) #0 {
entry:
  %idxprom = sext i32 %reg to i64
  %0 = load i16** @reg_renumber, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i16* %0, i64 %idxprom
  %1 = load i16* %arrayidx, align 2, !tbaa !5
  %conv = sext i16 %1 to i32
  %.off = add i16 %1, -8
  %2 = icmp ult i16 %.off, 8
  %.off137 = add i16 %1, -21
  %3 = icmp ult i16 %.off137, 8
  %or.cond = or i1 %2, %3
  %.off138 = add i16 %1, -45
  %4 = icmp ult i16 %.off138, 8
  %or.cond144 = or i1 %or.cond, %4
  %.off139 = add i16 %1, -29
  %5 = icmp ult i16 %.off139, 8
  %or.cond146 = or i1 %or.cond144, %5
  %6 = load %struct.function** @cfun, align 8, !tbaa !3
  %emit = getelementptr inbounds %struct.function* %6, i64 0, i32 3
  %7 = load %struct.emit_status** %emit, align 8, !tbaa !3
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %7, i64 0, i32 12
  %8 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !3
  %arrayidx22 = getelementptr inbounds %struct.rtx_def** %8, i64 %idxprom
  %9 = load %struct.rtx_def** %arrayidx22, align 8, !tbaa !3
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32* %10, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  br i1 %or.cond146, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %idxprom23141 = zext i32 %bf.clear to i64
  %arrayidx24 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom23141
  %11 = load i32* %arrayidx24, align 4, !tbaa !6
  %cmp25 = icmp eq i32 %11, 5
  br i1 %cmp25, label %cond.end83, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp36 = icmp eq i32 %11, 6
  %phitmp = select i1 %cmp36, i32 2, i32 1
  br label %cond.end83

cond.false:                                       ; preds = %entry
  switch i32 %bf.clear, label %cond.false63 [
    i32 18, label %cond.true47
    i32 24, label %cond.true59
  ]

cond.true47:                                      ; preds = %cond.false
  %12 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %12, 25
  %13 = and i32 %and, 1
  %14 = xor i32 %13, 3
  br label %cond.end83

cond.true59:                                      ; preds = %cond.false
  %15 = load i32* @target_flags, align 4, !tbaa !0
  %and60 = lshr i32 %15, 24
  %16 = and i32 %and60, 2
  %17 = xor i32 %16, 6
  br label %cond.end83

cond.false63:                                     ; preds = %cond.false
  %idxprom71140 = zext i32 %bf.clear to i64
  %arrayidx72 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom71140
  %18 = load i8* %arrayidx72, align 1, !tbaa !1
  %conv73 = zext i8 %18 to i32
  %19 = load i32* @target_flags, align 4, !tbaa !0
  %and74 = lshr i32 %19, 23
  %20 = and i32 %and74, 4
  %21 = add i32 %20, 4
  %add = add i32 %conv73, -1
  %sub = add i32 %add, %21
  %div = sdiv i32 %sub, %21
  br label %cond.end83

cond.end83:                                       ; preds = %cond.true, %lor.rhs, %cond.true47, %cond.false63, %cond.true59
  %cond84 = phi i32 [ %14, %cond.true47 ], [ %17, %cond.true59 ], [ %div, %cond.false63 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* @spilled_pseudos, i32 %reg) #7
  %tobool85 = icmp eq i32 %call, 0
  br i1 %tobool85, label %lor.lhs.false86, label %while.end

lor.lhs.false86:                                  ; preds = %cond.end83
  %add87 = add nsw i32 %spilled_nregs, %spilled
  %cmp88 = icmp sgt i32 %add87, %conv
  br i1 %cmp88, label %lor.lhs.false90, label %while.end

lor.lhs.false90:                                  ; preds = %lor.lhs.false86
  %add91 = add nsw i32 %cond84, %conv
  %cmp92 = icmp sgt i32 %add91, %spilled
  br i1 %cmp92, label %if.end, label %while.end

if.end:                                           ; preds = %lor.lhs.false90
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %reg) #7
  %22 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !3
  %data = getelementptr inbounds %struct.varray_head_tag* %22, i64 0, i32 4
  %reg95 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx96 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg95, i64 0, i64 %idxprom
  %23 = load %struct.reg_info_def** %arrayidx96, align 8, !tbaa !3
  %freq = getelementptr inbounds %struct.reg_info_def* %23, i64 0, i32 5
  %24 = load i32* %freq, align 4, !tbaa !0
  %idxprom97 = sext i16 %1 to i64
  %arrayidx98 = getelementptr inbounds [53 x i32]* @spill_add_cost, i64 0, i64 %idxprom97
  %25 = load i32* %arrayidx98, align 4, !tbaa !0
  %sub99 = sub nsw i32 %25, %24
  store i32 %sub99, i32* %arrayidx98, align 4, !tbaa !0
  %cmp100148 = icmp sgt i32 %cond84, 0
  br i1 %cmp100148, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %if.end
  %26 = sext i32 %cond84 to i64
  %27 = sext i16 %1 to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv = phi i64 [ %26, %while.body.lr.ph ], [ %indvars.iv.next, %while.body ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %28 = load i32* %freq, align 4, !tbaa !0
  %29 = add nsw i64 %indvars.iv.next, %27
  %arrayidx109 = getelementptr inbounds [53 x i32]* @spill_cost, i64 0, i64 %29
  %30 = load i32* %arrayidx109, align 4, !tbaa !0
  %sub110 = sub nsw i32 %30, %28
  store i32 %sub110, i32* %arrayidx109, align 4, !tbaa !0
  %31 = trunc i64 %indvars.iv.next to i32
  %cmp100 = icmp sgt i32 %31, 0
  br i1 %cmp100, label %while.body, label %while.end

while.end:                                        ; preds = %if.end, %while.body, %lor.lhs.false90, %lor.lhs.false86, %cond.end83
  ret void
}
