define internal fastcc i64 @sext_for_mode(i32 %mode, i64 %value) #6 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !1996), !dbg !5800
  tail call void @llvm.dbg.value(metadata !{i64 %value}, i64 0, metadata !1997), !dbg !5801
  %idxprom = sext i32 %mode to i64, !dbg !5802
  %arrayidx = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !5802
  %0 = load i64* %arrayidx, align 8, !dbg !5802, !tbaa !3277
  %and = and i64 %0, %value, !dbg !5802
  tail call void @llvm.dbg.value(metadata !{i64 %and}, i64 0, metadata !1998), !dbg !5802
  %arrayidx2 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom, !dbg !5803
  %1 = load i16* %arrayidx2, align 2, !dbg !5803, !tbaa !3281
  %cmp = icmp ne i16 %1, 0, !dbg !5804
  %cmp4 = icmp ult i16 %1, 64, !dbg !5804
  %or.cond = and i1 %cmp, %cmp4, !dbg !5804
  br i1 %or.cond, label %land.lhs.true6, label %if.end, !dbg !5804

land.lhs.true6:                                   ; preds = %entry
  %conv = zext i16 %1 to i64, !dbg !5803
  %sub = add i64 %conv, 4294967295, !dbg !5804
  %sh_prom = and i64 %sub, 4294967295, !dbg !5804
  %shl = shl i64 1, %sh_prom, !dbg !5804
  %and7 = and i64 %shl, %and, !dbg !5804
  %cmp8 = icmp eq i64 %and7, 0, !dbg !5804
  br i1 %cmp8, label %if.end, label %if.then, !dbg !5804

if.then:                                          ; preds = %land.lhs.true6
  %shl11 = shl i64 -1, %conv, !dbg !5805
  %or = or i64 %shl11, %and, !dbg !5805
  tail call void @llvm.dbg.value(metadata !{i64 %or}, i64 0, metadata !1998), !dbg !5805
  br label %if.end, !dbg !5805

if.end:                                           ; preds = %land.lhs.true6, %if.then, %entry
  %cval.0 = phi i64 [ %or, %if.then ], [ %and, %land.lhs.true6 ], [ %and, %entry ]
  ret i64 %cval.0, !dbg !5806
}
