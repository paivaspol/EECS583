define void @rest_of_compilation(%union.tree_node* %decl) #0 {
entry:
  %loops = alloca %struct.loops, align 8
  call void @timevar_push(i32 44) #11
  store i32 0, i32* @generating_concat_p, align 4, !tbaa !0
  %0 = load i32* @optimize, align 4, !tbaa !0
  %lnot = icmp eq i32 %0, 0
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* @cse_not_expected, align 4, !tbaa !0
  %1 = load %struct.function** @cfun, align 8, !tbaa !4
  %x_whole_function_mode_p = getelementptr inbounds %struct.function* %1, i64 0, i32 56
  %2 = bitcast [4 x i8]* %x_whole_function_mode_p to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 262144
  %tobool1 = icmp eq i32 %bf.clear, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @identify_blocks() #11
  %.pre = load %struct.function** @cfun, align 8, !tbaa !4
  %x_whole_function_mode_p2.phi.trans.insert = getelementptr inbounds %struct.function* %.pre, i64 0, i32 56
  %.phi.trans.insert = bitcast [4 x i8]* %x_whole_function_mode_p2.phi.trans.insert to i32*
  %bf.load3.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %bf.load3 = phi i32 [ %bf.load, %entry ], [ %bf.load3.pre, %if.then ]
  %bf.clear5 = and i32 %bf.load3, 262144
  %tobool6 = icmp eq i32 %bf.clear5, 0
  br i1 %tobool6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @reorder_blocks() #11
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then7
  call void @init_flow() #11
  %f = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 19, i32 0
  %3 = load %struct.function** %f, align 8, !tbaa !4
  %cmp = icmp eq %struct.function* %3, null
  br i1 %cmp, label %if.then10, label %if.end179

if.then10:                                        ; preds = %if.end8
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  %context = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 9
  %5 = load %union.tree_node** %context, align 8, !tbaa !4
  %cmp12883 = icmp eq %union.tree_node* %5, null
  br i1 %cmp12883, label %for.end, label %for.body

for.body:                                         ; preds = %if.then10, %for.inc
  %parent.0884 = phi %union.tree_node* [ %call, %for.inc ], [ %5, %if.then10 ]
  %code = getelementptr inbounds %union.tree_node* %parent.0884, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %code to i32*
  %bf.load13 = load i32* %6, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 30
  br i1 %cmp15, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %inline_flag = getelementptr inbounds %union.tree_node* %parent.0884, i64 0, i32 0, i32 5
  %7 = bitcast [8 x i8]* %inline_flag to i64*
  %bf.load17 = load i64* %7, align 8
  %8 = and i64 %bf.load17, 2304
  %9 = icmp eq i64 %8, 2304
  br i1 %9, label %if.then28, label %for.inc

if.then28:                                        ; preds = %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial, align 8, !tbaa !4
  %defer_output664.pre = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %.pre895 = bitcast [8 x i8]* %defer_output664.pre to i64*
  br label %exit_rest_of_compilation

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %call = call %union.tree_node* @get_containing_scope(%union.tree_node* %parent.0884) #11
  %cmp12 = icmp eq %union.tree_node* %call, null
  br i1 %cmp12, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then10
  %inline_flag32 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %10 = bitcast [8 x i8]* %inline_flag32 to i64*
  %bf.load33 = load i64* %10, align 8
  %bf.cast36 = and i64 %bf.load33, 2048
  %11 = load i32* @flag_no_inline, align 4, !tbaa !0
  %notlhs = icmp ne i64 %bf.cast36, 0
  %notrhs = icmp eq i32 %11, 0
  %or.cond.not = and i1 %notrhs, %notlhs
  %12 = load i32* @flag_inline_functions, align 4, !tbaa !0
  %tobool40 = icmp ne i32 %12, 0
  %or.cond675 = or i1 %or.cond.not, %tobool40
  br i1 %or.cond675, label %if.then41, label %if.end75

if.then41:                                        ; preds = %for.end
  call void @timevar_push(i32 12) #11
  %call42 = call i8* @function_cannot_inline_p(%union.tree_node* %decl) #11
  call void @timevar_pop(i32 12) #11
  %tobool43 = icmp eq i8* %call42, null
  %13 = load i32* @optimize, align 4, !tbaa !0
  %tobool45 = icmp ne i32 %13, 0
  %or.cond676 = and i1 %tobool43, %tobool45
  br i1 %or.cond676, label %if.else, label %if.then46

if.then46:                                        ; preds = %if.then41
  %14 = load i32* @warn_inline, align 4, !tbaa !0
  %tobool47 = icmp eq i32 %14, 0
  br i1 %tobool47, label %if.end57, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %if.then46
  %bf.load51 = load i64* %10, align 8
  %bf.cast54 = and i64 %bf.load51, 2048
  %tobool55 = icmp eq i64 %bf.cast54, 0
  br i1 %tobool55, label %if.end57, label %if.then56

if.then56:                                        ; preds = %land.lhs.true48
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl, i8* %call42) #11
  br label %if.end57

if.end57:                                         ; preds = %if.then46, %land.lhs.true48, %if.then56
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  store %union.tree_node* null, %union.tree_node** %abstract_origin, align 8, !tbaa !4
  %bf.load61 = load i64* %10, align 8
  %bf.cast64 = and i64 %bf.load61, 256
  %tobool65 = icmp eq i64 %bf.cast64, 0
  br i1 %tobool65, label %if.end75, label %if.then66

if.then66:                                        ; preds = %if.end57
  %initial68 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial68, align 8, !tbaa !4
  br label %exit_rest_of_compilation

if.else:                                          ; preds = %if.then41
  %bf.load72 = load i64* %10, align 8
  %bf.set = or i64 %bf.load72, 2048
  store i64 %bf.set, i64* %10, align 8
  br label %if.end75

if.end75:                                         ; preds = %if.end57, %if.else, %for.end
  %inlinable.0 = phi i32 [ 1, %if.else ], [ 0, %if.end57 ], [ 0, %for.end ]
  %call76 = call %struct.rtx_def* @get_insns() #11
  %call77 = call fastcc i32 @open_dump_file(i32 0, %union.tree_node* %decl) #15
  %tobool78 = icmp eq i32 %call77, 0
  br i1 %tobool78, label %if.end87, label %if.then79

if.then79:                                        ; preds = %if.end75
  %15 = load %struct.function** %f, align 8, !tbaa !4
  %tobool83 = icmp eq %struct.function* %15, null
  br i1 %tobool83, label %if.end86, label %if.then84

if.then84:                                        ; preds = %if.then79
  %16 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %17 = call i64 @fwrite(i8* getelementptr inbounds ([18 x i8]* @.str12, i64 0, i64 0), i64 17, i64 1, %struct._IO_FILE* %16)
  br label %if.end86

if.end86:                                         ; preds = %if.then79, %if.then84
  call fastcc void @close_dump_file(i32 0, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %call76) #15
  br label %if.end87

if.end87:                                         ; preds = %if.end75, %if.end86
  call void @convert_from_eh_region_ranges() #11
  %tobool88 = icmp eq i32 %inlinable.0, 0
  br i1 %tobool88, label %lor.lhs.false89, label %if.then129

lor.lhs.false89:                                  ; preds = %if.end87
  %bf.load92 = load i64* %10, align 8
  %bf.cast95 = and i64 %bf.load92, 2048
  %tobool96 = icmp eq i64 %bf.cast95, 0
  br i1 %tobool96, label %if.end134, label %land.lhs.true97

land.lhs.true97:                                  ; preds = %lor.lhs.false89
  %public_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %18 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load99 = load i32* %18, align 8
  %19 = and i32 %bf.load99, 525312
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %land.lhs.true109, label %lor.lhs.false121

land.lhs.true109:                                 ; preds = %land.lhs.true97
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %21 = load %union.tree_node** %assembler_name, align 8, !tbaa !4
  %cmp111 = icmp eq %union.tree_node* %21, null
  br i1 %cmp111, label %cond.false, label %cond.end

cond.false:                                       ; preds = %land.lhs.true109
  %22 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !4
  call void %22(%union.tree_node* %decl) #11
  %.pre886 = load %union.tree_node** %assembler_name, align 8, !tbaa !4
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true109, %cond.false
  %23 = phi %union.tree_node* [ %21, %land.lhs.true109 ], [ %.pre886, %cond.false ]
  %static_flag = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast [4 x i8]* %static_flag to i32*
  %bf.load115 = load i32* %24, align 8
  %bf.clear117 = and i32 %bf.load115, 262144
  %25 = load i32* @flag_keep_inline_functions, align 4, !tbaa !0
  %26 = or i32 %bf.clear117, %25
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %if.then129, label %cond.end.lor.lhs.false121_crit_edge

cond.end.lor.lhs.false121_crit_edge:              ; preds = %cond.end
  %bf.load124.pre = load i64* %10, align 8
  br label %lor.lhs.false121

lor.lhs.false121:                                 ; preds = %cond.end.lor.lhs.false121_crit_edge, %land.lhs.true97
  %bf.load124 = phi i64 [ %bf.load124.pre, %cond.end.lor.lhs.false121_crit_edge ], [ %bf.load92, %land.lhs.true97 ]
  %bf.cast127 = and i64 %bf.load124, 256
  %tobool128 = icmp eq i64 %bf.cast127, 0
  br i1 %tobool128, label %if.end134, label %if.then129

if.then129:                                       ; preds = %cond.end, %if.end87, %lor.lhs.false121
  %bf.load131 = load i64* %10, align 8
  %bf.set133 = or i64 %bf.load131, 262144
  store i64 %bf.set133, i64* %10, align 8
  br label %if.end134

if.end134:                                        ; preds = %lor.lhs.false121, %lor.lhs.false89, %if.then129
  %bf.load137 = phi i64 [ %bf.load124, %lor.lhs.false121 ], [ %bf.load92, %lor.lhs.false89 ], [ %bf.set133, %if.then129 ]
  %bf.cast140 = and i64 %bf.load137, 2048
  %tobool141 = icmp eq i64 %bf.cast140, 0
  br i1 %tobool141, label %if.end143, label %if.then142

if.then142:                                       ; preds = %if.end134
  %28 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !4
  %deferred_inline_function = getelementptr inbounds %struct.gcc_debug_hooks* %28, i64 0, i32 17
  %29 = load void (%union.tree_node*)** %deferred_inline_function, align 8, !tbaa !4
  call void %29(%union.tree_node* %decl) #11
  %bf.load146.pre = load i64* %10, align 8
  br label %if.end143

if.end143:                                        ; preds = %if.end134, %if.then142
  %bf.load146 = phi i64 [ %bf.load137, %if.end134 ], [ %bf.load146.pre, %if.then142 ]
  %bf.cast149 = and i64 %bf.load146, 262144
  %tobool150 = icmp eq i64 %bf.cast149, 0
  br i1 %tobool150, label %if.end169, label %if.then151

if.then151:                                       ; preds = %if.end143
  %30 = load i32* @warn_return_type, align 4, !tbaa !0
  %tobool152 = icmp eq i32 %30, 0
  br i1 %tobool152, label %if.end156, label %if.then153

if.then153:                                       ; preds = %if.then151
  %31 = load i32* @optimize, align 4, !tbaa !0
  store i32 0, i32* @optimize, align 4, !tbaa !0
  call void @rebuild_jump_labels(%struct.rtx_def* %call76) #11
  call void @find_exception_handler_labels() #11
  %call154 = call i32 @max_reg_num() #11
  %32 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %call76, i32 %call154, %struct._IO_FILE* %32) #11
  %call155 = call zeroext i1 @cleanup_cfg(i32 24) #11
  store i32 %31, i32* @optimize, align 4, !tbaa !0
  call void @free_bb_for_insn() #11
  br label %if.end156

if.end156:                                        ; preds = %if.then151, %if.then153
  %call157 = call zeroext i1 @nothrow_function_p() #11
  %conv = zext i1 %call157 to i32
  store i32 %conv, i32* @current_function_nothrow, align 4, !tbaa !0
  br i1 %call157, label %if.then159, label %if.end164

if.then159:                                       ; preds = %if.end156
  %33 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  %nothrow_flag = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast [4 x i8]* %nothrow_flag to i32*
  %bf.load161 = load i32* %34, align 8
  %bf.set163 = or i32 %bf.load161, 131072
  store i32 %bf.set163, i32* %34, align 8
  br label %if.end164

if.end164:                                        ; preds = %if.then159, %if.end156
  call void @timevar_push(i32 12) #11
  call void @save_for_inline(%union.tree_node* %decl) #11
  call void @timevar_pop(i32 12) #11
  %35 = load %struct.function** %f, align 8, !tbaa !4
  %inlinable168 = getelementptr inbounds %struct.function* %35, i64 0, i32 44
  store i32 %inlinable.0, i32* %inlinable168, align 4, !tbaa !0
  br label %exit_rest_of_compilation

if.end169:                                        ; preds = %if.end143
  %bf.cast175 = and i64 %bf.load146, 256
  %tobool176 = icmp eq i64 %bf.cast175, 0
  br i1 %tobool176, label %if.end179, label %exit_rest_of_compilation

if.end179:                                        ; preds = %if.end169, %if.end8
  %36 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  %context182 = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 9
  %37 = load %union.tree_node** %context182, align 8, !tbaa !4
  %cmp184881 = icmp eq %union.tree_node* %37, null
  br i1 %cmp184881, label %for.end211, label %for.body186

for.body186:                                      ; preds = %if.end179, %for.inc209
  %parent180.0882 = phi %union.tree_node* [ %call210, %for.inc209 ], [ %37, %if.end179 ]
  %code188 = getelementptr inbounds %union.tree_node* %parent180.0882, i64 0, i32 0, i32 0, i32 2
  %38 = bitcast [4 x i8]* %code188 to i32*
  %bf.load189 = load i32* %38, align 8
  %bf.clear190 = and i32 %bf.load189, 255
  %cmp191 = icmp eq i32 %bf.clear190, 30
  br i1 %cmp191, label %if.then193, label %for.inc209

if.then193:                                       ; preds = %for.body186
  %assembler_name195 = getelementptr inbounds %union.tree_node* %parent180.0882, i64 0, i32 0, i32 14
  %39 = load %union.tree_node** %assembler_name195, align 8, !tbaa !4
  %cmp196 = icmp eq %union.tree_node* %39, null
  br i1 %cmp196, label %cond.false199, label %cond.end200

cond.false199:                                    ; preds = %if.then193
  %40 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !4
  call void %40(%union.tree_node* %parent180.0882) #11
  %.pre893 = load %union.tree_node** %assembler_name195, align 8, !tbaa !4
  br label %cond.end200

cond.end200:                                      ; preds = %if.then193, %cond.false199
  %41 = phi %union.tree_node* [ %39, %if.then193 ], [ %.pre893, %cond.false199 ]
  %static_flag204 = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 0, i32 2
  %42 = bitcast [4 x i8]* %static_flag204 to i32*
  %bf.load205 = load i32* %42, align 8
  %bf.set207 = or i32 %bf.load205, 262144
  store i32 %bf.set207, i32* %42, align 8
  br label %for.inc209

for.inc209:                                       ; preds = %for.body186, %cond.end200
  %call210 = call %union.tree_node* @get_containing_scope(%union.tree_node* %parent180.0882) #11
  %cmp184 = icmp eq %union.tree_node* %call210, null
  br i1 %cmp184, label %for.end211, label %for.body186

for.end211:                                       ; preds = %for.inc209, %if.end179
  %inline_flag213 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %43 = bitcast [8 x i8]* %inline_flag213 to i64*
  %bf.load214 = load i64* %43, align 8
  %bf.cast217 = and i64 %bf.load214, 2048
  %tobool218 = icmp eq i64 %bf.cast217, 0
  br i1 %tobool218, label %if.end220, label %if.then219

if.then219:                                       ; preds = %for.end211
  %44 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !4
  %outlining_inline_function = getelementptr inbounds %struct.gcc_debug_hooks* %44, i64 0, i32 18
  %45 = load void (%union.tree_node*)** %outlining_inline_function, align 8, !tbaa !4
  call void %45(%union.tree_node* %decl) #11
  br label %if.end220

if.end220:                                        ; preds = %for.end211, %if.then219
  call void @remove_unnecessary_notes() #11
  call void @reorder_blocks() #11
  call void @ggc_collect() #11
  call void @init_function_for_compilation() #11
  %bf.load223 = load i64* %43, align 8
  %bf.cast226 = and i64 %bf.load223, 262144
  %tobool227 = icmp eq i64 %bf.cast226, 0
  br i1 %tobool227, label %if.then228, label %if.end233

if.then228:                                       ; preds = %if.end220
  %asm_written_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %46 = bitcast [4 x i8]* %asm_written_flag to i32*
  %bf.load230 = load i32* %46, align 8
  %bf.set232 = or i32 %bf.load230, 16384
  store i32 %bf.set232, i32* %46, align 8
  br label %if.end233

if.end233:                                        ; preds = %if.end220, %if.then228
  store i32 0, i32* @rtx_equal_function_value_matters, align 4, !tbaa !0
  %call234 = call %struct.rtx_def* @get_insns() #11
  call void @purge_hard_subreg_sets(%struct.rtx_def* %call234) #11
  %47 = load i32* @rtl_dump_and_exit, align 4, !tbaa !0
  %48 = load i32* @flag_syntax_only, align 4, !tbaa !0
  %49 = or i32 %48, %47
  %or.cond678.not = icmp eq i32 %49, 0
  %50 = load i32* @warn_return_type, align 4, !tbaa !0
  %tobool239 = icmp ne i32 %50, 0
  %or.cond679 = or i1 %or.cond678.not, %tobool239
  br i1 %or.cond679, label %lor.lhs.false240, label %exit_rest_of_compilation

lor.lhs.false240:                                 ; preds = %if.end233
  %51 = load %struct.diagnostic_context** @global_dc, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds %struct.diagnostic_context* %51, i64 0, i32 0, i32 0, i32 9, i64 3
  %52 = load i32* %arrayidx, align 4, !tbaa !0
  %tobool241 = icmp eq i32 %52, 0
  br i1 %tobool241, label %lor.lhs.false242, label %exit_rest_of_compilation

lor.lhs.false242:                                 ; preds = %lor.lhs.false240
  %arrayidx245 = getelementptr inbounds %struct.diagnostic_context* %51, i64 0, i32 0, i32 0, i32 9, i64 2
  %53 = load i32* %arrayidx245, align 4, !tbaa !0
  %tobool246 = icmp eq i32 %53, 0
  br i1 %tobool246, label %if.end248, label %exit_rest_of_compilation

if.end248:                                        ; preds = %lor.lhs.false242
  %54 = load i32* @flag_optimize_sibling_calls, align 4, !tbaa !0
  %tobool249 = icmp eq i32 %54, 0
  br i1 %tobool249, label %if.end253, label %if.then250

if.then250:                                       ; preds = %if.end248
  call void @timevar_push(i32 13) #11
  %call251 = call fastcc i32 @open_dump_file(i32 1, %union.tree_node* %decl) #15
  call void @optimize_sibling_and_tail_recursive_calls() #11
  %call252 = call %struct.rtx_def* @get_insns() #11
  call fastcc void @close_dump_file(i32 1, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %call252) #15
  call void @timevar_pop(i32 13) #11
  br label %if.end253

if.end253:                                        ; preds = %if.end248, %if.then250
  call void @find_exception_handler_labels() #11
  %call254 = call i32 @doing_eh(i32 0) #11
  %tobool255 = icmp eq i32 %call254, 0
  br i1 %tobool255, label %if.end259, label %if.then256

if.then256:                                       ; preds = %if.end253
  call void @timevar_push(i32 13) #11
  %call257 = call fastcc i32 @open_dump_file(i32 2, %union.tree_node* %decl) #15
  call void @finish_eh_generation() #11
  %call258 = call %struct.rtx_def* @get_insns() #11
  call fastcc void @close_dump_file(i32 2, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %call258) #15
  call void @timevar_pop(i32 13) #11
  br label %if.end259

if.end259:                                        ; preds = %if.end253, %if.then256
  call void @emit_initial_value_sets() #11
  %55 = load i32* @flag_pic, align 4, !tbaa !0
  %tobool260 = icmp eq i32 %55, 0
  br i1 %tobool260, label %if.end271, label %if.then261

if.then261:                                       ; preds = %if.end259
  %56 = load %struct.function** @cfun, align 8, !tbaa !4
  %profile = getelementptr inbounds %struct.function* %56, i64 0, i32 56
  %57 = bitcast [4 x i8]* %profile to i32*
  %bf.load262 = load i32* %57, align 8
  %58 = shl i32 %bf.load262, 7
  %59 = and i32 %58, 2097152
  %bf.set270 = or i32 %59, %bf.load262
  store i32 %bf.set270, i32* %57, align 8
  br label %if.end271

if.end271:                                        ; preds = %if.end259, %if.then261
  %call272 = call %struct.rtx_def* @get_insns() #11
  %60 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  call void @unshare_all_rtl(%union.tree_node* %60, %struct.rtx_def* %call272) #11
  %61 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  call void @instantiate_virtual_regs(%union.tree_node* %61, %struct.rtx_def* %call272) #11
  %call273 = call fastcc i32 @open_dump_file(i32 3, %union.tree_node* %decl) #15
  call void @timevar_push(i32 13) #11
  call void @expected_value_to_br_prob() #11
  %call274 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %call272, i32 %call274, i32 0) #11
  call void @rebuild_jump_labels(%struct.rtx_def* %call272) #11
  %call275 = call i32 @max_reg_num() #11
  %62 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %call272, i32 %call275, %struct._IO_FILE* %62) #11
  %63 = load i32* @optimize, align 4, !tbaa !0
  %tobool276 = icmp ne i32 %63, 0
  %cond = zext i1 %tobool276 to i32
  %or277 = or i32 %cond, 16
  %call278 = call zeroext i1 @cleanup_cfg(i32 %or277) #11
  call void @free_bb_for_insn() #11
  call void @copy_loop_headers(%struct.rtx_def* %call272) #11
  call void @purge_line_number_notes(%struct.rtx_def* %call272) #11
  call void @timevar_pop(i32 13) #11
  %64 = load i32* @rtl_dump_and_exit, align 4, !tbaa !0
  %65 = load i32* @flag_syntax_only, align 4, !tbaa !0
  %66 = or i32 %65, %64
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %lor.lhs.false282, label %if.then290

lor.lhs.false282:                                 ; preds = %if.end271
  %bf.load285 = load i64* %43, align 8
  %bf.cast288 = and i64 %bf.load285, 262144
  %tobool289 = icmp eq i64 %bf.cast288, 0
  br i1 %tobool289, label %if.end291, label %if.then290

if.then290:                                       ; preds = %lor.lhs.false282, %if.end271
  call fastcc void @close_dump_file(i32 3, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %call272) #15
  br label %exit_rest_of_compilation

if.end291:                                        ; preds = %lor.lhs.false282
  %68 = load i32* @optimize, align 4, !tbaa !0
  %cmp292 = icmp sgt i32 %68, 0
  %69 = load i32* @flag_ssa, align 4, !tbaa !0
  %tobool295 = icmp ne i32 %69, 0
  %or.cond681 = and i1 %cmp292, %tobool295
  br i1 %or.cond681, label %if.then296, label %if.end312

if.then296:                                       ; preds = %if.end291
  call void @timevar_push(i32 38) #11
  %call297 = call fastcc i32 @open_dump_file(i32 4, %union.tree_node* %decl) #15
  %call298 = call i32 @max_reg_num() #11
  %70 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %call272, i32 %call298, %struct._IO_FILE* %70) #11
  %call299 = call zeroext i1 @cleanup_cfg(i32 17) #11
  call void @convert_to_ssa() #11
  call fastcc void @close_dump_file(i32 4, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %call272) #15
  call void @timevar_pop(i32 38) #11
  %71 = load i32* @flag_ssa_ccp, align 4, !tbaa !0
  %tobool300 = icmp eq i32 %71, 0
  br i1 %tobool300, label %if.end304, label %if.then301

if.then301:                                       ; preds = %if.then296
  call void @timevar_push(i32 39) #11
  %call302 = call fastcc i32 @open_dump_file(i32 5, %union.tree_node* %decl) #15
  call void @ssa_const_prop() #11
  %call303 = call %struct.rtx_def* @get_insns() #11
  call fastcc void @close_dump_file(i32 5, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %call303) #15
  call void @timevar_pop(i32 39) #11
  br label %if.end304

if.end304:                                        ; preds = %if.then296, %if.then301
  %72 = load i32* @flag_ssa_dce, align 4, !tbaa !0
  %tobool305 = icmp eq i32 %72, 0
  br i1 %tobool305, label %if.end309, label %if.then306

if.then306:                                       ; preds = %if.end304
  call void @timevar_push(i32 40) #11
  %call307 = call fastcc i32 @open_dump_file(i32 6, %union.tree_node* %decl) #15
  %call308 = call %struct.rtx_def* @get_insns() #11
  call void @ssa_eliminate_dead_code() #11
  call fastcc void @close_dump_file(i32 6, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %call308) #15
  call void @timevar_pop(i32 40) #11
  br label %if.end309

if.end309:                                        ; preds = %if.end304, %if.then306
  %insns.0 = phi %struct.rtx_def* [ %call308, %if.then306 ], [ %call272, %if.end304 ]
  call void @timevar_push(i32 41) #11
  %call310 = call fastcc i32 @open_dump_file(i32 7, %union.tree_node* %decl) #15
  call void @convert_from_ssa() #11
  %call311 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.0, i32 %call311, i32 1) #11
  call fastcc void @close_dump_file(i32 7, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.0) #15
  call void @timevar_pop(i32 41) #11
  call void @ggc_collect() #11
  call void @free_bb_for_insn() #11
  br label %if.end312

if.end312:                                        ; preds = %if.end309, %if.end291
  %insns.1 = phi %struct.rtx_def* [ %insns.0, %if.end309 ], [ %call272, %if.end291 ]
  call void @timevar_push(i32 13) #11
  %73 = load i32* @optimize, align 4, !tbaa !0
  %cmp313 = icmp sgt i32 %73, 0
  br i1 %cmp313, label %if.then315, label %if.end324

if.then315:                                       ; preds = %if.end312
  %call316 = call i32 @max_reg_num() #11
  %74 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call316, %struct._IO_FILE* %74) #11
  %75 = load i32* @flag_thread_jumps, align 4, !tbaa !0
  %tobool317 = icmp ne i32 %75, 0
  %or319 = select i1 %tobool317, i32 81, i32 17
  %call320 = call zeroext i1 @cleanup_cfg(i32 %or319) #11
  call void @timevar_push(i32 21) #11
  call void @if_convert(i32 0) #11
  call void @timevar_pop(i32 21) #11
  call void @free_bb_for_insn() #11
  %76 = load i32* @flag_delete_null_pointer_checks, align 4, !tbaa !0
  %tobool321 = icmp eq i32 %76, 0
  br i1 %tobool321, label %if.end324, label %if.then322

if.then322:                                       ; preds = %if.then315
  call void @delete_null_pointer_checks(%struct.rtx_def* %insns.1) #11
  br label %if.end324

if.end324:                                        ; preds = %if.then315, %if.then322, %if.end312
  %77 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @renumber_insns(%struct._IO_FILE* %77) #11
  call void @timevar_pop(i32 13) #11
  call fastcc void @close_dump_file(i32 3, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %insns.1) #15
  call void @ggc_collect() #11
  %78 = load i32* @optimize, align 4, !tbaa !0
  %cmp325 = icmp sgt i32 %78, 0
  br i1 %cmp325, label %if.then327, label %if.end358

if.then327:                                       ; preds = %if.end324
  %call328 = call fastcc i32 @open_dump_file(i32 8, %union.tree_node* %decl) #15
  call void @timevar_push(i32 14) #11
  %call329 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.1, i32 %call329, i32 1) #11
  %call330 = call i32 @max_reg_num() #11
  %79 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %call331 = call i32 @cse_main(%struct.rtx_def* %insns.1, i32 %call330, i32 0, %struct._IO_FILE* %79) #11
  %80 = load i32* @flag_rerun_cse_after_loop, align 4, !tbaa !0
  %tobool332 = icmp eq i32 %80, 0
  br i1 %tobool332, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then327
  %81 = load i32* @flag_gcse, align 4, !tbaa !0
  %lnot334 = icmp eq i32 %81, 0
  br label %land.end

land.end:                                         ; preds = %if.then327, %land.rhs
  %82 = phi i1 [ false, %if.then327 ], [ %lnot334, %land.rhs ]
  %land.ext = zext i1 %82 to i32
  store i32 %land.ext, i32* @cse_not_expected, align 4, !tbaa !0
  %tobool336 = icmp ne i32 %call331, 0
  %83 = load i32* @optimize, align 4, !tbaa !0
  %cmp338 = icmp sgt i32 %83, 1
  %or.cond682 = or i1 %tobool336, %cmp338
  br i1 %or.cond682, label %if.then340, label %if.end343

if.then340:                                       ; preds = %land.end
  call void @timevar_push(i32 13) #11
  call void @rebuild_jump_labels(%struct.rtx_def* %insns.1) #11
  %call341 = call i32 @max_reg_num() #11
  %84 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call341, %struct._IO_FILE* %84) #11
  %call342 = call zeroext i1 @cleanup_cfg(i32 17) #11
  call void @timevar_pop(i32 13) #11
  call void @free_bb_for_insn() #11
  br label %if.end343

if.end343:                                        ; preds = %land.end, %if.then340
  %call344 = call i32 @max_reg_num() #11
  call void @delete_trivially_dead_insns(%struct.rtx_def* %insns.1, i32 %call344, i32 0) #11
  %85 = load i32* @flag_delete_null_pointer_checks, align 4, !tbaa !0
  %86 = load i32* @flag_thread_jumps, align 4, !tbaa !0
  %87 = or i32 %86, %85
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %if.end357, label %if.then348

if.then348:                                       ; preds = %if.end343
  call void @timevar_push(i32 13) #11
  %call349 = call i32 @max_reg_num() #11
  %89 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call349, %struct._IO_FILE* %89) #11
  %90 = load i32* @flag_thread_jumps, align 4, !tbaa !0
  %tobool350 = icmp ne i32 %90, 0
  %or352 = select i1 %tobool350, i32 81, i32 17
  %call353 = call zeroext i1 @cleanup_cfg(i32 %or352) #11
  %91 = load i32* @flag_delete_null_pointer_checks, align 4, !tbaa !0
  %tobool354 = icmp eq i32 %91, 0
  br i1 %tobool354, label %if.end356, label %if.then355

if.then355:                                       ; preds = %if.then348
  call void @delete_null_pointer_checks(%struct.rtx_def* %insns.1) #11
  br label %if.end356

if.end356:                                        ; preds = %if.then348, %if.then355
  call void @free_bb_for_insn() #11
  call void @timevar_pop(i32 13) #11
  br label %if.end357

if.end357:                                        ; preds = %if.end343, %if.end356
  %92 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @renumber_insns(%struct._IO_FILE* %92) #11
  call void @timevar_pop(i32 14) #11
  call fastcc void @close_dump_file(i32 8, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %insns.1) #15
  br label %if.end358

if.end358:                                        ; preds = %if.end357, %if.end324
  %call359 = call fastcc i32 @open_dump_file(i32 9, %union.tree_node* %decl) #15
  call void @purge_addressof(%struct.rtx_def* %insns.1) #11
  %call360 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.1, i32 %call360, i32 1) #11
  call fastcc void @close_dump_file(i32 9, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %insns.1) #15
  call void @ggc_collect() #11
  %93 = load i32* @optimize, align 4, !tbaa !0
  %cmp361 = icmp sgt i32 %93, 0
  %94 = load i32* @flag_gcse, align 4, !tbaa !0
  %tobool364 = icmp ne i32 %94, 0
  %or.cond684 = and i1 %cmp361, %tobool364
  br i1 %or.cond684, label %if.then365, label %if.end390

if.then365:                                       ; preds = %if.end358
  call void @timevar_push(i32 15) #11
  %call366 = call fastcc i32 @open_dump_file(i32 10, %union.tree_node* %decl) #15
  %call367 = call i32 @max_reg_num() #11
  %95 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call367, %struct._IO_FILE* %95) #11
  %call368 = call zeroext i1 @cleanup_cfg(i32 17) #11
  %96 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %call369 = call i32 @gcse_main(%struct.rtx_def* %insns.1, %struct._IO_FILE* %96) #11
  call void @rebuild_jump_labels(%struct.rtx_def* %insns.1) #11
  %97 = load i32* @flag_cse_skip_blocks, align 4, !tbaa !0
  %98 = load i32* @flag_cse_follow_jumps, align 4, !tbaa !0
  store i32 0, i32* @flag_cse_follow_jumps, align 4, !tbaa !0
  store i32 0, i32* @flag_cse_skip_blocks, align 4, !tbaa !0
  call void @free_bb_for_insn() #11
  %99 = load i32* @flag_expensive_optimizations, align 4, !tbaa !0
  %tobool370 = icmp eq i32 %99, 0
  br i1 %tobool370, label %while.cond.preheader, label %if.then371

if.then371:                                       ; preds = %if.then365
  call void @timevar_push(i32 14) #11
  %call372 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.1, i32 %call372, i32 1) #11
  %call373 = call i32 @max_reg_num() #11
  %100 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %call374 = call i32 @cse_main(%struct.rtx_def* %insns.1, i32 %call373, i32 0, %struct._IO_FILE* %100) #11
  call void @timevar_pop(i32 14) #11
  %101 = load i32* @flag_rerun_cse_after_loop, align 4, !tbaa !0
  %lnot376 = icmp eq i32 %101, 0
  %lnot.ext377 = zext i1 %lnot376 to i32
  store i32 %lnot.ext377, i32* @cse_not_expected, align 4, !tbaa !0
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then371, %if.then365
  %tem2.0.ph = phi i32 [ 0, %if.then365 ], [ %call374, %if.then371 ]
  %102 = or i32 %call369, %tem2.0.ph
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.cond.backedge
  call void @timevar_push(i32 13) #11
  call void @rebuild_jump_labels(%struct.rtx_def* %insns.1) #11
  %call381 = call i32 @max_reg_num() #11
  call void @delete_trivially_dead_insns(%struct.rtx_def* %insns.1, i32 %call381, i32 0) #11
  %call382 = call i32 @max_reg_num() #11
  %104 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call382, %struct._IO_FILE* %104) #11
  %call383 = call zeroext i1 @cleanup_cfg(i32 17) #11
  call void @free_bb_for_insn() #11
  call void @timevar_pop(i32 13) #11
  %105 = load i32* @flag_expensive_optimizations, align 4, !tbaa !0
  %tobool384 = icmp eq i32 %105, 0
  br i1 %tobool384, label %while.end, label %while.cond.backedge

while.cond.backedge:                              ; preds = %while.body
  call void @timevar_push(i32 14) #11
  %call386 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.1, i32 %call386, i32 1) #11
  %call387 = call i32 @max_reg_num() #11
  %106 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %call388 = call i32 @cse_main(%struct.rtx_def* %insns.1, i32 %call387, i32 0, %struct._IO_FILE* %106) #11
  call void @timevar_pop(i32 14) #11
  %phitmp = icmp eq i32 %call388, 0
  br i1 %phitmp, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %while.cond.backedge, %while.cond.preheader
  call fastcc void @close_dump_file(i32 10, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %insns.1) #15
  call void @timevar_pop(i32 15) #11
  call void @ggc_collect() #11
  store i32 %97, i32* @flag_cse_skip_blocks, align 4, !tbaa !0
  store i32 %98, i32* @flag_cse_follow_jumps, align 4, !tbaa !0
  %.pr = load i32* @optimize, align 4, !tbaa !0
  br label %if.end390

if.end390:                                        ; preds = %while.end, %if.end358
  %107 = phi i32 [ %.pr, %while.end ], [ %93, %if.end358 ]
  %cmp391 = icmp sgt i32 %107, 0
  br i1 %cmp391, label %if.then393, label %if.end426

if.then393:                                       ; preds = %if.end390
  call void @timevar_push(i32 16) #11
  %call394 = call fastcc i32 @open_dump_file(i32 11, %union.tree_node* %decl) #15
  call void @free_bb_for_insn() #11
  %108 = load i32* @flag_rerun_loop_opt, align 4, !tbaa !0
  %tobool395 = icmp eq i32 %108, 0
  br i1 %tobool395, label %if.end406, label %if.then396

if.then396:                                       ; preds = %if.then393
  call void @cleanup_barriers() #11
  %109 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @loop_optimize(%struct.rtx_def* %insns.1, %struct._IO_FILE* %109, i32 8) #11
  %call397 = call i32 @max_reg_num() #11
  call void @delete_trivially_dead_insns(%struct.rtx_def* %insns.1, i32 %call397, i32 0) #11
  %call398 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.1, i32 %call398, i32 1) #11
  br label %if.end406

if.end406:                                        ; preds = %if.then396, %if.then393
  call void @cleanup_barriers() #11
  %110 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %111 = load i32* @flag_unroll_loops, align 4, !tbaa !0
  %tobool400 = icmp ne i32 %111, 0
  %cond401 = zext i1 %tobool400 to i32
  %112 = load i32* @flag_prefetch_loop_arrays, align 4, !tbaa !0
  %tobool403 = icmp ne i32 %112, 0
  %cond404 = select i1 %tobool403, i32 4, i32 0
  %or402 = or i32 %cond401, %cond404
  %or405 = or i32 %or402, 2
  call void @loop_optimize(%struct.rtx_def* %insns.1, %struct._IO_FILE* %110, i32 %or405) #11
  call fastcc void @close_dump_file(i32 11, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %insns.1) #15
  call void @timevar_pop(i32 16) #11
  call void @ggc_collect() #11
  %.pre889 = load i32* @optimize, align 4, !tbaa !0
  %cmp407 = icmp sgt i32 %.pre889, 0
  br i1 %cmp407, label %if.then409, label %if.end426

if.then409:                                       ; preds = %if.end406
  call void @timevar_push(i32 17) #11
  %call410 = call fastcc i32 @open_dump_file(i32 12, %union.tree_node* %decl) #15
  %113 = load i32* @flag_rerun_cse_after_loop, align 4, !tbaa !0
  %tobool411 = icmp eq i32 %113, 0
  br i1 %tobool411, label %if.end425, label %if.then412

if.then412:                                       ; preds = %if.then409
  call void @timevar_push(i32 13) #11
  %call413 = call i32 @max_reg_num() #11
  call void @delete_trivially_dead_insns(%struct.rtx_def* %insns.1, i32 %call413, i32 0) #11
  %call414 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.1, i32 %call414, i32 0) #11
  call void @timevar_push(i32 21) #11
  %call415 = call i32 @max_reg_num() #11
  %114 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call415, %struct._IO_FILE* %114) #11
  %call416 = call zeroext i1 @cleanup_cfg(i32 1) #11
  call void @if_convert(i32 0) #11
  call void @timevar_pop(i32 21) #11
  call void @timevar_pop(i32 13) #11
  call void @free_bb_for_insn() #11
  %call417 = call i32 @max_reg_num() #11
  call void @reg_scan(%struct.rtx_def* %insns.1, i32 %call417, i32 0) #11
  %call418 = call i32 @max_reg_num() #11
  %115 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %call419 = call i32 @cse_main(%struct.rtx_def* %insns.1, i32 %call418, i32 1, %struct._IO_FILE* %115) #11
  %tobool420 = icmp eq i32 %call419, 0
  br i1 %tobool420, label %if.end425, label %if.then421

if.then421:                                       ; preds = %if.then412
  call void @timevar_push(i32 13) #11
  call void @rebuild_jump_labels(%struct.rtx_def* %insns.1) #11
  %call422 = call i32 @max_reg_num() #11
  %116 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call422, %struct._IO_FILE* %116) #11
  %call423 = call zeroext i1 @cleanup_cfg(i32 1) #11
  call void @free_bb_for_insn() #11
  call void @timevar_pop(i32 13) #11
  br label %if.end425

if.end425:                                        ; preds = %if.then412, %if.then409, %if.then421
  call fastcc void @close_dump_file(i32 12, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl, %struct.rtx_def* %insns.1) #15
  call void @timevar_pop(i32 17) #11
  call void @ggc_collect() #11
  br label %if.end426

if.end426:                                        ; preds = %if.end390, %if.end425, %if.end406
  store i32 1, i32* @cse_not_expected, align 4, !tbaa !0
  call void @regclass_init() #11
  call void @timevar_push(i32 19) #11
  %call427 = call fastcc i32 @open_dump_file(i32 13, %union.tree_node* %decl) #15
  %call428 = call i32 @max_reg_num() #11
  %117 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @find_basic_blocks(%struct.rtx_def* %insns.1, i32 %call428, %struct._IO_FILE* %117) #11
  %118 = load i32* @optimize, align 4, !tbaa !0
  %tobool429 = icmp ne i32 %118, 0
  %cond430 = zext i1 %tobool429 to i32
  %119 = load i32* @flag_thread_jumps, align 4, !tbaa !0
  %tobool431 = icmp ne i32 %119, 0
  %cond432 = select i1 %tobool431, i32 64, i32 0
  %or433 = or i32 %cond432, %cond430
  %call434 = call zeroext i1 @cleanup_cfg(i32 %or433) #11
  call void @check_function_return_warnings() #11
  call void @mark_constant_function() #11
  call fastcc void @close_dump_file(i32 13, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.1) #15
  %120 = load i32* @profile_arc_flag, align 4, !tbaa !0
  %121 = load i32* @flag_test_coverage, align 4, !tbaa !0
  %122 = or i32 %121, %120
  %123 = load i32* @flag_branch_probabilities, align 4, !tbaa !0
  %124 = or i32 %122, %123
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %if.end442, label %if.then440

if.then440:                                       ; preds = %if.end426
  call void @timevar_push(i32 18) #11
  %call441 = call fastcc i32 @open_dump_file(i32 14, %union.tree_node* %decl) #15
  call void @branch_prob() #11
  call fastcc void @close_dump_file(i32 14, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.1) #15
  call void @timevar_pop(i32 18) #11
  br label %if.end442

if.end442:                                        ; preds = %if.end426, %if.then440
  %call443 = call fastcc i32 @open_dump_file(i32 15, %union.tree_node* %decl) #15
  %126 = load i32* @optimize, align 4, !tbaa !0
  %tobool444 = icmp eq i32 %126, 0
  br i1 %tobool444, label %if.end453, label %if.then445

if.then445:                                       ; preds = %if.end442
  %127 = bitcast %struct.loops* %loops to i8*
  call void @llvm.lifetime.start(i64 56, i8* %127) #6
  %call446 = call i32 @flow_loops_find(%struct.loops* %loops, i32 1) #11
  %128 = load i32* @flag_guess_branch_prob, align 4, !tbaa !0
  %tobool447 = icmp eq i32 %128, 0
  br i1 %tobool447, label %if.end449, label %if.then448

if.then448:                                       ; preds = %if.then445
  call void @estimate_probability(%struct.loops* %loops) #11
  br label %if.end449

if.end449:                                        ; preds = %if.then445, %if.then448
  %129 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %tobool450 = icmp eq %struct._IO_FILE* %129, null
  br i1 %tobool450, label %if.end452, label %if.then451

if.then451:                                       ; preds = %if.end449
  call void @flow_loops_dump(%struct.loops* %loops, %struct._IO_FILE* %129, void (%struct.loop*, %struct._IO_FILE*, i32)* null, i32 0) #11
  br label %if.end452

if.end452:                                        ; preds = %if.end449, %if.then451
  call void @flow_loops_free(%struct.loops* %loops) #11
  call void @llvm.lifetime.end(i64 56, i8* %127) #6
  br label %if.end453

if.end453:                                        ; preds = %if.end442, %if.end452
  %130 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @life_analysis(%struct.rtx_def* %insns.1, %struct._IO_FILE* %130, i32 127) #11
  call void @timevar_pop(i32 19) #11
  store i32 1, i32* @no_new_pseudos, align 4, !tbaa !0
  %131 = load i32* @warn_uninitialized, align 4, !tbaa !0
  %132 = load i32* @extra_warnings, align 4, !tbaa !0
  %133 = or i32 %132, %131
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %if.end463, label %if.then457

if.then457:                                       ; preds = %if.end453
  %initial459 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %135 = load %union.tree_node** %initial459, align 8, !tbaa !4
  call void @uninitialized_vars_warning(%union.tree_node* %135) #11
  %136 = load i32* @extra_warnings, align 4, !tbaa !0
  %tobool460 = icmp eq i32 %136, 0
  br i1 %tobool460, label %if.end463, label %if.then461

if.then461:                                       ; preds = %if.then457
  call void @setjmp_args_warning() #11
  br label %if.end463

if.end463:                                        ; preds = %if.then457, %if.end453, %if.then461
  %137 = load i32* @optimize, align 4, !tbaa !0
  %tobool464 = icmp eq i32 %137, 0
  br i1 %tobool464, label %if.end471, label %if.then465

if.then465:                                       ; preds = %if.end463
  %call466 = call i32 @initialize_uninitialized_subregs() #11
  %tobool467 = icmp eq i32 %call466, 0
  br i1 %tobool467, label %if.end471, label %if.then468

if.then468:                                       ; preds = %if.then465
  %call469 = call %struct.rtx_def* @get_insns() #11
  %138 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @life_analysis(%struct.rtx_def* %call469, %struct._IO_FILE* %138, i32 7) #11
  br label %if.end471

if.end471:                                        ; preds = %if.then465, %if.end463, %if.then468
  %insns.2 = phi %struct.rtx_def* [ %call469, %if.then468 ], [ %insns.1, %if.then465 ], [ %insns.1, %if.end463 ]
  call fastcc void @close_dump_file(i32 15, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @ggc_collect() #11
  %139 = load i32* @optimize, align 4, !tbaa !0
  %cmp472 = icmp sgt i32 %139, 0
  br i1 %cmp472, label %if.then474, label %if.end500

if.then474:                                       ; preds = %if.end471
  call void @timevar_push(i32 20) #11
  %call475 = call fastcc i32 @open_dump_file(i32 16, %union.tree_node* %decl) #15
  %call476 = call i32 @max_reg_num() #11
  %call477 = call i32 @combine_instructions(%struct.rtx_def* %insns.2, i32 %call476) #11
  %call478 = call zeroext i1 @purge_all_dead_edges(i32 1) #11
  %conv479 = zext i1 %call478 to i32
  %or480 = or i32 %conv479, %call477
  %tobool481 = icmp eq i32 %or480, 0
  br i1 %tobool481, label %if.end485, label %if.then482

if.then482:                                       ; preds = %if.then474
  call void @timevar_push(i32 13) #11
  call void @rebuild_jump_labels(%struct.rtx_def* %insns.2) #11
  call void @timevar_pop(i32 13) #11
  %call483 = call zeroext i1 @cleanup_cfg(i32 33) #11
  br label %if.end485

if.end485:                                        ; preds = %if.then482, %if.then474
  call fastcc void @close_dump_file(i32 16, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 20) #11
  call void @ggc_collect() #11
  %.pr873 = load i32* @optimize, align 4, !tbaa !0
  %cmp486 = icmp sgt i32 %.pr873, 0
  br i1 %cmp486, label %if.end490, label %if.end500

if.end490:                                        ; preds = %if.end485
  call void @timevar_push(i32 21) #11
  %call489 = call fastcc i32 @open_dump_file(i32 17, %union.tree_node* %decl) #15
  store i32 0, i32* @no_new_pseudos, align 4, !tbaa !0
  call void @if_convert(i32 1) #11
  store i32 1, i32* @no_new_pseudos, align 4, !tbaa !0
  call fastcc void @close_dump_file(i32 17, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 21) #11
  %.pr875.pr = load i32* @optimize, align 4, !tbaa !0
  %cmp491 = icmp sgt i32 %.pr875.pr, 0
  br i1 %cmp491, label %land.lhs.true493, label %if.end500

land.lhs.true493:                                 ; preds = %if.end490
  %140 = load i32* @flag_regmove, align 4, !tbaa !0
  %141 = load i32* @flag_expensive_optimizations, align 4, !tbaa !0
  %142 = or i32 %141, %140
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %if.end500, label %if.then497

if.then497:                                       ; preds = %land.lhs.true493
  call void @timevar_push(i32 22) #11
  %call498 = call fastcc i32 @open_dump_file(i32 18, %union.tree_node* %decl) #15
  %call499 = call i32 @max_reg_num() #11
  %144 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @regmove_optimize(%struct.rtx_def* %insns.2, i32 %call499, %struct._IO_FILE* %144) #11
  call fastcc void @close_dump_file(i32 18, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 22) #11
  call void @ggc_collect() #11
  br label %if.end500

if.end500:                                        ; preds = %if.end471, %if.end485, %land.lhs.true493, %if.then497, %if.end490
  call void @split_all_insns(i32 1) #11
  call void @timevar_push(i32 23) #11
  store i32 0, i32* @no_new_pseudos, align 4, !tbaa !0
  %call501 = call i32 @optimize_mode_switching(%struct._IO_FILE* null) #11
  %not.tobool502 = icmp ne i32 %call501, 0
  %. = zext i1 %not.tobool502 to i32
  store i32 1, i32* @no_new_pseudos, align 4, !tbaa !0
  call void @timevar_pop(i32 23) #11
  call void @timevar_push(i32 24) #11
  %145 = load i32* @optimize, align 4, !tbaa !0
  %cmp505 = icmp sgt i32 %145, 0
  %146 = load i32* @flag_schedule_insns, align 4, !tbaa !0
  %tobool508 = icmp ne i32 %146, 0
  %or.cond689 = and i1 %cmp505, %tobool508
  br i1 %or.cond689, label %if.then509, label %if.end511

if.then509:                                       ; preds = %if.end500
  %call510 = call fastcc i32 @open_dump_file(i32 19, %union.tree_node* %decl) #15
  %147 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @schedule_insns(%struct._IO_FILE* %147) #11
  call fastcc void @close_dump_file(i32 19, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  br label %if.end511

if.end511:                                        ; preds = %if.then509, %if.end500
  %register_life_up_to_date.1 = phi i32 [ 1, %if.then509 ], [ %., %if.end500 ]
  call void @timevar_pop(i32 24) #11
  call void @ggc_collect() #11
  %call512 = call i32 @leaf_function_p() #11
  store i32 %call512, i32* @current_function_is_leaf, align 4, !tbaa !0
  call void @timevar_push(i32 25) #11
  %call513 = call fastcc i32 @open_dump_file(i32 20, %union.tree_node* %decl) #15
  %tobool514 = icmp eq i32 %register_life_up_to_date.1, 0
  br i1 %tobool514, label %if.then515, label %if.end519

if.then515:                                       ; preds = %if.end511
  %148 = load i32* @optimize_size, align 4, !tbaa !0
  %lnot517 = icmp eq i32 %148, 0
  %lnot.ext518 = zext i1 %lnot517 to i32
  call void @recompute_reg_usage(%struct.rtx_def* %insns.2, i32 %lnot.ext518) #11
  br label %if.end519

if.end519:                                        ; preds = %if.end511, %if.then515
  %149 = load i32* @max_regno, align 4, !tbaa !0
  %conv520 = sext i32 %149 to i64
  call void @allocate_reg_info(i64 %conv520, i32 0, i32 1) #11
  %150 = load i32* @max_regno, align 4, !tbaa !0
  %conv521 = sext i32 %150 to i64
  %call522 = call noalias i8* @xcalloc(i64 %conv521, i64 8) #11
  %151 = bitcast i8* %call522 to %struct.rtx_def**
  store %struct.rtx_def** %151, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !tbaa !4
  call void @allocate_initial_values(%struct.rtx_def** %151) #11
  %call523 = call i32 @max_reg_num() #11
  %152 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @regclass(%struct.rtx_def* %insns.2, i32 %call523, %struct._IO_FILE* %152) #11
  %call524 = call i32 @local_alloc() #11
  call void @timevar_pop(i32 25) #11
  %153 = load i8* getelementptr inbounds (<{ { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] } }>* @dump_file, i64 0, i32 20, i32 3), align 2, !tbaa !1
  %tobool525 = icmp eq i8 %153, 0
  br i1 %tobool525, label %if.end527, label %if.then526

if.then526:                                       ; preds = %if.end519
  call void @timevar_push(i32 2) #11
  %154 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @dump_flow_info(%struct._IO_FILE* %154) #11
  %155 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @dump_local_alloc(%struct._IO_FILE* %155) #11
  call fastcc void @close_dump_file(i32 20, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 2) #11
  br label %if.end527

if.end527:                                        ; preds = %if.end519, %if.then526
  call void @ggc_collect() #11
  call void @timevar_push(i32 26) #11
  %call528 = call fastcc i32 @open_dump_file(i32 21, %union.tree_node* %decl) #15
  %156 = load i32* @optimize, align 4, !tbaa !0
  %tobool529 = icmp eq i32 %156, 0
  br i1 %tobool529, label %if.else532, label %if.then530

if.then530:                                       ; preds = %if.end527
  %157 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  %call531 = call i32 @global_alloc(%struct._IO_FILE* %157) #11
  br label %if.end534

if.else532:                                       ; preds = %if.end527
  call void @build_insn_chain(%struct.rtx_def* %insns.2) #11
  %call533 = call i32 @reload(%struct.rtx_def* %insns.2, i32 0) #11
  br label %if.end534

if.end534:                                        ; preds = %if.else532, %if.then530
  %failure.0 = phi i32 [ %call531, %if.then530 ], [ %call533, %if.else532 ]
  call void @timevar_pop(i32 26) #11
  %158 = load i8* getelementptr inbounds (<{ { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] }, { i8*, i8, i8, i8, i8, [4 x i8] } }>* @dump_file, i64 0, i32 21, i32 3), align 2, !tbaa !1
  %tobool535 = icmp eq i8 %158, 0
  br i1 %tobool535, label %if.end537, label %if.then536

if.then536:                                       ; preds = %if.end534
  call void @timevar_push(i32 2) #11
  %159 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @dump_global_regs(%struct._IO_FILE* %159) #11
  call fastcc void @close_dump_file(i32 21, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 2) #11
  br label %if.end537

if.end537:                                        ; preds = %if.end534, %if.then536
  %tobool538 = icmp eq i32 %failure.0, 0
  br i1 %tobool538, label %if.end540, label %exit_rest_of_compilation

if.end540:                                        ; preds = %if.end537
  call void @ggc_collect() #11
  %call541 = call fastcc i32 @open_dump_file(i32 22, %union.tree_node* %decl) #15
  %160 = load i32* @optimize, align 4, !tbaa !0
  %cmp542 = icmp sgt i32 %160, 0
  br i1 %cmp542, label %if.then544, label %if.end545

if.then544:                                       ; preds = %if.end540
  call void @timevar_push(i32 27) #11
  call void @reload_cse_regs(%struct.rtx_def* %insns.2) #11
  call void @timevar_pop(i32 27) #11
  br label %if.end545

if.end545:                                        ; preds = %if.then544, %if.end540
  %tobool546 = icmp eq i32 %call524, 0
  br i1 %tobool546, label %if.end548, label %if.then547

if.then547:                                       ; preds = %if.end545
  call void @timevar_push(i32 13) #11
  call void @rebuild_jump_labels(%struct.rtx_def* %insns.2) #11
  call void @timevar_pop(i32 13) #11
  br label %if.end548

if.end548:                                        ; preds = %if.end545, %if.then547
  call fastcc void @close_dump_file(i32 22, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_push(i32 28) #11
  %call549 = call fastcc i32 @open_dump_file(i32 23, %union.tree_node* %decl) #15
  %161 = load i32* @optimize, align 4, !tbaa !0
  %cmp550 = icmp sgt i32 %161, 0
  br i1 %cmp550, label %if.then552, label %if.end553

if.then552:                                       ; preds = %if.end548
  call void @split_all_insns(i32 0) #11
  %.pre890 = load i32* @optimize, align 4, !tbaa !0
  br label %if.end553

if.end553:                                        ; preds = %if.then552, %if.end548
  %162 = phi i32 [ %.pre890, %if.then552 ], [ %161, %if.end548 ]
  %tobool554 = icmp ne i32 %162, 0
  %cond555 = zext i1 %tobool554 to i32
  %call556 = call zeroext i1 @cleanup_cfg(i32 %cond555) #11
  call void @thread_prologue_and_epilogue_insns(%struct.rtx_def* %insns.2) #11
  %163 = load i32* @n_basic_blocks, align 4, !tbaa !0
  %cmp557 = icmp sgt i32 %163, 1000
  br i1 %cmp557, label %land.lhs.true559, label %if.end569thread-pre-split

land.lhs.true559:                                 ; preds = %if.end553
  %164 = load i32* @n_edges, align 4, !tbaa !0
  %div = sdiv i32 %164, %163
  %cmp560 = icmp sgt i32 %div, 19
  br i1 %cmp560, label %if.then562, label %if.end569thread-pre-split

if.then562:                                       ; preds = %land.lhs.true559
  %165 = load i32* @optimize, align 4, !tbaa !0
  %tobool563 = icmp ne i32 %165, 0
  %166 = load i32* @warn_disabled_optimization, align 4, !tbaa !0
  %tobool565 = icmp ne i32 %166, 0
  %or.cond690 = and i1 %tobool563, %tobool565
  br i1 %or.cond690, label %if.then566, label %if.end569

if.then566:                                       ; preds = %if.then562
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([74 x i8]* @.str13, i64 0, i64 0), i32 %163, i32 %div) #11
  br label %if.end569thread-pre-split

if.end569thread-pre-split:                        ; preds = %if.end553, %land.lhs.true559, %if.then566
  %cleanup_crossjump.0.ph = phi i32 [ 1, %if.then566 ], [ 3, %land.lhs.true559 ], [ 3, %if.end553 ]
  %.pr877 = load i32* @optimize, align 4, !tbaa !0
  br label %if.end569

if.end569:                                        ; preds = %if.end569thread-pre-split, %if.then562
  %167 = phi i32 [ %.pr877, %if.end569thread-pre-split ], [ %165, %if.then562 ]
  %cleanup_crossjump.0 = phi i32 [ %cleanup_crossjump.0.ph, %if.end569thread-pre-split ], [ 1, %if.then562 ]
  %tobool570 = icmp eq i32 %167, 0
  br i1 %tobool570, label %if.end574, label %if.then571

if.then571:                                       ; preds = %if.end569
  %call573 = call zeroext i1 @cleanup_cfg(i32 %cleanup_crossjump.0) #11
  %168 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @life_analysis(%struct.rtx_def* %insns.2, %struct._IO_FILE* %168, i32 127) #11
  call void @combine_stack_adjustments() #11
  call void @ggc_collect() #11
  br label %if.end574

if.end574:                                        ; preds = %if.end569, %if.then571
  store i32 1, i32* @flow2_completed, align 4, !tbaa !0
  call fastcc void @close_dump_file(i32 23, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 28) #11
  %169 = load i32* @optimize, align 4, !tbaa !0
  %cmp575 = icmp sgt i32 %169, 0
  %170 = load i32* @flag_peephole2, align 4, !tbaa !0
  %tobool578 = icmp ne i32 %170, 0
  %or.cond691 = and i1 %cmp575, %tobool578
  br i1 %or.cond691, label %if.then579, label %if.end581

if.then579:                                       ; preds = %if.end574
  call void @timevar_push(i32 30) #11
  %call580 = call fastcc i32 @open_dump_file(i32 24, %union.tree_node* %decl) #15
  %171 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @peephole2_optimize(%struct._IO_FILE* %171) #11
  call fastcc void @close_dump_file(i32 24, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 30) #11
  %.pr878 = load i32* @optimize, align 4, !tbaa !0
  br label %if.end581

if.end581:                                        ; preds = %if.then579, %if.end574
  %172 = phi i32 [ %.pr878, %if.then579 ], [ %169, %if.end574 ]
  %cmp582 = icmp sgt i32 %172, 0
  br i1 %cmp582, label %land.lhs.true584, label %if.end601

land.lhs.true584:                                 ; preds = %if.end581
  %173 = load i32* @flag_rename_registers, align 4, !tbaa !0
  %174 = load i32* @flag_cprop_registers, align 4, !tbaa !0
  %175 = or i32 %174, %173
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %if.end596, label %if.then588

if.then588:                                       ; preds = %land.lhs.true584
  call void @timevar_push(i32 31) #11
  %call589 = call fastcc i32 @open_dump_file(i32 25, %union.tree_node* %decl) #15
  %177 = load i32* @flag_rename_registers, align 4, !tbaa !0
  %tobool590 = icmp eq i32 %177, 0
  br i1 %tobool590, label %if.end592, label %if.then591

if.then591:                                       ; preds = %if.then588
  call void @regrename_optimize() #11
  br label %if.end592

if.end592:                                        ; preds = %if.then588, %if.then591
  %178 = load i32* @flag_cprop_registers, align 4, !tbaa !0
  %tobool593 = icmp eq i32 %178, 0
  br i1 %tobool593, label %if.end595, label %if.then594

if.then594:                                       ; preds = %if.end592
  call void @copyprop_hardreg_forward() #11
  br label %if.end595

if.end595:                                        ; preds = %if.end592, %if.then594
  call fastcc void @close_dump_file(i32 25, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 31) #11
  %.pre891 = load i32* @optimize, align 4, !tbaa !0
  br label %if.end596

if.end596:                                        ; preds = %land.lhs.true584, %if.end595
  %179 = phi i32 [ %172, %land.lhs.true584 ], [ %.pre891, %if.end595 ]
  %cmp597 = icmp sgt i32 %179, 0
  br i1 %cmp597, label %if.then599, label %if.end601

if.then599:                                       ; preds = %if.end596
  call void @timevar_push(i32 29) #11
  %call600 = call fastcc i32 @open_dump_file(i32 26, %union.tree_node* %decl) #15
  call void @if_convert(i32 1) #11
  call fastcc void @close_dump_file(i32 26, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 29) #11
  %.pr879 = load i32* @optimize, align 4, !tbaa !0
  br label %if.end601

if.end601:                                        ; preds = %if.end581, %if.then599, %if.end596
  %180 = phi i32 [ %.pr879, %if.then599 ], [ %179, %if.end596 ], [ %172, %if.end581 ]
  %tobool602 = icmp eq i32 %180, 0
  br i1 %tobool602, label %if.end611, label %if.end604

if.end604:                                        ; preds = %if.end601
  call void @split_all_insns(i32 1) #11
  %.pre892 = load i32* @optimize, align 4, !tbaa !0
  %phitmp896 = icmp sgt i32 %.pre892, 0
  %181 = load i32* @flag_schedule_insns_after_reload, align 4, !tbaa !0
  %tobool608 = icmp ne i32 %181, 0
  %or.cond693 = and i1 %phitmp896, %tobool608
  br i1 %or.cond693, label %if.then609, label %if.end611

if.then609:                                       ; preds = %if.end604
  call void @timevar_push(i32 32) #11
  %call610 = call fastcc i32 @open_dump_file(i32 27, %union.tree_node* %decl) #15
  call void @split_all_insns(i32 1) #11
  %182 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @schedule_insns(%struct._IO_FILE* %182) #11
  call fastcc void @close_dump_file(i32 27, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 32) #11
  call void @ggc_collect() #11
  br label %if.end611

if.end611:                                        ; preds = %if.end601, %if.then609, %if.end604
  call void @timevar_push(i32 37) #11
  %call612 = call fastcc i32 @open_dump_file(i32 28, %union.tree_node* %decl) #15
  %183 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !4
  call void @reg_to_stack(%struct.rtx_def* %insns.2, %struct._IO_FILE* %183) #11
  call fastcc void @close_dump_file(i32 28, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 37) #11
  call void @ggc_collect() #11
  %184 = load i32* @optimize, align 4, !tbaa !0
  %cmp613 = icmp sgt i32 %184, 0
  br i1 %cmp613, label %if.then615, label %if.end622

if.then615:                                       ; preds = %if.end611
  call void @timevar_push(i32 35) #11
  %call616 = call fastcc i32 @open_dump_file(i32 29, %union.tree_node* %decl) #15
  %call617 = call zeroext i1 @cleanup_cfg(i32 5) #11
  %185 = load i32* @flag_reorder_blocks, align 4, !tbaa !0
  %tobool618 = icmp eq i32 %185, 0
  br i1 %tobool618, label %if.end621, label %if.then619

if.then619:                                       ; preds = %if.then615
  call void @reorder_basic_blocks() #11
  %call620 = call zeroext i1 @cleanup_cfg(i32 5) #11
  br label %if.end621

if.end621:                                        ; preds = %if.then615, %if.then619
  call fastcc void @close_dump_file(i32 29, void (%struct._IO_FILE*, %struct.rtx_def*)* @print_rtl_with_bb, %struct.rtx_def* %insns.2) #15
  call void @timevar_pop(i32 35) #11
  br label %if.end622

if.end622:                                        ; preds = %if.end621, %if.end611
  call void @compute_alignments() #11
  call void @free_bb_for_insn() #11
  call void @purge_line_number_notes(%struct.rtx_def* %insns.2) #11
  call void @cleanup_barriers() #11
  call void @convert_to_eh_region_ranges() #11
  call void @timevar_push(i32 36) #11
  %call623 = call %struct.rtx_def* @get_insns() #11
  call void @shorten_branches(%struct.rtx_def* %call623) #11
  call void @timevar_pop(i32 36) #11
  %call624 = call zeroext i1 @nothrow_function_p() #11
  %conv625 = zext i1 %call624 to i32
  store i32 %conv625, i32* @current_function_nothrow, align 4, !tbaa !0
  br i1 %call624, label %if.then627, label %if.end633

if.then627:                                       ; preds = %if.end622
  %186 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  %nothrow_flag629 = getelementptr inbounds %union.tree_node* %186, i64 0, i32 0, i32 0, i32 2
  %187 = bitcast [4 x i8]* %nothrow_flag629 to i32*
  %bf.load630 = load i32* %187, align 8
  %bf.set632 = or i32 %bf.load630, 131072
  store i32 %bf.set632, i32* %187, align 8
  br label %if.end633

if.end633:                                        ; preds = %if.then627, %if.end622
  call void @timevar_push(i32 42) #11
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %188 = load %struct.rtx_def** %rtl, align 8, !tbaa !4
  %tobool635 = icmp eq %struct.rtx_def* %188, null
  br i1 %tobool635, label %cond.false639, label %cond.end642

cond.false639:                                    ; preds = %if.end633
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #11
  %189 = load %struct.rtx_def** %rtl, align 8, !tbaa !4
  br label %cond.end642

cond.end642:                                      ; preds = %if.end633, %cond.false639
  %cond643 = phi %struct.rtx_def* [ %189, %cond.false639 ], [ %188, %if.end633 ]
  %190 = bitcast %struct.rtx_def* %cond643 to i32*
  %bf.load644 = load i32* %190, align 8
  %bf.clear645 = and i32 %bf.load644, 65535
  %cmp646 = icmp eq i32 %bf.clear645, 66
  br i1 %cmp646, label %if.end649, label %if.then648

if.then648:                                       ; preds = %cond.end642
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str1, i64 0, i64 0), i32 3494, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.rest_of_compilation, i64 0, i64 0)) #13
  unreachable

if.end649:                                        ; preds = %cond.end642
  %arrayidx650 = getelementptr inbounds %struct.rtx_def* %cond643, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx650 to %struct.rtx_def**
  %191 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %192 = bitcast %struct.rtx_def* %191 to i32*
  %bf.load651 = load i32* %192, align 8
  %bf.clear652 = and i32 %bf.load651, 65535
  %cmp653 = icmp eq i32 %bf.clear652, 68
  br i1 %cmp653, label %if.end656, label %if.then655

if.then655:                                       ; preds = %if.end649
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str1, i64 0, i64 0), i32 3497, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.rest_of_compilation, i64 0, i64 0)) #13
  unreachable

if.end656:                                        ; preds = %if.end649
  %arrayidx658 = getelementptr inbounds %struct.rtx_def* %191, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx658 to i8**
  %193 = load i8** %rtstr, align 8, !tbaa !4
  call void @assemble_start_function(%union.tree_node* %decl, i8* %193) #11
  %194 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !4
  %195 = load i32* @optimize, align 4, !tbaa !0
  call void @final_start_function(%struct.rtx_def* %insns.2, %struct._IO_FILE* %194, i32 %195) #11
  %196 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !4
  %197 = load i32* @optimize, align 4, !tbaa !0
  call void @final(%struct.rtx_def* %insns.2, %struct._IO_FILE* %196, i32 %197, i32 0) #11
  call void @final_end_function() #11
  call void @assemble_end_function(%union.tree_node* %decl, i8* %193) #11
  call void @output_function_exception_table() #11
  %198 = load i32* @quiet_flag, align 4, !tbaa !0
  %tobool659 = icmp eq i32 %198, 0
  br i1 %tobool659, label %if.then660, label %if.end662

if.then660:                                       ; preds = %if.end656
  %199 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !4
  %call661 = call i32 @fflush(%struct._IO_FILE* %199) #11
  br label %if.end662

if.end662:                                        ; preds = %if.end656, %if.then660
  call void @free_basic_block_vars(i32 0) #11
  call void @regset_release_memory() #11
  call void @timevar_pop(i32 42) #11
  call void @ggc_collect() #11
  call void @timevar_push(i32 43) #11
  %200 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !4
  %function_decl = getelementptr inbounds %struct.gcc_debug_hooks* %200, i64 0, i32 15
  %201 = load void (%union.tree_node*)** %function_decl, align 8, !tbaa !4
  call void %201(%union.tree_node* %decl) #11
  call void @timevar_pop(i32 43) #11
  br label %exit_rest_of_compilation

exit_rest_of_compilation:                         ; preds = %if.end169, %if.end537, %lor.lhs.false242, %lor.lhs.false240, %if.end233, %if.end662, %if.then290, %if.end164, %if.then66, %if.then28
  %.pre-phi = phi i64* [ %10, %if.end169 ], [ %43, %if.end537 ], [ %43, %lor.lhs.false242 ], [ %43, %lor.lhs.false240 ], [ %43, %if.end233 ], [ %43, %if.end662 ], [ %43, %if.then290 ], [ %10, %if.end164 ], [ %10, %if.then66 ], [ %.pre895, %if.then28 ]
  store i32 0, i32* @reload_completed, align 4, !tbaa !0
  store i32 0, i32* @flow2_completed, align 4, !tbaa !0
  store i32 0, i32* @no_new_pseudos, align 4, !tbaa !0
  call void @timevar_push(i32 42) #11
  call void @init_insn_lengths() #11
  call void @clear_const_double_mem() #11
  call void @init_temp_slots() #11
  call void @free_basic_block_vars(i32 0) #11
  call void @free_bb_for_insn() #11
  call void @timevar_pop(i32 42) #11
  call void @init_recog_no_volatile() #11
  %202 = load %struct.function** @cfun, align 8, !tbaa !4
  call void @free_after_parsing(%struct.function* %202) #11
  %bf.load665 = load i64* %.pre-phi, align 8
  %bf.cast668 = and i64 %bf.load665, 262144
  %tobool669 = icmp eq i64 %bf.cast668, 0
  br i1 %tobool669, label %if.then670, label %if.end674

if.then670:                                       ; preds = %exit_rest_of_compilation
  %203 = load %struct.function** @cfun, align 8, !tbaa !4
  call void @free_after_compilation(%struct.function* %203) #11
  store %struct.function* null, %struct.function** %f, align 8, !tbaa !4
  br label %if.end674

if.end674:                                        ; preds = %exit_rest_of_compilation, %if.then670
  store %struct.function* null, %struct.function** @cfun, align 8, !tbaa !4
  call void @ggc_collect() #11
  call void @timevar_pop(i32 44) #11
  ret void
}
