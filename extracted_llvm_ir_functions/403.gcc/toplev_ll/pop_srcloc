define void @pop_srcloc() #0 {
entry:
  %0 = load %struct.file_stack** @input_file_stack, align 8, !tbaa !4
  %next = getelementptr inbounds %struct.file_stack* %0, i64 0, i32 1
  %1 = load %struct.file_stack** %next, align 8, !tbaa !4
  store %struct.file_stack* %1, %struct.file_stack** @input_file_stack, align 8, !tbaa !4
  %2 = bitcast %struct.file_stack* %0 to i8*
  tail call void @free(i8* %2) #11
  %3 = load i32* @input_file_stack_tick, align 4, !tbaa !0
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @input_file_stack_tick, align 4, !tbaa !0
  %4 = load %struct.file_stack** @input_file_stack, align 8, !tbaa !4
  %tobool = icmp eq %struct.file_stack* %4, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str1, i64 0, i64 0), i32 2104, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.pop_srcloc, i64 0, i64 0)) #13
  unreachable

if.end:                                           ; preds = %entry
  %name = getelementptr inbounds %struct.file_stack* %4, i64 0, i32 0
  %5 = load i8** %name, align 8, !tbaa !4
  store i8* %5, i8** @input_filename, align 8, !tbaa !4
  %line = getelementptr inbounds %struct.file_stack* %4, i64 0, i32 2
  %6 = load i32* %line, align 4, !tbaa !0
  store i32 %6, i32* @lineno, align 4, !tbaa !0
  ret void
}
