define void @rest_of_decl_compilation(%union.tree_node* %decl, i8* %asmspec, i32 %top_level, i32 %at_end) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %decl}, i64 0, metadata !1404), !dbg !2200
  tail call void @llvm.dbg.value(metadata !{i8* %asmspec}, i64 0, metadata !1405), !dbg !2201
  tail call void @llvm.dbg.value(metadata !{i32 %top_level}, i64 0, metadata !1406), !dbg !2202
  tail call void @llvm.dbg.value(metadata !{i32 %at_end}, i64 0, metadata !1407), !dbg !2203
  %attributes = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 16, !dbg !2204
  %0 = load %union.tree_node** %attributes, align 8, !dbg !2204, !tbaa !2171
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0), %union.tree_node* %0) #12, !dbg !2204
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call}, i64 0, metadata !1408), !dbg !2204
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !2205
  br i1 %tobool, label %if.end, label %if.then, !dbg !2205

if.then:                                          ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2, !dbg !2206
  %1 = bitcast i32* %value to %union.tree_node**, !dbg !2206
  %2 = load %union.tree_node** %1, align 8, !dbg !2206, !tbaa !2171
  %value3 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2, !dbg !2206
  %3 = bitcast i32* %value3 to %union.tree_node**, !dbg !2206
  %4 = load %union.tree_node** %3, align 8, !dbg !2206, !tbaa !2171
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %4}, i64 0, metadata !1408), !dbg !2206
  %pointer = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 4, !dbg !2208
  %5 = load %union.tree_node** %pointer, align 8, !dbg !2208
  %6 = bitcast %union.tree_node* %5 to i8*, !dbg !2208
  %call4 = tail call %union.tree_node* @get_identifier(i8* %6) #12, !dbg !2208
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call4}, i64 0, metadata !1408), !dbg !2208
  tail call void @assemble_alias(%union.tree_node* %decl, %union.tree_node* %call4) #12, !dbg !2209
  br label %if.end, !dbg !2210

if.end:                                           ; preds = %entry, %if.then
  %static_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !2211
  %7 = bitcast [4 x i8]* %static_flag to i32*, !dbg !2211
  %bf.load = load i32* %7, align 8, !dbg !2211
  %bf.clear = and i32 %bf.load, 262144, !dbg !2211
  %tobool5 = icmp eq i32 %bf.clear, 0, !dbg !2211
  br i1 %tobool5, label %lor.lhs.false, label %if.then15, !dbg !2211

lor.lhs.false:                                    ; preds = %if.end
  %external_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !2211
  %8 = bitcast [8 x i8]* %external_flag to i64*, !dbg !2211
  %bf.load7 = load i64* %8, align 8, !dbg !2211
  %bf.cast = and i64 %bf.load7, 256, !dbg !2211
  %tobool10 = icmp eq i64 %bf.cast, 0, !dbg !2211
  br i1 %tobool10, label %lor.lhs.false11, label %if.then15, !dbg !2211

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %bf.clear14 = and i32 %bf.load, 255, !dbg !2211
  %cmp = icmp eq i32 %bf.clear14, 30, !dbg !2211
  br i1 %cmp, label %if.then15, label %if.else, !dbg !2211

if.then15:                                        ; preds = %lor.lhs.false, %if.end, %lor.lhs.false11
  tail call void @timevar_push(i32 11) #12, !dbg !2212
  %tobool16 = icmp eq i8* %asmspec, null, !dbg !2213
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !2213

if.then17:                                        ; preds = %if.then15
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* %asmspec) #12, !dbg !2214
  br label %if.end18, !dbg !2214

if.end18:                                         ; preds = %if.then15, %if.then17
  %tobool19 = icmp ne i32 %at_end, 0, !dbg !2215
  br i1 %tobool19, label %if.then27, label %lor.lhs.false20, !dbg !2215

lor.lhs.false20:                                  ; preds = %if.end18
  %defer_output = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !2215
  %9 = bitcast [8 x i8]* %defer_output to i64*, !dbg !2215
  %bf.load22 = load i64* %9, align 8, !dbg !2215
  %bf.cast25 = and i64 %bf.load22, 262144, !dbg !2215
  %tobool26 = icmp eq i64 %bf.cast25, 0, !dbg !2215
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !2215

if.then27:                                        ; preds = %lor.lhs.false20, %if.end18
  tail call void @assemble_variable(%union.tree_node* %decl, i32 %top_level, i32 %at_end, i32 0) #12, !dbg !2216
  br label %if.end28, !dbg !2216

if.end28:                                         ; preds = %lor.lhs.false20, %if.then27
  %10 = load %union.tree_node** @last_assemble_variable_decl, align 8, !dbg !2217, !tbaa !2171
  %cmp29 = icmp eq %union.tree_node* %10, %decl, !dbg !2217
  br i1 %cmp29, label %do.body, label %if.end59, !dbg !2217

do.body:                                          ; preds = %if.end28
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17, !dbg !2218
  %11 = load %struct.rtx_def** %rtl, align 8, !dbg !2218, !tbaa !2171
  %tobool32 = icmp eq %struct.rtx_def* %11, null, !dbg !2218
  br i1 %tobool32, label %cond.false, label %cond.end, !dbg !2218

cond.false:                                       ; preds = %do.body
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #12, !dbg !2218
  %12 = load %struct.rtx_def** %rtl, align 8, !dbg !2218, !tbaa !2171
  br label %cond.end, !dbg !2218

cond.end:                                         ; preds = %do.body, %cond.false
  %cond = phi %struct.rtx_def* [ %12, %cond.false ], [ %11, %do.body ], !dbg !2218
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0, !dbg !2218
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2218
  %13 = load %struct.rtx_def** %rtx, align 8, !dbg !2218, !tbaa !2171
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0, !dbg !2218
  %rtstr = bitcast %union.rtunion_def* %arrayidx38 to i8**, !dbg !2218
  %14 = load i8** %rtstr, align 8, !dbg !2218, !tbaa !2171
  tail call void @llvm.dbg.value(metadata !{i8* %14}, i64 0, metadata !1410), !dbg !2218
  %15 = load i32* @flag_inhibit_size_directive, align 4, !dbg !2218, !tbaa !2059
  %tobool39 = icmp eq i32 %15, 0, !dbg !2218
  br i1 %tobool39, label %land.lhs.true, label %if.end59, !dbg !2218

land.lhs.true:                                    ; preds = %cond.end
  %size = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4, !dbg !2218
  %16 = load %union.tree_node** %size, align 8, !dbg !2218, !tbaa !2171
  %tobool41 = icmp eq %union.tree_node* %16, null, !dbg !2218
  %brmerge = or i1 %tobool41, %tobool19, !dbg !2218
  %tobool45 = icmp eq i32 %top_level, 0, !dbg !2218
  %or.cond132 = or i1 %brmerge, %tobool45, !dbg !2218
  br i1 %or.cond132, label %if.end59, label %land.lhs.true46, !dbg !2218

land.lhs.true46:                                  ; preds = %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12, !dbg !2218
  %17 = load %union.tree_node** %initial, align 8, !dbg !2218, !tbaa !2171
  %18 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !2218, !tbaa !2171
  %cmp48 = icmp ne %union.tree_node* %17, %18, !dbg !2218
  %19 = load i32* @size_directive_output, align 4, !dbg !2218, !tbaa !2059
  %tobool50 = icmp ne i32 %19, 0, !dbg !2218
  %or.cond = or i1 %cmp48, %tobool50, !dbg !2218
  br i1 %or.cond, label %if.end59, label %if.then51, !dbg !2218

if.then51:                                        ; preds = %land.lhs.true46
  store i32 1, i32* @size_directive_output, align 4, !dbg !2219, !tbaa !2059
  %20 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2219, !tbaa !2171
  %21 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str9, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %20), !dbg !2219
  %22 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2219, !tbaa !2171
  tail call void @assemble_name(%struct._IO_FILE* %22, i8* %14) #12, !dbg !2219
  %23 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2219, !tbaa !2171
  %call53 = tail call i32 @_IO_putc(i32 44, %struct._IO_FILE* %23) #12, !dbg !2219
  %24 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2219, !tbaa !2171
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1, !dbg !2219
  %25 = load %union.tree_node** %type, align 8, !dbg !2219, !tbaa !2171
  %call55 = tail call i64 @int_size_in_bytes(%union.tree_node* %25) #12, !dbg !2219
  %call56 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i64 %call55) #12, !dbg !2219
  %26 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2219, !tbaa !2171
  %call57 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %26) #12, !dbg !2219
  br label %if.end59, !dbg !2219

if.end59:                                         ; preds = %land.lhs.true, %cond.end, %land.lhs.true46, %if.then51, %if.end28
  tail call void @timevar_pop(i32 11) #12, !dbg !2221
  br label %if.end97, !dbg !2222

if.else:                                          ; preds = %lor.lhs.false11
  %bf.cast64 = and i64 %bf.load7, 1024, !dbg !2223
  %tobool65 = icmp eq i64 %bf.cast64, 0, !dbg !2223
  %cmp67 = icmp eq i8* %asmspec, null, !dbg !2223
  %or.cond133 = or i1 %tobool65, %cmp67, !dbg !2223
  br i1 %or.cond133, label %if.else83, label %if.then68, !dbg !2223

if.then68:                                        ; preds = %if.else
  %call69 = tail call i32 @decode_reg_name(i8* %asmspec) #12, !dbg !2224
  %cmp70 = icmp sgt i32 %call69, -1, !dbg !2224
  br i1 %cmp70, label %if.then71, label %if.else74, !dbg !2224

if.then71:                                        ; preds = %if.then68
  %rtl73 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17, !dbg !2226
  store %struct.rtx_def* null, %struct.rtx_def** %rtl73, align 8, !dbg !2226, !tbaa !2171
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* %asmspec) #12, !dbg !2228
  br label %if.end97, !dbg !2229

if.else74:                                        ; preds = %if.then68
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str11, i64 0, i64 0), i8* %asmspec) #12, !dbg !2230
  %bf.load77 = load i64* %8, align 8, !dbg !2232
  %bf.clear78 = and i64 %bf.load77, -1025, !dbg !2232
  store i64 %bf.clear78, i64* %8, align 8, !dbg !2232
  %tobool79 = icmp eq i32 %top_level, 0, !dbg !2233
  br i1 %tobool79, label %if.then80, label %if.end97, !dbg !2233

if.then80:                                        ; preds = %if.else74
  tail call void @expand_decl(%union.tree_node* %decl) #12, !dbg !2234
  br label %if.end97, !dbg !2234

if.else83:                                        ; preds = %if.else
  %27 = load i32* @write_symbols, align 4, !dbg !2235, !tbaa !2236
  %28 = and i32 %27, -5, !dbg !2235
  %29 = icmp eq i32 %28, 1, !dbg !2235
  %cmp92 = icmp eq i32 %bf.clear14, 33, !dbg !2235
  %or.cond134 = and i1 %29, %cmp92, !dbg !2235
  br i1 %or.cond134, label %if.then93, label %if.end97, !dbg !2235

if.then93:                                        ; preds = %if.else83
  tail call void @timevar_push(i32 43) #12, !dbg !2237
  %call94 = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 0) #12, !dbg !2239
  tail call void @timevar_pop(i32 43) #12, !dbg !2240
  br label %if.end97, !dbg !2241

if.end97:                                         ; preds = %if.else74, %if.then80, %if.then71, %if.else83, %if.then93, %if.end59
  ret void, !dbg !2242
}
