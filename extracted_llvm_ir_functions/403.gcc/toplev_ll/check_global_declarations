define void @check_global_declarations(%union.tree_node** nocapture %vec, i32 %len) #0 {
entry:
  %cmp189 = icmp sgt i32 %len, 0
  br i1 %cmp189, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %if.end151
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end151 ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %union.tree_node** %vec, i64 %indvars.iv
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !4
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %2 = and i32 %bf.load, 278783
  %3 = icmp eq i32 %2, 262178
  br i1 %3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %rtl = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %for.body, %if.then
  %bf.clear15 = and i32 %bf.load, 255
  %cmp16 = icmp eq i32 %bf.clear15, 30
  br i1 %cmp16, label %land.lhs.true17, label %if.end72

land.lhs.true17:                                  ; preds = %if.end
  %4 = load i32* @warn_unused_function, align 4, !tbaa !0
  %tobool18 = icmp eq i32 %4, 0
  br i1 %tobool18, label %lor.lhs.false, label %land.lhs.true29

lor.lhs.false:                                    ; preds = %land.lhs.true17
  %assembler_name = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 14
  %5 = load %union.tree_node** %assembler_name, align 8, !tbaa !4
  %cmp20 = icmp eq %union.tree_node* %5, null
  br i1 %cmp20, label %cond.false, label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %6 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !4
  tail call void %6(%union.tree_node* %0) #11
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !4
  br label %cond.end

cond.end:                                         ; preds = %lor.lhs.false, %cond.false
  %7 = phi %union.tree_node* [ %5, %lor.lhs.false ], [ %.pre, %cond.false ]
  %static_flag24 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %static_flag24 to i32*
  %bf.load25 = load i32* %8, align 8
  %bf.clear27 = and i32 %bf.load25, 262144
  %tobool28 = icmp eq i32 %bf.clear27, 0
  br i1 %tobool28, label %if.end72, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %cond.end, %land.lhs.true17
  %initial = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12
  %9 = load %union.tree_node** %initial, align 8, !tbaa !4
  %cmp31 = icmp eq %union.tree_node* %9, null
  br i1 %cmp31, label %land.lhs.true32, label %if.end72

land.lhs.true32:                                  ; preds = %land.lhs.true29
  %external_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 5
  %10 = bitcast [8 x i8]* %external_flag to i64*
  %bf.load34 = load i64* %10, align 8
  %11 = and i64 %bf.load34, 4194560
  %12 = icmp eq i64 %11, 256
  br i1 %12, label %land.lhs.true45, label %if.end72

land.lhs.true45:                                  ; preds = %land.lhs.true32
  %bf.load47 = load i32* %1, align 8
  %bf.clear49 = and i32 %bf.load47, 524288
  %tobool50 = icmp eq i32 %bf.clear49, 0
  br i1 %tobool50, label %if.then51, label %if.end72

if.then51:                                        ; preds = %land.lhs.true45
  %assembler_name53 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 14
  %13 = load %union.tree_node** %assembler_name53, align 8, !tbaa !4
  %cmp54 = icmp eq %union.tree_node* %13, null
  br i1 %cmp54, label %cond.false56, label %cond.end57

cond.false56:                                     ; preds = %if.then51
  %14 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !4
  tail call void %14(%union.tree_node* %0) #11
  %.pre191 = load %union.tree_node** %assembler_name53, align 8, !tbaa !4
  br label %cond.end57

cond.end57:                                       ; preds = %if.then51, %cond.false56
  %15 = phi %union.tree_node* [ %13, %if.then51 ], [ %.pre191, %cond.false56 ]
  %static_flag61 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast [4 x i8]* %static_flag61 to i32*
  %bf.load62 = load i32* %16, align 8
  %bf.clear64 = and i32 %bf.load62, 262144
  %tobool65 = icmp eq i32 %bf.clear64, 0
  br i1 %tobool65, label %if.else, label %if.then66

if.then66:                                        ; preds = %cond.end57
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([28 x i8]* @.str4, i64 0, i64 0)) #11
  br label %if.end67

if.else:                                          ; preds = %cond.end57
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([41 x i8]* @.str5, i64 0, i64 0)) #11
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then66
  %bf.load70 = load i32* %1, align 8
  %bf.set = or i32 %bf.load70, 524288
  store i32 %bf.set, i32* %1, align 8
  tail call void @assemble_external(%union.tree_node* %0) #11
  br label %if.end72

if.end72:                                         ; preds = %land.lhs.true45, %land.lhs.true32, %land.lhs.true29, %cond.end, %if.end, %if.end67
  %17 = load i32* @warn_unused_function, align 4, !tbaa !0
  %tobool73 = icmp eq i32 %17, 0
  br i1 %tobool73, label %lor.lhs.false87, label %land.lhs.true74

land.lhs.true74:                                  ; preds = %if.end72
  %bf.load77 = load i32* %1, align 8
  %bf.clear78 = and i32 %bf.load77, 255
  %cmp79 = icmp eq i32 %bf.clear78, 30
  br i1 %cmp79, label %land.lhs.true80, label %lor.lhs.false87

land.lhs.true80:                                  ; preds = %land.lhs.true74
  %inline_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 5
  %18 = bitcast [8 x i8]* %inline_flag to i64*
  %bf.load82 = load i64* %18, align 8
  %bf.cast85 = and i64 %bf.load82, 2048
  %tobool86 = icmp eq i64 %bf.cast85, 0
  br i1 %tobool86, label %land.lhs.true101, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %land.lhs.true80, %if.end72, %land.lhs.true74
  %19 = load i32* @warn_unused_variable, align 4, !tbaa !0
  %tobool88 = icmp eq i32 %19, 0
  br i1 %tobool88, label %if.end151, label %land.lhs.true89

land.lhs.true89:                                  ; preds = %lor.lhs.false87
  %bf.load92 = load i32* %1, align 8
  %20 = and i32 %bf.load92, 4351
  %21 = icmp eq i32 %20, 34
  br i1 %21, label %land.lhs.true89.land.lhs.true101_crit_edge, label %if.end151

land.lhs.true89.land.lhs.true101_crit_edge:       ; preds = %land.lhs.true89
  %in_system_header_flag.phi.trans.insert = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 5
  %.phi.trans.insert = bitcast [8 x i8]* %in_system_header_flag.phi.trans.insert to i64*
  %bf.load103.pre = load i64* %.phi.trans.insert, align 8
  br label %land.lhs.true101

land.lhs.true101:                                 ; preds = %land.lhs.true89.land.lhs.true101_crit_edge, %land.lhs.true80
  %bf.load103 = phi i64 [ %bf.load103.pre, %land.lhs.true89.land.lhs.true101_crit_edge ], [ %bf.load82, %land.lhs.true80 ]
  %bf.load119 = phi i32 [ %bf.load92, %land.lhs.true89.land.lhs.true101_crit_edge ], [ %bf.load77, %land.lhs.true80 ]
  %22 = and i64 %bf.load103, 65792
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %land.lhs.true116, label %if.end151

land.lhs.true116:                                 ; preds = %land.lhs.true101
  %24 = and i32 %bf.load119, 589824
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %land.lhs.true129, label %if.end151

land.lhs.true129:                                 ; preds = %land.lhs.true116
  %bf.clear133 = and i32 %bf.load119, 255
  %cmp134 = icmp eq i32 %bf.clear133, 30
  br i1 %cmp134, label %land.lhs.true142, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %land.lhs.true129
  %bf.cast140 = and i64 %bf.load103, 1024
  %tobool141 = icmp eq i64 %bf.cast140, 0
  br i1 %tobool141, label %land.lhs.true142, label %if.end151

land.lhs.true142:                                 ; preds = %lor.lhs.false135, %land.lhs.true129
  %name = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 8
  %26 = load %union.tree_node** %name, align 8, !tbaa !4
  %used_flag145 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 0, i32 2
  %27 = bitcast [4 x i8]* %used_flag145 to i32*
  %bf.load146 = load i32* %27, align 8
  %bf.clear148 = and i32 %bf.load146, 65536
  %tobool149 = icmp eq i32 %bf.clear148, 0
  br i1 %tobool149, label %if.then150, label %if.end151

if.then150:                                       ; preds = %land.lhs.true142
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([26 x i8]* @.str6, i64 0, i64 0)) #11
  br label %if.end151

if.end151:                                        ; preds = %land.lhs.true142, %lor.lhs.false135, %land.lhs.true116, %land.lhs.true101, %lor.lhs.false87, %if.then150, %land.lhs.true89
  tail call void @timevar_push(i32 43) #11
  %28 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !4
  %global_decl = getelementptr inbounds %struct.gcc_debug_hooks* %28, i64 0, i32 16
  %29 = load void (%union.tree_node*)** %global_decl, align 8, !tbaa !4
  tail call void %29(%union.tree_node* %0) #11
  tail call void @timevar_pop(i32 43) #11
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %len
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %if.end151, %entry
  ret void
}
