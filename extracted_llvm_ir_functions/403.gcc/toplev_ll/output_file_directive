define void @output_file_directive(%struct._IO_FILE* nocapture %asm_file, i8* %input_name) #0 {
entry:
  %call = tail call i64 @strlen(i8* %input_name) #12
  %sext = shl i64 %call, 32
  %idx.ext = ashr exact i64 %sext, 32
  %add.ptr = getelementptr inbounds i8* %input_name, i64 %idx.ext
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %na.0 = phi i8* [ %add.ptr, %entry ], [ %arrayidx, %while.body ]
  %cmp = icmp ugt i8* %na.0, %input_name
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds i8* %na.0, i64 -1
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp3 = icmp eq i8 %0, 47
  br i1 %cmp3, label %while.end, label %while.cond

while.end:                                        ; preds = %while.body, %while.cond
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %asm_file)
  tail call void @output_quoted_string(%struct._IO_FILE* %asm_file, i8* %na.0) #15
  %call6 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %asm_file) #11
  ret void
}
