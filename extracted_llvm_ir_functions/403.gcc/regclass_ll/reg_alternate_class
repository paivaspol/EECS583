define i32 @reg_alternate_class(i32 %regno) #3 {
entry:
  %0 = load %struct.reg_pref** @reg_pref, align 8, !tbaa !7
  %cmp = icmp eq %struct.reg_pref* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %regno to i64
  %altclass = getelementptr inbounds %struct.reg_pref* %0, i64 %idxprom, i32 1
  %1 = load i8* %altclass, align 1, !tbaa !1
  %conv = sext i8 %1 to i32
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 24, %entry ]
  ret i32 %retval.0
}
