define internal fastcc void @record_address_regs(%struct.rtx_def* nocapture %x, i32 %class, i32 %scale) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true126, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %land.lhs.true38, %sw.bb234, %lor.rhs201, %lor.lhs.false191, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %if.then176, %lor.rhs, %lor.lhs.false103, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.then88, %if.else, %if.else, %if.else, %if.end21, %if.then214, %if.else224, %if.then223, %sw.bb256, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %21, %sw.bb256 ], [ %arg1.0, %if.then223 ], [ %arg1.0, %if.else224 ], [ %arg1.0, %if.then214 ], [ %arg0.0, %if.end21 ], [ %arg0.0, %if.else ], [ %arg0.0, %if.else ], [ %arg0.0, %if.else ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %if.then88 ], [ %arg1.0, %lor.lhs.false103 ], [ %arg1.0, %lor.rhs ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %if.then176 ], [ %arg0.0, %lor.lhs.false191 ], [ %arg0.0, %lor.rhs201 ], [ %19, %sw.bb234 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg1.0, %land.lhs.true38 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ], [ %arg0.0, %land.lhs.true126 ]
  %class.tr = phi i32 [ %class, %entry ], [ %class.tr, %sw.bb256 ], [ 12, %if.then223 ], [ 10, %if.else224 ], [ 10, %if.then214 ], [ %class.tr, %if.end21 ], [ 10, %if.else ], [ 10, %if.else ], [ 10, %if.else ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %if.then88 ], [ 10, %lor.lhs.false103 ], [ 12, %lor.rhs ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %if.then176 ], [ 10, %lor.lhs.false191 ], [ 12, %lor.rhs201 ], [ 10, %sw.bb234 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true38 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ], [ 10, %land.lhs.true126 ]
  %scale.tr = phi i32 [ %scale, %entry ], [ %mul260, %sw.bb256 ], [ %scale.tr, %if.then223 ], [ %div, %if.else224 ], [ %scale.tr, %if.then214 ], [ %scale.tr, %if.end21 ], [ %scale.tr, %if.else ], [ %scale.tr, %if.else ], [ %scale.tr, %if.else ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %if.then88 ], [ %scale.tr, %lor.lhs.false103 ], [ %scale.tr, %lor.rhs ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %if.then176 ], [ %scale.tr, %lor.lhs.false191 ], [ %scale.tr, %lor.rhs201 ], [ %mul, %sw.bb234 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true38 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ], [ %scale.tr, %land.lhs.true126 ]
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x.tr}, i64 0, metadata !819), !dbg !1597
  tail call void @llvm.dbg.value(metadata !{i32 %class.tr}, i64 0, metadata !820), !dbg !1598
  tail call void @llvm.dbg.value(metadata !{i32 %scale.tr}, i64 0, metadata !821), !dbg !1599
  %0 = bitcast %struct.rtx_def* %x.tr to i32*, !dbg !1600
  %bf.load = load i32* %0, align 8, !dbg !1600
  %bf.clear = and i32 %bf.load, 65535, !dbg !1600
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !822), !dbg !1600
  switch i32 %bf.clear, label %sw.default [
    i32 54, label %sw.epilog
    i32 58, label %sw.epilog
    i32 69, label %sw.epilog
    i32 59, label %sw.epilog
    i32 68, label %sw.epilog
    i32 67, label %sw.epilog
    i32 75, label %sw.bb1
    i32 101, label %sw.bb234
    i32 100, label %sw.bb234
    i32 99, label %sw.bb256
    i32 97, label %sw.bb256
    i32 98, label %sw.bb256
    i32 96, label %sw.bb256
    i32 61, label %sw.bb261
  ], !dbg !1601

sw.bb1:                                           ; preds = %tailrecurse
  %fld = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, !dbg !1602
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !1602
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !1602, !tbaa !1154
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !823), !dbg !1602
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1, !dbg !1603
  %rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !1603
  %2 = load %struct.rtx_def** %rtx4, align 8, !dbg !1603, !tbaa !1154
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %2}, i64 0, metadata !826), !dbg !1603
  %3 = bitcast %struct.rtx_def* %1 to i32*, !dbg !1604
  %bf.load5 = load i32* %3, align 8, !dbg !1604
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !1604
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear6}, i64 0, metadata !827), !dbg !1604
  %4 = bitcast %struct.rtx_def* %2 to i32*, !dbg !1605
  %bf.load7 = load i32* %4, align 8, !dbg !1605
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !1605
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear8}, i64 0, metadata !828), !dbg !1605
  %cmp = icmp eq i32 %bf.clear6, 63, !dbg !1606
  br i1 %cmp, label %if.then, label %if.end, !dbg !1606

if.then:                                          ; preds = %sw.bb1
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0, !dbg !1607
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !1607
  %5 = load %struct.rtx_def** %rtx11, align 8, !dbg !1607, !tbaa !1154
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %5}, i64 0, metadata !823), !dbg !1607
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !1607
  %bf.load12 = load i32* %6, align 8, !dbg !1607
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !1607
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear13}, i64 0, metadata !827), !dbg !1607
  br label %if.end, !dbg !1607

if.end:                                           ; preds = %if.then, %sw.bb1
  %bf.load211 = phi i32 [ %bf.load12, %if.then ], [ %bf.load5, %sw.bb1 ]
  %code0.0 = phi i32 [ %bf.clear13, %if.then ], [ %bf.clear6, %sw.bb1 ]
  %arg0.0 = phi %struct.rtx_def* [ %5, %if.then ], [ %1, %sw.bb1 ]
  %cmp14 = icmp eq i32 %bf.clear8, 63, !dbg !1608
  br i1 %cmp14, label %if.then15, label %if.end21, !dbg !1608

if.then15:                                        ; preds = %if.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !1609
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !1609
  %7 = load %struct.rtx_def** %rtx18, align 8, !dbg !1609, !tbaa !1154
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %7}, i64 0, metadata !826), !dbg !1609
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !1609
  %bf.load19 = load i32* %8, align 8, !dbg !1609
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !1609
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear20}, i64 0, metadata !828), !dbg !1609
  br label %if.end21, !dbg !1609

if.end21:                                         ; preds = %if.then15, %if.end
  %bf.load218 = phi i32 [ %bf.load19, %if.then15 ], [ %bf.load7, %if.end ]
  %code1.0 = phi i32 [ %bf.clear20, %if.then15 ], [ %bf.clear8, %if.end ]
  %arg1.0 = phi %struct.rtx_def* [ %7, %if.then15 ], [ %2, %if.end ]
  %9 = and i32 %code1.0, 65534, !dbg !1610
  %10 = icmp eq i32 %9, 54, !dbg !1610
  br i1 %10, label %tailrecurse, label %if.else, !dbg !1610

if.else:                                          ; preds = %if.end21
  switch i32 %code1.0, label %if.else31 [
    i32 68, label %tailrecurse
    i32 67, label %tailrecurse
    i32 58, label %tailrecurse
  ], !dbg !1611

if.else31:                                        ; preds = %if.else
  %cmp32 = icmp eq i32 %code0.0, 61, !dbg !1612
  %cmp33 = icmp eq i32 %code1.0, 61, !dbg !1612
  %or.cond = and i1 %cmp32, %cmp33, !dbg !1612
  br i1 %or.cond, label %land.lhs.true34, label %if.else208, !dbg !1612

land.lhs.true34:                                  ; preds = %if.else31
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %arg0.0, i64 0, i32 1, i64 0, !dbg !1612
  %rtuint = bitcast %union.rtunion_def* %arrayidx36 to i32*, !dbg !1612
  %11 = load i32* %rtuint, align 4, !dbg !1612, !tbaa !959
  %cmp37 = icmp ult i32 %11, 53, !dbg !1612
  br i1 %cmp37, label %land.lhs.true38, label %land.lhs.true121, !dbg !1612

land.lhs.true38:                                  ; preds = %land.lhs.true34
  switch i32 %11, label %lor.lhs.false53 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ], !dbg !1612

lor.lhs.false53:                                  ; preds = %land.lhs.true38
  %.off439 = add i32 %11, -37, !dbg !1612
  %12 = icmp ult i32 %.off439, 8, !dbg !1612
  br i1 %12, label %if.then88, label %land.lhs.true121, !dbg !1612

if.then88:                                        ; preds = %lor.lhs.false53
  switch i32 %11, label %lor.lhs.false103 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ], !dbg !1613

lor.lhs.false103:                                 ; preds = %if.then88
  %.off438 = add i32 %11, -37, !dbg !1613
  %13 = icmp ult i32 %.off438, 8, !dbg !1613
  br i1 %13, label %tailrecurse, label %lor.rhs, !dbg !1613

lor.rhs:                                          ; preds = %lor.lhs.false103
  br label %tailrecurse, !dbg !1613

land.lhs.true121:                                 ; preds = %lor.lhs.false53, %land.lhs.true34
  %arrayidx123 = getelementptr inbounds %struct.rtx_def* %arg1.0, i64 0, i32 1, i64 0, !dbg !1614
  %rtuint124 = bitcast %union.rtunion_def* %arrayidx123 to i32*, !dbg !1614
  %14 = load i32* %rtuint124, align 4, !dbg !1614, !tbaa !959
  %cmp125 = icmp ult i32 %14, 53, !dbg !1614
  br i1 %cmp125, label %land.lhs.true126, label %if.else208, !dbg !1614

land.lhs.true126:                                 ; preds = %land.lhs.true121
  switch i32 %14, label %lor.lhs.false141 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ], !dbg !1614

lor.lhs.false141:                                 ; preds = %land.lhs.true126
  %.off437 = add i32 %14, -37, !dbg !1614
  %15 = icmp ult i32 %.off437, 8, !dbg !1614
  br i1 %15, label %if.then176, label %if.else208, !dbg !1614

if.then176:                                       ; preds = %lor.lhs.false141
  switch i32 %14, label %lor.lhs.false191 [
    i32 20, label %tailrecurse
    i32 16, label %tailrecurse
    i32 7, label %tailrecurse
    i32 6, label %tailrecurse
    i32 5, label %tailrecurse
    i32 4, label %tailrecurse
    i32 3, label %tailrecurse
    i32 2, label %tailrecurse
    i32 1, label %tailrecurse
    i32 0, label %tailrecurse
  ], !dbg !1615

lor.lhs.false191:                                 ; preds = %if.then176
  %.off = add i32 %14, -37, !dbg !1615
  %16 = icmp ult i32 %.off, 8, !dbg !1615
  br i1 %16, label %tailrecurse, label %lor.rhs201, !dbg !1615

lor.rhs201:                                       ; preds = %lor.lhs.false191
  br label %tailrecurse, !dbg !1615

if.else208:                                       ; preds = %lor.lhs.false141, %if.else31, %land.lhs.true121
  br i1 %cmp32, label %land.lhs.true210, label %lor.lhs.false212, !dbg !1616

land.lhs.true210:                                 ; preds = %if.else208
  %tobool = icmp slt i32 %bf.load211, 0, !dbg !1616
  %cmp213 = icmp eq i32 %code1.0, 78, !dbg !1616
  %or.cond432 = or i1 %tobool, %cmp213, !dbg !1616
  br i1 %or.cond432, label %if.then214, label %if.else215, !dbg !1616

lor.lhs.false212:                                 ; preds = %if.else208
  switch i32 %code1.0, label %lor.lhs.false221 [
    i32 78, label %if.then214
    i32 61, label %land.lhs.true217
  ], !dbg !1616

if.then214:                                       ; preds = %lor.lhs.false212, %land.lhs.true210
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 12, i32 %scale.tr) #7, !dbg !1617
  br label %tailrecurse, !dbg !1619

if.else215:                                       ; preds = %land.lhs.true210
  br i1 %cmp33, label %land.lhs.true217, label %lor.lhs.false221, !dbg !1620

land.lhs.true217:                                 ; preds = %lor.lhs.false212, %if.else215
  %tobool220 = icmp slt i32 %bf.load218, 0, !dbg !1620
  %cmp222 = icmp eq i32 %code0.0, 78, !dbg !1620
  %or.cond433 = or i1 %tobool220, %cmp222, !dbg !1620
  br i1 %or.cond433, label %if.then223, label %if.else224, !dbg !1620

lor.lhs.false221:                                 ; preds = %lor.lhs.false212, %if.else215
  %cmp222.old = icmp eq i32 %code0.0, 78, !dbg !1620
  br i1 %cmp222.old, label %if.then223, label %if.else224, !dbg !1620

if.then223:                                       ; preds = %lor.lhs.false221, %land.lhs.true217
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 10, i32 %scale.tr) #7, !dbg !1621
  br label %tailrecurse, !dbg !1623

if.else224:                                       ; preds = %land.lhs.true217, %lor.lhs.false221
  %div = sdiv i32 %scale.tr, 2, !dbg !1624
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 12, i32 %div) #7, !dbg !1624
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg0.0, i32 10, i32 %div) #7, !dbg !1626
  tail call fastcc void @record_address_regs(%struct.rtx_def* %arg1.0, i32 12, i32 %div) #7, !dbg !1627
  br label %tailrecurse, !dbg !1628

sw.bb234:                                         ; preds = %tailrecurse, %tailrecurse
  %fld235 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, !dbg !1629
  %rtx237 = bitcast [1 x %union.rtunion_def]* %fld235 to %struct.rtx_def**, !dbg !1629
  %17 = load %struct.rtx_def** %rtx237, align 8, !dbg !1629, !tbaa !1154
  %mul = shl nsw i32 %scale.tr, 1, !dbg !1629
  tail call fastcc void @record_address_regs(%struct.rtx_def* %17, i32 12, i32 %mul) #7, !dbg !1629
  %arrayidx239 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1, !dbg !1630
  %rtx240 = bitcast %union.rtunion_def* %arrayidx239 to %struct.rtx_def**, !dbg !1630
  %18 = load %struct.rtx_def** %rtx240, align 8, !dbg !1630, !tbaa !1154
  %arrayidx242 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 1, !dbg !1630
  %rtx243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtx_def**, !dbg !1630
  %19 = load %struct.rtx_def** %rtx243, align 8, !dbg !1630, !tbaa !1154
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !1630
  %bf.load244 = load i32* %20, align 8, !dbg !1630
  %bf.clear245 = and i32 %bf.load244, 65535, !dbg !1630
  %cmp246 = icmp eq i32 %bf.clear245, 61, !dbg !1630
  br i1 %cmp246, label %tailrecurse, label %sw.epilog, !dbg !1630

sw.bb256:                                         ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx258 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0, !dbg !1631
  %rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**, !dbg !1631
  %21 = load %struct.rtx_def** %rtx259, align 8, !dbg !1631, !tbaa !1154
  %mul260 = shl nsw i32 %scale.tr, 1, !dbg !1631
  br label %tailrecurse, !dbg !1631

sw.bb261:                                         ; preds = %tailrecurse
  %arrayidx263 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0, !dbg !1632
  %rtuint264 = bitcast %union.rtunion_def* %arrayidx263 to i32*, !dbg !1632
  %22 = load i32* %rtuint264, align 4, !dbg !1632, !tbaa !959
  %idxprom = zext i32 %22 to i64, !dbg !1632
  %23 = load %struct.costs** @costs, align 8, !dbg !1632, !tbaa !1154
  %24 = load i32* @target_flags, align 4, !dbg !1633, !tbaa !959
  %and = lshr i32 %24, 25, !dbg !1633
  %25 = and i32 %and, 1, !dbg !1633
  %26 = or i32 %25, 4, !dbg !1633
  %call = tail call i32 @ix86_memory_move_cost(i32 %26, i32 %class.tr, i32 1) #6, !dbg !1633
  %mul268 = mul nsw i32 %call, %scale.tr, !dbg !1633
  %div269 = sdiv i32 %mul268, 2, !dbg !1633
  %mem_cost = getelementptr inbounds %struct.costs* %23, i64 %idxprom, i32 1, !dbg !1633
  %27 = load i32* %mem_cost, align 4, !dbg !1633, !tbaa !959
  %add = add nsw i32 %27, %div269, !dbg !1633
  store i32 %add, i32* %mem_cost, align 4, !dbg !1633, !tbaa !959
  tail call void @llvm.dbg.value(metadata !316, i64 0, metadata !831), !dbg !1634
  %idxprom271 = sext i32 %class.tr to i64, !dbg !1636
  br label %for.body, !dbg !1634

for.body:                                         ; preds = %for.body, %sw.bb261
  %indvars.iv454 = phi i64 [ 0, %sw.bb261 ], [ %indvars.iv.next455, %for.body ]
  %28 = load i32* @target_flags, align 4, !dbg !1636, !tbaa !959
  %and273 = lshr i32 %28, 25, !dbg !1636
  %29 = and i32 %and273, 1, !dbg !1636
  %30 = or i32 %29, 4, !dbg !1636
  %idxprom276412 = zext i32 %30 to i64, !dbg !1636
  %arrayidx279 = getelementptr inbounds [59 x [25 x [25 x i32]]]* @may_move_in_cost, i64 0, i64 %idxprom276412, i64 %indvars.iv454, i64 %idxprom271, !dbg !1636
  %31 = load i32* %arrayidx279, align 4, !dbg !1636, !tbaa !959
  %mul280 = mul nsw i32 %31, %scale.tr, !dbg !1636
  %div281 = sdiv i32 %mul280, 2, !dbg !1636
  %arrayidx283 = getelementptr inbounds %struct.costs* %23, i64 %idxprom, i32 0, i64 %indvars.iv454, !dbg !1636
  %32 = load i32* %arrayidx283, align 4, !dbg !1636, !tbaa !959
  %add284 = add nsw i32 %32, %div281, !dbg !1636
  store i32 %add284, i32* %arrayidx283, align 4, !dbg !1636, !tbaa !959
  %indvars.iv.next455 = add i64 %indvars.iv454, 1, !dbg !1634
  %lftr.wideiv = trunc i64 %indvars.iv.next455 to i32, !dbg !1634
  %exitcond = icmp eq i32 %lftr.wideiv, 25, !dbg !1634
  br i1 %exitcond, label %sw.epilog, label %for.body, !dbg !1634

sw.default:                                       ; preds = %tailrecurse
  %idxprom285414 = zext i32 %bf.clear to i64, !dbg !1637
  %arrayidx286 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom285414, !dbg !1637
  %33 = load i8** %arrayidx286, align 8, !dbg !1637, !tbaa !1154
  tail call void @llvm.dbg.value(metadata !{i8* %33}, i64 0, metadata !832), !dbg !1637
  %arrayidx289 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom285414, !dbg !1638
  %34 = load i8* %arrayidx289, align 1, !dbg !1638, !tbaa !954
  %cmp291441 = icmp eq i8 %34, 0, !dbg !1638
  br i1 %cmp291441, label %sw.epilog, label %for.body293.lr.ph, !dbg !1638

for.body293.lr.ph:                                ; preds = %sw.default
  %35 = zext i8 %34 to i64
  br label %for.body293, !dbg !1638

for.body293:                                      ; preds = %for.body293.lr.ph, %for.cond290.backedge
  %indvars.iv = phi i64 [ %35, %for.body293.lr.ph ], [ %indvars.iv.next, %for.cond290.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !1638
  %arrayidx295 = getelementptr inbounds i8* %33, i64 %indvars.iv.next, !dbg !1640
  %36 = load i8* %arrayidx295, align 1, !dbg !1640, !tbaa !954
  %cmp297 = icmp eq i8 %36, 101, !dbg !1640
  br i1 %cmp297, label %if.then299, label %for.cond290.backedge, !dbg !1640

for.cond290.backedge:                             ; preds = %for.body293, %if.then299
  %37 = trunc i64 %indvars.iv.next to i32, !dbg !1638
  %cmp291 = icmp sgt i32 %37, 0, !dbg !1638
  br i1 %cmp291, label %for.body293, label %sw.epilog, !dbg !1638

if.then299:                                       ; preds = %for.body293
  %arrayidx302 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next, !dbg !1641
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**, !dbg !1641
  %38 = load %struct.rtx_def** %rtx303, align 8, !dbg !1641, !tbaa !1154
  tail call fastcc void @record_address_regs(%struct.rtx_def* %38, i32 %class.tr, i32 %scale.tr) #7, !dbg !1641
  br label %for.cond290.backedge, !dbg !1641

sw.epilog:                                        ; preds = %sw.bb234, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %for.body, %sw.default, %for.cond290.backedge
  ret void, !dbg !1642
}
