define i32 @memory_move_secondary_cost(i32 %mode, i32 %class, i32 %in) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !334), !dbg !1158
  tail call void @llvm.dbg.value(metadata !{i32 %class}, i64 0, metadata !335), !dbg !1159
  tail call void @llvm.dbg.value(metadata !{i32 %in}, i64 0, metadata !336), !dbg !1160
  tail call void @llvm.dbg.value(metadata !316, i64 0, metadata !338), !dbg !1161
  %tobool = icmp eq i32 %in, 0, !dbg !1162
  br i1 %tobool, label %if.else, label %return, !dbg !1162

if.else:                                          ; preds = %entry
  %class.off = add i32 %class, -11, !dbg !1163
  %0 = icmp ult i32 %class.off, 2, !dbg !1163
  %cmp3 = icmp eq i32 %class, 10, !dbg !1163
  %or.cond18 = or i1 %0, %cmp3, !dbg !1163
  br i1 %or.cond18, label %land.lhs.true, label %return, !dbg !1163

land.lhs.true:                                    ; preds = %if.else
  %1 = load i32* @target_flags, align 4, !dbg !1163, !tbaa !959
  %and = and i32 %1, 33554432, !dbg !1163
  %tobool4 = icmp eq i32 %and, 0, !dbg !1163
  br i1 %tobool4, label %if.end, label %return, !dbg !1163

if.end:                                           ; preds = %land.lhs.true
  %cmp5 = icmp eq i32 %mode, 2, !dbg !1163
  %phitmp = select i1 %cmp5, i32 8, i32 0
  br i1 %cmp5, label %if.end13, label %return, !dbg !1165

if.end13:                                         ; preds = %if.end
  %call12 = tail call i32 @ix86_register_move_cost(i32 2, i32 %class, i32 %phitmp) #6, !dbg !1166
  tail call void @llvm.dbg.value(metadata !{i32 %call12}, i64 0, metadata !338), !dbg !1166
  %cmp14 = icmp eq i32 %phitmp, %class, !dbg !1167
  br i1 %cmp14, label %return, label %if.end16, !dbg !1167

if.end16:                                         ; preds = %if.end13
  %call17 = tail call i32 @memory_move_secondary_cost(i32 2, i32 %phitmp, i32 0) #7, !dbg !1168
  %add = add nsw i32 %call17, %call12, !dbg !1168
  ret i32 %add, !dbg !1169

return:                                           ; preds = %entry, %if.end, %if.else, %land.lhs.true, %if.end13
  %retval.0 = phi i32 [ 0, %if.end ], [ %call12, %if.end13 ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %if.else ]
  ret i32 %retval.0, !dbg !1169
}
