define void @globalize_reg(i32 %i) #0 {
entry:
  %idxprom = sext i32 %i to i64
  %arrayidx = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %0, 0
  %.b = load i1* @no_global_reg_vars, align 1
  %or.cond = and i1 %cmp, %.b
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([55 x i8]* @.str6, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arrayidx3 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx3, align 1, !tbaa !1
  %tobool4 = icmp eq i8 %1, 0
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([48 x i8]* @.str7, i64 0, i64 0)) #5
  br label %return

if.end6:                                          ; preds = %if.end
  %arrayidx8 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %idxprom
  %2 = load i8* %arrayidx8, align 1, !tbaa !1
  %tobool10 = icmp eq i8 %2, 0
  br i1 %tobool10, label %if.end16, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %if.end6
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %tobool14 = icmp eq i8 %3, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %land.lhs.true11
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([58 x i8]* @.str8, i64 0, i64 0)) #5
  br label %if.end16

if.end16:                                         ; preds = %if.end6, %land.lhs.true11, %if.then15
  store i8 1, i8* %arrayidx3, align 1, !tbaa !1
  %4 = load i8* %arrayidx, align 1, !tbaa !1
  %tobool21 = icmp eq i8 %4, 0
  br i1 %tobool21, label %if.end23, label %return

if.end23:                                         ; preds = %if.end16
  %arrayidx25 = getelementptr inbounds [53 x i8]* @call_fixed_regs, i64 0, i64 %idxprom
  store i8 1, i8* %arrayidx25, align 1, !tbaa !1
  store i8 1, i8* %arrayidx8, align 1, !tbaa !1
  store i8 1, i8* %arrayidx, align 1, !tbaa !1
  %5 = load i32* @n_non_fixed_regs, align 4, !tbaa !3
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* @n_non_fixed_regs, align 4, !tbaa !3
  %sh_prom = zext i32 %i to i64
  %shl = shl i64 1, %sh_prom
  %6 = load i64* @fixed_reg_set, align 8, !tbaa !0
  %or = or i64 %6, %shl
  store i64 %or, i64* @fixed_reg_set, align 8, !tbaa !0
  %7 = load i64* @call_used_reg_set, align 8, !tbaa !0
  %or32 = or i64 %7, %shl
  store i64 %or32, i64* @call_used_reg_set, align 8, !tbaa !0
  %8 = load i64* @call_fixed_reg_set, align 8, !tbaa !0
  %or35 = or i64 %8, %shl
  store i64 %or35, i64* @call_fixed_reg_set, align 8, !tbaa !0
  %9 = load i64* @regs_invalidated_by_call, align 8, !tbaa !0
  %or38 = or i64 %9, %shl
  store i64 %or38, i64* @regs_invalidated_by_call, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end16, %if.end23, %if.then5
  ret void
}
