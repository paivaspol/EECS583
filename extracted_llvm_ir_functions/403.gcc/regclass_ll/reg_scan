define void @reg_scan(%struct.rtx_def* %f, i32 %nregs, i32 %repeat) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %f}, i64 0, metadata !640), !dbg !1502
  tail call void @llvm.dbg.value(metadata !{i32 %nregs}, i64 0, metadata !641), !dbg !1503
  tail call void @llvm.dbg.value(metadata !{i32 %repeat}, i64 0, metadata !642), !dbg !1504
  %conv = zext i32 %nregs to i64, !dbg !1505
  tail call void @allocate_reg_info(i64 %conv, i32 1, i32 0) #7, !dbg !1505
  store i32 3, i32* @max_parallel, align 4, !dbg !1506, !tbaa !959
  store i32 0, i32* @max_set_parallel, align 4, !dbg !1507, !tbaa !959
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %f}, i64 0, metadata !643), !dbg !1508
  %tobool58 = icmp eq %struct.rtx_def* %f, null, !dbg !1508
  br i1 %tobool58, label %for.end, label %for.body, !dbg !1508

for.body:                                         ; preds = %entry, %for.inc
  %insn.059 = phi %struct.rtx_def* [ %7, %for.inc ], [ %f, %entry ]
  %0 = bitcast %struct.rtx_def* %insn.059 to i32*, !dbg !1510
  %bf.load = load i32* %0, align 8, !dbg !1510
  %bf.clear = and i32 %bf.load, 65535, !dbg !1510
  %bf.clear.off = add i32 %bf.clear, -32, !dbg !1510
  %switch = icmp ult i32 %bf.clear.off, 3, !dbg !1510
  br i1 %switch, label %if.then, label %for.inc, !dbg !1510

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.059, i64 0, i32 1, i64 3, !dbg !1511
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1511
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !1511, !tbaa !1154
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !1511
  %bf.load11 = load i32* %2, align 8, !dbg !1511
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !1511
  %cmp13 = icmp eq i32 %bf.clear12, 39, !dbg !1511
  br i1 %cmp13, label %land.lhs.true, label %if.end, !dbg !1511

land.lhs.true:                                    ; preds = %if.then
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0, !dbg !1511
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**, !dbg !1511
  %3 = load %struct.rtvec_def** %rtvec, align 8, !dbg !1511, !tbaa !1154
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0, !dbg !1511
  %4 = load i32* %num_elem, align 4, !dbg !1511, !tbaa !959
  %5 = load i32* @max_parallel, align 4, !dbg !1511, !tbaa !959
  %cmp20 = icmp sgt i32 %4, %5, !dbg !1511
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !1511

if.then22:                                        ; preds = %land.lhs.true
  store i32 %4, i32* @max_parallel, align 4, !dbg !1513, !tbaa !959
  br label %if.end, !dbg !1513

if.end:                                           ; preds = %if.then22, %land.lhs.true, %if.then
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %1, %struct.rtx_def* %insn.059, i32 0, i32 0) #7, !dbg !1514
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %insn.059, i64 0, i32 1, i64 6, !dbg !1515
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !1515
  %6 = load %struct.rtx_def** %rtx35, align 8, !dbg !1515, !tbaa !1154
  %tobool36 = icmp eq %struct.rtx_def* %6, null, !dbg !1515
  br i1 %tobool36, label %for.inc, label %if.then37, !dbg !1515

if.then37:                                        ; preds = %if.end
  tail call fastcc void @reg_scan_mark_refs(%struct.rtx_def* %6, %struct.rtx_def* %insn.059, i32 1, i32 0) #7, !dbg !1516
  br label %for.inc, !dbg !1516

for.inc:                                          ; preds = %for.body, %if.end, %if.then37
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %insn.059, i64 0, i32 1, i64 2, !dbg !1508
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !1508
  %7 = load %struct.rtx_def** %rtx45, align 8, !dbg !1508, !tbaa !1154
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %7}, i64 0, metadata !643), !dbg !1508
  %tobool = icmp eq %struct.rtx_def* %7, null, !dbg !1508
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %for.body, !dbg !1508

for.cond.for.end_crit_edge:                       ; preds = %for.inc
  %.pre = load i32* @max_set_parallel, align 4, !dbg !1517, !tbaa !959
  %.pre61 = load i32* @max_parallel, align 4, !dbg !1517, !tbaa !959
  br label %for.end, !dbg !1508

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry
  %8 = phi i32 [ %.pre61, %for.cond.for.end_crit_edge ], [ 3, %entry ]
  %9 = phi i32 [ %.pre, %for.cond.for.end_crit_edge ], [ 0, %entry ]
  %add = add nsw i32 %8, %9, !dbg !1517
  store i32 %add, i32* @max_parallel, align 4, !dbg !1517, !tbaa !959
  ret void, !dbg !1518
}
