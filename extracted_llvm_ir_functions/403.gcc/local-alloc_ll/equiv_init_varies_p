define internal fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !819), !dbg !1692
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !1693
  %bf.load = load i32* %0, align 8, !dbg !1693
  %bf.clear = and i32 %bf.load, 65535, !dbg !1693
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !820), !dbg !1693
  switch i32 %bf.clear, label %sw.epilog [
    i32 66, label %sw.bb
    i32 71, label %return
    i32 58, label %sw.bb5
    i32 54, label %sw.bb5
    i32 55, label %sw.bb5
    i32 56, label %sw.bb5
    i32 68, label %sw.bb5
    i32 67, label %sw.bb5
    i32 61, label %sw.bb6
    i32 41, label %sw.bb13
  ], !dbg !1694

sw.bb:                                            ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 67108864, !dbg !1695
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !1695
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !1695

lor.rhs:                                          ; preds = %sw.bb
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, !dbg !1695
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1695
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !1695, !tbaa !936
  %call = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %1) #9, !dbg !1695
  %tobool3 = icmp ne i32 %call, 0, !dbg !1695
  br label %lor.end, !dbg !1695

lor.end:                                          ; preds = %sw.bb, %lor.rhs
  %2 = phi i1 [ true, %sw.bb ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32, !dbg !1695
  br label %return, !dbg !1695

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  br label %return, !dbg !1697

sw.bb6:                                           ; preds = %entry
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, !dbg !1698
  %rtuint = bitcast %union.rtunion_def* %arrayidx8 to i32*, !dbg !1698
  %3 = load i32* %rtuint, align 4, !dbg !1698, !tbaa !933
  %idxprom = zext i32 %3 to i64, !dbg !1698
  %4 = load %struct.equivalence** @reg_equiv, align 8, !dbg !1698, !tbaa !936
  %replace = getelementptr inbounds %struct.equivalence* %4, i64 %idxprom, i32 0, !dbg !1698
  %5 = load i8* %replace, align 1, !dbg !1698, !tbaa !934
  %cmp = icmp eq i8 %5, 0, !dbg !1698
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1698

land.rhs:                                         ; preds = %sw.bb6
  %call11 = tail call i32 @rtx_varies_p(%struct.rtx_def* %x, i32 0) #7, !dbg !1698
  %tobool12 = icmp ne i32 %call11, 0, !dbg !1698
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb6
  %6 = phi i1 [ false, %sw.bb6 ], [ %tobool12, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  br label %return

sw.bb13:                                          ; preds = %entry
  %bf.clear16 = and i32 %bf.load, 134217728, !dbg !1699
  %tobool17 = icmp eq i32 %bf.clear16, 0, !dbg !1699
  br i1 %tobool17, label %sw.epilog, label %return, !dbg !1699

sw.epilog:                                        ; preds = %sw.bb13, %entry
  %idxprom1884 = zext i32 %bf.clear to i64, !dbg !1700
  %arrayidx19 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom1884, !dbg !1700
  %7 = load i8** %arrayidx19, align 8, !dbg !1700, !tbaa !936
  tail call void @llvm.dbg.value(metadata !{i8* %7}, i64 0, metadata !822), !dbg !1700
  %arrayidx21 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom1884, !dbg !1701
  %8 = load i8* %arrayidx21, align 1, !dbg !1701, !tbaa !934
  %cmp2390 = icmp eq i8 %8, 0, !dbg !1701
  br i1 %cmp2390, label %return, label %for.body.lr.ph, !dbg !1701

for.body.lr.ph:                                   ; preds = %sw.epilog
  %9 = zext i8 %8 to i64
  br label %for.body, !dbg !1701

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv92 = phi i64 [ %9, %for.body.lr.ph ], [ %indvars.iv.next93, %for.cond.backedge ]
  %indvars.iv.next93 = add i64 %indvars.iv92, -1, !dbg !1701
  %arrayidx26 = getelementptr inbounds i8* %7, i64 %indvars.iv.next93, !dbg !1702
  %10 = load i8* %arrayidx26, align 1, !dbg !1702, !tbaa !934
  switch i8 %10, label %for.cond.backedge [
    i8 101, label %if.then30
    i8 69, label %for.cond45.preheader
  ], !dbg !1702

for.cond.backedge:                                ; preds = %for.cond45.preheader, %for.cond45, %for.body, %if.then30
  %11 = trunc i64 %indvars.iv.next93 to i32, !dbg !1701
  %cmp23 = icmp sgt i32 %11, 0, !dbg !1701
  br i1 %cmp23, label %for.body, label %return, !dbg !1701

for.cond45.preheader:                             ; preds = %for.body
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next93, !dbg !1703
  %rtvec = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtvec_def**, !dbg !1703
  %12 = load %struct.rtvec_def** %rtvec, align 8, !dbg !1703, !tbaa !936
  %num_elem85 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0, !dbg !1703
  %13 = load i32* %num_elem85, align 4, !dbg !1703, !tbaa !933
  %cmp4986 = icmp sgt i32 %13, 0, !dbg !1703
  br i1 %cmp4986, label %for.body51, label %for.cond.backedge, !dbg !1703

if.then30:                                        ; preds = %for.body
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next93, !dbg !1705
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !1705
  %14 = load %struct.rtx_def** %rtx34, align 8, !dbg !1705, !tbaa !936
  %call35 = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %14) #9, !dbg !1705
  %tobool36 = icmp eq i32 %call35, 0, !dbg !1705
  br i1 %tobool36, label %for.cond.backedge, label %return, !dbg !1705

for.cond45:                                       ; preds = %for.body51
  %15 = load %struct.rtvec_def** %rtvec, align 8, !dbg !1703, !tbaa !936
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0, !dbg !1703
  %16 = load i32* %num_elem, align 4, !dbg !1703, !tbaa !933
  %17 = trunc i64 %indvars.iv.next to i32, !dbg !1703
  %cmp49 = icmp slt i32 %17, %16, !dbg !1703
  br i1 %cmp49, label %for.body51, label %for.cond.backedge, !dbg !1703

for.body51:                                       ; preds = %for.cond45.preheader, %for.cond45
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond45 ], [ 0, %for.cond45.preheader ]
  %18 = phi %struct.rtvec_def* [ %15, %for.cond45 ], [ %12, %for.cond45.preheader ]
  %arrayidx57 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 1, i64 %indvars.iv, !dbg !1707
  %19 = load %struct.rtx_def** %arrayidx57, align 8, !dbg !1707, !tbaa !936
  %call58 = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %19) #9, !dbg !1707
  %tobool59 = icmp eq i32 %call58, 0, !dbg !1707
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1703
  br i1 %tobool59, label %for.cond45, label %return, !dbg !1707

return:                                           ; preds = %sw.epilog, %if.then30, %for.cond.backedge, %for.body51, %sw.bb13, %entry, %land.end, %sw.bb5, %lor.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %sw.bb5 ], [ %lor.ext, %lor.end ], [ 1, %entry ], [ 1, %sw.bb13 ], [ 1, %for.body51 ], [ 0, %sw.epilog ], [ 1, %if.then30 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0, !dbg !1708
}
