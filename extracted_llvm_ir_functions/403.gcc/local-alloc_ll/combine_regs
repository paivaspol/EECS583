define internal fastcc i32 @combine_regs(%struct.rtx_def* %usedreg, %struct.rtx_def* %setreg, i32 %may_save_copy, i32 %insn_number, %struct.rtx_def* %insn, i32 %already_dead) #0 {
entry:
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %entry
  %may_save_copy.addr.0.ph = phi i32 [ %may_save_copy, %entry ], [ %.may_save_copy.addr.0, %while.cond.outer.backedge ]
  %offset.0.ph = phi i32 [ 0, %entry ], [ %offset.0.ph.be, %while.cond.outer.backedge ]
  %usedreg.addr.0.ph = phi %struct.rtx_def* [ %usedreg, %entry ], [ %1, %while.cond.outer.backedge ]
  %.phi.trans.insert = bitcast %struct.rtx_def* %usedreg.addr.0.ph to i32*
  %bf.load.pre = load i32* %.phi.trans.insert, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %while.body
  %bf.load = phi i32 [ %bf.load1, %while.body ], [ %bf.load.pre, %while.cond.outer ]
  %usedreg.addr.0 = phi %struct.rtx_def* [ %1, %while.body ], [ %usedreg.addr.0.ph, %while.cond.outer ]
  %0 = bitcast %struct.rtx_def* %usedreg.addr.0 to i32*
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 63, label %while.body
    i32 61, label %if.end41
  ]

while.body:                                       ; preds = %while.cond
  %fld = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load1 = load i32* %2, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.then, label %while.cond

if.then:                                          ; preds = %while.body
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear5 = and i32 %bf.lshr, 255
  %idxprom829 = zext i32 %bf.clear5 to i64
  %arrayidx6 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom829
  %3 = load i8* %arrayidx6, align 1, !tbaa !1
  %conv = zext i8 %3 to i32
  %4 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %4, 23
  %5 = and i32 %and, 4
  %6 = add i32 %5, 4
  %cmp7 = icmp ugt i32 %conv, %6
  %.may_save_copy.addr.0 = select i1 %cmp7, i32 0, i32 %may_save_copy.addr.0.ph
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %7 = load i32* %rtuint, align 4, !tbaa !0
  %cmp12 = icmp ult i32 %7, 53
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0, i64 0, i32 1, i64 1
  %rtuint23 = bitcast %union.rtunion_def* %arrayidx22 to i32*
  %8 = load i32* %rtuint23, align 4, !tbaa !0
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then
  %bf.lshr25 = lshr i32 %bf.load, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  %call = tail call i32 @subreg_regno_offset(i32 %7, i32 %bf.clear5, i32 %8, i32 %bf.clear26) #6
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.then14, %if.else
  %call.pn = phi i32 [ %call, %if.then14 ], [ %div, %if.else ]
  %offset.0.ph.be = add i32 %call.pn, %offset.0.ph
  br label %while.cond.outer

if.else:                                          ; preds = %if.then
  %div = udiv i32 %8, %6
  br label %while.cond.outer.backedge

if.end41:                                         ; preds = %while.cond
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0, i64 0, i32 1, i64 0
  %rtuint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %9 = load i32* %rtuint44, align 4, !tbaa !0
  %cmp45 = icmp slt i32 %9, 53
  br i1 %cmp45, label %if.then47, label %if.else123

if.then47:                                        ; preds = %if.end41
  %.off822 = add i32 %9, -8
  %10 = icmp ult i32 %.off822, 8
  %.off823 = add i32 %9, -21
  %11 = icmp ult i32 %.off823, 8
  %or.cond = or i1 %10, %11
  %.off824 = add i32 %9, -45
  %12 = icmp ult i32 %.off824, 8
  %or.cond832 = or i1 %or.cond, %12
  %.off825 = add i32 %9, -29
  %13 = icmp ult i32 %.off825, 8
  %or.cond834 = or i1 %or.cond832, %13
  %bf.lshr70 = lshr i32 %bf.load, 16
  %bf.clear71 = and i32 %bf.lshr70, 255
  br i1 %or.cond834, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then47
  %idxprom72827 = zext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom72827
  %14 = load i32* %arrayidx73, align 4, !tbaa !8
  %cmp74 = icmp eq i32 %14, 5
  br i1 %cmp74, label %while.cond140.preheader, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp81 = icmp eq i32 %14, 6
  %phitmp828 = select i1 %cmp81, i32 2, i32 1
  br label %while.cond140.preheader

cond.false:                                       ; preds = %if.then47
  switch i32 %bf.clear71, label %cond.false103 [
    i32 18, label %cond.true89
    i32 24, label %cond.true99
  ]

cond.true89:                                      ; preds = %cond.false
  %15 = load i32* @target_flags, align 4, !tbaa !0
  %and90 = lshr i32 %15, 25
  %16 = and i32 %and90, 1
  %17 = xor i32 %16, 3
  br label %while.cond140.preheader

cond.true99:                                      ; preds = %cond.false
  %18 = load i32* @target_flags, align 4, !tbaa !0
  %and100 = lshr i32 %18, 24
  %19 = and i32 %and100, 2
  %20 = xor i32 %19, 6
  br label %while.cond140.preheader

cond.false103:                                    ; preds = %cond.false
  %idxprom107826 = zext i32 %bf.clear71 to i64
  %arrayidx108 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom107826
  %21 = load i8* %arrayidx108, align 1, !tbaa !1
  %conv109 = zext i8 %21 to i32
  %22 = load i32* @target_flags, align 4, !tbaa !0
  %and110 = lshr i32 %22, 23
  %23 = and i32 %and110, 4
  %24 = add i32 %23, 4
  %add113 = add i32 %conv109, -1
  %sub = add i32 %add113, %24
  %div117 = sdiv i32 %sub, %24
  br label %while.cond140.preheader

if.else123:                                       ; preds = %if.end41
  %bf.lshr125 = lshr i32 %bf.load, 16
  %bf.clear126 = and i32 %bf.lshr125, 255
  %idxprom127810 = zext i32 %bf.clear126 to i64
  %arrayidx128 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom127810
  %25 = load i8* %arrayidx128, align 1, !tbaa !1
  %conv129 = zext i8 %25 to i32
  %26 = load i32* @target_flags, align 4, !tbaa !0
  %and130 = lshr i32 %26, 23
  %27 = and i32 %and130, 4
  %28 = add i32 %27, 4
  %sub133811 = or i32 %27, 3
  %add134 = add nsw i32 %sub133811, %conv129
  %div138 = sdiv i32 %add134, %28
  br label %while.cond140.preheader

while.cond140.preheader:                          ; preds = %if.else123, %cond.true, %lor.rhs, %cond.true89, %cond.false103, %cond.true99
  %usize.0.ph = phi i32 [ %20, %cond.true99 ], [ %div117, %cond.false103 ], [ %17, %cond.true89 ], [ %phitmp828, %lor.rhs ], [ 2, %cond.true ], [ %div138, %if.else123 ]
  br label %while.cond140.outer

while.cond140.outer:                              ; preds = %while.cond140.outer.backedge, %while.cond140.preheader
  %may_save_copy.addr.3.ph = phi i32 [ %may_save_copy.addr.0.ph, %while.cond140.preheader ], [ %.may_save_copy.addr.3, %while.cond140.outer.backedge ]
  %offset.2.ph = phi i32 [ %offset.0.ph, %while.cond140.preheader ], [ %offset.2.ph.be, %while.cond140.outer.backedge ]
  %setreg.addr.0.ph = phi %struct.rtx_def* [ %setreg, %while.cond140.preheader ], [ %30, %while.cond140.outer.backedge ]
  %.phi.trans.insert890 = bitcast %struct.rtx_def* %setreg.addr.0.ph to i32*
  %bf.load141.pre = load i32* %.phi.trans.insert890, align 8
  br label %while.cond140

while.cond140:                                    ; preds = %while.cond140.outer, %while.body145
  %bf.load141 = phi i32 [ %bf.load150, %while.body145 ], [ %bf.load141.pre, %while.cond140.outer ]
  %setreg.addr.0 = phi %struct.rtx_def* [ %30, %while.body145 ], [ %setreg.addr.0.ph, %while.cond140.outer ]
  %29 = bitcast %struct.rtx_def* %setreg.addr.0 to i32*
  %bf.clear142 = and i32 %bf.load141, 65535
  switch i32 %bf.clear142, label %return [
    i32 63, label %while.body145
    i32 61, label %if.end205
  ]

while.body145:                                    ; preds = %while.cond140
  %fld147 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0, i64 0, i32 1
  %rtx149 = bitcast [1 x %union.rtunion_def]* %fld147 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx149, align 8, !tbaa !3
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load150 = load i32* %31, align 8
  %bf.clear151 = and i32 %bf.load150, 65535
  %cmp152 = icmp eq i32 %bf.clear151, 61
  br i1 %cmp152, label %if.then154, label %while.cond140

if.then154:                                       ; preds = %while.body145
  %bf.lshr156 = lshr i32 %bf.load150, 16
  %bf.clear157 = and i32 %bf.lshr156, 255
  %idxprom158821 = zext i32 %bf.clear157 to i64
  %arrayidx159 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom158821
  %32 = load i8* %arrayidx159, align 1, !tbaa !1
  %conv160 = zext i8 %32 to i32
  %33 = load i32* @target_flags, align 4, !tbaa !0
  %and161 = lshr i32 %33, 23
  %34 = and i32 %and161, 4
  %35 = add i32 %34, 4
  %cmp164 = icmp ugt i32 %conv160, %35
  %.may_save_copy.addr.3 = select i1 %cmp164, i32 0, i32 %may_save_copy.addr.3.ph
  %arrayidx169 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0
  %rtuint170 = bitcast %union.rtunion_def* %arrayidx169 to i32*
  %36 = load i32* %rtuint170, align 4, !tbaa !0
  %cmp171 = icmp ult i32 %36, 53
  %arrayidx181 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0, i64 0, i32 1, i64 1
  %rtuint182 = bitcast %union.rtunion_def* %arrayidx181 to i32*
  %37 = load i32* %rtuint182, align 4, !tbaa !0
  br i1 %cmp171, label %if.then173, label %if.else188

if.then173:                                       ; preds = %if.then154
  %bf.lshr184 = lshr i32 %bf.load141, 16
  %bf.clear185 = and i32 %bf.lshr184, 255
  %call186 = tail call i32 @subreg_regno_offset(i32 %36, i32 %bf.clear157, i32 %37, i32 %bf.clear185) #6
  br label %while.cond140.outer.backedge

while.cond140.outer.backedge:                     ; preds = %if.then173, %if.else188
  %call186.pn = phi i32 [ %call186, %if.then173 ], [ %div195, %if.else188 ]
  %offset.2.ph.be = sub i32 %offset.2.ph, %call186.pn
  br label %while.cond140.outer

if.else188:                                       ; preds = %if.then154
  %div195 = udiv i32 %37, %35
  br label %while.cond140.outer.backedge

if.end205:                                        ; preds = %while.cond140
  %arrayidx207 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0, i64 0, i32 1, i64 0
  %rtuint208 = bitcast %union.rtunion_def* %arrayidx207 to i32*
  %38 = load i32* %rtuint208, align 4, !tbaa !0
  %cmp209 = icmp slt i32 %38, 53
  br i1 %cmp209, label %if.then211, label %if.else295

if.then211:                                       ; preds = %if.end205
  %.off = add i32 %38, -8
  %39 = icmp ult i32 %.off, 8
  %.off816 = add i32 %38, -21
  %40 = icmp ult i32 %.off816, 8
  %or.cond836 = or i1 %39, %40
  %.off817 = add i32 %38, -45
  %41 = icmp ult i32 %.off817, 8
  %or.cond838 = or i1 %or.cond836, %41
  %.off818 = add i32 %38, -29
  %42 = icmp ult i32 %.off818, 8
  %or.cond840 = or i1 %or.cond838, %42
  %bf.lshr237 = lshr i32 %bf.load141, 16
  %bf.clear238 = and i32 %bf.lshr237, 255
  br i1 %or.cond840, label %cond.true235, label %cond.false253

cond.true235:                                     ; preds = %if.then211
  %idxprom239820 = zext i32 %bf.clear238 to i64
  %arrayidx240 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom239820
  %43 = load i32* %arrayidx240, align 4, !tbaa !8
  %cmp241 = icmp eq i32 %43, 5
  br i1 %cmp241, label %if.end311, label %lor.rhs243

lor.rhs243:                                       ; preds = %cond.true235
  %cmp249 = icmp eq i32 %43, 6
  %phitmp = select i1 %cmp249, i32 2, i32 1
  br label %if.end311

cond.false253:                                    ; preds = %if.then211
  switch i32 %bf.clear238, label %cond.false273 [
    i32 18, label %cond.true259
    i32 24, label %cond.true269
  ]

cond.true259:                                     ; preds = %cond.false253
  %44 = load i32* @target_flags, align 4, !tbaa !0
  %and260 = lshr i32 %44, 25
  %45 = and i32 %and260, 1
  %46 = xor i32 %45, 3
  br label %if.end311

cond.true269:                                     ; preds = %cond.false253
  %47 = load i32* @target_flags, align 4, !tbaa !0
  %and270 = lshr i32 %47, 24
  %48 = and i32 %and270, 2
  %49 = xor i32 %48, 6
  br label %if.end311

cond.false273:                                    ; preds = %cond.false253
  %idxprom277819 = zext i32 %bf.clear238 to i64
  %arrayidx278 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom277819
  %50 = load i8* %arrayidx278, align 1, !tbaa !1
  %conv279 = zext i8 %50 to i32
  %51 = load i32* @target_flags, align 4, !tbaa !0
  %and280 = lshr i32 %51, 23
  %52 = and i32 %and280, 4
  %53 = add i32 %52, 4
  %add283 = add i32 %conv279, -1
  %sub284 = add i32 %add283, %53
  %div288 = sdiv i32 %sub284, %53
  br label %if.end311

if.else295:                                       ; preds = %if.end205
  %bf.lshr297 = lshr i32 %bf.load141, 16
  %bf.clear298 = and i32 %bf.lshr297, 255
  %idxprom299812 = zext i32 %bf.clear298 to i64
  %arrayidx300 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom299812
  %54 = load i8* %arrayidx300, align 1, !tbaa !1
  %conv301 = zext i8 %54 to i32
  %55 = load i32* @target_flags, align 4, !tbaa !0
  %and302 = lshr i32 %55, 23
  %56 = and i32 %and302, 4
  %57 = add i32 %56, 4
  %sub305813 = or i32 %56, 3
  %add306 = add nsw i32 %sub305813, %conv301
  %div310 = sdiv i32 %add306, %57
  br label %if.end311

if.end311:                                        ; preds = %cond.true269, %cond.false273, %cond.true259, %lor.rhs243, %cond.true235, %if.else295
  %ssize.0 = phi i32 [ %div310, %if.else295 ], [ %46, %cond.true259 ], [ %49, %cond.true269 ], [ %div288, %cond.false273 ], [ 2, %cond.true235 ], [ %phitmp, %lor.rhs243 ]
  %cmp312 = icmp sgt i32 %9, 52
  br i1 %cmp312, label %land.lhs.true314, label %lor.lhs.false319

land.lhs.true314:                                 ; preds = %if.end311
  %idxprom315 = sext i32 %9 to i64
  %58 = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx316 = getelementptr inbounds i32* %58, i64 %idxprom315
  %59 = load i32* %arrayidx316, align 4, !tbaa !0
  %cmp317 = icmp slt i32 %59, 0
  br i1 %cmp317, label %return, label %lor.lhs.false319

lor.lhs.false319:                                 ; preds = %land.lhs.true314, %if.end311
  %cmp320 = icmp sgt i32 %offset.2.ph, 0
  br i1 %cmp320, label %land.lhs.true322, label %lor.lhs.false326

land.lhs.true322:                                 ; preds = %lor.lhs.false319
  %add323 = add nsw i32 %usize.0.ph, %offset.2.ph
  %cmp324 = icmp sgt i32 %add323, %ssize.0
  br i1 %cmp324, label %return, label %lor.lhs.false326

lor.lhs.false326:                                 ; preds = %land.lhs.true322, %lor.lhs.false319
  %cmp327 = icmp slt i32 %offset.2.ph, 0
  br i1 %cmp327, label %land.lhs.true329, label %lor.lhs.false333

land.lhs.true329:                                 ; preds = %lor.lhs.false326
  %add330 = add nsw i32 %usize.0.ph, %offset.2.ph
  %cmp331 = icmp slt i32 %add330, %ssize.0
  br i1 %cmp331, label %return, label %lor.lhs.false333

lor.lhs.false333:                                 ; preds = %land.lhs.true329, %lor.lhs.false326
  %cmp334 = icmp sgt i32 %ssize.0, %usize.0.ph
  %brmerge.demorgan = and i1 %cmp334, %cmp312
  br i1 %brmerge.demorgan, label %land.lhs.true339, label %lor.lhs.false346

land.lhs.true339:                                 ; preds = %lor.lhs.false333
  %idxprom340 = sext i32 %9 to i64
  %60 = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx341 = getelementptr inbounds i32* %60, i64 %idxprom340
  %61 = load i32* %arrayidx341, align 4, !tbaa !0
  %idxprom342 = sext i32 %61 to i64
  %62 = load %struct.qty** @qty, align 8, !tbaa !3
  %size = getelementptr inbounds %struct.qty* %62, i64 %idxprom342, i32 4
  %63 = load i32* %size, align 4, !tbaa !0
  %cmp344 = icmp slt i32 %usize.0.ph, %63
  br i1 %cmp344, label %return, label %lor.lhs.false346

lor.lhs.false346:                                 ; preds = %lor.lhs.false333, %land.lhs.true339
  %cmp347 = icmp sgt i32 %38, 52
  br i1 %cmp347, label %land.lhs.true349, label %lor.lhs.false354

land.lhs.true349:                                 ; preds = %lor.lhs.false346
  %idxprom350 = sext i32 %38 to i64
  %64 = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx351 = getelementptr inbounds i32* %64, i64 %idxprom350
  %65 = load i32* %arrayidx351, align 4, !tbaa !0
  %cmp352 = icmp eq i32 %65, -1
  br i1 %cmp352, label %return, label %lor.lhs.false354

lor.lhs.false354:                                 ; preds = %land.lhs.true349, %lor.lhs.false346
  br i1 %cmp312, label %land.lhs.true357, label %lor.lhs.false360

land.lhs.true357:                                 ; preds = %lor.lhs.false354
  %call358 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 9, %struct.rtx_def* %usedreg.addr.0) #6
  %tobool359 = icmp ne %struct.rtx_def* %call358, null
  %cmp361 = icmp eq i32 %9, %38
  %or.cond841 = or i1 %tobool359, %cmp361
  %brmerge842.demorgan = and i1 %cmp45, %cmp209
  %or.cond846 = or i1 %or.cond841, %brmerge842.demorgan
  br i1 %or.cond846, label %return, label %land.lhs.true357.lor.lhs.false369_crit_edge

land.lhs.true357.lor.lhs.false369_crit_edge:      ; preds = %land.lhs.true357
  %bf.load373.pre = load i32* %29, align 8
  br label %lor.lhs.false369

lor.lhs.false360:                                 ; preds = %lor.lhs.false354
  %cmp361.old = icmp eq i32 %9, %38
  %brmerge842.demorgan.old = and i1 %cmp45, %cmp209
  %or.cond847 = or i1 %cmp361.old, %brmerge842.demorgan.old
  br i1 %or.cond847, label %return, label %lor.lhs.false369

lor.lhs.false369:                                 ; preds = %lor.lhs.false360, %land.lhs.true357.lor.lhs.false369_crit_edge
  %bf.load373 = phi i32 [ %bf.load373.pre, %land.lhs.true357.lor.lhs.false369_crit_edge ], [ %bf.load141, %lor.lhs.false360 ]
  %bf.load370 = load i32* %0, align 8
  %bf.lshr371 = lshr i32 %bf.load370, 16
  %bf.clear372 = and i32 %bf.lshr371, 255
  %bf.lshr374 = lshr i32 %bf.load373, 16
  %bf.clear375 = and i32 %bf.lshr374, 255
  %cmp376 = icmp eq i32 %bf.clear372, %bf.clear375
  br i1 %cmp376, label %if.end446, label %lor.lhs.false378

lor.lhs.false378:                                 ; preds = %lor.lhs.false369
  switch i32 %bf.clear372, label %lor.lhs.false402 [
    i32 3, label %land.lhs.true411
    i32 4, label %land.lhs.true411
    i32 2, label %land.lhs.true396
  ]

land.lhs.true396:                                 ; preds = %lor.lhs.false378
  %66 = load i32* @target_flags, align 4, !tbaa !0
  %and397 = and i32 %66, 33554432
  %tobool398 = icmp eq i32 %and397, 0
  br i1 %tobool398, label %lor.lhs.false399, label %land.lhs.true411

lor.lhs.false399:                                 ; preds = %land.lhs.true396
  %67 = load i32* @x86_partial_reg_stall, align 4, !tbaa !0
  %68 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl = shl i32 1, %68
  %and400 = and i32 %shl, %67
  %tobool401 = icmp eq i32 %and400, 0
  br i1 %tobool401, label %land.lhs.true411, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %lor.lhs.false378, %lor.lhs.false399
  %bf.clear405 = and i32 %bf.load370, 16711680
  %cmp406 = icmp eq i32 %bf.clear405, 327680
  br i1 %cmp406, label %land.lhs.true408, label %return

land.lhs.true408:                                 ; preds = %lor.lhs.false402
  %69 = load i32* @target_flags, align 4, !tbaa !0
  %and409 = and i32 %69, 33554432
  %tobool410 = icmp eq i32 %and409, 0
  br i1 %tobool410, label %return, label %land.lhs.true411

land.lhs.true411:                                 ; preds = %lor.lhs.false378, %lor.lhs.false378, %lor.lhs.false399, %land.lhs.true396, %land.lhs.true408
  %bf.clear414.off = add i32 %bf.clear375, -3
  %switch = icmp ult i32 %bf.clear414.off, 2
  br i1 %switch, label %if.end446, label %lor.lhs.false423

lor.lhs.false423:                                 ; preds = %land.lhs.true411
  %bf.clear426 = and i32 %bf.load370, 16711680
  %cmp427 = icmp eq i32 %bf.clear426, 131072
  br i1 %cmp427, label %land.lhs.true429, label %lor.lhs.false436

land.lhs.true429:                                 ; preds = %lor.lhs.false423
  %70 = load i32* @target_flags, align 4, !tbaa !0
  %and430 = and i32 %70, 33554432
  %tobool431 = icmp eq i32 %and430, 0
  br i1 %tobool431, label %lor.lhs.false432, label %if.end446

lor.lhs.false432:                                 ; preds = %land.lhs.true429
  %71 = load i32* @x86_partial_reg_stall, align 4, !tbaa !0
  %72 = load i32* @ix86_cpu, align 4, !tbaa !9
  %shl433 = shl i32 1, %72
  %and434 = and i32 %shl433, %71
  %tobool435 = icmp eq i32 %and434, 0
  br i1 %tobool435, label %if.end446, label %lor.lhs.false436

lor.lhs.false436:                                 ; preds = %lor.lhs.false432, %lor.lhs.false423
  %bf.clear439 = and i32 %bf.load373, 16711680
  %cmp440 = icmp eq i32 %bf.clear439, 327680
  br i1 %cmp440, label %land.lhs.true442, label %return

land.lhs.true442:                                 ; preds = %lor.lhs.false436
  %73 = load i32* @target_flags, align 4, !tbaa !0
  %and443 = and i32 %73, 33554432
  %tobool444 = icmp eq i32 %and443, 0
  br i1 %tobool444, label %return, label %if.end446

if.end446:                                        ; preds = %land.lhs.true411, %lor.lhs.false432, %land.lhs.true429, %land.lhs.true442, %lor.lhs.false369
  br i1 %cmp45, label %if.then449, label %if.end506

if.then449:                                       ; preds = %if.end446
  %idxprom450 = sext i32 %38 to i64
  %74 = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx451 = getelementptr inbounds i32* %74, i64 %idxprom450
  %75 = load i32* %arrayidx451, align 4, !tbaa !0
  %cmp452 = icmp eq i32 %75, -2
  br i1 %cmp452, label %if.then454, label %if.end455

if.then454:                                       ; preds = %if.then449
  %mul = shl nsw i32 %insn_number, 1
  tail call fastcc void @reg_is_born(%struct.rtx_def* %setreg.addr.0, i32 %mul) #8
  %.pre = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx457.phi.trans.insert = getelementptr inbounds i32* %.pre, i64 %idxprom450
  %.pre892 = load i32* %arrayidx457.phi.trans.insert, align 4, !tbaa !0
  br label %if.end455

if.end455:                                        ; preds = %if.then454, %if.then449
  %76 = phi i32 [ %.pre892, %if.then454 ], [ %75, %if.then449 ]
  %cmp458 = icmp sgt i32 %76, -1
  br i1 %cmp458, label %if.then460, label %return

if.then460:                                       ; preds = %if.end455
  %tobool461 = icmp eq i32 %may_save_copy.addr.3.ph, 0
  %idxprom484.pre = sext i32 %76 to i64
  br i1 %tobool461, label %if.then460.if.else481_crit_edge, label %land.lhs.true462

if.then460.if.else481_crit_edge:                  ; preds = %if.then460
  %sh_prom486.pre = zext i32 %9 to i64
  %shl487.pre = shl i64 1, %sh_prom486.pre
  br label %if.else481

land.lhs.true462:                                 ; preds = %if.then460
  %77 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !3
  %arrayidx466 = getelementptr inbounds i64* %77, i64 %idxprom484.pre
  %78 = load i64* %arrayidx466, align 8, !tbaa !4
  %sh_prom = zext i32 %9 to i64
  %shl467 = shl i64 1, %sh_prom
  %and468 = and i64 %78, %shl467
  %tobool469 = icmp eq i64 %and468, 0
  br i1 %tobool469, label %if.then470, label %if.else481

if.then470:                                       ; preds = %land.lhs.true462
  %or = or i64 %78, %shl467
  store i64 %or, i64* %arrayidx466, align 8, !tbaa !4
  %79 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !3
  %arrayidx480 = getelementptr inbounds i16* %79, i64 %idxprom484.pre
  %80 = load i16* %arrayidx480, align 2, !tbaa !5
  %inc = add i16 %80, 1
  store i16 %inc, i16* %arrayidx480, align 2, !tbaa !5
  br label %return

if.else481:                                       ; preds = %if.then460.if.else481_crit_edge, %land.lhs.true462
  %shl487.pre-phi = phi i64 [ %shl487.pre, %if.then460.if.else481_crit_edge ], [ %shl467, %land.lhs.true462 ]
  %81 = load i64** @qty_phys_sugg, align 8, !tbaa !3
  %arrayidx485 = getelementptr inbounds i64* %81, i64 %idxprom484.pre
  %82 = load i64* %arrayidx485, align 8, !tbaa !4
  %and488 = and i64 %82, %shl487.pre-phi
  %tobool489 = icmp eq i64 %and488, 0
  br i1 %tobool489, label %if.then490, label %return

if.then490:                                       ; preds = %if.else481
  %or497 = or i64 %82, %shl487.pre-phi
  store i64 %or497, i64* %arrayidx485, align 8, !tbaa !4
  %83 = load i16** @qty_phys_num_sugg, align 8, !tbaa !3
  %arrayidx501 = getelementptr inbounds i16* %83, i64 %idxprom484.pre
  %84 = load i16* %arrayidx501, align 2, !tbaa !5
  %inc502 = add i16 %84, 1
  store i16 %inc502, i16* %arrayidx501, align 2, !tbaa !5
  br label %return

if.end506:                                        ; preds = %if.end446
  br i1 %cmp209, label %if.then509, label %if.end557

if.then509:                                       ; preds = %if.end506
  %tobool510 = icmp eq i32 %may_save_copy.addr.3.ph, 0
  br i1 %tobool510, label %if.then509.if.else533_crit_edge, label %land.lhs.true511

if.then509.if.else533_crit_edge:                  ; preds = %if.then509
  %.pre897 = load i32** @reg_qty, align 8, !tbaa !3
  %idxprom534.pre = sext i32 %9 to i64
  %sh_prom538.pre = zext i32 %38 to i64
  %shl539.pre = shl i64 1, %sh_prom538.pre
  br label %if.else533

land.lhs.true511:                                 ; preds = %if.then509
  %idxprom512 = sext i32 %9 to i64
  %85 = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx513 = getelementptr inbounds i32* %85, i64 %idxprom512
  %86 = load i32* %arrayidx513, align 4, !tbaa !0
  %idxprom514 = sext i32 %86 to i64
  %87 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !3
  %arrayidx515 = getelementptr inbounds i64* %87, i64 %idxprom514
  %88 = load i64* %arrayidx515, align 8, !tbaa !4
  %sh_prom516 = zext i32 %38 to i64
  %shl517 = shl i64 1, %sh_prom516
  %and518 = and i64 %88, %shl517
  %tobool519 = icmp eq i64 %and518, 0
  br i1 %tobool519, label %if.then520, label %if.else533

if.then520:                                       ; preds = %land.lhs.true511
  %or527 = or i64 %88, %shl517
  store i64 %or527, i64* %arrayidx515, align 8, !tbaa !4
  %89 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !3
  %arrayidx531 = getelementptr inbounds i16* %89, i64 %idxprom514
  %90 = load i16* %arrayidx531, align 2, !tbaa !5
  %inc532 = add i16 %90, 1
  store i16 %inc532, i16* %arrayidx531, align 2, !tbaa !5
  br label %return

if.else533:                                       ; preds = %if.then509.if.else533_crit_edge, %land.lhs.true511
  %shl539.pre-phi = phi i64 [ %shl539.pre, %if.then509.if.else533_crit_edge ], [ %shl517, %land.lhs.true511 ]
  %idxprom534.pre-phi = phi i64 [ %idxprom534.pre, %if.then509.if.else533_crit_edge ], [ %idxprom512, %land.lhs.true511 ]
  %91 = phi i32* [ %.pre897, %if.then509.if.else533_crit_edge ], [ %85, %land.lhs.true511 ]
  %arrayidx535 = getelementptr inbounds i32* %91, i64 %idxprom534.pre-phi
  %92 = load i32* %arrayidx535, align 4, !tbaa !0
  %idxprom536 = sext i32 %92 to i64
  %93 = load i64** @qty_phys_sugg, align 8, !tbaa !3
  %arrayidx537 = getelementptr inbounds i64* %93, i64 %idxprom536
  %94 = load i64* %arrayidx537, align 8, !tbaa !4
  %and540 = and i64 %94, %shl539.pre-phi
  %tobool541 = icmp eq i64 %and540, 0
  br i1 %tobool541, label %if.then542, label %return

if.then542:                                       ; preds = %if.else533
  %or549 = or i64 %94, %shl539.pre-phi
  store i64 %or549, i64* %arrayidx537, align 8, !tbaa !4
  %95 = load i16** @qty_phys_num_sugg, align 8, !tbaa !3
  %arrayidx553 = getelementptr inbounds i16* %95, i64 %idxprom536
  %96 = load i16* %arrayidx553, align 2, !tbaa !5
  %inc554 = add i16 %96, 1
  store i16 %inc554, i16* %arrayidx553, align 2, !tbaa !5
  br label %return

if.end557:                                        ; preds = %if.end506
  %idxprom558 = sext i32 %38 to i64
  %97 = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx559 = getelementptr inbounds i32* %97, i64 %idxprom558
  %98 = load i32* %arrayidx559, align 4, !tbaa !0
  %cmp560 = icmp sgt i32 %98, -2
  br i1 %cmp560, label %return, label %lor.lhs.false562

lor.lhs.false562:                                 ; preds = %if.end557
  %99 = load %struct.function** @cfun, align 8, !tbaa !3
  %has_nonlocal_label = getelementptr inbounds %struct.function* %99, i64 0, i32 56
  %100 = bitcast [4 x i8]* %has_nonlocal_label to i32*
  %bf.load563 = load i32* %100, align 8
  %bf.clear565 = and i32 %bf.load563, 256
  %tobool566 = icmp eq i32 %bf.clear565, 0
  br i1 %tobool566, label %if.end582, label %land.lhs.true567

land.lhs.true567:                                 ; preds = %lor.lhs.false562
  %idxprom568 = sext i32 %9 to i64
  %101 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !3
  %data = getelementptr inbounds %struct.varray_head_tag* %101, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx569 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom568
  %102 = load %struct.reg_info_def** %arrayidx569, align 8, !tbaa !3
  %calls_crossed = getelementptr inbounds %struct.reg_info_def* %102, i64 0, i32 8
  %103 = load i32* %calls_crossed, align 4, !tbaa !0
  %cmp570 = icmp sgt i32 %103, 0
  %arrayidx575 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom558
  %104 = load %struct.reg_info_def** %arrayidx575, align 8, !tbaa !3
  %calls_crossed576 = getelementptr inbounds %struct.reg_info_def* %104, i64 0, i32 8
  %105 = load i32* %calls_crossed576, align 4, !tbaa !0
  %cmp577 = icmp sgt i32 %105, 0
  %cmp579 = xor i1 %cmp570, %cmp577
  br i1 %cmp579, label %return, label %if.end582

if.end582:                                        ; preds = %lor.lhs.false562, %land.lhs.true567
  %tobool583 = icmp eq i32 %already_dead, 0
  br i1 %tobool583, label %lor.lhs.false584, label %land.lhs.true587

lor.lhs.false584:                                 ; preds = %if.end582
  %call585 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %9) #6
  %tobool586 = icmp eq %struct.rtx_def* %call585, null
  br i1 %tobool586, label %return, label %lor.lhs.false584.land.lhs.true587_crit_edge

lor.lhs.false584.land.lhs.true587_crit_edge:      ; preds = %lor.lhs.false584
  %.pre898 = load i32** @reg_qty, align 8, !tbaa !3
  br label %land.lhs.true587

land.lhs.true587:                                 ; preds = %if.end582, %lor.lhs.false584.land.lhs.true587_crit_edge
  %106 = phi i32* [ %.pre898, %lor.lhs.false584.land.lhs.true587_crit_edge ], [ %97, %if.end582 ]
  %idxprom588 = sext i32 %9 to i64
  %arrayidx589 = getelementptr inbounds i32* %106, i64 %idxprom588
  %107 = load i32* %arrayidx589, align 4, !tbaa !0
  %idxprom590 = sext i32 %107 to i64
  %108 = load %struct.qty** @qty, align 8, !tbaa !3
  %min_class = getelementptr inbounds %struct.qty* %108, i64 %idxprom590, i32 7
  %109 = load i32* %min_class, align 4, !tbaa !6
  %call.i = tail call i32 @reg_preferred_class(i32 %38) #6
  %call1.i = tail call i32 @reg_class_subset_p(i32 %call.i, i32 %109) #6
  %tobool.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.i, label %lor.rhs.i, label %if.then594

lor.rhs.i:                                        ; preds = %land.lhs.true587
  %call2.i = tail call i32 @reg_class_subset_p(i32 %109, i32 %call.i) #6
  %tobool3.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.i, label %return, label %if.then594

if.then594:                                       ; preds = %lor.rhs.i, %land.lhs.true587
  %110 = load i32** @reg_qty, align 8, !tbaa !3
  %arrayidx596 = getelementptr inbounds i32* %110, i64 %idxprom588
  %111 = load i32* %arrayidx596, align 4, !tbaa !0
  %arrayidx598 = getelementptr inbounds i32* %110, i64 %idxprom558
  store i32 %111, i32* %arrayidx598, align 4, !tbaa !0
  %112 = load i8** @reg_offset, align 8, !tbaa !3
  %arrayidx600 = getelementptr inbounds i8* %112, i64 %idxprom588
  %113 = load i8* %arrayidx600, align 1, !tbaa !1
  %conv601814 = zext i8 %113 to i32
  %add602 = add nsw i32 %conv601814, %offset.2.ph
  %conv603 = trunc i32 %add602 to i8
  %arrayidx605 = getelementptr inbounds i8* %112, i64 %idxprom558
  store i8 %conv603, i8* %arrayidx605, align 1, !tbaa !1
  %idxprom606 = sext i32 %111 to i64
  %114 = load %struct.qty** @qty, align 8, !tbaa !3
  %first_reg = getelementptr inbounds %struct.qty* %114, i64 %idxprom606, i32 6
  %115 = load i32* %first_reg, align 4, !tbaa !0
  %116 = load i32** @reg_next_in_qty, align 8, !tbaa !3
  %arrayidx609 = getelementptr inbounds i32* %116, i64 %idxprom558
  store i32 %115, i32* %arrayidx609, align 4, !tbaa !0
  store i32 %38, i32* %first_reg, align 4, !tbaa !0
  %call.i843 = tail call i32 @reg_preferred_class(i32 %38) #6
  %117 = load %struct.qty** @qty, align 8, !tbaa !3
  %min_class.i = getelementptr inbounds %struct.qty* %117, i64 %idxprom606, i32 7
  %118 = load i32* %min_class.i, align 4, !tbaa !6
  %call1.i844 = tail call i32 @reg_class_subset_p(i32 %call.i843, i32 %118) #6
  %tobool.i845 = icmp eq i32 %call1.i844, 0
  br i1 %tobool.i845, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then594
  %119 = load %struct.qty** @qty, align 8, !tbaa !3
  %min_class4.i = getelementptr inbounds %struct.qty* %119, i64 %idxprom606, i32 7
  store i32 %call.i843, i32* %min_class4.i, align 4, !tbaa !6
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then594
  %call5.i = tail call i32 @reg_alternate_class(i32 %38) #6
  %120 = load %struct.qty** @qty, align 8, !tbaa !3
  %alternate_class.i = getelementptr inbounds %struct.qty* %120, i64 %idxprom606, i32 8
  %121 = load i32* %alternate_class.i, align 4, !tbaa !6
  %call8.i = tail call i32 @reg_class_subset_p(i32 %call5.i, i32 %121) #6
  %tobool9.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.i, label %if.end14.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end.i
  %122 = load %struct.qty** @qty, align 8, !tbaa !3
  %alternate_class13.i = getelementptr inbounds %struct.qty* %122, i64 %idxprom606, i32 8
  store i32 %call5.i, i32* %alternate_class13.i, align 4, !tbaa !6
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then10.i, %if.end.i
  %123 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !3
  %data.i = getelementptr inbounds %struct.varray_head_tag* %123, i64 0, i32 4
  %reg16.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.reg_info_def*]*
  %arrayidx17.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg16.i, i64 0, i64 %idxprom558
  %124 = load %struct.reg_info_def** %arrayidx17.i, align 8, !tbaa !3
  %changes_mode.i = getelementptr inbounds %struct.reg_info_def* %124, i64 0, i32 10
  %125 = load i8* %changes_mode.i, align 1, !tbaa !1
  %tobool18.i = icmp eq i8 %125, 0
  br i1 %tobool18.i, label %update_qty_class.exit, label %if.then19.i

if.then19.i:                                      ; preds = %if.end14.i
  %126 = load %struct.qty** @qty, align 8, !tbaa !3
  %changes_mode22.i = getelementptr inbounds %struct.qty* %126, i64 %idxprom606, i32 11
  store i8 1, i8* %changes_mode22.i, align 1, !tbaa !1
  %.pre893 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !3
  %data614.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %.pre893, i64 0, i32 4
  %reg615.phi.trans.insert = bitcast %union.varray_data_tag* %data614.phi.trans.insert to [1 x %struct.reg_info_def*]*
  %arrayidx616.phi.trans.insert = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg615.phi.trans.insert, i64 0, i64 %idxprom558
  %.pre894 = load %struct.reg_info_def** %arrayidx616.phi.trans.insert, align 8, !tbaa !3
  br label %update_qty_class.exit

update_qty_class.exit:                            ; preds = %if.end14.i, %if.then19.i
  %127 = phi %struct.reg_info_def* [ %.pre894, %if.then19.i ], [ %124, %if.end14.i ]
  %calls_crossed617 = getelementptr inbounds %struct.reg_info_def* %127, i64 0, i32 8
  %128 = load i32* %calls_crossed617, align 4, !tbaa !0
  %129 = load %struct.qty** @qty, align 8, !tbaa !3
  %n_calls_crossed = getelementptr inbounds %struct.qty* %129, i64 %idxprom606, i32 5
  %130 = load i32* %n_calls_crossed, align 4, !tbaa !0
  %add620 = add nsw i32 %130, %128
  store i32 %add620, i32* %n_calls_crossed, align 4, !tbaa !0
  %refs = getelementptr inbounds %struct.reg_info_def* %127, i64 0, i32 4
  %131 = load i32* %refs, align 4, !tbaa !0
  %n_refs = getelementptr inbounds %struct.qty* %129, i64 %idxprom606, i32 0
  %132 = load i32* %n_refs, align 4, !tbaa !0
  %add627 = add nsw i32 %132, %131
  store i32 %add627, i32* %n_refs, align 4, !tbaa !0
  %freq = getelementptr inbounds %struct.reg_info_def* %127, i64 0, i32 5
  %133 = load i32* %freq, align 4, !tbaa !0
  %freq634 = getelementptr inbounds %struct.qty* %129, i64 %idxprom606, i32 1
  %134 = load i32* %freq634, align 4, !tbaa !0
  %add635 = add nsw i32 %134, %133
  store i32 %add635, i32* %freq634, align 4, !tbaa !0
  br i1 %cmp334, label %if.then638, label %return

if.then638:                                       ; preds = %update_qty_class.exit
  %first_reg641 = getelementptr inbounds %struct.qty* %129, i64 %idxprom606, i32 6
  %i.0848 = load i32* %first_reg641, align 4
  %cmp642849 = icmp sgt i32 %i.0848, -1
  br i1 %cmp642849, label %for.body, label %for.end

for.body:                                         ; preds = %if.then638, %for.body
  %i.0850 = phi i32 [ %i.0, %for.body ], [ %i.0848, %if.then638 ]
  %idxprom644 = sext i32 %i.0850 to i64
  %135 = load i8** @reg_offset, align 8, !tbaa !3
  %arrayidx645 = getelementptr inbounds i8* %135, i64 %idxprom644
  %136 = load i8* %arrayidx645, align 1, !tbaa !1
  %conv646815 = zext i8 %136 to i32
  %sub647 = sub nsw i32 %conv646815, %offset.2.ph
  %conv648 = trunc i32 %sub647 to i8
  store i8 %conv648, i8* %arrayidx645, align 1, !tbaa !1
  %137 = load i32** @reg_next_in_qty, align 8, !tbaa !3
  %arrayidx650 = getelementptr inbounds i32* %137, i64 %idxprom644
  %i.0 = load i32* %arrayidx650, align 4
  %cmp642 = icmp sgt i32 %i.0, -1
  br i1 %cmp642, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.pre895 = load %struct.qty** @qty, align 8, !tbaa !3
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.then638
  %138 = phi %struct.qty* [ %.pre895, %for.cond.for.end_crit_edge ], [ %129, %if.then638 ]
  %size653 = getelementptr inbounds %struct.qty* %138, i64 %idxprom606, i32 4
  store i32 %ssize.0, i32* %size653, align 4, !tbaa !0
  %bf.load654 = load i32* %29, align 8
  %bf.lshr655 = lshr i32 %bf.load654, 16
  %bf.clear656 = and i32 %bf.lshr655, 255
  %mode = getelementptr inbounds %struct.qty* %138, i64 %idxprom606, i32 9
  store i32 %bf.clear656, i32* %mode, align 4, !tbaa !7
  br label %return

return:                                           ; preds = %while.cond, %while.cond140, %lor.rhs.i, %for.end, %update_qty_class.exit, %lor.lhs.false584, %if.end557, %land.lhs.true567, %if.then520, %if.then542, %if.else533, %if.end455, %if.then490, %if.then470, %if.else481, %land.lhs.true314, %land.lhs.true322, %land.lhs.true329, %land.lhs.true339, %land.lhs.true349, %lor.lhs.false360, %lor.lhs.false402, %lor.lhs.false436, %land.lhs.true408, %land.lhs.true442, %land.lhs.true357
  %retval.0 = phi i32 [ 0, %land.lhs.true357 ], [ 0, %land.lhs.true442 ], [ 0, %land.lhs.true408 ], [ 0, %lor.lhs.false436 ], [ 0, %lor.lhs.false402 ], [ 0, %lor.lhs.false360 ], [ 0, %land.lhs.true349 ], [ 0, %land.lhs.true339 ], [ 0, %land.lhs.true329 ], [ 0, %land.lhs.true322 ], [ 0, %land.lhs.true314 ], [ 0, %if.else481 ], [ 0, %if.then470 ], [ 0, %if.then490 ], [ 0, %if.end455 ], [ 0, %if.else533 ], [ 0, %if.then542 ], [ 0, %if.then520 ], [ 0, %land.lhs.true567 ], [ 0, %if.end557 ], [ 0, %lor.rhs.i ], [ 0, %lor.lhs.false584 ], [ 1, %update_qty_class.exit ], [ 1, %for.end ], [ 0, %while.cond140 ], [ 0, %while.cond ]
  ret i32 %retval.0
}
