define internal fastcc void @post_mark_life(i32 %regno, i32 %mode, i32 %birth, i32 %death) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !1208, i64 0, metadata !627), !dbg !1590
  %regno.off = add i32 %regno, -8, !dbg !1591
  %0 = icmp ult i32 %regno.off, 8, !dbg !1591
  %regno.off1 = add i32 %regno, -21, !dbg !1591
  %1 = icmp ult i32 %regno.off1, 8, !dbg !1591
  %or.cond = or i1 %0, %1, !dbg !1591
  %regno.off2 = add i32 %regno, -45, !dbg !1591
  %2 = icmp ult i32 %regno.off2, 8, !dbg !1591
  %or.cond6 = or i1 %or.cond, %2, !dbg !1591
  %regno.off3 = add i32 %regno, -29, !dbg !1591
  %3 = icmp ult i32 %regno.off3, 8, !dbg !1591
  %or.cond8 = or i1 %or.cond6, %3, !dbg !1591
  br i1 %or.cond8, label %cond.true, label %cond.false, !dbg !1591

cond.true:                                        ; preds = %entry
  %idxprom = sext i32 %mode to i64, !dbg !1591
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom, !dbg !1591
  %4 = load i32* %arrayidx, align 4, !dbg !1591, !tbaa !1390
  %cmp13 = icmp eq i32 %4, 5, !dbg !1591
  br i1 %cmp13, label %while.body, label %lor.rhs, !dbg !1591

lor.rhs:                                          ; preds = %cond.true
  %cmp16 = icmp eq i32 %4, 6, !dbg !1591
  %phitmp = select i1 %cmp16, i32 2, i32 1, !dbg !1591
  br label %while.body, !dbg !1591

cond.false:                                       ; preds = %entry
  switch i32 %mode, label %while.cond.preheader [
    i32 18, label %cond.true18
    i32 24, label %cond.true22
  ], !dbg !1591

cond.true18:                                      ; preds = %cond.false
  %5 = load i32* @target_flags, align 4, !dbg !1591, !tbaa !933
  %and = lshr i32 %5, 25, !dbg !1591
  %6 = and i32 %and, 1, !dbg !1591
  %7 = xor i32 %6, 3, !dbg !1591
  br label %while.body, !dbg !1591

cond.true22:                                      ; preds = %cond.false
  %8 = load i32* @target_flags, align 4, !dbg !1591, !tbaa !933
  %and23 = lshr i32 %8, 24, !dbg !1591
  %9 = and i32 %and23, 2, !dbg !1591
  %10 = xor i32 %9, 6, !dbg !1591
  br label %while.body, !dbg !1591

while.cond.preheader:                             ; preds = %cond.false
  %idxprom27 = sext i32 %mode to i64, !dbg !1591
  %arrayidx28 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27, !dbg !1591
  %11 = load i8* %arrayidx28, align 1, !dbg !1591, !tbaa !934
  %conv = zext i8 %11 to i32, !dbg !1591
  %12 = load i32* @target_flags, align 4, !dbg !1591, !tbaa !933
  %and29 = lshr i32 %12, 23, !dbg !1591
  %13 = and i32 %and29, 4, !dbg !1591
  %14 = add i32 %13, 4, !dbg !1591
  %add = add i32 %conv, -1, !dbg !1591
  %sub = add i32 %add, %14, !dbg !1591
  %div = sdiv i32 %sub, %14, !dbg !1591
  %cmp4012 = icmp sgt i32 %div, 0, !dbg !1592
  br i1 %cmp4012, label %while.body, label %while.cond44.preheader, !dbg !1592

while.cond44.preheader:                           ; preds = %while.body, %while.cond.preheader
  %this_reg.0.lcssa = phi i64 [ 0, %while.cond.preheader ], [ %or, %while.body ]
  %cmp459 = icmp slt i32 %birth, %death, !dbg !1593
  br i1 %cmp459, label %while.body47.lr.ph, label %if.end, !dbg !1593

while.body47.lr.ph:                               ; preds = %while.cond44.preheader
  %15 = load i64** @regs_live_at, align 8, !dbg !1594, !tbaa !936
  %16 = sext i32 %birth to i64
  br label %while.body47, !dbg !1593

while.body:                                       ; preds = %cond.true, %lor.rhs, %cond.true18, %cond.true22, %while.cond.preheader, %while.body
  %dec14.in = phi i32 [ %dec14, %while.body ], [ %div, %while.cond.preheader ], [ %10, %cond.true22 ], [ %7, %cond.true18 ], [ %phitmp, %lor.rhs ], [ 2, %cond.true ]
  %this_reg.013 = phi i64 [ %or, %while.body ], [ 0, %while.cond.preheader ], [ 0, %cond.true22 ], [ 0, %cond.true18 ], [ 0, %lor.rhs ], [ 0, %cond.true ]
  %dec14 = add nsw i32 %dec14.in, -1, !dbg !1592
  %add42 = add nsw i32 %dec14, %regno, !dbg !1596
  %sh_prom = zext i32 %add42 to i64, !dbg !1596
  %shl = shl i64 1, %sh_prom, !dbg !1596
  %or = or i64 %shl, %this_reg.013, !dbg !1596
  tail call void @llvm.dbg.value(metadata !{i64 %or}, i64 0, metadata !631), !dbg !1596
  tail call void @llvm.dbg.value(metadata !{i32 %dec14}, i64 0, metadata !630), !dbg !1592
  %cmp40 = icmp sgt i32 %dec14, 0, !dbg !1592
  br i1 %cmp40, label %while.body, label %while.cond44.preheader, !dbg !1592

while.body47:                                     ; preds = %while.body47.lr.ph, %while.body47
  %indvars.iv = phi i64 [ %16, %while.body47.lr.ph ], [ %indvars.iv.next, %while.body47 ]
  %arrayidx49 = getelementptr inbounds i64* %15, i64 %indvars.iv, !dbg !1594
  %17 = load i64* %arrayidx49, align 8, !dbg !1594, !tbaa !1102
  %or50 = or i64 %17, %this_reg.0.lcssa, !dbg !1594
  store i64 %or50, i64* %arrayidx49, align 8, !dbg !1594, !tbaa !1102
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1593
  %18 = trunc i64 %indvars.iv.next to i32, !dbg !1593
  %cmp45 = icmp slt i32 %18, %death, !dbg !1593
  br i1 %cmp45, label %while.body47, label %if.end, !dbg !1593

if.end:                                           ; preds = %while.body47, %while.cond44.preheader
  ret void, !dbg !1597
}
