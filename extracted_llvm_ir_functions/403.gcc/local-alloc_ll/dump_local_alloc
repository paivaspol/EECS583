define void @dump_local_alloc(%struct._IO_FILE* nocapture %file) #0 {
entry:
  %0 = load i32* @max_regno, align 4, !tbaa !0
  %cmp10 = icmp sgt i32 %0, 53
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.inc, %entry
  %1 = phi i32 [ %0, %entry ], [ %5, %for.inc ]
  %indvars.iv = phi i64 [ 53, %entry ], [ %indvars.iv.next, %for.inc ]
  %2 = load i16** @reg_renumber, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i16* %2, i64 %indvars.iv
  %3 = load i16* %arrayidx, align 2, !tbaa !5
  %cmp1 = icmp eq i16 %3, -1
  br i1 %cmp1, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %conv = sext i16 %3 to i32
  %4 = trunc i64 %indvars.iv to i32
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([23 x i8]* @.str, i64 0, i64 0), i32 %4, i32 %conv) #6
  %.pre = load i32* @max_regno, align 4, !tbaa !0
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %5 = phi i32 [ %1, %for.body ], [ %.pre, %if.then ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %6, %5
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}
