define %struct.rtx_def* @pc_set(%struct.rtx_def* nocapture %insn) #2 {
entry:
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load1 = load i32* %2, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 39
  br i1 %cmp3, label %if.then4, label %if.end8

if.then4:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  %arrayidx7 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 0
  %4 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !3
  %.phi.trans.insert = bitcast %struct.rtx_def* %4 to i32*
  %bf.load9.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end
  %bf.load9 = phi i32 [ %bf.load9.pre, %if.then4 ], [ %bf.load1, %if.end ]
  %pat.0 = phi %struct.rtx_def* [ %4, %if.then4 ], [ %1, %if.end ]
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 47
  br i1 %cmp11, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end8
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %pat.0, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14, align 8, !tbaa !3
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load15 = load i32* %6, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 59
  br i1 %cmp17, label %return, label %if.end19

if.end19:                                         ; preds = %land.lhs.true, %if.end8
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %if.end19
  %retval.0 = phi %struct.rtx_def* [ null, %if.end19 ], [ null, %entry ], [ %pat.0, %land.lhs.true ]
  ret %struct.rtx_def* %retval.0
}
