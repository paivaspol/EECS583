define %struct.rtx_def* @get_label_after(%struct.rtx_def* %insn) #0 {
entry:
  %call = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn) #7
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = bitcast %struct.rtx_def* %call to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 36
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = tail call %struct.rtx_def* @gen_label_rtx() #7
  %call3 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call2, %struct.rtx_def* %insn) #7
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call2, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  store i32 0, i32* %rtint, align 4, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %label.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ %call, %lor.lhs.false ]
  ret %struct.rtx_def* %label.0
}
