define i32 @any_condjump_p(%struct.rtx_def* nocapture %insn) #2 {
entry:
  %call = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %insn) #8
  %tobool = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 72
  br i1 %cmp, label %if.end2, label %return

if.end2:                                          ; preds = %if.end
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx8, align 8, !tbaa !3
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 2
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx16, align 8, !tbaa !3
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load17 = load i32* %5, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 59
  br i1 %cmp19, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %if.end2
  switch i32 %bf.clear10, label %lor.rhs [
    i32 67, label %lor.end26
    i32 51, label %lor.end26
  ]

lor.rhs:                                          ; preds = %land.lhs.true, %if.end2
  %cmp22 = icmp eq i32 %bf.clear10, 59
  br i1 %cmp22, label %land.rhs, label %lor.end26

land.rhs:                                         ; preds = %lor.rhs
  %cmp23 = icmp eq i32 %bf.clear18, 67
  %cmp25 = icmp eq i32 %bf.clear18, 51
  %.cmp25 = or i1 %cmp23, %cmp25
  br label %lor.end26

lor.end26:                                        ; preds = %land.rhs, %land.lhs.true, %land.lhs.true, %lor.rhs
  %6 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ true, %land.lhs.true ], [ %.cmp25, %land.rhs ]
  %lor.ext = zext i1 %6 to i32
  br label %return

return:                                           ; preds = %if.end, %entry, %lor.end26
  %retval.0 = phi i32 [ %lor.ext, %lor.end26 ], [ 0, %entry ], [ 0, %if.end ]
  ret i32 %retval.0
}
