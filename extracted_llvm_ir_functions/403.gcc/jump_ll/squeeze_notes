define zeroext i1 @squeeze_notes(%struct.rtx_def** nocapture %startp, %struct.rtx_def** nocapture %endp) #0 {
entry:
  %0 = load %struct.rtx_def** %startp, align 8, !tbaa !3
  %1 = load %struct.rtx_def** %endp, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %cmp108113122 = icmp eq %struct.rtx_def* %0, %2
  br i1 %cmp108113122, label %for.end, label %for.body.lr.ph.lr.ph

for.cond.outer.loopexit:                          ; preds = %for.body, %land.lhs.true
  %cmp108113 = icmp eq %struct.rtx_def* %3, %2
  br i1 %cmp108113, label %for.end, label %for.body.lr.ph.lr.ph

for.body.lr.ph.lr.ph:                             ; preds = %entry, %for.cond.outer.loopexit
  %start.0.ph125 = phi %struct.rtx_def* [ %start.0.ph104115, %for.cond.outer.loopexit ], [ %0, %entry ]
  %last.0.ph124 = phi %struct.rtx_def* [ %insn.0109, %for.cond.outer.loopexit ], [ null, %entry ]
  %insn.0.ph123 = phi %struct.rtx_def* [ %3, %for.cond.outer.loopexit ], [ %0, %entry ]
  br label %for.body.lr.ph

for.cond.outer102.loopexit:                       ; preds = %if.then
  %cmp108 = icmp eq %struct.rtx_def* %3, %2
  br i1 %cmp108, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.body.lr.ph.lr.ph, %for.cond.outer102.loopexit
  %start.0.ph104115 = phi %struct.rtx_def* [ %start.0.ph125, %for.body.lr.ph.lr.ph ], [ %3, %for.cond.outer102.loopexit ]
  %insn.0.ph103114 = phi %struct.rtx_def* [ %insn.0.ph123, %for.body.lr.ph.lr.ph ], [ %3, %for.cond.outer102.loopexit ]
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %start.0.ph104115, i64 0, i32 1, i64 1
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %start.0.c = ptrtoint %struct.rtx_def* %start.0.ph104115 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.else
  %insn.0109 = phi %struct.rtx_def* [ %insn.0.ph103114, %for.body.lr.ph ], [ %3, %if.else ]
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.0109, i64 0, i32 1, i64 2
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx3, align 8, !tbaa !3
  %4 = bitcast %struct.rtx_def* %insn.0109 to i32*
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 37
  br i1 %cmp4, label %land.lhs.true, label %for.cond.outer.loopexit

land.lhs.true:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %insn.0109, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx6 to i32*
  %5 = load i32* %rtint, align 4, !tbaa !0
  %.off = add i32 %5, 98
  %switch = icmp ult i32 %.off, 6
  br i1 %switch, label %if.then, label %for.cond.outer.loopexit

if.then:                                          ; preds = %land.lhs.true
  %cmp32 = icmp eq %struct.rtx_def* %insn.0109, %start.0.ph104115
  br i1 %cmp32, label %for.cond.outer102.loopexit, label %if.else

if.else:                                          ; preds = %if.then
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %insn.0109, i64 0, i32 1, i64 1
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx36, align 8, !tbaa !3
  %7 = load %struct.rtx_def** %rtx39, align 8, !tbaa !3
  %8 = getelementptr inbounds %union.rtunion_def* %arrayidx35, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !3
  %9 = getelementptr inbounds %union.rtunion_def* %arrayidx2, i64 0, i32 0
  store i64 %start.0.c, i64* %9, align 8, !tbaa !3
  %10 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2, i32 0
  %insn.0.c = ptrtoint %struct.rtx_def* %insn.0109 to i64
  store i64 %insn.0.c, i64* %10, align 8, !tbaa !3
  %11 = load %struct.rtx_def** %rtx3, align 8, !tbaa !3
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 1, i32 0
  store i64 %insn.0.c, i64* %12, align 8, !tbaa !3
  %13 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 2, i32 0
  %.c100 = ptrtoint %struct.rtx_def* %3 to i64
  store i64 %.c100, i64* %13, align 8, !tbaa !3
  %14 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %.c101 = ptrtoint %struct.rtx_def* %6 to i64
  store i64 %.c101, i64* %14, align 8, !tbaa !3
  %cmp = icmp eq %struct.rtx_def* %3, %2
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.cond.outer.loopexit, %entry, %if.else
  %last.0.ph118 = phi %struct.rtx_def* [ %last.0.ph124, %if.else ], [ null, %entry ], [ %insn.0109, %for.cond.outer.loopexit ]
  %start.0.ph104112 = phi %struct.rtx_def* [ %start.0.ph104115, %if.else ], [ %0, %entry ], [ %start.0.ph104115, %for.cond.outer.loopexit ]
  %cmp66 = icmp eq %struct.rtx_def* %start.0.ph104112, %2
  br i1 %cmp66, label %return, label %if.end68

if.end68:                                         ; preds = %for.end
  store %struct.rtx_def* %start.0.ph104112, %struct.rtx_def** %startp, align 8, !tbaa !3
  store %struct.rtx_def* %last.0.ph118, %struct.rtx_def** %endp, align 8, !tbaa !3
  br label %return

return:                                           ; preds = %for.cond.outer102.loopexit, %for.end, %if.end68
  %retval.0 = phi i1 [ false, %if.end68 ], [ true, %for.end ], [ true, %for.cond.outer102.loopexit ]
  ret i1 %retval.0
}
