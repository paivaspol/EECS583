define void @delete_jump(%struct.rtx_def* %insn) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom29 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom29
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %cond.true, label %if.end

cond.true:                                        ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 47
  br i1 %cmp5, label %cond.end15, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %2) #7
  br label %cond.end15

cond.end15:                                       ; preds = %cond.true, %cond.false
  %cond16 = phi %struct.rtx_def* [ %call, %cond.false ], [ %2, %cond.true ]
  %tobool = icmp eq %struct.rtx_def* %cond16, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end15
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %cond16, i64 0, i32 1, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx19, align 8, !tbaa !3
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load20 = load i32* %5, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 59
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @delete_computation(%struct.rtx_def* %insn) #8
  br label %if.end

if.end:                                           ; preds = %entry, %cond.end15, %if.then, %land.lhs.true
  ret void
}
