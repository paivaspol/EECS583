define void @expand_builtin_setjmp_receiver(%struct.rtx_def* %receiver_label) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !3
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %0) #7
  %call1 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #7
  %1 = load %struct.rtx_def** @static_chain_rtx, align 8, !tbaa !3
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %1) #7
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #7
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !3
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !3
  %call4 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %2, %struct.rtx_def* %3) #7
  %4 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !1
  %tobool = icmp eq i8 %4, 0
  br i1 %tobool, label %if.end15, label %for.body

for.cond:                                         ; preds = %for.body
  %cmp = icmp ult i64 %inc, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.cond
  %i.033 = phi i64 [ %inc, %for.cond ], [ 0, %entry ]
  %5 = icmp ult i64 %i.033, 2
  %6 = and i64 %i.033, -3
  %7 = icmp eq i64 %6, 1
  %or.cond30 = and i1 %5, %7
  %inc = add i64 %i.033, 1
  br i1 %or.cond30, label %if.end15, label %for.cond

for.end:                                          ; preds = %for.cond
  %cmp9 = icmp eq i64 %inc, 4
  br i1 %cmp9, label %if.then10, label %if.end15

if.then10:                                        ; preds = %for.end
  %8 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !3
  %9 = load %struct.function** @cfun, align 8, !tbaa !3
  %call11 = tail call %struct.rtx_def* @get_arg_pointer_save_area(%struct.function* %9) #7
  %call12 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call11) #7
  %call13 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %8, %struct.rtx_def* %call12) #7
  br label %if.end15

if.end15:                                         ; preds = %for.body, %entry, %for.end, %if.then10
  %10 = load i32* @target_flags, align 4, !tbaa !0
  %and = and i32 %10, 33554432
  %tobool16 = icmp eq i32 %and, 0
  %11 = load i32* @flag_pic, align 4, !tbaa !0
  %tobool18 = icmp ne i32 %11, 0
  %or.cond = and i1 %tobool16, %tobool18
  br i1 %or.cond, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.end15
  %call20 = tail call %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def* %receiver_label) #7
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #7
  br label %if.end22

if.end22:                                         ; preds = %if.end15, %if.then19
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 40, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str99, i64 0, i64 0)) #7
  %call24 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call23) #7
  ret void
}
