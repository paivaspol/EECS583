define internal fastcc i32 @get_pointer_alignment(%union.tree_node* nocapture %exp) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !3
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 13
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %type5 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type5, align 8, !tbaa !3
  %align7 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 7
  %3 = bitcast %union.tree_node** %align7 to i32*
  %4 = load i32* %3, align 4, !tbaa !0
  %cmp8 = icmp ult i32 %4, 128
  %cond = select i1 %cmp8, i32 %4, i32 128
  br label %while.body.outer

while.body.outer:                                 ; preds = %while.end, %if.end
  %exp.addr.0.ph = phi %union.tree_node* [ %exp, %if.end ], [ %15, %while.end ]
  %max_align.addr.0.ph = phi i32 [ 128, %if.end ], [ %max_align.addr.1, %while.end ]
  %align.0.ph = phi i32 [ %cond, %if.end ], [ %align.0, %while.end ]
  br label %while.body

while.body:                                       ; preds = %while.body.outer, %if.end22
  %exp.addr.0 = phi %union.tree_node* [ %6, %if.end22 ], [ %exp.addr.0.ph, %while.body.outer ]
  %align.0 = phi i32 [ %cond33, %if.end22 ], [ %align.0.ph, %while.body.outer ]
  %code10 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %code10 to i32*
  %bf.load11 = load i32* %5, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  switch i32 %bf.clear12, label %return [
    i32 115, label %sw.bb
    i32 114, label %sw.bb
    i32 116, label %sw.bb
    i32 59, label %sw.bb34
    i32 121, label %sw.bb51
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %operands = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %6 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %type15 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type15, align 8, !tbaa !3
  %code17 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %code17 to i32*
  %bf.load18 = load i32* %8, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 13
  br i1 %cmp20, label %if.end22, label %return

if.end22:                                         ; preds = %sw.bb
  %type26 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type26, align 8, !tbaa !3
  %align28 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 7
  %10 = bitcast %union.tree_node** %align28 to i32*
  %11 = load i32* %10, align 4, !tbaa !0
  %cmp29 = icmp ult i32 %11, %max_align.addr.0.ph
  %cond33 = select i1 %cmp29, i32 %11, i32 %max_align.addr.0.ph
  br label %while.body

sw.bb34:                                          ; preds = %while.body
  %operands36 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx37 = getelementptr inbounds i32* %operands36, i64 2
  %12 = bitcast i32* %arrayidx37 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !3
  %call = tail call i32 @host_integerp(%union.tree_node* %13, i32 1) #7
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %while.cond40

while.cond40:                                     ; preds = %sw.bb34, %while.cond40
  %max_align.addr.1 = phi i32 [ %shr, %while.cond40 ], [ %max_align.addr.0.ph, %sw.bb34 ]
  %14 = load %union.tree_node** %12, align 8, !tbaa !3
  %call44 = tail call i64 @tree_low_cst(%union.tree_node* %14, i32 1) #7
  %div = lshr i32 %max_align.addr.1, 3
  %sub = add i32 %div, -1
  %conv = zext i32 %sub to i64
  %and = and i64 %conv, %call44
  %cmp45 = icmp eq i64 %and, 0
  %shr = lshr i32 %max_align.addr.1, 1
  br i1 %cmp45, label %while.end, label %while.cond40

while.end:                                        ; preds = %while.cond40
  %arrayidx50 = bitcast i32* %operands36 to %union.tree_node**
  %15 = load %union.tree_node** %arrayidx50, align 8, !tbaa !3
  br label %while.body.outer

sw.bb51:                                          ; preds = %while.body
  %operands53 = getelementptr inbounds %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 2
  %arrayidx54 = bitcast i32* %operands53 to %union.tree_node**
  %16 = load %union.tree_node** %arrayidx54, align 8, !tbaa !3
  %code56 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast [4 x i8]* %code56 to i32*
  %bf.load57 = load i32* %17, align 8
  %bf.clear58 = and i32 %bf.load57, 255
  %cmp59 = icmp eq i32 %bf.clear58, 30
  br i1 %cmp59, label %if.end87, label %if.else

if.else:                                          ; preds = %sw.bb51
  %idxprom1 = zext i32 %bf.clear58 to i64
  %arrayidx66 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1
  %18 = load i8* %arrayidx66, align 1, !tbaa !1
  switch i8 %18, label %if.end87 [
    i8 100, label %if.then70
    i8 99, label %if.then83
  ]

if.then70:                                        ; preds = %if.else
  %u1 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 6
  %19 = bitcast %union.anon* %u1 to i32*
  %bf.load71 = load i32* %19, align 4
  %bf.clear72 = and i32 %bf.load71, 16777215
  br label %if.end87

if.then83:                                        ; preds = %if.else
  %call84 = tail call i32 @ix86_constant_alignment(%union.tree_node* %16, i32 %align.0) #7
  br label %if.end87

if.end87:                                         ; preds = %if.else, %sw.bb51, %if.then70, %if.then83
  %align.1 = phi i32 [ %bf.clear72, %if.then70 ], [ %call84, %if.then83 ], [ 16, %sw.bb51 ], [ %align.0, %if.else ]
  %cmp88 = icmp ult i32 %align.1, %max_align.addr.0.ph
  %cond93 = select i1 %cmp88, i32 %align.1, i32 %max_align.addr.0.ph
  br label %return

return:                                           ; preds = %while.body, %sw.bb, %sw.bb34, %entry, %if.end87
  %retval.0 = phi i32 [ %cond93, %if.end87 ], [ 0, %entry ], [ %align.0, %sw.bb34 ], [ %align.0, %sw.bb ], [ %align.0, %while.body ]
  ret i32 %retval.0
}
