define internal fastcc %union.tree_node* @stabilize_va_list(%union.tree_node* %valist, i32 %needs_lvalue) #0 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !3
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %side_effects_flag = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %side_effects_flag to i32*
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 256
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %call = tail call %union.tree_node* @save_expr(%union.tree_node* %valist) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then4
  %valist.addr.0 = phi %union.tree_node* [ %call, %if.then4 ], [ %valist, %if.then ]
  %type = getelementptr inbounds %union.tree_node* %valist.addr.0, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !3
  %code7 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast [4 x i8]* %code7 to i32*
  %bf.load8 = load i32* %4, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 18
  br i1 %cmp10, label %if.then11, label %return

if.then11:                                        ; preds = %if.end
  %5 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !3
  %type13 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type13, align 8, !tbaa !3
  %call14 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %6) #7
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !3
  %call15 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %7) #7
  %call16 = tail call %union.tree_node* @build1(i32 121, %union.tree_node* %call15, %union.tree_node* %valist.addr.0) #7
  %call17 = tail call %union.tree_node* @build1(i32 115, %union.tree_node* %call14, %union.tree_node* %call16) #7
  %call18 = tail call %union.tree_node* @fold(%union.tree_node* %call17) #7
  br label %return

if.else:                                          ; preds = %entry
  %tobool20 = icmp eq i32 %needs_lvalue, 0
  %side_effects_flag23 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %side_effects_flag23 to i32*
  %bf.load24 = load i32* %8, align 8
  br i1 %tobool20, label %if.then21, label %if.end37

if.then21:                                        ; preds = %if.else
  %bf.clear26 = and i32 %bf.load24, 256
  %tobool27 = icmp eq i32 %bf.clear26, 0
  br i1 %tobool27, label %return, label %if.end29

if.end29:                                         ; preds = %if.then21
  %call30 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %0) #7
  %call31 = tail call %union.tree_node* @build1(i32 121, %union.tree_node* %call30, %union.tree_node* %valist) #7
  %call32 = tail call %union.tree_node* @fold(%union.tree_node* %call31) #7
  %side_effects_flag34 = getelementptr inbounds %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast [4 x i8]* %side_effects_flag34 to i32*
  %bf.load35 = load i32* %9, align 8
  %bf.set = or i32 %bf.load35, 256
  store i32 %bf.set, i32* %9, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.end29
  %bf.load40 = phi i32 [ %bf.set, %if.end29 ], [ %bf.load24, %if.else ]
  %valist.addr.1 = phi %union.tree_node* [ %call32, %if.end29 ], [ %valist, %if.else ]
  %bf.clear42 = and i32 %bf.load40, 256
  %tobool43 = icmp eq i32 %bf.clear42, 0
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %if.end37
  %call45 = tail call %union.tree_node* @save_expr(%union.tree_node* %valist.addr.1) #7
  br label %if.end46

if.end46:                                         ; preds = %if.end37, %if.then44
  %valist.addr.2 = phi %union.tree_node* [ %call45, %if.then44 ], [ %valist.addr.1, %if.end37 ]
  %type48 = getelementptr inbounds %union.tree_node* %valist.addr.2, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type48, align 8, !tbaa !3
  %type50 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type50, align 8, !tbaa !3
  %call51 = tail call %union.tree_node* @build1(i32 41, %union.tree_node* %11, %union.tree_node* %valist.addr.2) #7
  %call52 = tail call %union.tree_node* @fold(%union.tree_node* %call51) #7
  br label %return

return:                                           ; preds = %if.end46, %if.then11, %if.end, %if.then21
  %retval.0 = phi %union.tree_node* [ %valist, %if.then21 ], [ %call18, %if.then11 ], [ %valist.addr.0, %if.end ], [ %call52, %if.end46 ]
  ret %union.tree_node* %retval.0
}
