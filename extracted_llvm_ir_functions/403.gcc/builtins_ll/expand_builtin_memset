define internal fastcc %struct.rtx_def* @expand_builtin_memset(%union.tree_node* nocapture %exp, %struct.rtx_def* %target, i32 %mode) #0 {
entry:
  %c = alloca i8, align 1
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !3
  %call = call i32 (%union.tree_node*, ...)* @validate_arglist(%union.tree_node* %1, i32 13, i32 6, i32 6, i32 5) #9
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.else

if.else:                                          ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !3
  %chain = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain, align 8, !tbaa !3
  %value3 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value3 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !3
  %chain7 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain7, align 8, !tbaa !3
  %value9 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value9 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !3
  %call10 = call fastcc i32 @get_pointer_alignment(%union.tree_node* %3) #9
  %cmp = icmp eq i32 %call10, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %if.else
  %call12 = call i32 @host_integerp(%union.tree_node* %9, i32 1) #7
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %if.end19, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %call14 = call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #7
  %cmp15 = icmp eq i64 %call14, 0
  br i1 %cmp15, label %if.then16, label %if.end19

if.then16:                                        ; preds = %land.lhs.true
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call17 = call %struct.rtx_def* @expand_expr(%union.tree_node* %6, %struct.rtx_def* %10, i32 0, i32 0) #7
  %call18 = call %struct.rtx_def* @expand_expr(%union.tree_node* %3, %struct.rtx_def* %target, i32 %mode, i32 0) #7
  br label %return

if.end19:                                         ; preds = %if.end, %land.lhs.true
  %code = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %11, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp21 = icmp eq i32 %bf.clear, 25
  br i1 %cmp21, label %if.end23, label %return

if.end23:                                         ; preds = %if.end19
  %call24 = call fastcc i32 @target_char_cast(%union.tree_node* %6, i8* %c) #9
  %tobool25 = icmp eq i32 %call24, 0
  br i1 %tobool25, label %if.end27, label %return

if.end27:                                         ; preds = %if.end23
  %12 = load i8* %c, align 1, !tbaa !1
  %tobool28 = icmp eq i8 %12, 0
  br i1 %tobool28, label %if.end43, label %if.then29

if.then29:                                        ; preds = %if.end27
  %call30 = call i32 @host_integerp(%union.tree_node* %9, i32 1) #7
  %tobool31 = icmp eq i32 %call30, 0
  br i1 %tobool31, label %return, label %if.end33

if.end33:                                         ; preds = %if.then29
  %call34 = call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #7
  %call35 = call i32 @can_store_by_pieces(i64 %call34, %struct.rtx_def* (i8*, i64, i32)* @builtin_memset_read_str, i8* %c, i32 %call10) #7
  %tobool36 = icmp eq i32 %call35, 0
  br i1 %tobool36, label %return, label %if.end38

if.end38:                                         ; preds = %if.end33
  %call39 = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %3) #9
  %call40 = call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #7
  call void @store_by_pieces(%struct.rtx_def* %call39, i64 %call40, %struct.rtx_def* (i8*, i64, i32)* @builtin_memset_read_str, i8* %c, i32 %call10) #7
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %call39, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %call42 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %13, %struct.rtx_def* null) #7
  br label %return

if.end43:                                         ; preds = %if.end27
  %call44 = call %struct.rtx_def* @expand_expr(%union.tree_node* %9, %struct.rtx_def* null, i32 0, i32 0) #7
  %call45 = call fastcc %struct.rtx_def* @get_memory_rtx(%union.tree_node* %3) #9
  call void @set_mem_align(%struct.rtx_def* %call45, i32 %call10) #7
  %call46 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %call45, %struct.rtx_def* %call44) #7
  %cmp47 = icmp eq %struct.rtx_def* %call46, null
  br i1 %cmp47, label %if.then48, label %return

if.then48:                                        ; preds = %if.end43
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %call45, i64 0, i32 1, i64 0
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx51, align 8, !tbaa !3
  %call52 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %14, %struct.rtx_def* null) #7
  br label %return

return:                                           ; preds = %if.end43, %if.then48, %if.end33, %if.then29, %if.end23, %if.end19, %if.else, %entry, %if.end38, %if.then16
  %retval.0 = phi %struct.rtx_def* [ %call18, %if.then16 ], [ %call42, %if.end38 ], [ null, %entry ], [ null, %if.else ], [ null, %if.end19 ], [ null, %if.end23 ], [ null, %if.then29 ], [ null, %if.end33 ], [ %call52, %if.then48 ], [ %call46, %if.end43 ]
  ret %struct.rtx_def* %retval.0
}
