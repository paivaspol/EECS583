define %struct.rtx_def* @expand_builtin_saveregs() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !3
  %expr = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr, align 8, !tbaa !3
  %x_saveregs_value = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 3
  %2 = load %struct.rtx_def** %x_saveregs_value, align 8, !tbaa !3
  %cmp = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  tail call void @start_sequence() #7
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str101, i64 0, i64 0)) #7
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call = tail call %struct.rtx_def* @get_insns() #7
  tail call void @end_sequence() #7
  %4 = load %struct.function** @cfun, align 8, !tbaa !3
  %expr3 = getelementptr inbounds %struct.function* %4, i64 0, i32 2
  %5 = load %struct.expr_status** %expr3, align 8, !tbaa !3
  %x_saveregs_value4 = getelementptr inbounds %struct.expr_status* %5, i64 0, i32 3
  store %struct.rtx_def* %3, %struct.rtx_def** %x_saveregs_value4, align 8, !tbaa !3
  tail call void @push_topmost_sequence() #7
  %call5 = tail call %struct.rtx_def* @get_insns() #7
  %call6 = tail call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %call, %struct.rtx_def* %call5) #7
  tail call void @pop_topmost_sequence() #7
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %3, %if.end ], [ %2, %entry ]
  ret %struct.rtx_def* %retval.0
}
