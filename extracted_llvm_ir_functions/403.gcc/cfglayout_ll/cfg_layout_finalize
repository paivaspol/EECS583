define void @cfg_layout_finalize() #0 {
entry:
  %e.041.i = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %tobool42.i = icmp eq %struct.edge_def* %e.041.i, null
  br i1 %tobool42.i, label %fixup_fallthru_exit_predecessor.exit, label %for.body.i

for.body.i:                                       ; preds = %entry, %for.inc.i
  %e.044.i = phi %struct.edge_def* [ %e.0.i, %for.inc.i ], [ %e.041.i, %entry ]
  %bb.043.i = phi %struct.basic_block_def* [ %bb.1.i, %for.inc.i ], [ null, %entry ]
  %flags.i = getelementptr inbounds %struct.edge_def* %e.044.i, i64 0, i32 6
  %0 = load i32* %flags.i, align 4, !tbaa !3
  %and.i = and i32 %0, 1
  %tobool1.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.i, label %for.inc.i, label %if.then.i

if.then.i:                                        ; preds = %for.body.i
  %src.i = getelementptr inbounds %struct.edge_def* %e.044.i, i64 0, i32 2
  %1 = load %struct.basic_block_def** %src.i, align 8, !tbaa !0
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %bb.1.i = phi %struct.basic_block_def* [ %1, %if.then.i ], [ %bb.043.i, %for.body.i ]
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.044.i, i64 0, i32 0
  %e.0.i = load %struct.edge_def** %pred_next.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %tobool2.i = icmp eq %struct.basic_block_def* %bb.1.i, null
  br i1 %tobool2.i, label %fixup_fallthru_exit_predecessor.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.end.i
  %aux.i = getelementptr inbounds %struct.basic_block_def* %bb.1.i, i64 0, i32 10
  %2 = load i8** %aux.i, align 8, !tbaa !0
  %next.i = getelementptr inbounds i8* %2, i64 16
  %3 = bitcast i8* %next.i to %struct.basic_block_def**
  %4 = load %struct.basic_block_def** %3, align 8, !tbaa !0
  %tobool3.i = icmp eq %struct.basic_block_def* %4, null
  br i1 %tobool3.i, label %fixup_fallthru_exit_predecessor.exit, label %if.then4.i

if.then4.i:                                       ; preds = %land.lhs.true.i
  %5 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data.i = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4
  %arrayidx.i = bitcast %union.varray_data_tag* %data.i to %struct.basic_block_def**
  %6 = load %struct.basic_block_def** %arrayidx.i, align 8, !tbaa !0
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %if.then4.i
  %c.0.i = phi %struct.basic_block_def* [ %6, %if.then4.i ], [ %9, %while.cond.i ]
  %aux6.i = getelementptr inbounds %struct.basic_block_def* %c.0.i, i64 0, i32 10
  %7 = load i8** %aux6.i, align 8, !tbaa !0
  %next7.i = getelementptr inbounds i8* %7, i64 16
  %8 = bitcast i8* %next7.i to %struct.basic_block_def**
  %9 = load %struct.basic_block_def** %8, align 8, !tbaa !0
  %cmp.i = icmp eq %struct.basic_block_def* %9, %bb.1.i
  br i1 %cmp.i, label %while.end.i, label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i
  store %struct.basic_block_def* %4, %struct.basic_block_def** %8, align 8, !tbaa !0
  br label %while.cond14.i

while.cond14.i:                                   ; preds = %while.cond14.i, %while.end.i
  %c.1.i = phi %struct.basic_block_def* [ %c.0.i, %while.end.i ], [ %12, %while.cond14.i ]
  %aux15.i = getelementptr inbounds %struct.basic_block_def* %c.1.i, i64 0, i32 10
  %10 = load i8** %aux15.i, align 8, !tbaa !0
  %next16.i = getelementptr inbounds i8* %10, i64 16
  %11 = bitcast i8* %next16.i to %struct.basic_block_def**
  %12 = load %struct.basic_block_def** %11, align 8, !tbaa !0
  %tobool17.i = icmp eq %struct.basic_block_def* %12, null
  br i1 %tobool17.i, label %while.end21.i, label %while.cond14.i

while.end21.i:                                    ; preds = %while.cond14.i
  store %struct.basic_block_def* %bb.1.i, %struct.basic_block_def** %11, align 8, !tbaa !0
  %13 = load i8** %aux.i, align 8, !tbaa !0
  %next25.i = getelementptr inbounds i8* %13, i64 16
  %14 = bitcast i8* %next25.i to %struct.basic_block_def**
  store %struct.basic_block_def* null, %struct.basic_block_def** %14, align 8, !tbaa !0
  br label %fixup_fallthru_exit_predecessor.exit

fixup_fallthru_exit_predecessor.exit:             ; preds = %entry, %for.end.i, %land.lhs.true.i, %while.end21.i
  %15 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %16 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data.i1 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4
  %arrayidx.i2 = bitcast %union.varray_data_tag* %data.i1 to %struct.basic_block_def**
  %17 = load %struct.basic_block_def** %arrayidx.i2, align 8, !tbaa !0
  %aux.i3 = getelementptr inbounds %struct.basic_block_def* %17, i64 0, i32 10
  %.pn263.i = load i8** %aux.i3, align 8
  %bb.0.in.in264.i = getelementptr inbounds i8* %.pn263.i, i64 16
  %bb.0.in265.i = bitcast i8* %bb.0.in.in264.i to %struct.basic_block_def**
  %bb.0266.i = load %struct.basic_block_def** %bb.0.in265.i, align 8
  %cmp267.i = icmp eq %struct.basic_block_def* %bb.0266.i, null
  br i1 %cmp267.i, label %for.end.i6, label %for.body.i5

for.body.i5:                                      ; preds = %fixup_fallthru_exit_predecessor.exit, %for.body.i5
  %18 = phi i8* [ %.pn.i, %for.body.i5 ], [ %.pn263.i, %fixup_fallthru_exit_predecessor.exit ]
  %bb.0270.i = phi %struct.basic_block_def* [ %bb.0.i, %for.body.i5 ], [ %bb.0266.i, %fixup_fallthru_exit_predecessor.exit ]
  %index.0268.i = phi i32 [ %inc.i, %for.body.i5 ], [ 1, %fixup_fallthru_exit_predecessor.exit ]
  %eff_end.i = getelementptr inbounds i8* %18, i64 8
  %19 = bitcast i8* %eff_end.i to %struct.rtx_def**
  %20 = load %struct.rtx_def** %19, align 8, !tbaa !0
  %aux3.i = getelementptr inbounds %struct.basic_block_def* %bb.0270.i, i64 0, i32 10
  %21 = load i8** %aux3.i, align 8, !tbaa !0
  %eff_head.i = bitcast i8* %21 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %eff_head.i, align 8, !tbaa !0
  %23 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 2, i32 0
  %.c248.i = ptrtoint %struct.rtx_def* %22 to i64
  store i64 %.c248.i, i64* %23, align 8, !tbaa !0
  %24 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1, i32 0
  %.c249.i = ptrtoint %struct.rtx_def* %20 to i64
  store i64 %.c249.i, i64* %24, align 8, !tbaa !0
  %inc.i = add nsw i32 %index.0268.i, 1
  %.pn.i = load i8** %aux3.i, align 8
  %bb.0.in.in.i = getelementptr inbounds i8* %.pn.i, i64 16
  %bb.0.in.i = bitcast i8* %bb.0.in.in.i to %struct.basic_block_def**
  %bb.0.i = load %struct.basic_block_def** %bb.0.in.i, align 8
  %cmp.i4 = icmp eq %struct.basic_block_def* %bb.0.i, null
  br i1 %cmp.i4, label %for.end.i6, label %for.body.i5

for.end.i6:                                       ; preds = %for.body.i5, %fixup_fallthru_exit_predecessor.exit
  %25 = phi i8* [ %.pn263.i, %fixup_fallthru_exit_predecessor.exit ], [ %.pn.i, %for.body.i5 ]
  %index.0.lcssa.i = phi i32 [ 1, %fixup_fallthru_exit_predecessor.exit ], [ %inc.i, %for.body.i5 ]
  %cmp10.i = icmp eq i32 %index.0.lcssa.i, %15
  br i1 %cmp10.i, label %if.end.i, label %if.then.i7

if.then.i7:                                       ; preds = %for.end.i6
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 353, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.fixup_reorder_chain, i64 0, i64 0)) #7
  unreachable

if.end.i:                                         ; preds = %for.end.i6
  %eff_end12.i = getelementptr inbounds i8* %25, i64 8
  %26 = bitcast i8* %eff_end12.i to %struct.rtx_def**
  %27 = load %struct.rtx_def** %26, align 8, !tbaa !0
  %28 = load %struct.rtx_def** @function_tail_eff_head, align 8, !tbaa !0
  %29 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 2, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %28 to i64
  store i64 %.c.i, i64* %29, align 8, !tbaa !0
  %30 = load %struct.rtx_def** @function_tail_eff_head, align 8, !tbaa !0
  %tobool.i8 = icmp eq %struct.rtx_def* %30, null
  br i1 %tobool.i8, label %while.cond.i9, label %if.then16.i

if.then16.i:                                      ; preds = %if.end.i
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 1, i32 0
  %.c247.i = ptrtoint %struct.rtx_def* %27 to i64
  store i64 %.c247.i, i64* %31, align 8, !tbaa !0
  br label %while.cond.i9

while.cond.i9:                                    ; preds = %if.then16.i, %if.end.i, %while.cond.i9
  %insn.0.i = phi %struct.rtx_def* [ %32, %while.cond.i9 ], [ %27, %if.end.i ], [ %27, %if.then16.i ]
  %arrayidx22.i = getelementptr inbounds %struct.rtx_def* %insn.0.i, i64 0, i32 1, i64 2
  %rtx23.i = bitcast %union.rtunion_def* %arrayidx22.i to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx23.i, align 8, !tbaa !0
  %tobool24.i = icmp eq %struct.rtx_def* %32, null
  br i1 %tobool24.i, label %while.end.i10, label %while.cond.i9

while.end.i10:                                    ; preds = %while.cond.i9
  tail call void @set_last_insn(%struct.rtx_def* %insn.0.i) #5
  %33 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data28.i = getelementptr inbounds %struct.varray_head_tag* %33, i64 0, i32 4
  %arrayidx30.i = bitcast %union.varray_data_tag* %data28.i to %struct.basic_block_def**
  %bb.1260.i = load %struct.basic_block_def** %arrayidx30.i, align 8
  %tobool32261.i = icmp eq %struct.basic_block_def* %bb.1260.i, null
  br i1 %tobool32261.i, label %for.end151.i, label %for.body33.i

for.body33.i:                                     ; preds = %while.end.i10, %for.inc148.i
  %bb.1262.i = phi %struct.basic_block_def* [ %bb.1.i13, %for.inc148.i ], [ %bb.1260.i, %while.end.i10 ]
  %succ.i = getelementptr inbounds %struct.basic_block_def* %bb.1262.i, i64 0, i32 5
  %34 = load %struct.edge_def** %succ.i, align 8, !tbaa !0
  %cmp34.i = icmp eq %struct.edge_def* %34, null
  br i1 %cmp34.i, label %for.inc148.i, label %for.body40.i

for.body40.i:                                     ; preds = %for.body33.i, %for.inc49.i
  %e.0258.i = phi %struct.edge_def* [ %36, %for.inc49.i ], [ %34, %for.body33.i ]
  %e_taken.0257.i = phi %struct.edge_def* [ %e_taken.1.i, %for.inc49.i ], [ null, %for.body33.i ]
  %e_fall.0256.i = phi %struct.edge_def* [ %e_fall.1.i, %for.inc49.i ], [ null, %for.body33.i ]
  %flags.i11 = getelementptr inbounds %struct.edge_def* %e.0258.i, i64 0, i32 6
  %35 = load i32* %flags.i11, align 4, !tbaa !3
  %and.i12 = and i32 %35, 1
  %tobool41.i = icmp eq i32 %and.i12, 0
  br i1 %tobool41.i, label %if.else.i, label %for.inc49.i

if.else.i:                                        ; preds = %for.body40.i
  %and44.i = and i32 %35, 8
  %tobool45.i = icmp eq i32 %and44.i, 0
  %e.0.e_taken.0.i = select i1 %tobool45.i, %struct.edge_def* %e.0258.i, %struct.edge_def* %e_taken.0257.i
  br label %for.inc49.i

for.inc49.i:                                      ; preds = %if.else.i, %for.body40.i
  %e_fall.1.i = phi %struct.edge_def* [ %e.0258.i, %for.body40.i ], [ %e_fall.0256.i, %if.else.i ]
  %e_taken.1.i = phi %struct.edge_def* [ %e_taken.0257.i, %for.body40.i ], [ %e.0.e_taken.0.i, %if.else.i ]
  %succ_next.i = getelementptr inbounds %struct.edge_def* %e.0258.i, i64 0, i32 1
  %36 = load %struct.edge_def** %succ_next.i, align 8, !tbaa !0
  %tobool39.i = icmp eq %struct.edge_def* %36, null
  br i1 %tobool39.i, label %for.end50.i, label %for.body40.i

for.end50.i:                                      ; preds = %for.inc49.i
  %end.i = getelementptr inbounds %struct.basic_block_def* %bb.1262.i, i64 0, i32 1
  %37 = load %struct.rtx_def** %end.i, align 8, !tbaa !0
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load.i = load i32* %38, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp51.i = icmp eq i32 %bf.clear.i, 33
  br i1 %cmp51.i, label %if.then52.i, label %if.else110.i

if.then52.i:                                      ; preds = %for.end50.i
  %call.i = tail call i32 @any_condjump_p(%struct.rtx_def* %37) #5
  %tobool53.i = icmp eq i32 %call.i, 0
  br i1 %tobool53.i, label %if.else101.i, label %if.then54.i

if.then54.i:                                      ; preds = %if.then52.i
  %aux55.i = getelementptr inbounds %struct.basic_block_def* %bb.1262.i, i64 0, i32 10
  %39 = load i8** %aux55.i, align 8, !tbaa !0
  %next56.i = getelementptr inbounds i8* %39, i64 16
  %40 = bitcast i8* %next56.i to %struct.basic_block_def**
  %41 = load %struct.basic_block_def** %40, align 8, !tbaa !0
  %dest.i = getelementptr inbounds %struct.edge_def* %e_fall.1.i, i64 0, i32 3
  %42 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !0
  %cmp57.i = icmp eq %struct.basic_block_def* %41, %42
  br i1 %cmp57.i, label %for.inc148.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then54.i
  %tobool60.i = icmp eq %struct.basic_block_def* %41, null
  %cmp62.i = icmp eq %struct.basic_block_def* %42, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %or.cond.i = and i1 %tobool60.i, %cmp62.i
  br i1 %or.cond.i, label %for.inc148.i, label %if.end64.i

if.end64.i:                                       ; preds = %lor.lhs.false.i
  %dest67.i = getelementptr inbounds %struct.edge_def* %e_taken.1.i, i64 0, i32 3
  %43 = load %struct.basic_block_def** %dest67.i, align 8, !tbaa !0
  %cmp68.i = icmp eq %struct.basic_block_def* %41, %43
  br i1 %cmp68.i, label %if.else89.i, label %if.then69.i

if.then69.i:                                      ; preds = %if.end64.i
  %call70.i = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %37, i32 16, %struct.rtx_def* null) #5
  %tobool71.i = icmp eq %struct.rtx_def* %call70.i, null
  br i1 %tobool71.i, label %if.end128.i, label %land.lhs.true72.i

land.lhs.true72.i:                                ; preds = %if.then69.i
  %arrayidx74.i = getelementptr inbounds %struct.rtx_def* %call70.i, i64 0, i32 1, i64 0
  %rtx75.i = bitcast %union.rtunion_def* %arrayidx74.i to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx75.i, align 8, !tbaa !0
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 1, i64 0, i32 0
  %45 = load i64* %rtwint.i, align 8, !tbaa !4
  %cmp78.i = icmp slt i64 %45, 5000
  br i1 %cmp78.i, label %land.lhs.true79.i, label %if.end128.i

land.lhs.true79.i:                                ; preds = %land.lhs.true72.i
  %46 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !0
  %call81.i = tail call fastcc %struct.rtx_def* @label_for_bb(%struct.basic_block_def* %46) #5
  %call82.i = tail call i32 @invert_jump(%struct.rtx_def* %37, %struct.rtx_def* %call81.i, i32 0) #5
  %tobool83.i = icmp eq i32 %call82.i, 0
  br i1 %tobool83.i, label %if.end128.i, label %if.then84.i

if.then84.i:                                      ; preds = %land.lhs.true79.i
  %flags85.i = getelementptr inbounds %struct.edge_def* %e_fall.1.i, i64 0, i32 6
  %47 = load i32* %flags85.i, align 4, !tbaa !3
  %and86.i = and i32 %47, -2
  store i32 %and86.i, i32* %flags85.i, align 4, !tbaa !3
  %flags87.i = getelementptr inbounds %struct.edge_def* %e_taken.1.i, i64 0, i32 6
  %48 = load i32* %flags87.i, align 4, !tbaa !3
  %or.i = or i32 %48, 1
  store i32 %or.i, i32* %flags87.i, align 4, !tbaa !3
  tail call void @update_br_prob_note(%struct.basic_block_def* %bb.1262.i) #5
  br label %if.end128.i

if.else89.i:                                      ; preds = %if.end64.i
  %call91.i = tail call fastcc %struct.rtx_def* @label_for_bb(%struct.basic_block_def* %42) #5
  %call92.i = tail call i32 @invert_jump(%struct.rtx_def* %37, %struct.rtx_def* %call91.i, i32 0) #5
  %tobool93.i = icmp eq i32 %call92.i, 0
  br i1 %tobool93.i, label %if.end128.i, label %if.then94.i

if.then94.i:                                      ; preds = %if.else89.i
  %flags95.i = getelementptr inbounds %struct.edge_def* %e_fall.1.i, i64 0, i32 6
  %49 = load i32* %flags95.i, align 4, !tbaa !3
  %and96.i = and i32 %49, -2
  store i32 %and96.i, i32* %flags95.i, align 4, !tbaa !3
  %flags97.i = getelementptr inbounds %struct.edge_def* %e_taken.1.i, i64 0, i32 6
  %50 = load i32* %flags97.i, align 4, !tbaa !3
  %or98.i = or i32 %50, 1
  store i32 %or98.i, i32* %flags97.i, align 4, !tbaa !3
  tail call void @update_br_prob_note(%struct.basic_block_def* %bb.1262.i) #5
  br label %for.inc148.i

if.else101.i:                                     ; preds = %if.then52.i
  %call102.i = tail call i32 @returnjump_p(%struct.rtx_def* %37) #5
  %tobool103.i = icmp ne i32 %call102.i, 0
  %tobool106.i = icmp eq %struct.edge_def* %e_fall.1.i, null
  %or.cond250.i = or i1 %tobool103.i, %tobool106.i
  br i1 %or.cond250.i, label %for.inc148.i, label %if.end108.i

if.end108.i:                                      ; preds = %if.else101.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 447, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.fixup_reorder_chain, i64 0, i64 0)) #7
  unreachable

if.else110.i:                                     ; preds = %for.end50.i
  %tobool111.i = icmp eq %struct.edge_def* %e_fall.1.i, null
  br i1 %tobool111.i, label %for.inc148.i, label %if.end113.i

if.end113.i:                                      ; preds = %if.else110.i
  %aux114.i = getelementptr inbounds %struct.basic_block_def* %bb.1262.i, i64 0, i32 10
  %51 = load i8** %aux114.i, align 8, !tbaa !0
  %next115.i = getelementptr inbounds i8* %51, i64 16
  %52 = bitcast i8* %next115.i to %struct.basic_block_def**
  %53 = load %struct.basic_block_def** %52, align 8, !tbaa !0
  %dest116.i = getelementptr inbounds %struct.edge_def* %e_fall.1.i, i64 0, i32 3
  %54 = load %struct.basic_block_def** %dest116.i, align 8, !tbaa !0
  %cmp117.i = icmp eq %struct.basic_block_def* %53, %54
  br i1 %cmp117.i, label %for.inc148.i, label %if.end119.i

if.end119.i:                                      ; preds = %if.end113.i
  %tobool122.i = icmp eq %struct.basic_block_def* %53, null
  %cmp125.i = icmp eq %struct.basic_block_def* %54, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %or.cond251.i = and i1 %tobool122.i, %cmp125.i
  br i1 %or.cond251.i, label %for.inc148.i, label %if.end128.i

if.end128.i:                                      ; preds = %if.end119.i, %if.else89.i, %if.then84.i, %land.lhs.true79.i, %land.lhs.true72.i, %if.then69.i
  %e_fall.2.i = phi %struct.edge_def* [ %e_taken.1.i, %if.then84.i ], [ %e_fall.1.i, %land.lhs.true79.i ], [ %e_fall.1.i, %land.lhs.true72.i ], [ %e_fall.1.i, %if.then69.i ], [ %e_fall.1.i, %if.else89.i ], [ %e_fall.1.i, %if.end119.i ]
  %call129.i = tail call %struct.basic_block_def* @force_nonfallthru(%struct.edge_def* %e_fall.2.i) #5
  %tobool130.i = icmp eq %struct.basic_block_def* %call129.i, null
  br i1 %tobool130.i, label %for.inc148.i, label %if.then131.i

if.then131.i:                                     ; preds = %if.end128.i
  tail call void @alloc_aux_for_block(%struct.basic_block_def* %call129.i, i32 32) #5
  %head.i = getelementptr inbounds %struct.basic_block_def* %call129.i, i64 0, i32 0
  %55 = load %struct.rtx_def** %head.i, align 8, !tbaa !0
  %aux132.i = getelementptr inbounds %struct.basic_block_def* %call129.i, i64 0, i32 10
  %56 = load i8** %aux132.i, align 8, !tbaa !0
  %eff_head133.i = bitcast i8* %56 to %struct.rtx_def**
  store %struct.rtx_def* %55, %struct.rtx_def** %eff_head133.i, align 8, !tbaa !0
  %end134.i = getelementptr inbounds %struct.basic_block_def* %call129.i, i64 0, i32 1
  %57 = load %struct.rtx_def** %end134.i, align 8, !tbaa !0
  %arrayidx136.i = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 1, i64 2
  %rtx137.i = bitcast %union.rtunion_def* %arrayidx136.i to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx137.i, align 8, !tbaa !0
  %59 = load i8** %aux132.i, align 8, !tbaa !0
  %eff_end139.i = getelementptr inbounds i8* %59, i64 8
  %60 = bitcast i8* %eff_end139.i to %struct.rtx_def**
  store %struct.rtx_def* %58, %struct.rtx_def** %60, align 8, !tbaa !0
  %61 = load i8** %aux132.i, align 8, !tbaa !0
  %visited.i = getelementptr inbounds i8* %61, i64 24
  %62 = bitcast i8* %visited.i to i32*
  store i32 1, i32* %62, align 4, !tbaa !3
  %aux141.i = getelementptr inbounds %struct.basic_block_def* %bb.1262.i, i64 0, i32 10
  %63 = load i8** %aux141.i, align 8, !tbaa !0
  %next142.i = getelementptr inbounds i8* %63, i64 16
  %64 = bitcast i8* %next142.i to %struct.basic_block_def**
  %65 = load %struct.basic_block_def** %64, align 8, !tbaa !0
  %next144.i = getelementptr inbounds i8* %61, i64 16
  %66 = bitcast i8* %next144.i to %struct.basic_block_def**
  store %struct.basic_block_def* %65, %struct.basic_block_def** %66, align 8, !tbaa !0
  %67 = load i8** %aux141.i, align 8, !tbaa !0
  %next146.i = getelementptr inbounds i8* %67, i64 16
  %68 = bitcast i8* %next146.i to %struct.basic_block_def**
  store %struct.basic_block_def* %call129.i, %struct.basic_block_def** %68, align 8, !tbaa !0
  br label %for.inc148.i

for.inc148.i:                                     ; preds = %if.end128.i, %if.else110.i, %if.else101.i, %for.body33.i, %if.then131.i, %if.end119.i, %if.end113.i, %if.then94.i, %lor.lhs.false.i, %if.then54.i
  %bb.2.i = phi %struct.basic_block_def* [ %bb.1262.i, %if.then54.i ], [ %call129.i, %if.then131.i ], [ %bb.1262.i, %if.then94.i ], [ %bb.1262.i, %if.end113.i ], [ %bb.1262.i, %lor.lhs.false.i ], [ %bb.1262.i, %if.end119.i ], [ %bb.1262.i, %for.body33.i ], [ %bb.1262.i, %if.else101.i ], [ %bb.1262.i, %if.else110.i ], [ %bb.1262.i, %if.end128.i ]
  %aux149.i = getelementptr inbounds %struct.basic_block_def* %bb.2.i, i64 0, i32 10
  %69 = load i8** %aux149.i, align 8, !tbaa !0
  %next150.i = getelementptr inbounds i8* %69, i64 16
  %70 = bitcast i8* %next150.i to %struct.basic_block_def**
  %bb.1.i13 = load %struct.basic_block_def** %70, align 8
  %tobool32.i = icmp eq %struct.basic_block_def* %bb.1.i13, null
  br i1 %tobool32.i, label %for.cond31.for.end151_crit_edge.i, label %for.body33.i

for.cond31.for.end151_crit_edge.i:                ; preds = %for.inc148.i
  %.pre.i = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data152.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %.pre.i, i64 0, i32 4
  %arrayidx154.phi.trans.insert.i = bitcast %union.varray_data_tag* %data152.phi.trans.insert.i to %struct.basic_block_def**
  %.pre273.i = load %struct.basic_block_def** %arrayidx154.phi.trans.insert.i, align 8, !tbaa !0
  br label %for.end151.i

for.end151.i:                                     ; preds = %for.cond31.for.end151_crit_edge.i, %while.end.i10
  %71 = phi %struct.basic_block_def* [ %.pre273.i, %for.cond31.for.end151_crit_edge.i ], [ null, %while.end.i10 ]
  %72 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !0
  %tobool155.i = icmp eq %struct._IO_FILE* %72, null
  br i1 %tobool155.i, label %for.cond159.preheader.i, label %if.then156.i

if.then156.i:                                     ; preds = %for.end151.i
  %73 = tail call i64 @fwrite(i8* getelementptr inbounds ([21 x i8]* @.str2, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %72) #4
  br label %for.cond159.preheader.i

for.cond159.preheader.i:                          ; preds = %if.then156.i, %for.end151.i
  %tobool160252.i = icmp eq %struct.basic_block_def* %71, null
  br i1 %tobool160252.i, label %fixup_reorder_chain.exit, label %for.body161.i

for.body161.i:                                    ; preds = %for.cond159.preheader.i, %if.end168.i.for.body161.i_crit_edge
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end168.i.for.body161.i_crit_edge ], [ 0, %for.cond159.preheader.i ]
  %bb.3254.i = phi %struct.basic_block_def* [ %81, %if.end168.i.for.body161.i_crit_edge ], [ %71, %for.cond159.preheader.i ]
  %74 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !0
  %tobool162.i = icmp eq %struct._IO_FILE* %74, null
  %index169.pre.i = getelementptr inbounds %struct.basic_block_def* %bb.3254.i, i64 0, i32 11
  br i1 %tobool162.i, label %for.body161.if.end168_crit_edge.i, label %if.then163.i

for.body161.if.end168_crit_edge.i:                ; preds = %for.body161.i
  %.pre274.i = trunc i64 %indvars.iv.i to i32
  br label %if.end168.i

if.then163.i:                                     ; preds = %for.body161.i
  %75 = load i32* %index169.pre.i, align 4, !tbaa !3
  %cmp165.i = icmp sge i32 %75, %15
  %cond.i = select i1 %cmp165.i, i8* getelementptr inbounds ([14 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str5, i64 0, i64 0)
  %frequency.i = getelementptr inbounds %struct.basic_block_def* %bb.3254.i, i64 0, i32 14
  %76 = load i32* %frequency.i, align 4, !tbaa !3
  %77 = trunc i64 %indvars.iv.i to i32
  %call167.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([21 x i8]* @.str3, i64 0, i64 0), i32 %77, i8* %cond.i, i32 %75, i32 %76) #5
  br label %if.end168.i

if.end168.i:                                      ; preds = %if.then163.i, %for.body161.if.end168_crit_edge.i
  %.pre-phi.i = phi i32 [ %.pre274.i, %for.body161.if.end168_crit_edge.i ], [ %77, %if.then163.i ]
  store i32 %.pre-phi.i, i32* %index169.pre.i, align 4, !tbaa !3
  %78 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data170.i = getelementptr inbounds %struct.varray_head_tag* %78, i64 0, i32 4
  %bb171.i = bitcast %union.varray_data_tag* %data170.i to [1 x %struct.basic_block_def*]*
  %arrayidx172.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb171.i, i64 0, i64 %indvars.iv.i
  store %struct.basic_block_def* %bb.3254.i, %struct.basic_block_def** %arrayidx172.i, align 8, !tbaa !0
  %aux174.i = getelementptr inbounds %struct.basic_block_def* %bb.3254.i, i64 0, i32 10
  %79 = load i8** %aux174.i, align 8, !tbaa !0
  %next175.i = getelementptr inbounds i8* %79, i64 16
  %80 = bitcast i8* %next175.i to %struct.basic_block_def**
  %81 = load %struct.basic_block_def** %80, align 8, !tbaa !0
  %tobool160.i = icmp eq %struct.basic_block_def* %81, null
  br i1 %tobool160.i, label %fixup_reorder_chain.exit, label %if.end168.i.for.body161.i_crit_edge

if.end168.i.for.body161.i_crit_edge:              ; preds = %if.end168.i
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  br label %for.body161.i

fixup_reorder_chain.exit:                         ; preds = %if.end168.i, %for.cond159.preheader.i
  tail call void @scope_to_insns_finalize() #6
  tail call void @free_aux_for_blocks() #5
  ret void
}
