define internal fastcc void @dbxout_type_method_1(%union.tree_node* %decl, i8* %debug_name) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %if.end29, label %if.else

if.else:                                          ; preds = %entry
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %2 = load i8** %values, align 8
  %value = getelementptr inbounds i8* %2, i64 32
  %3 = bitcast i8* %value to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  %type6 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type6, align 8, !tbaa !0
  %readonly_flag = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load8 = load i32* %6, align 8
  %bf.clear9 = and i32 %bf.load8, 4096
  %tobool = icmp eq i32 %bf.clear9, 0
  %. = select i1 %tobool, i8 65, i8 66
  %bf.clear17 = and i32 %bf.load8, 2048
  %tobool18 = icmp eq i32 %bf.clear17, 0
  %add21 = add i8 %., 2
  %c1.1 = select i1 %tobool18, i8 %., i8 %add21
  %vindex = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 22
  %7 = load %union.tree_node** %vindex, align 8, !tbaa !0
  %tobool25 = icmp eq %union.tree_node* %7, null
  %.105 = select i1 %tobool25, i32 46, i32 42
  %phitmp112 = zext i8 %c1.1 to i32
  br label %if.end29

if.end29:                                         ; preds = %if.else, %entry
  %c2.0 = phi i32 [ 63, %entry ], [ %.105, %if.else ]
  %c1.2 = phi i32 [ 65, %entry ], [ %phitmp112, %if.else ]
  %8 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !0
  %private_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast [4 x i8]* %private_flag to i32*
  %bf.load31 = load i32* %9, align 8
  %bf.clear33 = and i32 %bf.load31, 1048576
  %tobool34 = icmp eq i32 %bf.clear33, 0
  br i1 %tobool34, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end29
  %bf.clear38 = lshr i32 %bf.load31, 21
  %10 = and i32 %bf.clear38, 1
  %11 = sub i32 50, %10
  br label %cond.end

cond.end:                                         ; preds = %if.end29, %cond.false
  %cond40 = phi i32 [ %11, %cond.false ], [ 48, %if.end29 ]
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([11 x i8]* @.str48, i64 0, i64 0), i8* %debug_name, i32 %cond40, i32 %c1.2, i32 %c2.0) #6
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %12 = load %union.tree_node** %assembler_name, align 8, !tbaa !0
  %cmp44 = icmp eq %union.tree_node* %12, null
  br i1 %cmp44, label %cond.end48, label %cond.end48.thread

cond.end48.thread:                                ; preds = %cond.end
  %id106 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 1
  %len107 = bitcast i8** %id106 to i32*
  %13 = load i32* %len107, align 4, !tbaa !3
  %add51108 = add i32 %13, 6
  %conv52109 = zext i32 %add51108 to i64
  br label %cond.end59

cond.end48:                                       ; preds = %cond.end
  %14 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !0
  tail call void %14(%union.tree_node* %decl) #6
  %.pr = load %union.tree_node** %assembler_name, align 8, !tbaa !0
  %id = getelementptr inbounds %union.tree_node* %.pr, i64 0, i32 0, i32 1
  %len = bitcast i8** %id to i32*
  %15 = load i32* %len, align 4, !tbaa !3
  %add51 = add i32 %15, 6
  %conv52 = zext i32 %add51 to i64
  %cmp55 = icmp eq %union.tree_node* %.pr, null
  br i1 %cmp55, label %cond.false58, label %cond.end59

cond.false58:                                     ; preds = %cond.end48
  %16 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !0
  tail call void %16(%union.tree_node* %decl) #6
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !0
  br label %cond.end59

cond.end59:                                       ; preds = %cond.end48.thread, %cond.end48, %cond.false58
  %17 = phi %union.tree_node* [ %12, %cond.end48.thread ], [ %.pr, %cond.end48 ], [ %.pre, %cond.false58 ]
  %conv52111 = phi i64 [ %conv52109, %cond.end48.thread ], [ %conv52, %cond.end48 ], [ %conv52, %cond.false58 ]
  %id63 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds i8** %id63, i64 1
  %19 = load i8** %18, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %debug_name to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64
  %20 = load i32* @current_sym_nchars, align 4, !tbaa !3
  %conv64103 = zext i32 %20 to i64
  %sub.ptr.sub102 = sub i64 %conv52111, %sub.ptr.lhs.cast
  %sub = add i64 %sub.ptr.sub102, %sub.ptr.rhs.cast
  %add65 = add i64 %sub, %conv64103
  %conv66 = trunc i64 %add65 to i32
  store i32 %conv66, i32* @current_sym_nchars, align 4, !tbaa !3
  %vindex68 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 22
  %21 = load %union.tree_node** %vindex68, align 8, !tbaa !0
  %tobool69 = icmp eq %union.tree_node* %21, null
  br i1 %tobool69, label %if.end83, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end59
  %call72 = tail call i32 @host_integerp(%union.tree_node* %21, i32 0) #6
  %tobool73 = icmp eq i32 %call72, 0
  br i1 %tobool73, label %if.end83, label %if.then74

if.then74:                                        ; preds = %land.lhs.true
  %22 = load %union.tree_node** %vindex68, align 8, !tbaa !0
  %call77 = tail call i64 @tree_low_cst(%union.tree_node* %22, i32 0) #6
  tail call fastcc void @print_wide_int(i64 %call77) #8
  %23 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !0
  %call78 = tail call i32 @_IO_putc(i32 59, %struct._IO_FILE* %23) #6
  %24 = load i32* @current_sym_nchars, align 4, !tbaa !3
  %add79 = add nsw i32 %24, 1
  store i32 %add79, i32* @current_sym_nchars, align 4, !tbaa !3
  %context = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %25 = load %union.tree_node** %context, align 8, !tbaa !0
  tail call fastcc void @dbxout_type(%union.tree_node* %25, i32 0) #8
  %26 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !0
  %fputc = tail call i32 @fputc(i32 59, %struct._IO_FILE* %26) #5
  %27 = load i32* @current_sym_nchars, align 4, !tbaa !3
  %add82 = add nsw i32 %27, 1
  store i32 %add82, i32* @current_sym_nchars, align 4, !tbaa !3
  br label %if.end83

if.end83:                                         ; preds = %land.lhs.true, %cond.end59, %if.then74
  ret void
}
