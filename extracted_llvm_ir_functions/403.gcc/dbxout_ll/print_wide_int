define internal fastcc void @print_wide_int(i64 %c) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i64 %c}, i64 0, metadata !1233), !dbg !2488
  tail call void @llvm.dbg.value(metadata !598, i64 0, metadata !1234), !dbg !2489
  %0 = load %struct._IO_FILE** @asmfile, align 8, !dbg !2490, !tbaa !1468
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8]* @.str8, i64 0, i64 0), i64 %c) #7, !dbg !2490
  %cmp = icmp slt i64 %c, 0, !dbg !2491
  tail call void @llvm.dbg.value(metadata !1618, i64 0, metadata !1234), !dbg !2492
  %sub = sub nsw i64 0, %c, !dbg !2492
  tail call void @llvm.dbg.value(metadata !{i64 %sub}, i64 0, metadata !1233), !dbg !2492
  %sub.c = select i1 %cmp, i64 %sub, i64 %c, !dbg !2491
  %c.lobit = lshr i64 %c, 63, !dbg !2491
  %1 = trunc i64 %c.lobit to i32, !dbg !2491
  %cmp19 = icmp sgt i64 %sub.c, 0, !dbg !2493
  br i1 %cmp19, label %while.body, label %while.end, !dbg !2493

while.body:                                       ; preds = %entry, %while.body
  %c.addr.010 = phi i64 [ %div, %while.body ], [ %sub.c, %entry ]
  %div = sdiv i64 %c.addr.010, 10, !dbg !2494
  tail call void @llvm.dbg.value(metadata !{i64 %div}, i64 0, metadata !1233), !dbg !2494
  %cmp1 = icmp sgt i64 %c.addr.010, 9, !dbg !2493
  br i1 %cmp1, label %while.body, label %while.end, !dbg !2493

while.end:                                        ; preds = %while.body, %entry
  %inc2 = add nsw i32 %1, 1, !dbg !2494
  tail call void @llvm.dbg.value(metadata !{i32 %inc2}, i64 0, metadata !1234), !dbg !2494
  %2 = load i32* @current_sym_nchars, align 4, !dbg !2495, !tbaa !1472
  %add = add nsw i32 %inc2, %2, !dbg !2495
  store i32 %add, i32* @current_sym_nchars, align 4, !dbg !2495, !tbaa !1472
  ret void, !dbg !2496
}
