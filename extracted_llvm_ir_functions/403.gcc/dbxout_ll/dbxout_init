define internal void @dbxout_init(i8* %input_file_name) #0 {
entry:
  %ltext_label_name = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata !{i8* %input_file_name}, i64 0, metadata !1401), !dbg !1464
  %0 = getelementptr inbounds [100 x i8]* %ltext_label_name, i64 0, i64 0, !dbg !1465
  call void @llvm.lifetime.start(i64 100, i8* %0) #6, !dbg !1465
  call void @llvm.dbg.declare(metadata !{[100 x i8]* %ltext_label_name}, metadata !1402), !dbg !1465
  %call = call %union.tree_node* @getdecls() #7, !dbg !1466
  call void @llvm.dbg.value(metadata !{%union.tree_node* %call}, i64 0, metadata !1403), !dbg !1466
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1467, !tbaa !1468
  store %struct._IO_FILE* %1, %struct._IO_FILE** @asmfile, align 8, !dbg !1467, !tbaa !1468
  store i32 100, i32* @typevec_len, align 4, !dbg !1471, !tbaa !1472
  %call1 = call noalias i8* @xcalloc(i64 100, i64 12) #7, !dbg !1473
  %2 = bitcast i8* %call1 to %struct.typeinfo*, !dbg !1473
  store %struct.typeinfo* %2, %struct.typeinfo** @typevec, align 8, !dbg !1473, !tbaa !1468
  %call2 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([7 x i8]* @.str59, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str71, i64 0, i64 0), i32 0) #7, !dbg !1474
  %3 = load i32* @use_gnu_debug_info_extensions, align 4, !dbg !1476, !tbaa !1472
  %tobool = icmp eq i32 %3, 0, !dbg !1476
  br i1 %tobool, label %if.end20, label %if.then, !dbg !1476

if.then:                                          ; preds = %entry
  %4 = load i8** @cwd, align 8, !dbg !1477, !tbaa !1468
  %tobool3 = icmp eq i8* %4, null, !dbg !1477
  br i1 %tobool3, label %land.lhs.true, label %if.then14, !dbg !1477

land.lhs.true:                                    ; preds = %if.then
  %call4 = call i8* @getpwd() #7, !dbg !1477
  store i8* %call4, i8** @cwd, align 8, !dbg !1477, !tbaa !1468
  %tobool5 = icmp eq i8* %call4, null, !dbg !1477
  br i1 %tobool5, label %if.end20, label %land.lhs.true6, !dbg !1477

land.lhs.true6:                                   ; preds = %land.lhs.true
  %5 = load i8* %call4, align 1, !dbg !1477, !tbaa !1469
  %tobool7 = icmp eq i8 %5, 0, !dbg !1477
  br i1 %tobool7, label %if.then11, label %lor.lhs.false, !dbg !1477

lor.lhs.false:                                    ; preds = %land.lhs.true6
  %call8 = call i64 @strlen(i8* %call4) #8, !dbg !1477
  %sub = add i64 %call8, -1, !dbg !1477
  %arrayidx = getelementptr inbounds i8* %call4, i64 %sub, !dbg !1477
  %6 = load i8* %arrayidx, align 1, !dbg !1477, !tbaa !1469
  %cmp = icmp eq i8 %6, 47, !dbg !1477
  br i1 %cmp, label %if.end, label %if.then11, !dbg !1477

if.then11:                                        ; preds = %lor.lhs.false, %land.lhs.true6
  %call12 = call noalias i8* (i8*, ...)* @concat(i8* %call4, i8* getelementptr inbounds ([2 x i8]* @.str75, i64 0, i64 0), i8* null) #7, !dbg !1479
  store i8* %call12, i8** @cwd, align 8, !dbg !1479, !tbaa !1468
  br label %if.end, !dbg !1479

if.end:                                           ; preds = %lor.lhs.false, %if.then11
  %7 = phi i8* [ %call12, %if.then11 ], [ %call4, %lor.lhs.false ], !dbg !1480
  %tobool13 = icmp eq i8* %7, null, !dbg !1480
  br i1 %tobool13, label %if.end20, label %if.then14, !dbg !1480

if.then14:                                        ; preds = %if.then, %if.end
  %8 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1481, !tbaa !1468
  %9 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %8), !dbg !1481
  %10 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1483, !tbaa !1468
  %11 = load i8** @cwd, align 8, !dbg !1483, !tbaa !1468
  call void @output_quoted_string(%struct._IO_FILE* %10, i8* %11) #7, !dbg !1483
  %12 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1484, !tbaa !1468
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i32 100) #7, !dbg !1484
  %13 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1485, !tbaa !1468
  call void @assemble_name(%struct._IO_FILE* %13, i8* %0) #7, !dbg !1485
  %14 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1486, !tbaa !1468
  %call18 = call i32 @fputc(i32 10, %struct._IO_FILE* %14) #7, !dbg !1486
  br label %if.end20, !dbg !1487

if.end20:                                         ; preds = %land.lhs.true, %if.end, %entry, %if.then14
  %15 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1488, !tbaa !1468
  %16 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %15), !dbg !1488
  %17 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1489, !tbaa !1468
  call void @output_quoted_string(%struct._IO_FILE* %17, i8* %input_file_name) #7, !dbg !1489
  %18 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1490, !tbaa !1468
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i32 100) #7, !dbg !1490
  %19 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1491, !tbaa !1468
  call void @assemble_name(%struct._IO_FILE* %19, i8* %0) #7, !dbg !1491
  %20 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1492, !tbaa !1468
  %call24 = call i32 @fputc(i32 10, %struct._IO_FILE* %20) #7, !dbg !1492
  call void @text_section() #7, !dbg !1493
  %21 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1494, !tbaa !1468
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([8 x i8]* @.str61, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str71, i64 0, i64 0), i32 0) #7, !dbg !1494
  %22 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1496, !tbaa !1468
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([17 x i8]* @.str76, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8]* @.str77, i64 0, i64 0), i32 60) #7, !dbg !1496
  store i8* %input_file_name, i8** @lastfile, align 8, !dbg !1497, !tbaa !1468
  store i32 1, i32* @next_type_number, align 4, !dbg !1498, !tbaa !1472
  %call30 = call noalias i8* @xmalloc(i64 16) #7, !dbg !1499
  %23 = bitcast i8* %call30 to %struct.dbx_file*, !dbg !1499
  store %struct.dbx_file* %23, %struct.dbx_file** @current_file, align 8, !dbg !1499, !tbaa !1468
  %next = bitcast i8* %call30 to %struct.dbx_file**, !dbg !1500
  store %struct.dbx_file* null, %struct.dbx_file** %next, align 8, !dbg !1500, !tbaa !1468
  %file_number = getelementptr inbounds i8* %call30, i64 8, !dbg !1501
  %24 = bitcast i8* %file_number to i32*, !dbg !1501
  store i32 0, i32* %24, align 4, !dbg !1501, !tbaa !1472
  %next_type_number = getelementptr inbounds i8* %call30, i64 12, !dbg !1502
  %25 = bitcast i8* %next_type_number to i32*, !dbg !1502
  store i32 1, i32* %25, align 4, !dbg !1502, !tbaa !1472
  store i32 1, i32* @next_file_number, align 4, !dbg !1503, !tbaa !1472
  %26 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !1504, !tbaa !1468
  %27 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 11, !dbg !1504
  %28 = load %union.tree_node** %27, align 8, !dbg !1504, !tbaa !1468
  %call31 = call i32 @dbxout_symbol(%union.tree_node* %28, i32 undef) #9, !dbg !1504
  %29 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !dbg !1505, !tbaa !1468
  %30 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 11, !dbg !1505
  %31 = load %union.tree_node** %30, align 8, !dbg !1505, !tbaa !1468
  %call34 = call i32 @dbxout_symbol(%union.tree_node* %31, i32 undef) #9, !dbg !1505
  call fastcc void @dbxout_typedefs(%union.tree_node* %call) #9, !dbg !1506
  call void @llvm.lifetime.end(i64 100, i8* %0) #6, !dbg !1507
  ret void, !dbg !1507
}
