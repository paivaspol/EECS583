define internal void @dbxout_start_source_file(i32 %line, i8* %filename) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %line}, i64 0, metadata !1396), !dbg !1511
  tail call void @llvm.dbg.value(metadata !{i8* %filename}, i64 0, metadata !1397), !dbg !1512
  %call = tail call noalias i8* @xmalloc(i64 16) #7, !dbg !1513
  %0 = bitcast i8* %call to %struct.dbx_file*, !dbg !1513
  tail call void @llvm.dbg.value(metadata !{%struct.dbx_file* %0}, i64 0, metadata !1398), !dbg !1513
  %1 = load %struct.dbx_file** @current_file, align 8, !dbg !1514, !tbaa !1468
  %next = bitcast i8* %call to %struct.dbx_file**, !dbg !1514
  store %struct.dbx_file* %1, %struct.dbx_file** %next, align 8, !dbg !1514, !tbaa !1468
  %2 = load i32* @next_file_number, align 4, !dbg !1515, !tbaa !1472
  %inc = add nsw i32 %2, 1, !dbg !1515
  store i32 %inc, i32* @next_file_number, align 4, !dbg !1515, !tbaa !1472
  %file_number = getelementptr inbounds i8* %call, i64 8, !dbg !1515
  %3 = bitcast i8* %file_number to i32*, !dbg !1515
  store i32 %2, i32* %3, align 4, !dbg !1515, !tbaa !1472
  %next_type_number = getelementptr inbounds i8* %call, i64 12, !dbg !1516
  %4 = bitcast i8* %next_type_number to i32*, !dbg !1516
  store i32 1, i32* %4, align 4, !dbg !1516, !tbaa !1472
  store %struct.dbx_file* %0, %struct.dbx_file** @current_file, align 8, !dbg !1517, !tbaa !1468
  %5 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1518, !tbaa !1468
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %5), !dbg !1518
  %7 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1519, !tbaa !1468
  tail call void @output_quoted_string(%struct._IO_FILE* %7, i8* %filename) #7, !dbg !1519
  %8 = load %struct._IO_FILE** @asmfile, align 8, !dbg !1520, !tbaa !1468
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([11 x i8]* @.str74, i64 0, i64 0), i32 130) #7, !dbg !1520
  ret void, !dbg !1521
}
