define internal void @dbxout_start_source_file(i32 %line, i8* %filename) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 16) #6
  %0 = bitcast i8* %call to %struct.dbx_file*
  %1 = load %struct.dbx_file** @current_file, align 8, !tbaa !0
  %next = bitcast i8* %call to %struct.dbx_file**
  store %struct.dbx_file* %1, %struct.dbx_file** %next, align 8, !tbaa !0
  %2 = load i32* @next_file_number, align 4, !tbaa !3
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @next_file_number, align 4, !tbaa !3
  %file_number = getelementptr inbounds i8* %call, i64 8
  %3 = bitcast i8* %file_number to i32*
  store i32 %2, i32* %3, align 4, !tbaa !3
  %next_type_number = getelementptr inbounds i8* %call, i64 12
  %4 = bitcast i8* %next_type_number to i32*
  store i32 1, i32* %4, align 4, !tbaa !3
  store %struct.dbx_file* %0, %struct.dbx_file** @current_file, align 8, !tbaa !0
  %5 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !0
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %5)
  %7 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !0
  tail call void @output_quoted_string(%struct._IO_FILE* %7, i8* %filename) #6
  %8 = load %struct._IO_FILE** @asmfile, align 8, !tbaa !0
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([11 x i8]* @.str74, i64 0, i64 0), i32 130) #6
  ret void
}
