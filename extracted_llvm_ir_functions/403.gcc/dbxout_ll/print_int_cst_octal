define internal fastcc void @print_int_cst_octal(%union.tree_node* nocapture %c) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %c}, i64 0, metadata !1237), !dbg !2457
  %int_cst1 = getelementptr inbounds %union.tree_node* %c, i64 0, i32 0, i32 2, !dbg !2458
  %high2 = getelementptr inbounds i32* %int_cst1, i64 2, !dbg !2458
  %0 = bitcast i32* %high2 to i64*, !dbg !2458
  %1 = load i64* %0, align 8, !dbg !2458, !tbaa !2118
  tail call void @llvm.dbg.value(metadata !{i64 %1}, i64 0, metadata !1238), !dbg !2458
  %low5 = bitcast i32* %int_cst1 to i64*, !dbg !2459
  %2 = load i64* %low5, align 8, !dbg !2459, !tbaa !2118
  tail call void @llvm.dbg.value(metadata !{i64 %2}, i64 0, metadata !1239), !dbg !2459
  tail call void @llvm.dbg.value(metadata !2460, i64 0, metadata !1240), !dbg !2461
  %type = getelementptr inbounds %union.tree_node* %c, i64 0, i32 0, i32 0, i32 1, !dbg !2462
  %3 = load %union.tree_node** %type, align 8, !dbg !2462, !tbaa !1468
  %type6 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !2462
  %precision = getelementptr inbounds %struct.tree_type* %type6, i64 0, i32 6, !dbg !2462
  %4 = bitcast [4 x i8]* %precision to i32*, !dbg !2462
  %bf.load = load i32* %4, align 4, !dbg !2462
  %bf.clear = and i32 %bf.load, 511, !dbg !2462
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !1241), !dbg !2462
  %cmp = icmp eq i32 %bf.clear, 128, !dbg !2463
  br i1 %cmp, label %if.end19, label %if.else, !dbg !2463

if.else:                                          ; preds = %entry
  %cmp7 = icmp ugt i32 %bf.clear, 64, !dbg !2464
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !2464

if.then8:                                         ; preds = %if.else
  %sub = add i32 %bf.clear, -64, !dbg !2465
  %sh_prom = zext i32 %sub to i64, !dbg !2465
  %shl = shl i64 1, %sh_prom, !dbg !2465
  %sub9 = add nsw i64 %shl, -1, !dbg !2465
  %and = and i64 %sub9, %1, !dbg !2465
  tail call void @llvm.dbg.value(metadata !{i64 %and}, i64 0, metadata !1238), !dbg !2465
  br label %if.end19, !dbg !2465

if.else10:                                        ; preds = %if.else
  %cmp11 = icmp eq i32 %bf.clear, 64, !dbg !2466
  tail call void @llvm.dbg.value(metadata !2467, i64 0, metadata !1238), !dbg !2468
  br i1 %cmp11, label %if.end19, label %if.else13, !dbg !2466

if.else13:                                        ; preds = %if.else10
  %sh_prom14 = zext i32 %bf.clear to i64, !dbg !2469
  %shl15 = shl i64 1, %sh_prom14, !dbg !2469
  %sub16 = add nsw i64 %shl15, -1, !dbg !2469
  %and17 = and i64 %sub16, %2, !dbg !2469
  tail call void @llvm.dbg.value(metadata !{i64 %and17}, i64 0, metadata !1239), !dbg !2469
  br label %if.end19

if.end19:                                         ; preds = %if.then8, %if.else10, %if.else13, %entry
  %low.0 = phi i64 [ %2, %entry ], [ %2, %if.then8 ], [ %2, %if.else10 ], [ %and17, %if.else13 ]
  %high.0 = phi i64 [ %1, %entry ], [ %and, %if.then8 ], [ 0, %if.else10 ], [ 0, %if.else13 ]
  %5 = load %struct._IO_FILE** @asmfile, align 8, !dbg !2470, !tbaa !1468
  %fputc = tail call i32 @fputc(i32 48, %struct._IO_FILE* %5) #6, !dbg !2470
  %6 = load i32* @current_sym_nchars, align 4, !dbg !2471, !tbaa !1472
  %add = add nsw i32 %6, 1, !dbg !2471
  store i32 %add, i32* @current_sym_nchars, align 4, !dbg !2471, !tbaa !1472
  %shr = lshr i64 %high.0, 2, !dbg !2472
  tail call void @llvm.dbg.value(metadata !{i64 %shr}, i64 0, metadata !1242), !dbg !2472
  %and27 = shl i64 %high.0, 1, !dbg !2473
  %shl30 = and i64 %and27, 6, !dbg !2473
  %shr31 = lshr i64 %low.0, 63, !dbg !2473
  %or = or i64 %shl30, %shr31, !dbg !2473
  tail call void @llvm.dbg.value(metadata !{i64 %or}, i64 0, metadata !1244), !dbg !2473
  %and32 = and i64 %low.0, 9223372036854775807, !dbg !2474
  tail call void @llvm.dbg.value(metadata !{i64 %and32}, i64 0, metadata !1245), !dbg !2474
  %7 = load %struct._IO_FILE** @asmfile, align 8, !dbg !2475, !tbaa !1468
  %conv = trunc i64 %shr to i32, !dbg !2475
  %conv33 = trunc i64 %or to i32, !dbg !2475
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([7 x i8]* @.str53, i64 0, i64 0), i32 %conv, i32 %conv33) #7, !dbg !2475
  %8 = load i32* @current_sym_nchars, align 4, !dbg !2476, !tbaa !1472
  %add35 = add nsw i32 %8, 2, !dbg !2476
  store i32 %add35, i32* @current_sym_nchars, align 4, !dbg !2476, !tbaa !1472
  tail call void @llvm.dbg.value(metadata !2477, i64 0, metadata !2478) #6, !dbg !2480
  tail call void @llvm.dbg.value(metadata !2481, i64 0, metadata !2482) #6, !dbg !2483
  br label %for.body.i, !dbg !2483

for.body.i:                                       ; preds = %for.body.i, %if.end19
  %indvars.iv.i = phi i64 [ 20, %if.end19 ], [ %indvars.iv.next.i, %for.body.i ]
  %9 = load %struct._IO_FILE** @asmfile, align 8, !dbg !2485, !tbaa !1468
  %10 = mul nsw i64 %indvars.iv.i, 3, !dbg !2485
  %shr.i = lshr i64 %and32, %10, !dbg !2485
  %shr.tr.i = trunc i64 %shr.i to i32, !dbg !2485
  %conv.i = and i32 %shr.tr.i, 7, !dbg !2485
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([5 x i8]* @.str54, i64 0, i64 0), i32 %conv.i) #7, !dbg !2485
  %11 = trunc i64 %indvars.iv.i to i32, !dbg !2483
  %cmp.i = icmp sgt i32 %11, 0, !dbg !2483
  %indvars.iv.next.i = add i64 %indvars.iv.i, -1, !dbg !2483
  br i1 %cmp.i, label %for.body.i, label %print_octal.exit, !dbg !2483

print_octal.exit:                                 ; preds = %for.body.i
  %12 = load i32* @current_sym_nchars, align 4, !dbg !2486, !tbaa !1472
  %add.i = add nsw i32 %12, 21, !dbg !2486
  store i32 %add.i, i32* @current_sym_nchars, align 4, !dbg !2486, !tbaa !1472
  ret void, !dbg !2487
}
