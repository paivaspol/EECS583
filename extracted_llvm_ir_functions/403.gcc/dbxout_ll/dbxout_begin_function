define internal void @dbxout_begin_function(%union.tree_node* %decl) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %decl}, i64 0, metadata !1133), !dbg !1567
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 undef) #9, !dbg !1568
  %arguments = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 10, !dbg !1569
  %0 = load %union.tree_node** %arguments, align 8, !dbg !1569, !tbaa !1468
  tail call void @dbxout_parms(%union.tree_node* %0) #9, !dbg !1569
  %result = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 11, !dbg !1570
  %1 = load %union.tree_node** %result, align 8, !dbg !1570, !tbaa !1468
  %name = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 8, !dbg !1570
  %2 = load %union.tree_node** %name, align 8, !dbg !1570, !tbaa !1468
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !1570
  br i1 %cmp, label %if.end, label %if.then, !dbg !1570

if.then:                                          ; preds = %entry
  %call6 = tail call i32 @dbxout_symbol(%union.tree_node* %1, i32 undef) #9, !dbg !1571
  br label %if.end, !dbg !1571

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !1572
}
