define void @tidy_fallthru_edges() #0 {
entry:
  tail call void @llvm.dbg.value(metadata !1712, i64 0, metadata !1220), !dbg !1955
  %0 = load i32* @n_basic_blocks, align 4, !dbg !1955, !tbaa !1533
  %cmp24 = icmp sgt i32 %0, 1, !dbg !1955
  br i1 %cmp24, label %for.body, label %for.end, !dbg !1955

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 1, %entry ], [ %indvars.iv.next, %for.inc ]
  %1 = add nsw i64 %indvars.iv, -1, !dbg !1956
  %2 = load %struct.varray_head_tag** @basic_block_info, align 8, !dbg !1956, !tbaa !1516
  %data = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 4, !dbg !1956
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*, !dbg !1956
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %1, !dbg !1956
  %3 = load %struct.basic_block_def** %arrayidx, align 8, !dbg !1956, !tbaa !1516
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %3}, i64 0, metadata !1221), !dbg !1956
  %arrayidx4 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %indvars.iv, !dbg !1957
  %4 = load %struct.basic_block_def** %arrayidx4, align 8, !dbg !1957, !tbaa !1516
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %4}, i64 0, metadata !1224), !dbg !1957
  %succ = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 5, !dbg !1958
  %5 = load %struct.edge_def** %succ, align 8, !dbg !1958, !tbaa !1516
  tail call void @llvm.dbg.value(metadata !{%struct.edge_def* %5}, i64 0, metadata !1225), !dbg !1958
  %cmp5 = icmp eq %struct.edge_def* %5, null, !dbg !1958
  br i1 %cmp5, label %for.inc, label %land.lhs.true, !dbg !1958

land.lhs.true:                                    ; preds = %for.body
  %flags = getelementptr inbounds %struct.edge_def* %5, i64 0, i32 6, !dbg !1958
  %6 = load i32* %flags, align 4, !dbg !1958, !tbaa !1533
  %and = and i32 %6, 14, !dbg !1958
  %tobool = icmp eq i32 %and, 0, !dbg !1958
  br i1 %tobool, label %land.lhs.true6, label %for.inc, !dbg !1958

land.lhs.true6:                                   ; preds = %land.lhs.true
  %succ_next = getelementptr inbounds %struct.edge_def* %5, i64 0, i32 1, !dbg !1958
  %7 = load %struct.edge_def** %succ_next, align 8, !dbg !1958, !tbaa !1516
  %cmp7 = icmp eq %struct.edge_def* %7, null, !dbg !1958
  br i1 %cmp7, label %land.lhs.true8, label %for.inc, !dbg !1958

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %dest = getelementptr inbounds %struct.edge_def* %5, i64 0, i32 3, !dbg !1958
  %8 = load %struct.basic_block_def** %dest, align 8, !dbg !1958, !tbaa !1516
  %cmp9 = icmp eq %struct.basic_block_def* %8, %4, !dbg !1958
  br i1 %cmp9, label %land.lhs.true10, label %for.inc, !dbg !1958

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %end = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 1, !dbg !1958
  %9 = load %struct.rtx_def** %end, align 8, !dbg !1958, !tbaa !1516
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !1958
  %bf.load = load i32* %10, align 8, !dbg !1958
  %bf.clear = and i32 %bf.load, 65535, !dbg !1958
  %cmp11 = icmp eq i32 %bf.clear, 33, !dbg !1958
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !1958

lor.lhs.false:                                    ; preds = %land.lhs.true10
  %call = tail call i32 @onlyjump_p(%struct.rtx_def* %9) #6, !dbg !1959
  %tobool13 = icmp eq i32 %call, 0, !dbg !1959
  br i1 %tobool13, label %for.inc, label %if.then, !dbg !1959

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true10
  tail call void @tidy_fallthru_edge(%struct.edge_def* %5, %struct.basic_block_def* %3, %struct.basic_block_def* %4) #8, !dbg !1960
  br label %for.inc, !dbg !1960

for.inc:                                          ; preds = %lor.lhs.false, %land.lhs.true, %for.body, %land.lhs.true6, %land.lhs.true8, %if.then
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1955
  %11 = load i32* @n_basic_blocks, align 4, !dbg !1955, !tbaa !1533
  %12 = trunc i64 %indvars.iv.next to i32, !dbg !1955
  %cmp = icmp slt i32 %12, %11, !dbg !1955
  br i1 %cmp, label %for.body, label %for.end, !dbg !1955

for.end:                                          ; preds = %for.inc, %entry
  ret void, !dbg !1961
}
