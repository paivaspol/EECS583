define void @commit_edge_insertions() #0 {
entry:
  br label %while.body

while.body:                                       ; preds = %entry, %if.end3
  %bb.0 = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %entry ], [ %29, %if.end3 ]
  %i.0 = phi i32 [ 0, %entry ], [ %phitmp, %if.end3 ]
  %succ = getelementptr inbounds %struct.basic_block_def* %bb.0, i64 0, i32 5
  %0 = load %struct.edge_def** %succ, align 8, !tbaa !0
  %tobool9 = icmp eq %struct.edge_def* %0, null
  br i1 %tobool9, label %for.end, label %for.body

for.body:                                         ; preds = %while.body, %for.cond.backedge
  %e.010 = phi %struct.edge_def* [ %1, %for.cond.backedge ], [ %0, %while.body ]
  %succ_next = getelementptr inbounds %struct.edge_def* %e.010, i64 0, i32 1
  %1 = load %struct.edge_def** %succ_next, align 8, !tbaa !0
  %insns = getelementptr inbounds %struct.edge_def* %e.010, i64 0, i32 4
  %2 = load %struct.rtx_def** %insns, align 8, !tbaa !0
  %tobool1 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool1, label %for.cond.backedge, label %if.then

for.cond.backedge:                                ; preds = %for.body, %commit_one_edge_insertion.exit
  %tobool = icmp eq %struct.edge_def* %1, null
  br i1 %tobool, label %for.end, label %for.body

if.then:                                          ; preds = %for.body
  store %struct.rtx_def* null, %struct.rtx_def** %insns, align 8, !tbaa !0
  %dest.i = getelementptr inbounds %struct.edge_def* %e.010, i64 0, i32 3
  %3 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !0
  %pred.i = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 4
  %4 = load %struct.edge_def** %pred.i, align 8, !tbaa !0
  %pred_next.i = getelementptr inbounds %struct.edge_def* %4, i64 0, i32 0
  %5 = load %struct.edge_def** %pred_next.i, align 8, !tbaa !0
  %cmp.i = icmp ne %struct.edge_def* %5, null
  %cmp6.i = icmp eq %struct.basic_block_def* %3, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %or.cond.i = or i1 %cmp.i, %cmp6.i
  br i1 %or.cond.i, label %if.else29.i, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %head.i = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 0
  %6 = load %struct.rtx_def** %head.i, align 8, !tbaa !0
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load.i = load i32* %7, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp8.i = icmp eq i32 %bf.clear.i, 36
  br i1 %cmp8.i, label %if.then9.i, label %if.end.i

if.then9.i:                                       ; preds = %if.then.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !0
  %.phi.trans.insert.i = bitcast %struct.rtx_def* %8 to i32*
  %bf.load10.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then9.i, %if.then.i
  %bf.load10.i = phi i32 [ %bf.load10.pre.i, %if.then9.i ], [ %bf.load.i, %if.then.i ]
  %tmp.0.i = phi %struct.rtx_def* [ %8, %if.then9.i ], [ %6, %if.then.i ]
  %bf.clear11.i = and i32 %bf.load10.i, 65535
  %cmp12.i = icmp eq i32 %bf.clear11.i, 37
  br i1 %cmp12.i, label %land.lhs.true13.i, label %if.end21.i

land.lhs.true13.i:                                ; preds = %if.end.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %tmp.0.i, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx15.i to i32*
  %9 = load i32* %rtint.i, align 4, !tbaa !3
  %cmp16.i = icmp eq i32 %9, -80
  br i1 %cmp16.i, label %if.then17.i, label %if.end21.i

if.then17.i:                                      ; preds = %land.lhs.true13.i
  %arrayidx19.i = getelementptr inbounds %struct.rtx_def* %tmp.0.i, i64 0, i32 1, i64 2
  %rtx20.i = bitcast %union.rtunion_def* %arrayidx19.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !0
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.then17.i, %land.lhs.true13.i, %if.end.i
  %tmp.1.i = phi %struct.rtx_def* [ %10, %if.then17.i ], [ %tmp.0.i, %land.lhs.true13.i ], [ %tmp.0.i, %if.end.i ]
  %cmp23.i = icmp eq %struct.rtx_def* %tmp.1.i, %6
  br i1 %cmp23.i, label %if.end70.i, label %if.else.i

if.else.i:                                        ; preds = %if.end21.i
  %arrayidx26.i = getelementptr inbounds %struct.rtx_def* %tmp.1.i, i64 0, i32 1, i64 1
  %rtx27.i = bitcast %union.rtunion_def* %arrayidx26.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx27.i, align 8, !tbaa !0
  br label %if.else74.i

if.else29.i:                                      ; preds = %if.then
  %flags.i = getelementptr inbounds %struct.edge_def* %e.010, i64 0, i32 6
  %12 = load i32* %flags.i, align 4, !tbaa !3
  %and.i = and i32 %12, 2
  %cmp30.i = icmp eq i32 %and.i, 0
  br i1 %cmp30.i, label %land.lhs.true31.i, label %if.else67.i

land.lhs.true31.i:                                ; preds = %if.else29.i
  %src.i = getelementptr inbounds %struct.edge_def* %e.010, i64 0, i32 2
  %13 = load %struct.basic_block_def** %src.i, align 8, !tbaa !0
  %succ.i = getelementptr inbounds %struct.basic_block_def* %13, i64 0, i32 5
  %14 = load %struct.edge_def** %succ.i, align 8, !tbaa !0
  %succ_next.i = getelementptr inbounds %struct.edge_def* %14, i64 0, i32 1
  %15 = load %struct.edge_def** %succ_next.i, align 8, !tbaa !0
  %cmp32.i = icmp ne %struct.edge_def* %15, null
  %cmp35.i = icmp eq %struct.basic_block_def* %13, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  %or.cond141.i = or i1 %cmp32.i, %cmp35.i
  br i1 %or.cond141.i, label %if.else67.i, label %if.then36.i

if.then36.i:                                      ; preds = %land.lhs.true31.i
  %end.i = getelementptr inbounds %struct.basic_block_def* %13, i64 0, i32 1
  %16 = load %struct.rtx_def** %end.i, align 8, !tbaa !0
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load38.i = load i32* %17, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 33
  br i1 %cmp40.i, label %for.cond.i, label %if.else59.i

for.cond.i:                                       ; preds = %if.then36.i, %land.rhs.i
  %before.0.i = phi %struct.rtx_def* [ %18, %land.rhs.i ], [ %16, %if.then36.i ]
  %arrayidx44.i = getelementptr inbounds %struct.rtx_def* %before.0.i, i64 0, i32 1, i64 1
  %rtx45.i = bitcast %union.rtunion_def* %arrayidx44.i to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx45.i, align 8, !tbaa !0
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load46.i = load i32* %19, align 8
  %bf.clear47.i = and i32 %bf.load46.i, 65535
  %cmp48.i = icmp eq i32 %bf.clear47.i, 37
  br i1 %cmp48.i, label %land.rhs.i, label %if.end70.i

land.rhs.i:                                       ; preds = %for.cond.i
  %arrayidx53.i = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 4
  %rtint54.i = bitcast %union.rtunion_def* %arrayidx53.i to i32*
  %20 = load i32* %rtint54.i, align 4, !tbaa !3
  %cmp55.i = icmp eq i32 %20, -96
  br i1 %cmp55.i, label %for.cond.i, label %if.end70.i

if.else59.i:                                      ; preds = %if.then36.i
  %and61.i = and i32 %12, 1
  %cmp62.i = icmp eq i32 %and61.i, 0
  br i1 %cmp62.i, label %if.then63.i, label %if.else74.i

if.then63.i:                                      ; preds = %if.else59.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1350, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.commit_one_edge_insertion, i64 0, i64 0)) #6
  unreachable

if.else67.i:                                      ; preds = %land.lhs.true31.i, %if.else29.i
  %call.i = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %e.010) #5
  %end68.i = getelementptr inbounds %struct.basic_block_def* %call.i, i64 0, i32 1
  %21 = load %struct.rtx_def** %end68.i, align 8, !tbaa !0
  br label %if.else74.i

if.end70.i:                                       ; preds = %land.rhs.i, %for.cond.i, %if.end21.i
  %before.1.i = phi %struct.rtx_def* [ %6, %if.end21.i ], [ %before.0.i, %for.cond.i ], [ %before.0.i, %land.rhs.i ]
  %bb.0.i = phi %struct.basic_block_def* [ %3, %if.end21.i ], [ %13, %for.cond.i ], [ %13, %land.rhs.i ]
  %tobool.i = icmp eq %struct.rtx_def* %before.1.i, null
  br i1 %tobool.i, label %if.else74.i, label %if.then71.i

if.then71.i:                                      ; preds = %if.end70.i
  %call72.i = tail call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %2, %struct.rtx_def* %before.1.i) #5
  %call73.i = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %before.1.i) #5
  br label %if.end76.i

if.else74.i:                                      ; preds = %if.end70.i, %if.else67.i, %if.else59.i, %if.else.i
  %bb.0147.i = phi %struct.basic_block_def* [ %bb.0.i, %if.end70.i ], [ %3, %if.else.i ], [ %call.i, %if.else67.i ], [ %13, %if.else59.i ]
  %after.0145.i = phi %struct.rtx_def* [ null, %if.end70.i ], [ %11, %if.else.i ], [ %21, %if.else67.i ], [ %16, %if.else59.i ]
  %call75.i = tail call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %2, %struct.rtx_def* %after.0145.i) #5
  br label %if.end76.i

if.end76.i:                                       ; preds = %if.else74.i, %if.then71.i
  %tobool148.i = phi i1 [ true, %if.then71.i ], [ false, %if.else74.i ]
  %bb.0146.i = phi %struct.basic_block_def* [ %bb.0.i, %if.then71.i ], [ %bb.0147.i, %if.else74.i ]
  %before.1143.i = phi %struct.rtx_def* [ %before.1.i, %if.then71.i ], [ null, %if.else74.i ]
  %last.0.i = phi %struct.rtx_def* [ %call73.i, %if.then71.i ], [ %call75.i, %if.else74.i ]
  %call77.i = tail call i32 @returnjump_p(%struct.rtx_def* %last.0.i) #5
  %tobool78.i = icmp eq i32 %call77.i, 0
  br i1 %tobool78.i, label %if.else98.i, label %if.then79.i

if.then79.i:                                      ; preds = %if.end76.i
  %succ80.i = getelementptr inbounds %struct.basic_block_def* %bb.0146.i, i64 0, i32 5
  %22 = load %struct.edge_def** %succ80.i, align 8, !tbaa !0
  %dest81.i = getelementptr inbounds %struct.edge_def* %22, i64 0, i32 3
  %23 = load %struct.basic_block_def** %dest81.i, align 8, !tbaa !0
  %cmp82.i = icmp eq %struct.basic_block_def* %23, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp82.i, label %lor.lhs.false.i, label %if.then89.i

lor.lhs.false.i:                                  ; preds = %if.then79.i
  %succ_next83.i = getelementptr inbounds %struct.edge_def* %22, i64 0, i32 1
  %24 = load %struct.edge_def** %succ_next83.i, align 8, !tbaa !0
  %cmp84.i = icmp eq %struct.edge_def* %24, null
  br i1 %cmp84.i, label %lor.lhs.false85.i, label %if.then89.i

lor.lhs.false85.i:                                ; preds = %lor.lhs.false.i
  %flags86.i = getelementptr inbounds %struct.edge_def* %22, i64 0, i32 6
  %25 = load i32* %flags86.i, align 4, !tbaa !3
  %and87.i = and i32 %25, 1
  %cmp88.i = icmp eq i32 %and87.i, 0
  br i1 %cmp88.i, label %if.then89.i, label %if.end90.i

if.then89.i:                                      ; preds = %lor.lhs.false85.i, %lor.lhs.false.i, %if.then79.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1384, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.commit_one_edge_insertion, i64 0, i64 0)) #6
  unreachable

if.end90.i:                                       ; preds = %lor.lhs.false85.i
  %and92.i = and i32 %25, -2
  store i32 %and92.i, i32* %flags86.i, align 4, !tbaa !3
  %call93.i = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %last.0.i) #5
  br i1 %tobool148.i, label %if.then95.i, label %commit_one_edge_insertion.exit

if.then95.i:                                      ; preds = %if.end90.i
  %call96.i = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %before.1143.i) #5
  br label %commit_one_edge_insertion.exit

if.else98.i:                                      ; preds = %if.end76.i
  %26 = bitcast %struct.rtx_def* %last.0.i to i32*
  %bf.load99.i = load i32* %26, align 8
  %bf.clear100.i = and i32 %bf.load99.i, 65535
  %cmp101.i = icmp eq i32 %bf.clear100.i, 33
  br i1 %cmp101.i, label %if.then102.i, label %commit_one_edge_insertion.exit

if.then102.i:                                     ; preds = %if.else98.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1393, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.commit_one_edge_insertion, i64 0, i64 0)) #6
  unreachable

commit_one_edge_insertion.exit:                   ; preds = %if.end90.i, %if.then95.i, %if.else98.i
  tail call void @find_sub_basic_blocks(%struct.basic_block_def* %bb.0146.i) #5
  br label %for.cond.backedge

for.end:                                          ; preds = %for.cond.backedge, %while.body
  %27 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %cmp = icmp slt i32 %i.0, %27
  br i1 %cmp, label %if.end3, label %while.end

if.end3:                                          ; preds = %for.end
  %idxprom = sext i32 %i.0 to i64
  %28 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 4
  %bb4 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb4, i64 0, i64 %idxprom
  %29 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !0
  %phitmp = add i32 %i.0, 1
  br label %while.body

while.end:                                        ; preds = %for.end
  ret void
}
