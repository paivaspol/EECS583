define zeroext i1 @redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %target) #0 {
entry:
  %dest = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 3
  %0 = load %struct.basic_block_def** %dest, align 8, !tbaa !0
  %head = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 0
  %1 = load %struct.rtx_def** %head, align 8, !tbaa !0
  %src3 = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 2
  %2 = load %struct.basic_block_def** %src3, align 8, !tbaa !0
  %end = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 1
  %3 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %flags = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 6
  %4 = load i32* %flags, align 4, !tbaa !3
  %and = and i32 %4, 12
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %succ.i = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 5
  %tmp.0251.i = load %struct.edge_def** %succ.i, align 8
  %tobool252.i = icmp eq %struct.edge_def* %tmp.0251.i, null
  br i1 %tobool252.i, label %lor.lhs.false.i, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %succ_next.i = getelementptr inbounds %struct.edge_def* %tmp.0253.i, i64 0, i32 1
  %tmp.0.i = load %struct.edge_def** %succ_next.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %tmp.0.i, null
  br i1 %tobool.i, label %lor.lhs.false.i, label %for.body.i

for.body.i:                                       ; preds = %if.end, %for.cond.i
  %tmp.0253.i = phi %struct.edge_def* [ %tmp.0.i, %for.cond.i ], [ %tmp.0251.i, %if.end ]
  %dest.i = getelementptr inbounds %struct.edge_def* %tmp.0253.i, i64 0, i32 3
  %5 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !0
  %cmp.i = icmp eq %struct.basic_block_def* %5, %target
  %cmp4.i = icmp eq %struct.edge_def* %tmp.0253.i, %e
  %or.cond.i = or i1 %cmp.i, %cmp4.i
  br i1 %or.cond.i, label %for.cond.i, label %if.else

lor.lhs.false.i:                                  ; preds = %for.cond.i, %if.end
  %call.i = tail call i32 @onlyjump_p(%struct.rtx_def* %3) #5
  %tobool6.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.i, label %if.else, label %if.end8.i

if.end8.i:                                        ; preds = %lor.lhs.false.i
  %6 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load.i = load i32* %6, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom243.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom243.i
  %7 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp9.i = icmp eq i8 %7, 105
  br i1 %cmp9.i, label %cond.true.i, label %if.else

cond.true.i:                                      ; preds = %if.end8.i
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !0
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load12.i = load i32* %9, align 8
  %bf.clear13.i = and i32 %bf.load12.i, 65535
  %cmp14.i = icmp eq i32 %bf.clear13.i, 47
  br i1 %cmp14.i, label %cond.end25.i, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %call23.i = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %3, %struct.rtx_def* %8) #5
  br label %cond.end25.i

cond.end25.i:                                     ; preds = %cond.false.i, %cond.true.i
  %cond26.i = phi %struct.rtx_def* [ %call23.i, %cond.false.i ], [ %8, %cond.true.i ]
  %tobool27.i = icmp eq %struct.rtx_def* %cond26.i, null
  br i1 %tobool27.i, label %if.else, label %lor.lhs.false28.i

lor.lhs.false28.i:                                ; preds = %cond.end25.i
  %call29.i = tail call i32 @side_effects_p(%struct.rtx_def* %cond26.i) #5
  %tobool30.i = icmp eq i32 %call29.i, 0
  br i1 %tobool30.i, label %if.end32.i, label %if.else

if.end32.i:                                       ; preds = %lor.lhs.false28.i
  %call33.i = tail call zeroext i1 @can_fallthru(%struct.basic_block_def* %2, %struct.basic_block_def* %target) #5
  br i1 %call33.i, label %if.then34.i, label %if.else.i

if.then34.i:                                      ; preds = %if.end32.i
  %10 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !0
  %tobool35.i = icmp eq %struct._IO_FILE* %10, null
  br i1 %tobool35.i, label %if.end40.i, label %if.then36.i

if.then36.i:                                      ; preds = %if.then34.i
  %arrayidx38.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx38.i to i32*
  %11 = load i32* %rtint.i, align 4, !tbaa !3
  %call39.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([19 x i8]* @.str42, i64 0, i64 0), i32 %11) #5
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.then36.i, %if.then34.i
  %head.i = getelementptr inbounds %struct.basic_block_def* %target, i64 0, i32 0
  %12 = load %struct.rtx_def** %head.i, align 8, !tbaa !0
  %arrayidx42.i = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1
  %rtx43.i = bitcast %union.rtunion_def* %arrayidx42.i to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx43.i, align 8, !tbaa !0
  tail call void @delete_insn_chain(%struct.rtx_def* %3, %struct.rtx_def* %13) #5
  br label %while.cond.preheader.i

if.else.i:                                        ; preds = %if.end32.i
  %call44.i = tail call i32 @simplejump_p(%struct.rtx_def* %3) #5
  %tobool45.i = icmp eq i32 %call44.i, 0
  br i1 %tobool45.i, label %if.else70.i, label %if.then46.i

if.then46.i:                                      ; preds = %if.else.i
  %14 = load %struct.basic_block_def** %dest, align 8, !tbaa !0
  %cmp48.i = icmp eq %struct.basic_block_def* %14, %target
  br i1 %cmp48.i, label %if.else, label %if.end51.i

if.end51.i:                                       ; preds = %if.then46.i
  %15 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !0
  %tobool52.i = icmp eq %struct._IO_FILE* %15, null
  br i1 %tobool52.i, label %if.end60.i, label %if.then53.i

if.then53.i:                                      ; preds = %if.end51.i
  %arrayidx55.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtint56.i = bitcast %union.rtunion_def* %arrayidx55.i to i32*
  %16 = load i32* %rtint56.i, align 4, !tbaa !3
  %index.i = getelementptr inbounds %struct.basic_block_def* %14, i64 0, i32 11
  %17 = load i32* %index.i, align 4, !tbaa !3
  %index58.i = getelementptr inbounds %struct.basic_block_def* %target, i64 0, i32 11
  %18 = load i32* %index58.i, align 4, !tbaa !3
  %call59.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([36 x i8]* @.str43, i64 0, i64 0), i32 %16, i32 %17, i32 %18) #5
  br label %if.end60.i

if.end60.i:                                       ; preds = %if.then53.i, %if.end51.i
  %call61.i = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #5
  %call62.i = tail call i32 @redirect_jump(%struct.rtx_def* %3, %struct.rtx_def* %call61.i, i32 0) #5
  %tobool63.i = icmp eq i32 %call62.i, 0
  br i1 %tobool63.i, label %if.then64.i, label %while.cond.preheader.i

if.then64.i:                                      ; preds = %if.end60.i
  %cmp65.i = icmp eq %struct.basic_block_def* %target, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp65.i, label %if.else, label %if.end68.i

if.end68.i:                                       ; preds = %if.then64.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 713, i8* getelementptr inbounds ([31 x i8]* @__FUNCTION__.try_redirect_by_replacing_jump, i64 0, i64 0)) #6
  unreachable

if.else70.i:                                      ; preds = %if.else.i
  %cmp71.i = icmp eq %struct.basic_block_def* %target, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp71.i, label %if.else, label %if.else74.i

if.else74.i:                                      ; preds = %if.else70.i
  %call76.i = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #5
  %call80.i = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call76.i) #5
  %call81.i = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call80.i, %struct.rtx_def* %3) #5
  %19 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 7, i32 0
  %call76.c.i = ptrtoint %struct.rtx_def* %call76.i to i64
  store i64 %call76.c.i, i64* %20, align 8, !tbaa !0
  %arrayidx87.i = getelementptr inbounds %struct.rtx_def* %call76.i, i64 0, i32 1, i64 3
  %rtint88.i = bitcast %union.rtunion_def* %arrayidx87.i to i32*
  %21 = load i32* %rtint88.i, align 4, !tbaa !3
  %inc.i = add nsw i32 %21, 1
  store i32 %inc.i, i32* %rtint88.i, align 4, !tbaa !3
  %22 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !0
  %tobool89.i = icmp eq %struct._IO_FILE* %22, null
  br i1 %tobool89.i, label %if.end99.i, label %if.then90.i

if.then90.i:                                      ; preds = %if.else74.i
  %arrayidx92.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtint93.i = bitcast %union.rtunion_def* %arrayidx92.i to i32*
  %23 = load i32* %rtint93.i, align 4, !tbaa !3
  %24 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %arrayidx96.i = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtint97.i = bitcast %union.rtunion_def* %arrayidx96.i to i32*
  %25 = load i32* %rtint97.i, align 4, !tbaa !3
  %call98.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([30 x i8]* @.str44, i64 0, i64 0), i32 %23, i32 %25) #5
  br label %if.end99.i

if.end99.i:                                       ; preds = %if.then90.i, %if.else74.i
  tail call void @delete_insn_chain(%struct.rtx_def* %3, %struct.rtx_def* %3) #5
  %arrayidx101.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 7
  %rtx102.i = bitcast %union.rtunion_def* %arrayidx101.i to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx102.i, align 8, !tbaa !0
  %cmp103.i = icmp eq %struct.rtx_def* %26, null
  br i1 %cmp103.i, label %if.end136.i, label %land.lhs.true105.i

land.lhs.true105.i:                               ; preds = %if.end99.i
  %arrayidx107.i = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 2
  %rtx108.i = bitcast %union.rtunion_def* %arrayidx107.i to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx108.i, align 8, !tbaa !0
  %cmp109.i = icmp eq %struct.rtx_def* %27, null
  br i1 %cmp109.i, label %if.end136.i, label %land.lhs.true111.i

land.lhs.true111.i:                               ; preds = %land.lhs.true105.i
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load112.i = load i32* %28, align 8
  %bf.clear113.i = and i32 %bf.load112.i, 65535
  %cmp114.i = icmp eq i32 %bf.clear113.i, 33
  br i1 %cmp114.i, label %land.lhs.true116.i, label %if.end136.i

land.lhs.true116.i:                               ; preds = %land.lhs.true111.i
  %arrayidx118.i = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 3
  %rtx119.i = bitcast %union.rtunion_def* %arrayidx118.i to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx119.i, align 8, !tbaa !0
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load120.i = load i32* %30, align 8
  %bf.clear121.i = and i32 %bf.load120.i, 65535
  %bf.clear121.off.i = add i32 %bf.clear121.i, -44
  %switch.i = icmp ult i32 %bf.clear121.off.i, 2
  br i1 %switch.i, label %if.then132.i, label %if.end136.i

if.then132.i:                                     ; preds = %land.lhs.true116.i
  tail call void @delete_insn_chain(%struct.rtx_def* %26, %struct.rtx_def* %27) #5
  br label %if.end136.i

if.end136.i:                                      ; preds = %if.then132.i, %land.lhs.true116.i, %land.lhs.true111.i, %land.lhs.true105.i, %if.end99.i
  %31 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %call138.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %31) #5
  %tobool139.i = icmp eq %struct.rtx_def* %call138.i, null
  br i1 %tobool139.i, label %if.then145.i, label %lor.lhs.false140.i

lor.lhs.false140.i:                               ; preds = %if.end136.i
  %32 = bitcast %struct.rtx_def* %call138.i to i32*
  %bf.load141.i = load i32* %32, align 8
  %bf.clear142.i = and i32 %bf.load141.i, 65535
  %cmp143.i = icmp eq i32 %bf.clear142.i, 35
  br i1 %cmp143.i, label %while.cond.preheader.i, label %if.then145.i

if.then145.i:                                     ; preds = %lor.lhs.false140.i, %if.end136.i
  %33 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %call147.i = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %33) #5
  br label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %if.then145.i, %lor.lhs.false140.i, %if.end60.i, %if.end40.i
  %fallthru.0.ph.i = phi i32 [ 0, %if.end60.i ], [ 0, %lor.lhs.false140.i ], [ 1, %if.end40.i ], [ 0, %if.then145.i ]
  %34 = load %struct.edge_def** %succ.i, align 8, !tbaa !0
  %succ_next153249.i = getelementptr inbounds %struct.edge_def* %34, i64 0, i32 1
  %35 = load %struct.edge_def** %succ_next153249.i, align 8, !tbaa !0
  %tobool154250.i = icmp eq %struct.edge_def* %35, null
  br i1 %tobool154250.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %while.cond.preheader.i, %while.body.i
  %36 = phi %struct.edge_def* [ %37, %while.body.i ], [ %34, %while.cond.preheader.i ]
  tail call void @remove_edge(%struct.edge_def* %36) #5
  %37 = load %struct.edge_def** %succ.i, align 8, !tbaa !0
  %succ_next153.i = getelementptr inbounds %struct.edge_def* %37, i64 0, i32 1
  %38 = load %struct.edge_def** %succ_next153.i, align 8, !tbaa !0
  %tobool154.i = icmp eq %struct.edge_def* %38, null
  br i1 %tobool154.i, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %while.body.i, %while.cond.preheader.i
  %.lcssa.i = phi %struct.edge_def* [ %34, %while.cond.preheader.i ], [ %37, %while.body.i ]
  %flags.i = getelementptr inbounds %struct.edge_def* %.lcssa.i, i64 0, i32 6
  store i32 %fallthru.0.ph.i, i32* %flags.i, align 4, !tbaa !3
  %probability.i = getelementptr inbounds %struct.edge_def* %.lcssa.i, i64 0, i32 7
  store i32 10000, i32* %probability.i, align 4, !tbaa !3
  %count.i = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 13
  %39 = load i64* %count.i, align 8, !tbaa !4
  %count162.i = getelementptr inbounds %struct.edge_def* %.lcssa.i, i64 0, i32 8
  store i64 %39, i64* %count162.i, align 8, !tbaa !4
  %src164.i = getelementptr inbounds %struct.edge_def* %.lcssa.i, i64 0, i32 2
  %40 = load %struct.basic_block_def** %src164.i, align 8, !tbaa !0
  %end165245.i = getelementptr inbounds %struct.basic_block_def* %40, i64 0, i32 1
  %41 = load %struct.rtx_def** %end165245.i, align 8, !tbaa !0
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load166246.i = load i32* %42, align 8
  %bf.clear167247.i = and i32 %bf.load166246.i, 65535
  %cmp168248.i = icmp eq i32 %bf.clear167247.i, 37
  br i1 %cmp168248.i, label %land.rhs.i, label %while.end181.i

land.rhs.i:                                       ; preds = %while.end.i, %while.body177.i
  %43 = phi %struct.rtx_def* [ %46, %while.body177.i ], [ %41, %while.end.i ]
  %arrayidx173.i = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 4
  %rtint174.i = bitcast %union.rtunion_def* %arrayidx173.i to i32*
  %44 = load i32* %rtint174.i, align 4, !tbaa !3
  %cmp175.i = icmp sgt i32 %44, -1
  br i1 %cmp175.i, label %while.body177.i, label %while.end181.i

while.body177.i:                                  ; preds = %land.rhs.i
  %call180.i = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %43) #5
  %45 = load %struct.basic_block_def** %src164.i, align 8, !tbaa !0
  %end165.i = getelementptr inbounds %struct.basic_block_def* %45, i64 0, i32 1
  %46 = load %struct.rtx_def** %end165.i, align 8, !tbaa !0
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load166.i = load i32* %47, align 8
  %bf.clear167.i = and i32 %bf.load166.i, 65535
  %cmp168.i = icmp eq i32 %bf.clear167.i, 37
  br i1 %cmp168.i, label %land.rhs.i, label %while.end181.i

while.end181.i:                                   ; preds = %while.body177.i, %land.rhs.i, %while.end.i
  %dest182.i = getelementptr inbounds %struct.edge_def* %.lcssa.i, i64 0, i32 3
  %48 = load %struct.basic_block_def** %dest182.i, align 8, !tbaa !0
  %cmp183.i = icmp eq %struct.basic_block_def* %48, %target
  br i1 %cmp183.i, label %return, label %if.then185.i

if.then185.i:                                     ; preds = %while.end181.i
  tail call void @redirect_edge_succ(%struct.edge_def* %.lcssa.i, %struct.basic_block_def* %target) #5
  br label %return

if.else:                                          ; preds = %for.body.i, %if.else70.i, %if.then64.i, %lor.lhs.false28.i, %cond.end25.i, %if.end8.i, %lor.lhs.false.i, %if.then46.i
  %49 = load %struct.basic_block_def** %dest, align 8, !tbaa !0
  %cmp = icmp eq %struct.basic_block_def* %49, %target
  br i1 %cmp, label %return, label %if.end9

if.end9:                                          ; preds = %if.else
  %50 = load i32* %flags, align 4, !tbaa !3
  %and11 = and i32 %50, 1
  %tobool12 = icmp eq i32 %and11, 0
  br i1 %tobool12, label %if.else14, label %return

if.else14:                                        ; preds = %if.end9
  %51 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32* %51, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp15 = icmp eq i32 %bf.clear, 33
  br i1 %cmp15, label %if.end18, label %return

if.end18:                                         ; preds = %if.else14
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 7
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %cmp19 = icmp eq %struct.rtx_def* %52, null
  br i1 %cmp19, label %if.else170, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end18
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 1, i64 2
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx22, align 8, !tbaa !0
  %cmp23 = icmp eq %struct.rtx_def* %53, null
  br i1 %cmp23, label %if.else170, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %land.lhs.true
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load25 = load i32* %54, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 33
  br i1 %cmp27, label %land.lhs.true28, label %if.else170

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 3
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx31, align 8, !tbaa !0
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load32 = load i32* %56, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %bf.clear33.off = add i32 %bf.clear33, -44
  %switch = icmp ult i32 %bf.clear33.off, 2
  br i1 %switch, label %if.then41, label %if.else170

if.then41:                                        ; preds = %land.lhs.true28
  %call45 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #7
  %cmp46 = icmp eq %struct.basic_block_def* %target, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp46, label %return, label %if.end48

if.end48:                                         ; preds = %if.then41
  %57 = load %struct.rtx_def** %rtx31, align 8, !tbaa !0
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load52 = load i32* %58, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 44
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 1, i64 0
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 1, i64 1
  %vec.0.in.in = select i1 %cmp54, %union.rtunion_def* %arrayidx60, %union.rtunion_def* %arrayidx66
  %vec.0.in = bitcast %union.rtunion_def* %vec.0.in.in to %struct.rtvec_def**
  %vec.0 = load %struct.rtvec_def** %vec.0.in, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def* %vec.0, i64 0, i32 0
  %59 = load i32* %num_elem, align 4, !tbaa !3
  %cmp69260 = icmp sgt i32 %59, 0
  br i1 %cmp69260, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end48
  %arrayidx83 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx83 to i32*
  %arrayidx85 = getelementptr inbounds %struct.rtx_def* %call45, i64 0, i32 1, i64 3
  %rtint86 = bitcast %union.rtunion_def* %arrayidx85 to i32*
  %60 = sext i32 %59 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %60, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx70 = getelementptr inbounds %struct.rtvec_def* %vec.0, i64 0, i32 1, i64 %indvars.iv.next
  %61 = load %struct.rtx_def** %arrayidx70, align 8, !tbaa !0
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx73, align 8, !tbaa !0
  %cmp74 = icmp eq %struct.rtx_def* %62, %1
  br i1 %cmp74, label %if.then75, label %for.cond.backedge

for.cond.backedge:                                ; preds = %for.body, %if.then75
  %63 = trunc i64 %indvars.iv.next to i32
  %cmp69 = icmp sgt i32 %63, 0
  br i1 %cmp69, label %for.body, label %for.end

if.then75:                                        ; preds = %for.body
  %64 = load i32* @target_flags, align 4, !tbaa !3
  %and76 = lshr i32 %64, 25
  %65 = and i32 %and76, 1
  %66 = or i32 %65, 4
  %call78 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %66, %struct.rtx_def* %call45) #5
  store %struct.rtx_def* %call78, %struct.rtx_def** %arrayidx70, align 8, !tbaa !0
  %67 = load i32* %rtint, align 4, !tbaa !3
  %dec = add nsw i32 %67, -1
  store i32 %dec, i32* %rtint, align 4, !tbaa !3
  %68 = load i32* %rtint86, align 4, !tbaa !3
  %inc = add nsw i32 %68, 1
  store i32 %inc, i32* %rtint86, align 4, !tbaa !3
  br label %for.cond.backedge

for.end:                                          ; preds = %for.cond.backedge, %if.end48
  %bf.load89 = load i32* %51, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %idxprom91257 = zext i32 %bf.clear90 to i64
  %arrayidx92 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom91257
  %69 = load i8* %arrayidx92, align 1, !tbaa !1
  %cmp93 = icmp eq i8 %69, 105
  br i1 %cmp93, label %cond.true, label %if.end194

cond.true:                                        ; preds = %for.end
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 3
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx97, align 8, !tbaa !0
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load98 = load i32* %71, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 47
  br i1 %cmp100, label %cond.end112, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call109 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %3, %struct.rtx_def* %70) #5
  br label %cond.end112

cond.end112:                                      ; preds = %cond.true, %cond.false
  %cond113 = phi %struct.rtx_def* [ %call109, %cond.false ], [ %70, %cond.true ]
  %cmp114 = icmp eq %struct.rtx_def* %cond113, null
  br i1 %cmp114, label %if.end194, label %land.lhs.true116

land.lhs.true116:                                 ; preds = %cond.end112
  %fld117 = getelementptr inbounds %struct.rtx_def* %cond113, i64 0, i32 1
  %rtx119 = bitcast [1 x %union.rtunion_def]* %fld117 to %struct.rtx_def**
  %72 = load %struct.rtx_def** %rtx119, align 8, !tbaa !0
  %73 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !0
  %cmp120 = icmp eq %struct.rtx_def* %72, %73
  br i1 %cmp120, label %land.lhs.true122, label %if.end194

land.lhs.true122:                                 ; preds = %land.lhs.true116
  %arrayidx124 = getelementptr inbounds %struct.rtx_def* %cond113, i64 0, i32 1, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %74 = load %struct.rtx_def** %rtx125, align 8, !tbaa !0
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load126 = load i32* %75, align 8
  %bf.clear127 = and i32 %bf.load126, 65535
  %cmp128 = icmp eq i32 %bf.clear127, 72
  br i1 %cmp128, label %land.lhs.true130, label %if.end194

land.lhs.true130:                                 ; preds = %land.lhs.true122
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1, i64 2
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %76 = load %struct.rtx_def** %rtx136, align 8, !tbaa !0
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load137 = load i32* %77, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  %cmp139 = icmp eq i32 %bf.clear138, 67
  br i1 %cmp139, label %land.lhs.true141, label %if.end194

land.lhs.true141:                                 ; preds = %land.lhs.true130
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %76, i64 0, i32 1, i64 0
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx150, align 8, !tbaa !0
  %cmp151 = icmp eq %struct.rtx_def* %78, %1
  br i1 %cmp151, label %if.then153, label %if.end194

if.then153:                                       ; preds = %land.lhs.true141
  %call154 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %call45) #5
  %79 = load %struct.rtx_def** %rtx125, align 8, !tbaa !0
  %80 = getelementptr inbounds %struct.rtx_def* %79, i64 0, i32 1, i64 2, i32 0
  %call154.c = ptrtoint %struct.rtx_def* %call154 to i64
  store i64 %call154.c, i64* %80, align 8, !tbaa !0
  %arrayidx162 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3
  %rtint163 = bitcast %union.rtunion_def* %arrayidx162 to i32*
  %81 = load i32* %rtint163, align 4, !tbaa !3
  %dec164 = add nsw i32 %81, -1
  store i32 %dec164, i32* %rtint163, align 4, !tbaa !3
  %arrayidx166 = getelementptr inbounds %struct.rtx_def* %call45, i64 0, i32 1, i64 3
  %rtint167 = bitcast %union.rtunion_def* %arrayidx166 to i32*
  %82 = load i32* %rtint167, align 4, !tbaa !3
  %inc168 = add nsw i32 %82, 1
  store i32 %inc168, i32* %rtint167, align 4, !tbaa !3
  br label %if.end194

if.else170:                                       ; preds = %land.lhs.true28, %land.lhs.true, %if.end18, %land.lhs.true24
  %call171 = tail call i32 @computed_jump_p(%struct.rtx_def* %3) #5
  %tobool172 = icmp eq i32 %call171, 0
  br i1 %tobool172, label %lor.lhs.false173, label %return

lor.lhs.false173:                                 ; preds = %if.else170
  %call174 = tail call i32 @returnjump_p(%struct.rtx_def* %3) #5
  %tobool175 = icmp eq i32 %call174, 0
  br i1 %tobool175, label %if.end177, label %return

if.end177:                                        ; preds = %lor.lhs.false173
  %83 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %cmp181 = icmp eq %struct.rtx_def* %83, %1
  br i1 %cmp181, label %if.end184, label %if.then183

if.then183:                                       ; preds = %if.end177
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 890, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.redirect_edge_and_branch, i64 0, i64 0)) #6
  unreachable

if.end184:                                        ; preds = %if.end177
  %call185 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %target) #7
  %call186 = tail call i32 @redirect_jump(%struct.rtx_def* %3, %struct.rtx_def* %call185, i32 0) #5
  %tobool187 = icmp eq i32 %call186, 0
  br i1 %tobool187, label %if.then188, label %if.end194

if.then188:                                       ; preds = %if.end184
  %cmp189 = icmp eq %struct.basic_block_def* %target, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp189, label %return, label %if.end192

if.end192:                                        ; preds = %if.then188
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 899, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.redirect_edge_and_branch, i64 0, i64 0)) #6
  unreachable

if.end194:                                        ; preds = %for.end, %cond.end112, %if.end184, %land.lhs.true116, %land.lhs.true122, %land.lhs.true130, %land.lhs.true141, %if.then153
  %84 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !0
  %tobool195 = icmp eq %struct._IO_FILE* %84, null
  br i1 %tobool195, label %if.end202, label %if.then196

if.then196:                                       ; preds = %if.end194
  %85 = load %struct.basic_block_def** %src3, align 8, !tbaa !0
  %index = getelementptr inbounds %struct.basic_block_def* %85, i64 0, i32 11
  %86 = load i32* %index, align 4, !tbaa !3
  %87 = load %struct.basic_block_def** %dest, align 8, !tbaa !0
  %index199 = getelementptr inbounds %struct.basic_block_def* %87, i64 0, i32 11
  %88 = load i32* %index199, align 4, !tbaa !3
  %index200 = getelementptr inbounds %struct.basic_block_def* %target, i64 0, i32 11
  %89 = load i32* %index200, align 4, !tbaa !3
  %call201 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([30 x i8]* @.str2, i64 0, i64 0), i32 %86, i32 %88, i32 %89) #5
  br label %if.end202

if.end202:                                        ; preds = %if.end194, %if.then196
  %90 = load %struct.basic_block_def** %dest, align 8, !tbaa !0
  %cmp204 = icmp eq %struct.basic_block_def* %90, %target
  br i1 %cmp204, label %return, label %if.then206

if.then206:                                       ; preds = %if.end202
  %call207 = tail call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %e, %struct.basic_block_def* %target) #5
  br label %return

return:                                           ; preds = %if.then185.i, %while.end181.i, %if.then206, %if.end202, %if.then188, %if.else170, %lor.lhs.false173, %if.then41, %if.else14, %if.end9, %if.else, %entry
  %retval.0 = phi i1 [ false, %entry ], [ false, %if.else ], [ false, %if.end9 ], [ false, %if.else14 ], [ false, %if.then41 ], [ false, %lor.lhs.false173 ], [ false, %if.else170 ], [ false, %if.then188 ], [ true, %if.end202 ], [ true, %if.then206 ], [ true, %while.end181.i ], [ true, %if.then185.i ]
  ret i1 %retval.0
}
