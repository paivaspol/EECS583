define void @dump_bb(%struct.basic_block_def* nocapture %bb, %struct._IO_FILE* %outf) #0 {
entry:
  %index = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 11
  %0 = load i32* %index, align 4, !tbaa !3
  %loop_depth = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 12
  %1 = load i32* %loop_depth, align 4, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([41 x i8]* @.str3, i64 0, i64 0), i32 %0, i32 %1) #5
  %count = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 13
  %2 = load i64* %count, align 8, !tbaa !4
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8]* @.str4, i64 0, i64 0), i64 %2) #5
  %call2 = tail call i32 @_IO_putc(i32 10, %struct._IO_FILE* %outf) #5
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([18 x i8]* @.str5, i64 0, i64 0), i64 17, i64 1, %struct._IO_FILE* %outf)
  %pred = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 4
  %e.057 = load %struct.edge_def** %pred, align 8
  %tobool58 = icmp eq %struct.edge_def* %e.057, null
  br i1 %tobool58, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %e.059 = phi %struct.edge_def* [ %e.0, %for.body ], [ %e.057, %entry ]
  tail call void @dump_edge_info(%struct._IO_FILE* %outf, %struct.edge_def* %e.059, i32 0) #5
  %pred_next = getelementptr inbounds %struct.edge_def* %e.059, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %call4 = tail call i32 @_IO_putc(i32 10, %struct._IO_FILE* %outf) #5
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8]* @.str6, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %outf)
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 8
  %5 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !0
  tail call void @dump_regset(%struct.bitmap_head_def* %5, %struct._IO_FILE* %outf) #5
  %call6 = tail call i32 @_IO_putc(i32 10, %struct._IO_FILE* %outf) #5
  %head = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 0
  %end = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 1
  %6 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %insn.054 = load %struct.rtx_def** %head, align 8
  %cmp55 = icmp eq %struct.rtx_def* %insn.054, %7
  br i1 %cmp55, label %for.end14, label %for.body8

for.body8:                                        ; preds = %for.end, %for.body8
  %insn.056 = phi %struct.rtx_def* [ %insn.0, %for.body8 ], [ %insn.054, %for.end ]
  %call9 = tail call i32 @print_rtl_single(%struct._IO_FILE* %outf, %struct.rtx_def* %insn.056) #5
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %insn.056, i64 0, i32 1, i64 2
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx13, align 8
  %cmp = icmp eq %struct.rtx_def* %insn.0, %7
  br i1 %cmp, label %for.end14, label %for.body8

for.end14:                                        ; preds = %for.body8, %for.end
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([26 x i8]* @.str7, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %outf)
  %global_live_at_end = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 9
  %9 = load %struct.bitmap_head_def** %global_live_at_end, align 8, !tbaa !0
  tail call void @dump_regset(%struct.bitmap_head_def* %9, %struct._IO_FILE* %outf) #5
  %call16 = tail call i32 @_IO_putc(i32 10, %struct._IO_FILE* %outf) #5
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([16 x i8]* @.str8, i64 0, i64 0), i64 15, i64 1, %struct._IO_FILE* %outf)
  %succ = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 5
  %e.151 = load %struct.edge_def** %succ, align 8
  %tobool1952 = icmp eq %struct.edge_def* %e.151, null
  br i1 %tobool1952, label %for.end22, label %for.body20

for.body20:                                       ; preds = %for.end14, %for.body20
  %e.153 = phi %struct.edge_def* [ %e.1, %for.body20 ], [ %e.151, %for.end14 ]
  tail call void @dump_edge_info(%struct._IO_FILE* %outf, %struct.edge_def* %e.153, i32 1) #5
  %succ_next = getelementptr inbounds %struct.edge_def* %e.153, i64 0, i32 1
  %e.1 = load %struct.edge_def** %succ_next, align 8
  %tobool19 = icmp eq %struct.edge_def* %e.1, null
  br i1 %tobool19, label %for.end22, label %for.body20

for.end22:                                        ; preds = %for.body20, %for.end14
  %call23 = tail call i32 @_IO_putc(i32 10, %struct._IO_FILE* %outf) #5
  ret void
}
