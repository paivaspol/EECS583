define internal i8* @output_215(%struct.rtx_def** nocapture %operands, %struct.rtx_def* %insn) #1 {
entry:
  %call = tail call i32 @get_attr_type(%struct.rtx_def* %insn) #6
  switch i32 %call, label %sw.default [
    i32 9, label %return
    i32 10, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !0
  %cmp = icmp eq %struct.rtx_def* %0, %1
  br i1 %cmp, label %return, label %if.else

if.else:                                          ; preds = %sw.bb1
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !0
  %cmp3 = icmp eq %struct.rtx_def* %0, %2
  br i1 %cmp3, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %3 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp5 = icmp eq i32 %bf.clear, 54
  br i1 %cmp5, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %lor.lhs.false
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %4 = load i64* %rtwint, align 8, !tbaa !5
  %cmp8 = icmp eq i64 %4, 65535
  br i1 %cmp8, label %return, label %if.end10

if.end10:                                         ; preds = %lor.lhs.false, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str1644, i64 0, i64 0), i32 2256, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.output_215, i64 0, i64 0)) #7
  unreachable

sw.default:                                       ; preds = %entry
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %5 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load12 = load i32* %6, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 54
  br i1 %cmp14, label %land.lhs.true15, label %return

land.lhs.true15:                                  ; preds = %sw.default
  %rtwint19 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %7 = load i64* %rtwint19, align 8, !tbaa !5
  %cmp20 = icmp eq i64 %7, 128
  br i1 %cmp20, label %if.then33, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %land.lhs.true15
  %cmp26 = icmp sgt i64 %7, -1
  %cmp32 = icmp eq i64 %7, -128
  %or.cond = or i1 %cmp26, %cmp32
  br i1 %or.cond, label %return, label %if.then33

if.then33:                                        ; preds = %lor.lhs.false21, %land.lhs.true15
  %sub = sub nsw i64 0, %7
  %call38 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #6
  store %struct.rtx_def* %call38, %struct.rtx_def** %arrayidx11, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %sw.default, %lor.lhs.false21, %if.else, %land.lhs.true, %sw.bb1, %entry, %if.then33
  %retval.0 = phi i8* [ getelementptr inbounds ([23 x i8]* @.str311, i64 0, i64 0), %if.then33 ], [ getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), %entry ], [ getelementptr inbounds ([10 x i8]* @.str1769, i64 0, i64 0), %sw.bb1 ], [ getelementptr inbounds ([10 x i8]* @.str1770, i64 0, i64 0), %land.lhs.true ], [ getelementptr inbounds ([10 x i8]* @.str1770, i64 0, i64 0), %if.else ], [ getelementptr inbounds ([23 x i8]* @.str1771, i64 0, i64 0), %lor.lhs.false21 ], [ getelementptr inbounds ([23 x i8]* @.str1771, i64 0, i64 0), %sw.default ]
  ret i8* %retval.0
}
