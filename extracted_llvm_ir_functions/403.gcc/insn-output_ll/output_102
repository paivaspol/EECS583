define internal i8* @output_102(%struct.rtx_def** nocapture %operands, %struct.rtx_def* %insn) #1 {
entry:
  %0 = load i32* @which_alternative, align 4, !tbaa !3
  switch i32 %0, label %sw.epilog30 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb15
    i32 2, label %sw.bb24
    i32 3, label %return
    i32 4, label %return
  ]

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !3
  %call = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %3) #6
  %tobool = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool, label %if.else, label %return

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load4 = load i32* %5, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 61
  br i1 %cmp6, label %land.lhs.true7, label %if.else14

land.lhs.true7:                                   ; preds = %if.else
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint11 = bitcast %union.rtunion_def* %arrayidx10 to i32*
  %6 = load i32* %rtuint11, align 4, !tbaa !3
  %cmp12 = icmp eq i32 %6, 8
  br i1 %cmp12, label %return, label %if.else14

if.else14:                                        ; preds = %land.lhs.true7, %if.else
  br label %return

sw.bb15:                                          ; preds = %entry
  %arrayidx16 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %7 = load %struct.rtx_def** %arrayidx16, align 8, !tbaa !0
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint19 = bitcast %union.rtunion_def* %arrayidx18 to i32*
  %8 = load i32* %rtuint19, align 4, !tbaa !3
  %call20 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %8) #6
  %tobool21 = icmp eq %struct.rtx_def* %call20, null
  %. = select i1 %tobool21, i8* getelementptr inbounds ([24 x i8]* @.str1784, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str1779, i64 0, i64 0)
  br label %return

sw.bb24:                                          ; preds = %entry
  %arrayidx25 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %9 = load %struct.rtx_def** %arrayidx25, align 8, !tbaa !0
  %call26 = tail call i32 @standard_80387_constant_p(%struct.rtx_def* %9) #6
  switch i32 %call26, label %sw.epilog30 [
    i32 1, label %return
    i32 2, label %sw.bb28
  ]

sw.bb28:                                          ; preds = %sw.bb24
  br label %return

sw.epilog30:                                      ; preds = %sw.bb24, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str1644, i64 0, i64 0), i32 1043, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.output_102, i64 0, i64 0)) #7
  unreachable

return:                                           ; preds = %entry, %entry, %sw.bb24, %sw.bb15, %land.lhs.true7, %land.lhs.true, %sw.bb28, %if.else14
  %retval.0 = phi i8* [ getelementptr inbounds ([5 x i8]* @.str1800, i64 0, i64 0), %sw.bb28 ], [ getelementptr inbounds ([8 x i8]* @.str1783, i64 0, i64 0), %if.else14 ], [ getelementptr inbounds ([9 x i8]* @.str1781, i64 0, i64 0), %land.lhs.true ], [ getelementptr inbounds ([11 x i8]* @.str1782, i64 0, i64 0), %land.lhs.true7 ], [ %., %sw.bb15 ], [ getelementptr inbounds ([5 x i8]* @.str1799, i64 0, i64 0), %sw.bb24 ], [ getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), %entry ], [ getelementptr inbounds ([2 x i8]* @.str38, i64 0, i64 0), %entry ]
  ret i8* %retval.0
}
