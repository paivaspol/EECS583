define void @finish_graph_dump_file(i8* nocapture %base, i8* nocapture %suffix) #0 {
entry:
  %call = call i64 @strlen(i8* %base) #6
  %call1 = call i64 @strlen(i8* %suffix) #6
  %0 = load i32* @graph_dump_format, align 4, !tbaa !0
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [2 x i8*]* @graph_ext, i64 0, i64 %idxprom
  %1 = load i8** %arrayidx, align 8, !tbaa !3
  %call2 = call i64 @strlen(i8* %1) #6
  %add = add i64 %call2, 1
  %add3 = add i64 %call1, %call
  %add4 = add i64 %add, %add3
  %2 = alloca i8, i64 %add4, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %base, i64 %call, i32 1, i1 false)
  %add.ptr = getelementptr inbounds i8* %2, i64 %call
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %suffix, i64 %call1, i32 1, i1 false)
  %add.ptr6 = getelementptr inbounds i8* %2, i64 %add3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr6, i8* %1, i64 %add, i32 1, i1 false)
  %call9 = call %struct._IO_FILE* @fopen(i8* %2, i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0)) #7
  %cmp = icmp eq %struct._IO_FILE* %call9, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i32* @graph_dump_format, align 4, !tbaa !0
  switch i32 %3, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb11
  ]

sw.bb:                                            ; preds = %if.then
  %4 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %call9)
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str5, i64 0, i64 0), i32 461, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.finish_graph_dump_file, i64 0, i64 0)) #9
  unreachable

sw.epilog:                                        ; preds = %if.then, %sw.bb
  %call12 = call i32 @fclose(%struct._IO_FILE* %call9) #7
  br label %if.end

if.end:                                           ; preds = %entry, %sw.epilog
  ret void
}
