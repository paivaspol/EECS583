define internal fastcc %struct.rtx_def* @split_insn(%struct.rtx_def* %insn) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !1060), !dbg !2090
  %0 = bitcast %struct.rtx_def* %insn to i32*, !dbg !2091
  %bf.load = load i32* %0, align 8, !dbg !2091
  %bf.clear = and i32 %bf.load, 65535, !dbg !2091
  %idxprom106 = zext i32 %bf.clear to i64, !dbg !2091
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom106, !dbg !2091
  %1 = load i8* %arrayidx, align 1, !dbg !2091, !tbaa !1169
  %cmp = icmp eq i8 %1, 105, !dbg !2091
  br i1 %cmp, label %cond.true, label %return, !dbg !2091

cond.true:                                        ; preds = %entry
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !2092
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !2092
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !2092, !tbaa !1177
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2092
  %bf.load10 = load i32* %3, align 8, !dbg !2092
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !2092
  %cmp12 = icmp eq i32 %bf.clear11, 47, !dbg !2092
  br i1 %cmp12, label %cond.end22, label %cond.false, !dbg !2092

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %2) #7, !dbg !2092
  br label %cond.end22, !dbg !2092

cond.end22:                                       ; preds = %cond.true, %cond.false
  %cond23 = phi %struct.rtx_def* [ %call, %cond.false ], [ %2, %cond.true ], !dbg !2092
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %cond23}, i64 0, metadata !1061), !dbg !2092
  %cmp24 = icmp eq %struct.rtx_def* %cond23, null, !dbg !2092
  br i1 %cmp24, label %if.else36, label %land.lhs.true, !dbg !2092

land.lhs.true:                                    ; preds = %cond.end22
  %call26 = tail call i32 @set_noop_p(%struct.rtx_def* %cond23) #7, !dbg !2092
  %tobool = icmp eq i32 %call26, 0, !dbg !2092
  br i1 %tobool, label %if.else36, label %if.then27, !dbg !2092

if.then27:                                        ; preds = %land.lhs.true
  %4 = load i32* @reload_completed, align 4, !dbg !2093, !tbaa !1168
  %tobool28 = icmp eq i32 %4, 0, !dbg !2093
  br i1 %tobool28, label %return, label %if.then29, !dbg !2093

if.then29:                                        ; preds = %if.then27
  %bf.load30 = load i32* %0, align 8, !dbg !2095
  %bf.clear31 = and i32 %bf.load30, -65536, !dbg !2095
  %bf.set = or i32 %bf.clear31, 37, !dbg !2095
  store i32 %bf.set, i32* %0, align 8, !dbg !2095
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4, !dbg !2097
  %rtint = bitcast %union.rtunion_def* %arrayidx33 to i32*, !dbg !2097
  store i32 -99, i32* %rtint, align 4, !dbg !2097, !tbaa !1168
  %5 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, i32 0, !dbg !2098
  store i64 0, i64* %5, align 8, !dbg !2098, !tbaa !1177
  br label %return, !dbg !2099

if.else36:                                        ; preds = %land.lhs.true, %cond.end22
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1, !dbg !2100
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !2100
  %6 = load %struct.rtx_def** %rtx39, align 8, !dbg !2100, !tbaa !1177
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !1062), !dbg !2100
  %7 = load %struct.rtx_def** %rtx, align 8, !dbg !2101, !tbaa !1177
  %call43 = tail call %struct.rtx_def* @try_split(%struct.rtx_def* %7, %struct.rtx_def* %insn, i32 1) #7, !dbg !2101
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call43}, i64 0, metadata !1064), !dbg !2101
  %cmp44 = icmp eq %struct.rtx_def* %call43, %insn, !dbg !2102
  br i1 %cmp44, label %return, label %if.then46, !dbg !2102

if.then46:                                        ; preds = %if.else36
  %bf.load47 = load i32* %0, align 8, !dbg !2103
  %bf.clear48 = and i32 %bf.load47, -65536, !dbg !2103
  %bf.set49 = or i32 %bf.clear48, 37, !dbg !2103
  store i32 %bf.set49, i32* %0, align 8, !dbg !2103
  %8 = getelementptr inbounds %union.rtunion_def* %arrayidx9, i64 0, i32 0, !dbg !2105
  store i64 0, i64* %8, align 8, !dbg !2105, !tbaa !1177
  %arrayidx54 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4, !dbg !2106
  %rtint55 = bitcast %union.rtunion_def* %arrayidx54 to i32*, !dbg !2106
  store i32 -99, i32* %rtint55, align 4, !dbg !2106, !tbaa !1168
  %9 = load i32* @reload_completed, align 4, !dbg !2107, !tbaa !1168
  %tobool56 = icmp eq i32 %9, 0, !dbg !2107
  %cmp58 = icmp eq %struct.rtx_def* %6, %call43, !dbg !2107
  %or.cond = or i1 %tobool56, %cmp58, !dbg !2107
  br i1 %or.cond, label %return, label %while.body, !dbg !2107

while.body:                                       ; preds = %if.then46, %if.end72
  %.pn = phi %struct.rtx_def* [ %first.0, %if.end72 ], [ %6, %if.then46 ]
  %first.0.in.in = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 2, !dbg !2108
  %first.0.in = bitcast %union.rtunion_def* %first.0.in.in to %struct.rtx_def**, !dbg !2108
  %first.0 = load %struct.rtx_def** %first.0.in, align 8, !dbg !2108
  %10 = bitcast %struct.rtx_def* %first.0 to i32*, !dbg !2110
  %bf.load64 = load i32* %10, align 8, !dbg !2110
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !2110
  %idxprom66107 = zext i32 %bf.clear65 to i64, !dbg !2110
  %arrayidx67 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom66107, !dbg !2110
  %11 = load i8* %arrayidx67, align 1, !dbg !2110, !tbaa !1169
  %cmp69 = icmp eq i8 %11, 105, !dbg !2110
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !2110

if.then71:                                        ; preds = %while.body
  tail call void @cleanup_subreg_operands(%struct.rtx_def* %first.0) #7, !dbg !2112
  br label %if.end72, !dbg !2112

if.end72:                                         ; preds = %if.then71, %while.body
  %cmp73 = icmp eq %struct.rtx_def* %first.0, %call43, !dbg !2113
  br i1 %cmp73, label %return, label %while.body, !dbg !2113

return:                                           ; preds = %if.end72, %entry, %if.then29, %if.else36, %if.then27, %if.then46
  %retval.0 = phi %struct.rtx_def* [ %call43, %if.then46 ], [ null, %if.then27 ], [ null, %if.else36 ], [ null, %if.then29 ], [ null, %entry ], [ %call43, %if.end72 ]
  ret %struct.rtx_def* %retval.0, !dbg !2114
}
