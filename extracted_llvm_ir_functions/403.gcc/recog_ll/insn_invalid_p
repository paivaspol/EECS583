define i32 @insn_invalid_p(%struct.rtx_def* %insn) #0 {
entry:
  %num_clobbers = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !539), !dbg !1598
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !1599
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1599
  %0 = load %struct.rtx_def** %rtx, align 8, !dbg !1599, !tbaa !1177
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !540), !dbg !1599
  call void @llvm.dbg.declare(metadata !{i32* %num_clobbers}, metadata !541), !dbg !1600
  call void @llvm.dbg.value(metadata !374, i64 0, metadata !541), !dbg !1600
  store i32 0, i32* %num_clobbers, align 4, !dbg !1600, !tbaa !1168
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !1601
  %bf.load = load i32* %1, align 8, !dbg !1601
  %bf.clear = and i32 %bf.load, 65535, !dbg !1601
  %cmp = icmp ne i32 %bf.clear, 47, !dbg !1601
  %2 = load i32* @reload_completed, align 4, !dbg !1601, !tbaa !1168
  %tobool = icmp ne i32 %2, 0, !dbg !1601
  %or.cond = or i1 %cmp, %tobool, !dbg !1601
  %3 = load i32* @reload_in_progress, align 4, !dbg !1601, !tbaa !1168
  %tobool2 = icmp ne i32 %3, 0, !dbg !1601
  %or.cond43 = or i1 %or.cond, %tobool2, !dbg !1601
  %cond = select i1 %or.cond43, i32* null, i32* %num_clobbers, !dbg !1601
  %call = call i32 @recog(%struct.rtx_def* %0, %struct.rtx_def* %insn, i32* %cond) #7, !dbg !1601
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !542), !dbg !1601
  %cmp3 = icmp slt i32 %call, 0, !dbg !1602
  br i1 %cmp3, label %land.end, label %if.end, !dbg !1602

land.end:                                         ; preds = %entry
  %4 = load %struct.rtx_def** %rtx, align 8, !dbg !1602, !tbaa !1177
  %call7 = call i32 @asm_noperands(%struct.rtx_def* %4) #8, !dbg !1602
  %cmp8 = icmp sgt i32 %call7, -1, !dbg !1602
  br i1 %cmp8, label %land.lhs.true10, label %return, !dbg !1603

land.lhs.true10:                                  ; preds = %land.end
  %call14 = call i32 @check_asm_operands(%struct.rtx_def* %4) #8, !dbg !1603
  %tobool15 = icmp eq i32 %call14, 0, !dbg !1603
  br i1 %tobool15, label %return, label %if.end, !dbg !1603

if.end:                                           ; preds = %land.lhs.true10, %entry
  call void @llvm.dbg.value(metadata !{i32* %num_clobbers}, i64 0, metadata !541), !dbg !1604
  %5 = load i32* %num_clobbers, align 4, !dbg !1604, !tbaa !1168
  %cmp19 = icmp sgt i32 %5, 0, !dbg !1604
  br i1 %cmp19, label %if.then20, label %if.end33, !dbg !1604

if.then20:                                        ; preds = %if.end
  %call21 = call i32 @added_clobbers_hard_reg_p(i32 %call) #7, !dbg !1605
  %tobool22 = icmp eq i32 %call21, 0, !dbg !1605
  br i1 %tobool22, label %if.end24, label %return, !dbg !1605

if.end24:                                         ; preds = %if.then20
  call void @llvm.dbg.value(metadata !{i32* %num_clobbers}, i64 0, metadata !541), !dbg !1606
  %6 = load i32* %num_clobbers, align 4, !dbg !1606, !tbaa !1168
  %add = add nsw i32 %6, 1, !dbg !1606
  %call25 = call %struct.rtvec_def* @rtvec_alloc(i32 %add) #7, !dbg !1606
  %call26 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call25) #7, !dbg !1606
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call26}, i64 0, metadata !544), !dbg !1606
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %call26, i64 0, i32 1, i64 0, !dbg !1607
  %rtvec = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtvec_def**, !dbg !1607
  %7 = load %struct.rtvec_def** %rtvec, align 8, !dbg !1607, !tbaa !1177
  %arrayidx29 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 1, i64 0, !dbg !1607
  store %struct.rtx_def* %0, %struct.rtx_def** %arrayidx29, align 8, !dbg !1607, !tbaa !1177
  call void @add_clobbers(%struct.rtx_def* %call26, i32 %call) #7, !dbg !1608
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call26}, i64 0, metadata !540), !dbg !1609
  %8 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0, !dbg !1609
  %call26.c = ptrtoint %struct.rtx_def* %call26 to i64, !dbg !1609
  store i64 %call26.c, i64* %8, align 8, !dbg !1609, !tbaa !1177
  br label %if.end33, !dbg !1610

if.end33:                                         ; preds = %if.end24, %if.end
  %9 = load i32* @reload_completed, align 4, !dbg !1611, !tbaa !1168
  %tobool34 = icmp eq i32 %9, 0, !dbg !1611
  br i1 %tobool34, label %if.end40, label %if.then35, !dbg !1611

if.then35:                                        ; preds = %if.end33
  call void @extract_insn(%struct.rtx_def* %insn) #8, !dbg !1612
  %call36 = call i32 @constrain_operands(i32 1) #8, !dbg !1614
  %tobool37 = icmp eq i32 %call36, 0, !dbg !1614
  br i1 %tobool37, label %return, label %if.end40, !dbg !1614

if.end40:                                         ; preds = %if.then35, %if.end33
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4, !dbg !1615
  %rtint = bitcast %union.rtunion_def* %arrayidx42 to i32*, !dbg !1615
  store i32 %call, i32* %rtint, align 4, !dbg !1615, !tbaa !1168
  br label %return, !dbg !1616

return:                                           ; preds = %land.end, %if.then35, %if.then20, %land.lhs.true10, %if.end40
  %retval.0 = phi i32 [ 0, %if.end40 ], [ 1, %land.lhs.true10 ], [ 1, %if.then20 ], [ 1, %if.then35 ], [ 1, %land.end ]
  ret i32 %retval.0, !dbg !1616
}
