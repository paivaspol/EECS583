define i32 @check_asm_operands(%struct.rtx_def* %x) #0 {
entry:
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !518), !dbg !1179
  %0 = load i32* @reload_completed, align 4, !dbg !1180, !tbaa !1168
  %tobool = icmp eq i32 %0, 0, !dbg !1180
  br i1 %tobool, label %if.end, label %if.then, !dbg !1180

if.then:                                          ; preds = %entry
  %call = call %struct.rtx_def* @make_insn_raw(%struct.rtx_def* %x) #7, !dbg !1181
  call void @extract_insn(%struct.rtx_def* %call) #8, !dbg !1181
  %call1 = call i32 @constrain_operands(i32 1) #8, !dbg !1183
  %1 = load i32* @which_alternative, align 4, !dbg !1184, !tbaa !1168
  %.lobit = lshr i32 %1, 31, !dbg !1184
  %.lobit.not = xor i32 %.lobit, 1, !dbg !1184
  br label %return, !dbg !1184

if.end:                                           ; preds = %entry
  %call2 = call i32 @asm_noperands(%struct.rtx_def* %x) #8, !dbg !1185
  call void @llvm.dbg.value(metadata !{i32 %call2}, i64 0, metadata !519), !dbg !1185
  %cmp3 = icmp slt i32 %call2, 0, !dbg !1186
  br i1 %cmp3, label %return, label %if.end6, !dbg !1186

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp eq i32 %call2, 0, !dbg !1187
  br i1 %cmp7, label %return, label %for.body.lr.ph, !dbg !1187

for.body.lr.ph:                                   ; preds = %if.end6
  %conv11 = sext i32 %call2 to i64, !dbg !1188
  %2 = alloca %struct.rtx_def*, i64 %conv11, align 1, !dbg !1188
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %2}, i64 0, metadata !520), !dbg !1188
  %3 = alloca i8*, i64 %conv11, align 1, !dbg !1189
  call void @llvm.dbg.value(metadata !{i8** %3}, i64 0, metadata !522), !dbg !1189
  %call14 = call i8* @decode_asm_operands(%struct.rtx_def* %x, %struct.rtx_def** %2, %struct.rtx_def*** null, i8** %3, i32* null) #8, !dbg !1190
  call void @llvm.dbg.value(metadata !374, i64 0, metadata !524), !dbg !1191
  br label %for.body, !dbg !1191

for.cond:                                         ; preds = %if.end39
  %4 = trunc i64 %indvars.iv.next to i32, !dbg !1191
  %cmp15 = icmp slt i32 %4, %call2, !dbg !1191
  br i1 %cmp15, label %for.body, label %return, !dbg !1191

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx = getelementptr inbounds i8** %3, i64 %indvars.iv, !dbg !1192
  %5 = load i8** %arrayidx, align 8, !dbg !1192, !tbaa !1177
  call void @llvm.dbg.value(metadata !{i8* %5}, i64 0, metadata !525), !dbg !1192
  %6 = load i8* %5, align 1, !dbg !1193, !tbaa !1169
  %cmp19 = icmp eq i8 %6, 37, !dbg !1193
  %incdec.ptr = getelementptr inbounds i8* %5, i64 1, !dbg !1194
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !525), !dbg !1194
  %incdec.ptr. = select i1 %cmp19, i8* %incdec.ptr, i8* %5, !dbg !1193
  %7 = load i8* %incdec.ptr., align 1, !dbg !1195, !tbaa !1169
  %idxprom25 = zext i8 %7 to i64, !dbg !1195
  %arrayidx26 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom25, !dbg !1195
  %8 = load i16* %arrayidx26, align 2, !dbg !1195, !tbaa !1196
  %and28 = and i16 %8, 4, !dbg !1195
  %tobool29 = icmp eq i16 %and28, 0, !dbg !1195
  br i1 %tobool29, label %if.end39, label %land.lhs.true, !dbg !1195

land.lhs.true:                                    ; preds = %for.body
  %arrayidx30 = getelementptr inbounds i8* %incdec.ptr., i64 1, !dbg !1195
  %9 = load i8* %arrayidx30, align 1, !dbg !1195, !tbaa !1169
  %cmp32 = icmp eq i8 %9, 0, !dbg !1195
  br i1 %cmp32, label %if.then34, label %if.end39, !dbg !1195

if.then34:                                        ; preds = %land.lhs.true
  %conv36 = sext i8 %7 to i64, !dbg !1197
  %sub = add i64 %conv36, -48, !dbg !1197
  %arrayidx38 = getelementptr inbounds i8** %3, i64 %sub, !dbg !1197
  %10 = load i8** %arrayidx38, align 8, !dbg !1197, !tbaa !1177
  call void @llvm.dbg.value(metadata !{i8* %10}, i64 0, metadata !525), !dbg !1197
  br label %if.end39, !dbg !1197

if.end39:                                         ; preds = %for.body, %if.then34, %land.lhs.true
  %c.1 = phi i8* [ %10, %if.then34 ], [ %incdec.ptr., %land.lhs.true ], [ %incdec.ptr., %for.body ]
  %arrayidx41 = getelementptr inbounds %struct.rtx_def** %2, i64 %indvars.iv, !dbg !1198
  %11 = load %struct.rtx_def** %arrayidx41, align 8, !dbg !1198, !tbaa !1177
  %call42 = call i32 @asm_operand_ok(%struct.rtx_def* %11, i8* %c.1) #8, !dbg !1198
  %tobool43 = icmp eq i32 %call42, 0, !dbg !1198
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1191
  br i1 %tobool43, label %return, label %for.cond, !dbg !1198

return:                                           ; preds = %if.end39, %for.cond, %if.end6, %if.end, %if.then
  %retval.0 = phi i32 [ %.lobit.not, %if.then ], [ 0, %if.end ], [ 1, %if.end6 ], [ 0, %if.end39 ], [ 1, %for.cond ]
  ret i32 %retval.0, !dbg !1199
}
