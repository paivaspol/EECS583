define i32 @scratch_operand(%struct.rtx_def* nocapture %op, i32 %mode) #3 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %op}, i64 0, metadata !638), !dbg !1826
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !639), !dbg !1827
  %0 = bitcast %struct.rtx_def* %op to i32*, !dbg !1828
  %bf.load = load i32* %0, align 8, !dbg !1828
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !1828
  %bf.clear = and i32 %bf.lshr, 255, !dbg !1828
  %cmp = icmp ne i32 %bf.clear, %mode, !dbg !1828
  %cmp1 = icmp ne i32 %mode, 0, !dbg !1828
  %or.cond = and i1 %cmp, %cmp1, !dbg !1828
  br i1 %or.cond, label %return, label %if.end, !dbg !1828

if.end:                                           ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 65535, !dbg !1829
  %cmp4 = icmp eq i32 %bf.clear3, 62, !dbg !1829
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !1829

lor.rhs:                                          ; preds = %if.end
  %cmp7 = icmp eq i32 %bf.clear3, 61, !dbg !1829
  br i1 %cmp7, label %land.rhs, label %lor.end, !dbg !1829

land.rhs:                                         ; preds = %lor.rhs
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, !dbg !1829
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !1829
  %1 = load i32* %rtuint, align 4, !dbg !1829, !tbaa !1168
  %cmp8 = icmp ult i32 %1, 53, !dbg !1829
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %if.end
  %2 = phi i1 [ true, %if.end ], [ false, %lor.rhs ], [ %cmp8, %land.rhs ]
  %lor.ext = zext i1 %2 to i32
  br label %return

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !1830
}
