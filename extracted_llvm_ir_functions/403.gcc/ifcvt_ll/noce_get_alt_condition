define internal fastcc %struct.rtx_def* @noce_get_alt_condition(%struct.noce_if_info* nocapture %if_info, %struct.rtx_def* %target, %struct.rtx_def** %earliest) #0 {
entry:
  %cond1 = getelementptr inbounds %struct.noce_if_info* %if_info, i64 0, i32 7
  %0 = load %struct.rtx_def** %cond1, align 8, !tbaa !4
  %call = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %0) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_earliest = getelementptr inbounds %struct.noce_if_info* %if_info, i64 0, i32 8
  %1 = load %struct.rtx_def** %cond_earliest, align 8, !tbaa !4
  store %struct.rtx_def* %1, %struct.rtx_def** %earliest, align 8, !tbaa !4
  %2 = load %struct.rtx_def** %cond1, align 8, !tbaa !4
  br label %return

if.end:                                           ; preds = %entry
  %jump = getelementptr inbounds %struct.noce_if_info* %if_info, i64 0, i32 6
  %3 = load %struct.rtx_def** %jump, align 8, !tbaa !4
  %call3 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %3) #6
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call3, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %fld4 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1
  %rtx6 = bitcast [1 x %union.rtunion_def]* %fld4 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx6, align 8, !tbaa !4
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 2
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx12, align 8, !tbaa !4
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 67
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx21, align 8, !tbaa !4
  %9 = load %struct.rtx_def** %jump, align 8, !tbaa !4
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 7
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx25, align 8, !tbaa !4
  %cmp26 = icmp eq %struct.rtx_def* %8, %10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %cmp26, %land.rhs ]
  %land.ext = zext i1 %11 to i32
  %12 = bitcast %struct.rtx_def* %target to i32*
  %bf.load27 = load i32* %12, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 54
  br i1 %cmp29, label %if.then30, label %if.end167

if.then30:                                        ; preds = %land.end
  %13 = load %struct.rtx_def** %cond1, align 8, !tbaa !4
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load32 = load i32* %14, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %fld35 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1
  %rtx37 = bitcast [1 x %union.rtunion_def]* %fld35 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx37, align 8, !tbaa !4
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx41, align 8, !tbaa !4
  %cond_earliest42 = getelementptr inbounds %struct.noce_if_info* %if_info, i64 0, i32 8
  %17 = load %struct.rtx_def** %cond_earliest42, align 8, !tbaa !4
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 1
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx45, align 8, !tbaa !4
  %tobool46 = icmp eq %struct.rtx_def* %18, null
  br i1 %tobool46, label %if.end104, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then30
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load47 = load i32* %19, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %idxprom292 = zext i32 %bf.clear48 to i64
  %arrayidx49 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom292
  %20 = load i8* %arrayidx49, align 1, !tbaa !1
  %cmp50 = icmp eq i8 %20, 105
  br i1 %cmp50, label %land.lhs.true52, label %if.end104

land.lhs.true52:                                  ; preds = %land.lhs.true
  %arrayidx54 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 3
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx55, align 8, !tbaa !4
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load56 = load i32* %22, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 47
  br i1 %cmp58, label %if.then60, label %if.end104

if.then60:                                        ; preds = %land.lhs.true52
  %call61 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %18) #6
  %tobool62 = icmp eq %struct.rtx_def* %call61, null
  br i1 %tobool62, label %if.then63, label %if.end70

if.then63:                                        ; preds = %if.then60
  %23 = load %struct.rtx_def** %rtx55, align 8, !tbaa !4
  %arrayidx68 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 1
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx69, align 8, !tbaa !4
  br label %if.end70

if.end70:                                         ; preds = %if.then60, %if.then63
  %src.0 = phi %struct.rtx_def* [ %call61, %if.then60 ], [ %24, %if.then63 ]
  %25 = bitcast %struct.rtx_def* %src.0 to i32*
  %bf.load71 = load i32* %25, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 54
  br i1 %cmp73, label %if.then75, label %if.end104

if.then75:                                        ; preds = %if.end70
  %26 = load %struct.rtx_def** %rtx55, align 8, !tbaa !4
  %arrayidx80 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx81, align 8, !tbaa !4
  %call82 = tail call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* %27) #6
  %tobool83 = icmp eq i32 %call82, 0
  br i1 %tobool83, label %if.else, label %if.end95

if.else:                                          ; preds = %if.then75
  %28 = load %struct.rtx_def** %rtx55, align 8, !tbaa !4
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx90, align 8, !tbaa !4
  %call91 = tail call i32 @rtx_equal_p(%struct.rtx_def* %16, %struct.rtx_def* %29) #6
  %tobool92 = icmp eq i32 %call91, 0
  %.src.0 = select i1 %tobool92, %struct.rtx_def* %16, %struct.rtx_def* %src.0
  br label %if.end95

if.end95:                                         ; preds = %if.else, %if.then75
  %op_a.0 = phi %struct.rtx_def* [ %src.0, %if.then75 ], [ %15, %if.else ]
  %op_b.0 = phi %struct.rtx_def* [ %16, %if.then75 ], [ %.src.0, %if.else ]
  %30 = bitcast %struct.rtx_def* %op_a.0 to i32*
  %bf.load96 = load i32* %30, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 54
  br i1 %cmp98, label %if.then100, label %if.end104

if.then100:                                       ; preds = %if.end95
  %call101 = tail call i32 @swap_condition(i32 %bf.clear33) #6
  br label %if.end104

if.end104:                                        ; preds = %if.then30, %if.end70, %if.then100, %if.end95, %land.lhs.true52, %land.lhs.true
  %op_a.1 = phi %struct.rtx_def* [ %op_b.0, %if.then100 ], [ %op_a.0, %if.end95 ], [ %15, %if.end70 ], [ %15, %land.lhs.true52 ], [ %15, %land.lhs.true ], [ %15, %if.then30 ]
  %op_b.1 = phi %struct.rtx_def* [ %op_a.0, %if.then100 ], [ %op_b.0, %if.end95 ], [ %16, %if.end70 ], [ %16, %land.lhs.true52 ], [ %16, %land.lhs.true ], [ %16, %if.then30 ]
  %code.0 = phi i32 [ %call101, %if.then100 ], [ %bf.clear33, %if.end95 ], [ %bf.clear33, %if.end70 ], [ %bf.clear33, %land.lhs.true52 ], [ %bf.clear33, %land.lhs.true ], [ %bf.clear33, %if.then30 ]
  %31 = bitcast %struct.rtx_def* %op_b.1 to i32*
  %bf.load105 = load i32* %31, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  %cmp107 = icmp eq i32 %bf.clear106, 54
  br i1 %cmp107, label %if.then109, label %if.end142

if.then109:                                       ; preds = %if.end104
  %rtwint = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0, i32 0
  %32 = load i64* %rtwint, align 8, !tbaa !6
  %rtwint116 = getelementptr inbounds %struct.rtx_def* %op_b.1, i64 0, i32 1, i64 0, i32 0
  %33 = load i64* %rtwint116, align 8, !tbaa !6
  switch i32 %code.0, label %if.end142 [
    i32 107, label %sw.bb
    i32 106, label %sw.bb122
    i32 105, label %sw.bb128
    i32 104, label %sw.bb135
  ]

sw.bb:                                            ; preds = %if.then109
  %add = add nsw i64 %32, 1
  %cmp117 = icmp eq i64 %33, %add
  br i1 %cmp117, label %if.then119, label %if.end142

if.then119:                                       ; preds = %sw.bb
  %call120 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %32) #6
  br label %if.end142

sw.bb122:                                         ; preds = %if.then109
  %sub = add nsw i64 %32, -1
  %cmp123 = icmp eq i64 %33, %sub
  br i1 %cmp123, label %if.then125, label %if.end142

if.then125:                                       ; preds = %sw.bb122
  %call126 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %32) #6
  br label %if.end142

sw.bb128:                                         ; preds = %if.then109
  %sub129 = add nsw i64 %32, -1
  %cmp130 = icmp eq i64 %33, %sub129
  br i1 %cmp130, label %if.then132, label %if.end142

if.then132:                                       ; preds = %sw.bb128
  %call133 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %32) #6
  br label %if.end142

sw.bb135:                                         ; preds = %if.then109
  %add136 = add nsw i64 %32, 1
  %cmp137 = icmp eq i64 %33, %add136
  br i1 %cmp137, label %if.then139, label %if.end142

if.then139:                                       ; preds = %sw.bb135
  %call140 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %32) #6
  br label %if.end142

if.end142:                                        ; preds = %sw.bb135, %sw.bb128, %sw.bb122, %sw.bb, %if.then109, %if.end104, %if.then119, %if.then125, %if.then132, %if.then139
  %op_b.2 = phi %struct.rtx_def* [ %call140, %if.then139 ], [ %call133, %if.then132 ], [ %call126, %if.then125 ], [ %call120, %if.then119 ], [ %op_b.1, %if.end104 ], [ %op_b.1, %if.then109 ], [ %op_b.1, %sw.bb ], [ %op_b.1, %sw.bb122 ], [ %op_b.1, %sw.bb128 ], [ %op_b.1, %sw.bb135 ]
  %code.1 = phi i32 [ 105, %if.then139 ], [ 104, %if.then132 ], [ 107, %if.then125 ], [ 106, %if.then119 ], [ %code.0, %if.end104 ], [ %code.0, %if.then109 ], [ 107, %sw.bb ], [ 106, %sw.bb122 ], [ 105, %sw.bb128 ], [ 104, %sw.bb135 ]
  %34 = load %struct.rtx_def** %cond1, align 8, !tbaa !4
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load144 = load i32* %35, align 8
  %bf.clear145 = and i32 %bf.load144, 65535
  %cmp146 = icmp eq i32 %code.1, %bf.clear145
  br i1 %cmp146, label %lor.lhs.false, label %if.then161

lor.lhs.false:                                    ; preds = %if.end142
  %fld149 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1
  %rtx151 = bitcast [1 x %union.rtunion_def]* %fld149 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx151, align 8, !tbaa !4
  %cmp152 = icmp eq %struct.rtx_def* %op_a.1, %36
  br i1 %cmp152, label %lor.lhs.false154, label %if.then161

lor.lhs.false154:                                 ; preds = %lor.lhs.false
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 1
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx158, align 8, !tbaa !4
  %cmp159 = icmp eq %struct.rtx_def* %op_b.2, %37
  br i1 %cmp159, label %if.end167, label %if.then161

if.then161:                                       ; preds = %lor.lhs.false154, %lor.lhs.false, %if.end142
  %38 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load162 = load i32* %38, align 8
  %bf.lshr = lshr i32 %bf.load162, 16
  %bf.clear163 = and i32 %bf.lshr, 255
  %call164 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code.1, i32 %bf.clear163, %struct.rtx_def* %op_a.1, %struct.rtx_def* %op_b.2) #6
  %39 = load %struct.rtx_def** %cond_earliest42, align 8, !tbaa !4
  store %struct.rtx_def* %39, %struct.rtx_def** %earliest, align 8, !tbaa !4
  br label %return

if.end167:                                        ; preds = %lor.lhs.false154, %land.end
  %40 = load %struct.rtx_def** %jump, align 8, !tbaa !4
  %call169 = tail call %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %40, %struct.rtx_def* %5, i32 %land.ext, %struct.rtx_def** %earliest, %struct.rtx_def* %target) #6
  %tobool170 = icmp eq %struct.rtx_def* %call169, null
  br i1 %tobool170, label %return, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %if.end167
  %call172 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %call169) #6
  %tobool173 = icmp eq i32 %call172, 0
  br i1 %tobool173, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %lor.lhs.false171
  %insn.0297 = load %struct.rtx_def** %jump, align 8
  %41 = load %struct.rtx_def** %earliest, align 8, !tbaa !4
  %cmp177298 = icmp eq %struct.rtx_def* %insn.0297, %41
  br i1 %cmp177298, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %x = getelementptr inbounds %struct.noce_if_info* %if_info, i64 0, i32 3
  br label %for.body

for.cond194.preheader:                            ; preds = %for.inc
  %.pre = load %struct.rtx_def** %jump, align 8, !tbaa !4
  %a = getelementptr inbounds %struct.noce_if_info* %if_info, i64 0, i32 4
  %b = getelementptr inbounds %struct.noce_if_info* %if_info, i64 0, i32 5
  %cmp196293 = icmp eq %struct.rtx_def* %46, %.pre
  br i1 %cmp196293, label %return, label %for.body198

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %42 = phi %struct.rtx_def* [ %41, %for.body.lr.ph ], [ %46, %for.inc ]
  %insn.0299 = phi %struct.rtx_def* [ %insn.0297, %for.body.lr.ph ], [ %insn.0, %for.inc ]
  %43 = bitcast %struct.rtx_def* %insn.0299 to i32*
  %bf.load179 = load i32* %43, align 8
  %bf.clear180 = and i32 %bf.load179, 65535
  %idxprom181291 = zext i32 %bf.clear180 to i64
  %arrayidx182 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom181291
  %44 = load i8* %arrayidx182, align 1, !tbaa !1
  %cmp184 = icmp eq i8 %44, 105
  br i1 %cmp184, label %land.lhs.true186, label %for.inc

land.lhs.true186:                                 ; preds = %for.body
  %45 = load %struct.rtx_def** %x, align 8, !tbaa !4
  %call187 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %45, %struct.rtx_def* %insn.0299) #6
  %tobool188 = icmp eq i32 %call187, 0
  br i1 %tobool188, label %land.lhs.true186.for.inc_crit_edge, label %return

land.lhs.true186.for.inc_crit_edge:               ; preds = %land.lhs.true186
  %.pre303 = load %struct.rtx_def** %earliest, align 8, !tbaa !4
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true186.for.inc_crit_edge, %for.body
  %46 = phi %struct.rtx_def* [ %.pre303, %land.lhs.true186.for.inc_crit_edge ], [ %42, %for.body ]
  %arrayidx192 = getelementptr inbounds %struct.rtx_def* %insn.0299, i64 0, i32 1, i64 1
  %rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx193, align 8
  %cmp177 = icmp eq %struct.rtx_def* %insn.0, %46
  br i1 %cmp177, label %for.cond194.preheader, label %for.body

for.body198:                                      ; preds = %for.cond194.preheader, %for.inc214
  %47 = phi %struct.rtx_def* [ %52, %for.inc214 ], [ %.pre, %for.cond194.preheader ]
  %insn.1294 = phi %struct.rtx_def* [ %53, %for.inc214 ], [ %46, %for.cond194.preheader ]
  %48 = bitcast %struct.rtx_def* %insn.1294 to i32*
  %bf.load199 = load i32* %48, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  %idxprom201290 = zext i32 %bf.clear200 to i64
  %arrayidx202 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom201290
  %49 = load i8* %arrayidx202, align 1, !tbaa !1
  %cmp204 = icmp eq i8 %49, 105
  br i1 %cmp204, label %land.lhs.true206, label %for.inc214

land.lhs.true206:                                 ; preds = %for.body198
  %50 = load %struct.rtx_def** %a, align 8, !tbaa !4
  %call207 = tail call i32 @modified_in_p(%struct.rtx_def* %50, %struct.rtx_def* %insn.1294) #6
  %tobool208 = icmp eq i32 %call207, 0
  br i1 %tobool208, label %lor.lhs.false209, label %return

lor.lhs.false209:                                 ; preds = %land.lhs.true206
  %51 = load %struct.rtx_def** %b, align 8, !tbaa !4
  %call210 = tail call i32 @modified_in_p(%struct.rtx_def* %51, %struct.rtx_def* %insn.1294) #6
  %tobool211 = icmp eq i32 %call210, 0
  br i1 %tobool211, label %lor.lhs.false209.for.inc214_crit_edge, label %return

lor.lhs.false209.for.inc214_crit_edge:            ; preds = %lor.lhs.false209
  %.pre302 = load %struct.rtx_def** %jump, align 8, !tbaa !4
  br label %for.inc214

for.inc214:                                       ; preds = %lor.lhs.false209.for.inc214_crit_edge, %for.body198
  %52 = phi %struct.rtx_def* [ %.pre302, %lor.lhs.false209.for.inc214_crit_edge ], [ %47, %for.body198 ]
  %arrayidx216 = getelementptr inbounds %struct.rtx_def* %insn.1294, i64 0, i32 1, i64 2
  %rtx217 = bitcast %union.rtunion_def* %arrayidx216 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx217, align 8, !tbaa !4
  %cmp196 = icmp eq %struct.rtx_def* %53, %52
  br i1 %cmp196, label %return, label %for.body198

return:                                           ; preds = %for.cond.preheader, %land.lhs.true186, %for.cond194.preheader, %land.lhs.true206, %lor.lhs.false209, %for.inc214, %if.end167, %lor.lhs.false171, %if.then161, %if.then
  %retval.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %call164, %if.then161 ], [ null, %lor.lhs.false171 ], [ null, %if.end167 ], [ %call169, %for.cond194.preheader ], [ null, %land.lhs.true206 ], [ null, %lor.lhs.false209 ], [ %call169, %for.inc214 ], [ null, %land.lhs.true186 ], [ %call169, %for.cond.preheader ]
  ret %struct.rtx_def* %retval.0
}
