define internal fastcc i32 @dead_or_predicable(%struct.basic_block_def* %test_bb, %struct.basic_block_def* %merge_bb, %struct.basic_block_def* %other_bb, %struct.basic_block_def* %new_dest, i32 %reversep) #0 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %end = alloca %struct.rtx_def*, align 8
  %earliest = alloca %struct.rtx_def*, align 8
  %merge_set_head = alloca %struct.bitmap_head_def, align 8
  %tmp_head = alloca %struct.bitmap_head_def, align 8
  %test_live_head = alloca %struct.bitmap_head_def, align 8
  %test_set_head = alloca %struct.bitmap_head_def, align 8
  %end1 = getelementptr inbounds %struct.basic_block_def* %test_bb, i64 0, i32 1
  %0 = load %struct.rtx_def** %end1, align 8, !tbaa !4
  %head2 = getelementptr inbounds %struct.basic_block_def* %merge_bb, i64 0, i32 0
  %1 = load %struct.rtx_def** %head2, align 8, !tbaa !4
  store %struct.rtx_def* %1, %struct.rtx_def** %head, align 8, !tbaa !4
  %end3 = getelementptr inbounds %struct.basic_block_def* %merge_bb, i64 0, i32 1
  %2 = load %struct.rtx_def** %end3, align 8, !tbaa !4
  store %struct.rtx_def* %2, %struct.rtx_def** %end, align 8, !tbaa !4
  %3 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 36
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  store %struct.rtx_def* %4, %struct.rtx_def** %head, align 8, !tbaa !4
  %.phi.trans.insert = bitcast %struct.rtx_def* %4 to i32*
  %bf.load4.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load4 = phi i32 [ %bf.load4.pre, %if.then ], [ %bf.load, %entry ]
  %5 = phi %struct.rtx_def* [ %4, %if.then ], [ %1, %entry ]
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 37
  br i1 %cmp6, label %if.then7, label %if.end14

if.then7:                                         ; preds = %if.end
  %cmp8 = icmp eq %struct.rtx_def* %5, %2
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.then7
  store %struct.rtx_def* null, %struct.rtx_def** %end, align 8, !tbaa !4
  store %struct.rtx_def* null, %struct.rtx_def** %head, align 8, !tbaa !4
  br label %no_body

if.end10:                                         ; preds = %if.then7
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 2
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx13, align 8, !tbaa !4
  store %struct.rtx_def* %6, %struct.rtx_def** %head, align 8, !tbaa !4
  br label %if.end14

if.end14:                                         ; preds = %if.end10, %if.end
  %insn.0689 = phi %struct.rtx_def* [ %6, %if.end10 ], [ %5, %if.end ]
  %7 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load15 = load i32* %7, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 33
  br i1 %cmp17, label %if.then18, label %for.cond.preheader

if.then18:                                        ; preds = %if.end14
  %cmp19 = icmp eq %struct.rtx_def* %insn.0689, %2
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.then18
  store %struct.rtx_def* null, %struct.rtx_def** %end, align 8, !tbaa !4
  store %struct.rtx_def* null, %struct.rtx_def** %head, align 8, !tbaa !4
  br label %no_body

if.end21:                                         ; preds = %if.then18
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx24, align 8, !tbaa !4
  store %struct.rtx_def* %8, %struct.rtx_def** %end, align 8, !tbaa !4
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end14, %if.end21
  %9 = phi %struct.rtx_def* [ %8, %if.end21 ], [ %2, %if.end14 ]
  %10 = bitcast %struct.rtx_def* %insn.0689 to i32*
  %bf.load31690 = load i32* %10, align 8
  %bf.clear32691 = and i32 %bf.load31690, 65535
  %cmp33692 = icmp eq i32 %bf.clear32691, 34
  br i1 %cmp33692, label %return, label %if.end35

if.end35:                                         ; preds = %for.cond.preheader, %for.inc
  %11 = phi %struct.rtx_def* [ %14, %for.inc ], [ %9, %for.cond.preheader ]
  %bf.clear32694 = phi i32 [ %bf.clear32, %for.inc ], [ %bf.clear32691, %for.cond.preheader ]
  %insn.0693 = phi %struct.rtx_def* [ %insn.0, %for.inc ], [ %insn.0689, %for.cond.preheader ]
  %idxprom659 = zext i32 %bf.clear32694 to i64
  %arrayidx38 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom659
  %12 = load i8* %arrayidx38, align 1, !tbaa !1
  %cmp39 = icmp eq i8 %12, 105
  br i1 %cmp39, label %if.then41, label %if.end54

if.then41:                                        ; preds = %if.end35
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %insn.0693, i64 0, i32 1, i64 3
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx44, align 8, !tbaa !4
  %call = call i32 @may_trap_p(%struct.rtx_def* %13) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end46, label %return

if.end46:                                         ; preds = %if.then41
  %call50 = call i32 @for_each_rtx(%struct.rtx_def** %rtx44, i32 (%struct.rtx_def**, i8*)* @find_memory, i8* null) #6
  %tobool51 = icmp eq i32 %call50, 0
  br i1 %tobool51, label %if.end46.if.end54_crit_edge, label %return

if.end46.if.end54_crit_edge:                      ; preds = %if.end46
  %.pre = load %struct.rtx_def** %end, align 8, !tbaa !4
  br label %if.end54

if.end54:                                         ; preds = %if.end46.if.end54_crit_edge, %if.end35
  %14 = phi %struct.rtx_def* [ %.pre, %if.end46.if.end54_crit_edge ], [ %11, %if.end35 ]
  %cmp55 = icmp eq %struct.rtx_def* %insn.0693, %14
  br i1 %cmp55, label %for.end, label %for.inc

for.inc:                                          ; preds = %if.end54
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %insn.0693, i64 0, i32 1, i64 2
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx61, align 8
  %15 = bitcast %struct.rtx_def* %insn.0 to i32*
  %bf.load31 = load i32* %15, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 34
  br i1 %cmp33, label %return, label %if.end35

for.end:                                          ; preds = %if.end54
  %call62 = call i32 @any_condjump_p(%struct.rtx_def* %0) #6
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %return, label %if.end65

if.end65:                                         ; preds = %for.end
  %call66 = call fastcc %struct.rtx_def* @noce_get_condition(%struct.rtx_def* %0, %struct.rtx_def** %earliest) #7
  %tobool67 = icmp eq %struct.rtx_def* %call66, null
  br i1 %tobool67, label %return, label %if.end69

if.end69:                                         ; preds = %if.end65
  %call70 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %tmp_head) #6
  %call71 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %merge_set_head) #6
  %call72 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %test_live_head) #6
  %call73 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %test_set_head) #6
  %call74 = call i32 @propagate_block(%struct.basic_block_def* %merge_bb, %struct.bitmap_head_def* %call70, %struct.bitmap_head_def* %call71, %struct.bitmap_head_def* %call71, i32 0) #6
  %16 = load i32* @reload_completed, align 4, !tbaa !0
  %tobool75 = icmp eq i32 %16, 0
  br i1 %tobool75, label %do.body, label %if.end143

do.body:                                          ; preds = %if.end69
  %first = getelementptr inbounds %struct.bitmap_head_def* %call71, i64 0, i32 0
  %ptr_.1684 = load %struct.bitmap_element_def** %first, align 8
  %cmp93685 = icmp eq %struct.bitmap_element_def* %ptr_.1684, null
  br i1 %cmp93685, label %if.end143, label %for.cond95.preheader

for.cond95.preheader:                             ; preds = %do.body, %for.end139
  %ptr_.1687 = phi %struct.bitmap_element_def* [ %ptr_.1, %for.end139 ], [ %ptr_.1684, %do.body ]
  %fail.0686 = phi i32 [ %fail.5, %for.end139 ], [ 0, %do.body ]
  %indx114 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1687, i64 0, i32 2
  br label %for.body98

for.body98:                                       ; preds = %if.end136, %for.cond95.preheader
  %indvars.iv706 = phi i64 [ 0, %for.cond95.preheader ], [ %indvars.iv.next707, %if.end136 ]
  %fail.1682 = phi i32 [ %fail.0686, %for.cond95.preheader ], [ %fail.5, %if.end136 ]
  %arrayidx101 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1687, i64 0, i32 3, i64 %indvars.iv706
  %17 = load i64* %arrayidx101, align 8, !tbaa !6
  %cmp102 = icmp eq i64 %17, 0
  br i1 %cmp102, label %if.end136, label %for.cond105.preheader

for.cond105.preheader:                            ; preds = %for.body98
  %18 = shl i64 %indvars.iv706, 6
  br label %for.body108

for.body108:                                      ; preds = %for.cond105.preheader, %for.inc134
  %indvars.iv703 = phi i64 [ 0, %for.cond105.preheader ], [ %indvars.iv.next704, %for.inc134 ]
  %word_.0681 = phi i64 [ %17, %for.cond105.preheader ], [ %word_.1, %for.inc134 ]
  %fail.2679 = phi i32 [ %fail.1682, %for.cond105.preheader ], [ %fail.4, %for.inc134 ]
  %shl = shl i64 1, %indvars.iv703
  %and = and i64 %shl, %word_.0681
  %cmp110 = icmp eq i64 %and, 0
  br i1 %cmp110, label %for.inc134, label %if.then112

if.then112:                                       ; preds = %for.body108
  %neg = xor i64 %shl, -1
  %and113 = and i64 %word_.0681, %neg
  %19 = load i32* %indx114, align 4, !tbaa !0
  %mul = shl i32 %19, 7
  %20 = add i64 %indvars.iv703, %18
  %21 = trunc i64 %20 to i32
  %add116 = add i32 %21, %mul
  %cmp117 = icmp slt i32 %add116, 53
  br i1 %cmp117, label %land.lhs.true119, label %if.end128

land.lhs.true119:                                 ; preds = %if.then112
  %idxprom120 = sext i32 %add116 to i64
  %arrayidx121 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom120
  %22 = load i8* %arrayidx121, align 1, !tbaa !1
  %tobool122 = icmp eq i8 %22, 0
  br i1 %tobool122, label %land.lhs.true123, label %if.end128

land.lhs.true123:                                 ; preds = %land.lhs.true119
  %arrayidx125 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom120
  %23 = load i8* %arrayidx125, align 1, !tbaa !1
  %tobool126 = icmp eq i8 %23, 0
  %.fail.2 = select i1 %tobool126, i32 1, i32 %fail.2679
  br label %if.end128

if.end128:                                        ; preds = %land.lhs.true123, %land.lhs.true119, %if.then112
  %fail.3 = phi i32 [ %fail.2679, %land.lhs.true119 ], [ %fail.2679, %if.then112 ], [ %.fail.2, %land.lhs.true123 ]
  %cmp129 = icmp eq i64 %and113, 0
  br i1 %cmp129, label %if.end136, label %for.inc134

for.inc134:                                       ; preds = %for.body108, %if.end128
  %fail.4 = phi i32 [ %fail.3, %if.end128 ], [ %fail.2679, %for.body108 ]
  %word_.1 = phi i64 [ %and113, %if.end128 ], [ %word_.0681, %for.body108 ]
  %indvars.iv.next704 = add i64 %indvars.iv703, 1
  %24 = trunc i64 %indvars.iv.next704 to i32
  %cmp106 = icmp ult i32 %24, 64
  br i1 %cmp106, label %for.body108, label %if.end136

if.end136:                                        ; preds = %for.inc134, %if.end128, %for.body98
  %fail.5 = phi i32 [ %fail.1682, %for.body98 ], [ %fail.4, %for.inc134 ], [ %fail.3, %if.end128 ]
  %indvars.iv.next707 = add i64 %indvars.iv706, 1
  %lftr.wideiv709 = trunc i64 %indvars.iv.next707 to i32
  %exitcond710 = icmp eq i32 %lftr.wideiv709, 2
  br i1 %exitcond710, label %for.end139, label %for.body98

for.end139:                                       ; preds = %if.end136
  %next141 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1687, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next141, align 8
  %cmp93 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp93, label %if.end143, label %for.cond95.preheader

if.end143:                                        ; preds = %do.body, %for.end139, %if.end69
  %fail.6 = phi i32 [ 0, %if.end69 ], [ 0, %do.body ], [ %fail.5, %for.end139 ]
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %other_bb, i64 0, i32 8
  %25 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !4
  call void @bitmap_copy(%struct.bitmap_head_def* %call72, %struct.bitmap_head_def* %25) #6
  %call144 = call %struct.propagate_block_info* @init_propagate_block_info(%struct.basic_block_def* %test_bb, %struct.bitmap_head_def* %call72, %struct.bitmap_head_def* %call73, %struct.bitmap_head_def* %call73, i32 0) #6
  br label %for.cond145

for.cond145:                                      ; preds = %for.cond145, %if.end143
  %insn.1 = phi %struct.rtx_def* [ %0, %if.end143 ], [ %call146, %for.cond145 ]
  %call146 = call %struct.rtx_def* @propagate_one_insn(%struct.propagate_block_info* %call144, %struct.rtx_def* %insn.1) #6
  %26 = load %struct.rtx_def** %earliest, align 8, !tbaa !4
  %cmp147 = icmp eq %struct.rtx_def* %insn.1, %26
  br i1 %cmp147, label %for.end152, label %for.cond145

for.end152:                                       ; preds = %for.cond145
  call void @free_propagate_block_info(%struct.propagate_block_info* %call144) #6
  %call153 = call i32 @bitmap_operation(%struct.bitmap_head_def* %call70, %struct.bitmap_head_def* %call73, %struct.bitmap_head_def* %call72, i32 2) #6
  %call154 = call i32 @bitmap_operation(%struct.bitmap_head_def* %call70, %struct.bitmap_head_def* %call70, %struct.bitmap_head_def* %call71, i32 0) #6
  %first158 = getelementptr inbounds %struct.bitmap_head_def* %call70, i64 0, i32 0
  %ptr_157.1674 = load %struct.bitmap_element_def** %first158, align 8
  %cmp185675 = icmp eq %struct.bitmap_element_def* %ptr_157.1674, null
  br i1 %cmp185675, label %do.end234, label %for.cond188.preheader

for.cond188.preheader:                            ; preds = %for.end152, %for.end230
  %ptr_157.1677 = phi %struct.bitmap_element_def* [ %ptr_157.1, %for.end230 ], [ %ptr_157.1674, %for.end152 ]
  %fail.7676 = phi i32 [ %fail.11, %for.end230 ], [ %fail.6, %for.end152 ]
  br label %for.body191

for.body191:                                      ; preds = %if.end227, %for.cond188.preheader
  %indvars.iv699 = phi i64 [ 0, %for.cond188.preheader ], [ %indvars.iv.next700, %if.end227 ]
  %fail.8672 = phi i32 [ %fail.7676, %for.cond188.preheader ], [ %fail.11, %if.end227 ]
  %arrayidx196 = getelementptr inbounds %struct.bitmap_element_def* %ptr_157.1677, i64 0, i32 3, i64 %indvars.iv699
  %27 = load i64* %arrayidx196, align 8, !tbaa !6
  %cmp197 = icmp eq i64 %27, 0
  br i1 %cmp197, label %if.end227, label %for.body203

for.body203:                                      ; preds = %for.body191, %for.inc224
  %indvars.iv697 = phi i64 [ %indvars.iv.next698, %for.inc224 ], [ 0, %for.body191 ]
  %word_193.0671 = phi i64 [ %word_193.1, %for.inc224 ], [ %27, %for.body191 ]
  %fail.9669 = phi i32 [ %fail.10, %for.inc224 ], [ %fail.8672, %for.body191 ]
  %shl207 = shl i64 1, %indvars.iv697
  %and208 = and i64 %shl207, %word_193.0671
  %cmp209 = icmp eq i64 %and208, 0
  br i1 %cmp209, label %for.inc224, label %if.then211

if.then211:                                       ; preds = %for.body203
  %neg212 = xor i64 %shl207, -1
  %and213 = and i64 %word_193.0671, %neg212
  %cmp219 = icmp eq i64 %and213, 0
  br i1 %cmp219, label %if.end227, label %for.inc224

for.inc224:                                       ; preds = %for.body203, %if.then211
  %fail.10 = phi i32 [ 1, %if.then211 ], [ %fail.9669, %for.body203 ]
  %word_193.1 = phi i64 [ %and213, %if.then211 ], [ %word_193.0671, %for.body203 ]
  %indvars.iv.next698 = add i64 %indvars.iv697, 1
  %28 = trunc i64 %indvars.iv.next698 to i32
  %cmp201 = icmp ult i32 %28, 64
  br i1 %cmp201, label %for.body203, label %if.end227

if.end227:                                        ; preds = %for.inc224, %if.then211, %for.body191
  %fail.11 = phi i32 [ %fail.8672, %for.body191 ], [ %fail.10, %for.inc224 ], [ 1, %if.then211 ]
  %indvars.iv.next700 = add i64 %indvars.iv699, 1
  %lftr.wideiv701 = trunc i64 %indvars.iv.next700 to i32
  %exitcond702 = icmp eq i32 %lftr.wideiv701, 2
  br i1 %exitcond702, label %for.end230, label %for.body191

for.end230:                                       ; preds = %if.end227
  %next232 = getelementptr inbounds %struct.bitmap_element_def* %ptr_157.1677, i64 0, i32 0
  %ptr_157.1 = load %struct.bitmap_element_def** %next232, align 8
  %cmp185 = icmp eq %struct.bitmap_element_def* %ptr_157.1, null
  br i1 %cmp185, label %do.end234, label %for.cond188.preheader

do.end234:                                        ; preds = %for.end230, %for.end152
  %fail.7.lcssa = phi i32 [ %fail.6, %for.end152 ], [ %fail.11, %for.end230 ]
  %global_live_at_start235 = getelementptr inbounds %struct.basic_block_def* %merge_bb, i64 0, i32 8
  %29 = load %struct.bitmap_head_def** %global_live_at_start235, align 8, !tbaa !4
  %call236 = call i32 @bitmap_operation(%struct.bitmap_head_def* %call70, %struct.bitmap_head_def* %call73, %struct.bitmap_head_def* %29, i32 0) #6
  %ptr_239.1665 = load %struct.bitmap_element_def** %first158, align 8
  %cmp267666 = icmp eq %struct.bitmap_element_def* %ptr_239.1665, null
  br i1 %cmp267666, label %do.body317, label %for.cond270.preheader

for.cond270.preheader:                            ; preds = %do.end234, %for.end312
  %ptr_239.1668 = phi %struct.bitmap_element_def* [ %ptr_239.1, %for.end312 ], [ %ptr_239.1665, %do.end234 ]
  %fail.12667 = phi i32 [ %fail.16, %for.end312 ], [ %fail.7.lcssa, %do.end234 ]
  br label %for.body273

for.body273:                                      ; preds = %if.end309, %for.cond270.preheader
  %indvars.iv695 = phi i64 [ 0, %for.cond270.preheader ], [ %indvars.iv.next696, %if.end309 ]
  %fail.13663 = phi i32 [ %fail.12667, %for.cond270.preheader ], [ %fail.16, %if.end309 ]
  %arrayidx278 = getelementptr inbounds %struct.bitmap_element_def* %ptr_239.1668, i64 0, i32 3, i64 %indvars.iv695
  %30 = load i64* %arrayidx278, align 8, !tbaa !6
  %cmp279 = icmp eq i64 %30, 0
  br i1 %cmp279, label %if.end309, label %for.body285

for.body285:                                      ; preds = %for.body273, %for.inc306
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc306 ], [ 0, %for.body273 ]
  %word_275.0662 = phi i64 [ %word_275.1, %for.inc306 ], [ %30, %for.body273 ]
  %fail.14660 = phi i32 [ %fail.15, %for.inc306 ], [ %fail.13663, %for.body273 ]
  %shl289 = shl i64 1, %indvars.iv
  %and290 = and i64 %shl289, %word_275.0662
  %cmp291 = icmp eq i64 %and290, 0
  br i1 %cmp291, label %for.inc306, label %if.then293

if.then293:                                       ; preds = %for.body285
  %neg294 = xor i64 %shl289, -1
  %and295 = and i64 %word_275.0662, %neg294
  %cmp301 = icmp eq i64 %and295, 0
  br i1 %cmp301, label %if.end309, label %for.inc306

for.inc306:                                       ; preds = %for.body285, %if.then293
  %fail.15 = phi i32 [ 1, %if.then293 ], [ %fail.14660, %for.body285 ]
  %word_275.1 = phi i64 [ %and295, %if.then293 ], [ %word_275.0662, %for.body285 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %31 = trunc i64 %indvars.iv.next to i32
  %cmp283 = icmp ult i32 %31, 64
  br i1 %cmp283, label %for.body285, label %if.end309

if.end309:                                        ; preds = %for.inc306, %if.then293, %for.body273
  %fail.16 = phi i32 [ %fail.13663, %for.body273 ], [ %fail.15, %for.inc306 ], [ 1, %if.then293 ]
  %indvars.iv.next696 = add i64 %indvars.iv695, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next696 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 2
  br i1 %exitcond, label %for.end312, label %for.body273

for.end312:                                       ; preds = %if.end309
  %next314 = getelementptr inbounds %struct.bitmap_element_def* %ptr_239.1668, i64 0, i32 0
  %ptr_239.1 = load %struct.bitmap_element_def** %next314, align 8
  %cmp267 = icmp eq %struct.bitmap_element_def* %ptr_239.1, null
  br i1 %cmp267, label %do.body317, label %for.cond270.preheader

do.body317:                                       ; preds = %for.end312, %do.end234
  %fail.12.lcssa = phi i32 [ %fail.7.lcssa, %do.end234 ], [ %fail.16, %for.end312 ]
  %tobool318 = icmp eq %struct.bitmap_head_def* %call70, null
  br i1 %tobool318, label %do.body322, label %if.then319

if.then319:                                       ; preds = %do.body317
  call void @bitmap_clear(%struct.bitmap_head_def* %call70) #6
  br label %do.body322

do.body322:                                       ; preds = %do.body317, %if.then319
  %tobool323 = icmp eq %struct.bitmap_head_def* %call71, null
  br i1 %tobool323, label %do.body327, label %if.then324

if.then324:                                       ; preds = %do.body322
  call void @bitmap_clear(%struct.bitmap_head_def* %call71) #6
  br label %do.body327

do.body327:                                       ; preds = %do.body322, %if.then324
  %tobool328 = icmp eq %struct.bitmap_head_def* %call72, null
  br i1 %tobool328, label %do.body332, label %if.then329

if.then329:                                       ; preds = %do.body327
  call void @bitmap_clear(%struct.bitmap_head_def* %call72) #6
  br label %do.body332

do.body332:                                       ; preds = %do.body327, %if.then329
  %tobool333 = icmp eq %struct.bitmap_head_def* %call73, null
  br i1 %tobool333, label %do.end336, label %if.then334

if.then334:                                       ; preds = %do.body332
  call void @bitmap_clear(%struct.bitmap_head_def* %call73) #6
  br label %do.end336

do.end336:                                        ; preds = %do.body332, %if.then334
  %tobool337 = icmp eq i32 %fail.12.lcssa, 0
  br i1 %tobool337, label %no_body, label %return

no_body:                                          ; preds = %do.end336, %if.then20, %if.then9
  %arrayidx341 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 7
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx342, align 8, !tbaa !4
  %cmp343 = icmp ne %struct.basic_block_def* %other_bb, %new_dest
  br i1 %cmp343, label %if.then345, label %if.end354

if.then345:                                       ; preds = %no_body
  %call346 = call %struct.rtx_def* @block_label(%struct.basic_block_def* %new_dest) #6
  %tobool347 = icmp eq i32 %reversep, 0
  br i1 %tobool347, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then345
  %call348 = call i32 @invert_jump_1(%struct.rtx_def* %0, %struct.rtx_def* %call346) #6
  %tobool349 = icmp eq i32 %call348, 0
  br i1 %tobool349, label %cancel, label %if.end354

cond.false:                                       ; preds = %if.then345
  %call350 = call i32 @redirect_jump_1(%struct.rtx_def* %0, %struct.rtx_def* %call346) #6
  %tobool351 = icmp eq i32 %call350, 0
  br i1 %tobool351, label %cancel, label %if.end354

if.end354:                                        ; preds = %cond.true, %cond.false, %no_body
  %new_label.0 = phi %struct.rtx_def* [ %call346, %cond.true ], [ %call346, %cond.false ], [ null, %no_body ]
  %call355 = call i32 @apply_change_group() #6
  %tobool356 = icmp eq i32 %call355, 0
  br i1 %tobool356, label %return, label %if.end358

if.end358:                                        ; preds = %if.end354
  br i1 %cmp343, label %if.then361, label %if.end490

if.then361:                                       ; preds = %if.end358
  %tobool362 = icmp eq %struct.rtx_def* %32, null
  br i1 %tobool362, label %if.end366, label %if.then363

if.then363:                                       ; preds = %if.then361
  %arrayidx365 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx365 to i32*
  %33 = load i32* %rtint, align 4, !tbaa !0
  %sub = add nsw i32 %33, -1
  store i32 %sub, i32* %rtint, align 4, !tbaa !0
  br label %if.end366

if.end366:                                        ; preds = %if.then361, %if.then363
  %tobool367 = icmp eq %struct.rtx_def* %new_label.0, null
  br i1 %tobool367, label %if.end373, label %if.then368

if.then368:                                       ; preds = %if.end366
  %arrayidx370 = getelementptr inbounds %struct.rtx_def* %new_label.0, i64 0, i32 1, i64 3
  %rtint371 = bitcast %union.rtunion_def* %arrayidx370 to i32*
  %34 = load i32* %rtint371, align 4, !tbaa !0
  %add372 = add nsw i32 %34, 1
  store i32 %add372, i32* %rtint371, align 4, !tbaa !0
  br label %if.end373

if.end373:                                        ; preds = %if.end366, %if.then368
  %35 = getelementptr inbounds %union.rtunion_def* %arrayidx341, i64 0, i32 0
  %new_label.0.c = ptrtoint %struct.rtx_def* %new_label.0 to i64
  store i64 %new_label.0.c, i64* %35, align 8, !tbaa !4
  %tobool377 = icmp ne i32 %reversep, 0
  br i1 %tobool377, label %if.then378, label %if.end379

if.then378:                                       ; preds = %if.end373
  call void @invert_br_probabilities(%struct.rtx_def* %0) #6
  br label %if.end379

if.end379:                                        ; preds = %if.then378, %if.end373
  %succ = getelementptr inbounds %struct.basic_block_def* %test_bb, i64 0, i32 5
  %36 = load %struct.edge_def** %succ, align 8, !tbaa !4
  %flags = getelementptr inbounds %struct.edge_def* %36, i64 0, i32 6
  %37 = load i32* %flags, align 4, !tbaa !0
  %and380 = and i32 %37, 1
  %tobool381 = icmp eq i32 %and380, 0
  br i1 %tobool381, label %cond.end, label %cond.true382

cond.true382:                                     ; preds = %if.end379
  %succ_next = getelementptr inbounds %struct.edge_def* %36, i64 0, i32 1
  %38 = load %struct.edge_def** %succ_next, align 8, !tbaa !4
  br label %cond.end

cond.end:                                         ; preds = %if.end379, %cond.true382
  %cond386 = phi %struct.edge_def* [ %38, %cond.true382 ], [ %36, %if.end379 ]
  call void @redirect_edge_succ(%struct.edge_def* %cond386, %struct.basic_block_def* %new_dest) #6
  br i1 %tobool377, label %if.then388, label %if.end490

if.then388:                                       ; preds = %cond.end
  %39 = load %struct.edge_def** %succ, align 8, !tbaa !4
  %flags392 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 6
  %40 = load i32* %flags392, align 4, !tbaa !0
  %and393 = and i32 %40, 1
  %tobool394 = icmp eq i32 %and393, 0
  br i1 %tobool394, label %cond.end461.thread, label %cond.true468

cond.end461.thread:                               ; preds = %if.then388
  %count402712 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 8
  %41 = load i64* %count402712, align 8, !tbaa !6
  %succ_next411 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 1
  %42 = load %struct.edge_def** %succ_next411, align 8, !tbaa !4
  %count414713 = getelementptr inbounds %struct.edge_def* %42, i64 0, i32 8
  %43 = load i64* %count414713, align 8, !tbaa !6
  %count426714 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 8
  store i64 %43, i64* %count426714, align 8, !tbaa !6
  %succ_next435 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 1
  %44 = load %struct.edge_def** %succ_next435, align 8, !tbaa !4
  %count438715 = getelementptr inbounds %struct.edge_def* %44, i64 0, i32 8
  store i64 %41, i64* %count438715, align 8, !tbaa !6
  %succ_next460 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 1
  %45 = load %struct.edge_def** %succ_next460, align 8, !tbaa !4
  br label %cond.end473

cond.true468:                                     ; preds = %if.then388
  %succ_next397 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 1
  %46 = load %struct.edge_def** %succ_next397, align 8, !tbaa !4
  %count402 = getelementptr inbounds %struct.edge_def* %46, i64 0, i32 8
  %47 = load i64* %count402, align 8, !tbaa !6
  %count414 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 8
  %48 = load i64* %count414, align 8, !tbaa !6
  %count426 = getelementptr inbounds %struct.edge_def* %46, i64 0, i32 8
  store i64 %48, i64* %count426, align 8, !tbaa !6
  %count438 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 8
  store i64 %47, i64* %count438, align 8, !tbaa !6
  %succ_next445 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 1
  %49 = load %struct.edge_def** %succ_next445, align 8, !tbaa !4
  br label %cond.end473

cond.end473:                                      ; preds = %cond.end461.thread, %cond.true468
  %.pn = phi %struct.edge_def* [ %39, %cond.true468 ], [ %45, %cond.end461.thread ]
  %.pn719 = phi %struct.edge_def* [ %49, %cond.true468 ], [ %39, %cond.end461.thread ]
  %cond474 = phi %struct.edge_def* [ %49, %cond.true468 ], [ %39, %cond.end461.thread ]
  %.in718 = getelementptr inbounds %struct.edge_def* %.pn719, i64 0, i32 7
  %.in = getelementptr inbounds %struct.edge_def* %.pn, i64 0, i32 7
  %50 = load i32* %.in718, align 4
  %51 = load i32* %.in, align 4
  %probability475 = getelementptr inbounds %struct.edge_def* %cond474, i64 0, i32 7
  store i32 %51, i32* %probability475, align 4, !tbaa !0
  %52 = load i32* %flags392, align 4, !tbaa !0
  %and479 = and i32 %52, 1
  %tobool480 = icmp eq i32 %and479, 0
  br i1 %tobool480, label %cond.false483, label %cond.end486

cond.false483:                                    ; preds = %cond.end473
  %succ_next485 = getelementptr inbounds %struct.edge_def* %39, i64 0, i32 1
  %53 = load %struct.edge_def** %succ_next485, align 8, !tbaa !4
  br label %cond.end486

cond.end486:                                      ; preds = %cond.end473, %cond.false483
  %cond487 = phi %struct.edge_def* [ %53, %cond.false483 ], [ %39, %cond.end473 ]
  %probability488 = getelementptr inbounds %struct.edge_def* %cond487, i64 0, i32 7
  store i32 %50, i32* %probability488, align 4, !tbaa !0
  call void @update_br_prob_note(%struct.basic_block_def* %test_bb) #6
  br label %if.end490

if.end490:                                        ; preds = %cond.end, %cond.end486, %if.end358
  %54 = load %struct.rtx_def** %head, align 8, !tbaa !4
  %cmp491 = icmp eq %struct.rtx_def* %54, null
  br i1 %cmp491, label %if.end509, label %if.then493

if.then493:                                       ; preds = %if.end490
  %55 = load %struct.rtx_def** %end, align 8, !tbaa !4
  %56 = load %struct.rtx_def** %end3, align 8, !tbaa !4
  %cmp495 = icmp eq %struct.rtx_def* %55, %56
  br i1 %cmp495, label %if.then497, label %if.end502

if.then497:                                       ; preds = %if.then493
  %arrayidx499 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 1
  %rtx500 = bitcast %union.rtunion_def* %arrayidx499 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx500, align 8, !tbaa !4
  store %struct.rtx_def* %57, %struct.rtx_def** %end3, align 8, !tbaa !4
  br label %if.end502

if.end502:                                        ; preds = %if.then497, %if.then493
  %call503 = call zeroext i1 @squeeze_notes(%struct.rtx_def** %head, %struct.rtx_def** %end) #6
  br i1 %call503, label %return, label %if.end505

if.end505:                                        ; preds = %if.end502
  %58 = load %struct.rtx_def** %head, align 8, !tbaa !4
  %59 = load %struct.rtx_def** %end, align 8, !tbaa !4
  %60 = load %struct.rtx_def** %earliest, align 8, !tbaa !4
  %arrayidx507 = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 1, i64 1
  %rtx508 = bitcast %union.rtunion_def* %arrayidx507 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx508, align 8, !tbaa !4
  call void @reorder_insns(%struct.rtx_def* %58, %struct.rtx_def* %59, %struct.rtx_def* %61) #6
  br label %if.end509

if.end509:                                        ; preds = %if.end490, %if.end505
  %cmp510 = icmp eq %struct.basic_block_def* %other_bb, %new_dest
  br i1 %cmp510, label %if.then512, label %return

if.then512:                                       ; preds = %if.end509
  %call513 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %0) #6
  %succ514 = getelementptr inbounds %struct.basic_block_def* %test_bb, i64 0, i32 5
  %62 = load %struct.edge_def** %succ514, align 8, !tbaa !4
  %flags515 = getelementptr inbounds %struct.edge_def* %62, i64 0, i32 6
  %63 = load i32* %flags515, align 4, !tbaa !0
  %and516 = and i32 %63, 1
  %tobool517 = icmp eq i32 %and516, 0
  br i1 %tobool517, label %cond.end523, label %cond.true518

cond.true518:                                     ; preds = %if.then512
  %succ_next520 = getelementptr inbounds %struct.edge_def* %62, i64 0, i32 1
  %64 = load %struct.edge_def** %succ_next520, align 8, !tbaa !4
  br label %cond.end523

cond.end523:                                      ; preds = %if.then512, %cond.true518
  %cond524 = phi %struct.edge_def* [ %64, %cond.true518 ], [ %62, %if.then512 ]
  call void @remove_edge(%struct.edge_def* %cond524) #6
  br label %return

cancel:                                           ; preds = %cond.true, %cond.false
  call void @cancel_changes(i32 0) #6
  br label %return

return:                                           ; preds = %for.cond.preheader, %if.end46, %if.then41, %for.inc, %if.end509, %cond.end523, %if.end502, %if.end354, %do.end336, %if.end65, %for.end, %cancel
  %retval.0 = phi i32 [ 0, %cancel ], [ 0, %for.end ], [ 0, %if.end65 ], [ 0, %do.end336 ], [ 0, %if.end354 ], [ 1, %if.end502 ], [ 1, %cond.end523 ], [ 1, %if.end509 ], [ 0, %for.inc ], [ 0, %if.then41 ], [ 0, %if.end46 ], [ 0, %for.cond.preheader ]
  ret i32 %retval.0
}
