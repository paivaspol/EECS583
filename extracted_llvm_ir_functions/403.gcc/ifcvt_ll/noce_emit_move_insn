define internal fastcc void @noce_emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !678), !dbg !1848
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %y}, i64 0, metadata !679), !dbg !1848
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !1849
  %bf.load = load i32* %0, align 8, !dbg !1849
  %bf.clear = and i32 %bf.load, 65535, !dbg !1849
  %cmp = icmp eq i32 %bf.clear, 64, !dbg !1849
  br i1 %cmp, label %if.end, label %if.then, !dbg !1849

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #7, !dbg !1850
  br label %return, !dbg !1852

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, !dbg !1853
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1853
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !1853, !tbaa !850
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !682), !dbg !1853
  %fld1 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, !dbg !1854
  %rtx3 = bitcast [1 x %union.rtunion_def]* %fld1 to %struct.rtx_def**, !dbg !1854
  %2 = load %struct.rtx_def** %rtx3, align 8, !dbg !1854, !tbaa !850
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %2}, i64 0, metadata !683), !dbg !1854
  %3 = bitcast %struct.rtx_def* %1 to i32*, !dbg !1855
  %bf.load4 = load i32* %3, align 8, !dbg !1855
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !1855
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !1855
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear5}, i64 0, metadata !680), !dbg !1855
  %4 = bitcast %struct.rtx_def* %2 to i32*, !dbg !1856
  %bf.load6 = load i32* %4, align 8, !dbg !1856
  %bf.lshr7 = lshr i32 %bf.load6, 16, !dbg !1856
  %bf.clear8 = and i32 %bf.lshr7, 255, !dbg !1856
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear8}, i64 0, metadata !681), !dbg !1856
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1, !dbg !1857
  %rtuint = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !1857
  %5 = load i32* %rtuint, align 4, !dbg !1857, !tbaa !841
  %mul = shl i32 %5, 3, !dbg !1857
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !684), !dbg !1857
  %idxprom23 = zext i32 %bf.clear5 to i64, !dbg !1858
  %arrayidx11 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom23, !dbg !1858
  %6 = load i16* %arrayidx11, align 2, !dbg !1858, !tbaa !1859
  %conv = zext i16 %6 to i64, !dbg !1858
  %conv12 = sext i32 %mul to i64, !dbg !1858
  %idxprom1324 = zext i32 %bf.clear8 to i64, !dbg !1858
  %arrayidx14 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1324, !dbg !1858
  %7 = load i16* %arrayidx14, align 2, !dbg !1858, !tbaa !1859
  %conv15 = zext i16 %7 to i64, !dbg !1858
  %call16 = tail call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %2, i64 %conv, i64 %conv12, i32 %bf.clear5, %struct.rtx_def* %y, i64 %conv15) #7, !dbg !1858
  br label %return, !dbg !1858

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1858
}
