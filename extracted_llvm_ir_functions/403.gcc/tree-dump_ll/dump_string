define void @dump_string(%struct.dump_info* nocapture %di, i8* %string) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.dump_info* %di}, i64 0, metadata !687), !dbg !913
  tail call void @llvm.dbg.value(metadata !{i8* %string}, i64 0, metadata !688), !dbg !914
  tail call fastcc void @dump_maybe_newline(%struct.dump_info* %di) #9, !dbg !915
  %stream = getelementptr inbounds %struct.dump_info* %di, i64 0, i32 0, !dbg !916
  %0 = load %struct._IO_FILE** %stream, align 8, !dbg !916, !tbaa !844
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* %string) #8, !dbg !916
  %call1 = tail call i64 @strlen(i8* %string) #10, !dbg !917
  %cmp = icmp ugt i64 %call1, 13, !dbg !917
  br i1 %cmp, label %if.then, label %if.else, !dbg !917

if.then:                                          ; preds = %entry
  %add = add i64 %call1, 1, !dbg !918
  %column = getelementptr inbounds %struct.dump_info* %di, i64 0, i32 4, !dbg !918
  %1 = load i32* %column, align 4, !dbg !918, !tbaa !850
  %conv = zext i32 %1 to i64, !dbg !918
  %add3 = add i64 %add, %conv, !dbg !918
  %conv4 = trunc i64 %add3 to i32, !dbg !918
  store i32 %conv4, i32* %column, align 4, !dbg !918, !tbaa !850
  br label %if.end, !dbg !918

if.else:                                          ; preds = %entry
  %column5 = getelementptr inbounds %struct.dump_info* %di, i64 0, i32 4, !dbg !919
  %2 = load i32* %column5, align 4, !dbg !919, !tbaa !850
  %add6 = add i32 %2, 14, !dbg !919
  store i32 %add6, i32* %column5, align 4, !dbg !919, !tbaa !850
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !920
}
