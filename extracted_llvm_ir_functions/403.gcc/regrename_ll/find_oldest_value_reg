define internal fastcc %struct.rtx_def* @find_oldest_value_reg(i32 %class, %struct.rtx_def* nocapture %reg, %struct.value_data* nocapture %vd) #0 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1
  %rtuint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %0 = load i32* %rtuint, align 4, !tbaa !3
  %1 = bitcast %struct.rtx_def* %reg to i32*
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom = zext i32 %0 to i64
  %mode2 = getelementptr inbounds %struct.value_data* %vd, i64 0, i32 0, i64 %idxprom, i32 0
  %2 = load i32* %mode2, align 4, !tbaa !9
  %cmp = icmp eq i32 %bf.clear, %2
  br i1 %cmp, label %if.end136, label %if.then

if.then:                                          ; preds = %entry
  %.off = add i32 %0, -8
  %3 = icmp ult i32 %.off, 8
  %.off227 = add i32 %0, -21
  %4 = icmp ult i32 %.off227, 8
  %or.cond = or i1 %3, %4
  %.off228 = add i32 %0, -45
  %5 = icmp ult i32 %.off228, 8
  %or.cond238 = or i1 %or.cond, %5
  %.off229 = add i32 %0, -29
  %6 = icmp ult i32 %.off229, 8
  %or.cond240 = or i1 %or.cond238, %6
  br i1 %or.cond240, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %idxprom16234 = zext i32 %bf.clear to i64
  %arrayidx17 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom16234
  %7 = load i32* %arrayidx17, align 4, !tbaa !6
  %cmp18 = icmp eq i32 %7, 5
  br i1 %cmp18, label %cond.true68, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp21 = icmp eq i32 %7, 6
  %phitmp235 = select i1 %cmp21, i32 2, i32 1
  br label %cond.true68

cond.false:                                       ; preds = %if.then
  switch i32 %bf.clear, label %cond.false31 [
    i32 18, label %cond.end43.thread253
    i32 24, label %cond.true27
  ]

cond.end43.thread253:                             ; preds = %cond.false
  %8 = load i32* @target_flags, align 4, !tbaa !3
  %and254 = lshr i32 %8, 25
  %9 = and i32 %and254, 1
  %10 = xor i32 %9, 3
  br label %cond.false88

cond.true27:                                      ; preds = %cond.false
  %11 = load i32* @target_flags, align 4, !tbaa !3
  %and28 = lshr i32 %11, 24
  %12 = and i32 %and28, 2
  %13 = xor i32 %12, 6
  br label %cond.false88

cond.false31:                                     ; preds = %cond.false
  %idxprom32230 = zext i32 %bf.clear to i64
  %arrayidx33 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom32230
  %14 = load i8* %arrayidx33, align 1, !tbaa !1
  %conv = zext i8 %14 to i32
  %15 = load i32* @target_flags, align 4, !tbaa !3
  %and34 = lshr i32 %15, 23
  %16 = and i32 %and34, 4
  %17 = add i32 %16, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %17
  %div = sdiv i32 %sub, %17
  br label %cond.false88

cond.true68:                                      ; preds = %cond.true, %lor.rhs
  %cond44.ph = phi i32 [ 2, %cond.true ], [ %phitmp235, %lor.rhs ]
  %idxprom73 = sext i32 %2 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom73
  %18 = load i32* %arrayidx74, align 4, !tbaa !6
  %cmp75 = icmp eq i32 %18, 5
  br i1 %cmp75, label %if.end136, label %lor.rhs77

lor.rhs77:                                        ; preds = %cond.true68
  %cmp84 = icmp eq i32 %18, 6
  %phitmp = select i1 %cmp84, i32 2, i32 1
  br label %cond.end131

cond.false88:                                     ; preds = %cond.true27, %cond.false31, %cond.end43.thread253
  %19 = phi i32 [ %8, %cond.end43.thread253 ], [ %15, %cond.false31 ], [ %11, %cond.true27 ]
  %cond44252 = phi i32 [ %10, %cond.end43.thread253 ], [ %div, %cond.false31 ], [ %13, %cond.true27 ]
  switch i32 %2, label %cond.false110 [
    i32 18, label %cond.true95
    i32 24, label %cond.true106
  ]

cond.true95:                                      ; preds = %cond.false88
  %and96 = lshr i32 %19, 25
  %20 = and i32 %and96, 1
  %21 = xor i32 %20, 3
  br label %cond.end131

cond.true106:                                     ; preds = %cond.false88
  %and107 = lshr i32 %19, 24
  %22 = and i32 %and107, 2
  %23 = xor i32 %22, 6
  br label %cond.end131

cond.false110:                                    ; preds = %cond.false88
  %idxprom115 = sext i32 %2 to i64
  %arrayidx116 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom115
  %24 = load i8* %arrayidx116, align 1, !tbaa !1
  %conv117 = zext i8 %24 to i32
  %and118 = lshr i32 %19, 23
  %25 = and i32 %and118, 4
  %26 = add i32 %25, 4
  %add121 = add i32 %conv117, -1
  %sub122 = add i32 %add121, %26
  %div126 = sdiv i32 %sub122, %26
  br label %cond.end131

cond.end131:                                      ; preds = %lor.rhs77, %cond.true95, %cond.false110, %cond.true106
  %cond44247 = phi i32 [ %cond44252, %cond.true95 ], [ %cond44252, %cond.true106 ], [ %cond44252, %cond.false110 ], [ %cond44.ph, %lor.rhs77 ]
  %cond132 = phi i32 [ %21, %cond.true95 ], [ %23, %cond.true106 ], [ %div126, %cond.false110 ], [ %phitmp, %lor.rhs77 ]
  %cmp133 = icmp sgt i32 %cond44247, %cond132
  br i1 %cmp133, label %return, label %if.end136

if.end136:                                        ; preds = %cond.true68, %entry, %cond.end131
  %oldest_regno = getelementptr inbounds %struct.value_data* %vd, i64 0, i32 0, i64 %idxprom, i32 1
  %i.0258 = load i32* %oldest_regno, align 4
  %cmp140259 = icmp eq i32 %i.0258, %0
  br i1 %cmp140259, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end136
  %idxprom142 = zext i32 %class to i64
  %arrayidx143 = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom142
  %27 = load i64* %arrayidx143, align 8, !tbaa !7
  %idxprom1.i256 = zext i32 %bf.clear to i64
  %arrayidx2.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1.i256
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.0260 = phi i32 [ %i.0258, %for.body.lr.ph ], [ %i.0, %for.inc ]
  %sh_prom = zext i32 %i.0260 to i64
  %shl = shl i64 1, %sh_prom
  %and144 = and i64 %27, %shl
  %tobool145 = icmp eq i64 %and144, 0
  br i1 %tobool145, label %for.inc, label %land.lhs.true146

land.lhs.true146:                                 ; preds = %for.body
  %mode150 = getelementptr inbounds %struct.value_data* %vd, i64 0, i32 0, i64 %sh_prom, i32 0
  %28 = load i32* %mode150, align 4, !tbaa !9
  %cmp151 = icmp eq i32 %28, %bf.clear
  br i1 %cmp151, label %if.then159, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %land.lhs.true146
  %idxprom.i = sext i32 %28 to i64
  %arrayidx.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom.i
  %29 = load i8* %arrayidx.i, align 1, !tbaa !1
  %30 = load i8* %arrayidx2.i, align 1, !tbaa !1
  %not.cmp.i = icmp ult i8 %29, %30
  br i1 %not.cmp.i, label %for.inc, label %if.then159

if.then159:                                       ; preds = %lor.lhs.false153, %land.lhs.true146
  %call160 = tail call %struct.rtx_def* @gen_rtx_fmt_i0(i32 61, i32 %bf.clear, i32 %i.0260) #5
  %arrayidx162 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 1
  %rtuint163 = bitcast %union.rtunion_def* %arrayidx162 to i32*
  %31 = load i32* %rtuint163, align 4, !tbaa !3
  %arrayidx165 = getelementptr inbounds %struct.rtx_def* %call160, i64 0, i32 1, i64 1
  %rtuint166 = bitcast %union.rtunion_def* %arrayidx165 to i32*
  store i32 %31, i32* %rtuint166, align 4, !tbaa !3
  br label %return

for.inc:                                          ; preds = %lor.lhs.false153, %for.body
  %next_regno = getelementptr inbounds %struct.value_data* %vd, i64 0, i32 0, i64 %sh_prom, i32 2
  %i.0 = load i32* %next_regno, align 4
  %cmp140 = icmp eq i32 %i.0, %0
  br i1 %cmp140, label %return, label %for.body

return:                                           ; preds = %if.end136, %for.inc, %cond.end131, %if.then159
  %retval.0 = phi %struct.rtx_def* [ %call160, %if.then159 ], [ null, %cond.end131 ], [ null, %for.inc ], [ null, %if.end136 ]
  ret %struct.rtx_def* %retval.0
}
