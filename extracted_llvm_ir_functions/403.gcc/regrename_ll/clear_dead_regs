define internal fastcc void @clear_dead_regs(i64* nocapture %pset, i32 %kind, %struct.rtx_def* %notes) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i64* %pset}, i64 0, metadata !920), !dbg !1746
  tail call void @llvm.dbg.value(metadata !{i32 %kind}, i64 0, metadata !921), !dbg !1747
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %notes}, i64 0, metadata !922), !dbg !1748
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %notes}, i64 0, metadata !923), !dbg !1749
  %tobool116 = icmp eq %struct.rtx_def* %notes, null, !dbg !1749
  br i1 %tobool116, label %for.end, label %for.body, !dbg !1749

for.body:                                         ; preds = %entry, %for.inc
  %note.0117 = phi %struct.rtx_def* [ %19, %for.inc ], [ %notes, %entry ]
  %0 = bitcast %struct.rtx_def* %note.0117 to i32*, !dbg !1750
  %bf.load = load i32* %0, align 8, !dbg !1750
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !1750
  %bf.clear = and i32 %bf.lshr, 255, !dbg !1750
  %cmp = icmp eq i32 %bf.clear, %kind, !dbg !1750
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !1750

land.lhs.true:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %note.0117, i64 0, i32 1, i64 0, !dbg !1750
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1750
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !1750, !tbaa !949
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !1750
  %bf.load1 = load i32* %2, align 8, !dbg !1750
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !1750
  %cmp3 = icmp eq i32 %bf.clear2, 61, !dbg !1750
  br i1 %cmp3, label %if.then, label %for.inc, !dbg !1750

if.then:                                          ; preds = %land.lhs.true
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !924), !dbg !1751
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0, !dbg !1752
  %rtuint = bitcast %union.rtunion_def* %arrayidx8 to i32*, !dbg !1752
  %3 = load i32* %rtuint, align 4, !dbg !1752, !tbaa !953
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !927), !dbg !1752
  %.off = add i32 %3, -8, !dbg !1753
  %4 = icmp ult i32 %.off, 8, !dbg !1753
  %.off102 = add i32 %3, -21, !dbg !1753
  %5 = icmp ult i32 %.off102, 8, !dbg !1753
  %or.cond = or i1 %4, %5, !dbg !1753
  %.off103 = add i32 %3, -45, !dbg !1753
  %6 = icmp ult i32 %.off103, 8, !dbg !1753
  %or.cond109 = or i1 %or.cond, %6, !dbg !1753
  %.off104 = add i32 %3, -29, !dbg !1753
  %7 = icmp ult i32 %.off104, 8, !dbg !1753
  %or.cond111 = or i1 %or.cond109, %7, !dbg !1753
  %bf.lshr24 = lshr i32 %bf.load1, 16, !dbg !1753
  %bf.clear25 = and i32 %bf.lshr24, 255, !dbg !1753
  br i1 %or.cond111, label %cond.true, label %cond.false, !dbg !1753

cond.true:                                        ; preds = %if.then
  %idxprom106 = zext i32 %bf.clear25 to i64, !dbg !1753
  %arrayidx26 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom106, !dbg !1753
  %8 = load i32* %arrayidx26, align 4, !dbg !1753, !tbaa !1102
  %cmp27 = icmp eq i32 %8, 5, !dbg !1753
  br i1 %cmp27, label %cond.end65, label %lor.rhs, !dbg !1753

lor.rhs:                                          ; preds = %cond.true
  %cmp33 = icmp eq i32 %8, 6, !dbg !1753
  %phitmp = select i1 %cmp33, i32 2, i32 1, !dbg !1753
  br label %cond.end65, !dbg !1753

cond.false:                                       ; preds = %if.then
  switch i32 %bf.clear25, label %cond.false50 [
    i32 18, label %cond.true38
    i32 24, label %cond.true46
  ], !dbg !1753

cond.true38:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !dbg !1753, !tbaa !953
  %and = lshr i32 %9, 25, !dbg !1753
  %10 = and i32 %and, 1, !dbg !1753
  %11 = xor i32 %10, 3, !dbg !1753
  br label %cond.end65, !dbg !1753

cond.true46:                                      ; preds = %cond.false
  %12 = load i32* @target_flags, align 4, !dbg !1753, !tbaa !953
  %and47 = lshr i32 %12, 24, !dbg !1753
  %13 = and i32 %and47, 2, !dbg !1753
  %14 = xor i32 %13, 6, !dbg !1753
  br label %cond.end65, !dbg !1753

cond.false50:                                     ; preds = %cond.false
  %idxprom54105 = zext i32 %bf.clear25 to i64, !dbg !1753
  %arrayidx55 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom54105, !dbg !1753
  %15 = load i8* %arrayidx55, align 1, !dbg !1753, !tbaa !950
  %conv = zext i8 %15 to i32, !dbg !1753
  %16 = load i32* @target_flags, align 4, !dbg !1753, !tbaa !953
  %and56 = lshr i32 %16, 23, !dbg !1753
  %17 = and i32 %and56, 4, !dbg !1753
  %18 = add i32 %17, 4, !dbg !1753
  %add = add i32 %conv, -1, !dbg !1753
  %sub = add i32 %add, %18, !dbg !1753
  %div = sdiv i32 %sub, %18, !dbg !1753
  br label %cond.end65, !dbg !1753

cond.end65:                                       ; preds = %cond.true, %lor.rhs, %cond.true38, %cond.false50, %cond.true46
  %cond66 = phi i32 [ %11, %cond.true38 ], [ %14, %cond.true46 ], [ %div, %cond.false50 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ], !dbg !1753
  tail call void @llvm.dbg.value(metadata !{i32 %cond66}, i64 0, metadata !928), !dbg !1753
  %add67 = add i32 %cond66, %3, !dbg !1754
  %cmp68 = icmp ugt i32 %add67, 53, !dbg !1754
  br i1 %cmp68, label %if.then70, label %while.cond.preheader, !dbg !1754

while.cond.preheader:                             ; preds = %cond.end65
  %cmp71113 = icmp sgt i32 %cond66, 0, !dbg !1755
  br i1 %cmp71113, label %while.body.lr.ph, label %for.inc, !dbg !1755

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %pset.promoted = load i64* %pset, align 8, !dbg !1756, !tbaa !1131
  br label %while.body, !dbg !1755

if.then70:                                        ; preds = %cond.end65
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str40, i64 0, i64 0), i32 144, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.clear_dead_regs, i64 0, i64 0)) #8, !dbg !1757
  unreachable, !dbg !1757

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %and74115 = phi i64 [ %pset.promoted, %while.body.lr.ph ], [ %and74, %while.body ], !dbg !1756
  %dec114.in = phi i32 [ %cond66, %while.body.lr.ph ], [ %dec114, %while.body ]
  %dec114 = add nsw i32 %dec114.in, -1, !dbg !1755
  %add73 = add i32 %dec114, %3, !dbg !1756
  %sh_prom = zext i32 %add73 to i64, !dbg !1756
  %shl = shl i64 1, %sh_prom, !dbg !1756
  %neg = xor i64 %shl, -1, !dbg !1756
  %and74 = and i64 %and74115, %neg, !dbg !1756
  tail call void @llvm.dbg.value(metadata !{i32 %dec114}, i64 0, metadata !928), !dbg !1755
  %cmp71 = icmp sgt i32 %dec114, 0, !dbg !1755
  br i1 %cmp71, label %while.body, label %while.cond.for.inc.loopexit_crit_edge, !dbg !1755

while.cond.for.inc.loopexit_crit_edge:            ; preds = %while.body
  store i64 %and74, i64* %pset, align 8, !dbg !1756, !tbaa !1131
  br label %for.inc, !dbg !1755

for.inc:                                          ; preds = %while.cond.preheader, %while.cond.for.inc.loopexit_crit_edge, %for.body, %land.lhs.true
  %arrayidx77 = getelementptr inbounds %struct.rtx_def* %note.0117, i64 0, i32 1, i64 1, !dbg !1749
  %rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**, !dbg !1749
  %19 = load %struct.rtx_def** %rtx78, align 8, !dbg !1749, !tbaa !949
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %19}, i64 0, metadata !923), !dbg !1749
  %tobool = icmp eq %struct.rtx_def* %19, null, !dbg !1749
  br i1 %tobool, label %for.end, label %for.body, !dbg !1749

for.end:                                          ; preds = %for.inc, %entry
  ret void, !dbg !1758
}
