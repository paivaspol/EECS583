define internal fastcc void @kill_value(%struct.rtx_def* nocapture %x, %struct.value_data* nocapture %vd) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load6 = load i32* %2, align 8
  %bf.lshr7 = lshr i32 %bf.load6, 16
  %bf.clear8 = and i32 %bf.lshr7, 255
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx10 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !3
  %call = tail call %struct.rtx_def* @simplify_subreg(i32 %bf.clear2, %struct.rtx_def* %1, i32 %bf.clear8, i32 %3) #5
  %.phi.trans.insert = bitcast %struct.rtx_def* %call to i32*
  %bf.load11.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load11 = phi i32 [ %bf.load11.pre, %if.then ], [ %bf.load, %entry ]
  %x.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %x, %entry ]
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 61
  br i1 %cmp13, label %if.then14, label %if.end197

if.then14:                                        ; preds = %if.end
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtuint17 = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %4 = load i32* %rtuint17, align 4, !tbaa !3
  %.off = add i32 %4, -8
  %5 = icmp ult i32 %.off, 8
  %.off260 = add i32 %4, -21
  %6 = icmp ult i32 %.off260, 8
  %or.cond = or i1 %5, %6
  %.off261 = add i32 %4, -45
  %7 = icmp ult i32 %.off261, 8
  %or.cond271 = or i1 %or.cond, %7
  %.off262 = add i32 %4, -29
  %8 = icmp ult i32 %.off262, 8
  %or.cond273 = or i1 %or.cond271, %8
  %bf.lshr32 = lshr i32 %bf.load11, 16
  %bf.clear33 = and i32 %bf.lshr32, 255
  br i1 %or.cond273, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then14
  %idxprom267 = zext i32 %bf.clear33 to i64
  %arrayidx34 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom267
  %9 = load i32* %arrayidx34, align 4, !tbaa !6
  %cmp35 = icmp eq i32 %9, 5
  br i1 %cmp35, label %for.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp41 = icmp eq i32 %9, 6
  %phitmp268 = select i1 %cmp41, i32 2, i32 1
  br label %for.body.lr.ph

cond.false:                                       ; preds = %if.then14
  switch i32 %bf.clear33, label %cond.end72 [
    i32 18, label %cond.true46
    i32 24, label %cond.true53
  ]

cond.true46:                                      ; preds = %cond.false
  %10 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %10, 25
  %11 = and i32 %and, 1
  %12 = xor i32 %11, 3
  br label %for.body.lr.ph

cond.true53:                                      ; preds = %cond.false
  %13 = load i32* @target_flags, align 4, !tbaa !3
  %and54 = lshr i32 %13, 24
  %14 = and i32 %and54, 2
  %15 = xor i32 %14, 6
  br label %for.body.lr.ph

cond.end72:                                       ; preds = %cond.false
  %idxprom61263 = zext i32 %bf.clear33 to i64
  %arrayidx62 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom61263
  %16 = load i8* %arrayidx62, align 1, !tbaa !1
  %conv = zext i8 %16 to i32
  %17 = load i32* @target_flags, align 4, !tbaa !3
  %and63 = lshr i32 %17, 23
  %18 = and i32 %and63, 4
  %19 = add i32 %18, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %19
  %div = sdiv i32 %sub, %19
  %cmp74286 = icmp eq i32 %div, 0
  br i1 %cmp74286, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %lor.rhs, %cond.true, %cond.true53, %cond.true46, %cond.end72
  %cond73293 = phi i32 [ %div, %cond.end72 ], [ %12, %cond.true46 ], [ %15, %cond.true53 ], [ 2, %cond.true ], [ %phitmp268, %lor.rhs ]
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.0287 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %add76 = add i32 %i.0287, %4
  tail call fastcc void @kill_value_regno(i32 %add76, %struct.value_data* %vd) #6
  %inc = add i32 %i.0287, 1
  %exitcond290 = icmp eq i32 %inc, %cond73293
  br i1 %exitcond290, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %cond.end72
  %max_value_regs = getelementptr inbounds %struct.value_data* %vd, i64 0, i32 1
  %20 = load i32* %max_value_regs, align 4, !tbaa !3
  %cmp77 = icmp ult i32 %4, %20
  %sub81 = sub i32 %4, %20
  %.sub81 = select i1 %cmp77, i32 0, i32 %sub81
  %cmp84282 = icmp ult i32 %.sub81, %4
  br i1 %cmp84282, label %for.body86.lr.ph, label %if.end197

for.body86.lr.ph:                                 ; preds = %for.end
  %21 = icmp ugt i32 %4, %20
  %umax = select i1 %21, i32 %4, i32 %20
  %22 = sub i32 %umax, %20
  %23 = zext i32 %22 to i64
  br label %for.body86

for.body86:                                       ; preds = %for.inc194, %for.body86.lr.ph
  %indvars.iv = phi i64 [ %23, %for.body86.lr.ph ], [ %indvars.iv.next, %for.inc194 ]
  %j.0283 = phi i32 [ %.sub81, %for.body86.lr.ph ], [ %inc195, %for.inc194 ]
  %mode = getelementptr inbounds %struct.value_data* %vd, i64 0, i32 0, i64 %indvars.iv, i32 0
  %24 = load i32* %mode, align 4, !tbaa !9
  %cmp89 = icmp eq i32 %24, 0
  br i1 %cmp89, label %for.inc194, label %if.end92

if.end92:                                         ; preds = %for.body86
  %25 = trunc i64 %indvars.iv to i32
  %j.0.off = add i32 %25, -8
  %26 = icmp ult i32 %j.0.off, 8
  %j.0.off264 = add i32 %25, -21
  %27 = icmp ult i32 %j.0.off264, 8
  %or.cond275 = or i1 %26, %27
  %j.0.off265 = add i32 %25, -45
  %28 = icmp ult i32 %j.0.off265, 8
  %or.cond277 = or i1 %or.cond275, %28
  %j.0.off266 = add i32 %25, -29
  %29 = icmp ult i32 %j.0.off266, 8
  %or.cond279 = or i1 %or.cond277, %29
  br i1 %or.cond279, label %cond.true116, label %cond.false136

cond.true116:                                     ; preds = %if.end92
  %idxprom121 = sext i32 %24 to i64
  %arrayidx122 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom121
  %30 = load i32* %arrayidx122, align 4, !tbaa !6
  %cmp123 = icmp eq i32 %30, 5
  br i1 %cmp123, label %cond.end179, label %lor.rhs125

lor.rhs125:                                       ; preds = %cond.true116
  %cmp132 = icmp eq i32 %30, 6
  %phitmp = select i1 %cmp132, i32 2, i32 1
  br label %cond.end179

cond.false136:                                    ; preds = %if.end92
  switch i32 %24, label %cond.false158 [
    i32 18, label %cond.true143
    i32 24, label %cond.true154
  ]

cond.true143:                                     ; preds = %cond.false136
  %31 = load i32* @target_flags, align 4, !tbaa !3
  %and144 = lshr i32 %31, 25
  %32 = and i32 %and144, 1
  %33 = xor i32 %32, 3
  br label %cond.end179

cond.true154:                                     ; preds = %cond.false136
  %34 = load i32* @target_flags, align 4, !tbaa !3
  %and155 = lshr i32 %34, 24
  %35 = and i32 %and155, 2
  %36 = xor i32 %35, 6
  br label %cond.end179

cond.false158:                                    ; preds = %cond.false136
  %idxprom163 = sext i32 %24 to i64
  %arrayidx164 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom163
  %37 = load i8* %arrayidx164, align 1, !tbaa !1
  %conv165 = zext i8 %37 to i32
  %38 = load i32* @target_flags, align 4, !tbaa !3
  %and166 = lshr i32 %38, 23
  %39 = and i32 %and166, 4
  %40 = add i32 %39, 4
  %add169 = add i32 %conv165, -1
  %sub170 = add i32 %add169, %40
  %div174 = sdiv i32 %sub170, %40
  br label %cond.end179

cond.end179:                                      ; preds = %cond.true116, %lor.rhs125, %cond.true143, %cond.false158, %cond.true154
  %cond180 = phi i32 [ %33, %cond.true143 ], [ %36, %cond.true154 ], [ %div174, %cond.false158 ], [ 2, %cond.true116 ], [ %phitmp, %lor.rhs125 ]
  %add181 = add i32 %cond180, %25
  %cmp182 = icmp ule i32 %add181, %4
  %cmp186280 = icmp eq i32 %cond180, 0
  %or.cond294 = or i1 %cmp182, %cmp186280
  br i1 %or.cond294, label %for.inc194, label %for.body188

for.body188:                                      ; preds = %cond.end179, %for.body188
  %i.1281 = phi i32 [ %inc191, %for.body188 ], [ 0, %cond.end179 ]
  %add189 = add i32 %i.1281, %25
  tail call fastcc void @kill_value_regno(i32 %add189, %struct.value_data* %vd) #6
  %inc191 = add i32 %i.1281, 1
  %exitcond = icmp eq i32 %inc191, %cond180
  br i1 %exitcond, label %for.inc194, label %for.body188

for.inc194:                                       ; preds = %cond.end179, %for.body188, %for.body86
  %inc195 = add i32 %j.0283, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %exitcond289 = icmp eq i32 %inc195, %4
  br i1 %exitcond289, label %if.end197, label %for.body86

if.end197:                                        ; preds = %for.end, %for.inc194, %if.end
  ret void
}
