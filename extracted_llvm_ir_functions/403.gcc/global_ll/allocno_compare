define internal i32 @allocno_compare(i8* nocapture %v1p, i8* nocapture %v2p) #0 {
entry:
  %0 = bitcast i8* %v1p to i32*
  %1 = load i32* %0, align 4, !tbaa !0
  %2 = bitcast i8* %v2p to i32*
  %3 = load i32* %2, align 4, !tbaa !0
  %idxprom = sext i32 %1 to i64
  %4 = load %struct.allocno** @allocno, align 8, !tbaa !3
  %size = getelementptr inbounds %struct.allocno* %4, i64 %idxprom, i32 1
  %5 = load i32* %size, align 4, !tbaa !0
  %n_refs = getelementptr inbounds %struct.allocno* %4, i64 %idxprom, i32 3
  %6 = load i32* %n_refs, align 4, !tbaa !0
  %conv = sext i32 %6 to i64
  %call = tail call i32 @floor_log2_wide(i64 %conv) #5
  %7 = load %struct.allocno** @allocno, align 8, !tbaa !3
  %freq = getelementptr inbounds %struct.allocno* %7, i64 %idxprom, i32 4
  %8 = load i32* %freq, align 4, !tbaa !0
  %mul5 = mul i32 %5, 10
  %mul = mul i32 %mul5, %call
  %mul6 = mul i32 %mul, %8
  %live_length = getelementptr inbounds %struct.allocno* %7, i64 %idxprom, i32 5
  %9 = load i32* %live_length, align 4, !tbaa !0
  %div = sdiv i32 %mul6, %9
  %idxprom9 = sext i32 %3 to i64
  %size11 = getelementptr inbounds %struct.allocno* %7, i64 %idxprom9, i32 1
  %10 = load i32* %size11, align 4, !tbaa !0
  %n_refs15 = getelementptr inbounds %struct.allocno* %7, i64 %idxprom9, i32 3
  %11 = load i32* %n_refs15, align 4, !tbaa !0
  %conv16 = sext i32 %11 to i64
  %call17 = tail call i32 @floor_log2_wide(i64 %conv16) #5
  %12 = load %struct.allocno** @allocno, align 8, !tbaa !3
  %freq20 = getelementptr inbounds %struct.allocno* %12, i64 %idxprom9, i32 4
  %13 = load i32* %freq20, align 4, !tbaa !0
  %mul21 = mul i32 %10, 10
  %mul12 = mul i32 %mul21, %call17
  %mul22 = mul i32 %mul12, %13
  %live_length25 = getelementptr inbounds %struct.allocno* %12, i64 %idxprom9, i32 5
  %14 = load i32* %live_length25, align 4, !tbaa !0
  %div26 = sdiv i32 %mul22, %14
  %tobool = icmp eq i32 %div26, %div
  %sub = sub nsw i32 %div26, %div
  %sub28 = sub nsw i32 %1, %3
  %retval.0 = select i1 %tobool, i32 %sub28, i32 %sub
  ret i32 %retval.0
}
