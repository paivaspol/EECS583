define internal fastcc %struct.include_file* @open_file(%struct.cpp_reader* nocapture %pfile, i8* %filename) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_reader* %pfile}, i64 0, metadata !795), !dbg !1206
  tail call void @llvm.dbg.value(metadata !{i8* %filename}, i64 0, metadata !796), !dbg !1207
  %call = tail call fastcc %struct.splay_tree_node_s* @find_or_create_entry(%struct.cpp_reader* %pfile, i8* %filename) #8, !dbg !1208
  tail call void @llvm.dbg.value(metadata !{%struct.splay_tree_node_s* %call}, i64 0, metadata !797), !dbg !1208
  %value = getelementptr inbounds %struct.splay_tree_node_s* %call, i64 0, i32 1, !dbg !1209
  %0 = load i64* %value, align 8, !dbg !1209, !tbaa !930
  %1 = inttoptr i64 %0 to %struct.include_file*, !dbg !1209
  tail call void @llvm.dbg.value(metadata !{%struct.include_file* %1}, i64 0, metadata !798), !dbg !1209
  %err_no = getelementptr inbounds %struct.include_file* %1, i64 0, i32 6, !dbg !1210
  %2 = load i32* %err_no, align 4, !dbg !1210, !tbaa !921
  %tobool = icmp eq i32 %2, 0, !dbg !1210
  br i1 %tobool, label %if.end, label %if.then, !dbg !1210

if.then:                                          ; preds = %entry
  %call2 = tail call i32* @__errno_location() #9, !dbg !1211
  store i32 %2, i32* %call2, align 4, !dbg !1211, !tbaa !921
  br label %return, !dbg !1213

if.end:                                           ; preds = %entry
  %cmacro = getelementptr inbounds %struct.include_file* %1, i64 0, i32 1, !dbg !1214
  %3 = load %struct.cpp_hashnode** %cmacro, align 8, !dbg !1214, !tbaa !881
  %magicptr = ptrtoint %struct.cpp_hashnode* %3 to i64, !dbg !1214
  switch i64 %magicptr, label %lor.lhs.false [
    i64 0, label %if.end8
    i64 -1, label %return
  ], !dbg !1214

lor.lhs.false:                                    ; preds = %if.end
  %type = getelementptr inbounds %struct.cpp_hashnode* %3, i64 0, i32 4, !dbg !1214
  %bf.load = load i8* %type, align 4, !dbg !1214
  %cmp6 = icmp eq i8 %bf.load, 1, !dbg !1214
  br i1 %cmp6, label %return, label %if.end8, !dbg !1214

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  %buffer = getelementptr inbounds %struct.include_file* %1, i64 0, i32 3, !dbg !1215
  %4 = load i8** %buffer, align 8, !dbg !1215, !tbaa !881
  %cmp9 = icmp eq i8* %4, null, !dbg !1215
  br i1 %cmp9, label %if.end11, label %return, !dbg !1215

if.end11:                                         ; preds = %if.end8
  %5 = load i8* %filename, align 1, !dbg !1216, !tbaa !882
  %cmp12 = icmp eq i8 %5, 0, !dbg !1216
  br i1 %cmp12, label %if.end17.thread, label %if.end17, !dbg !1216

if.end17.thread:                                  ; preds = %if.end11
  %fd = getelementptr inbounds %struct.include_file* %1, i64 0, i32 5, !dbg !1217
  store i32 0, i32* %fd, align 4, !dbg !1217, !tbaa !921
  br label %land.lhs.true21, !dbg !1218

if.end17:                                         ; preds = %if.end11
  %name = getelementptr inbounds %struct.include_file* %1, i64 0, i32 0, !dbg !1219
  %6 = load i8** %name, align 8, !dbg !1219, !tbaa !881
  %call15 = tail call i32 (i8*, i32, ...)* @open(i8* %6, i32 256, i32 438) #7, !dbg !1219
  %fd16 = getelementptr inbounds %struct.include_file* %1, i64 0, i32 5, !dbg !1219
  store i32 %call15, i32* %fd16, align 4, !dbg !1219, !tbaa !921
  %cmp19 = icmp eq i32 %call15, -1, !dbg !1218
  br i1 %cmp19, label %if.end36, label %land.lhs.true21, !dbg !1218

land.lhs.true21:                                  ; preds = %if.end17.thread, %if.end17
  %7 = phi i32 [ 0, %if.end17.thread ], [ %call15, %if.end17 ]
  %fd1858 = getelementptr inbounds %struct.include_file* %1, i64 0, i32 5, !dbg !1218
  %st = getelementptr inbounds %struct.include_file* %1, i64 0, i32 4, !dbg !1218
  %call23 = tail call i32 @fstat(i32 %7, %struct.stat* %st) #7, !dbg !1218
  %cmp24 = icmp eq i32 %call23, 0, !dbg !1218
  br i1 %cmp24, label %if.then26, label %if.end36, !dbg !1218

if.then26:                                        ; preds = %land.lhs.true21
  %st_mode = getelementptr inbounds %struct.include_file* %1, i64 0, i32 4, i32 3, !dbg !1220
  %8 = load i32* %st_mode, align 4, !dbg !1220, !tbaa !921
  %and = and i32 %8, 61440, !dbg !1220
  %cmp28 = icmp eq i32 %and, 16384, !dbg !1220
  br i1 %cmp28, label %if.end31, label %return, !dbg !1220

if.end31:                                         ; preds = %if.then26
  %call32 = tail call i32* @__errno_location() #9, !dbg !1222
  store i32 2, i32* %call32, align 4, !dbg !1222, !tbaa !921
  %9 = load i32* %fd1858, align 4, !dbg !1223, !tbaa !921
  %call34 = tail call i32 @close(i32 %9) #7, !dbg !1223
  store i32 -1, i32* %fd1858, align 4, !dbg !1224, !tbaa !921
  br label %if.end36, !dbg !1225

if.end36:                                         ; preds = %if.end17, %if.end31, %land.lhs.true21
  %call37 = tail call i32* @__errno_location() #9, !dbg !1226
  %10 = load i32* %call37, align 4, !dbg !1226, !tbaa !921
  store i32 %10, i32* %err_no, align 4, !dbg !1226, !tbaa !921
  br label %return, !dbg !1227

return:                                           ; preds = %if.then26, %if.end8, %lor.lhs.false, %if.end, %if.end36, %if.then
  %retval.0 = phi %struct.include_file* [ null, %if.then ], [ null, %if.end36 ], [ %1, %if.end ], [ %1, %lor.lhs.false ], [ %1, %if.end8 ], [ %1, %if.then26 ]
  ret %struct.include_file* %retval.0, !dbg !1228
}
