define zeroext i1 @_cpp_execute_include(%struct.cpp_reader* %pfile, %struct.cpp_token* nocapture %header, i32 %type) #0 {
entry:
  %call = tail call fastcc %struct.include_file* @find_include_file(%struct.cpp_reader* %pfile, %struct.cpp_token* %header, i32 %type) #7
  %magicptr = ptrtoint %struct.include_file* %call to i64
  switch i64 %magicptr, label %if.then5 [
    i64 0, label %if.then
    i64 -1, label %if.end11
  ]

if.then:                                          ; preds = %entry
  %text = getelementptr inbounds %struct.cpp_token* %header, i64 0, i32 4, i32 0, i32 1
  %0 = load i8** %text, align 8, !tbaa !0
  %type1 = getelementptr inbounds %struct.cpp_token* %header, i64 0, i32 2
  %bf.load = load i8* %type1, align 2
  %cmp2 = icmp eq i8 %bf.load, 63
  %conv = zext i1 %cmp2 to i32
  tail call fastcc void @handle_missing_header(%struct.cpp_reader* %pfile, i8* %0, i32 %conv) #7
  br label %if.end11

if.then5:                                         ; preds = %entry
  %call6 = tail call fastcc zeroext i1 @stack_include_file(%struct.cpp_reader* %pfile, %struct.include_file* %call) #7
  %frombool = zext i1 %call6 to i8
  %cmp7 = icmp eq i32 %type, 2
  br i1 %cmp7, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.then5
  %cmacro.i = getelementptr inbounds %struct.include_file* %call, i64 0, i32 1
  store %struct.cpp_hashnode* inttoptr (i64 -1 to %struct.cpp_hashnode*), %struct.cpp_hashnode** %cmacro.i, align 8, !tbaa !0
  br label %if.end11

if.end11:                                         ; preds = %entry, %if.then9, %if.then5, %if.then
  %stacked.0 = phi i8 [ 0, %if.then ], [ %frombool, %if.then9 ], [ %frombool, %if.then5 ], [ 0, %entry ]
  %tobool = icmp ne i8 %stacked.0, 0
  ret i1 %tobool
}
