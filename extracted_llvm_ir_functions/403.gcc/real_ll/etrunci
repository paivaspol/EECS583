define void @etrunci(%struct.realvaluetype* noalias nocapture sret %agg.result, %struct.realvaluetype* byval nocapture align 8 %x) #0 {
entry:
  %yi.i = alloca [9 x i16], align 16
  %f = alloca [6 x i16], align 2
  %g = alloca [6 x i16], align 2
  %r.sroa.0 = alloca [3 x i64], align 8
  %l = alloca i64, align 8
  %0 = bitcast [6 x i16]* %g to i8*
  %1 = bitcast %struct.realvaluetype* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 12, i32 2, i1 false)
  %arraydecay = getelementptr inbounds [6 x i16]* %g, i64 0, i64 0
  %arrayidx.i = getelementptr inbounds [6 x i16]* %g, i64 0, i64 5
  %2 = load i16* %arrayidx.i, align 2, !tbaa !0
  %and.i = and i16 %2, 32767
  %cmp.i = icmp eq i16 %and.i, 32767
  br i1 %cmp.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %entry, %for.inc.i
  %i.012.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %entry ]
  %x.addr.011.i = phi i16* [ %incdec.ptr.i, %for.inc.i ], [ %arraydecay, %entry ]
  %3 = load i16* %x.addr.011.i, align 2, !tbaa !0
  %cmp5.i = icmp eq i16 %3, 0
  br i1 %cmp5.i, label %for.inc.i, label %if.then

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr inbounds i16* %x.addr.011.i, i64 1
  %inc.i = add nsw i32 %i.012.i, 1
  %cmp2.i = icmp slt i32 %inc.i, 5
  br i1 %cmp2.i, label %for.body.i, label %if.end

if.then:                                          ; preds = %for.body.i
  %4 = bitcast %struct.realvaluetype* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %1, i64 24, i32 8, i1 false), !tbaa.struct !3
  br label %return

if.end:                                           ; preds = %for.inc.i, %entry
  %arraydecay2 = getelementptr inbounds [6 x i16]* %f, i64 0, i64 0
  call fastcc void @eifrac(i16* %arraydecay, i64* %l, i16* %arraydecay2) #6
  %5 = bitcast [9 x i16]* %yi.i to i8*
  call void @llvm.lifetime.start(i64 18, i8* %5) #1
  %arraydecay.i = getelementptr inbounds [9 x i16]* %yi.i, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 18, i32 16, i1 false) #1
  %6 = load i64* %l, align 8, !tbaa !4
  %cmp.i9 = icmp slt i64 %6, 0
  br i1 %cmp.i9, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  %sub.i = sub nsw i64 0, %6
  store i16 -1, i16* %arraydecay.i, align 16, !tbaa !0
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end
  %ll.0.i = phi i64 [ %sub.i, %if.then.i ], [ %6, %if.end ]
  %shr.i = lshr i64 %ll.0.i, 48
  %conv.i = trunc i64 %shr.i to i16
  %arrayidx1.i = getelementptr inbounds [9 x i16]* %yi.i, i64 0, i64 2
  store i16 %conv.i, i16* %arrayidx1.i, align 4, !tbaa !0
  %shr2.i = lshr i64 %ll.0.i, 32
  %conv3.i = trunc i64 %shr2.i to i16
  %arrayidx4.i = getelementptr inbounds [9 x i16]* %yi.i, i64 0, i64 3
  store i16 %conv3.i, i16* %arrayidx4.i, align 2, !tbaa !0
  %shr5.i = lshr i64 %ll.0.i, 16
  %conv6.i = trunc i64 %shr5.i to i16
  %arrayidx7.i = getelementptr inbounds [9 x i16]* %yi.i, i64 0, i64 4
  store i16 %conv6.i, i16* %arrayidx7.i, align 8, !tbaa !0
  %conv8.i = trunc i64 %ll.0.i to i16
  %arrayidx9.i = getelementptr inbounds [9 x i16]* %yi.i, i64 0, i64 5
  store i16 %conv8.i, i16* %arrayidx9.i, align 2, !tbaa !0
  %arrayidx10.i = getelementptr inbounds [9 x i16]* %yi.i, i64 0, i64 1
  store i16 16430, i16* %arrayidx10.i, align 2, !tbaa !0
  %call.i = call fastcc i32 @enormlz(i16* %arraydecay.i) #7
  %cmp12.i = icmp sgt i32 %call.i, 80
  br i1 %cmp12.i, label %if.then14.i, label %if.else16.i

if.then14.i:                                      ; preds = %if.end.i
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 18, i32 16, i1 false) #1
  br label %ltoe.exit

if.else16.i:                                      ; preds = %if.end.i
  %7 = load i16* %arrayidx10.i, align 2, !tbaa !0
  %conv20.i = zext i16 %7 to i32
  %sub21.i = sub nsw i32 %conv20.i, %call.i
  %conv22.i = trunc i32 %sub21.i to i16
  store i16 %conv22.i, i16* %arrayidx10.i, align 2, !tbaa !0
  br label %ltoe.exit

ltoe.exit:                                        ; preds = %if.then14.i, %if.else16.i
  call fastcc void @emovo(i16* %arraydecay.i, i16* %arraydecay) #7
  call void @llvm.lifetime.end(i64 18, i8* %5) #1
  %r.sroa.0.0.cast4 = bitcast [3 x i64]* %r.sroa.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %r.sroa.0.0.cast4, i8* %0, i64 12, i32 2, i1 false)
  %r.sroa.0.12.raw_idx = getelementptr inbounds i8* %r.sroa.0.0.cast4, i64 12
  call void @llvm.memset.p0i8.i64(i8* %r.sroa.0.12.raw_idx, i8 0, i64 12, i32 4, i1 false)
  %r.sroa.0.0.cast5 = bitcast %struct.realvaluetype* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %r.sroa.0.0.cast5, i8* %r.sroa.0.0.cast4, i64 24, i32 8, i1 false)
  br label %return

return:                                           ; preds = %ltoe.exit, %if.then
  ret void
}
