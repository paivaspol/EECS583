define internal fastcc void @make_nan(i16* nocapture %nan, i32 %sign, i32 %mode) #0 {
entry:
  switch i32 %mode, label %sw.default [
    i32 18, label %while.cond.preheader
    i32 17, label %while.cond.preheader
    i32 16, label %sw.bb1
    i32 15, label %sw.bb2
    i32 13, label %sw.bb2
  ]

while.cond.preheader:                             ; preds = %sw.bb2, %sw.bb1, %entry, %entry
  %n.0.ph = phi i32 [ 5, %entry ], [ 5, %entry ], [ 3, %sw.bb1 ], [ 1, %sw.bb2 ]
  %p.0.ph = phi i16* [ getelementptr inbounds ([6 x i16]* @XFlittlenan, i64 0, i64 0), %entry ], [ getelementptr inbounds ([6 x i16]* @XFlittlenan, i64 0, i64 0), %entry ], [ getelementptr inbounds ([4 x i16]* @DFlittlenan, i64 0, i64 0), %sw.bb1 ], [ getelementptr inbounds ([2 x i16]* @SFlittlenan, i64 0, i64 0), %sw.bb2 ]
  %0 = add i32 %n.0.ph, -1
  %1 = zext i32 %0 to i64
  %2 = add i64 %1, 1
  %scevgep = getelementptr i16* %nan, i64 %2
  br label %while.body

sw.bb1:                                           ; preds = %entry
  br label %while.cond.preheader

sw.bb2:                                           ; preds = %entry, %entry
  br label %while.cond.preheader

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str2, i64 0, i64 0), i32 6401, i8* getelementptr inbounds ([9 x i8]* @__FUNCTION__.make_nan, i64 0, i64 0)) #8
  unreachable

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %p.09 = phi i16* [ %p.0.ph, %while.cond.preheader ], [ %incdec.ptr, %while.body ]
  %n.08 = phi i32 [ %n.0.ph, %while.cond.preheader ], [ %phitmp, %while.body ]
  %nan.addr.07 = phi i16* [ %nan, %while.cond.preheader ], [ %incdec.ptr3, %while.body ]
  %incdec.ptr = getelementptr inbounds i16* %p.09, i64 1
  %3 = load i16* %p.09, align 2, !tbaa !0
  %incdec.ptr3 = getelementptr inbounds i16* %nan.addr.07, i64 1
  store i16 %3, i16* %nan.addr.07, align 2, !tbaa !0
  %phitmp = add i32 %n.08, -1
  %cmp = icmp eq i32 %phitmp, 0
  br i1 %cmp, label %while.end, label %while.body

while.end:                                        ; preds = %while.body
  %scevgep10 = getelementptr i16* %p.0.ph, i64 %2
  %shl = shl i32 %sign, 15
  %4 = load i16* %scevgep10, align 2, !tbaa !0
  %conv = zext i16 %4 to i32
  %and = and i32 %conv, 32767
  %or = or i32 %and, %shl
  %conv4 = trunc i32 %or to i16
  store i16 %conv4, i16* %scevgep, align 2, !tbaa !0
  ret void
}
