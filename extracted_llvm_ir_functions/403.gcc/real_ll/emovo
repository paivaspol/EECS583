define internal fastcc void @emovo(i16* nocapture %a, i16* nocapture %b) #0 {
entry:
  %add.ptr = getelementptr inbounds i16* %b, i64 5
  %incdec.ptr = getelementptr inbounds i16* %a, i64 1
  %0 = load i16* %a, align 2, !tbaa !0
  %tobool = icmp eq i16 %0, 0
  %1 = load i16* %incdec.ptr, align 2, !tbaa !0
  %or = or i16 %1, -32768
  %storemerge = select i1 %tobool, i16 %1, i16 %or
  store i16 %storemerge, i16* %add.ptr, align 2, !tbaa !0
  %2 = load i16* %incdec.ptr, align 2, !tbaa !0
  %cmp = icmp eq i16 %2, 32767
  br i1 %cmp, label %for.body.i, label %if.end14

for.cond.i:                                       ; preds = %for.body.i
  %3 = trunc i64 %indvars.iv.next.i to i32
  %cmp2.i = icmp slt i32 %3, 9
  br i1 %cmp2.i, label %for.body.i, label %if.end13

for.body.i:                                       ; preds = %entry, %for.cond.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond.i ], [ 3, %entry ]
  %arrayidx4.i = getelementptr inbounds i16* %a, i64 %indvars.iv.i
  %4 = load i16* %arrayidx4.i, align 2, !tbaa !0
  %cmp6.i = icmp eq i16 %4, 0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  br i1 %cmp6.i, label %for.cond.i, label %if.then11

if.then11:                                        ; preds = %for.body.i
  %5 = load i16* %a, align 2, !tbaa !0
  %cmp.i32 = icmp ne i16 %5, 0
  %conv1.i = zext i1 %cmp.i32 to i16
  %6 = bitcast i16* %b to i64*
  store i64 0, i64* %6, align 2
  %scevgep8.i = getelementptr i16* %b, i64 4
  store i16 -16384, i16* %scevgep8.i, align 2, !tbaa !0
  %shl.i = shl nuw i16 %conv1.i, 15
  %or.i31 = or i16 %shl.i, 32767
  store i16 %or.i31, i16* %add.ptr, align 2, !tbaa !0
  br label %for.end

if.end13:                                         ; preds = %for.cond.i
  %x5.i = bitcast i16* %b to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %x5.i, i8 0, i64 10, i32 2, i1 false) #1
  %or.i = or i16 %storemerge, 32767
  store i16 %or.i, i16* %add.ptr, align 2, !tbaa !0
  br label %for.end

if.end14:                                         ; preds = %entry
  %q.0 = getelementptr inbounds i16* %b, i64 4
  %incdec.ptr15 = getelementptr inbounds i16* %a, i64 3
  br label %for.body

for.body:                                         ; preds = %for.body, %if.end14
  %j.040 = phi i32 [ 0, %if.end14 ], [ %inc, %for.body ]
  %p.039 = phi i16* [ %incdec.ptr15, %if.end14 ], [ %incdec.ptr18, %for.body ]
  %q.138 = phi i16* [ %q.0, %if.end14 ], [ %incdec.ptr19, %for.body ]
  %incdec.ptr18 = getelementptr inbounds i16* %p.039, i64 1
  %7 = load i16* %p.039, align 2, !tbaa !0
  %incdec.ptr19 = getelementptr inbounds i16* %q.138, i64 -1
  store i16 %7, i16* %q.138, align 2, !tbaa !0
  %inc = add nsw i32 %j.040, 1
  %exitcond = icmp eq i32 %inc, 5
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then11, %if.end13
  ret void
}
