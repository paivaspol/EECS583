define internal fastcc void @ultoe(i64* nocapture %lp, i16* nocapture %y) #0 {
entry:
  %yi = alloca [9 x i16], align 16
  call void @llvm.dbg.value(metadata !{i64* %lp}, i64 0, metadata !845), !dbg !1743
  call void @llvm.dbg.value(metadata !{i16* %y}, i64 0, metadata !846), !dbg !1744
  call void @llvm.dbg.declare(metadata !{[9 x i16]* %yi}, metadata !847), !dbg !1745
  %arraydecay = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 0, !dbg !1746
  call void @llvm.dbg.value(metadata !{i16* %arraydecay}, i64 0, metadata !1747) #2, !dbg !1748
  call void @llvm.dbg.value(metadata !250, i64 0, metadata !1749) #2, !dbg !1750
  %xi4.i = bitcast [9 x i16]* %yi to i8*
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #2, !dbg !1751
  %0 = load i64* %lp, align 8, !dbg !1752, !tbaa !1581
  call void @llvm.dbg.value(metadata !{i64 %0}, i64 0, metadata !848), !dbg !1752
  %shr = lshr i64 %0, 48, !dbg !1753
  %conv = trunc i64 %shr to i16, !dbg !1753
  %arrayidx = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 2, !dbg !1753
  store i16 %conv, i16* %arrayidx, align 4, !dbg !1753, !tbaa !1057
  %shr1 = lshr i64 %0, 32, !dbg !1754
  %conv2 = trunc i64 %shr1 to i16, !dbg !1754
  %arrayidx3 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 3, !dbg !1754
  store i16 %conv2, i16* %arrayidx3, align 2, !dbg !1754, !tbaa !1057
  %shr4 = lshr i64 %0, 16, !dbg !1755
  %conv5 = trunc i64 %shr4 to i16, !dbg !1755
  %arrayidx6 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 4, !dbg !1755
  store i16 %conv5, i16* %arrayidx6, align 8, !dbg !1755, !tbaa !1057
  %conv7 = trunc i64 %0 to i16, !dbg !1756
  %arrayidx8 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 5, !dbg !1756
  store i16 %conv7, i16* %arrayidx8, align 2, !dbg !1756, !tbaa !1057
  %arrayidx9 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 1, !dbg !1757
  store i16 16430, i16* %arrayidx9, align 2, !dbg !1757, !tbaa !1057
  %call = call fastcc i32 @enormlz(i16* %arraydecay) #7, !dbg !1758
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !849), !dbg !1758
  %cmp = icmp sgt i32 %call, 80, !dbg !1758
  br i1 %cmp, label %if.then, label %if.else, !dbg !1758

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata !{i16* %arraydecay}, i64 0, metadata !1759) #2, !dbg !1761
  call void @llvm.dbg.value(metadata !250, i64 0, metadata !1762) #2, !dbg !1763
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #2, !dbg !1764
  br label %if.end, !dbg !1760

if.else:                                          ; preds = %entry
  %1 = load i16* %arrayidx9, align 2, !dbg !1765, !tbaa !1057
  %conv16 = zext i16 %1 to i32, !dbg !1765
  %sub = sub nsw i32 %conv16, %call, !dbg !1765
  %conv17 = trunc i32 %sub to i16, !dbg !1765
  store i16 %conv17, i16* %arrayidx9, align 2, !dbg !1765, !tbaa !1057
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call fastcc void @emovo(i16* %arraydecay, i16* %y) #7, !dbg !1766
  ret void, !dbg !1767
}
