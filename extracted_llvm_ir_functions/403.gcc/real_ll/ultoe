define internal fastcc void @ultoe(i64* nocapture %lp, i16* nocapture %y) #0 {
entry:
  %yi = alloca [9 x i16], align 16
  %arraydecay = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 0
  %xi4.i = bitcast [9 x i16]* %yi to i8*
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  %0 = load i64* %lp, align 8, !tbaa !4
  %shr = lshr i64 %0, 48
  %conv = trunc i64 %shr to i16
  %arrayidx = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 2
  store i16 %conv, i16* %arrayidx, align 4, !tbaa !0
  %shr1 = lshr i64 %0, 32
  %conv2 = trunc i64 %shr1 to i16
  %arrayidx3 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 3
  store i16 %conv2, i16* %arrayidx3, align 2, !tbaa !0
  %shr4 = lshr i64 %0, 16
  %conv5 = trunc i64 %shr4 to i16
  %arrayidx6 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 4
  store i16 %conv5, i16* %arrayidx6, align 8, !tbaa !0
  %conv7 = trunc i64 %0 to i16
  %arrayidx8 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 5
  store i16 %conv7, i16* %arrayidx8, align 2, !tbaa !0
  %arrayidx9 = getelementptr inbounds [9 x i16]* %yi, i64 0, i64 1
  store i16 16430, i16* %arrayidx9, align 2, !tbaa !0
  %call = call fastcc i32 @enormlz(i16* %arraydecay) #6
  %cmp = icmp sgt i32 %call, 80
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load i16* %arrayidx9, align 2, !tbaa !0
  %conv16 = zext i16 %1 to i32
  %sub = sub nsw i32 %conv16, %call
  %conv17 = trunc i32 %sub to i16
  store i16 %conv17, i16* %arrayidx9, align 2, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call fastcc void @emovo(i16* %arraydecay, i16* %y) #6
  ret void
}
