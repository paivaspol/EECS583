define void @etartdouble(%struct.realvaluetype* byval nocapture align 8 %r, i64* nocapture %l) #0 {
entry:
  %e = alloca [6 x i16], align 2
  %0 = bitcast [6 x i16]* %e to i8*
  %1 = bitcast %struct.realvaluetype* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 12, i32 2, i1 false)
  %arraydecay = getelementptr inbounds [6 x i16]* %e, i64 0, i64 0
  call fastcc void @etoe64(i16* %arraydecay, i16* %arraydecay) #6
  %arrayidx.i = getelementptr inbounds i64* %l, i64 3
  store i64 0, i64* %arrayidx.i, align 8, !tbaa !4
  %arrayidx2.i = getelementptr inbounds [6 x i16]* %e, i64 0, i64 5
  %2 = load i16* %arrayidx2.i, align 2, !tbaa !0
  %conv.i = zext i16 %2 to i64
  %arrayidx3.i = getelementptr inbounds [6 x i16]* %e, i64 0, i64 4
  %3 = load i16* %arrayidx3.i, align 2, !tbaa !0
  %conv4.i = zext i16 %3 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 16
  %or.i = or i64 %conv4.i, %shl.i
  %arrayidx6.i = getelementptr inbounds i64* %l, i64 2
  store i64 %or.i, i64* %arrayidx6.i, align 8, !tbaa !4
  %arrayidx8.i = getelementptr inbounds [6 x i16]* %e, i64 0, i64 3
  %4 = load i16* %arrayidx8.i, align 2, !tbaa !0
  %conv9.i = zext i16 %4 to i64
  %arrayidx11.i = getelementptr inbounds [6 x i16]* %e, i64 0, i64 2
  %5 = load i16* %arrayidx11.i, align 2, !tbaa !0
  %conv12.i = zext i16 %5 to i64
  %shl14.i = shl nuw nsw i64 %conv9.i, 16
  %or15.i = or i64 %conv12.i, %shl14.i
  %arrayidx16.i = getelementptr inbounds i64* %l, i64 1
  store i64 %or15.i, i64* %arrayidx16.i, align 8, !tbaa !4
  %arrayidx18.i = getelementptr inbounds [6 x i16]* %e, i64 0, i64 1
  %6 = load i16* %arrayidx18.i, align 2, !tbaa !0
  %conv19.i = zext i16 %6 to i64
  %7 = load i16* %arraydecay, align 2, !tbaa !0
  %conv22.i = zext i16 %7 to i64
  %shl24.i = shl nuw nsw i64 %conv19.i, 16
  %or25.i = or i64 %conv22.i, %shl24.i
  store i64 %or25.i, i64* %l, align 8, !tbaa !4
  ret void
}
