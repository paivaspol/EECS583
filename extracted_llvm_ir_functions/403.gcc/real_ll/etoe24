define internal fastcc void @etoe24(i16* nocapture %x, i16* nocapture %e) #0 {
entry:
  %xi = alloca [9 x i16], align 16
  call void @llvm.dbg.value(metadata !{i16* %x}, i64 0, metadata !873), !dbg !2127
  call void @llvm.dbg.value(metadata !{i16* %e}, i64 0, metadata !874), !dbg !2128
  call void @llvm.dbg.declare(metadata !{[9 x i16]* %xi}, metadata !876), !dbg !2129
  tail call void @llvm.dbg.value(metadata !{i16* %x}, i64 0, metadata !2130), !dbg !2132
  %arrayidx.i = getelementptr inbounds i16* %x, i64 5, !dbg !2133
  %0 = load i16* %arrayidx.i, align 2, !dbg !2133, !tbaa !1057
  %and.i = and i16 %0, 32767, !dbg !2133
  %cmp.i = icmp eq i16 %and.i, 32767, !dbg !2133
  br i1 %cmp.i, label %for.body.i, label %if.end, !dbg !2133

for.body.i:                                       ; preds = %entry, %for.inc.i
  %i.012.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %entry ]
  %x.addr.011.i = phi i16* [ %incdec.ptr.i, %for.inc.i ], [ %x, %entry ]
  %1 = load i16* %x.addr.011.i, align 2, !dbg !2134, !tbaa !1057
  %cmp5.i = icmp eq i16 %1, 0, !dbg !2134
  br i1 %cmp5.i, label %for.inc.i, label %if.then, !dbg !2134

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr inbounds i16* %x.addr.011.i, i64 1, !dbg !2134
  %inc.i = add nsw i32 %i.012.i, 1, !dbg !2135
  tail call void @llvm.dbg.value(metadata !{i32 %inc.i}, i64 0, metadata !2136), !dbg !2135
  %cmp2.i = icmp slt i32 %inc.i, 5, !dbg !2135
  br i1 %cmp2.i, label %for.body.i, label %if.end, !dbg !2135

if.then:                                          ; preds = %for.body.i
  tail call void @llvm.dbg.value(metadata !{i16* %x}, i64 0, metadata !2137), !dbg !2140
  %.lobit.i = lshr i16 %0, 15, !dbg !2141
  %2 = zext i16 %.lobit.i to i32, !dbg !2141
  call fastcc void @make_nan(i16* %e, i32 %2, i32 15) #7, !dbg !2138
  br label %return, !dbg !2142

if.end:                                           ; preds = %for.inc.i, %entry
  %arraydecay = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 0, !dbg !2143
  call fastcc void @emovi(i16* %x, i16* %arraydecay) #7, !dbg !2143
  %arrayidx = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 1, !dbg !2144
  %3 = load i16* %arrayidx, align 2, !dbg !2144, !tbaa !1057
  call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !875), !dbg !2144
  call void @llvm.dbg.value(metadata !{i16* %x}, i64 0, metadata !2145) #2, !dbg !2147
  tail call void @llvm.dbg.value(metadata !{i16* %x}, i64 0, metadata !2148), !dbg !2150
  %4 = load i16* %arrayidx.i, align 2, !dbg !2151, !tbaa !1057
  %and.i18 = and i16 %4, 32767, !dbg !2151
  %cmp.i19 = icmp eq i16 %and.i18, 32767, !dbg !2151
  br i1 %cmp.i19, label %for.body.i23, label %if.end5, !dbg !2151

for.body.i23:                                     ; preds = %if.end, %for.inc.i27
  %i.012.i20 = phi i32 [ %inc.i25, %for.inc.i27 ], [ 0, %if.end ]
  %x.addr.011.i21 = phi i16* [ %incdec.ptr.i24, %for.inc.i27 ], [ %x, %if.end ]
  %5 = load i16* %x.addr.011.i21, align 2, !dbg !2152, !tbaa !1057
  %cmp5.i22 = icmp eq i16 %5, 0, !dbg !2152
  br i1 %cmp5.i22, label %for.inc.i27, label %if.end5, !dbg !2152

for.inc.i27:                                      ; preds = %for.body.i23
  %incdec.ptr.i24 = getelementptr inbounds i16* %x.addr.011.i21, i64 1, !dbg !2152
  %inc.i25 = add nsw i32 %i.012.i20, 1, !dbg !2153
  tail call void @llvm.dbg.value(metadata !{i32 %inc.i25}, i64 0, metadata !2154), !dbg !2153
  %cmp2.i26 = icmp slt i32 %inc.i25, 5, !dbg !2153
  br i1 %cmp2.i26, label %for.body.i23, label %eisinf.exit, !dbg !2153

eisinf.exit:                                      ; preds = %for.inc.i27
  br i1 %cmp.i19, label %nonorm, label %if.end5, !dbg !2146

if.end5:                                          ; preds = %if.end, %for.body.i23, %eisinf.exit
  %conv = zext i16 %3 to i32, !dbg !2144
  %sub = add nsw i32 %conv, -16256, !dbg !2144
  %6 = load i32* @rndprc, align 4, !dbg !2155, !tbaa !1624
  call void @llvm.dbg.value(metadata !{i32 %6}, i64 0, metadata !877), !dbg !2155
  store i32 24, i32* @rndprc, align 4, !dbg !2156, !tbaa !1624
  call fastcc void @emdnorm(i16* %arraydecay, i32 0, i32 0, i32 %sub, i32 64) #7, !dbg !2157
  store i32 %6, i32* @rndprc, align 4, !dbg !2158, !tbaa !1624
  br label %nonorm, !dbg !2158

nonorm:                                           ; preds = %eisinf.exit, %if.end5
  call fastcc void @toe24(i16* %arraydecay, i16* %e) #7, !dbg !2159
  br label %return, !dbg !2159

return:                                           ; preds = %nonorm, %if.then
  ret void, !dbg !2159
}
