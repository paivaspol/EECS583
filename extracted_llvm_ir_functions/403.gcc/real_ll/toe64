define internal fastcc void @toe64(i16* nocapture %a, i16* nocapture %b) #0 {
entry:
  %arrayidx.i = getelementptr inbounds i16* %a, i64 1
  %0 = load i16* %arrayidx.i, align 2, !tbaa !0
  %and.i = and i16 %0, 32767
  %cmp.i = icmp eq i16 %and.i, 32767
  br i1 %cmp.i, label %for.body.i, label %if.end

for.cond.i:                                       ; preds = %for.body.i
  %1 = trunc i64 %indvars.iv.next.i to i32
  %cmp2.i = icmp slt i32 %1, 9
  br i1 %cmp2.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %entry, %for.cond.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond.i ], [ 3, %entry ]
  %arrayidx4.i = getelementptr inbounds i16* %a, i64 %indvars.iv.i
  %2 = load i16* %arrayidx4.i, align 2, !tbaa !0
  %cmp6.i = icmp eq i16 %2, 0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  br i1 %cmp6.i, label %for.cond.i, label %if.then

if.then:                                          ; preds = %for.body.i
  %3 = load i16* %a, align 2, !tbaa !0
  %cmp.i49 = icmp ne i16 %3, 0
  %conv1.i = zext i1 %cmp.i49 to i32
  tail call fastcc void @make_nan(i16* %b, i32 %conv1.i, i32 17) #6
  br label %for.end

if.end:                                           ; preds = %for.cond.i, %entry
  %cmp = icmp eq i16 %0, 0
  br i1 %cmp, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %add.ptr.i = getelementptr inbounds i16* %a, i64 2
  br label %for.body.i48

for.body.i48:                                     ; preds = %for.body.i48, %if.then3
  %i.025.i = phi i32 [ 2, %if.then3 ], [ %inc.i, %for.body.i48 ]
  %bits.024.i = phi i16 [ 0, %if.then3 ], [ %shl.i, %for.body.i48 ]
  %x.addr.023.i = phi i16* [ %add.ptr.i, %if.then3 ], [ %incdec.ptr.i, %for.body.i48 ]
  %4 = load i16* %x.addr.023.i, align 2, !tbaa !0
  %and.i47 = and i16 %4, 1
  %5 = or i16 %and.i47, %bits.024.i
  %shr22.i = lshr i16 %4, 1
  %6 = shl i16 %bits.024.i, 14
  %7 = or i16 %shr22.i, %6
  store i16 %7, i16* %x.addr.023.i, align 2, !tbaa !0
  %shl.i = shl i16 %5, 1
  %incdec.ptr.i = getelementptr inbounds i16* %x.addr.023.i, i64 1
  %inc.i = add nsw i32 %i.025.i, 1
  %exitcond.i = icmp eq i32 %inc.i, 9
  br i1 %exitcond.i, label %if.end4, label %for.body.i48

if.end4:                                          ; preds = %for.body.i48, %if.end
  %add.ptr = getelementptr inbounds i16* %b, i64 4
  %add.ptr5 = getelementptr inbounds i16* %b, i64 5
  store i16 0, i16* %add.ptr5, align 2, !tbaa !0
  %8 = load i16* %a, align 2, !tbaa !0
  %tobool6 = icmp eq i16 %8, 0
  %9 = load i16* %arrayidx.i, align 2, !tbaa !0
  %or = or i16 %9, -32768
  %storemerge = select i1 %tobool6, i16 %9, i16 %or
  %q.0 = getelementptr inbounds i16* %b, i64 3
  store i16 %storemerge, i16* %add.ptr, align 2, !tbaa !0
  %10 = load i16* %arrayidx.i, align 2, !tbaa !0
  %and.i.i = and i16 %10, 32767
  %cmp.i.i = icmp eq i16 %and.i.i, 32767
  br i1 %cmp.i.i, label %for.body.i.i, label %if.end22

for.cond.i.i:                                     ; preds = %for.body.i.i
  %11 = trunc i64 %indvars.iv.next.i.i to i32
  %cmp2.i.i = icmp slt i32 %11, 9
  br i1 %cmp2.i.i, label %for.body.i.i, label %if.then18

for.body.i.i:                                     ; preds = %if.end4, %for.cond.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %for.cond.i.i ], [ 3, %if.end4 ]
  %arrayidx4.i.i = getelementptr inbounds i16* %a, i64 %indvars.iv.i.i
  %12 = load i16* %arrayidx4.i.i, align 2, !tbaa !0
  %cmp6.i.i = icmp eq i16 %12, 0
  %indvars.iv.next.i.i = add i64 %indvars.iv.i.i, 1
  br i1 %cmp6.i.i, label %for.cond.i.i, label %if.end22

if.then18:                                        ; preds = %for.cond.i.i
  %incdec.ptr19 = getelementptr inbounds i16* %b, i64 2
  store i16 -32768, i16* %q.0, align 2, !tbaa !0
  %incdec.ptr20 = getelementptr inbounds i16* %b, i64 1
  store i16 0, i16* %incdec.ptr19, align 2, !tbaa !0
  store i16 0, i16* %incdec.ptr20, align 2, !tbaa !0
  store i16 0, i16* %b, align 2, !tbaa !0
  br label %for.end

if.end22:                                         ; preds = %for.body.i.i, %if.end4
  %incdec.ptr15 = getelementptr inbounds i16* %a, i64 3
  br label %for.body

for.body:                                         ; preds = %for.body, %if.end22
  %i.056 = phi i16 [ 0, %if.end22 ], [ %inc, %for.body ]
  %q.155 = phi i16* [ %q.0, %if.end22 ], [ %incdec.ptr27, %for.body ]
  %p.054 = phi i16* [ %incdec.ptr15, %if.end22 ], [ %incdec.ptr26, %for.body ]
  %incdec.ptr26 = getelementptr inbounds i16* %p.054, i64 1
  %13 = load i16* %p.054, align 2, !tbaa !0
  %incdec.ptr27 = getelementptr inbounds i16* %q.155, i64 -1
  store i16 %13, i16* %q.155, align 2, !tbaa !0
  %inc = add i16 %i.056, 1
  %exitcond = icmp eq i16 %inc, 4
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then, %if.then18
  ret void
}
