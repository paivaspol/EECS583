define internal fastcc i32 @edivm(i16* nocapture %den, i16* nocapture %num) #0 {
entry:
  %tprod = alloca [10 x i16], align 16
  %0 = load i16* %num, align 2, !tbaa !0
  store i16 %0, i16* getelementptr inbounds ([9 x i16]* @equot, i64 0, i64 0), align 16, !tbaa !0
  %arrayidx1 = getelementptr inbounds i16* %num, i64 1
  %1 = load i16* %arrayidx1, align 2, !tbaa !0
  store i16 %1, i16* getelementptr inbounds ([9 x i16]* @equot, i64 0, i64 1), align 2, !tbaa !0
  call void @llvm.memset.p0i8.i64(i8* bitcast (i16* getelementptr inbounds ([9 x i16]* @equot, i64 0, i64 2) to i8*), i8 0, i64 14, i32 4, i1 false)
  %add.ptr.i = getelementptr inbounds i16* %num, i64 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %entry
  %i.025.i = phi i32 [ 2, %entry ], [ %inc.i, %for.body.i ]
  %bits.024.i = phi i16 [ 0, %entry ], [ %shl.i, %for.body.i ]
  %x.addr.023.i = phi i16* [ %add.ptr.i, %entry ], [ %incdec.ptr.i, %for.body.i ]
  %2 = load i16* %x.addr.023.i, align 2, !tbaa !0
  %and.i = and i16 %2, 1
  %3 = or i16 %and.i, %bits.024.i
  %shr22.i = lshr i16 %2, 1
  %4 = shl i16 %bits.024.i, 14
  %5 = or i16 %shr22.i, %4
  store i16 %5, i16* %x.addr.023.i, align 2, !tbaa !0
  %shl.i = shl i16 %3, 1
  %incdec.ptr.i = getelementptr inbounds i16* %x.addr.023.i, i64 1
  %inc.i = add nsw i32 %i.025.i, 1
  %exitcond.i = icmp eq i32 %inc.i, 9
  br i1 %exitcond.i, label %eshdn1.exit, label %for.body.i

eshdn1.exit:                                      ; preds = %for.body.i
  %arrayidx4 = getelementptr inbounds i16* %den, i64 3
  %6 = load i16* %arrayidx4, align 2, !tbaa !0
  %arrayidx9 = getelementptr inbounds i16* %num, i64 3
  %conv11 = zext i16 %6 to i64
  %mul = mul i64 %conv11, 65535
  %arraydecay = getelementptr inbounds [10 x i16]* %tprod, i64 0, i64 0
  %add.ptr.i156 = getelementptr inbounds [10 x i16]* %tprod, i64 0, i64 2
  %add.ptr.i105 = getelementptr inbounds [10 x i16]* %tprod, i64 0, i64 8
  %add.ptr1.i106 = getelementptr inbounds i16* %num, i64 8
  %add.ptr.i137 = getelementptr inbounds i16* %den, i64 8
  %conv15 = zext i16 %6 to i32
  br label %for.body7

for.body7:                                        ; preds = %eshup6.exit, %eshdn1.exit
  %indvars.iv201 = phi i64 [ 2, %eshdn1.exit ], [ %indvars.iv.next202, %eshup6.exit ]
  %7 = load i16* %add.ptr.i, align 2, !tbaa !0
  %conv = zext i16 %7 to i32
  %shl = shl nuw i32 %conv, 16
  %8 = load i16* %arrayidx9, align 2, !tbaa !0
  %conv10 = zext i16 %8 to i32
  %add = or i32 %shl, %conv10
  %conv12 = zext i32 %add to i64
  %cmp13 = icmp ult i64 %mul, %conv12
  br i1 %cmp13, label %if.end, label %if.else

if.else:                                          ; preds = %for.body7
  %div = udiv i32 %add, %conv15
  %conv16 = trunc i32 %div to i16
  br label %if.end

if.end:                                           ; preds = %for.body7, %if.else
  %tquot.0 = phi i16 [ %conv16, %if.else ], [ -1, %for.body7 ]
  %conv17 = zext i16 %tquot.0 to i32
  call fastcc void @m16m(i32 %conv17, i16* %den, i16* %arraydecay) #6
  br label %for.body.i162

for.body.i162:                                    ; preds = %for.inc.i167, %if.end
  %i.021.i158 = phi i32 [ 2, %if.end ], [ %inc.i165, %for.inc.i167 ]
  %b.addr.020.i159 = phi i16* [ %add.ptr.i, %if.end ], [ %incdec.ptr2.i163, %for.inc.i167 ]
  %a.addr.019.i160 = phi i16* [ %add.ptr.i156, %if.end ], [ %incdec.ptr.i164, %for.inc.i167 ]
  %9 = load i16* %a.addr.019.i160, align 2, !tbaa !0
  %10 = load i16* %b.addr.020.i159, align 2, !tbaa !0
  %cmp4.i161 = icmp eq i16 %9, %10
  br i1 %cmp4.i161, label %for.inc.i167, label %ecmpm.exit172

for.inc.i167:                                     ; preds = %for.body.i162
  %incdec.ptr2.i163 = getelementptr inbounds i16* %b.addr.020.i159, i64 1
  %incdec.ptr.i164 = getelementptr inbounds i16* %a.addr.019.i160, i64 1
  %inc.i165 = add nsw i32 %i.021.i158, 1
  %cmp.i166 = icmp slt i32 %inc.i165, 9
  br i1 %cmp.i166, label %for.body.i162, label %if.end35

ecmpm.exit172:                                    ; preds = %for.body.i162
  %cmp10.i168 = icmp ugt i16 %9, %10
  br i1 %cmp10.i168, label %for.body.i154, label %if.end35

for.body.i154:                                    ; preds = %ecmpm.exit172, %for.body.i154
  %carry.016.i139 = phi i32 [ %and.lobit.i148, %for.body.i154 ], [ 0, %ecmpm.exit172 ]
  %i.015.i140 = phi i32 [ %inc.i152, %for.body.i154 ], [ 2, %ecmpm.exit172 ]
  %x.addr.014.i141 = phi i16* [ %incdec.ptr.i150, %for.body.i154 ], [ %add.ptr.i137, %ecmpm.exit172 ]
  %y.addr.013.i142 = phi i16* [ %incdec.ptr5.i151, %for.body.i154 ], [ %add.ptr.i105, %ecmpm.exit172 ]
  %11 = load i16* %y.addr.013.i142, align 2, !tbaa !0
  %conv.i143 = zext i16 %11 to i32
  %12 = load i16* %x.addr.014.i141, align 2, !tbaa !0
  %conv2.i144 = zext i16 %12 to i32
  %sub.i145 = sub i32 %conv.i143, %conv2.i144
  %sub3.i146 = sub i32 %sub.i145, %carry.016.i139
  %and.i147 = lshr i32 %sub3.i146, 16
  %and.lobit.i148 = and i32 %and.i147, 1
  %conv4.i149 = trunc i32 %sub3.i146 to i16
  store i16 %conv4.i149, i16* %y.addr.013.i142, align 2, !tbaa !0
  %incdec.ptr.i150 = getelementptr inbounds i16* %x.addr.014.i141, i64 -1
  %incdec.ptr5.i151 = getelementptr inbounds i16* %y.addr.013.i142, i64 -1
  %inc.i152 = add nsw i32 %i.015.i140, 1
  %exitcond.i153 = icmp eq i32 %inc.i152, 9
  br i1 %exitcond.i153, label %for.body.i133.loopexit, label %for.body.i154

for.body.i133.loopexit:                           ; preds = %for.body.i154
  %sub = add i16 %tquot.0, -1
  br label %for.body.i133

for.body.i133:                                    ; preds = %for.body.i133.loopexit, %for.inc.i
  %i.021.i = phi i32 [ %inc.i136, %for.inc.i ], [ 2, %for.body.i133.loopexit ]
  %b.addr.020.i = phi i16* [ %incdec.ptr2.i134, %for.inc.i ], [ %add.ptr.i, %for.body.i133.loopexit ]
  %a.addr.019.i = phi i16* [ %incdec.ptr.i135, %for.inc.i ], [ %add.ptr.i156, %for.body.i133.loopexit ]
  %13 = load i16* %a.addr.019.i, align 2, !tbaa !0
  %14 = load i16* %b.addr.020.i, align 2, !tbaa !0
  %cmp4.i = icmp eq i16 %13, %14
  br i1 %cmp4.i, label %for.inc.i, label %ecmpm.exit

for.inc.i:                                        ; preds = %for.body.i133
  %incdec.ptr2.i134 = getelementptr inbounds i16* %b.addr.020.i, i64 1
  %incdec.ptr.i135 = getelementptr inbounds i16* %a.addr.019.i, i64 1
  %inc.i136 = add nsw i32 %i.021.i, 1
  %cmp.i = icmp slt i32 %inc.i136, 9
  br i1 %cmp.i, label %for.body.i133, label %if.end35

ecmpm.exit:                                       ; preds = %for.body.i133
  %cmp10.i = icmp ugt i16 %13, %14
  br i1 %cmp10.i, label %for.body.i129, label %if.end35

for.body.i129:                                    ; preds = %ecmpm.exit, %for.body.i129
  %carry.016.i114 = phi i32 [ %and.lobit.i123, %for.body.i129 ], [ 0, %ecmpm.exit ]
  %i.015.i115 = phi i32 [ %inc.i127, %for.body.i129 ], [ 2, %ecmpm.exit ]
  %x.addr.014.i116 = phi i16* [ %incdec.ptr.i125, %for.body.i129 ], [ %add.ptr.i137, %ecmpm.exit ]
  %y.addr.013.i117 = phi i16* [ %incdec.ptr5.i126, %for.body.i129 ], [ %add.ptr.i105, %ecmpm.exit ]
  %15 = load i16* %y.addr.013.i117, align 2, !tbaa !0
  %conv.i118 = zext i16 %15 to i32
  %16 = load i16* %x.addr.014.i116, align 2, !tbaa !0
  %conv2.i119 = zext i16 %16 to i32
  %sub.i120 = sub i32 %conv.i118, %conv2.i119
  %sub3.i121 = sub i32 %sub.i120, %carry.016.i114
  %and.i122 = lshr i32 %sub3.i121, 16
  %and.lobit.i123 = and i32 %and.i122, 1
  %conv4.i124 = trunc i32 %sub3.i121 to i16
  store i16 %conv4.i124, i16* %y.addr.013.i117, align 2, !tbaa !0
  %incdec.ptr.i125 = getelementptr inbounds i16* %x.addr.014.i116, i64 -1
  %incdec.ptr5.i126 = getelementptr inbounds i16* %y.addr.013.i117, i64 -1
  %inc.i127 = add nsw i32 %i.015.i115, 1
  %exitcond.i128 = icmp eq i32 %inc.i127, 9
  br i1 %exitcond.i128, label %if.end35.loopexit187, label %for.body.i129

if.end35.loopexit187:                             ; preds = %for.body.i129
  %sub31 = add i16 %tquot.0, -2
  br label %if.end35

if.end35:                                         ; preds = %for.inc.i, %for.inc.i167, %if.end35.loopexit187, %ecmpm.exit, %ecmpm.exit172
  %tquot.1 = phi i16 [ %sub, %ecmpm.exit ], [ %tquot.0, %ecmpm.exit172 ], [ %sub31, %if.end35.loopexit187 ], [ %tquot.0, %for.inc.i167 ], [ %sub, %for.inc.i ]
  br label %for.body.i111

for.body.i111:                                    ; preds = %for.body.i111, %if.end35
  %carry.016.i = phi i32 [ 0, %if.end35 ], [ %and.lobit.i, %for.body.i111 ]
  %i.015.i = phi i32 [ 2, %if.end35 ], [ %inc.i109, %for.body.i111 ]
  %x.addr.014.i = phi i16* [ %add.ptr.i105, %if.end35 ], [ %incdec.ptr.i108, %for.body.i111 ]
  %y.addr.013.i = phi i16* [ %add.ptr1.i106, %if.end35 ], [ %incdec.ptr5.i, %for.body.i111 ]
  %17 = load i16* %y.addr.013.i, align 2, !tbaa !0
  %conv.i = zext i16 %17 to i32
  %18 = load i16* %x.addr.014.i, align 2, !tbaa !0
  %conv2.i = zext i16 %18 to i32
  %sub.i = sub i32 %conv.i, %conv2.i
  %sub3.i = sub i32 %sub.i, %carry.016.i
  %and.i107 = lshr i32 %sub3.i, 16
  %and.lobit.i = and i32 %and.i107, 1
  %conv4.i = trunc i32 %sub3.i to i16
  store i16 %conv4.i, i16* %y.addr.013.i, align 2, !tbaa !0
  %incdec.ptr.i108 = getelementptr inbounds i16* %x.addr.014.i, i64 -1
  %incdec.ptr5.i = getelementptr inbounds i16* %y.addr.013.i, i64 -1
  %inc.i109 = add nsw i32 %i.015.i, 1
  %exitcond.i110 = icmp eq i32 %inc.i109, 9
  br i1 %exitcond.i110, label %esubm.exit, label %for.body.i111

esubm.exit:                                       ; preds = %for.body.i111
  %arrayidx37 = getelementptr inbounds [9 x i16]* @equot, i64 0, i64 %indvars.iv201
  store i16 %tquot.1, i16* %arrayidx37, align 2, !tbaa !0
  br label %for.body.i104

for.body.i104:                                    ; preds = %for.body.i104, %esubm.exit
  %p.09.i = phi i16* [ %add.ptr.i, %esubm.exit ], [ %incdec.ptr2.i, %for.body.i104 ]
  %i.08.i = phi i32 [ 2, %esubm.exit ], [ %inc.i102, %for.body.i104 ]
  %x.addr.07.i = phi i16* [ %arrayidx9, %esubm.exit ], [ %incdec.ptr.i101, %for.body.i104 ]
  %incdec.ptr.i101 = getelementptr inbounds i16* %x.addr.07.i, i64 1
  %19 = load i16* %x.addr.07.i, align 2, !tbaa !0
  %incdec.ptr2.i = getelementptr inbounds i16* %p.09.i, i64 1
  store i16 %19, i16* %p.09.i, align 2, !tbaa !0
  %inc.i102 = add nsw i32 %i.08.i, 1
  %exitcond.i103 = icmp eq i32 %inc.i102, 8
  br i1 %exitcond.i103, label %eshup6.exit, label %for.body.i104

eshup6.exit:                                      ; preds = %for.body.i104
  store i16 0, i16* %add.ptr1.i106, align 2, !tbaa !0
  %indvars.iv.next202 = add i64 %indvars.iv201, 1
  %lftr.wideiv203 = trunc i64 %indvars.iv.next202 to i32
  %exitcond204 = icmp eq i32 %lftr.wideiv203, 9
  br i1 %exitcond204, label %for.body45, label %for.body7

for.body45:                                       ; preds = %eshup6.exit, %for.body45
  %i.2178 = phi i32 [ %inc51, %for.body45 ], [ 2, %eshup6.exit ]
  %j.0177 = phi i16 [ %or99, %for.body45 ], [ 0, %eshup6.exit ]
  %p.1176 = phi i16* [ %incdec.ptr46, %for.body45 ], [ %add.ptr.i, %eshup6.exit ]
  %incdec.ptr46 = getelementptr inbounds i16* %p.1176, i64 1
  %20 = load i16* %p.1176, align 2, !tbaa !0
  %or99 = or i16 %20, %j.0177
  %inc51 = add nsw i32 %i.2178, 1
  %exitcond192 = icmp eq i32 %inc51, 9
  br i1 %exitcond192, label %for.body58, label %for.body45

for.body58:                                       ; preds = %for.body45, %for.body58
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body58 ], [ 0, %for.body45 ]
  %arrayidx60 = getelementptr inbounds [9 x i16]* @equot, i64 0, i64 %indvars.iv
  %21 = load i16* %arrayidx60, align 2, !tbaa !0
  %arrayidx62 = getelementptr inbounds i16* %num, i64 %indvars.iv
  store i16 %21, i16* %arrayidx62, align 2, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 9
  br i1 %exitcond, label %for.end65, label %for.body58

for.end65:                                        ; preds = %for.body58
  %not.tobool = icmp ne i16 %or99, 0
  %conv66 = zext i1 %not.tobool to i32
  ret i32 %conv66
}
