define internal fastcc void @euifrac(i16* nocapture %x, i64* nocapture %i, i16* nocapture %frac) #0 {
entry:
  %xi = alloca [9 x i16], align 16
  call void @llvm.dbg.value(metadata !{i16* %x}, i64 0, metadata !821), !dbg !1687
  call void @llvm.dbg.value(metadata !{i64* %i}, i64 0, metadata !822), !dbg !1688
  call void @llvm.dbg.value(metadata !{i16* %frac}, i64 0, metadata !823), !dbg !1689
  call void @llvm.dbg.declare(metadata !{[9 x i16]* %xi}, metadata !825), !dbg !1690
  %arraydecay = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 0, !dbg !1691
  call fastcc void @emovi(i16* %x, i16* %arraydecay) #7, !dbg !1691
  %arrayidx = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 1, !dbg !1692
  %0 = load i16* %arrayidx, align 2, !dbg !1692, !tbaa !1057
  %conv = zext i16 %0 to i32, !dbg !1692
  %sub = add nsw i32 %conv, -16382, !dbg !1692
  call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !827), !dbg !1692
  %cmp = icmp slt i32 %sub, 1, !dbg !1693
  br i1 %cmp, label %if.then, label %if.end, !dbg !1693

if.then:                                          ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !1694, !tbaa !1581
  call fastcc void @emovo(i16* %arraydecay, i16* %frac) #7, !dbg !1696
  br label %return, !dbg !1697

if.end:                                           ; preds = %entry
  %cmp3 = icmp sgt i32 %sub, 64, !dbg !1698
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !1698

if.then5:                                         ; preds = %if.end
  store i64 -1, i64* %i, align 8, !dbg !1699, !tbaa !1581
  %call = call fastcc i32 @eshift(i16* %arraydecay, i32 %sub) #7, !dbg !1701
  %1 = load i32* @extra_warnings, align 4, !dbg !1702, !tbaa !1624
  %tobool = icmp eq i32 %1, 0, !dbg !1702
  br i1 %tobool, label %if.end31, label %if.then7, !dbg !1702

if.then7:                                         ; preds = %if.then5
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([43 x i8]* @.str33, i64 0, i64 0)) #8, !dbg !1703
  br label %if.end31, !dbg !1703

if.else:                                          ; preds = %if.end
  %cmp9 = icmp sgt i32 %sub, 16, !dbg !1704
  br i1 %cmp9, label %if.then11, label %if.else25, !dbg !1704

if.then11:                                        ; preds = %if.else
  %shr70 = and i32 %sub, -16, !dbg !1705
  %sub12 = sub nsw i32 %sub, %shr70, !dbg !1705
  call void @llvm.dbg.value(metadata !{i32 %sub12}, i64 0, metadata !826), !dbg !1705
  %call14 = call fastcc i32 @eshift(i16* %arraydecay, i32 %sub12) #7, !dbg !1707
  %arrayidx15 = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 2, !dbg !1708
  %2 = load i16* %arrayidx15, align 4, !dbg !1708, !tbaa !1057
  %conv16 = zext i16 %2 to i64, !dbg !1708
  call void @llvm.dbg.value(metadata !{i64 %conv16}, i64 0, metadata !824), !dbg !1708
  call void @llvm.dbg.value(metadata !{i32 %shr70}, i64 0, metadata !827), !dbg !1709
  %scevgep.i = getelementptr [9 x i16]* %xi, i64 0, i64 8
  %add.ptr1.i = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 3, !dbg !1710
  br label %do.body, !dbg !1713

do.body:                                          ; preds = %eshup6.exit, %if.then11
  %ll.0 = phi i64 [ %conv16, %if.then11 ], [ %or, %eshup6.exit ]
  %k.0 = phi i32 [ %shr70, %if.then11 ], [ %sub22, %eshup6.exit ]
  tail call void @llvm.dbg.value(metadata !{i16* %arraydecay}, i64 0, metadata !1714), !dbg !1715
  tail call void @llvm.dbg.value(metadata !{i16* %arrayidx15}, i64 0, metadata !1716), !dbg !1717
  tail call void @llvm.dbg.value(metadata !{i16* %add.ptr1.i}, i64 0, metadata !1714), !dbg !1710
  tail call void @llvm.dbg.value(metadata !1640, i64 0, metadata !1718), !dbg !1719
  br label %for.body.i, !dbg !1719

for.body.i:                                       ; preds = %for.body.i, %do.body
  %p.09.i = phi i16* [ %arrayidx15, %do.body ], [ %incdec.ptr2.i, %for.body.i ]
  %i.08.i = phi i32 [ 2, %do.body ], [ %inc.i, %for.body.i ]
  %x.addr.07.i = phi i16* [ %add.ptr1.i, %do.body ], [ %incdec.ptr.i, %for.body.i ]
  %incdec.ptr.i = getelementptr inbounds i16* %x.addr.07.i, i64 1, !dbg !1720
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr.i}, i64 0, metadata !1714), !dbg !1720
  %3 = load i16* %x.addr.07.i, align 2, !dbg !1720, !tbaa !1057
  %incdec.ptr2.i = getelementptr inbounds i16* %p.09.i, i64 1, !dbg !1720
  store i16 %3, i16* %p.09.i, align 2, !dbg !1720, !tbaa !1057
  %inc.i = add nsw i32 %i.08.i, 1, !dbg !1719
  tail call void @llvm.dbg.value(metadata !{i32 %inc.i}, i64 0, metadata !1718), !dbg !1719
  %exitcond.i = icmp eq i32 %inc.i, 8, !dbg !1719
  br i1 %exitcond.i, label %eshup6.exit, label %for.body.i, !dbg !1719

eshup6.exit:                                      ; preds = %for.body.i
  store i16 0, i16* %scevgep.i, align 16, !dbg !1721, !tbaa !1057
  %shl19 = shl i64 %ll.0, 16, !dbg !1722
  %4 = load i16* %arrayidx15, align 4, !dbg !1722, !tbaa !1057
  %conv21 = zext i16 %4 to i64, !dbg !1722
  %or = or i64 %conv21, %shl19, !dbg !1722
  call void @llvm.dbg.value(metadata !{i64 %or}, i64 0, metadata !824), !dbg !1722
  %sub22 = add nsw i32 %k.0, -16, !dbg !1723
  call void @llvm.dbg.value(metadata !{i32 %sub22}, i64 0, metadata !827), !dbg !1723
  %cmp23 = icmp sgt i32 %sub22, 0, !dbg !1723
  br i1 %cmp23, label %do.body, label %do.end, !dbg !1723

do.end:                                           ; preds = %eshup6.exit
  store i64 %or, i64* %i, align 8, !dbg !1724, !tbaa !1581
  br label %if.end31, !dbg !1725

if.else25:                                        ; preds = %if.else
  %call27 = call fastcc i32 @eshift(i16* %arraydecay, i32 %sub) #7, !dbg !1726
  %arrayidx28 = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 2, !dbg !1728
  %5 = load i16* %arrayidx28, align 4, !dbg !1728, !tbaa !1057
  %conv29 = zext i16 %5 to i64, !dbg !1728
  store i64 %conv29, i64* %i, align 8, !dbg !1728, !tbaa !1581
  br label %if.end31

if.end31:                                         ; preds = %if.then5, %do.end, %if.else25, %if.then7
  %6 = load i16* %arraydecay, align 16, !dbg !1729, !tbaa !1057
  %tobool33 = icmp eq i16 %6, 0, !dbg !1729
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !1729

if.then34:                                        ; preds = %if.end31
  store i64 0, i64* %i, align 8, !dbg !1730, !tbaa !1581
  br label %if.end35, !dbg !1730

if.end35:                                         ; preds = %if.end31, %if.then34
  store i16 0, i16* %arraydecay, align 16, !dbg !1731, !tbaa !1057
  store i16 16382, i16* %arrayidx, align 2, !dbg !1732, !tbaa !1057
  %arrayidx38 = getelementptr inbounds [9 x i16]* %xi, i64 0, i64 2, !dbg !1733
  store i16 0, i16* %arrayidx38, align 4, !dbg !1733, !tbaa !1057
  %call40 = call fastcc i32 @enormlz(i16* %arraydecay) #7, !dbg !1734
  call void @llvm.dbg.value(metadata !{i32 %call40}, i64 0, metadata !827), !dbg !1734
  %cmp41 = icmp sgt i32 %call40, 80, !dbg !1734
  br i1 %cmp41, label %if.then43, label %if.else45, !dbg !1734

if.then43:                                        ; preds = %if.end35
  call void @llvm.dbg.value(metadata !{i16* %arraydecay}, i64 0, metadata !1735) #2, !dbg !1737
  call void @llvm.dbg.value(metadata !250, i64 0, metadata !1738) #2, !dbg !1739
  %xi4.i = bitcast [9 x i16]* %xi to i8*
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #2, !dbg !1740
  br label %if.end52, !dbg !1736

if.else45:                                        ; preds = %if.end35
  %7 = load i16* %arrayidx, align 2, !dbg !1741, !tbaa !1057
  %conv49 = zext i16 %7 to i32, !dbg !1741
  %sub50 = sub nsw i32 %conv49, %call40, !dbg !1741
  %conv51 = trunc i32 %sub50 to i16, !dbg !1741
  store i16 %conv51, i16* %arrayidx, align 2, !dbg !1741, !tbaa !1057
  br label %if.end52

if.end52:                                         ; preds = %if.else45, %if.then43
  call fastcc void @emovo(i16* %arraydecay, i16* %frac) #7, !dbg !1742
  br label %return, !dbg !1742

return:                                           ; preds = %if.end52, %if.then
  ret void, !dbg !1742
}
