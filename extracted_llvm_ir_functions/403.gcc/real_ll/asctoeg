define internal fastcc void @asctoeg(i8* nocapture %ss, i16* nocapture %y, i32 %oprec) #0 {
entry:
  %yy = alloca [9 x i16], align 16
  %xt = alloca [9 x i16], align 16
  %tt = alloca [9 x i16], align 16
  %call = call i64 @strlen(i8* %ss) #9
  %add = add i64 %call, 1
  %0 = alloca i8, i64 %add, align 1
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %ss.addr.0 = phi i8* [ %ss, %entry ], [ %incdec.ptr, %while.cond ]
  %1 = load i8* %ss.addr.0, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 32
  %incdec.ptr = getelementptr inbounds i8* %ss.addr.0, i64 1
  br i1 %cmp, label %while.cond, label %while.cond2.preheader

while.cond2.preheader:                            ; preds = %while.cond
  %xi4.i = bitcast [9 x i16]* %yy to i8*
  %xi4.i618 = bitcast [9 x i16]* %xt to i8*
  br label %while.cond2

while.cond2:                                      ; preds = %while.cond2.while.cond2_crit_edge, %while.cond2.preheader
  %2 = phi i8 [ %.pre776, %while.cond2.while.cond2_crit_edge ], [ %1, %while.cond2.preheader ]
  %sp.0 = phi i8* [ %incdec.ptr4, %while.cond2.while.cond2_crit_edge ], [ %0, %while.cond2.preheader ]
  %ss.addr.1 = phi i8* [ %incdec.ptr3, %while.cond2.while.cond2_crit_edge ], [ %ss.addr.0, %while.cond2.preheader ]
  %incdec.ptr3 = getelementptr inbounds i8* %ss.addr.1, i64 1
  store i8 %2, i8* %sp.0, align 1, !tbaa !1
  %cmp6 = icmp eq i8 %2, 0
  br i1 %cmp6, label %while.end9, label %while.cond2.while.cond2_crit_edge

while.cond2.while.cond2_crit_edge:                ; preds = %while.cond2
  %incdec.ptr4 = getelementptr inbounds i8* %sp.0, i64 1
  %.pre776 = load i8* %incdec.ptr3, align 1, !tbaa !1
  br label %while.cond2

while.end9:                                       ; preds = %while.cond2
  %3 = load i8* %0, align 1, !tbaa !1
  %cmp11 = icmp eq i8 %3, 48
  br i1 %cmp11, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.end9
  %arrayidx13 = getelementptr inbounds i8* %0, i64 1
  %4 = load i8* %arrayidx13, align 1, !tbaa !1
  switch i8 %4, label %if.end [
    i8 120, label %if.then
    i8 88, label %if.then
  ]

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %add.ptr = getelementptr inbounds i8* %0, i64 2
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then, %while.end9
  %s.0 = phi i8* [ %add.ptr, %if.then ], [ %0, %while.end9 ], [ %0, %land.lhs.true ]
  %base.0 = phi i32 [ 16, %if.then ], [ 10, %while.end9 ], [ 10, %land.lhs.true ]
  %5 = load i32* @rndprc, align 4, !tbaa !5
  store i32 80, i32* @rndprc, align 4, !tbaa !5
  %arraydecay = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  %arrayidx113 = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 2
  %cmp118 = icmp eq i32 %base.0, 16
  %add.ptr.i = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 8
  %arrayidx143 = getelementptr inbounds [9 x i16]* %xt, i64 0, i64 7
  %add.ptr.i619 = getelementptr inbounds [9 x i16]* %xt, i64 0, i64 8
  %arraydecay135 = getelementptr inbounds [9 x i16]* %xt, i64 0, i64 0
  %cmp150 = icmp eq i32 %base.0, 10
  br label %nxtcom

nxtcom:                                           ; preds = %donchr, %if.end
  %sgnflg.0 = phi i32 [ 0, %if.end ], [ %sgnflg.1, %donchr ]
  %nexp.0 = phi i32 [ 0, %if.end ], [ %nexp.5, %donchr ]
  %prec.0 = phi i32 [ 0, %if.end ], [ %prec.1, %donchr ]
  %lost.0 = phi i32 [ 0, %if.end ], [ %lost.2, %donchr ]
  %trail.0 = phi i32 [ 0, %if.end ], [ %trail.2, %donchr ]
  %decflg.0 = phi i32 [ 0, %if.end ], [ %decflg.1, %donchr ]
  %nsign.0 = phi i16 [ 0, %if.end ], [ %nsign.2, %donchr ]
  %s.1 = phi i8* [ %s.0, %if.end ], [ %incdec.ptr178, %donchr ]
  %6 = load i8* %s.1, align 1, !tbaa !1
  %idxprom = zext i8 %6 to i64
  %arrayidx21 = getelementptr inbounds [256 x i8]* @_hex_value, i64 0, i64 %idxprom
  %7 = load i8* %arrayidx21, align 1, !tbaa !1
  %conv22 = sext i8 %7 to i32
  %cmp23 = icmp sgt i8 %7, -1
  %cmp26 = icmp slt i32 %conv22, %base.0
  %or.cond515 = and i1 %cmp23, %cmp26
  br i1 %or.cond515, label %if.then28, label %if.end159

if.then28:                                        ; preds = %nxtcom
  %cmp32 = icmp eq i32 %decflg.0, 0
  %8 = or i32 %decflg.0, %prec.0
  %9 = icmp eq i32 %8, 0
  %cmp35 = icmp eq i8 %7, 0
  %or.cond517 = and i1 %9, %cmp35
  br i1 %or.cond517, label %donchr, label %if.end38

if.end38:                                         ; preds = %if.then28
  %cmp39 = icmp ne i32 %trail.0, 0
  %or.cond518 = or i1 %cmp39, %cmp32
  br i1 %or.cond518, label %if.end112, label %while.cond45

while.cond45:                                     ; preds = %if.end38, %while.body60
  %10 = phi i8 [ %.pre, %while.body60 ], [ %6, %if.end38 ]
  %sp.1 = phi i8* [ %incdec.ptr61, %while.body60 ], [ %s.1, %if.end38 ]
  %idxprom47 = zext i8 %10 to i64
  %arrayidx48 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom47
  %11 = load i16* %arrayidx48, align 2, !tbaa !0
  %conv49 = zext i16 %11 to i32
  %and50 = and i32 %conv49, 4
  %tobool = icmp eq i32 %and50, 0
  br i1 %tobool, label %lor.rhs, label %while.body60

lor.rhs:                                          ; preds = %while.cond45
  br i1 %cmp118, label %land.rhs, label %while.end62

land.rhs:                                         ; preds = %lor.rhs
  %and58 = and i32 %conv49, 256
  %tobool59 = icmp eq i32 %and58, 0
  br i1 %tobool59, label %while.end62.thread, label %while.body60

while.end62.thread:                               ; preds = %land.rhs
  %conv63514723 = zext i8 %10 to i32
  %and64724 = and i32 %conv63514723, 127
  switch i32 %and64724, label %unexpected_char_error [
    i32 112, label %while.cond100.preheader
    i32 80, label %while.cond100.preheader
    i32 44, label %while.cond100.preheader
    i32 32, label %while.cond100.preheader
    i32 13, label %while.cond100.preheader
    i32 10, label %while.cond100.preheader
    i32 0, label %while.cond100.preheader
  ]

while.body60:                                     ; preds = %land.rhs, %while.cond45
  %incdec.ptr61 = getelementptr inbounds i8* %sp.1, i64 1
  %.pre = load i8* %incdec.ptr61, align 1, !tbaa !1
  br label %while.cond45

while.end62:                                      ; preds = %lor.rhs
  %conv63514 = zext i8 %10 to i32
  %and64 = and i32 %conv63514, 127
  br i1 %cmp150, label %lor.lhs.false67, label %land.lhs.true82

lor.lhs.false67:                                  ; preds = %while.end62
  switch i32 %and64, label %unexpected_char_error [
    i32 101, label %while.cond100.preheader
    i32 69, label %while.cond100.preheader
    i32 44, label %while.cond100.preheader
    i32 32, label %while.cond100.preheader
    i32 13, label %while.cond100.preheader
    i32 10, label %while.cond100.preheader
    i32 0, label %while.cond100.preheader
  ]

land.lhs.true82:                                  ; preds = %while.end62
  switch i32 %and64, label %unexpected_char_error [
    i32 44, label %while.cond100.preheader
    i32 32, label %while.cond100.preheader
    i32 13, label %while.cond100.preheader
    i32 10, label %while.cond100.preheader
    i32 0, label %while.cond100.preheader
  ]

while.cond100.preheader:                          ; preds = %land.lhs.true82, %land.lhs.true82, %land.lhs.true82, %land.lhs.true82, %land.lhs.true82, %while.end62.thread, %while.end62.thread, %while.end62.thread, %while.end62.thread, %while.end62.thread, %while.end62.thread, %while.end62.thread, %lor.lhs.false67, %lor.lhs.false67, %lor.lhs.false67, %lor.lhs.false67, %lor.lhs.false67, %lor.lhs.false67, %lor.lhs.false67
  %sp.2730 = getelementptr inbounds i8* %sp.1, i64 -1
  %12 = load i8* %sp.2730, align 1, !tbaa !1
  %cmp102731 = icmp eq i8 %12, 48
  br i1 %cmp102731, label %while.body104, label %while.end106

while.body104:                                    ; preds = %while.cond100.preheader, %while.body104
  %sp.2732 = phi i8* [ %sp.2, %while.body104 ], [ %sp.2730, %while.cond100.preheader ]
  store i8 122, i8* %sp.2732, align 1, !tbaa !1
  %sp.2 = getelementptr inbounds i8* %sp.2732, i64 -1
  %13 = load i8* %sp.2, align 1, !tbaa !1
  %cmp102 = icmp eq i8 %13, 48
  br i1 %cmp102, label %while.body104, label %while.cond100.while.end106_crit_edge

while.cond100.while.end106_crit_edge:             ; preds = %while.body104
  %.pre775 = load i8* %s.1, align 1, !tbaa !1
  br label %while.end106

while.end106:                                     ; preds = %while.cond100.while.end106_crit_edge, %while.cond100.preheader
  %14 = phi i8 [ %.pre775, %while.cond100.while.end106_crit_edge ], [ %6, %while.cond100.preheader ]
  %cmp108 = icmp eq i8 %14, 122
  br i1 %cmp108, label %donchr, label %if.end112

if.end112:                                        ; preds = %while.end106, %if.end38
  %trail.1 = phi i32 [ %trail.0, %if.end38 ], [ 1, %while.end106 ]
  %15 = load i16* %arrayidx113, align 4, !tbaa !0
  %cmp115 = icmp eq i16 %15, 0
  br i1 %cmp115, label %if.then117, label %if.else146

if.then117:                                       ; preds = %if.end112
  %tobool121 = icmp ne i32 %decflg.0, 0
  br i1 %cmp118, label %if.then120, label %if.else

if.then120:                                       ; preds = %if.then117
  %add123 = add nsw i32 %nexp.0, 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then120
  %i.025.i = phi i32 [ 3, %if.then120 ], [ %phitmp785, %for.body.i.for.body.i_crit_edge ]
  %bits.024.i = phi i16 [ 0, %if.then120 ], [ %shl14.i, %for.body.i.for.body.i_crit_edge ]
  %x.addr.023.i = phi i16* [ %add.ptr.i, %if.then120 ], [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ]
  %16 = load i16* %x.addr.023.i, align 2, !tbaa !0
  %shl.i = shl i16 %16, 1
  %and6.i = lshr exact i16 %bits.024.i, 1
  %17 = and i16 %and6.i, 1
  %18 = or i16 %shl.i, %17
  store i16 %18, i16* %x.addr.023.i, align 2, !tbaa !0
  %exitcond.i = icmp eq i32 %i.025.i, 9
  br i1 %exitcond.i, label %for.body.i532, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  %.lobit.i = lshr i16 %16, 15
  %or.bits.0.i = or i16 %.lobit.i, %bits.024.i
  %incdec.ptr.i = getelementptr inbounds i16* %x.addr.023.i, i64 -1
  %shl14.i = shl i16 %or.bits.0.i, 1
  %phitmp785 = add i32 %i.025.i, 1
  br label %for.body.i

for.body.i532:                                    ; preds = %for.body.i, %for.body.i532
  %i.025.i521 = phi i32 [ %inc.i530, %for.body.i532 ], [ 2, %for.body.i ]
  %bits.024.i522 = phi i16 [ %shl14.i528, %for.body.i532 ], [ 0, %for.body.i ]
  %x.addr.023.i523 = phi i16* [ %incdec.ptr.i529, %for.body.i532 ], [ %add.ptr.i, %for.body.i ]
  %19 = load i16* %x.addr.023.i523, align 2, !tbaa !0
  %.lobit.i524 = lshr i16 %19, 15
  %or.bits.0.i525 = or i16 %.lobit.i524, %bits.024.i522
  %shl.i526 = shl i16 %19, 1
  %and6.i527 = lshr exact i16 %bits.024.i522, 1
  %20 = and i16 %and6.i527, 1
  %21 = or i16 %shl.i526, %20
  store i16 %21, i16* %x.addr.023.i523, align 2, !tbaa !0
  %shl14.i528 = shl i16 %or.bits.0.i525, 1
  %incdec.ptr.i529 = getelementptr inbounds i16* %x.addr.023.i523, i64 -1
  %inc.i530 = add nsw i32 %i.025.i521, 1
  %exitcond.i531 = icmp eq i32 %inc.i530, 9
  br i1 %exitcond.i531, label %for.body.i546, label %for.body.i532

for.body.i546:                                    ; preds = %for.body.i532, %for.body.i546
  %i.025.i535 = phi i32 [ %inc.i544, %for.body.i546 ], [ 2, %for.body.i532 ]
  %bits.024.i536 = phi i16 [ %shl14.i542, %for.body.i546 ], [ 0, %for.body.i532 ]
  %x.addr.023.i537 = phi i16* [ %incdec.ptr.i543, %for.body.i546 ], [ %add.ptr.i, %for.body.i532 ]
  %22 = load i16* %x.addr.023.i537, align 2, !tbaa !0
  %.lobit.i538 = lshr i16 %22, 15
  %or.bits.0.i539 = or i16 %.lobit.i538, %bits.024.i536
  %shl.i540 = shl i16 %22, 1
  %and6.i541 = lshr exact i16 %bits.024.i536, 1
  %23 = and i16 %and6.i541, 1
  %24 = or i16 %shl.i540, %23
  store i16 %24, i16* %x.addr.023.i537, align 2, !tbaa !0
  %shl14.i542 = shl i16 %or.bits.0.i539, 1
  %incdec.ptr.i543 = getelementptr inbounds i16* %x.addr.023.i537, i64 -1
  %inc.i544 = add nsw i32 %i.025.i535, 1
  %exitcond.i545 = icmp eq i32 %inc.i544, 9
  br i1 %exitcond.i545, label %for.body.i560, label %for.body.i546

for.body.i560:                                    ; preds = %for.body.i546, %for.body.i560
  %i.025.i549 = phi i32 [ %inc.i558, %for.body.i560 ], [ 2, %for.body.i546 ]
  %bits.024.i550 = phi i16 [ %shl14.i556, %for.body.i560 ], [ 0, %for.body.i546 ]
  %x.addr.023.i551 = phi i16* [ %incdec.ptr.i557, %for.body.i560 ], [ %add.ptr.i, %for.body.i546 ]
  %25 = load i16* %x.addr.023.i551, align 2, !tbaa !0
  %.lobit.i552 = lshr i16 %25, 15
  %or.bits.0.i553 = or i16 %.lobit.i552, %bits.024.i550
  %shl.i554 = shl i16 %25, 1
  %and6.i555 = lshr exact i16 %bits.024.i550, 1
  %26 = and i16 %and6.i555, 1
  %27 = or i16 %shl.i554, %26
  store i16 %27, i16* %x.addr.023.i551, align 2, !tbaa !0
  %shl14.i556 = shl i16 %or.bits.0.i553, 1
  %incdec.ptr.i557 = getelementptr inbounds i16* %x.addr.023.i551, i64 -1
  %inc.i558 = add nsw i32 %i.025.i549, 1
  %exitcond.i559 = icmp eq i32 %inc.i558, 9
  br i1 %exitcond.i559, label %if.end140.loopexit733, label %for.body.i560

if.else:                                          ; preds = %if.then117
  %add131 = zext i1 %tobool121 to i32
  br label %for.body.i574

for.body.i574:                                    ; preds = %for.body.i574.for.body.i574_crit_edge, %if.else
  %i.025.i563 = phi i32 [ 3, %if.else ], [ %phitmp781, %for.body.i574.for.body.i574_crit_edge ]
  %bits.024.i564 = phi i16 [ 0, %if.else ], [ %shl14.i570, %for.body.i574.for.body.i574_crit_edge ]
  %x.addr.023.i565 = phi i16* [ %add.ptr.i, %if.else ], [ %incdec.ptr.i571, %for.body.i574.for.body.i574_crit_edge ]
  %28 = load i16* %x.addr.023.i565, align 2, !tbaa !0
  %shl.i568 = shl i16 %28, 1
  %and6.i569 = lshr exact i16 %bits.024.i564, 1
  %29 = and i16 %and6.i569, 1
  %30 = or i16 %shl.i568, %29
  store i16 %30, i16* %x.addr.023.i565, align 2, !tbaa !0
  %exitcond.i573 = icmp eq i32 %i.025.i563, 9
  br i1 %exitcond.i573, label %for.body.i579, label %for.body.i574.for.body.i574_crit_edge

for.body.i574.for.body.i574_crit_edge:            ; preds = %for.body.i574
  %.lobit.i566 = lshr i16 %28, 15
  %or.bits.0.i567 = or i16 %.lobit.i566, %bits.024.i564
  %incdec.ptr.i571 = getelementptr inbounds i16* %x.addr.023.i565, i64 -1
  %shl14.i570 = shl i16 %or.bits.0.i567, 1
  %phitmp781 = add i32 %i.025.i563, 1
  br label %for.body.i574

for.body.i579:                                    ; preds = %for.body.i574, %for.body.i579
  %i.06.i = phi i32 [ %inc.i577, %for.body.i579 ], [ 0, %for.body.i574 ]
  %b.addr.05.i = phi i16* [ %incdec.ptr1.i, %for.body.i579 ], [ %arraydecay135, %for.body.i574 ]
  %a.addr.04.i = phi i16* [ %incdec.ptr.i576, %for.body.i579 ], [ %arraydecay, %for.body.i574 ]
  %incdec.ptr.i576 = getelementptr inbounds i16* %a.addr.04.i, i64 1
  %31 = load i16* %a.addr.04.i, align 2, !tbaa !0
  %incdec.ptr1.i = getelementptr inbounds i16* %b.addr.05.i, i64 1
  store i16 %31, i16* %b.addr.05.i, align 2, !tbaa !0
  %inc.i577 = add nsw i32 %i.06.i, 1
  %exitcond.i578 = icmp eq i32 %inc.i577, 8
  br i1 %exitcond.i578, label %emovz.exit, label %for.body.i579

emovz.exit:                                       ; preds = %for.body.i579
  store i16 0, i16* %add.ptr.i619, align 16, !tbaa !0
  br label %for.body.i592

for.body.i592:                                    ; preds = %for.body.i592.for.body.i592_crit_edge, %emovz.exit
  %32 = phi i16 [ 0, %emovz.exit ], [ %.pre778, %for.body.i592.for.body.i592_crit_edge ]
  %i.025.i581 = phi i32 [ 3, %emovz.exit ], [ %phitmp782, %for.body.i592.for.body.i592_crit_edge ]
  %bits.024.i582 = phi i16 [ 0, %emovz.exit ], [ %shl14.i588, %for.body.i592.for.body.i592_crit_edge ]
  %x.addr.023.i583 = phi i16* [ %add.ptr.i619, %emovz.exit ], [ %incdec.ptr.i589, %for.body.i592.for.body.i592_crit_edge ]
  %shl.i586 = shl i16 %32, 1
  %and6.i587 = lshr exact i16 %bits.024.i582, 1
  %33 = and i16 %and6.i587, 1
  %34 = or i16 %shl.i586, %33
  store i16 %34, i16* %x.addr.023.i583, align 2, !tbaa !0
  %incdec.ptr.i589 = getelementptr inbounds i16* %x.addr.023.i583, i64 -1
  %exitcond.i591 = icmp eq i32 %i.025.i581, 9
  br i1 %exitcond.i591, label %for.body.i606, label %for.body.i592.for.body.i592_crit_edge

for.body.i592.for.body.i592_crit_edge:            ; preds = %for.body.i592
  %.lobit.i584 = lshr i16 %32, 15
  %or.bits.0.i585 = or i16 %.lobit.i584, %bits.024.i582
  %shl14.i588 = shl i16 %or.bits.0.i585, 1
  %.pre778 = load i16* %incdec.ptr.i589, align 2, !tbaa !0
  %phitmp782 = add i32 %i.025.i581, 1
  br label %for.body.i592

for.body.i606:                                    ; preds = %for.body.i592, %for.body.i606
  %i.025.i595 = phi i32 [ %inc.i604, %for.body.i606 ], [ 2, %for.body.i592 ]
  %bits.024.i596 = phi i16 [ %shl14.i602, %for.body.i606 ], [ 0, %for.body.i592 ]
  %x.addr.023.i597 = phi i16* [ %incdec.ptr.i603, %for.body.i606 ], [ %add.ptr.i619, %for.body.i592 ]
  %35 = load i16* %x.addr.023.i597, align 2, !tbaa !0
  %.lobit.i598 = lshr i16 %35, 15
  %or.bits.0.i599 = or i16 %.lobit.i598, %bits.024.i596
  %shl.i600 = shl i16 %35, 1
  %and6.i601 = lshr exact i16 %bits.024.i596, 1
  %36 = and i16 %and6.i601, 1
  %37 = or i16 %shl.i600, %36
  store i16 %37, i16* %x.addr.023.i597, align 2, !tbaa !0
  %shl14.i602 = shl i16 %or.bits.0.i599, 1
  %incdec.ptr.i603 = getelementptr inbounds i16* %x.addr.023.i597, i64 -1
  %inc.i604 = add nsw i32 %i.025.i595, 1
  %exitcond.i605 = icmp eq i32 %inc.i604, 9
  br i1 %exitcond.i605, label %for.body.i612, label %for.body.i606

for.body.i612:                                    ; preds = %for.body.i606, %for.body.i612
  %carry.016.i = phi i32 [ %and.lobit.i, %for.body.i612 ], [ 0, %for.body.i606 ]
  %i.015.i = phi i32 [ %inc.i610, %for.body.i612 ], [ 2, %for.body.i606 ]
  %x.addr.014.i = phi i16* [ %incdec.ptr.i609, %for.body.i612 ], [ %add.ptr.i619, %for.body.i606 ]
  %y.addr.013.i = phi i16* [ %incdec.ptr5.i, %for.body.i612 ], [ %add.ptr.i, %for.body.i606 ]
  %38 = load i16* %x.addr.014.i, align 2, !tbaa !0
  %conv.i = zext i16 %38 to i32
  %39 = load i16* %y.addr.013.i, align 2, !tbaa !0
  %conv2.i = zext i16 %39 to i32
  %add.i = add i32 %conv.i, %carry.016.i
  %add3.i = add i32 %add.i, %conv2.i
  %and.i = lshr i32 %add3.i, 16
  %and.lobit.i = and i32 %and.i, 1
  %conv4.i = trunc i32 %add3.i to i16
  store i16 %conv4.i, i16* %y.addr.013.i, align 2, !tbaa !0
  %incdec.ptr.i609 = getelementptr inbounds i16* %x.addr.014.i, i64 -1
  %incdec.ptr5.i = getelementptr inbounds i16* %y.addr.013.i, i64 -1
  %inc.i610 = add nsw i32 %i.015.i, 1
  %exitcond.i611 = icmp eq i32 %inc.i610, 9
  br i1 %exitcond.i611, label %if.end140.loopexit, label %for.body.i612

if.end140.loopexit:                               ; preds = %for.body.i612
  %add131.nexp.0 = add nsw i32 %add131, %nexp.0
  br label %if.end140

if.end140.loopexit733:                            ; preds = %for.body.i560
  %add123.nexp.0 = select i1 %tobool121, i32 %add123, i32 %nexp.0
  br label %if.end140

if.end140:                                        ; preds = %if.end140.loopexit733, %if.end140.loopexit
  %nexp.3 = phi i32 [ %add131.nexp.0, %if.end140.loopexit ], [ %add123.nexp.0, %if.end140.loopexit733 ]
  call void @llvm.memset.p0i8.i64(i8* %xi4.i618, i8 0, i64 18, i32 16, i1 false) #1
  %conv142 = sext i8 %7 to i16
  store i16 %conv142, i16* %arrayidx143, align 2, !tbaa !0
  br label %for.body.i636

for.body.i636:                                    ; preds = %for.body.i636.for.body.i636_crit_edge, %if.end140
  %40 = phi i32 [ 0, %if.end140 ], [ %phitmp783, %for.body.i636.for.body.i636_crit_edge ]
  %carry.016.i621 = phi i32 [ 0, %if.end140 ], [ %and.lobit.i630, %for.body.i636.for.body.i636_crit_edge ]
  %i.015.i622 = phi i32 [ 3, %if.end140 ], [ %phitmp784, %for.body.i636.for.body.i636_crit_edge ]
  %x.addr.014.i623 = phi i16* [ %add.ptr.i619, %if.end140 ], [ %incdec.ptr.i632, %for.body.i636.for.body.i636_crit_edge ]
  %y.addr.013.i624 = phi i16* [ %add.ptr.i, %if.end140 ], [ %incdec.ptr5.i633, %for.body.i636.for.body.i636_crit_edge ]
  %41 = load i16* %y.addr.013.i624, align 2, !tbaa !0
  %conv2.i626 = zext i16 %41 to i32
  %add.i627 = add i32 %40, %carry.016.i621
  %add3.i628 = add i32 %add.i627, %conv2.i626
  %conv4.i631 = trunc i32 %add3.i628 to i16
  store i16 %conv4.i631, i16* %y.addr.013.i624, align 2, !tbaa !0
  %incdec.ptr.i632 = getelementptr inbounds i16* %x.addr.014.i623, i64 -1
  %exitcond.i635 = icmp eq i32 %i.015.i622, 9
  br i1 %exitcond.i635, label %if.end157, label %for.body.i636.for.body.i636_crit_edge

for.body.i636.for.body.i636_crit_edge:            ; preds = %for.body.i636
  %and.i629 = lshr i32 %add3.i628, 16
  %incdec.ptr5.i633 = getelementptr inbounds i16* %y.addr.013.i624, i64 -1
  %and.lobit.i630 = and i32 %and.i629, 1
  %.pre777 = load i16* %incdec.ptr.i632, align 2, !tbaa !0
  %phitmp783 = zext i16 %.pre777 to i32
  %phitmp784 = add i32 %i.015.i622, 1
  br label %for.body.i636

if.else146:                                       ; preds = %if.end112
  %or = or i32 %conv22, %lost.0
  br i1 %cmp32, label %if.then149, label %if.end157

if.then149:                                       ; preds = %if.else146
  br i1 %cmp150, label %if.then152, label %if.else153

if.then152:                                       ; preds = %if.then149
  %sub = add nsw i32 %nexp.0, -1
  br label %if.end157

if.else153:                                       ; preds = %if.then149
  %sub154 = add nsw i32 %nexp.0, -4
  br label %if.end157

if.end157:                                        ; preds = %for.body.i636, %if.else146, %if.else153, %if.then152
  %nexp.4 = phi i32 [ %sub, %if.then152 ], [ %sub154, %if.else153 ], [ %nexp.0, %if.else146 ], [ %nexp.3, %for.body.i636 ]
  %lost.1 = phi i32 [ %or, %if.then152 ], [ %or, %if.else153 ], [ %or, %if.else146 ], [ %lost.0, %for.body.i636 ]
  %add158 = add nsw i32 %prec.0, 1
  br label %donchr

if.end159:                                        ; preds = %nxtcom
  %conv160 = sext i8 %6 to i32
  switch i32 %conv160, label %unexpected_char_error [
    i32 122, label %donchr
    i32 69, label %for.body
    i32 101, label %for.body
    i32 80, label %for.body
    i32 112, label %for.body
    i32 46, label %sw.bb161
    i32 45, label %sw.bb165
    i32 43, label %sw.bb170
    i32 44, label %daldone
    i32 32, label %daldone
    i32 0, label %daldone
    i32 10, label %daldone
    i32 13, label %daldone
    i32 105, label %infinite
    i32 73, label %infinite
  ]

sw.bb161:                                         ; preds = %if.end159
  %tobool162 = icmp eq i32 %decflg.0, 0
  br i1 %tobool162, label %donchr, label %unexpected_char_error

sw.bb165:                                         ; preds = %if.end159
  %tobool166 = icmp eq i32 %sgnflg.0, 0
  br i1 %tobool166, label %donchr, label %unexpected_char_error

sw.bb170:                                         ; preds = %if.end159
  %tobool171 = icmp eq i32 %sgnflg.0, 0
  br i1 %tobool171, label %donchr, label %unexpected_char_error

unexpected_char_error:                            ; preds = %lor.lhs.false67, %land.lhs.true82, %while.end62.thread, %sw.bb161, %sw.bb165, %sw.bb170, %if.end159
  %nsign.1 = phi i16 [ %nsign.0, %land.lhs.true82 ], [ %nsign.0, %while.end62.thread ], [ %nsign.0, %if.end159 ], [ %nsign.0, %sw.bb170 ], [ -1, %sw.bb165 ], [ %nsign.0, %sw.bb161 ], [ %nsign.0, %lor.lhs.false67 ]
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  %arrayidx.i = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 1
  store i16 32767, i16* %arrayidx.i, align 2, !tbaa !0
  %arrayidx1.i = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 3
  store i16 -16384, i16* %arrayidx1.i, align 2, !tbaa !0
  br label %aexit

donchr:                                           ; preds = %sw.bb170, %sw.bb165, %sw.bb161, %if.then28, %if.end159, %while.end106, %if.end157
  %sgnflg.1 = phi i32 [ %sgnflg.0, %while.end106 ], [ %sgnflg.0, %if.end157 ], [ %sgnflg.0, %if.end159 ], [ %sgnflg.0, %if.then28 ], [ %sgnflg.0, %sw.bb161 ], [ 1, %sw.bb165 ], [ 1, %sw.bb170 ]
  %nexp.5 = phi i32 [ %nexp.0, %while.end106 ], [ %nexp.4, %if.end157 ], [ %nexp.0, %if.end159 ], [ %nexp.0, %if.then28 ], [ %nexp.0, %sw.bb161 ], [ %nexp.0, %sw.bb165 ], [ %nexp.0, %sw.bb170 ]
  %prec.1 = phi i32 [ %prec.0, %while.end106 ], [ %add158, %if.end157 ], [ %prec.0, %if.end159 ], [ %prec.0, %if.then28 ], [ %prec.0, %sw.bb161 ], [ %prec.0, %sw.bb165 ], [ %prec.0, %sw.bb170 ]
  %lost.2 = phi i32 [ %lost.0, %while.end106 ], [ %lost.1, %if.end157 ], [ %lost.0, %if.end159 ], [ %lost.0, %if.then28 ], [ %lost.0, %sw.bb161 ], [ %lost.0, %sw.bb165 ], [ %lost.0, %sw.bb170 ]
  %trail.2 = phi i32 [ 1, %while.end106 ], [ %trail.1, %if.end157 ], [ %trail.0, %if.end159 ], [ %trail.0, %if.then28 ], [ %trail.0, %sw.bb161 ], [ %trail.0, %sw.bb165 ], [ %trail.0, %sw.bb170 ]
  %decflg.1 = phi i32 [ %decflg.0, %while.end106 ], [ %decflg.0, %if.end157 ], [ %decflg.0, %if.end159 ], [ %decflg.0, %if.then28 ], [ 1, %sw.bb161 ], [ %decflg.0, %sw.bb165 ], [ %decflg.0, %sw.bb170 ]
  %nsign.2 = phi i16 [ %nsign.0, %while.end106 ], [ %nsign.0, %if.end157 ], [ %nsign.0, %if.end159 ], [ %nsign.0, %if.then28 ], [ %nsign.0, %sw.bb161 ], [ -1, %sw.bb165 ], [ %nsign.0, %sw.bb170 ]
  %incdec.ptr178 = getelementptr inbounds i8* %s.1, i64 1
  br label %nxtcom

for.cond:                                         ; preds = %for.body
  %42 = trunc i64 %indvars.iv.next754 to i32
  %cmp179 = icmp slt i32 %42, 9
  br i1 %cmp179, label %for.body, label %aexit

for.body:                                         ; preds = %for.cond, %if.end159, %if.end159, %if.end159, %if.end159
  %indvars.iv753 = phi i64 [ 0, %if.end159 ], [ 0, %if.end159 ], [ 0, %if.end159 ], [ 0, %if.end159 ], [ %indvars.iv.next754, %for.cond ]
  %arrayidx182 = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 %indvars.iv753
  %43 = load i16* %arrayidx182, align 2, !tbaa !0
  %cmp184 = icmp eq i16 %43, 0
  %indvars.iv.next754 = add i64 %indvars.iv753, 1
  br i1 %cmp184, label %for.cond, label %read_expnt

read_expnt:                                       ; preds = %for.body
  %incdec.ptr189 = getelementptr inbounds i8* %s.1, i64 1
  %44 = load i8* %incdec.ptr189, align 1, !tbaa !1
  %cmp191 = icmp eq i8 %44, 45
  %incdec.ptr194 = getelementptr inbounds i8* %s.1, i64 2
  %incdec.ptr194.incdec.ptr189 = select i1 %cmp191, i8* %incdec.ptr194, i8* %incdec.ptr189
  %45 = load i8* %incdec.ptr194.incdec.ptr189, align 1, !tbaa !1
  %cmp197 = icmp eq i8 %45, 43
  %incdec.ptr200 = getelementptr inbounds i8* %incdec.ptr194.incdec.ptr189, i64 1
  %incdec.ptr200.incdec.ptr194.incdec.ptr189 = select i1 %cmp197, i8* %incdec.ptr200, i8* %incdec.ptr194.incdec.ptr189
  br label %while.cond202

while.cond202:                                    ; preds = %read_expnt, %while.body210
  %exp.0 = phi i32 [ %add214, %while.body210 ], [ 0, %read_expnt ]
  %s.3 = phi i8* [ %incdec.ptr211, %while.body210 ], [ %incdec.ptr200.incdec.ptr194.incdec.ptr189, %read_expnt ]
  %46 = load i8* %s.3, align 1, !tbaa !1
  %conv203 = sext i8 %46 to i32
  %and204 = and i32 %conv203, 255
  %idxprom205512 = zext i32 %and204 to i64
  %arrayidx206 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom205512
  %47 = load i16* %arrayidx206, align 2, !tbaa !0
  %and208 = and i16 %47, 4
  %tobool209 = icmp eq i16 %and208, 0
  br i1 %tobool209, label %while.end219, label %while.body210

while.body210:                                    ; preds = %while.cond202
  %mul = mul nsw i32 %exp.0, 10
  %incdec.ptr211 = getelementptr inbounds i8* %s.3, i64 1
  %sub213 = add i32 %mul, -48
  %add214 = add i32 %sub213, %conv203
  %cmp215 = icmp sgt i32 %add214, 999999
  br i1 %cmp215, label %while.end219, label %while.cond202

while.end219:                                     ; preds = %while.cond202, %while.body210
  %exp.1 = phi i32 [ %add214, %while.body210 ], [ %exp.0, %while.cond202 ]
  %sub223 = sub nsw i32 0, %exp.1
  %sub223.exp.1 = select i1 %cmp191, i32 %sub223, i32 %exp.1
  %cmp225 = icmp sgt i32 %sub223.exp.1, 4932
  %or.cond = and i1 %cmp225, %cmp150
  br i1 %or.cond, label %infinite, label %if.end233

infinite:                                         ; preds = %if.end159, %if.end159, %while.end219, %if.end251
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  %arrayidx232 = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 1
  store i16 32767, i16* %arrayidx232, align 2, !tbaa !0
  br label %aexit

if.end233:                                        ; preds = %while.end219
  %cmp234 = icmp slt i32 %sub223.exp.1, -4956
  %or.cond519 = and i1 %cmp234, %cmp150
  br i1 %or.cond519, label %zero, label %daldone

zero:                                             ; preds = %if.end233, %if.end261
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  br label %aexit

daldone:                                          ; preds = %if.end159, %if.end159, %if.end159, %if.end159, %if.end159, %if.end233
  %exp.3 = phi i32 [ %sub223.exp.1, %if.end233 ], [ 0, %if.end159 ], [ 0, %if.end159 ], [ 0, %if.end159 ], [ 0, %if.end159 ], [ 0, %if.end159 ]
  br i1 %cmp118, label %if.then244, label %if.end268

if.then244:                                       ; preds = %daldone
  %call246 = call fastcc i32 @enormlz(i16* %arraydecay) #6
  %cmp247 = icmp sgt i32 %call246, 80
  br i1 %cmp247, label %if.then249, label %if.end251

if.then249:                                       ; preds = %if.then244
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  br label %aexit

if.end251:                                        ; preds = %if.then244
  %arrayidx253 = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 1
  %48 = load i16* %arrayidx253, align 2, !tbaa !0
  %conv254 = zext i16 %48 to i32
  %sub252 = sub i32 16462, %nexp.0
  %add255 = add i32 %sub252, %exp.3
  %add256 = sub i32 %add255, %call246
  %sub257 = add i32 %add256, %conv254
  %cmp258 = icmp sgt i32 %sub257, 32767
  br i1 %cmp258, label %infinite, label %if.end261

if.end261:                                        ; preds = %if.end251
  %cmp262 = icmp slt i32 %sub257, 0
  br i1 %cmp262, label %zero, label %if.end265

if.end265:                                        ; preds = %if.end261
  %conv266 = trunc i32 %sub257 to i16
  store i16 %conv266, i16* %arrayidx253, align 2, !tbaa !0
  br label %expdon

if.end268:                                        ; preds = %daldone
  %sub269 = sub nsw i32 %exp.3, %nexp.0
  %arrayidx287 = getelementptr inbounds [9 x i16]* %xt, i64 0, i64 2
  %cmp271726 = icmp sgt i32 %sub269, 0
  br i1 %cmp271726, label %land.rhs273, label %while.end296

land.rhs273:                                      ; preds = %emovz.exit649, %if.end268
  %nexp.6727 = phi i32 [ %sub269, %if.end268 ], [ %sub293, %emovz.exit649 ]
  %49 = load i16* %arrayidx113, align 4, !tbaa !0
  %cmp276 = icmp eq i16 %49, 0
  br i1 %cmp276, label %for.body.i718, label %while.end296

for.body.i718:                                    ; preds = %land.rhs273, %for.body.i718.for.body.i718_crit_edge
  %i.06.i711 = phi i32 [ %phitmp, %for.body.i718.for.body.i718_crit_edge ], [ 1, %land.rhs273 ]
  %b.addr.05.i712 = phi i16* [ %incdec.ptr1.i715, %for.body.i718.for.body.i718_crit_edge ], [ %arraydecay135, %land.rhs273 ]
  %a.addr.04.i713 = phi i16* [ %incdec.ptr.i714, %for.body.i718.for.body.i718_crit_edge ], [ %arraydecay, %land.rhs273 ]
  %50 = load i16* %a.addr.04.i713, align 2, !tbaa !0
  store i16 %50, i16* %b.addr.05.i712, align 2, !tbaa !0
  %exitcond.i717 = icmp eq i32 %i.06.i711, 8
  br i1 %exitcond.i717, label %emovz.exit720, label %for.body.i718.for.body.i718_crit_edge

for.body.i718.for.body.i718_crit_edge:            ; preds = %for.body.i718
  %incdec.ptr1.i715 = getelementptr inbounds i16* %b.addr.05.i712, i64 1
  %incdec.ptr.i714 = getelementptr inbounds i16* %a.addr.04.i713, i64 1
  %phitmp = add i32 %i.06.i711, 1
  br label %for.body.i718

emovz.exit720:                                    ; preds = %for.body.i718
  store i16 0, i16* %add.ptr.i619, align 16, !tbaa !0
  br label %for.body.i709

for.body.i709:                                    ; preds = %for.body.i709.for.body.i709_crit_edge, %emovz.exit720
  %51 = phi i16 [ 0, %emovz.exit720 ], [ %.pre779, %for.body.i709.for.body.i709_crit_edge ]
  %i.025.i698 = phi i32 [ 3, %emovz.exit720 ], [ %phitmp780, %for.body.i709.for.body.i709_crit_edge ]
  %bits.024.i699 = phi i16 [ 0, %emovz.exit720 ], [ %shl14.i705, %for.body.i709.for.body.i709_crit_edge ]
  %x.addr.023.i700 = phi i16* [ %add.ptr.i619, %emovz.exit720 ], [ %incdec.ptr.i706, %for.body.i709.for.body.i709_crit_edge ]
  %shl.i703 = shl i16 %51, 1
  %and6.i704 = lshr exact i16 %bits.024.i699, 1
  %52 = and i16 %and6.i704, 1
  %53 = or i16 %shl.i703, %52
  store i16 %53, i16* %x.addr.023.i700, align 2, !tbaa !0
  %incdec.ptr.i706 = getelementptr inbounds i16* %x.addr.023.i700, i64 -1
  %exitcond.i708 = icmp eq i32 %i.025.i698, 9
  br i1 %exitcond.i708, label %for.body.i695, label %for.body.i709.for.body.i709_crit_edge

for.body.i709.for.body.i709_crit_edge:            ; preds = %for.body.i709
  %.lobit.i701 = lshr i16 %51, 15
  %or.bits.0.i702 = or i16 %.lobit.i701, %bits.024.i699
  %shl14.i705 = shl i16 %or.bits.0.i702, 1
  %.pre779 = load i16* %incdec.ptr.i706, align 2, !tbaa !0
  %phitmp780 = add i32 %i.025.i698, 1
  br label %for.body.i709

for.body.i695:                                    ; preds = %for.body.i709, %for.body.i695
  %i.025.i684 = phi i32 [ %inc.i693, %for.body.i695 ], [ 2, %for.body.i709 ]
  %bits.024.i685 = phi i16 [ %shl14.i691, %for.body.i695 ], [ 0, %for.body.i709 ]
  %x.addr.023.i686 = phi i16* [ %incdec.ptr.i692, %for.body.i695 ], [ %add.ptr.i619, %for.body.i709 ]
  %54 = load i16* %x.addr.023.i686, align 2, !tbaa !0
  %.lobit.i687 = lshr i16 %54, 15
  %or.bits.0.i688 = or i16 %.lobit.i687, %bits.024.i685
  %shl.i689 = shl i16 %54, 1
  %and6.i690 = lshr exact i16 %bits.024.i685, 1
  %55 = and i16 %and6.i690, 1
  %56 = or i16 %shl.i689, %55
  store i16 %56, i16* %x.addr.023.i686, align 2, !tbaa !0
  %shl14.i691 = shl i16 %or.bits.0.i688, 1
  %incdec.ptr.i692 = getelementptr inbounds i16* %x.addr.023.i686, i64 -1
  %inc.i693 = add nsw i32 %i.025.i684, 1
  %exitcond.i694 = icmp eq i32 %inc.i693, 9
  br i1 %exitcond.i694, label %for.body.i681, label %for.body.i695

for.body.i681:                                    ; preds = %for.body.i695, %for.body.i681
  %carry.016.i666 = phi i32 [ %and.lobit.i675, %for.body.i681 ], [ 0, %for.body.i695 ]
  %i.015.i667 = phi i32 [ %inc.i679, %for.body.i681 ], [ 2, %for.body.i695 ]
  %x.addr.014.i668 = phi i16* [ %incdec.ptr.i677, %for.body.i681 ], [ %add.ptr.i, %for.body.i695 ]
  %y.addr.013.i669 = phi i16* [ %incdec.ptr5.i678, %for.body.i681 ], [ %add.ptr.i619, %for.body.i695 ]
  %57 = load i16* %x.addr.014.i668, align 2, !tbaa !0
  %conv.i670 = zext i16 %57 to i32
  %58 = load i16* %y.addr.013.i669, align 2, !tbaa !0
  %conv2.i671 = zext i16 %58 to i32
  %add.i672 = add i32 %conv.i670, %carry.016.i666
  %add3.i673 = add i32 %add.i672, %conv2.i671
  %and.i674 = lshr i32 %add3.i673, 16
  %and.lobit.i675 = and i32 %and.i674, 1
  %conv4.i676 = trunc i32 %add3.i673 to i16
  store i16 %conv4.i676, i16* %y.addr.013.i669, align 2, !tbaa !0
  %incdec.ptr.i677 = getelementptr inbounds i16* %x.addr.014.i668, i64 -1
  %incdec.ptr5.i678 = getelementptr inbounds i16* %y.addr.013.i669, i64 -1
  %inc.i679 = add nsw i32 %i.015.i667, 1
  %exitcond.i680 = icmp eq i32 %inc.i679, 9
  br i1 %exitcond.i680, label %for.body.i662, label %for.body.i681

for.body.i662:                                    ; preds = %for.body.i681, %for.body.i662
  %i.025.i651 = phi i32 [ %inc.i660, %for.body.i662 ], [ 2, %for.body.i681 ]
  %bits.024.i652 = phi i16 [ %shl14.i658, %for.body.i662 ], [ 0, %for.body.i681 ]
  %x.addr.023.i653 = phi i16* [ %incdec.ptr.i659, %for.body.i662 ], [ %add.ptr.i619, %for.body.i681 ]
  %59 = load i16* %x.addr.023.i653, align 2, !tbaa !0
  %.lobit.i654 = lshr i16 %59, 15
  %or.bits.0.i655 = or i16 %.lobit.i654, %bits.024.i652
  %shl.i656 = shl i16 %59, 1
  %and6.i657 = lshr exact i16 %bits.024.i652, 1
  %60 = and i16 %and6.i657, 1
  %61 = or i16 %shl.i656, %60
  store i16 %61, i16* %x.addr.023.i653, align 2, !tbaa !0
  %shl14.i658 = shl i16 %or.bits.0.i655, 1
  %incdec.ptr.i659 = getelementptr inbounds i16* %x.addr.023.i653, i64 -1
  %inc.i660 = add nsw i32 %i.025.i651, 1
  %exitcond.i661 = icmp eq i32 %inc.i660, 9
  br i1 %exitcond.i661, label %eshup1.exit663, label %for.body.i662

eshup1.exit663:                                   ; preds = %for.body.i662
  %62 = load i16* %arrayidx287, align 4, !tbaa !0
  %cmp289 = icmp eq i16 %62, 0
  br i1 %cmp289, label %for.body.i647, label %while.end296

for.body.i647:                                    ; preds = %eshup1.exit663, %for.body.i647
  %i.06.i640 = phi i32 [ %inc.i645, %for.body.i647 ], [ 0, %eshup1.exit663 ]
  %b.addr.05.i641 = phi i16* [ %incdec.ptr1.i644, %for.body.i647 ], [ %arraydecay, %eshup1.exit663 ]
  %a.addr.04.i642 = phi i16* [ %incdec.ptr.i643, %for.body.i647 ], [ %arraydecay135, %eshup1.exit663 ]
  %incdec.ptr.i643 = getelementptr inbounds i16* %a.addr.04.i642, i64 1
  %63 = load i16* %a.addr.04.i642, align 2, !tbaa !0
  %incdec.ptr1.i644 = getelementptr inbounds i16* %b.addr.05.i641, i64 1
  store i16 %63, i16* %b.addr.05.i641, align 2, !tbaa !0
  %inc.i645 = add nsw i32 %i.06.i640, 1
  %exitcond.i646 = icmp eq i32 %inc.i645, 8
  br i1 %exitcond.i646, label %emovz.exit649, label %for.body.i647

emovz.exit649:                                    ; preds = %for.body.i647
  %sub293 = add nsw i32 %nexp.6727, -1
  store i16 0, i16* %add.ptr.i, align 16, !tbaa !0
  %cmp271 = icmp sgt i32 %sub293, 0
  br i1 %cmp271, label %land.rhs273, label %while.end296

while.end296:                                     ; preds = %emovz.exit649, %eshup1.exit663, %land.rhs273, %if.end268
  %nexp.6.lcssa = phi i32 [ %sub269, %if.end268 ], [ %nexp.6727, %land.rhs273 ], [ %nexp.6727, %eshup1.exit663 ], [ %sub293, %emovz.exit649 ]
  %call298 = call fastcc i32 @enormlz(i16* %arraydecay) #6
  %cmp299 = icmp sgt i32 %call298, 80
  br i1 %cmp299, label %if.then301, label %if.end303

if.then301:                                       ; preds = %while.end296
  call void @llvm.memset.p0i8.i64(i8* %xi4.i, i8 0, i64 18, i32 16, i1 false) #1
  br label %aexit

if.end303:                                        ; preds = %while.end296
  %sub304 = sub nsw i32 16462, %call298
  call fastcc void @emdnorm(i16* %arraydecay, i32 %lost.0, i32 0, i32 %sub304, i32 64) #6
  %arrayidx306 = getelementptr inbounds [9 x i16]* %yy, i64 0, i64 1
  %64 = load i16* %arrayidx306, align 2, !tbaa !0
  %conv307 = zext i16 %64 to i32
  %cmp308 = icmp eq i32 %nexp.6.lcssa, 0
  br i1 %cmp308, label %expdon, label %if.end311

if.end311:                                        ; preds = %if.end303
  %cmp312 = icmp slt i32 %nexp.6.lcssa, 0
  br i1 %cmp312, label %if.then314, label %if.end329

if.then314:                                       ; preds = %if.end311
  %sub315 = sub nsw i32 0, %nexp.6.lcssa
  %cmp316 = icmp sgt i32 %sub315, 4096
  br i1 %cmp316, label %if.then318, label %if.end329

if.then318:                                       ; preds = %if.then314
  %arraydecay319 = getelementptr inbounds [9 x i16]* %tt, i64 0, i64 0
  call fastcc void @emovi(i16* getelementptr inbounds ([13 x [6 x i16]]* @etens, i64 0, i64 0, i64 0), i16* %arraydecay319) #6
  %arrayidx320 = getelementptr inbounds [9 x i16]* %tt, i64 0, i64 1
  %65 = load i16* %arrayidx320, align 2, !tbaa !0
  %conv321 = zext i16 %65 to i32
  %call325 = call fastcc i32 @edivm(i16* %arraydecay319, i16* %arraydecay) #6
  %sub322 = add i32 %conv307, 16383
  %add326 = sub i32 %sub322, %conv321
  %sub327 = sub i32 -4096, %nexp.6.lcssa
  br label %if.end329

if.end329:                                        ; preds = %if.then314, %if.then318, %if.end311
  %nexp.7 = phi i32 [ %sub327, %if.then318 ], [ %sub315, %if.then314 ], [ %nexp.6.lcssa, %if.end311 ]
  %esign.1 = phi i32 [ -1, %if.then318 ], [ -1, %if.then314 ], [ 1, %if.end311 ]
  %lexp.0 = phi i32 [ %add326, %if.then318 ], [ %conv307, %if.then314 ], [ %conv307, %if.end311 ]
  br label %for.body.i617

for.body.i617:                                    ; preds = %for.body.i617, %if.end329
  %i.05.i = phi i32 [ 0, %if.end329 ], [ %inc.i615, %for.body.i617 ]
  %b.addr.04.i = phi i16* [ %arraydecay135, %if.end329 ], [ %incdec.ptr1.i614, %for.body.i617 ]
  %a.addr.03.i = phi i16* [ getelementptr inbounds ([6 x i16]* @eone, i64 0, i64 0), %if.end329 ], [ %incdec.ptr.i613, %for.body.i617 ]
  %incdec.ptr.i613 = getelementptr inbounds i16* %a.addr.03.i, i64 1
  %66 = load i16* %a.addr.03.i, align 2, !tbaa !0
  %incdec.ptr1.i614 = getelementptr inbounds i16* %b.addr.04.i, i64 1
  store i16 %66, i16* %b.addr.04.i, align 2, !tbaa !0
  %inc.i615 = add nsw i32 %i.05.i, 1
  %exitcond.i616 = icmp eq i32 %inc.i615, 6
  br i1 %exitcond.i616, label %do.body, label %for.body.i617

do.body:                                          ; preds = %for.body.i617, %if.end339
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end339 ], [ 12, %for.body.i617 ]
  %exp.4 = phi i32 [ %add340, %if.end339 ], [ 1, %for.body.i617 ]
  %and331 = and i32 %exp.4, %nexp.7
  %tobool332 = icmp eq i32 %and331, 0
  br i1 %tobool332, label %if.end339, label %if.then333

if.then333:                                       ; preds = %do.body
  %arraydecay336 = getelementptr inbounds [13 x [6 x i16]]* @etens, i64 0, i64 %indvars.iv, i64 0
  call fastcc void @emul(i16* %arraydecay336, i16* %arraydecay135, i16* %arraydecay135) #6
  br label %if.end339

if.end339:                                        ; preds = %do.body, %if.then333
  %indvars.iv.next = add i64 %indvars.iv, -1
  %add340 = shl nsw i32 %exp.4, 1
  %cmp341 = icmp slt i32 %add340, 4097
  br i1 %cmp341, label %do.body, label %do.end

do.end:                                           ; preds = %if.end339
  %arraydecay344 = getelementptr inbounds [9 x i16]* %tt, i64 0, i64 0
  call fastcc void @emovi(i16* %arraydecay135, i16* %arraydecay344) #6
  %cmp345 = icmp slt i32 %esign.1, 0
  %arrayidx348 = getelementptr inbounds [9 x i16]* %tt, i64 0, i64 1
  %67 = load i16* %arrayidx348, align 2, !tbaa !0
  %conv349 = zext i16 %67 to i32
  br i1 %cmp345, label %if.then347, label %if.else355

if.then347:                                       ; preds = %do.end
  %call353 = call fastcc i32 @edivm(i16* %arraydecay344, i16* %arraydecay) #6
  %sub350 = add i32 %lexp.0, 16383
  %add354 = sub i32 %sub350, %conv349
  br label %expdon

if.else355:                                       ; preds = %do.end
  %call361 = call fastcc i32 @emulm(i16* %arraydecay344, i16* %arraydecay) #6
  %add358 = add i32 %lexp.0, -16382
  %sub362 = add i32 %add358, %conv349
  br label %expdon

expdon:                                           ; preds = %if.then347, %if.else355, %if.end303, %if.end265
  %lost.3 = phi i32 [ %lost.0, %if.end265 ], [ 0, %if.end303 ], [ %call353, %if.then347 ], [ %call361, %if.else355 ]
  %lexp.2 = phi i32 [ %sub257, %if.end265 ], [ %conv307, %if.end303 ], [ %add354, %if.then347 ], [ %sub362, %if.else355 ]
  switch i32 %oprec, label %if.end374 [
    i32 53, label %if.then366
    i32 24, label %if.then371
  ]

if.then366:                                       ; preds = %expdon
  %sub367 = add nsw i32 %lexp.2, -15360
  br label %if.end374

if.then371:                                       ; preds = %expdon
  %sub372 = add nsw i32 %lexp.2, -16256
  br label %if.end374

if.end374:                                        ; preds = %expdon, %if.then371, %if.then366
  %lexp.3 = phi i32 [ %sub367, %if.then366 ], [ %sub372, %if.then371 ], [ %lexp.2, %expdon ]
  store i32 %oprec, i32* @rndprc, align 4, !tbaa !5
  call fastcc void @emdnorm(i16* %arraydecay, i32 %lost.3, i32 0, i32 %lexp.3, i32 64) #6
  br label %aexit

aexit:                                            ; preds = %for.cond, %if.end374, %if.then301, %if.then249, %zero, %infinite, %unexpected_char_error
  %nsign.3 = phi i16 [ %nsign.1, %unexpected_char_error ], [ %nsign.0, %infinite ], [ %nsign.0, %if.then249 ], [ %nsign.0, %zero ], [ %nsign.0, %if.end374 ], [ %nsign.0, %if.then301 ], [ %nsign.0, %for.cond ]
  store i32 %5, i32* @rndprc, align 4, !tbaa !5
  store i16 %nsign.3, i16* %arraydecay, align 16, !tbaa !0
  switch i32 %oprec, label %sw.epilog385 [
    i32 53, label %sw.bb377
    i32 24, label %sw.bb379
    i32 64, label %sw.bb381
    i32 80, label %sw.bb383
  ]

sw.bb377:                                         ; preds = %aexit
  call fastcc void @toe53(i16* %arraydecay, i16* %y) #6
  br label %sw.epilog385

sw.bb379:                                         ; preds = %aexit
  call fastcc void @toe24(i16* %arraydecay, i16* %y) #6
  br label %sw.epilog385

sw.bb381:                                         ; preds = %aexit
  call fastcc void @toe64(i16* %arraydecay, i16* %y) #6
  br label %sw.epilog385

sw.bb383:                                         ; preds = %aexit
  call fastcc void @emovo(i16* %arraydecay, i16* %y) #6
  br label %sw.epilog385

sw.epilog385:                                     ; preds = %aexit, %sw.bb383, %sw.bb381, %sw.bb379, %sw.bb377
  ret void
}
