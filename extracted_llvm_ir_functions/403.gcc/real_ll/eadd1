define internal fastcc void @eadd1(i16* nocapture %a, i16* nocapture %b, i16* nocapture %c) #0 {
entry:
  %x4.i199 = bitcast i16* %c to i8*
  %ai = alloca [9 x i16], align 16
  %bi = alloca [9 x i16], align 16
  %ci = alloca [9 x i16], align 16
  %arrayidx.i137 = getelementptr inbounds i16* %a, i64 5
  %0 = load i16* %arrayidx.i137, align 2, !tbaa !0
  %and.i138 = and i16 %0, 32767
  %cmp.i139 = icmp eq i16 %and.i138, 32767
  br i1 %cmp.i139, label %for.body.i, label %if.end3

for.body.i:                                       ; preds = %entry, %for.inc.i
  %i.012.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %entry ]
  %x.addr.011.i = phi i16* [ %incdec.ptr.i, %for.inc.i ], [ %a, %entry ]
  %1 = load i16* %x.addr.011.i, align 2, !tbaa !0
  %cmp5.i = icmp eq i16 %1, 0
  br i1 %cmp5.i, label %for.inc.i, label %if.end3

for.inc.i:                                        ; preds = %for.body.i
  %incdec.ptr.i = getelementptr inbounds i16* %x.addr.011.i, i64 1
  %inc.i = add nsw i32 %i.012.i, 1
  %cmp2.i = icmp slt i32 %inc.i, 5
  br i1 %cmp2.i, label %for.body.i, label %eisinf.exit

eisinf.exit:                                      ; preds = %for.inc.i
  br i1 %cmp.i139, label %for.body.i143, label %if.end3

for.body.i143:                                    ; preds = %eisinf.exit, %for.body.i143
  %i.05.i = phi i32 [ %inc.i142, %for.body.i143 ], [ 0, %eisinf.exit ]
  %b.addr.04.i = phi i16* [ %incdec.ptr1.i, %for.body.i143 ], [ %c, %eisinf.exit ]
  %a.addr.03.i = phi i16* [ %incdec.ptr.i141, %for.body.i143 ], [ %a, %eisinf.exit ]
  %incdec.ptr.i141 = getelementptr inbounds i16* %a.addr.03.i, i64 1
  %2 = load i16* %a.addr.03.i, align 2, !tbaa !0
  %incdec.ptr1.i = getelementptr inbounds i16* %b.addr.04.i, i64 1
  store i16 %2, i16* %b.addr.04.i, align 2, !tbaa !0
  %inc.i142 = add nsw i32 %i.05.i, 1
  %exitcond.i = icmp eq i32 %inc.i142, 6
  br i1 %exitcond.i, label %emov.exit, label %for.body.i143

emov.exit:                                        ; preds = %for.body.i143
  %.b136 = load i1* @subflg, align 1
  br i1 %.b136, label %if.then2, label %return

if.then2:                                         ; preds = %emov.exit
  %arrayidx.i144 = getelementptr inbounds i16* %c, i64 5
  %3 = load i16* %arrayidx.i144, align 2, !tbaa !0
  %xor.i = xor i16 %3, -32768
  store i16 %xor.i, i16* %arrayidx.i144, align 2, !tbaa !0
  br label %return

if.end3:                                          ; preds = %entry, %for.body.i, %eisinf.exit
  %arrayidx.i217 = getelementptr inbounds i16* %b, i64 5
  %4 = load i16* %arrayidx.i217, align 2, !tbaa !0
  %and.i218 = and i16 %4, 32767
  %cmp.i219 = icmp eq i16 %and.i218, 32767
  br i1 %cmp.i219, label %for.body.i223, label %if.end7

for.body.i223:                                    ; preds = %if.end3, %for.inc.i227
  %i.012.i220 = phi i32 [ %inc.i225, %for.inc.i227 ], [ 0, %if.end3 ]
  %x.addr.011.i221 = phi i16* [ %incdec.ptr.i224, %for.inc.i227 ], [ %b, %if.end3 ]
  %5 = load i16* %x.addr.011.i221, align 2, !tbaa !0
  %cmp5.i222 = icmp eq i16 %5, 0
  br i1 %cmp5.i222, label %for.inc.i227, label %if.end7

for.inc.i227:                                     ; preds = %for.body.i223
  %incdec.ptr.i224 = getelementptr inbounds i16* %x.addr.011.i221, i64 1
  %inc.i225 = add nsw i32 %i.012.i220, 1
  %cmp2.i226 = icmp slt i32 %inc.i225, 5
  br i1 %cmp2.i226, label %for.body.i223, label %eisinf.exit216

eisinf.exit216:                                   ; preds = %for.inc.i227
  br i1 %cmp.i219, label %for.body.i267, label %if.end7

for.body.i267:                                    ; preds = %eisinf.exit216, %for.body.i267
  %i.05.i260 = phi i32 [ %inc.i265, %for.body.i267 ], [ 0, %eisinf.exit216 ]
  %b.addr.04.i261 = phi i16* [ %incdec.ptr1.i264, %for.body.i267 ], [ %c, %eisinf.exit216 ]
  %a.addr.03.i262 = phi i16* [ %incdec.ptr.i263, %for.body.i267 ], [ %b, %eisinf.exit216 ]
  %incdec.ptr.i263 = getelementptr inbounds i16* %a.addr.03.i262, i64 1
  %6 = load i16* %a.addr.03.i262, align 2, !tbaa !0
  %incdec.ptr1.i264 = getelementptr inbounds i16* %b.addr.04.i261, i64 1
  store i16 %6, i16* %b.addr.04.i261, align 2, !tbaa !0
  %inc.i265 = add nsw i32 %i.05.i260, 1
  %exitcond.i266 = icmp eq i32 %inc.i265, 6
  br i1 %exitcond.i266, label %return, label %for.body.i267

if.end7:                                          ; preds = %if.end3, %for.body.i223, %eisinf.exit216
  %arraydecay = getelementptr inbounds [9 x i16]* %ai, i64 0, i64 0
  call fastcc void @emovi(i16* %a, i16* %arraydecay) #6
  %arraydecay8 = getelementptr inbounds [9 x i16]* %bi, i64 0, i64 0
  call fastcc void @emovi(i16* %b, i16* %arraydecay8) #6
  %.b135 = load i1* @subflg, align 1
  br i1 %.b135, label %if.then10, label %if.end7.if.end13_crit_edge

if.end7.if.end13_crit_edge:                       ; preds = %if.end7
  %arrayidx14.phi.trans.insert = getelementptr inbounds [9 x i16]* %ai, i64 0, i64 1
  %.pre = load i16* %arrayidx14.phi.trans.insert, align 2, !tbaa !0
  br label %if.end13

if.then10:                                        ; preds = %if.end7
  %7 = bitcast [9 x i16]* %ai to i32*
  %8 = load i32* %7, align 16
  %9 = trunc i32 %8 to i16
  %neg = xor i16 %9, -1
  store i16 %neg, i16* %arraydecay, align 16, !tbaa !0
  %10 = lshr i32 %8, 16
  %11 = trunc i32 %10 to i16
  br label %if.end13

if.end13:                                         ; preds = %if.end7.if.end13_crit_edge, %if.then10
  %12 = phi i16 [ %.pre, %if.end7.if.end13_crit_edge ], [ %11, %if.then10 ]
  %conv15 = zext i16 %12 to i32
  %arrayidx16 = getelementptr inbounds [9 x i16]* %bi, i64 0, i64 1
  %13 = load i16* %arrayidx16, align 2, !tbaa !0
  %conv17 = zext i16 %13 to i32
  %sub = sub nsw i32 %conv15, %conv17
  %cmp = icmp sgt i32 %sub, 0
  br i1 %cmp, label %if.then20, label %if.end30

if.then20:                                        ; preds = %if.end13
  %arraydecay22 = getelementptr inbounds [9 x i16]* %ci, i64 0, i64 0
  br label %for.body.i257

for.body.i257:                                    ; preds = %for.body.i257, %if.then20
  %i.06.i250 = phi i32 [ 0, %if.then20 ], [ %inc.i255, %for.body.i257 ]
  %b.addr.05.i251 = phi i16* [ %arraydecay22, %if.then20 ], [ %incdec.ptr1.i254, %for.body.i257 ]
  %a.addr.04.i252 = phi i16* [ %arraydecay8, %if.then20 ], [ %incdec.ptr.i253, %for.body.i257 ]
  %incdec.ptr.i253 = getelementptr inbounds i16* %a.addr.04.i252, i64 1
  %14 = load i16* %a.addr.04.i252, align 2, !tbaa !0
  %incdec.ptr1.i254 = getelementptr inbounds i16* %b.addr.05.i251, i64 1
  store i16 %14, i16* %b.addr.05.i251, align 2, !tbaa !0
  %inc.i255 = add nsw i32 %i.06.i250, 1
  %exitcond.i256 = icmp eq i32 %inc.i255, 8
  br i1 %exitcond.i256, label %emovz.exit259, label %for.body.i257

emovz.exit259:                                    ; preds = %for.body.i257
  %scevgep.i258 = getelementptr [9 x i16]* %ci, i64 0, i64 8
  store i16 0, i16* %scevgep.i258, align 16, !tbaa !0
  br label %for.body.i247

for.body.i247:                                    ; preds = %for.body.i247, %emovz.exit259
  %i.06.i240 = phi i32 [ 0, %emovz.exit259 ], [ %inc.i245, %for.body.i247 ]
  %b.addr.05.i241 = phi i16* [ %arraydecay8, %emovz.exit259 ], [ %incdec.ptr1.i244, %for.body.i247 ]
  %a.addr.04.i242 = phi i16* [ %arraydecay, %emovz.exit259 ], [ %incdec.ptr.i243, %for.body.i247 ]
  %incdec.ptr.i243 = getelementptr inbounds i16* %a.addr.04.i242, i64 1
  %15 = load i16* %a.addr.04.i242, align 2, !tbaa !0
  %incdec.ptr1.i244 = getelementptr inbounds i16* %b.addr.05.i241, i64 1
  store i16 %15, i16* %b.addr.05.i241, align 2, !tbaa !0
  %inc.i245 = add nsw i32 %i.06.i240, 1
  %exitcond.i246 = icmp eq i32 %inc.i245, 8
  br i1 %exitcond.i246, label %emovz.exit249, label %for.body.i247

emovz.exit249:                                    ; preds = %for.body.i247
  %scevgep.i248 = getelementptr [9 x i16]* %bi, i64 0, i64 8
  store i16 0, i16* %scevgep.i248, align 16, !tbaa !0
  br label %for.body.i237

for.body.i237:                                    ; preds = %for.body.i237, %emovz.exit249
  %i.06.i230 = phi i32 [ 0, %emovz.exit249 ], [ %inc.i235, %for.body.i237 ]
  %b.addr.05.i231 = phi i16* [ %arraydecay, %emovz.exit249 ], [ %incdec.ptr1.i234, %for.body.i237 ]
  %a.addr.04.i232 = phi i16* [ %arraydecay22, %emovz.exit249 ], [ %incdec.ptr.i233, %for.body.i237 ]
  %incdec.ptr.i233 = getelementptr inbounds i16* %a.addr.04.i232, i64 1
  %16 = load i16* %a.addr.04.i232, align 2, !tbaa !0
  %incdec.ptr1.i234 = getelementptr inbounds i16* %b.addr.05.i231, i64 1
  store i16 %16, i16* %b.addr.05.i231, align 2, !tbaa !0
  %inc.i235 = add nsw i32 %i.06.i230, 1
  %exitcond.i236 = icmp eq i32 %inc.i235, 8
  br i1 %exitcond.i236, label %emovz.exit239, label %for.body.i237

emovz.exit239:                                    ; preds = %for.body.i237
  %scevgep.i238 = getelementptr [9 x i16]* %ai, i64 0, i64 8
  store i16 0, i16* %scevgep.i238, align 16, !tbaa !0
  %17 = load i16* %arrayidx16, align 2, !tbaa !0
  %conv28 = zext i16 %17 to i32
  %sub29 = sub nsw i32 0, %sub
  br label %if.end30

if.end30:                                         ; preds = %emovz.exit239, %if.end13
  %18 = phi i16 [ %17, %emovz.exit239 ], [ %13, %if.end13 ]
  %lt.0 = phi i32 [ %sub29, %emovz.exit239 ], [ %sub, %if.end13 ]
  %ltb.0 = phi i32 [ %conv28, %emovz.exit239 ], [ %conv17, %if.end13 ]
  %cmp32 = icmp eq i32 %lt.0, 0
  br i1 %cmp32, label %if.else, label %if.then34

if.then34:                                        ; preds = %if.end30
  %cmp35 = icmp slt i32 %lt.0, -81
  br i1 %cmp35, label %done, label %if.end38

if.end38:                                         ; preds = %if.then34
  %call40 = call fastcc i32 @eshift(i16* %arraydecay, i32 %lt.0) #6
  br label %if.end97

if.else:                                          ; preds = %if.end30
  %add.ptr.i200 = getelementptr inbounds [9 x i16]* %ai, i64 0, i64 2
  %add.ptr1.i201 = getelementptr inbounds [9 x i16]* %bi, i64 0, i64 2
  br label %for.body.i202

for.body.i202:                                    ; preds = %for.inc.i206, %if.else
  %i.021.i = phi i32 [ 2, %if.else ], [ %inc.i204, %for.inc.i206 ]
  %b.addr.020.i = phi i16* [ %add.ptr1.i201, %if.else ], [ %incdec.ptr2.i, %for.inc.i206 ]
  %a.addr.019.i = phi i16* [ %add.ptr.i200, %if.else ], [ %incdec.ptr.i203, %for.inc.i206 ]
  %19 = load i16* %a.addr.019.i, align 2, !tbaa !0
  %20 = load i16* %b.addr.020.i, align 2, !tbaa !0
  %cmp4.i = icmp eq i16 %19, %20
  br i1 %cmp4.i, label %for.inc.i206, label %if.end86

for.inc.i206:                                     ; preds = %for.body.i202
  %incdec.ptr2.i = getelementptr inbounds i16* %b.addr.020.i, i64 1
  %incdec.ptr.i203 = getelementptr inbounds i16* %a.addr.019.i, i64 1
  %inc.i204 = add nsw i32 %i.021.i, 1
  %cmp.i205 = icmp slt i32 %inc.i204, 9
  br i1 %cmp.i205, label %for.body.i202, label %if.then46

if.then46:                                        ; preds = %for.inc.i206
  %21 = load i16* %arraydecay, align 16, !tbaa !0
  %22 = bitcast [9 x i16]* %bi to i64*
  %23 = load i64* %22, align 16
  %24 = trunc i64 %23 to i16
  %cmp51 = icmp eq i16 %21, %24
  br i1 %cmp51, label %if.end54, label %if.then53

if.then53:                                        ; preds = %if.then46
  call void @llvm.memset.p0i8.i64(i8* %x4.i199, i8 0, i64 12, i32 2, i1 false) #1
  br label %return

if.end54:                                         ; preds = %if.then46
  %25 = lshr i64 %23, 48
  %26 = trunc i64 %25 to i16
  %.mask = and i64 %23, 4294901760
  %cmp57 = icmp eq i64 %.mask, 0
  %cmp61 = icmp sgt i16 %26, -1
  %or.cond = and i1 %cmp57, %cmp61
  br i1 %or.cond, label %if.then63, label %for.body

if.then63:                                        ; preds = %if.end54
  %add.ptr.i194 = getelementptr inbounds [9 x i16]* %bi, i64 0, i64 8
  br label %for.body.i198

for.body.i198:                                    ; preds = %for.body.i198, %if.then63
  %i.025.i = phi i32 [ 2, %if.then63 ], [ %inc.i196, %for.body.i198 ]
  %bits.024.i = phi i16 [ 0, %if.then63 ], [ %shl14.i, %for.body.i198 ]
  %x.addr.023.i = phi i16* [ %add.ptr.i194, %if.then63 ], [ %incdec.ptr.i195, %for.body.i198 ]
  %27 = load i16* %x.addr.023.i, align 2, !tbaa !0
  %.lobit.i = lshr i16 %27, 15
  %or.bits.0.i = or i16 %.lobit.i, %bits.024.i
  %shl.i = shl i16 %27, 1
  %and6.i = lshr exact i16 %bits.024.i, 1
  %28 = and i16 %and6.i, 1
  %29 = or i16 %shl.i, %28
  store i16 %29, i16* %x.addr.023.i, align 2, !tbaa !0
  %shl14.i = shl i16 %or.bits.0.i, 1
  %incdec.ptr.i195 = getelementptr inbounds i16* %x.addr.023.i, i64 -1
  %inc.i196 = add nsw i32 %i.025.i, 1
  %exitcond.i197 = icmp eq i32 %inc.i196, 9
  br i1 %exitcond.i197, label %done, label %for.body.i198

for.cond:                                         ; preds = %for.body
  %30 = trunc i64 %indvars.iv to i32
  %cmp66 = icmp slt i32 %30, 8
  br i1 %cmp66, label %for.cond.for.body_crit_edge, label %for.end

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  %arrayidx68.phi.trans.insert = getelementptr inbounds [9 x i16]* %bi, i64 0, i64 %indvars.iv
  %.pre292 = load i16* %arrayidx68.phi.trans.insert, align 2, !tbaa !0
  %phitmp294 = add i64 %indvars.iv, 1
  br label %for.body

for.body:                                         ; preds = %if.end54, %for.cond.for.body_crit_edge
  %31 = phi i16 [ %.pre292, %for.cond.for.body_crit_edge ], [ %18, %if.end54 ]
  %indvars.iv = phi i64 [ %phitmp294, %for.cond.for.body_crit_edge ], [ 2, %if.end54 ]
  %cmp70 = icmp eq i16 %31, 0
  br i1 %cmp70, label %for.cond, label %if.then72

if.then72:                                        ; preds = %for.body
  %add = add nsw i32 %ltb.0, 1
  %cmp73 = icmp ugt i32 %add, 32766
  br i1 %cmp73, label %if.then75, label %for.end

if.then75:                                        ; preds = %if.then72
  call void @llvm.memset.p0i8.i64(i8* %x4.i199, i8 0, i64 12, i32 2, i1 false) #1
  %cmp78 = icmp eq i16 %21, 0
  %scevgep.i191.pre = getelementptr i16* %c, i64 5
  br i1 %cmp78, label %if.end81, label %if.then80

if.then80:                                        ; preds = %if.then75
  store i16 -32768, i16* %scevgep.i191.pre, align 2, !tbaa !0
  br label %if.end81

if.end81:                                         ; preds = %if.then75, %if.then80
  %32 = phi i16 [ -1, %if.then80 ], [ 32767, %if.then75 ]
  call void @llvm.memset.p0i8.i64(i8* %x4.i199, i8 0, i64 10, i32 2, i1 false) #1
  store i16 %32, i16* %scevgep.i191.pre, align 2, !tbaa !0
  br label %return

for.end:                                          ; preds = %for.cond, %if.then72
  %ltb.1 = phi i32 [ %add, %if.then72 ], [ %ltb.0, %for.cond ]
  %conv84 = trunc i32 %ltb.1 to i16
  store i16 %conv84, i16* %arrayidx16, align 2, !tbaa !0
  br label %done

if.end86:                                         ; preds = %for.body.i202
  %cmp10.i = icmp ugt i16 %19, %20
  br i1 %cmp10.i, label %if.then89, label %if.end97

if.then89:                                        ; preds = %if.end86
  %arraydecay91 = getelementptr inbounds [9 x i16]* %ci, i64 0, i64 0
  br label %for.body.i188

for.body.i188:                                    ; preds = %for.body.i188, %if.then89
  %i.06.i181 = phi i32 [ 0, %if.then89 ], [ %inc.i186, %for.body.i188 ]
  %b.addr.05.i182 = phi i16* [ %arraydecay91, %if.then89 ], [ %incdec.ptr1.i185, %for.body.i188 ]
  %a.addr.04.i183 = phi i16* [ %arraydecay8, %if.then89 ], [ %incdec.ptr.i184, %for.body.i188 ]
  %incdec.ptr.i184 = getelementptr inbounds i16* %a.addr.04.i183, i64 1
  %33 = load i16* %a.addr.04.i183, align 2, !tbaa !0
  %incdec.ptr1.i185 = getelementptr inbounds i16* %b.addr.05.i182, i64 1
  store i16 %33, i16* %b.addr.05.i182, align 2, !tbaa !0
  %inc.i186 = add nsw i32 %i.06.i181, 1
  %exitcond.i187 = icmp eq i32 %inc.i186, 8
  br i1 %exitcond.i187, label %emovz.exit190, label %for.body.i188

emovz.exit190:                                    ; preds = %for.body.i188
  %scevgep.i189 = getelementptr [9 x i16]* %ci, i64 0, i64 8
  store i16 0, i16* %scevgep.i189, align 16, !tbaa !0
  br label %for.body.i178

for.body.i178:                                    ; preds = %for.body.i178, %emovz.exit190
  %i.06.i171 = phi i32 [ 0, %emovz.exit190 ], [ %inc.i176, %for.body.i178 ]
  %b.addr.05.i172 = phi i16* [ %arraydecay8, %emovz.exit190 ], [ %incdec.ptr1.i175, %for.body.i178 ]
  %a.addr.04.i173 = phi i16* [ %arraydecay, %emovz.exit190 ], [ %incdec.ptr.i174, %for.body.i178 ]
  %incdec.ptr.i174 = getelementptr inbounds i16* %a.addr.04.i173, i64 1
  %34 = load i16* %a.addr.04.i173, align 2, !tbaa !0
  %incdec.ptr1.i175 = getelementptr inbounds i16* %b.addr.05.i172, i64 1
  store i16 %34, i16* %b.addr.05.i172, align 2, !tbaa !0
  %inc.i176 = add nsw i32 %i.06.i171, 1
  %exitcond.i177 = icmp eq i32 %inc.i176, 8
  br i1 %exitcond.i177, label %emovz.exit180, label %for.body.i178

emovz.exit180:                                    ; preds = %for.body.i178
  %scevgep.i179 = getelementptr [9 x i16]* %bi, i64 0, i64 8
  store i16 0, i16* %scevgep.i179, align 16, !tbaa !0
  br label %for.body.i170

for.body.i170:                                    ; preds = %for.body.i170, %emovz.exit180
  %i.06.i = phi i32 [ 0, %emovz.exit180 ], [ %inc.i168, %for.body.i170 ]
  %b.addr.05.i = phi i16* [ %arraydecay, %emovz.exit180 ], [ %incdec.ptr1.i167, %for.body.i170 ]
  %a.addr.04.i = phi i16* [ %arraydecay91, %emovz.exit180 ], [ %incdec.ptr.i166, %for.body.i170 ]
  %incdec.ptr.i166 = getelementptr inbounds i16* %a.addr.04.i, i64 1
  %35 = load i16* %a.addr.04.i, align 2, !tbaa !0
  %incdec.ptr1.i167 = getelementptr inbounds i16* %b.addr.05.i, i64 1
  store i16 %35, i16* %b.addr.05.i, align 2, !tbaa !0
  %inc.i168 = add nsw i32 %i.06.i, 1
  %exitcond.i169 = icmp eq i32 %inc.i168, 8
  br i1 %exitcond.i169, label %emovz.exit, label %for.body.i170

emovz.exit:                                       ; preds = %for.body.i170
  %scevgep.i = getelementptr [9 x i16]* %ai, i64 0, i64 8
  store i16 0, i16* %scevgep.i, align 16, !tbaa !0
  br label %if.end97

if.end97:                                         ; preds = %if.end86, %emovz.exit, %if.end38
  %lost.0 = phi i32 [ %call40, %if.end38 ], [ 0, %emovz.exit ], [ 0, %if.end86 ]
  %36 = load i16* %arraydecay, align 16, !tbaa !0
  %37 = load i16* %arraydecay8, align 16, !tbaa !0
  %cmp102 = icmp eq i16 %36, %37
  %add.ptr.i150 = getelementptr inbounds [9 x i16]* %ai, i64 0, i64 8
  %add.ptr1.i151 = getelementptr inbounds [9 x i16]* %bi, i64 0, i64 8
  br i1 %cmp102, label %for.body.i165, label %for.body.i149

for.body.i165:                                    ; preds = %if.end97, %for.body.i165.for.body.i165_crit_edge
  %carry.016.i152 = phi i32 [ %and.lobit.i159, %for.body.i165.for.body.i165_crit_edge ], [ 0, %if.end97 ]
  %i.015.i153 = phi i32 [ %phitmp293, %for.body.i165.for.body.i165_crit_edge ], [ 3, %if.end97 ]
  %x.addr.014.i154 = phi i16* [ %incdec.ptr.i161, %for.body.i165.for.body.i165_crit_edge ], [ %add.ptr.i150, %if.end97 ]
  %y.addr.013.i155 = phi i16* [ %incdec.ptr5.i162, %for.body.i165.for.body.i165_crit_edge ], [ %add.ptr1.i151, %if.end97 ]
  %38 = load i16* %x.addr.014.i154, align 2, !tbaa !0
  %conv.i156 = zext i16 %38 to i32
  %39 = load i16* %y.addr.013.i155, align 2, !tbaa !0
  %conv2.i157 = zext i16 %39 to i32
  %add.i = add i32 %conv.i156, %carry.016.i152
  %add3.i = add i32 %add.i, %conv2.i157
  %conv4.i160 = trunc i32 %add3.i to i16
  store i16 %conv4.i160, i16* %y.addr.013.i155, align 2, !tbaa !0
  %exitcond.i164 = icmp eq i32 %i.015.i153, 9
  br i1 %exitcond.i164, label %if.end110, label %for.body.i165.for.body.i165_crit_edge

for.body.i165.for.body.i165_crit_edge:            ; preds = %for.body.i165
  %and.i158 = lshr i32 %add3.i, 16
  %incdec.ptr5.i162 = getelementptr inbounds i16* %y.addr.013.i155, i64 -1
  %incdec.ptr.i161 = getelementptr inbounds i16* %x.addr.014.i154, i64 -1
  %and.lobit.i159 = and i32 %and.i158, 1
  %phitmp293 = add i32 %i.015.i153, 1
  br label %for.body.i165

for.body.i149:                                    ; preds = %if.end97, %for.body.i149.for.body.i149_crit_edge
  %carry.016.i = phi i32 [ %and.lobit.i, %for.body.i149.for.body.i149_crit_edge ], [ 0, %if.end97 ]
  %i.015.i = phi i32 [ %phitmp, %for.body.i149.for.body.i149_crit_edge ], [ 3, %if.end97 ]
  %x.addr.014.i = phi i16* [ %incdec.ptr.i146, %for.body.i149.for.body.i149_crit_edge ], [ %add.ptr.i150, %if.end97 ]
  %y.addr.013.i = phi i16* [ %incdec.ptr5.i, %for.body.i149.for.body.i149_crit_edge ], [ %add.ptr1.i151, %if.end97 ]
  %40 = load i16* %y.addr.013.i, align 2, !tbaa !0
  %conv.i = zext i16 %40 to i32
  %41 = load i16* %x.addr.014.i, align 2, !tbaa !0
  %conv2.i = zext i16 %41 to i32
  %sub.i = sub i32 %conv.i, %conv2.i
  %sub3.i = sub i32 %sub.i, %carry.016.i
  %conv4.i = trunc i32 %sub3.i to i16
  store i16 %conv4.i, i16* %y.addr.013.i, align 2, !tbaa !0
  %exitcond.i148 = icmp eq i32 %i.015.i, 9
  br i1 %exitcond.i148, label %if.end110, label %for.body.i149.for.body.i149_crit_edge

for.body.i149.for.body.i149_crit_edge:            ; preds = %for.body.i149
  %and.i145 = lshr i32 %sub3.i, 16
  %incdec.ptr5.i = getelementptr inbounds i16* %y.addr.013.i, i64 -1
  %incdec.ptr.i146 = getelementptr inbounds i16* %x.addr.014.i, i64 -1
  %and.lobit.i = and i32 %and.i145, 1
  %phitmp = add i32 %i.015.i, 1
  br label %for.body.i149

if.end110:                                        ; preds = %for.body.i149, %for.body.i165
  %storemerge = phi i1 [ false, %for.body.i165 ], [ true, %for.body.i149 ]
  store i1 %storemerge, i1* @subflg, align 1
  %42 = zext i1 %storemerge to i32
  call fastcc void @emdnorm(i16* %arraydecay8, i32 %lost.0, i32 %42, i32 %ltb.0, i32 64) #6
  br label %done

done:                                             ; preds = %for.body.i198, %if.then34, %if.end110, %for.end
  call fastcc void @emovo(i16* %arraydecay8, i16* %c) #6
  br label %return

return:                                           ; preds = %for.body.i267, %emov.exit, %if.then2, %done, %if.end81, %if.then53
  ret void
}
