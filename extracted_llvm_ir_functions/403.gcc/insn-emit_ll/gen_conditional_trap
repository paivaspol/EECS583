define %struct.rtx_def* @gen_conditional_trap(%struct.rtx_def* nocapture %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand0}, i64 0, metadata !5061), !dbg !11411
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand1}, i64 0, metadata !5062), !dbg !11412
  tail call void @llvm.dbg.value(metadata !6291, i64 0, metadata !5064), !dbg !11413
  tail call void @start_sequence() #5, !dbg !11414
  tail call void @llvm.dbg.declare(metadata !6438, metadata !5065), !dbg !11415
  %0 = bitcast %struct.rtx_def* %operand0 to i32*, !dbg !11416
  %bf.load = load i32* %0, align 8, !dbg !11416
  %bf.clear = and i32 %bf.load, 65535, !dbg !11416
  %call = tail call %struct.rtx_def* @ix86_expand_compare(i32 %bf.clear, %struct.rtx_def** null, %struct.rtx_def** null) #5, !dbg !11416
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 52, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %operand1) #5, !dbg !11416
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #5, !dbg !11416
  %call6 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !11418
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call6}, i64 0, metadata !5064), !dbg !11418
  tail call void @end_sequence() #5, !dbg !11418
  ret %struct.rtx_def* %call6, !dbg !11418
}
