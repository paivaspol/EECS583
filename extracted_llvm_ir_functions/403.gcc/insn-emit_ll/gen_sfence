define %struct.rtx_def* @gen_sfence() #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 %2) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call) #4
  %3 = bitcast %struct.rtx_def* %call1 to i32*
  %bf.load = load i32* %3, align 8
  %bf.set = or i32 %bf.load, 134217728
  store i32 %bf.set, i32* %3, align 8
  %call4 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call1) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 51, %struct.rtvec_def* %call4, i32 44) #4
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call1, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call8
}
