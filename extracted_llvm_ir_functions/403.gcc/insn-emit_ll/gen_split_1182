define %struct.rtx_def* @gen_split_1182(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @ix86_force_to_memory(i32 %bf.clear, %struct.rtx_def* %0) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load4 = load i32* %3, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 %bf.clear6, %struct.rtx_def* %call) #4
  store %struct.rtx_def* %call8, %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %5 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load12 = load i32* %6, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %bf.lshr16 = lshr i32 %bf.load12, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %7 = load %struct.rtx_def** %arrayidx18, align 8, !tbaa !0
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear13, i32 %bf.clear17, %struct.rtx_def* %7, %struct.rtx_def* %call8) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call20) #4
  %call22 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call21) #4
  %8 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load24 = load i32* %9, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  tail call void @ix86_free_from_memory(i32 %bf.clear26) #4
  %call27 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call27
}
