define %struct.rtx_def* @gen_split_887(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #4
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 255) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %call1) #4
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call2) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call3, %struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call6) #4
  %call8 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call9
}
