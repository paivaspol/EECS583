define %struct.rtx_def* @gen_movstrdi(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand0}, i64 0, metadata !4150), !dbg !9767
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand1}, i64 0, metadata !4151), !dbg !9768
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand2}, i64 0, metadata !4152), !dbg !9769
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand3}, i64 0, metadata !4153), !dbg !9770
  tail call void @llvm.dbg.value(metadata !6291, i64 0, metadata !4154), !dbg !9771
  tail call void @start_sequence() #5, !dbg !9772
  tail call void @llvm.dbg.declare(metadata !9029, metadata !4155), !dbg !9773
  %call = tail call i32 @ix86_expand_movstr(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %operand3) #5, !dbg !9774
  %tobool = icmp eq i32 %call, 0, !dbg !9774
  br i1 %tobool, label %if.else, label %if.then, !dbg !9774

if.then:                                          ; preds = %entry
  %call8 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !9776
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call8}, i64 0, metadata !4154), !dbg !9776
  tail call void @end_sequence() #5, !dbg !9776
  br label %return, !dbg !9776

if.else:                                          ; preds = %entry
  tail call void @end_sequence() #5, !dbg !9777
  br label %return, !dbg !9777

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then ], [ null, %if.else ]
  ret %struct.rtx_def* %retval.0, !dbg !9778
}
