define %struct.rtx_def* @gen_split_886(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %0) #4
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx1, align 8, !tbaa !0
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !0
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %3) #4
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #4
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call7, %struct.rtx_def* %2) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}
