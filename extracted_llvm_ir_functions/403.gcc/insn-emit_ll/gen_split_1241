define %struct.rtx_def* @gen_split_1241(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %1) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %2 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !0
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %2) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !0
  %3 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !0
  %5 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %4, %struct.rtx_def* %5, %struct.rtx_def* %call6) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call15
}
