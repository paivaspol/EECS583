define %struct.rtx_def* @gen_strsetqi_rex64(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @x86_single_stringop, align 4, !tbaa !3
  %1 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %2 = load i32* @optimize_size, align 4, !tbaa !3
  %3 = or i32 %and, %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_strsetqi_rex_1(%struct.rtx_def* %operand0, %struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #6
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #4
  %call7 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

if.end:                                           ; preds = %entry
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %operand0) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %operand1) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !0
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %operand0, %struct.rtx_def* %5) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call14, %struct.rtx_def* %call16) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call17) #4
  %call19 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.then ], [ %call20, %if.end ]
  ret %struct.rtx_def* %retval.0
}
