define %struct.rtx_def* @gen_ffssi2(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %lo = alloca %struct.rtx_def*, align 8
  %hi = alloca %struct.rtx_def*, align 8
  %mem = alloca %struct.rtx_def*, align 8
  call void @start_sequence() #4
  %call = call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  %call2 = call %struct.rtx_def* @gen_reg_rtx(i32 4) #4
  %0 = load i32* @x86_cmove, align 4, !tbaa !3
  %1 = load i32* @ix86_arch, align 4, !tbaa !3
  %shl = shl i32 1, %1
  %and = and i32 %shl, %0
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32* @target_flags, align 4, !tbaa !3
  %and5 = and i32 %2, 327680
  %cmp = icmp eq i32 %and5, 0
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !0
  %call6 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %3) #4
  %call7 = call %struct.rtx_def* @gen_ffssi_1(%struct.rtx_def* %call, %struct.rtx_def* %operand1) #6
  %call8 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %call9, %struct.rtx_def* %4) #4
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call10, %struct.rtx_def* %call2, %struct.rtx_def* %call) #4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call11) #4
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !0
  %call14 = call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %5) #6
  %call15 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call17 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  br label %if.end74

if.else:                                          ; preds = %lor.lhs.false
  %6 = load i32* @ix86_cpu, align 4, !tbaa !5
  %cmp18 = icmp ne i32 %6, 2
  %7 = load i32* @optimize_size, align 4, !tbaa !3
  %tobool19 = icmp ne i32 %7, 0
  %or.cond = or i1 %cmp18, %tobool19
  br i1 %or.cond, label %if.else56, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %if.else
  %and21 = and i32 %2, 1
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.else56, label %if.then23

if.then23:                                        ; preds = %land.lhs.true20
  %call25 = call %struct.rtx_def* @gen_label_rtx() #4
  %call29 = call %struct.rtx_def* @assign_386_stack_local(i32 5, i32 0) #4
  store %struct.rtx_def* %call29, %struct.rtx_def** %mem, align 8, !tbaa !0
  %call31 = call %struct.rtx_def* @gen_reg_rtx(i32 16) #4
  call void @split_di(%struct.rtx_def** %mem, i32 1, %struct.rtx_def** %lo, %struct.rtx_def** %hi) #4
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call32 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %8) #4
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %operand1, %struct.rtx_def* %9, i32 103, %struct.rtx_def* null, i32 4, i32 1, %struct.rtx_def* %call25) #4
  %10 = load %struct.rtx_def** %hi, align 8, !tbaa !0
  %call33 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %call) #4
  %call34 = call %struct.rtx_def* @gen_subsi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %operand1) #6
  %call35 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call34) #4
  %call36 = call %struct.rtx_def* @gen_andsi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %operand1) #6
  %call37 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36) #4
  %11 = load %struct.rtx_def** %lo, align 8, !tbaa !0
  %call38 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %11, %struct.rtx_def* %call) #4
  %12 = load %struct.rtx_def** %mem, align 8, !tbaa !0
  %call.i = call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 16, %struct.rtx_def* %12) #4
  %call1.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call31, %struct.rtx_def* %call.i) #4
  %call40 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #4
  %13 = load %struct.rtx_def** %mem, align 8, !tbaa !0
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %call42 = call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %14) #4
  %call43 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call42, %struct.rtx_def* %call31) #4
  %15 = load %struct.rtx_def** %hi, align 8, !tbaa !0
  %call44 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %15) #4
  %call45 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 20) #4
  %call46 = call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %call45) #6
  %call47 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call46) #4
  %call48 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1022) #4
  %call49 = call %struct.rtx_def* @gen_subsi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %call48) #6
  %call50 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call49) #4
  %call51 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call25) #4
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %call25, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx53 to i32*
  store i32 1, i32* %rtint, align 4, !tbaa !3
  %call55 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  br label %if.end74

if.else56:                                        ; preds = %land.lhs.true20, %if.else
  %16 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call57 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %16) #4
  %call58 = call %struct.rtx_def* @gen_ffssi_1(%struct.rtx_def* %call, %struct.rtx_def* %operand1) #6
  %call59 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call58) #4
  %call60 = call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %call2) #4
  %call61 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call60) #4
  %call62 = call %struct.rtx_def* @gen_rtx_REG(i32 56, i32 17) #4
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call63 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 2, %struct.rtx_def* %call62, %struct.rtx_def* %17) #4
  %call64 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call61, %struct.rtx_def* %call63) #4
  %call65 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call64) #4
  %call66 = call %struct.rtx_def* @gen_negsi2(%struct.rtx_def* %call2, %struct.rtx_def* %call2) #6
  %call67 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call66) #4
  %call68 = call %struct.rtx_def* @gen_iorsi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %call2) #6
  %call69 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call68) #4
  %18 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !0
  %call70 = call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %18) #6
  %call71 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call70) #4
  %call73 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %call) #4
  br label %if.end74

if.end74:                                         ; preds = %if.then23, %if.else56, %if.then
  %call75 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  ret %struct.rtx_def* %call75
}
