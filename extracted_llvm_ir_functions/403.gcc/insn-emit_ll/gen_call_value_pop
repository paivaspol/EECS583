define %struct.rtx_def* @gen_call_value_pop(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* nocapture %operand3, %struct.rtx_def* %operand4) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand0}, i64 0, metadata !4026), !dbg !9536
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand1}, i64 0, metadata !4027), !dbg !9537
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand2}, i64 0, metadata !4028), !dbg !9538
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand3}, i64 0, metadata !4029), !dbg !9539
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand4}, i64 0, metadata !4030), !dbg !9540
  tail call void @llvm.dbg.value(metadata !6291, i64 0, metadata !4031), !dbg !9541
  tail call void @start_sequence() #5, !dbg !9542
  tail call void @llvm.dbg.declare(metadata !7922, metadata !4032), !dbg !9543
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !9544, !tbaa !5356
  %cmp = icmp eq %struct.rtx_def* %0, %operand4, !dbg !9544
  br i1 %cmp, label %cleanup, label %if.end, !dbg !9544

if.end:                                           ; preds = %entry
  %1 = load i32* @flag_pic, align 4, !dbg !9546, !tbaa !6384
  %tobool = icmp eq i32 %1, 0, !dbg !9546
  %arrayidx28.pre = getelementptr inbounds %struct.rtx_def* %operand1, i64 0, i32 1, i64 0, !dbg !9547
  %rtx29.pre = bitcast %union.rtunion_def* %arrayidx28.pre to %struct.rtx_def**, !dbg !9547
  br i1 %tobool, label %if.end25, label %land.lhs.true, !dbg !9546

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.rtx_def** %rtx29.pre, align 8, !dbg !9546, !tbaa !5356
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !9546
  %bf.load = load i32* %3, align 8, !dbg !9546
  %4 = and i32 %bf.load, 134283263, !dbg !9546
  %5 = icmp eq i32 %4, 68, !dbg !9546
  br i1 %5, label %if.then22, label %if.end25, !dbg !9546

if.then22:                                        ; preds = %land.lhs.true
  %6 = load %struct.function** @cfun, align 8, !dbg !9548, !tbaa !5356
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %6, i64 0, i32 56, !dbg !9548
  %7 = bitcast [4 x i8]* %uses_pic_offset_table to i32*, !dbg !9548
  %bf.load23 = load i32* %7, align 8, !dbg !9548
  %bf.set = or i32 %bf.load23, 2097152, !dbg !9548
  store i32 %bf.set, i32* %7, align 8, !dbg !9548
  br label %if.end25, !dbg !9548

if.end25:                                         ; preds = %if.end, %if.then22, %land.lhs.true
  %8 = load %struct.rtx_def** %rtx29.pre, align 8, !dbg !9547, !tbaa !5356
  %9 = load i32* @target_flags, align 4, !dbg !9547, !tbaa !6384
  %and = lshr i32 %9, 25, !dbg !9547
  %10 = and i32 %and, 1, !dbg !9547
  %11 = or i32 %10, 4, !dbg !9547
  %call31 = tail call i32 @call_insn_operand(%struct.rtx_def* %8, i32 %11) #5, !dbg !9547
  %tobool32 = icmp eq i32 %call31, 0, !dbg !9547
  br i1 %tobool32, label %if.then33, label %cleanup.cont, !dbg !9547

if.then33:                                        ; preds = %if.end25
  %12 = load i32* @target_flags, align 4, !dbg !9549, !tbaa !6384
  %and34 = lshr i32 %12, 25, !dbg !9549
  %13 = and i32 %and34, 1, !dbg !9549
  %14 = or i32 %13, 4, !dbg !9549
  %15 = load %struct.rtx_def** %rtx29.pre, align 8, !dbg !9549, !tbaa !5356
  %call41 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %14, %struct.rtx_def* %15) #5, !dbg !9549
  %16 = getelementptr inbounds %union.rtunion_def* %arrayidx28.pre, i64 0, i32 0, !dbg !9549
  %call41.c = ptrtoint %struct.rtx_def* %call41 to i64, !dbg !9549
  store i64 %call41.c, i64* %16, align 8, !dbg !9549, !tbaa !5356
  br label %cleanup.cont, !dbg !9549

cleanup:                                          ; preds = %entry
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !9550, !tbaa !5356
  %call = tail call %struct.rtx_def* @gen_call_value(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2, %struct.rtx_def* %17) #7, !dbg !9550
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #5, !dbg !9550
  %call10 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !9552
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call10}, i64 0, metadata !4031), !dbg !9552
  tail call void @end_sequence() #5, !dbg !9552
  br label %return

cleanup.cont:                                     ; preds = %if.end25, %if.then33
  %call52 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #5, !dbg !9553
  %call53 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %operand0, %struct.rtx_def* %call52) #5, !dbg !9553
  %call54 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #5, !dbg !9553
  %call55 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #5, !dbg !9553
  %call56 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call55, %struct.rtx_def* %operand4) #5, !dbg !9553
  %call57 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call54, %struct.rtx_def* %call56) #5, !dbg !9553
  %call58 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call53, %struct.rtx_def* %call57) #5, !dbg !9553
  %call59 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call58) #5, !dbg !9553
  %call60 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call59) #5, !dbg !9553
  %call61 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !9554
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call61}, i64 0, metadata !4031), !dbg !9554
  tail call void @end_sequence() #5, !dbg !9555
  br label %return, !dbg !9556

return:                                           ; preds = %cleanup, %cleanup.cont
  %retval.1 = phi %struct.rtx_def* [ %call10, %cleanup ], [ %call61, %cleanup.cont ]
  ret %struct.rtx_def* %retval.1, !dbg !9557
}
