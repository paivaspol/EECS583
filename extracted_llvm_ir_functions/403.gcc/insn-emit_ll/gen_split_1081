define %struct.rtx_def* @gen_split_1081(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !4
  %sh_prom = trunc i64 %1 to i32
  %shl = shl i32 1, %sh_prom
  %conv = sext i32 %shl to i64
  %call = tail call i64 @trunc_int_for_mode(i64 %conv, i32 5) #4
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !0
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 5, %struct.rtx_def* %3, %struct.rtx_def* %call2) #4
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call7) #4
  %call9 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call10
}
