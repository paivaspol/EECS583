define %struct.rtx_def* @gen_allocate_stack(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand0}, i64 0, metadata !4556), !dbg !10546
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand1}, i64 0, metadata !4557), !dbg !10547
  tail call void @llvm.dbg.value(metadata !6291, i64 0, metadata !4558), !dbg !10548
  tail call void @start_sequence() #5, !dbg !10549
  tail call void @llvm.dbg.declare(metadata !6294, metadata !4559), !dbg !10550
  %call = tail call %struct.rtx_def* @copy_to_mode_reg(i32 4, %struct.rtx_def* %operand1) #5, !dbg !10551
  %call3 = tail call %struct.rtx_def* @gen_allocate_stack_worker(%struct.rtx_def* %call) #7, !dbg !10551
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call3) #5, !dbg !10551
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !dbg !10553, !tbaa !5356
  %call6 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %operand0, %struct.rtx_def* %0) #5, !dbg !10553
  %call7 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !10554
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call7}, i64 0, metadata !4558), !dbg !10554
  tail call void @end_sequence() #5, !dbg !10554
  ret %struct.rtx_def* %call7, !dbg !10554
}
