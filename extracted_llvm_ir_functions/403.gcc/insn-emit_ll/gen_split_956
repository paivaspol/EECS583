define %struct.rtx_def* @gen_split_956(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !0
  %1 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 %3, %struct.rtx_def* %4) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %5 = load i32* @target_flags, align 4, !tbaa !3
  %and5 = lshr i32 %5, 25
  %6 = and i32 %and5, 1
  %7 = or i32 %6, 4
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %8 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !0
  %call9 = tail call %struct.rtx_def* @gen_lowpart(i32 %7, %struct.rtx_def* %8) #4
  store %struct.rtx_def* %call9, %struct.rtx_def** %arrayidx8, align 8, !tbaa !0
  %9 = load i32* @target_flags, align 4, !tbaa !3
  %and11 = lshr i32 %9, 25
  %10 = and i32 %and11, 1
  %11 = or i32 %10, 4
  %12 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %13 = load %struct.rtx_def** %arrayidx18, align 8, !tbaa !0
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %11, %struct.rtx_def* %12, %struct.rtx_def* %13) #4
  %14 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !0
  %call21 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %11, %struct.rtx_def* %call19, %struct.rtx_def* %14) #4
  %15 = load i32* @target_flags, align 4, !tbaa !3
  %and22 = and i32 %15, 33554432
  %tobool23 = icmp eq i32 %and22, 0
  br i1 %tobool23, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call25 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call21, i32 0) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %pat.0 = phi %struct.rtx_def* [ %call25, %if.then ], [ %call21, %entry ]
  %16 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %16, %struct.rtx_def* %pat.0) #4
  %call28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call29
}
