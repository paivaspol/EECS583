define %struct.rtx_def* @gen_split_1135(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %operands}, i64 0, metadata !3772), !dbg !9218
  tail call void @llvm.dbg.value(metadata !6291, i64 0, metadata !3775), !dbg !9219
  tail call void @start_sequence() #5, !dbg !9220
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1, !dbg !9221
  %0 = load %struct.rtx_def** %arrayidx, align 8, !dbg !9221, !tbaa !5356
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #5, !dbg !9221
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !3776), !dbg !9221
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !dbg !9222, !tbaa !5356
  %1 = bitcast %struct.rtx_def* %call to i32*, !dbg !9223
  %bf.load = load i32* %1, align 8, !dbg !9223
  %bf.clear = and i32 %bf.load, -16711681, !dbg !9223
  %bf.set = or i32 %bf.clear, 131072, !dbg !9223
  store i32 %bf.set, i32* %1, align 8, !dbg !9223
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, !dbg !9224
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**, !dbg !9224
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !9224, !tbaa !5356
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !9224
  %bf.load3 = load i32* %3, align 8, !dbg !9224
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !9224
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !9224
  %bf.clear4.off = add i32 %bf.clear4, -57, !dbg !9224
  %switch = icmp ult i32 %bf.clear4.off, 2, !dbg !9224
  %bf.clear16 = and i32 %bf.load, 65535, !dbg !9224
  br i1 %switch, label %cond.false, label %cond.true, !dbg !9224

cond.true:                                        ; preds = %entry
  %call14 = tail call i32 @reverse_condition(i32 %bf.clear16) #5, !dbg !9224
  br label %cond.end, !dbg !9224

cond.false:                                       ; preds = %entry
  %call17 = tail call i32 @reverse_condition_maybe_unordered(i32 %bf.clear16) #5, !dbg !9224
  br label %cond.end, !dbg !9224

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ %call17, %cond.false ], !dbg !9224
  %bf.load18 = load i32* %1, align 8, !dbg !9224
  %bf.value = and i32 %cond, 65535, !dbg !9224
  %bf.clear19 = and i32 %bf.load18, -65536, !dbg !9224
  %bf.set20 = or i32 %bf.clear19, %bf.value, !dbg !9224
  store i32 %bf.set20, i32* %1, align 8, !dbg !9224
  %call21 = tail call i32 @ix86_comparison_operator(%struct.rtx_def* %call, i32 0) #5, !dbg !9225
  %tobool = icmp eq i32 %call21, 0, !dbg !9225
  br i1 %tobool, label %if.then, label %if.end, !dbg !9225

if.then:                                          ; preds = %cond.end
  tail call void @end_sequence() #5, !dbg !9226
  br label %return, !dbg !9226

if.end:                                           ; preds = %cond.end
  %4 = load %struct.rtx_def** %operands, align 8, !dbg !9227, !tbaa !5356
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %4}, i64 0, metadata !3773), !dbg !9227
  %5 = load %struct.rtx_def** %arrayidx, align 8, !dbg !9228, !tbaa !5356
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %5}, i64 0, metadata !3774), !dbg !9228
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %5) #5, !dbg !9229
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #5, !dbg !9229
  %call26 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !9230
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call26}, i64 0, metadata !3775), !dbg !9230
  tail call void @end_sequence() #5, !dbg !9231
  br label %return, !dbg !9232

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call26, %if.end ], [ null, %if.then ]
  ret %struct.rtx_def* %retval.0, !dbg !9233
}
