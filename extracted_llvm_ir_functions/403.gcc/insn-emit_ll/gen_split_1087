define %struct.rtx_def* @gen_split_1087(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %operands}, i64 0, metadata !3438), !dbg !8771
  tail call void @llvm.dbg.value(metadata !6291, i64 0, metadata !3439), !dbg !8772
  tail call void @start_sequence() #5, !dbg !8773
  %0 = load %struct.rtx_def** %operands, align 8, !dbg !8774, !tbaa !5356
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %0) #5, !dbg !8774
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !dbg !8774, !tbaa !5356
  %1 = load i32* @target_flags, align 4, !dbg !8775, !tbaa !6384
  %and = lshr i32 %1, 25, !dbg !8775
  %2 = and i32 %and, 1, !dbg !8775
  %3 = or i32 %2, 4, !dbg !8775
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1, !dbg !8775
  %4 = load %struct.rtx_def** %arrayidx2, align 8, !dbg !8775, !tbaa !5356
  %call3 = tail call %struct.rtx_def* @gen_lowpart(i32 %3, %struct.rtx_def* %4) #5, !dbg !8775
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx2, align 8, !dbg !8775, !tbaa !5356
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 2, !dbg !8776
  %5 = load %struct.rtx_def** %arrayidx5, align 8, !dbg !8776, !tbaa !5356
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0, !dbg !8776
  %6 = load i64* %rtwint, align 8, !dbg !8776, !tbaa !6478
  %sh_prom = trunc i64 %6 to i32, !dbg !8776
  %shl = shl i32 1, %sh_prom, !dbg !8776
  %conv = sext i32 %shl to i64, !dbg !8776
  %7 = load i32* @target_flags, align 4, !dbg !8776, !tbaa !6384
  %and7 = lshr i32 %7, 25, !dbg !8776
  %8 = and i32 %and7, 1, !dbg !8776
  %9 = or i32 %8, 4, !dbg !8776
  %call10 = tail call i64 @trunc_int_for_mode(i64 %conv, i32 %9) #5, !dbg !8776
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call10) #5, !dbg !8776
  store %struct.rtx_def* %call11, %struct.rtx_def** %arrayidx5, align 8, !dbg !8776, !tbaa !5356
  %10 = load i32* @target_flags, align 4, !dbg !8777, !tbaa !6384
  %and13 = lshr i32 %10, 25, !dbg !8777
  %11 = and i32 %and13, 1, !dbg !8777
  %12 = or i32 %11, 4, !dbg !8777
  %13 = load %struct.rtx_def** %arrayidx2, align 8, !dbg !8777, !tbaa !5356
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %12, %struct.rtx_def* %13, %struct.rtx_def* %call11) #5, !dbg !8777
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call18}, i64 0, metadata !3440), !dbg !8777
  %14 = load i32* @target_flags, align 4, !dbg !8778, !tbaa !6384
  %and19 = and i32 %14, 33554432, !dbg !8778
  %tobool20 = icmp eq i32 %and19, 0, !dbg !8778
  br i1 %tobool20, label %if.end, label %if.then, !dbg !8778

if.then:                                          ; preds = %entry
  %call23 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call18, i32 0) #5, !dbg !8779
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call23}, i64 0, metadata !3440), !dbg !8779
  br label %if.end, !dbg !8779

if.end:                                           ; preds = %entry, %if.then
  %pat.0 = phi %struct.rtx_def* [ %call23, %if.then ], [ %call18, %entry ]
  %15 = load %struct.rtx_def** %operands, align 8, !dbg !8780, !tbaa !5356
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %15, %struct.rtx_def* %pat.0) #5, !dbg !8780
  %call26 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call25) #5, !dbg !8780
  %call27 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !8781
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call27}, i64 0, metadata !3439), !dbg !8781
  tail call void @end_sequence() #5, !dbg !8781
  ret %struct.rtx_def* %call27, !dbg !8781
}
