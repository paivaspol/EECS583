define %struct.rtx_def* @gen_split_1158(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %3 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %4 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %5 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !0
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %6 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !0
  tail call void @ix86_split_fp_branch(i32 %bf.clear, %struct.rtx_def* %2, %struct.rtx_def* %3, %struct.rtx_def* %4, %struct.rtx_def* %5, %struct.rtx_def* %6) #4
  %call = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call
}
