define %struct.rtx_def* @gen_movv4si(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1) #0 {
entry:
  %operands = alloca [2 x %struct.rtx_def*], align 16
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand0}, i64 0, metadata !5083), !dbg !11441
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand1}, i64 0, metadata !5084), !dbg !11442
  call void @llvm.dbg.value(metadata !6291, i64 0, metadata !5085), !dbg !11443
  call void @start_sequence() #5, !dbg !11444
  call void @llvm.dbg.declare(metadata !{[2 x %struct.rtx_def*]* %operands}, metadata !5086), !dbg !11445
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0, !dbg !11446
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !dbg !11446, !tbaa !5356
  %arrayidx1 = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1, !dbg !11447
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !dbg !11447, !tbaa !5356
  call void @ix86_expand_vector_move(i32 37, %struct.rtx_def** %arrayidx) #5, !dbg !11448
  %call = call %struct.rtx_def* @gen_sequence() #5, !dbg !11450
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !5085), !dbg !11450
  call void @end_sequence() #5, !dbg !11450
  ret %struct.rtx_def* %call, !dbg !11450
}
