define %struct.rtx_def* @gen_split_962(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %2, %struct.rtx_def* %3) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %4 = load i32* @target_flags, align 4, !tbaa !3
  %and2 = lshr i32 %4, 25
  %5 = and i32 %and2, 1
  %6 = or i32 %5, 4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %7 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !0
  %call6 = tail call %struct.rtx_def* @gen_lowpart(i32 %6, %struct.rtx_def* %7) #4
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx5, align 8, !tbaa !0
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %9 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %9, %struct.rtx_def* %call6) #4
  %call12 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call11, i32 0) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 5, %struct.rtx_def* %call12) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %8, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call16
}
