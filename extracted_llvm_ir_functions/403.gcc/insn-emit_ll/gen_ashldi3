define %struct.rtx_def* @gen_ashldi3(%struct.rtx_def* %operand0, %struct.rtx_def* %operand1, %struct.rtx_def* %operand2) #0 {
entry:
  %operands = alloca [3 x %struct.rtx_def*], align 16
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand0}, i64 0, metadata !3389), !dbg !8695
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand1}, i64 0, metadata !3390), !dbg !8696
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand2}, i64 0, metadata !3391), !dbg !8697
  call void @llvm.dbg.value(metadata !6291, i64 0, metadata !3392), !dbg !8698
  call void @start_sequence() #5, !dbg !8699
  call void @llvm.dbg.declare(metadata !{[3 x %struct.rtx_def*]* %operands}, metadata !3393), !dbg !8700
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 0, !dbg !8701
  store %struct.rtx_def* %operand0, %struct.rtx_def** %arrayidx, align 16, !dbg !8701, !tbaa !5356
  %arrayidx1 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 1, !dbg !8702
  store %struct.rtx_def* %operand1, %struct.rtx_def** %arrayidx1, align 8, !dbg !8702, !tbaa !5356
  %arrayidx2 = getelementptr inbounds [3 x %struct.rtx_def*]* %operands, i64 0, i64 2, !dbg !8703
  store %struct.rtx_def* %operand2, %struct.rtx_def** %arrayidx2, align 16, !dbg !8703, !tbaa !5356
  %0 = load i32* @target_flags, align 4, !dbg !8704, !tbaa !6384
  %and = and i32 %0, 33554432, !dbg !8704
  %tobool = icmp eq i32 %and, 0, !dbg !8704
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8704

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @x86_cmove, align 4, !dbg !8704, !tbaa !6384
  %2 = load i32* @ix86_arch, align 4, !dbg !8704, !tbaa !6384
  %shl = shl i32 1, %2, !dbg !8704
  %and3 = and i32 %shl, %1, !dbg !8704
  %tobool4 = icmp eq i32 %and3, 0, !dbg !8704
  br i1 %tobool4, label %lor.lhs.false, label %land.lhs.true6, !dbg !8704

lor.lhs.false:                                    ; preds = %land.lhs.true
  %and5 = and i32 %0, 327680, !dbg !8704
  %cmp = icmp eq i32 %and5, 0, !dbg !8704
  br i1 %cmp, label %if.end, label %land.lhs.true6, !dbg !8704

land.lhs.true6:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %call = call i32 @immediate_operand(%struct.rtx_def* %operand2, i32 2) #5, !dbg !8704
  %tobool8 = icmp eq i32 %call, 0, !dbg !8704
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8704

if.then:                                          ; preds = %land.lhs.true6
  %3 = load %struct.rtx_def** %arrayidx, align 16, !dbg !8706, !tbaa !5356
  %4 = load %struct.rtx_def** %arrayidx1, align 8, !dbg !8706, !tbaa !5356
  %5 = load %struct.rtx_def** %arrayidx2, align 16, !dbg !8706, !tbaa !5356
  %call12 = call %struct.rtx_def* @gen_ashldi3_1(%struct.rtx_def* %3, %struct.rtx_def* %4, %struct.rtx_def* %5) #7, !dbg !8706
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #5, !dbg !8706
  %call14 = call %struct.rtx_def* @gen_sequence() #5, !dbg !8708
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call14}, i64 0, metadata !3392), !dbg !8708
  call void @end_sequence() #5, !dbg !8708
  br label %return, !dbg !8708

if.end:                                           ; preds = %land.lhs.true6, %lor.lhs.false, %entry
  call void @ix86_expand_binary_operator(i32 87, i32 5, %struct.rtx_def** %arrayidx) #5, !dbg !8709
  %call15 = call %struct.rtx_def* @gen_sequence() #5, !dbg !8710
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call15}, i64 0, metadata !3392), !dbg !8710
  call void @end_sequence() #5, !dbg !8710
  br label %return, !dbg !8710

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end ], [ %call14, %if.then ]
  ret %struct.rtx_def* %retval.0, !dbg !8711
}
