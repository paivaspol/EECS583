define %struct.rtx_def* @gen_split_961(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %2 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %2, 25
  %3 = and i32 %and, 1
  %4 = or i32 %3, 4
  %cmp = icmp eq i32 %bf.clear, %4
  %arrayidx18.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  %arrayidx19.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  br label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def** %arrayidx18.pre, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @gen_lowpart(i32 %4, %struct.rtx_def* %5) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx18.pre, align 8, !tbaa !0
  %6 = load i32* @target_flags, align 4, !tbaa !3
  %and6 = lshr i32 %6, 25
  %7 = and i32 %and6, 1
  %8 = or i32 %7, 4
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %9 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !0
  %call10 = tail call %struct.rtx_def* @gen_lowpart(i32 %8, %struct.rtx_def* %9) #4
  store %struct.rtx_def* %call10, %struct.rtx_def** %arrayidx9, align 8, !tbaa !0
  %.pre = load %struct.rtx_def** %operands, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %arrayidx19.pre-phi = phi %struct.rtx_def** [ %arrayidx19.pre, %entry.if.end_crit_edge ], [ %arrayidx9, %if.then ]
  %10 = phi %struct.rtx_def* [ %0, %entry.if.end_crit_edge ], [ %.pre, %if.then ]
  %call13 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %10) #4
  store %struct.rtx_def* %call13, %struct.rtx_def** %operands, align 8, !tbaa !0
  %11 = load i32* @target_flags, align 4, !tbaa !3
  %and15 = lshr i32 %11, 25
  %12 = and i32 %and15, 1
  %13 = or i32 %12, 4
  %14 = load %struct.rtx_def** %arrayidx18.pre, align 8, !tbaa !0
  %15 = load %struct.rtx_def** %arrayidx19.pre-phi, align 8, !tbaa !0
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %13, %struct.rtx_def* %14, %struct.rtx_def* %15) #4
  %16 = load i32* @target_flags, align 4, !tbaa !3
  %and21 = and i32 %16, 33554432
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.end27, label %if.then25

if.then25:                                        ; preds = %if.end
  %call26 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call20, i32 0) #4
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then25
  %pat.0 = phi %struct.rtx_def* [ %call26, %if.then25 ], [ %call20, %if.end ]
  %17 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %17, %struct.rtx_def* %pat.0) #4
  %call30 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call31
}
