define %struct.rtx_def* @gen_split_1214(%struct.rtx_def** %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %add.ptr = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %add.ptr2 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  tail call void @split_di(%struct.rtx_def** %add.ptr, i32 1, %struct.rtx_def** %add.ptr1, %struct.rtx_def** %add.ptr2) #4
  %add.ptr3 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %add.ptr4 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  %add.ptr5 = getelementptr inbounds %struct.rtx_def** %operands, i64 8
  tail call void @split_di(%struct.rtx_def** %add.ptr3, i32 1, %struct.rtx_def** %add.ptr4, %struct.rtx_def** %add.ptr5) #4
  tail call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %add.ptr, %struct.rtx_def** %add.ptr3) #4
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !0
  %1 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !0
  %2 = load %struct.rtx_def** %add.ptr3, align 8, !tbaa !0
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %3 = load %struct.rtx_def** %arrayidx11, align 8, !tbaa !0
  %4 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !0
  %5 = load %struct.rtx_def** %add.ptr2, align 8, !tbaa !0
  %6 = load %struct.rtx_def** %add.ptr4, align 8, !tbaa !0
  %7 = load %struct.rtx_def** %add.ptr5, align 8, !tbaa !0
  %8 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear, i32 %bf.clear17, %struct.rtx_def* %3, %struct.rtx_def* %9) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call, %struct.rtx_def* %4, %struct.rtx_def* %6) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call19) #4
  %bf.load21 = load i32* %8, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %bf.lshr24 = lshr i32 %bf.load21, 16
  %bf.clear25 = and i32 %bf.lshr24, 255
  %call26 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %3) #4
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call27 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 %bf.clear22, i32 %bf.clear25, %struct.rtx_def* %call26, %struct.rtx_def* %10) #4
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call27, %struct.rtx_def* %5, %struct.rtx_def* %7) #4
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call28) #4
  %call30 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call29) #4
  %call31 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call31
}
