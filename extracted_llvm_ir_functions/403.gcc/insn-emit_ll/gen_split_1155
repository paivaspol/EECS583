define %struct.rtx_def* @gen_split_1155(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, -16711681
  store i32 %bf.clear, i32* %1, align 8
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %3) #4
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !0
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %call, %struct.rtx_def* %5) #4
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call3) #4
  %call5 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call4) #4
  %call6 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call6
}
