define %struct.rtx_def* @gen_untyped_call(%struct.rtx_def* %operand0, %struct.rtx_def* nocapture %operand1, %struct.rtx_def* nocapture %operand2) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand0}, i64 0, metadata !4054), !dbg !9596
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand1}, i64 0, metadata !4055), !dbg !9597
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %operand2}, i64 0, metadata !4056), !dbg !9598
  tail call void @llvm.dbg.value(metadata !6291, i64 0, metadata !4057), !dbg !9599
  tail call void @start_sequence() #5, !dbg !9600
  tail call void @llvm.dbg.declare(metadata !6438, metadata !4058), !dbg !9601
  %0 = load i32* @target_flags, align 4, !dbg !9602, !tbaa !6384
  %and = and i32 %0, 32, !dbg !9602
  %tobool = icmp eq i32 %and, 0, !dbg !9602
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9602

cond.true:                                        ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 23, i32 8) #5, !dbg !9603
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !9603, !tbaa !5356
  %2 = load i32* @target_flags, align 4, !dbg !9604, !tbaa !6384
  %and4 = lshr i32 %2, 22, !dbg !9604
  %3 = and i32 %and4, 8, !dbg !9604
  %sub = add nsw i32 %3, -1, !dbg !9604
  %conv = sext i32 %sub to i64, !dbg !9604
  %call6 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5, !dbg !9604
  %call7 = tail call %struct.rtx_def* @gen_call_value(%struct.rtx_def* %call, %struct.rtx_def* %operand0, %struct.rtx_def* %1, %struct.rtx_def* %call6) #7, !dbg !9604
  br label %cond.end, !dbg !9604

cond.false:                                       ; preds = %entry
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !9605, !tbaa !5356
  %and9 = lshr i32 %0, 22, !dbg !9606
  %5 = and i32 %and9, 8, !dbg !9606
  %sub12 = add nsw i32 %5, -1, !dbg !9606
  %conv13 = sext i32 %sub12 to i64, !dbg !9606
  %call14 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv13) #5, !dbg !9606
  %call15 = tail call %struct.rtx_def* @gen_call(%struct.rtx_def* %operand0, %struct.rtx_def* %4, %struct.rtx_def* %call14) #7, !dbg !9606
  br label %cond.end, !dbg !9606

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.rtx_def* [ %call7, %cond.true ], [ %call15, %cond.false ], !dbg !9606
  %call17 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %cond16) #5, !dbg !9606
  tail call void @llvm.dbg.value(metadata !272, i64 0, metadata !4060), !dbg !9607
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %operand2, i64 0, i32 1, i64 0, !dbg !9607
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**, !dbg !9607
  %6 = load %struct.rtvec_def** %rtvec, align 8, !dbg !9607, !tbaa !5356
  %num_elem40 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 0, !dbg !9607
  %7 = load i32* %num_elem40, align 4, !dbg !9607, !tbaa !6384
  %cmp41 = icmp sgt i32 %7, 0, !dbg !9607
  br i1 %cmp41, label %for.body, label %for.end, !dbg !9607

for.body:                                         ; preds = %cond.end, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ]
  %8 = phi %struct.rtvec_def* [ %12, %for.body ], [ %6, %cond.end ]
  %arrayidx25 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv, !dbg !9608
  %9 = load %struct.rtx_def** %arrayidx25, align 8, !dbg !9608, !tbaa !5356
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %9}, i64 0, metadata !4062), !dbg !9608
  %fld26 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, !dbg !9609
  %rtx = bitcast [1 x %union.rtunion_def]* %fld26 to %struct.rtx_def**, !dbg !9609
  %10 = load %struct.rtx_def** %rtx, align 8, !dbg !9609, !tbaa !5356
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1, !dbg !9609
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !9609
  %11 = load %struct.rtx_def** %rtx30, align 8, !dbg !9609, !tbaa !5356
  %call31 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %11) #5, !dbg !9609
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !9607
  %12 = load %struct.rtvec_def** %rtvec, align 8, !dbg !9607, !tbaa !5356
  %num_elem = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0, !dbg !9607
  %13 = load i32* %num_elem, align 4, !dbg !9607, !tbaa !6384
  %14 = trunc i64 %indvars.iv.next to i32, !dbg !9607
  %cmp = icmp slt i32 %14, %13, !dbg !9607
  br i1 %cmp, label %for.body, label %for.end, !dbg !9607

for.end:                                          ; preds = %for.body, %cond.end
  %15 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !9610, !tbaa !5356
  %call.i = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %15) #5, !dbg !9610
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 43, i32 0, %struct.rtvec_def* %call.i, i32 0) #5, !dbg !9610
  %call33 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #5, !dbg !9611
  %call34 = tail call %struct.rtx_def* @gen_sequence() #5, !dbg !9612
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call34}, i64 0, metadata !4057), !dbg !9612
  tail call void @end_sequence() #5, !dbg !9612
  ret %struct.rtx_def* %call34, !dbg !9612
}
