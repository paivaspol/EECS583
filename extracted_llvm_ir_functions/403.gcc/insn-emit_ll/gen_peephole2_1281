define %struct.rtx_def* @gen_peephole2_1281(%struct.rtx_def* nocapture %curr_insn, %struct.rtx_def** nocapture %operands) #0 {
entry:
  %_regs_allocated = alloca i64, align 8
  store i64 0, i64* %_regs_allocated, align 8, !tbaa !4
  %call = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  store %struct.rtx_def* %call, %struct.rtx_def** %operands, align 8, !tbaa !0
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = call %struct.rtx_def* @peep2_find_free_register(i32 0, i32 0, i8* getelementptr inbounds ([2 x i8]* @.str1, i64 0, i64 0), i32 4, i64* %_regs_allocated) #4
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  store %struct.rtx_def* %call1, %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %cmp3 = icmp eq %struct.rtx_def* %call1, null
  br i1 %cmp3, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  call void @start_sequence() #4
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  %call8 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call9 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call8) #4
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call9) #4
  %call11 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call12 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call13 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call12, %struct.rtx_def* %call13) #4
  %call15 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %call14) #4
  %call16 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call10, %struct.rtx_def* %call15) #4
  %call17 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call16) #4
  %call18 = call %struct.rtx_def* @emit(%struct.rtx_def* %call17) #4
  %call19 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call20 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call19) #4
  %call21 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %1, %struct.rtx_def* %call20) #4
  %call22 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call23 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call24 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call25 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call23, %struct.rtx_def* %call24) #4
  %call26 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call22, %struct.rtx_def* %call25) #4
  %call27 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call21, %struct.rtx_def* %call26) #4
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call27) #4
  %call29 = call %struct.rtx_def* @emit(%struct.rtx_def* %call28) #4
  %call30 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi %struct.rtx_def* [ %call30, %if.end5 ], [ null, %entry ], [ null, %if.end ]
  ret %struct.rtx_def* %retval.0
}
