define %struct.rtx_def* @gen_split_845(%struct.rtx_def** nocapture %operands) #0 {
entry:
  tail call void @start_sequence() #4
  %0 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %2, %struct.rtx_def* %3) #4
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 125, i32 %bf.clear, %struct.rtx_def* %call) #4
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx, align 8, !tbaa !0
  %6 = load %struct.rtx_def** %operands, align 8, !tbaa !0
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %7 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !0
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %call8) #4
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call9) #4
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call10, %struct.rtx_def* %7) #4
  %call12 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call11) #4
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 18) #4
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 57, %struct.rtx_def* %6, %struct.rtx_def* %call3) #4
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call13, %struct.rtx_def* %call14) #4
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call15) #4
  %call17 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %7) #4
  %call18 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call18) #4
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call19) #4
  %call21 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call22 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 7) #4
  %call23 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #4
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 4, %struct.rtx_def* %call22, %struct.rtx_def* %call23) #4
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call21, %struct.rtx_def* %call24) #4
  %call26 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call20, %struct.rtx_def* %call25) #4
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call26) #4
  %call28 = tail call %struct.rtx_def* @emit(%struct.rtx_def* %call27) #4
  %call29 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  ret %struct.rtx_def* %call29
}
