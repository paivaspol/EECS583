define void @expand_asm_operands(%union.tree_node* nocapture %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers, i32 %vol, i8* %filename, i32 %line) #0 {
entry:
  %constraint = alloca i8*, align 8
  %is_inout = alloca i8, align 1
  %allows_reg = alloca i8, align 1
  %allows_mem = alloca i8, align 1
  %allows_reg114 = alloca i8, align 1
  %allows_mem115 = alloca i8, align 1
  %constraint116 = alloca i8*, align 8
  %is_inout154 = alloca i8, align 1
  %allows_reg155 = alloca i8, align 1
  %allows_mem156 = alloca i8, align 1
  %allows_reg345 = alloca i8, align 1
  %allows_mem346 = alloca i8, align 1
  %constraint347 = alloca i8*, align 8
  %buffer = alloca [16 x i8], align 16
  %call = call i32 @list_length(%union.tree_node* %inputs) #7
  %call1 = call i32 @list_length(%union.tree_node* %outputs) #7
  %conv = sext i32 %call1 to i64
  %0 = alloca %struct.rtx_def*, i64 %conv, align 8
  %1 = alloca i32, i64 %conv, align 1
  %2 = alloca %struct.rtx_def*, i64 %conv, align 1
  %3 = alloca i32, i64 %conv, align 1
  %add = add nsw i32 %call1, %call
  %conv8 = sext i32 %add to i64
  %4 = alloca i8*, i64 %conv8, align 8
  %5 = load i32* @generating_concat_p, align 4, !tbaa !4
  %cmp = icmp eq i32 %call1, 0
  %tobool.i = icmp ne %union.tree_node* %outputs, null
  %tobool.not.i = xor i1 %tobool.i, true
  %tobool1.i = icmp eq %union.tree_node* %inputs, null
  %or.cond.i = and i1 %tobool1.i, %tobool.not.i
  br i1 %or.cond.i, label %if.end13, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cond.i = select i1 %tobool.i, %union.tree_node* %outputs, %union.tree_node* %inputs
  %purpose.i = getelementptr inbounds %union.tree_node* %cond.i, i64 0, i32 0, i32 1
  %6 = load i8** %purpose.i, align 8
  %value.i = getelementptr inbounds i8* %6, i64 32
  %7 = bitcast i8* %value.i to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !0
  %pointer.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 4
  %9 = load %union.tree_node** %pointer.i, align 8
  %10 = bitcast %union.tree_node* %9 to i8*
  %11 = load i8* %10, align 1, !tbaa !1
  %tobool1.i.i = icmp eq i8 %11, 0
  br i1 %tobool1.i.i, label %while.cond.preheader.i, label %while.body.i.i

while.cond.preheader.i:                           ; preds = %n_occurrences.exit.i, %if.then.i
  %n.0.lcssa.i47.ph.i = phi i32 [ 0, %if.then.i ], [ %add.i.i, %n_occurrences.exit.i ]
  %tobool748.i = icmp eq %union.tree_node* %outputs, null
  br i1 %tobool748.i, label %for.cond19.preheader.i, label %while.body.i

while.body.i.i:                                   ; preds = %if.then.i, %while.body.i.i
  %12 = phi i8 [ %13, %while.body.i.i ], [ %11, %if.then.i ]
  %n.03.i.i = phi i32 [ %add.i.i, %while.body.i.i ], [ 0, %if.then.i ]
  %s.addr.02.i.i = phi i8* [ %incdec.ptr.i.i, %while.body.i.i ], [ %10, %if.then.i ]
  %incdec.ptr.i.i = getelementptr inbounds i8* %s.addr.02.i.i, i64 1
  %cmp.i.i = icmp eq i8 %12, 44
  %conv1.i.i = zext i1 %cmp.i.i to i32
  %add.i.i = add nsw i32 %conv1.i.i, %n.03.i.i
  %13 = load i8* %incdec.ptr.i.i, align 1, !tbaa !1
  %tobool.i.i = icmp eq i8 %13, 0
  br i1 %tobool.i.i, label %n_occurrences.exit.i, label %while.body.i.i

n_occurrences.exit.i:                             ; preds = %while.body.i.i
  %cmp.i = icmp sgt i32 %add.i.i, 29
  br i1 %cmp.i, label %if.then6.i, label %while.cond.preheader.i

if.then6.i:                                       ; preds = %n_occurrences.exit.i
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str25, i64 0, i64 0)) #7
  br label %return

while.body.i:                                     ; preds = %while.cond.preheader.i, %if.end18.i
  %next.050.i = phi %union.tree_node* [ %.next.0.i, %if.end18.i ], [ %inputs, %while.cond.preheader.i ]
  %tmp.049.i = phi %union.tree_node* [ %next.0..i, %if.end18.i ], [ %outputs, %while.cond.preheader.i ]
  %purpose10.i = getelementptr inbounds %union.tree_node* %tmp.049.i, i64 0, i32 0, i32 1
  %14 = load i8** %purpose10.i, align 8
  %value12.i = getelementptr inbounds i8* %14, i64 32
  %15 = bitcast i8* %value12.i to %union.tree_node**
  %16 = load %union.tree_node** %15, align 8, !tbaa !0
  %pointer14.i = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 4
  %17 = load %union.tree_node** %pointer14.i, align 8
  %18 = bitcast %union.tree_node* %17 to i8*
  %19 = load i8* %18, align 1, !tbaa !1
  %tobool1.i35.i = icmp eq i8 %19, 0
  br i1 %tobool1.i35.i, label %n_occurrences.exit45.i, label %while.body.i43.i

while.body.i43.i:                                 ; preds = %while.body.i, %while.body.i43.i
  %20 = phi i8 [ %21, %while.body.i43.i ], [ %19, %while.body.i ]
  %n.03.i36.i = phi i32 [ %add.i41.i, %while.body.i43.i ], [ 0, %while.body.i ]
  %s.addr.02.i37.i = phi i8* [ %incdec.ptr.i38.i, %while.body.i43.i ], [ %18, %while.body.i ]
  %incdec.ptr.i38.i = getelementptr inbounds i8* %s.addr.02.i37.i, i64 1
  %cmp.i39.i = icmp eq i8 %20, 44
  %conv1.i40.i = zext i1 %cmp.i39.i to i32
  %add.i41.i = add nsw i32 %conv1.i40.i, %n.03.i36.i
  %21 = load i8* %incdec.ptr.i38.i, align 1, !tbaa !1
  %tobool.i42.i = icmp eq i8 %21, 0
  br i1 %tobool.i42.i, label %n_occurrences.exit45.i, label %while.body.i43.i

n_occurrences.exit45.i:                           ; preds = %while.body.i43.i, %while.body.i
  %n.0.lcssa.i44.i = phi i32 [ 0, %while.body.i ], [ %add.i41.i, %while.body.i43.i ]
  %cmp16.i = icmp eq i32 %n.0.lcssa.i44.i, %n.0.lcssa.i47.ph.i
  br i1 %cmp16.i, label %if.end18.i, label %if.then17.i

if.then17.i:                                      ; preds = %n_occurrences.exit45.i
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([63 x i8]* @.str26, i64 0, i64 0)) #7
  br label %return

if.end18.i:                                       ; preds = %n_occurrences.exit45.i
  %chain.i = getelementptr inbounds %union.tree_node* %tmp.049.i, i64 0, i32 0, i32 0, i32 0
  %22 = load %union.tree_node** %chain.i, align 8, !tbaa !0
  %tobool19.i = icmp eq %union.tree_node* %22, null
  %next.0..i = select i1 %tobool19.i, %union.tree_node* %next.050.i, %union.tree_node* %22
  %.next.0.i = select i1 %tobool19.i, %union.tree_node* null, %union.tree_node* %next.050.i
  %tobool7.i = icmp eq %union.tree_node* %next.0..i, null
  br i1 %tobool7.i, label %if.end13, label %while.body.i

if.end13:                                         ; preds = %if.end18.i, %entry
  %tobool99.i = icmp eq %union.tree_node* %outputs, null
  br i1 %tobool99.i, label %for.cond19.preheader.i, label %for.body.i

for.cond19.preheader.i:                           ; preds = %for.inc15.i, %while.cond.preheader.i, %if.end13
  %tobool99.i1023 = phi i1 [ true, %if.end13 ], [ true, %while.cond.preheader.i ], [ false, %for.inc15.i ]
  br i1 %tobool1.i, label %if.end16, label %for.body21.i

for.body.i:                                       ; preds = %if.end13, %for.inc15.i
  %i.0100.i = phi %union.tree_node* [ %29, %for.inc15.i ], [ %outputs, %if.end13 ]
  %purpose.i1008 = getelementptr inbounds %union.tree_node* %i.0100.i, i64 0, i32 0, i32 1
  %23 = load i8** %purpose.i1008, align 8
  %purpose2.i = getelementptr inbounds i8* %23, i64 24
  %24 = bitcast i8* %purpose2.i to %union.tree_node**
  %25 = load %union.tree_node** %24, align 8, !tbaa !0
  %tobool3.i = icmp eq %union.tree_node* %25, null
  br i1 %tobool3.i, label %for.inc15.i, label %for.cond4.i

for.cond4.i:                                      ; preds = %for.body.i, %for.body6.i
  %i.0.pn.i = phi %union.tree_node* [ %j.0.i, %for.body6.i ], [ %i.0100.i, %for.body.i ]
  %j.0.in.i = getelementptr inbounds %union.tree_node* %i.0.pn.i, i64 0, i32 0, i32 0, i32 0
  %j.0.i = load %union.tree_node** %j.0.in.i, align 8
  %tobool5.i = icmp eq %union.tree_node* %j.0.i, null
  br i1 %tobool5.i, label %for.inc15.i, label %for.body6.i

for.body6.i:                                      ; preds = %for.cond4.i
  %purpose8.i = getelementptr inbounds %union.tree_node* %j.0.i, i64 0, i32 0, i32 1
  %26 = load i8** %purpose8.i, align 8
  %purpose10.i1009 = getelementptr inbounds i8* %26, i64 24
  %27 = bitcast i8* %purpose10.i1009 to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !0
  %cmp.i1010 = icmp eq %union.tree_node* %25, %28
  br i1 %cmp.i1010, label %check_unique_operand_names.exit, label %for.cond4.i

for.inc15.i:                                      ; preds = %for.cond4.i, %for.body.i
  %chain17.i = getelementptr inbounds %union.tree_node* %i.0100.i, i64 0, i32 0, i32 0, i32 0
  %29 = load %union.tree_node** %chain17.i, align 8, !tbaa !0
  %tobool.i1011 = icmp eq %union.tree_node* %29, null
  br i1 %tobool.i1011, label %for.cond19.preheader.i, label %for.body.i

for.body21.i:                                     ; preds = %for.cond19.preheader.i, %for.inc60.i
  %i.194.i = phi %union.tree_node* [ %40, %for.inc60.i ], [ %inputs, %for.cond19.preheader.i ]
  %purpose24.i = getelementptr inbounds %union.tree_node* %i.194.i, i64 0, i32 0, i32 1
  %30 = load i8** %purpose24.i, align 8
  %purpose26.i = getelementptr inbounds i8* %30, i64 24
  %31 = bitcast i8* %purpose26.i to %union.tree_node**
  %32 = load %union.tree_node** %31, align 8, !tbaa !0
  %tobool27.i = icmp eq %union.tree_node* %32, null
  br i1 %tobool27.i, label %for.inc60.i, label %for.cond32.i

for.cond32.i:                                     ; preds = %for.body21.i, %for.body34.i
  %i.1.pn.i = phi %union.tree_node* [ %j.1.i, %for.body34.i ], [ %i.194.i, %for.body21.i ]
  %j.1.in.i = getelementptr inbounds %union.tree_node* %i.1.pn.i, i64 0, i32 0, i32 0, i32 0
  %j.1.i = load %union.tree_node** %j.1.in.i, align 8
  %tobool33.i = icmp eq %union.tree_node* %j.1.i, null
  br i1 %tobool33.i, label %for.cond46.loopexit.i, label %for.body34.i

for.body34.i:                                     ; preds = %for.cond32.i
  %purpose36.i = getelementptr inbounds %union.tree_node* %j.1.i, i64 0, i32 0, i32 1
  %33 = load i8** %purpose36.i, align 8
  %purpose38.i = getelementptr inbounds i8* %33, i64 24
  %34 = bitcast i8* %purpose38.i to %union.tree_node**
  %35 = load %union.tree_node** %34, align 8, !tbaa !0
  %cmp39.i = icmp eq %union.tree_node* %32, %35
  br i1 %cmp39.i, label %check_unique_operand_names.exit, label %for.cond32.i

for.cond46.loopexit.i:                            ; preds = %for.cond32.i
  br i1 %tobool99.i1023, label %for.inc60.i, label %for.body48.i

for.body48.i:                                     ; preds = %for.cond46.loopexit.i, %for.inc56.i
  %j.290.i = phi %union.tree_node* [ %39, %for.inc56.i ], [ %outputs, %for.cond46.loopexit.i ]
  %purpose50.i = getelementptr inbounds %union.tree_node* %j.290.i, i64 0, i32 0, i32 1
  %36 = load i8** %purpose50.i, align 8
  %purpose52.i = getelementptr inbounds i8* %36, i64 24
  %37 = bitcast i8* %purpose52.i to %union.tree_node**
  %38 = load %union.tree_node** %37, align 8, !tbaa !0
  %cmp53.i = icmp eq %union.tree_node* %32, %38
  br i1 %cmp53.i, label %check_unique_operand_names.exit, label %for.inc56.i

for.inc56.i:                                      ; preds = %for.body48.i
  %chain58.i = getelementptr inbounds %union.tree_node* %j.290.i, i64 0, i32 0, i32 0, i32 0
  %39 = load %union.tree_node** %chain58.i, align 8, !tbaa !0
  %tobool47.i = icmp eq %union.tree_node* %39, null
  br i1 %tobool47.i, label %for.inc60.i, label %for.body48.i

for.inc60.i:                                      ; preds = %for.inc56.i, %for.cond46.loopexit.i, %for.body21.i
  %chain62.i = getelementptr inbounds %union.tree_node* %i.194.i, i64 0, i32 0, i32 0, i32 0
  %40 = load %union.tree_node** %chain62.i, align 8, !tbaa !0
  %tobool20.i = icmp eq %union.tree_node* %40, null
  br i1 %tobool20.i, label %if.end16, label %for.body21.i

check_unique_operand_names.exit:                  ; preds = %for.body6.i, %for.body48.i, %for.body34.i
  %41 = phi %union.tree_node* [ %32, %for.body34.i ], [ %32, %for.body48.i ], [ %25, %for.body6.i ]
  %id.i = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds i8** %id.i, i64 1
  %43 = load i8** %42, align 8, !tbaa !0
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str24, i64 0, i64 0), i8* %43) #7
  br label %return

if.end16:                                         ; preds = %for.inc60.i, %for.cond19.preheader.i
  %pointer.i1013 = getelementptr inbounds %union.tree_node* %string, i64 0, i32 0, i32 4
  %44 = load %union.tree_node** %pointer.i1013, align 8
  %45 = bitcast %union.tree_node* %44 to i8*
  %call.i = call noalias i8* @xstrdup(i8* %45) #7
  %call295.i = call i8* @strchr(i8* %call.i, i32 37) #10
  %cmp96.i = icmp eq i8* %call295.i, null
  br i1 %cmp96.i, label %while.end.i, label %while.body.i1014

while.body.i1014:                                 ; preds = %if.end16, %while.cond.backedge.i
  %call297.i = phi i8* [ %call2.i, %while.cond.backedge.i ], [ %call295.i, %if.end16 ]
  %arrayidx.i = getelementptr inbounds i8* %call297.i, i64 1
  %46 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp3.i = icmp eq i8 %46, 91
  br i1 %cmp3.i, label %if.end18.i1016, label %if.else.i

if.else.i:                                        ; preds = %while.body.i1014
  %idxprom.i = zext i8 %46 to i64
  %arrayidx7.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.i
  %47 = load i16* %arrayidx7.i, align 2, !tbaa !6
  %and9.i = and i16 %47, 136
  %tobool.i1015 = icmp eq i16 %and9.i, 0
  br i1 %tobool.i1015, label %while.cond.backedge.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else.i
  %arrayidx10.i = getelementptr inbounds i8* %call297.i, i64 2
  %48 = load i8* %arrayidx10.i, align 1, !tbaa !1
  %cmp12.i = icmp eq i8 %48, 91
  br i1 %cmp12.i, label %if.end18.i1016, label %while.cond.backedge.i

if.end18.i1016:                                   ; preds = %land.lhs.true.i, %while.body.i1014
  %p.1.i = phi i8* [ %arrayidx.i, %while.body.i1014 ], [ %arrayidx10.i, %land.lhs.true.i ]
  %call19.i = call fastcc i8* @resolve_operand_name_1(i8* %p.1.i, %union.tree_node* %outputs, %union.tree_node* %inputs) #7
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.end18.i1016, %land.lhs.true.i, %if.else.i
  %p.0.be.i = phi i8* [ %call19.i, %if.end18.i1016 ], [ %arrayidx.i, %if.else.i ], [ %arrayidx.i, %land.lhs.true.i ]
  %call2.i = call i8* @strchr(i8* %p.0.be.i, i32 37) #10
  %cmp.i1017 = icmp eq i8* %call2.i, null
  br i1 %cmp.i1017, label %while.end.i, label %while.body.i1014

while.end.i:                                      ; preds = %while.cond.backedge.i, %if.end16
  %call20.i = call i64 @strlen(i8* %call.i) #10
  %conv21.i = trunc i64 %call20.i to i32
  %call22.i = call %union.tree_node* @build_string(i32 %conv21.i, i8* %call.i) #7
  call void @free(i8* %call.i) #7
  br i1 %tobool99.i1023, label %for.cond27.preheader.i, label %for.body.i1021

for.cond27.preheader.i:                           ; preds = %for.body.i1021, %while.end.i
  %pconstraints.addr.0.lcssa.i = phi i8** [ %4, %while.end.i ], [ %incdec.ptr.i, %for.body.i1021 ]
  br i1 %tobool1.i, label %resolve_operand_names.exit, label %for.body29.i

for.body.i1021:                                   ; preds = %while.end.i, %for.body.i1021
  %t.094.i = phi %union.tree_node* [ %54, %for.body.i1021 ], [ %outputs, %while.end.i ]
  %pconstraints.addr.093.i = phi i8** [ %incdec.ptr.i, %for.body.i1021 ], [ %4, %while.end.i ]
  %purpose.i1018 = getelementptr inbounds %union.tree_node* %t.094.i, i64 0, i32 0, i32 1
  %49 = load i8** %purpose.i1018, align 8
  %value.i1019 = getelementptr inbounds i8* %49, i64 32
  %50 = bitcast i8* %value.i1019 to %union.tree_node**
  %51 = load %union.tree_node** %50, align 8, !tbaa !0
  %pointer26.i = getelementptr inbounds %union.tree_node* %51, i64 0, i32 0, i32 4
  %52 = load %union.tree_node** %pointer26.i, align 8
  %53 = bitcast %union.tree_node* %52 to i8*
  store i8* %53, i8** %pconstraints.addr.093.i, align 8, !tbaa !0
  %chain.i1020 = getelementptr inbounds %union.tree_node* %t.094.i, i64 0, i32 0, i32 0, i32 0
  %54 = load %union.tree_node** %chain.i1020, align 8, !tbaa !0
  %incdec.ptr.i = getelementptr inbounds i8** %pconstraints.addr.093.i, i64 1
  %tobool23.i = icmp eq %union.tree_node* %54, null
  br i1 %tobool23.i, label %for.cond27.preheader.i, label %for.body.i1021

for.body29.i:                                     ; preds = %for.cond27.preheader.i, %for.inc51.i
  %t.191.i = phi %union.tree_node* [ %60, %for.inc51.i ], [ %inputs, %for.cond27.preheader.i ]
  %pconstraints.addr.189.i = phi i8** [ %incdec.ptr54.i, %for.inc51.i ], [ %pconstraints.addr.0.lcssa.i, %for.cond27.preheader.i ]
  %purpose31.i = getelementptr inbounds %union.tree_node* %t.191.i, i64 0, i32 0, i32 1
  %55 = load i8** %purpose31.i, align 8
  %value33.i = getelementptr inbounds i8* %55, i64 32
  %56 = bitcast i8* %value33.i to %union.tree_node**
  %57 = load %union.tree_node** %56, align 8, !tbaa !0
  %pointer35.i = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 4
  %58 = load %union.tree_node** %pointer35.i, align 8
  %59 = bitcast %union.tree_node* %58 to i8*
  %call36.i = call i8* @strchr(i8* %59, i32 91) #10
  %cmp37.i = icmp eq i8* %call36.i, null
  br i1 %cmp37.i, label %if.then39.i, label %if.else40.i

if.then39.i:                                      ; preds = %for.body29.i
  store i8* %59, i8** %pconstraints.addr.189.i, align 8, !tbaa !0
  br label %for.inc51.i

if.else40.i:                                      ; preds = %for.body29.i
  %call41.i = call noalias i8* @xstrdup(i8* %59) #7
  %call4385.i = call i8* @strchr(i8* %call41.i, i32 91) #10
  %cmp4486.i = icmp eq i8* %call4385.i, null
  br i1 %cmp4486.i, label %while.end48.i, label %while.body46.i

while.body46.i:                                   ; preds = %if.else40.i, %while.body46.i
  %call4387.i = phi i8* [ %call43.i, %while.body46.i ], [ %call4385.i, %if.else40.i ]
  %call47.i = call fastcc i8* @resolve_operand_name_1(i8* %call4387.i, %union.tree_node* %outputs, %union.tree_node* %inputs) #7
  %call43.i = call i8* @strchr(i8* %call47.i, i32 91) #10
  %cmp44.i = icmp eq i8* %call43.i, null
  br i1 %cmp44.i, label %while.end48.i, label %while.body46.i

while.end48.i:                                    ; preds = %while.body46.i, %if.else40.i
  %call49.i = call i8* @ggc_alloc_string(i8* %call41.i, i32 -1) #7
  store i8* %call49.i, i8** %pconstraints.addr.189.i, align 8, !tbaa !0
  call void @free(i8* %call41.i) #7
  br label %for.inc51.i

for.inc51.i:                                      ; preds = %while.end48.i, %if.then39.i
  %chain53.i = getelementptr inbounds %union.tree_node* %t.191.i, i64 0, i32 0, i32 0, i32 0
  %60 = load %union.tree_node** %chain53.i, align 8, !tbaa !0
  %incdec.ptr54.i = getelementptr inbounds i8** %pconstraints.addr.189.i, i64 1
  %tobool28.i = icmp eq %union.tree_node* %60, null
  br i1 %tobool28.i, label %resolve_operand_names.exit, label %for.body29.i

resolve_operand_names.exit:                       ; preds = %for.inc51.i, %for.cond27.preheader.i
  %call18 = call %union.tree_node* @build_string(i32 5, i8* getelementptr inbounds ([6 x i8]* @.str6, i64 0, i64 0)) #7
  %call19 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call18, %union.tree_node* %clobbers) #7
  %call20 = call %union.tree_node* @build_string(i32 4, i8* getelementptr inbounds ([5 x i8]* @.str7, i64 0, i64 0)) #7
  %call21 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call20, %union.tree_node* %call19) #7
  %call22 = call %union.tree_node* @build_string(i32 7, i8* getelementptr inbounds ([8 x i8]* @.str8, i64 0, i64 0)) #7
  %call23 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call22, %union.tree_node* %call21) #7
  %tobool1065 = icmp eq %union.tree_node* %call23, null
  br i1 %tobool1065, label %for.end, label %for.body

for.body:                                         ; preds = %resolve_operand_names.exit, %for.inc
  %nclobbers.01067 = phi i32 [ %nclobbers.1, %for.inc ], [ 0, %resolve_operand_names.exit ]
  %tail.01066 = phi %union.tree_node* [ %65, %for.inc ], [ %call23, %resolve_operand_names.exit ]
  %value = getelementptr inbounds %union.tree_node* %tail.01066, i64 0, i32 0, i32 2
  %61 = bitcast i32* %value to %union.tree_node**
  %62 = load %union.tree_node** %61, align 8, !tbaa !0
  %pointer = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 4
  %63 = load %union.tree_node** %pointer, align 8
  %64 = bitcast %union.tree_node* %63 to i8*
  %call25 = call i32 @decode_reg_name(i8* %64) #7
  %cmp26 = icmp sgt i32 %call25, -1
  %cmp28 = icmp eq i32 %call25, -4
  %or.cond = or i1 %cmp26, %cmp28
  br i1 %or.cond, label %if.then30, label %if.else

if.then30:                                        ; preds = %for.body
  %inc = add nsw i32 %nclobbers.01067, 1
  br label %for.inc

if.else:                                          ; preds = %for.body
  %cmp31 = icmp eq i32 %call25, -2
  br i1 %cmp31, label %if.then33, label %for.inc

if.then33:                                        ; preds = %if.else
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str9, i64 0, i64 0), %union.tree_node* %63) #7
  br label %for.inc

for.inc:                                          ; preds = %if.then30, %if.then33, %if.else
  %nclobbers.1 = phi i32 [ %inc, %if.then30 ], [ %nclobbers.01067, %if.then33 ], [ %nclobbers.01067, %if.else ]
  %chain = getelementptr inbounds %union.tree_node* %tail.01066, i64 0, i32 0, i32 0, i32 0
  %65 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %65, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %resolve_operand_names.exit
  %nclobbers.0.lcssa = phi i32 [ 0, %resolve_operand_names.exit ], [ %nclobbers.1, %for.inc ]
  %66 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt = getelementptr inbounds %struct.function* %66, i64 0, i32 1
  %67 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_last_expr_type = getelementptr inbounds %struct.stmt_status* %67, i64 0, i32 8
  store %union.tree_node* null, %union.tree_node** %x_last_expr_type, align 8, !tbaa !0
  %tobool371060 = icmp eq %union.tree_node* %outputs, null
  br i1 %tobool371060, label %for.end104, label %for.body38

for.body38:                                       ; preds = %for.end, %if.end95
  %indvars.iv1098 = phi i64 [ %indvars.iv.next1099, %if.end95 ], [ 0, %for.end ]
  %ninout.01063 = phi i32 [ %ninout.0.inc98, %if.end95 ], [ 0, %for.end ]
  %tail.11062 = phi %union.tree_node* [ %86, %if.end95 ], [ %outputs, %for.end ]
  %value40 = getelementptr inbounds %union.tree_node* %tail.11062, i64 0, i32 0, i32 2
  %68 = bitcast i32* %value40 to %union.tree_node**
  %69 = load %union.tree_node** %68, align 8, !tbaa !0
  %type42 = getelementptr inbounds %union.tree_node* %69, i64 0, i32 0, i32 0, i32 1
  %70 = load %union.tree_node** %type42, align 8, !tbaa !0
  %71 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp43 = icmp eq %union.tree_node* %70, %71
  br i1 %cmp43, label %return, label %if.end46

if.end46:                                         ; preds = %for.body38
  %arrayidx = getelementptr inbounds i8** %4, i64 %indvars.iv1098
  %72 = load i8** %arrayidx, align 8, !tbaa !0
  store i8* %72, i8** %constraint, align 8, !tbaa !0
  %73 = trunc i64 %indvars.iv1098 to i32
  %call47 = call zeroext i1 @parse_output_constraint(i8** %constraint, i32 %73, i32 %call, i32 %call1, i8* %allows_mem, i8* %allows_reg, i8* %is_inout) #9
  br i1 %call47, label %if.end49, label %return

if.end49:                                         ; preds = %if.end46
  %74 = load i8* %allows_reg, align 1, !tbaa !5, !range !7
  %tobool50 = icmp eq i8 %74, 0
  br i1 %tobool50, label %land.lhs.true, label %if.end95

land.lhs.true:                                    ; preds = %if.end49
  %75 = load i8* %allows_mem, align 1, !tbaa !5, !range !7
  %tobool51 = icmp eq i8 %75, 0
  br i1 %tobool51, label %lor.lhs.false53, label %if.then93

lor.lhs.false53:                                  ; preds = %land.lhs.true
  %76 = load i8* %is_inout, align 1, !tbaa !5, !range !7
  %tobool54 = icmp eq i8 %76, 0
  br i1 %tobool54, label %lor.lhs.false56, label %if.then93

lor.lhs.false56:                                  ; preds = %lor.lhs.false53
  %code = getelementptr inbounds %union.tree_node* %69, i64 0, i32 0, i32 0, i32 2
  %77 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %77, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom581005 = zext i32 %bf.clear to i64
  %arrayidx59 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom581005
  %78 = load i8* %arrayidx59, align 1, !tbaa !1
  %cmp61 = icmp eq i8 %78, 100
  br i1 %cmp61, label %land.lhs.true63, label %if.end95

land.lhs.true63:                                  ; preds = %lor.lhs.false56
  %rtl = getelementptr inbounds %union.tree_node* %69, i64 0, i32 0, i32 17
  %79 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  %tobool64 = icmp eq %struct.rtx_def* %79, null
  br i1 %tobool64, label %cond.false, label %cond.end

cond.false:                                       ; preds = %land.lhs.true63
  call void @make_decl_rtl(%union.tree_node* %69, i8* null) #7
  %80 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true63, %cond.false
  %81 = phi %struct.rtx_def* [ %80, %cond.false ], [ %79, %land.lhs.true63 ]
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load69 = load i32* %82, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 61
  br i1 %cmp71, label %land.lhs.true73, label %if.end95

land.lhs.true73:                                  ; preds = %cond.end
  %tobool76 = icmp eq %struct.rtx_def* %81, null
  br i1 %tobool76, label %cond.false80, label %cond.end83

cond.false80:                                     ; preds = %land.lhs.true73
  call void @make_decl_rtl(%union.tree_node* %69, i8* null) #7
  %83 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  %.phi.trans.insert1105 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load85.pre = load i32* %.phi.trans.insert1105, align 8
  br label %cond.end83

cond.end83:                                       ; preds = %land.lhs.true73, %cond.false80
  %bf.load85 = phi i32 [ %bf.load85.pre, %cond.false80 ], [ %bf.load69, %land.lhs.true73 ]
  %bf.lshr = lshr i32 %bf.load85, 16
  %bf.clear86 = and i32 %bf.lshr, 255
  %type87 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type87, i64 0, i32 6
  %84 = bitcast [4 x i8]* %mode to i32*
  %bf.load88 = load i32* %84, align 4
  %bf.lshr89 = lshr i32 %bf.load88, 9
  %bf.clear90 = and i32 %bf.lshr89, 127
  %cmp91 = icmp eq i32 %bf.clear86, %bf.clear90
  br i1 %cmp91, label %if.end95, label %if.then93

if.then93:                                        ; preds = %cond.end83, %lor.lhs.false53, %land.lhs.true
  %call94 = call i32 @mark_addressable(%union.tree_node* %69) #7
  br label %if.end95

if.end95:                                         ; preds = %cond.end83, %cond.end, %if.end49, %if.then93, %lor.lhs.false56
  %85 = load i8* %is_inout, align 1, !tbaa !5, !range !7
  %inc98 = zext i8 %85 to i32
  %ninout.0.inc98 = add nsw i32 %inc98, %ninout.01063
  %chain102 = getelementptr inbounds %union.tree_node* %tail.11062, i64 0, i32 0, i32 0, i32 0
  %86 = load %union.tree_node** %chain102, align 8, !tbaa !0
  %indvars.iv.next1099 = add i64 %indvars.iv1098, 1
  %tobool37 = icmp eq %union.tree_node* %86, null
  br i1 %tobool37, label %for.end104, label %for.body38

for.end104:                                       ; preds = %if.end95, %for.end
  %ninout.0.lcssa = phi i32 [ 0, %for.end ], [ %ninout.0.inc98, %if.end95 ]
  %add105 = add i32 %ninout.0.lcssa, %call
  %add106 = add nsw i32 %add105, %call1
  %cmp107 = icmp sgt i32 %add106, 30
  br i1 %cmp107, label %if.then109, label %for.cond111.preheader

for.cond111.preheader:                            ; preds = %for.end104
  br i1 %tobool1.i, label %for.cond145.preheader, label %for.body113

if.then109:                                       ; preds = %for.end104
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str10, i64 0, i64 0), i32 30) #7
  br label %return

for.cond145.preheader:                            ; preds = %for.inc140, %for.cond111.preheader
  br i1 %tobool371060, label %for.end324, label %for.body147

for.body113:                                      ; preds = %for.cond111.preheader, %for.inc140
  %indvars.iv1095 = phi i64 [ %indvars.iv.next1096, %for.inc140 ], [ 0, %for.cond111.preheader ]
  %tail.21057 = phi %union.tree_node* [ %97, %for.inc140 ], [ %inputs, %for.cond111.preheader ]
  %value118 = getelementptr inbounds %union.tree_node* %tail.21057, i64 0, i32 0, i32 2
  %87 = bitcast i32* %value118 to %union.tree_node**
  %88 = load %union.tree_node** %87, align 8, !tbaa !0
  %type120 = getelementptr inbounds %union.tree_node* %88, i64 0, i32 0, i32 0, i32 1
  %89 = load %union.tree_node** %type120, align 8, !tbaa !0
  %90 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp121 = icmp eq %union.tree_node* %89, %90
  br i1 %cmp121, label %return, label %if.end124

if.end124:                                        ; preds = %for.body113
  %91 = add nsw i64 %indvars.iv1095, %conv
  %arrayidx127 = getelementptr inbounds i8** %4, i64 %91
  %92 = load i8** %arrayidx127, align 8, !tbaa !0
  store i8* %92, i8** %constraint116, align 8, !tbaa !0
  %93 = trunc i64 %indvars.iv1095 to i32
  %call128 = call fastcc zeroext i1 @parse_input_constraint(i8** %constraint116, i32 %93, i32 %add105, i32 %call1, i32 %ninout.0.lcssa, i8** %4, i8* %allows_mem115, i8* %allows_reg114) #9
  br i1 %call128, label %if.end130, label %return

if.end130:                                        ; preds = %if.end124
  %94 = load i8* %allows_reg114, align 1, !tbaa !5, !range !7
  %tobool131 = icmp eq i8 %94, 0
  br i1 %tobool131, label %land.lhs.true132, label %for.inc140

land.lhs.true132:                                 ; preds = %if.end130
  %95 = load i8* %allows_mem115, align 1, !tbaa !5, !range !7
  %tobool133 = icmp eq i8 %95, 0
  br i1 %tobool133, label %for.inc140, label %if.then135

if.then135:                                       ; preds = %land.lhs.true132
  %96 = load %union.tree_node** %87, align 8, !tbaa !0
  %call138 = call i32 @mark_addressable(%union.tree_node* %96) #7
  br label %for.inc140

for.inc140:                                       ; preds = %land.lhs.true132, %if.end130, %if.then135
  %indvars.iv.next1096 = add i64 %indvars.iv1095, 1
  %chain143 = getelementptr inbounds %union.tree_node* %tail.21057, i64 0, i32 0, i32 0, i32 0
  %97 = load %union.tree_node** %chain143, align 8, !tbaa !0
  %tobool112 = icmp eq %union.tree_node* %97, null
  br i1 %tobool112, label %for.cond145.preheader, label %for.body113

for.body147:                                      ; preds = %for.cond145.preheader, %for.inc320
  %indvars.iv1093 = phi i64 [ %indvars.iv.next1094, %for.inc320 ], [ 0, %for.cond145.preheader ]
  %ninout.21052 = phi i32 [ %ninout.3, %for.inc320 ], [ 0, %for.cond145.preheader ]
  %tail.31051 = phi %union.tree_node* [ %124, %for.inc320 ], [ %outputs, %for.cond145.preheader ]
  %value150 = getelementptr inbounds %union.tree_node* %tail.31051, i64 0, i32 0, i32 2
  %98 = bitcast i32* %value150 to %union.tree_node**
  %99 = load %union.tree_node** %98, align 8, !tbaa !0
  %type153 = getelementptr inbounds %union.tree_node* %99, i64 0, i32 0, i32 0, i32 1
  %100 = load %union.tree_node** %type153, align 8, !tbaa !0
  %arrayidx158 = getelementptr inbounds i8** %4, i64 %indvars.iv1093
  %101 = trunc i64 %indvars.iv1093 to i32
  %call159 = call zeroext i1 @parse_output_constraint(i8** %arrayidx158, i32 %101, i32 %add105, i32 %call1, i8* %allows_mem156, i8* %allows_reg155, i8* %is_inout154) #9
  br i1 %call159, label %if.end161, label %if.then160

if.then160:                                       ; preds = %for.body147
  call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 1726, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.expand_asm_operands, i64 0, i64 0)) #8
  unreachable

if.end161:                                        ; preds = %for.body147
  store i32 0, i32* @generating_concat_p, align 4, !tbaa !4
  %arrayidx163 = getelementptr inbounds %struct.rtx_def** %2, i64 %indvars.iv1093
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx163, align 8, !tbaa !0
  %code165 = getelementptr inbounds %union.tree_node* %99, i64 0, i32 0, i32 0, i32 2
  %102 = bitcast [4 x i8]* %code165 to i32*
  %bf.load166 = load i32* %102, align 8
  %bf.clear167 = and i32 %bf.load166, 255
  %cmp168 = icmp eq i32 %bf.clear167, 41
  br i1 %cmp168, label %land.lhs.true170, label %lor.lhs.false173

land.lhs.true170:                                 ; preds = %if.end161
  %103 = load i8* %allows_mem156, align 1, !tbaa !5, !range !7
  %tobool171 = icmp eq i8 %103, 0
  br i1 %tobool171, label %lor.lhs.false173, label %if.then245

lor.lhs.false173:                                 ; preds = %land.lhs.true170, %if.end161
  %idxprom1781004 = zext i32 %bf.clear167 to i64
  %arrayidx179 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1781004
  %104 = load i8* %arrayidx179, align 1, !tbaa !1
  %cmp181 = icmp eq i8 %104, 100
  br i1 %cmp181, label %land.lhs.true183, label %lor.lhs.false240

land.lhs.true183:                                 ; preds = %lor.lhs.false173
  %105 = load i8* %allows_mem156, align 1, !tbaa !5, !range !7
  %tobool184 = icmp eq i8 %105, 0
  %rtl188 = getelementptr inbounds %union.tree_node* %99, i64 0, i32 0, i32 17
  %106 = load %struct.rtx_def** %rtl188, align 8, !tbaa !0
  br i1 %tobool184, label %lor.lhs.false186, label %land.lhs.true202

lor.lhs.false186:                                 ; preds = %land.lhs.true183
  %tobool189 = icmp eq %struct.rtx_def* %106, null
  br i1 %tobool189, label %cond.false193, label %cond.end196

cond.false193:                                    ; preds = %lor.lhs.false186
  call void @make_decl_rtl(%union.tree_node* %99, i8* null) #7
  %107 = load %struct.rtx_def** %rtl188, align 8, !tbaa !0
  br label %cond.end196

cond.end196:                                      ; preds = %lor.lhs.false186, %cond.false193
  %cond197 = phi %struct.rtx_def* [ %107, %cond.false193 ], [ %106, %lor.lhs.false186 ]
  %108 = bitcast %struct.rtx_def* %cond197 to i32*
  %bf.load198 = load i32* %108, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 61
  br i1 %cmp200, label %land.lhs.true202, label %lor.lhs.false240

land.lhs.true202:                                 ; preds = %land.lhs.true183, %cond.end196
  %109 = phi %struct.rtx_def* [ %cond197, %cond.end196 ], [ %106, %land.lhs.true183 ]
  %rtl204 = getelementptr inbounds %union.tree_node* %99, i64 0, i32 0, i32 17
  %tobool205 = icmp eq %struct.rtx_def* %109, null
  br i1 %tobool205, label %cond.false209, label %cond.end212

cond.false209:                                    ; preds = %land.lhs.true202
  call void @make_decl_rtl(%union.tree_node* %99, i8* null) #7
  %110 = load %struct.rtx_def** %rtl204, align 8, !tbaa !0
  br label %cond.end212

cond.end212:                                      ; preds = %land.lhs.true202, %cond.false209
  %111 = phi %struct.rtx_def* [ %110, %cond.false209 ], [ %109, %land.lhs.true202 ]
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load214 = load i32* %112, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 61
  br i1 %cmp216, label %land.lhs.true218, label %if.then245

land.lhs.true218:                                 ; preds = %cond.end212
  %tobool221 = icmp eq %struct.rtx_def* %111, null
  br i1 %tobool221, label %cond.false225, label %cond.end228

cond.false225:                                    ; preds = %land.lhs.true218
  call void @make_decl_rtl(%union.tree_node* %99, i8* null) #7
  %113 = load %struct.rtx_def** %rtl204, align 8, !tbaa !0
  %.phi.trans.insert = bitcast %struct.rtx_def* %113 to i32*
  %bf.load230.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end228

cond.end228:                                      ; preds = %land.lhs.true218, %cond.false225
  %bf.load230 = phi i32 [ %bf.load230.pre, %cond.false225 ], [ %bf.load214, %land.lhs.true218 ]
  %bf.lshr231 = lshr i32 %bf.load230, 16
  %bf.clear232 = and i32 %bf.lshr231, 255
  %type233 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %mode234 = getelementptr inbounds %struct.tree_type* %type233, i64 0, i32 6
  %114 = bitcast [4 x i8]* %mode234 to i32*
  %bf.load235 = load i32* %114, align 4
  %bf.lshr236 = lshr i32 %bf.load235, 9
  %bf.clear237 = and i32 %bf.lshr236, 127
  %cmp238 = icmp eq i32 %bf.clear232, %bf.clear237
  br i1 %cmp238, label %if.then245, label %lor.lhs.false240

lor.lhs.false240:                                 ; preds = %cond.end228, %cond.end196, %lor.lhs.false173
  %115 = load i8* %allows_reg155, align 1, !tbaa !5, !range !7
  %tobool241 = icmp eq i8 %115, 0
  br i1 %tobool241, label %if.then245, label %lor.lhs.false242

lor.lhs.false242:                                 ; preds = %lor.lhs.false240
  %116 = load i8* %is_inout154, align 1, !tbaa !5, !range !7
  %tobool243 = icmp eq i8 %116, 0
  br i1 %tobool243, label %if.else297, label %if.then245

if.then245:                                       ; preds = %cond.end228, %cond.end212, %land.lhs.true170, %lor.lhs.false242, %lor.lhs.false240
  %call246 = call %struct.rtx_def* @expand_expr(%union.tree_node* %99, %struct.rtx_def* null, i32 0, i32 4) #7
  %arrayidx248 = getelementptr inbounds %struct.rtx_def** %0, i64 %indvars.iv1093
  store %struct.rtx_def* %call246, %struct.rtx_def** %arrayidx248, align 8, !tbaa !0
  %117 = load i8* %allows_reg155, align 1, !tbaa !5, !range !7
  %tobool249 = icmp eq i8 %117, 0
  br i1 %tobool249, label %land.lhs.true250, label %if.end258

land.lhs.true250:                                 ; preds = %if.then245
  %118 = bitcast %struct.rtx_def* %call246 to i32*
  %bf.load253 = load i32* %118, align 8
  %bf.clear254 = and i32 %bf.load253, 65535
  %cmp255 = icmp eq i32 %bf.clear254, 66
  br i1 %cmp255, label %if.end258, label %if.then257

if.then257:                                       ; preds = %land.lhs.true250
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str11, i64 0, i64 0), i32 %101) #7
  br label %if.end258

if.end258:                                        ; preds = %land.lhs.true250, %if.then245, %if.then257
  %119 = load i8* %allows_mem156, align 1, !tbaa !5, !range !7
  %tobool259 = icmp eq i8 %119, 0
  %120 = bitcast %struct.rtx_def* %call246 to i32*
  %bf.load263 = load i32* %120, align 8
  br i1 %tobool259, label %land.lhs.true260, label %lor.lhs.false267

land.lhs.true260:                                 ; preds = %if.end258
  %bf.clear264 = and i32 %bf.load263, 65535
  %cmp265 = icmp eq i32 %bf.clear264, 66
  br i1 %cmp265, label %if.then274, label %lor.lhs.false267

lor.lhs.false267:                                 ; preds = %if.end258, %land.lhs.true260
  %bf.clear271 = and i32 %bf.load263, 65535
  %cmp272 = icmp eq i32 %bf.clear271, 65
  br i1 %cmp272, label %if.then274, label %if.end306

if.then274:                                       ; preds = %lor.lhs.false267, %land.lhs.true260
  %call277 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call246, i32 1) #7
  store %struct.rtx_def* %call277, %struct.rtx_def** %arrayidx163, align 8, !tbaa !0
  %121 = bitcast %struct.rtx_def* %call246 to i32*
  %bf.load282 = load i32* %121, align 8
  %bf.lshr283 = lshr i32 %bf.load282, 16
  %bf.clear284 = and i32 %bf.lshr283, 255
  %call285 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear284) #7
  store %struct.rtx_def* %call285, %struct.rtx_def** %arrayidx248, align 8, !tbaa !0
  %122 = load i8* %is_inout154, align 1, !tbaa !5, !range !7
  %tobool288 = icmp eq i8 %122, 0
  br i1 %tobool288, label %if.end306.thread, label %if.then289

if.end306.thread:                                 ; preds = %if.then274
  store i32 %5, i32* @generating_concat_p, align 4, !tbaa !4
  br label %for.inc320

if.then289:                                       ; preds = %if.then274
  %call294 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call285, %struct.rtx_def* %call277) #7
  br label %if.end306

if.else297:                                       ; preds = %lor.lhs.false242
  %call298 = call %struct.rtx_def* @assign_temp(%union.tree_node* %100, i32 0, i32 0, i32 1) #7
  %arrayidx300 = getelementptr inbounds %struct.rtx_def** %0, i64 %indvars.iv1093
  store %struct.rtx_def* %call298, %struct.rtx_def** %arrayidx300, align 8, !tbaa !0
  %call303 = call %union.tree_node* @make_tree(%union.tree_node* %100, %struct.rtx_def* %call298) #7
  store %union.tree_node* %call303, %union.tree_node** %98, align 8, !tbaa !0
  br label %if.end306

if.end306:                                        ; preds = %lor.lhs.false267, %if.then289, %if.else297
  %.pr = load i8* %is_inout154, align 1, !tbaa !5
  store i32 %5, i32* @generating_concat_p, align 4, !tbaa !4
  %tobool307 = icmp eq i8 %.pr, 0
  br i1 %tobool307, label %for.inc320, label %if.then308

if.then308:                                       ; preds = %if.end306
  %type309 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %mode310 = getelementptr inbounds %struct.tree_type* %type309, i64 0, i32 6
  %123 = bitcast [4 x i8]* %mode310 to i32*
  %bf.load311 = load i32* %123, align 4
  %bf.lshr312 = lshr i32 %bf.load311, 9
  %bf.clear313 = and i32 %bf.lshr312, 127
  %idxprom314 = sext i32 %ninout.21052 to i64
  %arrayidx315 = getelementptr inbounds i32* %3, i64 %idxprom314
  store i32 %bf.clear313, i32* %arrayidx315, align 4, !tbaa !8
  %inc316 = add nsw i32 %ninout.21052, 1
  %arrayidx318 = getelementptr inbounds i32* %1, i64 %idxprom314
  store i32 %101, i32* %arrayidx318, align 4, !tbaa !4
  br label %for.inc320

for.inc320:                                       ; preds = %if.end306.thread, %if.end306, %if.then308
  %ninout.3 = phi i32 [ %inc316, %if.then308 ], [ %ninout.21052, %if.end306 ], [ %ninout.21052, %if.end306.thread ]
  %chain322 = getelementptr inbounds %union.tree_node* %tail.31051, i64 0, i32 0, i32 0, i32 0
  %124 = load %union.tree_node** %chain322, align 8, !tbaa !0
  %indvars.iv.next1094 = add i64 %indvars.iv1093, 1
  %tobool146 = icmp eq %union.tree_node* %124, null
  br i1 %tobool146, label %for.end324, label %for.body147

for.end324:                                       ; preds = %for.inc320, %for.cond145.preheader
  %ninout.2.lcssa = phi i32 [ 0, %for.cond145.preheader ], [ %ninout.3, %for.inc320 ]
  %call325 = call %struct.rtvec_def* @rtvec_alloc(i32 %add105) #7
  %call326 = call %struct.rtvec_def* @rtvec_alloc(i32 %add105) #7
  br i1 %cmp, label %cond.end335, label %cond.false330

cond.false330:                                    ; preds = %for.end324
  %125 = load %struct.rtx_def** %0, align 8, !tbaa !0
  %126 = bitcast %struct.rtx_def* %125 to i32*
  %bf.load332 = load i32* %126, align 8
  %bf.lshr333 = lshr i32 %bf.load332, 16
  %bf.clear334 = and i32 %bf.lshr333, 255
  br label %cond.end335

cond.end335:                                      ; preds = %for.end324, %cond.false330
  %cond336 = phi i32 [ %bf.clear334, %cond.false330 ], [ 0, %for.end324 ]
  %pointer338 = getelementptr inbounds %union.tree_node* %call22.i, i64 0, i32 0, i32 4
  %127 = load %union.tree_node** %pointer338, align 8
  %128 = bitcast %union.tree_node* %127 to i8*
  %call339 = call %struct.rtx_def* @gen_rtx_fmt_ssiEEsi(i32 41, i32 %cond336, i8* %128, i8* getelementptr inbounds ([0 x i8]* @empty_string, i64 0, i64 0), i32 0, %struct.rtvec_def* %call325, %struct.rtvec_def* %call326, i8* %filename, i32 %line) #7
  %129 = bitcast %struct.rtx_def* %call339 to i32*
  %bf.load340 = load i32* %129, align 8
  %vol.op = shl i32 %vol, 27
  %vol.op.op = and i32 %vol.op, 134217728
  %bf.shl = select i1 %cmp, i32 134217728, i32 %vol.op.op
  %bf.clear341 = and i32 %bf.load340, -134217729
  %bf.set = or i32 %bf.clear341, %bf.shl
  store i32 %bf.set, i32* %129, align 8
  br i1 %tobool1.i, label %for.end532, label %for.body344.lr.ph

for.body344.lr.ph:                                ; preds = %cond.end335
  %arrayidx511 = getelementptr inbounds %struct.rtx_def* %call339, i64 0, i32 1, i64 3
  %rtvec = bitcast %union.rtunion_def* %arrayidx511 to %struct.rtvec_def**
  %arrayidx524 = getelementptr inbounds %struct.rtx_def* %call339, i64 0, i32 1, i64 4
  %rtvec525 = bitcast %union.rtunion_def* %arrayidx524 to %struct.rtvec_def**
  br label %for.body344

for.body344:                                      ; preds = %for.body344.lr.ph, %if.end509
  %indvars.iv1090 = phi i64 [ 0, %for.body344.lr.ph ], [ %indvars.iv.next1091, %if.end509 ]
  %tail.41045 = phi %union.tree_node* [ %inputs, %for.body344.lr.ph ], [ %155, %if.end509 ]
  %130 = add nsw i64 %indvars.iv1090, %conv
  %arrayidx352 = getelementptr inbounds i8** %4, i64 %130
  %131 = load i8** %arrayidx352, align 8, !tbaa !0
  store i8* %131, i8** %constraint347, align 8, !tbaa !0
  %132 = trunc i64 %indvars.iv1090 to i32
  %call353 = call fastcc zeroext i1 @parse_input_constraint(i8** %constraint347, i32 %132, i32 %add105, i32 %call1, i32 %ninout.2.lcssa, i8** %4, i8* %allows_mem346, i8* %allows_reg345) #9
  br i1 %call353, label %if.end355, label %if.then354

if.then354:                                       ; preds = %for.body344
  call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 1800, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.expand_asm_operands, i64 0, i64 0)) #8
  unreachable

if.end355:                                        ; preds = %for.body344
  store i32 0, i32* @generating_concat_p, align 4, !tbaa !4
  %value357 = getelementptr inbounds %union.tree_node* %tail.41045, i64 0, i32 0, i32 2
  %133 = bitcast i32* %value357 to %union.tree_node**
  %134 = load %union.tree_node** %133, align 8, !tbaa !0
  %type359 = getelementptr inbounds %union.tree_node* %134, i64 0, i32 0, i32 0, i32 1
  %135 = load %union.tree_node** %type359, align 8, !tbaa !0
  %call360 = call %struct.rtx_def* @expand_expr(%union.tree_node* %134, %struct.rtx_def* null, i32 0, i32 0) #7
  %136 = bitcast %struct.rtx_def* %call360 to i32*
  %bf.load361 = load i32* %136, align 8
  %bf.clear362 = and i32 %bf.load361, 65535
  %cmp363 = icmp eq i32 %bf.clear362, 65
  br i1 %cmp363, label %if.then365, label %if.end370

if.then365:                                       ; preds = %if.end355
  %bf.lshr367 = lshr i32 %bf.load361, 16
  %bf.clear368 = and i32 %bf.lshr367, 255
  %call369 = call %struct.rtx_def* @force_reg(i32 %bf.clear368, %struct.rtx_def* %call360) #7
  br label %if.end370

if.end370:                                        ; preds = %if.then365, %if.end355
  %op.0 = phi %struct.rtx_def* [ %call369, %if.then365 ], [ %call360, %if.end355 ]
  %137 = load i8** %constraint347, align 8, !tbaa !0
  %call371 = call i32 @asm_operand_ok(%struct.rtx_def* %op.0, i8* %137) #7
  %cmp372 = icmp slt i32 %call371, 1
  br i1 %cmp372, label %if.then374, label %if.end509

if.then374:                                       ; preds = %if.end370
  %138 = load i8* %allows_reg345, align 1, !tbaa !5, !range !7
  %tobool375 = icmp eq i8 %138, 0
  br i1 %tobool375, label %if.else383, label %if.then376

if.then376:                                       ; preds = %if.then374
  %type377 = bitcast %union.tree_node* %135 to %struct.tree_type*
  %mode378 = getelementptr inbounds %struct.tree_type* %type377, i64 0, i32 6
  %139 = bitcast [4 x i8]* %mode378 to i32*
  %bf.load379 = load i32* %139, align 4
  %bf.lshr380 = lshr i32 %bf.load379, 9
  %bf.clear381 = and i32 %bf.lshr380, 127
  %call382 = call %struct.rtx_def* @force_reg(i32 %bf.clear381, %struct.rtx_def* %op.0) #7
  br label %if.end509

if.else383:                                       ; preds = %if.then374
  %140 = load i8* %allows_mem346, align 1, !tbaa !5, !range !7
  %tobool384 = icmp eq i8 %140, 0
  br i1 %tobool384, label %if.then385, label %if.else387

if.then385:                                       ; preds = %if.else383
  %141 = trunc i64 %130 to i32
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([50 x i8]* @.str12, i64 0, i64 0), i32 %141) #7
  br label %if.end509

if.else387:                                       ; preds = %if.else383
  %142 = bitcast %struct.rtx_def* %op.0 to i32*
  %bf.load388 = load i32* %142, align 8
  %bf.clear389 = and i32 %bf.load388, 65535
  switch i32 %bf.clear389, label %if.else497 [
    i32 67, label %if.then427
    i32 68, label %if.then427
    i32 54, label %if.then427
    i32 55, label %if.then427
    i32 58, label %if.then427
    i32 134, label %if.then427
    i32 56, label %if.then427
    i32 140, label %if.then427
    i32 61, label %if.then454
    i32 63, label %if.then454
    i32 70, label %if.then454
    i32 65, label %if.then454
    i32 66, label %land.lhs.true491
  ]

if.then427:                                       ; preds = %if.else387, %if.else387, %if.else387, %if.else387, %if.else387, %if.else387, %if.else387, %if.else387
  %type428 = bitcast %union.tree_node* %135 to %struct.tree_type*
  %mode429 = getelementptr inbounds %struct.tree_type* %type428, i64 0, i32 6
  %143 = bitcast [4 x i8]* %mode429 to i32*
  %bf.load430 = load i32* %143, align 4
  %bf.lshr431 = lshr i32 %bf.load430, 9
  %bf.clear432 = and i32 %bf.lshr431, 127
  %call433 = call %struct.rtx_def* @force_const_mem(i32 %bf.clear432, %struct.rtx_def* %op.0) #7
  br label %if.end509

if.then454:                                       ; preds = %if.else387, %if.else387, %if.else387, %if.else387
  %readonly_flag = getelementptr inbounds %union.tree_node* %135, i64 0, i32 0, i32 0, i32 2
  %144 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load456 = load i32* %144, align 8
  %145 = lshr i32 %bf.load456, 10
  %mul464 = and i32 %145, 2
  %type465 = bitcast %union.tree_node* %135 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type465, i64 0, i32 6
  %146 = bitcast [4 x i8]* %restrict_flag to i32*
  %bf.load466 = load i32* %146, align 4
  %147 = lshr i32 %bf.load466, 19
  %mul469 = and i32 %147, 4
  %bf.clear474 = and i32 %bf.load456, 255
  %cmp475 = icmp eq i32 %bf.clear474, 20
  br i1 %cmp475, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then454
  %type478 = getelementptr inbounds %union.tree_node* %135, i64 0, i32 0, i32 0, i32 1
  %148 = load %union.tree_node** %type478, align 8, !tbaa !0
  %tobool479 = icmp ne %union.tree_node* %148, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then454
  %149 = phi i1 [ false, %if.then454 ], [ %tobool479, %land.rhs ]
  %land.ext = zext i1 %149 to i32
  %mul480 = shl nuw nsw i32 %land.ext, 3
  %or = or i32 %mul464, %mul469
  %or470 = or i32 %or, %mul480
  %or482 = or i32 %or470, 1
  %call483 = call %union.tree_node* @build_qualified_type(%union.tree_node* %135, i32 %or482) #7
  %call484 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call483, i32 1, i32 1, i32 1) #7
  %call485 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call484, %struct.rtx_def* %op.0) #7
  br label %if.end509

land.lhs.true491:                                 ; preds = %if.else387
  %bf.clear494 = and i32 %bf.load388, 134217728
  %tobool495 = icmp eq i32 %bf.clear494, 0
  br i1 %tobool495, label %if.else497, label %if.end509

if.else497:                                       ; preds = %if.else387, %land.lhs.true491
  %call498 = call i32 @queued_subexp_p(%struct.rtx_def* %op.0) #7
  %tobool499 = icmp eq i32 %call498, 0
  br i1 %tobool499, label %if.else501, label %if.end509

if.else501:                                       ; preds = %if.else497
  %150 = trunc i64 %130 to i32
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([50 x i8]* @.str12, i64 0, i64 0), i32 %150) #7
  br label %if.end509

if.end509:                                        ; preds = %land.lhs.true491, %if.else497, %if.then376, %if.then427, %if.else501, %land.end, %if.then385, %if.end370
  %op.1 = phi %struct.rtx_def* [ %call382, %if.then376 ], [ %call433, %if.then427 ], [ %call484, %land.end ], [ %op.0, %land.lhs.true491 ], [ %op.0, %if.else497 ], [ %op.0, %if.else501 ], [ %op.0, %if.then385 ], [ %op.0, %if.end370 ]
  store i32 %5, i32* @generating_concat_p, align 4, !tbaa !4
  %151 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %arrayidx512 = getelementptr inbounds %struct.rtvec_def* %151, i64 0, i32 1, i64 %indvars.iv1090
  store %struct.rtx_def* %op.1, %struct.rtx_def** %arrayidx512, align 8, !tbaa !0
  %type513 = bitcast %union.tree_node* %135 to %struct.tree_type*
  %mode514 = getelementptr inbounds %struct.tree_type* %type513, i64 0, i32 6
  %152 = bitcast [4 x i8]* %mode514 to i32*
  %bf.load515 = load i32* %152, align 4
  %bf.lshr516 = lshr i32 %bf.load515, 9
  %bf.clear517 = and i32 %bf.lshr516, 127
  %153 = load i8** %arrayidx352, align 8, !tbaa !0
  %call521 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 40, i32 %bf.clear517, i8* %153) #7
  %154 = load %struct.rtvec_def** %rtvec525, align 8, !tbaa !0
  %arrayidx527 = getelementptr inbounds %struct.rtvec_def* %154, i64 0, i32 1, i64 %indvars.iv1090
  store %struct.rtx_def* %call521, %struct.rtx_def** %arrayidx527, align 8, !tbaa !0
  %chain530 = getelementptr inbounds %union.tree_node* %tail.41045, i64 0, i32 0, i32 0, i32 0
  %155 = load %union.tree_node** %chain530, align 8, !tbaa !0
  %indvars.iv.next1091 = add i64 %indvars.iv1090, 1
  %tobool343 = icmp eq %union.tree_node* %155, null
  br i1 %tobool343, label %for.end532, label %for.body344

for.end532:                                       ; preds = %if.end509, %cond.end335
  store i32 0, i32* @generating_concat_p, align 4, !tbaa !4
  %sub = sub i32 %add105, %ninout.2.lcssa
  %cmp5341040 = icmp sgt i32 %sub, 0
  br i1 %cmp5341040, label %for.body536.lr.ph, label %for.cond553.preheader

for.body536.lr.ph:                                ; preds = %for.end532
  %arrayidx539 = getelementptr inbounds %struct.rtx_def* %call339, i64 0, i32 1, i64 3
  %rtvec540 = bitcast %union.rtunion_def* %arrayidx539 to %struct.rtvec_def**
  br label %for.body536

for.cond553.preheader:                            ; preds = %for.body536, %for.end532
  %cmp5541038 = icmp sgt i32 %call1, 0
  br i1 %cmp5541038, label %for.body556, label %for.cond565.preheader

for.body536:                                      ; preds = %for.body536, %for.body536.lr.ph
  %indvars.iv1086 = phi i64 [ 0, %for.body536.lr.ph ], [ %indvars.iv.next1087, %for.body536 ]
  %156 = load %struct.rtvec_def** %rtvec540, align 8, !tbaa !0
  %arrayidx542 = getelementptr inbounds %struct.rtvec_def* %156, i64 0, i32 1, i64 %indvars.iv1086
  %157 = load %struct.rtx_def** %arrayidx542, align 8, !tbaa !0
  %call543 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %157, i32 0) #7
  %158 = load %struct.rtvec_def** %rtvec540, align 8, !tbaa !0
  %arrayidx549 = getelementptr inbounds %struct.rtvec_def* %158, i64 0, i32 1, i64 %indvars.iv1086
  store %struct.rtx_def* %call543, %struct.rtx_def** %arrayidx549, align 8, !tbaa !0
  %indvars.iv.next1087 = add i64 %indvars.iv1086, 1
  %lftr.wideiv1088 = trunc i64 %indvars.iv.next1087 to i32
  %exitcond1089 = icmp eq i32 %lftr.wideiv1088, %sub
  br i1 %exitcond1089, label %for.cond553.preheader, label %for.body536

for.cond565.preheader:                            ; preds = %for.body556, %for.cond553.preheader
  %cmp5661036 = icmp sgt i32 %ninout.2.lcssa, 0
  br i1 %cmp5661036, label %for.body568.lr.ph, label %for.end597

for.body568.lr.ph:                                ; preds = %for.cond565.preheader
  %arrayidx577 = getelementptr inbounds %struct.rtx_def* %call339, i64 0, i32 1, i64 3
  %rtvec578 = bitcast %union.rtunion_def* %arrayidx577 to %struct.rtvec_def**
  %arraydecay = getelementptr inbounds [16 x i8]* %buffer, i64 0, i64 0
  %arrayidx591 = getelementptr inbounds %struct.rtx_def* %call339, i64 0, i32 1, i64 4
  %rtvec592 = bitcast %union.rtunion_def* %arrayidx591 to %struct.rtvec_def**
  %159 = sext i32 %sub to i64
  br label %for.body568

for.body556:                                      ; preds = %for.body556, %for.cond553.preheader
  %indvars.iv1082 = phi i64 [ 0, %for.cond553.preheader ], [ %indvars.iv.next1083, %for.body556 ]
  %arrayidx558 = getelementptr inbounds %struct.rtx_def** %0, i64 %indvars.iv1082
  %160 = load %struct.rtx_def** %arrayidx558, align 8, !tbaa !0
  %call559 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %160, i32 1) #7
  store %struct.rtx_def* %call559, %struct.rtx_def** %arrayidx558, align 8, !tbaa !0
  %indvars.iv.next1083 = add i64 %indvars.iv1082, 1
  %lftr.wideiv1084 = trunc i64 %indvars.iv.next1083 to i32
  %exitcond1085 = icmp eq i32 %lftr.wideiv1084, %call1
  br i1 %exitcond1085, label %for.cond565.preheader, label %for.body556

for.body568:                                      ; preds = %for.body568, %for.body568.lr.ph
  %indvars.iv1077 = phi i64 [ 0, %for.body568.lr.ph ], [ %indvars.iv.next1078, %for.body568 ]
  %arrayidx570 = getelementptr inbounds i32* %1, i64 %indvars.iv1077
  %161 = load i32* %arrayidx570, align 4, !tbaa !4
  %idxprom571 = sext i32 %161 to i64
  %arrayidx572 = getelementptr inbounds %struct.rtx_def** %0, i64 %idxprom571
  %162 = load %struct.rtx_def** %arrayidx572, align 8, !tbaa !0
  %163 = add nsw i64 %indvars.iv1077, %159
  %164 = load %struct.rtvec_def** %rtvec578, align 8, !tbaa !0
  %arrayidx580 = getelementptr inbounds %struct.rtvec_def* %164, i64 0, i32 1, i64 %163
  store %struct.rtx_def* %162, %struct.rtx_def** %arrayidx580, align 8, !tbaa !0
  %call581 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8]* @.str13, i64 0, i64 0), i32 %161) #7
  %arrayidx583 = getelementptr inbounds i32* %3, i64 %indvars.iv1077
  %165 = load i32* %arrayidx583, align 4, !tbaa !8
  %call585 = call i8* @ggc_alloc_string(i8* %arraydecay, i32 -1) #7
  %call586 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 40, i32 %165, i8* %call585) #7
  %166 = load %struct.rtvec_def** %rtvec592, align 8, !tbaa !0
  %arrayidx594 = getelementptr inbounds %struct.rtvec_def* %166, i64 0, i32 1, i64 %163
  store %struct.rtx_def* %call586, %struct.rtx_def** %arrayidx594, align 8, !tbaa !0
  %indvars.iv.next1078 = add i64 %indvars.iv1077, 1
  %lftr.wideiv1080 = trunc i64 %indvars.iv.next1078 to i32
  %exitcond1081 = icmp eq i32 %lftr.wideiv1080, %ninout.2.lcssa
  br i1 %exitcond1081, label %for.end597, label %for.body568

for.end597:                                       ; preds = %for.body568, %for.cond565.preheader
  store i32 %5, i32* @generating_concat_p, align 4, !tbaa !4
  %cmp598 = icmp eq i32 %call1, 1
  %cmp601 = icmp eq i32 %nclobbers.0.lcssa, 0
  %or.cond1006 = and i1 %cmp598, %cmp601
  br i1 %or.cond1006, label %if.then603, label %if.else610

if.then603:                                       ; preds = %for.end597
  %167 = load i8** %4, align 8, !tbaa !0
  %168 = getelementptr inbounds %struct.rtx_def* %call339, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint i8* %167 to i64
  store i64 %.c, i64* %168, align 8, !tbaa !0
  %169 = load %struct.rtx_def** %0, align 8, !tbaa !0
  %call608 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %169, %struct.rtx_def* %call339) #7
  %call609 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call608) #7
  br label %for.cond725.preheader

if.else610:                                       ; preds = %for.end597
  %170 = or i32 %nclobbers.0.lcssa, %call1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %if.then616, label %if.else618

if.then616:                                       ; preds = %if.else610
  %call617 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call339) #7
  br label %for.cond725.preheader

if.else618:                                       ; preds = %if.else610
  %. = select i1 %cmp, i32 1, i32 %call1
  %add623 = add nsw i32 %nclobbers.0.lcssa, %.
  %call624 = call %struct.rtvec_def* @rtvec_alloc(i32 %add623) #7
  %call625 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call624) #7
  br i1 %tobool371060, label %if.then668, label %for.body628.lr.ph

for.body628.lr.ph:                                ; preds = %if.else618
  %arrayidx644 = getelementptr inbounds %struct.rtx_def* %call625, i64 0, i32 1, i64 0
  %rtvec645 = bitcast %union.rtunion_def* %arrayidx644 to %struct.rtvec_def**
  br label %for.body628

for.body628:                                      ; preds = %for.body628.for.body628_crit_edge, %for.body628.lr.ph
  %indvars.iv1075 = phi i64 [ 0, %for.body628.lr.ph ], [ %indvars.iv.next1076, %for.body628.for.body628_crit_edge ]
  %tail.51035 = phi %union.tree_node* [ %outputs, %for.body628.lr.ph ], [ %183, %for.body628.for.body628_crit_edge ]
  %i.71034 = phi i32 [ 1, %for.body628.lr.ph ], [ %phitmp, %for.body628.for.body628_crit_edge ]
  %arrayidx630 = getelementptr inbounds %struct.rtx_def** %0, i64 %indvars.iv1075
  %172 = load %struct.rtx_def** %arrayidx630, align 8, !tbaa !0
  %173 = bitcast %struct.rtx_def* %172 to i32*
  %bf.load633 = load i32* %173, align 8
  %bf.lshr634 = lshr i32 %bf.load633, 16
  %bf.clear635 = and i32 %bf.lshr634, 255
  %174 = load %union.tree_node** %pointer338, align 8
  %175 = bitcast %union.tree_node* %174 to i8*
  %arrayidx639 = getelementptr inbounds i8** %4, i64 %indvars.iv1075
  %176 = load i8** %arrayidx639, align 8, !tbaa !0
  %177 = trunc i64 %indvars.iv1075 to i32
  %call640 = call %struct.rtx_def* @gen_rtx_fmt_ssiEEsi(i32 41, i32 %bf.clear635, i8* %175, i8* %176, i32 %177, %struct.rtvec_def* %call325, %struct.rtvec_def* %call326, i8* %filename, i32 %line) #7
  %call641 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %172, %struct.rtx_def* %call640) #7
  %178 = load %struct.rtvec_def** %rtvec645, align 8, !tbaa !0
  %arrayidx647 = getelementptr inbounds %struct.rtvec_def* %178, i64 0, i32 1, i64 %indvars.iv1075
  store %struct.rtx_def* %call641, %struct.rtx_def** %arrayidx647, align 8, !tbaa !0
  %179 = load %struct.rtvec_def** %rtvec645, align 8, !tbaa !0
  %arrayidx653 = getelementptr inbounds %struct.rtvec_def* %179, i64 0, i32 1, i64 %indvars.iv1075
  %180 = load %struct.rtx_def** %arrayidx653, align 8, !tbaa !0
  %arrayidx655 = getelementptr inbounds %struct.rtx_def* %180, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx655 to %struct.rtx_def**
  %181 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load656 = load i32* %182, align 8
  %bf.clear659 = and i32 %bf.load656, -134217729
  %bf.set660 = or i32 %bf.clear659, %bf.shl
  store i32 %bf.set660, i32* %182, align 8
  %chain663 = getelementptr inbounds %union.tree_node* %tail.51035, i64 0, i32 0, i32 0, i32 0
  %183 = load %union.tree_node** %chain663, align 8, !tbaa !0
  %tobool627 = icmp eq %union.tree_node* %183, null
  br i1 %tobool627, label %for.end665, label %for.body628.for.body628_crit_edge

for.body628.for.body628_crit_edge:                ; preds = %for.body628
  %indvars.iv.next1076 = add i64 %indvars.iv1075, 1
  %phitmp = add i32 %i.71034, 1
  br label %for.body628

for.end665:                                       ; preds = %for.body628
  %cmp666 = icmp eq i32 %i.71034, 0
  br i1 %cmp666, label %if.then668, label %for.cond677.preheader

if.then668:                                       ; preds = %if.else618, %for.end665
  %arrayidx672 = getelementptr inbounds %struct.rtx_def* %call625, i64 0, i32 1, i64 0
  %rtvec673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtvec_def**
  %184 = load %struct.rtvec_def** %rtvec673, align 8, !tbaa !0
  %arrayidx675 = getelementptr inbounds %struct.rtvec_def* %184, i64 0, i32 1, i64 0
  store %struct.rtx_def* %call339, %struct.rtx_def** %arrayidx675, align 8, !tbaa !0
  br label %for.cond677.preheader

for.cond677.preheader:                            ; preds = %if.then668, %for.end665
  %i.9.ph = phi i32 [ %i.71034, %for.end665 ], [ 1, %if.then668 ]
  br i1 %tobool1065, label %for.end721, label %for.body679.lr.ph

for.body679.lr.ph:                                ; preds = %for.cond677.preheader
  %arrayidx703 = getelementptr inbounds %struct.rtx_def* %call625, i64 0, i32 1, i64 0
  %rtvec704 = bitcast %union.rtunion_def* %arrayidx703 to %struct.rtvec_def**
  br label %for.body679

for.body679:                                      ; preds = %for.body679.lr.ph, %for.inc718
  %tail.61032 = phi %union.tree_node* [ %call23, %for.body679.lr.ph ], [ %191, %for.inc718 ]
  %i.91031 = phi i32 [ %i.9.ph, %for.body679.lr.ph ], [ %i.10, %for.inc718 ]
  %value682 = getelementptr inbounds %union.tree_node* %tail.61032, i64 0, i32 0, i32 2
  %185 = bitcast i32* %value682 to %union.tree_node**
  %186 = load %union.tree_node** %185, align 8, !tbaa !0
  %pointer684 = getelementptr inbounds %union.tree_node* %186, i64 0, i32 0, i32 4
  %187 = load %union.tree_node** %pointer684, align 8
  %188 = bitcast %union.tree_node* %187 to i8*
  %call686 = call i32 @decode_reg_name(i8* %188) #7
  %cmp687 = icmp slt i32 %call686, 0
  br i1 %cmp687, label %if.then689, label %if.end708

if.then689:                                       ; preds = %for.body679
  %cmp694 = icmp eq i32 %call686, -4
  br i1 %cmp694, label %if.then696, label %for.inc718

if.then696:                                       ; preds = %if.then689
  %call697 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #7
  %call698 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call697) #7
  %call699 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call698) #7
  %inc700 = add nsw i32 %i.91031, 1
  %idxprom701 = sext i32 %i.91031 to i64
  %189 = load %struct.rtvec_def** %rtvec704, align 8, !tbaa !0
  %arrayidx706 = getelementptr inbounds %struct.rtvec_def* %189, i64 0, i32 1, i64 %idxprom701
  store %struct.rtx_def* %call699, %struct.rtx_def** %arrayidx706, align 8, !tbaa !0
  br label %for.inc718

if.end708:                                        ; preds = %for.body679
  %call709 = call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 %call686) #7
  %call710 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call709) #7
  %inc711 = add nsw i32 %i.91031, 1
  %idxprom712 = sext i32 %i.91031 to i64
  %190 = load %struct.rtvec_def** %rtvec704, align 8, !tbaa !0
  %arrayidx717 = getelementptr inbounds %struct.rtvec_def* %190, i64 0, i32 1, i64 %idxprom712
  store %struct.rtx_def* %call710, %struct.rtx_def** %arrayidx717, align 8, !tbaa !0
  br label %for.inc718

for.inc718:                                       ; preds = %if.then689, %if.end708, %if.then696
  %i.10 = phi i32 [ %inc700, %if.then696 ], [ %i.91031, %if.then689 ], [ %inc711, %if.end708 ]
  %chain720 = getelementptr inbounds %union.tree_node* %tail.61032, i64 0, i32 0, i32 0, i32 0
  %191 = load %union.tree_node** %chain720, align 8, !tbaa !0
  %tobool678 = icmp eq %union.tree_node* %191, null
  br i1 %tobool678, label %for.end721, label %for.body679

for.end721:                                       ; preds = %for.inc718, %for.cond677.preheader
  %call722 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call625) #7
  br label %for.cond725.preheader

for.cond725.preheader:                            ; preds = %if.then616, %for.end721, %if.then603
  br i1 %cmp5541038, label %for.body728, label %for.end741

for.body728:                                      ; preds = %for.inc739, %for.cond725.preheader
  %indvars.iv = phi i64 [ 0, %for.cond725.preheader ], [ %indvars.iv.next, %for.inc739 ]
  %arrayidx730 = getelementptr inbounds %struct.rtx_def** %2, i64 %indvars.iv
  %192 = load %struct.rtx_def** %arrayidx730, align 8, !tbaa !0
  %tobool731 = icmp eq %struct.rtx_def* %192, null
  br i1 %tobool731, label %for.inc739, label %if.then732

if.then732:                                       ; preds = %for.body728
  %arrayidx736 = getelementptr inbounds %struct.rtx_def** %0, i64 %indvars.iv
  %193 = load %struct.rtx_def** %arrayidx736, align 8, !tbaa !0
  %call737 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %192, %struct.rtx_def* %193) #7
  br label %for.inc739

for.inc739:                                       ; preds = %for.body728, %if.then732
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call1
  br i1 %exitcond, label %for.end741, label %for.body728

for.end741:                                       ; preds = %for.inc739, %for.cond725.preheader
  call void @free_temp_slots() #7
  br label %return

return:                                           ; preds = %if.end46, %for.body38, %if.end124, %for.body113, %check_unique_operand_names.exit, %if.then17.i, %if.then6.i, %for.end741, %if.then109
  ret void
}
