define zeroext i1 @parse_output_constraint(i8** nocapture %constraint_p, i32 %operand_num, i32 %ninputs, i32 %noutputs, i8* nocapture %allows_mem, i8* nocapture %allows_reg, i8* %is_inout) #0 {
entry:
  call void @llvm.dbg.value(metadata !{i8** %constraint_p}, i64 0, metadata !1380), !dbg !2818
  call void @llvm.dbg.value(metadata !{i32 %operand_num}, i64 0, metadata !1381), !dbg !2819
  call void @llvm.dbg.value(metadata !{i32 %ninputs}, i64 0, metadata !1382), !dbg !2820
  call void @llvm.dbg.value(metadata !{i32 %noutputs}, i64 0, metadata !1383), !dbg !2821
  call void @llvm.dbg.value(metadata !{i8* %allows_mem}, i64 0, metadata !1384), !dbg !2822
  call void @llvm.dbg.value(metadata !{i8* %allows_reg}, i64 0, metadata !1385), !dbg !2823
  call void @llvm.dbg.value(metadata !{i8* %is_inout}, i64 0, metadata !1386), !dbg !2824
  %0 = load i8** %constraint_p, align 8, !dbg !2825, !tbaa !2438
  call void @llvm.dbg.value(metadata !{i8* %0}, i64 0, metadata !1387), !dbg !2825
  store i8 0, i8* %allows_mem, align 1, !dbg !2826, !tbaa !2827
  store i8 0, i8* %allows_reg, align 1, !dbg !2828, !tbaa !2827
  %call = call i8* @strchr(i8* %0, i32 61) #11, !dbg !2829
  call void @llvm.dbg.value(metadata !{i8* %call}, i64 0, metadata !1388), !dbg !2829
  %tobool = icmp eq i8* %call, null, !dbg !2830
  br i1 %tobool, label %if.end, label %if.end4, !dbg !2830

if.end:                                           ; preds = %entry
  %call1 = call i8* @strchr(i8* %0, i32 43) #11, !dbg !2831
  call void @llvm.dbg.value(metadata !{i8* %call1}, i64 0, metadata !1388), !dbg !2831
  %tobool2 = icmp eq i8* %call1, null, !dbg !2832
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2832

if.then3:                                         ; preds = %if.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str1, i64 0, i64 0)) #8, !dbg !2833
  br label %return, !dbg !2835

if.end4:                                          ; preds = %entry, %if.end
  %p.0248 = phi i8* [ %call1, %if.end ], [ %call, %entry ]
  %1 = load i8* %p.0248, align 1, !dbg !2836, !tbaa !2439
  %cmp = icmp eq i8 %1, 43, !dbg !2836
  %frombool = zext i1 %cmp to i8, !dbg !2836
  store i8 %frombool, i8* %is_inout, align 1, !dbg !2836, !tbaa !2827
  %cmp6 = icmp ne i8* %p.0248, %0, !dbg !2837
  %cmp6.not = xor i1 %cmp6, true, !dbg !2837
  %tobool8 = icmp eq i8* %is_inout, null, !dbg !2837
  %or.cond = and i1 %tobool8, %cmp6.not, !dbg !2837
  br i1 %or.cond, label %for.cond.preheader, label %if.then9, !dbg !2837

if.then9:                                         ; preds = %if.end4
  %call10 = call i64 @strlen(i8* %0) #11, !dbg !2838
  call void @llvm.dbg.value(metadata !{i64 %call10}, i64 0, metadata !1391), !dbg !2838
  br i1 %cmp6, label %if.then13, label %if.end15, !dbg !2839

if.then13:                                        ; preds = %if.then9
  %2 = load i8* %p.0248, align 1, !dbg !2840, !tbaa !2439
  %conv14 = sext i8 %2 to i32, !dbg !2840
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([62 x i8]* @.str2, i64 0, i64 0), i32 %conv14, i32 %operand_num) #8, !dbg !2840
  br label %if.end15, !dbg !2840

if.end15:                                         ; preds = %if.then13, %if.then9
  %add = add i64 %call10, 1, !dbg !2841
  %3 = alloca i8, i64 %add, align 1, !dbg !2841
  call void @llvm.dbg.value(metadata !{i8* %3}, i64 0, metadata !1389), !dbg !2841
  %call16 = call i8* @strcpy(i8* %3, i8* %0) #8, !dbg !2842
  %4 = load i8* %3, align 1, !dbg !2843, !tbaa !2439
  %sub.ptr.lhs.cast = ptrtoint i8* %p.0248 to i64, !dbg !2843
  %sub.ptr.rhs.cast = ptrtoint i8* %0 to i64, !dbg !2843
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2843
  %arrayidx17 = getelementptr inbounds i8* %3, i64 %sub.ptr.sub, !dbg !2843
  store i8 %4, i8* %arrayidx17, align 1, !dbg !2843, !tbaa !2439
  store i8 61, i8* %3, align 1, !dbg !2844, !tbaa !2439
  %conv19 = trunc i64 %call10 to i32, !dbg !2845
  %call20 = call i8* @ggc_alloc_string(i8* %3, i32 %conv19) #8, !dbg !2845
  store i8* %call20, i8** %constraint_p, align 8, !dbg !2845, !tbaa !2438
  call void @llvm.dbg.value(metadata !{i8* %call20}, i64 0, metadata !1387), !dbg !2846
  br label %for.cond.preheader, !dbg !2847

for.cond.preheader:                               ; preds = %if.end4, %if.end15
  %constraint.0.pn.ph = phi i8* [ %call20, %if.end15 ], [ %0, %if.end4 ]
  %p.1250 = getelementptr inbounds i8* %constraint.0.pn.ph, i64 1, !dbg !2848
  %5 = load i8* %p.1250, align 1, !dbg !2848, !tbaa !2439
  %tobool22251 = icmp eq i8 %5, 0, !dbg !2848
  br i1 %tobool22251, label %return, label %for.body.lr.ph, !dbg !2848

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %add25 = add nsw i32 %operand_num, 1, !dbg !2850
  %add26 = add nsw i32 %noutputs, %ninputs, !dbg !2850
  %cmp27 = icmp eq i32 %add25, %add26, !dbg !2850
  br label %for.body, !dbg !2848

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %6 = phi i8 [ %5, %for.body.lr.ph ], [ %15, %for.cond.backedge ]
  %p.1252 = phi i8* [ %p.1250, %for.body.lr.ph ], [ %p.1, %for.cond.backedge ]
  %conv23 = sext i8 %6 to i32, !dbg !2852
  switch i32 %conv23, label %sw.default [
    i32 43, label %sw.bb
    i32 61, label %sw.bb
    i32 37, label %sw.bb24
    i32 86, label %sw.bb31
    i32 109, label %sw.bb31
    i32 111, label %sw.bb31
    i32 63, label %for.cond.backedge
    i32 33, label %for.cond.backedge
    i32 42, label %for.cond.backedge
    i32 38, label %for.cond.backedge
    i32 35, label %for.cond.backedge
    i32 69, label %for.cond.backedge
    i32 70, label %for.cond.backedge
    i32 71, label %for.cond.backedge
    i32 72, label %for.cond.backedge
    i32 115, label %for.cond.backedge
    i32 105, label %for.cond.backedge
    i32 110, label %for.cond.backedge
    i32 73, label %for.cond.backedge
    i32 74, label %for.cond.backedge
    i32 75, label %for.cond.backedge
    i32 76, label %for.cond.backedge
    i32 77, label %for.cond.backedge
    i32 78, label %for.cond.backedge
    i32 79, label %for.cond.backedge
    i32 80, label %for.cond.backedge
    i32 44, label %for.cond.backedge
    i32 48, label %sw.bb33
    i32 49, label %sw.bb33
    i32 50, label %sw.bb33
    i32 51, label %sw.bb33
    i32 52, label %sw.bb33
    i32 53, label %sw.bb33
    i32 54, label %sw.bb33
    i32 55, label %sw.bb33
    i32 56, label %sw.bb33
    i32 57, label %sw.bb33
    i32 91, label %sw.bb33
    i32 60, label %sw.bb34
    i32 62, label %sw.bb34
    i32 103, label %sw.bb35
    i32 88, label %sw.bb35
    i32 112, label %sw.bb36
    i32 114, label %sw.bb36
  ], !dbg !2852

sw.bb:                                            ; preds = %for.body, %for.body
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([62 x i8]* @.str3, i64 0, i64 0)) #8, !dbg !2853
  br label %return, !dbg !2854

sw.bb24:                                          ; preds = %for.body
  br i1 %cmp27, label %if.then29, label %for.cond.backedge, !dbg !2850

if.then29:                                        ; preds = %sw.bb24
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str4, i64 0, i64 0)) #8, !dbg !2855
  br label %return, !dbg !2857

sw.bb31:                                          ; preds = %for.body, %for.body, %for.body
  store i8 1, i8* %allows_mem, align 1, !dbg !2858, !tbaa !2827
  br label %for.cond.backedge, !dbg !2859

sw.bb33:                                          ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str5, i64 0, i64 0)) #8, !dbg !2860
  br label %return, !dbg !2861

sw.bb34:                                          ; preds = %for.body, %for.body
  store i8 1, i8* %allows_mem, align 1, !dbg !2862, !tbaa !2827
  br label %for.cond.backedge, !dbg !2863

sw.bb35:                                          ; preds = %for.body, %for.body
  store i8 1, i8* %allows_reg, align 1, !dbg !2864, !tbaa !2827
  store i8 1, i8* %allows_mem, align 1, !dbg !2865, !tbaa !2827
  br label %for.cond.backedge, !dbg !2866

sw.bb36:                                          ; preds = %for.body, %for.body
  store i8 1, i8* %allows_reg, align 1, !dbg !2867, !tbaa !2827
  br label %for.cond.backedge, !dbg !2868

sw.default:                                       ; preds = %for.body
  %and = and i32 %conv23, 255, !dbg !2869
  %idxprom244 = zext i32 %and to i64, !dbg !2869
  %arrayidx38 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom244, !dbg !2869
  %7 = load i16* %arrayidx38, align 2, !dbg !2869, !tbaa !2870
  %and40 = and i16 %7, 136, !dbg !2869
  %tobool41 = icmp eq i16 %and40, 0, !dbg !2869
  br i1 %tobool41, label %for.cond.backedge, label %if.end43, !dbg !2869

if.end43:                                         ; preds = %sw.default
  switch i8 %6, label %cond.false154 [
    i8 114, label %cond.end188.thread
    i8 82, label %cond.end188.thread
    i8 113, label %cond.end188.thread
    i8 81, label %cond.end188.thread
    i8 102, label %cond.true67
    i8 116, label %cond.true77
    i8 117, label %cond.true89
    i8 97, label %cond.end188.thread
    i8 98, label %cond.end188.thread
    i8 99, label %cond.end188.thread
    i8 100, label %cond.end188.thread
    i8 120, label %cond.true121
    i8 89, label %cond.true130
    i8 121, label %cond.true139
    i8 65, label %cond.end188.thread
    i8 68, label %cond.end188.thread
  ], !dbg !2871

cond.true67:                                      ; preds = %if.end43
  %8 = load i32* @target_flags, align 4, !dbg !2871, !tbaa !2561
  %and68 = and i32 %8, 1, !dbg !2871
  %tobool69 = icmp eq i32 %and68, 0, !dbg !2871
  br i1 %tobool69, label %lor.rhs, label %cond.end188.thread, !dbg !2871

lor.rhs:                                          ; preds = %cond.true67
  %and70 = and i32 %8, 32, !dbg !2871
  %tobool71 = icmp ne i32 %and70, 0, !dbg !2871
  %phitmp246 = select i1 %tobool71, i32 15, i32 0, !dbg !2871
  br label %cond.end188, !dbg !2871

cond.true77:                                      ; preds = %if.end43
  %9 = load i32* @target_flags, align 4, !dbg !2871, !tbaa !2561
  %and78 = and i32 %9, 1, !dbg !2871
  %tobool79 = icmp eq i32 %and78, 0, !dbg !2871
  br i1 %tobool79, label %lor.rhs80, label %cond.end188.thread, !dbg !2871

lor.rhs80:                                        ; preds = %cond.true77
  %and81 = and i32 %9, 32, !dbg !2871
  %tobool82 = icmp ne i32 %and81, 0, !dbg !2871
  %phitmp245 = select i1 %tobool82, i32 13, i32 0, !dbg !2871
  br label %cond.end188, !dbg !2871

cond.true89:                                      ; preds = %if.end43
  %10 = load i32* @target_flags, align 4, !dbg !2871, !tbaa !2561
  %and90 = and i32 %10, 1, !dbg !2871
  %tobool91 = icmp eq i32 %and90, 0, !dbg !2871
  br i1 %tobool91, label %lor.rhs92, label %cond.end188.thread, !dbg !2871

lor.rhs92:                                        ; preds = %cond.true89
  %and93 = and i32 %10, 32, !dbg !2871
  %tobool94 = icmp ne i32 %and93, 0, !dbg !2871
  %phitmp = select i1 %tobool94, i32 14, i32 0, !dbg !2871
  br label %cond.end188, !dbg !2871

cond.true121:                                     ; preds = %if.end43
  %11 = load i32* @target_flags, align 4, !dbg !2871, !tbaa !2561
  %and122 = and i32 %11, 327680, !dbg !2871
  %cmp123 = icmp ne i32 %and122, 0, !dbg !2871
  %cond125 = select i1 %cmp123, i32 16, i32 0, !dbg !2871
  br label %cond.end188, !dbg !2871

cond.true130:                                     ; preds = %if.end43
  %12 = load i32* @target_flags, align 4, !dbg !2871, !tbaa !2561
  %and131 = lshr i32 %12, 14, !dbg !2871
  %13 = and i32 %and131, 16, !dbg !2871
  br label %cond.end188, !dbg !2871

cond.true139:                                     ; preds = %if.end43
  %14 = load i32* @target_flags, align 4, !dbg !2871, !tbaa !2561
  %and140 = and i32 %14, 16384, !dbg !2871
  %cmp141 = icmp ne i32 %and140, 0, !dbg !2871
  %cond143 = select i1 %cmp141, i32 17, i32 0, !dbg !2871
  br label %cond.end188, !dbg !2871

cond.false154:                                    ; preds = %if.end43
  %cmp156 = icmp eq i8 %6, 83, !dbg !2871
  %cond158 = select i1 %cmp156, i32 5, i32 0, !dbg !2871
  br label %cond.end188, !dbg !2871

cond.end188.thread:                               ; preds = %if.end43, %if.end43, %if.end43, %if.end43, %if.end43, %if.end43, %if.end43, %if.end43, %if.end43, %if.end43, %cond.true67, %cond.true77, %cond.true89
  store i8 1, i8* %allows_reg, align 1, !dbg !2872, !tbaa !2827
  br label %for.cond.backedge, !dbg !2871

cond.end188:                                      ; preds = %lor.rhs92, %lor.rhs80, %lor.rhs, %cond.true121, %cond.true139, %cond.false154, %cond.true130
  %cond189 = phi i32 [ %cond125, %cond.true121 ], [ %13, %cond.true130 ], [ %cond143, %cond.true139 ], [ %cond158, %cond.false154 ], [ %phitmp246, %lor.rhs ], [ %phitmp245, %lor.rhs80 ], [ %phitmp, %lor.rhs92 ], !dbg !2871
  %cmp190 = icmp eq i32 %cond189, 0, !dbg !2871
  store i8 1, i8* %allows_reg, align 1, !dbg !2872, !tbaa !2827
  br i1 %cmp190, label %if.else, label %for.cond.backedge, !dbg !2871

for.cond.backedge:                                ; preds = %cond.end188, %sw.default, %sw.bb31, %sw.bb34, %sw.bb35, %sw.bb36, %sw.bb24, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %if.else, %cond.end188.thread
  %p.1 = getelementptr inbounds i8* %p.1252, i64 1, !dbg !2848
  %15 = load i8* %p.1, align 1, !dbg !2848, !tbaa !2439
  %tobool22 = icmp eq i8 %15, 0, !dbg !2848
  br i1 %tobool22, label %return, label %for.body, !dbg !2848

if.else:                                          ; preds = %cond.end188
  store i8 1, i8* %allows_mem, align 1, !dbg !2873, !tbaa !2827
  br label %for.cond.backedge

return:                                           ; preds = %for.cond.preheader, %for.cond.backedge, %sw.bb33, %if.then29, %sw.bb, %if.then3
  %retval.0 = phi i1 [ false, %sw.bb33 ], [ false, %if.then29 ], [ false, %sw.bb ], [ false, %if.then3 ], [ true, %for.cond.backedge ], [ true, %for.cond.preheader ]
  ret i1 %retval.0, !dbg !2875
}
