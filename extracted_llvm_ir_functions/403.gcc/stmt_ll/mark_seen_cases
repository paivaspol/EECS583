define void @mark_seen_cases(%union.tree_node* %type, i8* nocapture %cases_seen, i64 %count, i32 %sparseness) #0 {
entry:
  %xlo68 = alloca i64, align 8
  %xhi = alloca i64, align 8
  %0 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt = getelementptr inbounds %struct.function* %0, i64 0, i32 1
  %1 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_case_stack = getelementptr inbounds %struct.stmt_status* %1, i64 0, i32 4
  %2 = load %struct.nesting** %x_case_stack, align 8, !tbaa !0
  %case_list = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 1
  %3 = load %struct.rtx_def** %case_list, align 8
  %4 = bitcast %struct.rtx_def* %3 to %struct.case_node*
  %call = call %union.tree_node* @make_node(i32 25) #7
  %type1 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool, label %if.end154, label %if.else

if.else:                                          ; preds = %entry
  %cmp = icmp eq i32 %sparseness, 2
  br i1 %cmp, label %if.then2, label %if.else37

if.then2:                                         ; preds = %if.else
  %low = getelementptr inbounds %struct.rtx_def* %3, i64 1, i32 1
  %5 = bitcast [1 x %union.rtunion_def]* %low to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !0
  %type4 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type4, align 8, !tbaa !0
  store %union.tree_node* %7, %union.tree_node** %type1, align 8, !tbaa !0
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %8 = load i8** %values, align 8
  %cmp8201 = icmp eq i8* %8, null
  br i1 %cmp8201, label %if.end154, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then2
  %9 = bitcast i8* %8 to %union.tree_node*
  %int_cst12 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %low13 = bitcast i32* %int_cst12 to i64*
  %high20 = getelementptr inbounds i32* %int_cst12, i64 2
  %10 = bitcast i32* %high20 to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %xlo.0203 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %t.0202 = phi %union.tree_node* [ %9, %for.body.lr.ph ], [ %19, %for.inc ]
  %value = getelementptr inbounds %union.tree_node* %t.0202, i64 0, i32 0, i32 2
  %11 = bitcast i32* %value to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !0
  %int_cst9 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 2
  %low10 = bitcast i32* %int_cst9 to i64*
  %13 = load i64* %low10, align 8, !tbaa !3
  store i64 %13, i64* %low13, align 8, !tbaa !3
  %high = getelementptr inbounds i32* %int_cst9, i64 2
  %14 = bitcast i32* %high to i64*
  %15 = load i64* %14, align 8, !tbaa !3
  store i64 %15, i64* %10, align 8, !tbaa !3
  br label %do.body

do.body:                                          ; preds = %do.cond, %for.body
  %n.0 = phi %struct.case_node* [ %4, %for.body ], [ %n.1, %do.cond ]
  %low21 = getelementptr inbounds %struct.case_node* %n.0, i64 0, i32 3
  %16 = load %union.tree_node** %low21, align 8, !tbaa !0
  %call22 = call i32 @tree_int_cst_lt(%union.tree_node* %call, %union.tree_node* %16) #7
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %if.else25, label %if.then24

if.then24:                                        ; preds = %do.body
  %left = getelementptr inbounds %struct.case_node* %n.0, i64 0, i32 0
  br label %do.cond

if.else25:                                        ; preds = %do.body
  %high26 = getelementptr inbounds %struct.case_node* %n.0, i64 0, i32 4
  %17 = load %union.tree_node** %high26, align 8, !tbaa !0
  %call27 = call i32 @tree_int_cst_lt(%union.tree_node* %17, %union.tree_node* %call) #7
  %tobool28 = icmp eq i32 %call27, 0
  br i1 %tobool28, label %if.else30, label %if.then29

if.then29:                                        ; preds = %if.else25
  %right = getelementptr inbounds %struct.case_node* %n.0, i64 0, i32 1
  br label %do.cond

if.else30:                                        ; preds = %if.else25
  %conv = trunc i64 %xlo.0203 to i32
  %rem = and i32 %conv, 7
  %shl = shl i32 1, %rem
  %div = lshr i64 %xlo.0203, 3
  %idxprom = and i64 %div, 536870911
  %arrayidx = getelementptr inbounds i8* %cases_seen, i64 %idxprom
  %18 = load i8* %arrayidx, align 1, !tbaa !1
  %conv32 = zext i8 %18 to i32
  %or = or i32 %conv32, %shl
  %conv33 = trunc i32 %or to i8
  store i8 %conv33, i8* %arrayidx, align 1, !tbaa !1
  br label %for.inc

do.cond:                                          ; preds = %if.then24, %if.then29
  %n.1.in = phi %struct.case_node** [ %left, %if.then24 ], [ %right, %if.then29 ]
  %n.1 = load %struct.case_node** %n.1.in, align 8
  %tobool35 = icmp eq %struct.case_node* %n.1, null
  br i1 %tobool35, label %for.inc, label %do.body

for.inc:                                          ; preds = %do.cond, %if.else30
  %chain = getelementptr inbounds %union.tree_node* %t.0202, i64 0, i32 0, i32 0, i32 0
  %19 = load %union.tree_node** %chain, align 8, !tbaa !0
  %inc = add i64 %xlo.0203, 1
  %cmp8 = icmp eq %union.tree_node* %19, null
  br i1 %cmp8, label %if.end154, label %for.body

if.else37:                                        ; preds = %if.else
  %left38 = bitcast %struct.rtx_def* %3 to %struct.case_node**
  %20 = load %struct.case_node** %left38, align 8, !tbaa !0
  %tobool39 = icmp eq %struct.case_node* %20, null
  br i1 %tobool39, label %for.cond48.preheader, label %if.then40

if.then40:                                        ; preds = %if.else37
  %call41 = call fastcc %struct.case_node* @case_tree2list(%struct.case_node* %4, %struct.case_node* null) #9
  %21 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt42 = getelementptr inbounds %struct.function* %21, i64 0, i32 1
  %22 = load %struct.stmt_status** %stmt42, align 8, !tbaa !0
  %x_case_stack43 = getelementptr inbounds %struct.stmt_status* %22, i64 0, i32 4
  %23 = load %struct.nesting** %x_case_stack43, align 8, !tbaa !0
  %case_list46 = getelementptr inbounds %struct.nesting* %23, i64 0, i32 4, i32 0, i32 1
  %call41.c = bitcast %struct.case_node* %call41 to %struct.rtx_def*
  store %struct.rtx_def* %call41.c, %struct.rtx_def** %case_list46, align 8, !tbaa !0
  br label %for.cond48.preheader

for.cond48.preheader:                             ; preds = %if.else37, %if.then40
  %n.2.ph = phi %struct.case_node* [ %call41, %if.then40 ], [ %4, %if.else37 ]
  %tobool49212 = icmp eq %struct.case_node* %n.2.ph, null
  br i1 %tobool49212, label %if.end154, label %for.body50.lr.ph

for.body50.lr.ph:                                 ; preds = %for.cond48.preheader
  %int_cst56 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %low57 = bitcast i32* %int_cst56 to i64*
  %high64 = getelementptr inbounds i32* %int_cst56, i64 2
  %24 = bitcast i32* %high64 to i64*
  %tobool70 = icmp eq i32 %sparseness, 0
  %25 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 12
  %values72 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  br label %for.body50

for.body50:                                       ; preds = %for.body50.lr.ph, %for.inc150
  %next_node_to_try.0215 = phi %union.tree_node* [ null, %for.body50.lr.ph ], [ %next_node_to_try.1.lcssa, %for.inc150 ]
  %n.2214 = phi %struct.case_node* [ %n.2.ph, %for.body50.lr.ph ], [ %54, %for.inc150 ]
  %next_node_offset.0213 = phi i64 [ 0, %for.body50.lr.ph ], [ %next_node_offset.1.lcssa, %for.inc150 ]
  %low51 = getelementptr inbounds %struct.case_node* %n.2214, i64 0, i32 3
  %26 = load %union.tree_node** %low51, align 8, !tbaa !0
  %int_cst53 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 2
  %low54 = bitcast i32* %int_cst53 to i64*
  %27 = load i64* %low54, align 8, !tbaa !3
  store i64 %27, i64* %low57, align 8, !tbaa !3
  %high61 = getelementptr inbounds i32* %int_cst53, i64 2
  %28 = bitcast i32* %high61 to i64*
  %29 = load i64* %28, align 8, !tbaa !3
  store i64 %29, i64* %24, align 8, !tbaa !3
  %high65 = getelementptr inbounds %struct.case_node* %n.2214, i64 0, i32 4
  %30 = load %union.tree_node** %high65, align 8, !tbaa !0
  %call66206 = call i32 @tree_int_cst_lt(%union.tree_node* %30, %union.tree_node* %call) #7
  %lnot207 = icmp eq i32 %call66206, 0
  br i1 %lnot207, label %while.body, label %for.inc150

while.body:                                       ; preds = %for.body50, %if.end136
  %next_node_to_try.1209 = phi %union.tree_node* [ %next_node_to_try.2, %if.end136 ], [ %next_node_to_try.0215, %for.body50 ]
  %next_node_offset.1208 = phi i64 [ %next_node_offset.2, %if.end136 ], [ %next_node_offset.0213, %for.body50 ]
  br i1 %tobool70, label %if.else99, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %31 = load i8** %values72, align 8
  %cmp73 = icmp eq i8* %31, null
  br i1 %cmp73, label %if.else99, label %if.then75

if.then75:                                        ; preds = %land.lhs.true
  store i64 %next_node_offset.1208, i64* %xlo68, align 8, !tbaa !3
  store i64 0, i64* %xhi, align 8, !tbaa !3
  br label %for.cond76

for.cond76:                                       ; preds = %if.end90, %if.then75
  %t69.0 = phi %union.tree_node* [ %next_node_to_try.1209, %if.then75 ], [ %39, %if.end90 ]
  %cmp77 = icmp eq %union.tree_node* %t69.0, null
  br i1 %cmp77, label %if.then79, label %if.end82

if.then79:                                        ; preds = %for.cond76
  %32 = load i8** %values72, align 8
  %33 = bitcast i8* %32 to %union.tree_node*
  store i64 0, i64* %xlo68, align 8, !tbaa !3
  br label %if.end82

if.end82:                                         ; preds = %if.then79, %for.cond76
  %t69.1 = phi %union.tree_node* [ %33, %if.then79 ], [ %t69.0, %for.cond76 ]
  %value84 = getelementptr inbounds %union.tree_node* %t69.1, i64 0, i32 0, i32 2
  %34 = bitcast i32* %value84 to %union.tree_node**
  %35 = load %union.tree_node** %34, align 8, !tbaa !0
  %call85 = call i32 @tree_int_cst_equal(%union.tree_node* %call, %union.tree_node* %35) #7
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %if.end90, label %if.then87

if.then87:                                        ; preds = %if.end82
  %chain89 = getelementptr inbounds %union.tree_node* %t69.1, i64 0, i32 0, i32 0, i32 0
  %36 = load %union.tree_node** %chain89, align 8, !tbaa !0
  %37 = load i64* %xlo68, align 8, !tbaa !3
  %add = add i64 %37, 1
  br label %if.end119

if.end90:                                         ; preds = %if.end82
  %38 = load i64* %xlo68, align 8, !tbaa !3
  %inc91 = add i64 %38, 1
  store i64 %inc91, i64* %xlo68, align 8, !tbaa !3
  %chain93 = getelementptr inbounds %union.tree_node* %t69.1, i64 0, i32 0, i32 0, i32 0
  %39 = load %union.tree_node** %chain93, align 8, !tbaa !0
  %cmp94 = icmp eq %union.tree_node* %39, %next_node_to_try.1209
  br i1 %cmp94, label %if.then96, label %for.cond76

if.then96:                                        ; preds = %if.end90
  store i64 -1, i64* %xlo68, align 8, !tbaa !3
  br label %if.end119

if.else99:                                        ; preds = %land.lhs.true, %while.body
  %40 = load %union.tree_node** %25, align 8, !tbaa !0
  %tobool101 = icmp eq %union.tree_node* %40, null
  br i1 %tobool101, label %if.else110, label %if.then102

if.then102:                                       ; preds = %if.else99
  %int_cst104 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 2
  %low105 = bitcast i32* %int_cst104 to i64*
  %41 = load i64* %low105, align 8, !tbaa !3
  %high108 = getelementptr inbounds i32* %int_cst104, i64 2
  %42 = bitcast i32* %high108 to i64*
  %43 = load i64* %42, align 8, !tbaa !3
  %call109 = call i32 @neg_double(i64 %41, i64 %43, i64* %xlo68, i64* %xhi) #7
  %.pre = load i64* %xlo68, align 8, !tbaa !3
  %.pre217 = load i64* %xhi, align 8, !tbaa !3
  br label %if.end111

if.else110:                                       ; preds = %if.else99
  store i64 0, i64* %xhi, align 8, !tbaa !3
  store i64 0, i64* %xlo68, align 8, !tbaa !3
  br label %if.end111

if.end111:                                        ; preds = %if.else110, %if.then102
  %44 = phi i64 [ 0, %if.else110 ], [ %.pre217, %if.then102 ]
  %45 = phi i64 [ 0, %if.else110 ], [ %.pre, %if.then102 ]
  %46 = load i64* %low57, align 8, !tbaa !3
  %47 = load i64* %24, align 8, !tbaa !3
  %call118 = call i32 @add_double(i64 %45, i64 %44, i64 %46, i64 %47, i64* %xlo68, i64* %xhi) #7
  br label %if.end119

if.end119:                                        ; preds = %if.then87, %if.then96, %if.end111
  %next_node_offset.2 = phi i64 [ %add, %if.then87 ], [ %next_node_offset.1208, %if.then96 ], [ %next_node_offset.1208, %if.end111 ]
  %next_node_to_try.2 = phi %union.tree_node* [ %36, %if.then87 ], [ %next_node_to_try.1209, %if.then96 ], [ %next_node_to_try.1209, %if.end111 ]
  %48 = load i64* %xhi, align 8, !tbaa !3
  %cmp120 = icmp eq i64 %48, 0
  br i1 %cmp120, label %land.lhs.true122, label %if.end136

land.lhs.true122:                                 ; preds = %if.end119
  %49 = load i64* %xlo68, align 8, !tbaa !3
  %cmp123 = icmp ult i64 %49, %count
  br i1 %cmp123, label %if.then125, label %if.end136

if.then125:                                       ; preds = %land.lhs.true122
  %conv126 = trunc i64 %49 to i32
  %rem127 = and i32 %conv126, 7
  %shl128 = shl i32 1, %rem127
  %div130 = lshr i64 %49, 3
  %idxprom131 = and i64 %div130, 536870911
  %arrayidx132 = getelementptr inbounds i8* %cases_seen, i64 %idxprom131
  %50 = load i8* %arrayidx132, align 1, !tbaa !1
  %conv133 = zext i8 %50 to i32
  %or134 = or i32 %conv133, %shl128
  %conv135 = trunc i32 %or134 to i8
  store i8 %conv135, i8* %arrayidx132, align 1, !tbaa !1
  br label %if.end136

if.end136:                                        ; preds = %if.then125, %land.lhs.true122, %if.end119
  %51 = load i64* %low57, align 8, !tbaa !3
  %52 = load i64* %24, align 8, !tbaa !3
  %call149 = call i32 @add_double(i64 %51, i64 %52, i64 1, i64 0, i64* %low57, i64* %24) #7
  %53 = load %union.tree_node** %high65, align 8, !tbaa !0
  %call66 = call i32 @tree_int_cst_lt(%union.tree_node* %53, %union.tree_node* %call) #7
  %lnot = icmp eq i32 %call66, 0
  br i1 %lnot, label %while.body, label %for.inc150

for.inc150:                                       ; preds = %if.end136, %for.body50
  %next_node_to_try.1.lcssa = phi %union.tree_node* [ %next_node_to_try.0215, %for.body50 ], [ %next_node_to_try.2, %if.end136 ]
  %next_node_offset.1.lcssa = phi i64 [ %next_node_offset.0213, %for.body50 ], [ %next_node_offset.2, %if.end136 ]
  %right151 = getelementptr inbounds %struct.case_node* %n.2214, i64 0, i32 1
  %54 = load %struct.case_node** %right151, align 8, !tbaa !0
  %tobool49 = icmp eq %struct.case_node* %54, null
  br i1 %tobool49, label %if.end154, label %for.body50

if.end154:                                        ; preds = %for.cond48.preheader, %for.inc150, %if.then2, %for.inc, %entry
  ret void
}
