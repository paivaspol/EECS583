define i32 @pushcase_range(%union.tree_node* %value1, %union.tree_node* %value2, %union.tree_node* (%union.tree_node*, %union.tree_node*)* nocapture %converter, %union.tree_node* %label, %union.tree_node** nocapture %duplicate) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt = getelementptr inbounds %struct.function* %0, i64 0, i32 1
  %1 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_case_stack = getelementptr inbounds %struct.stmt_status* %1, i64 0, i32 4
  %2 = load %struct.nesting** %x_case_stack, align 8, !tbaa !0
  %tobool = icmp eq %struct.nesting* %2, null
  br i1 %tobool, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %data = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4
  %start = bitcast %union.anon.3* %data to %struct.rtx_def**
  %3 = load %struct.rtx_def** %start, align 8, !tbaa !0
  %tobool3 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool3, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true
  %x_stack_block_stack = getelementptr inbounds %struct.stmt_status* %1, i64 0, i32 1
  %4 = load %struct.nesting** %x_stack_block_stack, align 8, !tbaa !0
  %tobool5 = icmp eq %struct.nesting* %4, null
  br i1 %tobool5, label %if.end13, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %if.end
  %depth = getelementptr inbounds %struct.nesting* %4, i64 0, i32 2
  %5 = load i32* %depth, align 4, !tbaa !4
  %depth11 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 2
  %6 = load i32* %depth11, align 4, !tbaa !4
  %cmp = icmp sgt i32 %5, %6
  br i1 %cmp, label %return, label %if.end13

if.end13:                                         ; preds = %if.end, %land.lhs.true6
  %index_expr = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 3
  %7 = load %struct.nesting** %index_expr, align 8
  %type = getelementptr inbounds %struct.nesting* %7, i64 0, i32 1
  %8 = load %struct.nesting** %type, align 8
  %9 = bitcast %struct.nesting* %8 to %union.tree_node*
  %10 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 4
  %11 = load %union.tree_node** %10, align 8, !tbaa !0
  %12 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp23 = icmp eq %union.tree_node* %9, %12
  br i1 %cmp23, label %return, label %if.end25

if.end25:                                         ; preds = %if.end13
  tail call fastcc void @check_seenlabel() #9
  %cmp26 = icmp eq %union.tree_node* %value1, null
  br i1 %cmp26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end25
  %minval = getelementptr inbounds %struct.nesting* %8, i64 0, i32 4, i32 0, i32 11
  %13 = load %struct.rtx_def** %minval, align 8
  %14 = bitcast %struct.rtx_def* %13 to %union.tree_node*
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end25
  %value1.addr.0 = phi %union.tree_node* [ %14, %if.then27 ], [ %value1, %if.end25 ]
  %cmp30 = icmp eq %union.tree_node* %value2, null
  br i1 %cmp30, label %if.end33, label %land.lhs.true35

if.end33:                                         ; preds = %if.end29
  %maxval = getelementptr inbounds %struct.nesting* %8, i64 0, i32 4, i32 0, i32 12
  %15 = load %union.tree_node*** %maxval, align 8
  %16 = bitcast %union.tree_node** %15 to %union.tree_node*
  %cond = icmp eq %union.tree_node** %15, null
  br i1 %cond, label %if.then40, label %land.lhs.true35

land.lhs.true35:                                  ; preds = %if.end29, %if.end33
  %value2.addr.084 = phi %union.tree_node* [ %16, %if.end33 ], [ %value2, %if.end29 ]
  %call = tail call i32 @tree_int_cst_lt(%union.tree_node* %value2.addr.084, %union.tree_node* %value1.addr.0) #7
  %tobool36 = icmp eq i32 %call, 0
  br i1 %tobool36, label %if.end43, label %return

if.then40:                                        ; preds = %if.end33
  %17 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 13
  %18 = load %union.tree_node** %17, align 8, !tbaa !0
  br label %if.end43

if.end43:                                         ; preds = %land.lhs.true35, %if.then40
  %value2.addr.1 = phi %union.tree_node* [ %18, %if.then40 ], [ %value2.addr.084, %land.lhs.true35 ]
  %call44 = tail call %union.tree_node* %converter(%union.tree_node* %11, %union.tree_node* %value1.addr.0) #7
  %call45 = tail call %union.tree_node* %converter(%union.tree_node* %11, %union.tree_node* %value2.addr.1) #7
  %static_flag = getelementptr inbounds %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast [4 x i8]* %static_flag to i32*
  %bf.load = load i32* %19, align 8
  %bf.clear = and i32 %bf.load, 262144
  %tobool47 = icmp eq i32 %bf.clear, 0
  br i1 %tobool47, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end43
  %call48 = tail call i32 @int_fits_type_p(%union.tree_node* %call44, %union.tree_node* %9) #7
  %tobool49 = icmp eq i32 %call48, 0
  br i1 %tobool49, label %return, label %if.end51

if.end51:                                         ; preds = %lor.lhs.false
  %static_flag53 = getelementptr inbounds %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast [4 x i8]* %static_flag53 to i32*
  %bf.load54 = load i32* %20, align 8
  %bf.clear56 = and i32 %bf.load54, 262144
  %tobool57 = icmp eq i32 %bf.clear56, 0
  br i1 %tobool57, label %lor.lhs.false58, label %return

lor.lhs.false58:                                  ; preds = %if.end51
  %call59 = tail call i32 @int_fits_type_p(%union.tree_node* %call45, %union.tree_node* %9) #7
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %return, label %if.end62

if.end62:                                         ; preds = %lor.lhs.false58
  %call63 = tail call i32 @add_case_node(%union.tree_node* %call44, %union.tree_node* %call45, %union.tree_node* %label, %union.tree_node** %duplicate) #9
  br label %return

return:                                           ; preds = %if.end51, %lor.lhs.false58, %if.end43, %lor.lhs.false, %land.lhs.true35, %if.end13, %land.lhs.true6, %entry, %land.lhs.true, %if.end62
  %retval.0 = phi i32 [ %call63, %if.end62 ], [ 1, %land.lhs.true ], [ 1, %entry ], [ 5, %land.lhs.true6 ], [ 0, %if.end13 ], [ 4, %land.lhs.true35 ], [ 3, %lor.lhs.false ], [ 3, %if.end43 ], [ 3, %lor.lhs.false58 ], [ 3, %if.end51 ]
  ret i32 %retval.0
}
