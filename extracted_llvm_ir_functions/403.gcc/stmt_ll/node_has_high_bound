define internal fastcc i32 @node_has_high_bound(%struct.case_node* nocapture %node, %union.tree_node* nocapture %index_type) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.case_node* %node}, i64 0, metadata !2046), !dbg !4806
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %index_type}, i64 0, metadata !2047), !dbg !4807
  %0 = getelementptr inbounds %union.tree_node* %index_type, i64 0, i32 0, i32 13, !dbg !4808
  %1 = load %union.tree_node** %0, align 8, !dbg !4808, !tbaa !2438
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !4808
  br i1 %cmp, label %return, label %if.end, !dbg !4808

if.end:                                           ; preds = %entry
  %high = getelementptr inbounds %struct.case_node* %node, i64 0, i32 4, !dbg !4809
  %2 = load %union.tree_node** %high, align 8, !dbg !4809, !tbaa !2438
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %2, %union.tree_node* %1) #8, !dbg !4809
  %tobool = icmp eq i32 %call, 0, !dbg !4809
  br i1 %tobool, label %if.end4, label %return, !dbg !4809

if.end4:                                          ; preds = %if.end
  %right = getelementptr inbounds %struct.case_node* %node, i64 0, i32 1, !dbg !4810
  %3 = load %struct.case_node** %right, align 8, !dbg !4810, !tbaa !2438
  %tobool5 = icmp eq %struct.case_node* %3, null, !dbg !4810
  br i1 %tobool5, label %if.end7, label %return, !dbg !4810

if.end7:                                          ; preds = %if.end4
  %4 = load %union.tree_node** %high, align 8, !dbg !4811, !tbaa !2438
  %type9 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1, !dbg !4811
  %5 = load %union.tree_node** %type9, align 8, !dbg !4811, !tbaa !2438
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !dbg !4811, !tbaa !2438
  %call11 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %5, %union.tree_node* %4, %union.tree_node* %6) #8, !dbg !4811
  %call12 = tail call %union.tree_node* @fold(%union.tree_node* %call11) #8, !dbg !4811
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call12}, i64 0, metadata !2048), !dbg !4811
  %7 = load %union.tree_node** %high, align 8, !dbg !4812, !tbaa !2438
  %call14 = tail call i32 @tree_int_cst_lt(%union.tree_node* %7, %union.tree_node* %call12) #8, !dbg !4812
  %tobool15 = icmp eq i32 %call14, 0, !dbg !4812
  br i1 %tobool15, label %return, label %for.cond, !dbg !4812

for.cond:                                         ; preds = %if.end7, %for.body
  %node.pn = phi %struct.case_node* [ %pnode.0, %for.body ], [ %node, %if.end7 ]
  %pnode.0.in = getelementptr inbounds %struct.case_node* %node.pn, i64 0, i32 2, !dbg !4813
  %pnode.0 = load %struct.case_node** %pnode.0.in, align 8, !dbg !4813
  %tobool18 = icmp eq %struct.case_node* %pnode.0, null, !dbg !4813
  br i1 %tobool18, label %return, label %for.body, !dbg !4813

for.body:                                         ; preds = %for.cond
  %low = getelementptr inbounds %struct.case_node* %pnode.0, i64 0, i32 3, !dbg !4815
  %8 = load %union.tree_node** %low, align 8, !dbg !4815, !tbaa !2438
  %call19 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call12, %union.tree_node* %8) #8, !dbg !4815
  %tobool20 = icmp eq i32 %call19, 0, !dbg !4815
  br i1 %tobool20, label %for.cond, label %return, !dbg !4815

return:                                           ; preds = %for.cond, %for.body, %if.end7, %if.end4, %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %if.end ], [ 0, %if.end4 ], [ 0, %if.end7 ], [ 0, %for.cond ], [ 1, %for.body ]
  ret i32 %retval.0, !dbg !4816
}
