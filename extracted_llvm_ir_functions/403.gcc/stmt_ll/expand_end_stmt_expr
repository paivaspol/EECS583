define %union.tree_node* @expand_end_stmt_expr(%union.tree_node* %t) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr = getelementptr inbounds %struct.function* %0, i64 0, i32 2
  %1 = load %struct.expr_status** %expr, align 8, !tbaa !0
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %1, i64 0, i32 1
  %2 = load i32* %x_inhibit_defer_pop, align 4, !tbaa !4
  %sub = add nsw i32 %2, -1
  store i32 %sub, i32* %x_inhibit_defer_pop, align 4, !tbaa !4
  %stmt = getelementptr inbounds %struct.function* %0, i64 0, i32 1
  %3 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_last_expr_value = getelementptr inbounds %struct.stmt_status* %3, i64 0, i32 9
  %4 = load %struct.rtx_def** %x_last_expr_value, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %x_last_expr_type = getelementptr inbounds %struct.stmt_status* %3, i64 0, i32 8
  %5 = load %union.tree_node** %x_last_expr_type, align 8, !tbaa !0
  %tobool2 = icmp eq %union.tree_node* %5, null
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  store %struct.rtx_def* %6, %struct.rtx_def** %x_last_expr_value, align 8, !tbaa !0
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !0
  %8 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt5 = getelementptr inbounds %struct.function* %8, i64 0, i32 1
  %9 = load %struct.stmt_status** %stmt5, align 8, !tbaa !0
  %x_last_expr_type6 = getelementptr inbounds %struct.stmt_status* %9, i64 0, i32 8
  store %union.tree_node* %7, %union.tree_node** %x_last_expr_type6, align 8, !tbaa !0
  br label %if.end61

if.else:                                          ; preds = %lor.lhs.false
  %10 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then56 [
    i32 61, label %if.end61
    i32 67, label %if.end61
    i32 68, label %if.end61
    i32 54, label %if.end61
    i32 55, label %if.end61
    i32 58, label %if.end61
    i32 134, label %if.end61
    i32 56, label %if.end61
    i32 140, label %if.end61
  ]

if.then56:                                        ; preds = %if.else
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %4, i32 0) #7
  %11 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt59 = getelementptr inbounds %struct.function* %11, i64 0, i32 1
  %12 = load %struct.stmt_status** %stmt59, align 8, !tbaa !0
  %x_last_expr_value60 = getelementptr inbounds %struct.stmt_status* %12, i64 0, i32 9
  store %struct.rtx_def* %call, %struct.rtx_def** %x_last_expr_value60, align 8, !tbaa !0
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.then56, %if.then
  tail call void @emit_queue() #7
  %13 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt62 = getelementptr inbounds %struct.function* %13, i64 0, i32 1
  %14 = load %struct.stmt_status** %stmt62, align 8, !tbaa !0
  %x_last_expr_type63 = getelementptr inbounds %struct.stmt_status* %14, i64 0, i32 8
  %15 = load %union.tree_node** %x_last_expr_type63, align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %15, %union.tree_node** %type, align 8, !tbaa !0
  %16 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt64 = getelementptr inbounds %struct.function* %16, i64 0, i32 1
  %17 = load %struct.stmt_status** %stmt64, align 8, !tbaa !0
  %x_last_expr_value65 = getelementptr inbounds %struct.stmt_status* %17, i64 0, i32 9
  %18 = load %struct.rtx_def** %x_last_expr_value65, align 8, !tbaa !0
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %19 = bitcast i32* %arrayidx to %struct.rtx_def**
  store %struct.rtx_def* %18, %struct.rtx_def** %19, align 8, !tbaa !0
  %call66 = tail call %struct.rtx_def* @get_insns() #7
  %20 = bitcast i32* %operands to %struct.rtx_def**
  store %struct.rtx_def* %call66, %struct.rtx_def** %20, align 8, !tbaa !0
  %21 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_rtl_expr_chain = getelementptr inbounds %struct.function* %21, i64 0, i32 27
  %22 = load %union.tree_node** %x_rtl_expr_chain, align 8, !tbaa !0
  %call70 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %t, %union.tree_node* %22) #7
  %23 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_rtl_expr_chain71 = getelementptr inbounds %struct.function* %23, i64 0, i32 27
  store %union.tree_node* %call70, %union.tree_node** %x_rtl_expr_chain71, align 8, !tbaa !0
  tail call void @end_sequence() #7
  %side_effects_flag = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast [4 x i8]* %side_effects_flag to i32*
  %bf.load73 = load i32* %24, align 8
  %bf.set = or i32 %bf.load73, 256
  store i32 %bf.set, i32* %24, align 8
  %25 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt75 = getelementptr inbounds %struct.function* %25, i64 0, i32 1
  %26 = load %struct.stmt_status** %stmt75, align 8, !tbaa !0
  %x_last_expr_value76 = getelementptr inbounds %struct.stmt_status* %26, i64 0, i32 9
  %27 = load %struct.rtx_def** %x_last_expr_value76, align 8, !tbaa !0
  %call77 = tail call i32 @volatile_refs_p(%struct.rtx_def* %27) #7
  %bf.load79 = load i32* %24, align 8
  %bf.value = shl i32 %call77, 11
  %bf.shl = and i32 %bf.value, 2048
  %bf.clear80 = and i32 %bf.load79, -2049
  %bf.set81 = or i32 %bf.clear80, %bf.shl
  store i32 %bf.set81, i32* %24, align 8
  %28 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt82 = getelementptr inbounds %struct.function* %28, i64 0, i32 1
  %29 = load %struct.stmt_status** %stmt82, align 8, !tbaa !0
  %x_last_expr_type83 = getelementptr inbounds %struct.stmt_status* %29, i64 0, i32 8
  store %union.tree_node* null, %union.tree_node** %x_last_expr_type83, align 8, !tbaa !0
  %30 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt84 = getelementptr inbounds %struct.function* %30, i64 0, i32 1
  %31 = load %struct.stmt_status** %stmt84, align 8, !tbaa !0
  %x_expr_stmts_for_value = getelementptr inbounds %struct.stmt_status* %31, i64 0, i32 10
  %32 = load i32* %x_expr_stmts_for_value, align 4, !tbaa !4
  %dec = add nsw i32 %32, -1
  store i32 %dec, i32* %x_expr_stmts_for_value, align 4, !tbaa !4
  ret %union.tree_node* %t
}
