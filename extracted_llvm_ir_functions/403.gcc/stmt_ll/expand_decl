define void @expand_decl(%union.tree_node* %decl) #0 {
entry:
  %unsignedp = alloca i32, align 4
  %type1 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.end426 [
    i32 32, label %if.then
    i32 34, label %if.end28
  ]

if.then:                                          ; preds = %entry
  %type3 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type3, i64 0, i32 6
  %2 = bitcast [4 x i8]* %mode to i32*
  %bf.load4 = load i32* %2, align 4
  %bf.lshr = lshr i32 %bf.load4, 9
  %mode7 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %3 = bitcast [8 x i8]* %mode7 to i64*
  %4 = zext i32 %bf.lshr to i64
  %bf.load8 = load i64* %3, align 8
  %bf.value = and i64 %4, 127
  %bf.clear9 = and i64 %bf.load8, -256
  %bf.set = or i64 %bf.value, %bf.clear9
  store i64 %bf.set, i64* %3, align 8
  %align = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 7
  %5 = bitcast %union.tree_node** %align to i32*
  %6 = load i32* %5, align 4, !tbaa !4
  %u1 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %7 = bitcast %union.anon* %u1 to i32*
  %bf.load12 = load i32* %7, align 4
  %bf.value13 = and i32 %6, 16777215
  %bf.clear14 = and i32 %bf.load12, -16777216
  %bf.set15 = or i32 %bf.clear14, %bf.value13
  store i32 %bf.set15, i32* %7, align 4
  %size = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %8 = bitcast i32* %size to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !0
  %size18 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4
  store %union.tree_node* %9, %union.tree_node** %size18, align 8, !tbaa !0
  %10 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 4
  %11 = load %union.tree_node** %10, align 8, !tbaa !0
  %size_unit21 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 7
  store %union.tree_node* %11, %union.tree_node** %size_unit21, align 8, !tbaa !0
  br label %if.end426

if.end28:                                         ; preds = %entry
  %bf.clear32 = and i32 %bf.load, 262144
  %tobool = icmp eq i32 %bf.clear32, 0
  br i1 %tobool, label %lor.lhs.false, label %if.end426

lor.lhs.false:                                    ; preds = %if.end28
  %external_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %12 = bitcast [8 x i8]* %external_flag to i64*
  %bf.load34 = load i64* %12, align 8
  %bf.cast = and i64 %bf.load34, 256
  %tobool37 = icmp eq i64 %bf.cast, 0
  br i1 %tobool37, label %if.end39, label %if.end426

if.end39:                                         ; preds = %lor.lhs.false
  %13 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp40 = icmp eq %union.tree_node* %0, %13
  br i1 %cmp40, label %if.then41, label %if.else

if.then41:                                        ; preds = %if.end39
  %14 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %14) #7
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call, %struct.rtx_def** %rtl, align 8, !tbaa !0
  br label %if.end426

if.else:                                          ; preds = %if.end39
  %size44 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4
  %15 = load %union.tree_node** %size44, align 8, !tbaa !0
  %cmp45 = icmp eq %union.tree_node* %15, null
  br i1 %cmp45, label %if.then46, label %if.else58

if.then46:                                        ; preds = %if.else
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %16 = load %union.tree_node** %initial, align 8, !tbaa !0
  %cmp48 = icmp eq %union.tree_node* %16, null
  br i1 %cmp48, label %if.then49, label %if.else51

if.then49:                                        ; preds = %if.then46
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call50 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %17) #7
  br label %if.end55

if.else51:                                        ; preds = %if.then46
  %18 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %18, 25
  %19 = and i32 %and, 1
  %20 = or i32 %19, 4
  %call53 = call %struct.rtx_def* @gen_reg_rtx(i32 %20) #7
  %call54 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call53) #7
  br label %if.end55

if.end55:                                         ; preds = %if.else51, %if.then49
  %x.0 = phi %struct.rtx_def* [ %call50, %if.then49 ], [ %call54, %if.else51 ]
  call void @set_mem_attributes(%struct.rtx_def* %x.0, %union.tree_node* %decl, i32 1) #7
  %rtl57 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* %x.0, %struct.rtx_def** %rtl57, align 8, !tbaa !0
  br label %if.end426

if.else58:                                        ; preds = %if.else
  %bf.cast63 = and i64 %bf.load34, 255
  %cmp64 = icmp eq i64 %bf.cast63, 51
  br i1 %cmp64, label %if.else243, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else58
  %21 = load i32* @flag_float_store, align 4, !tbaa !4
  %tobool65 = icmp eq i32 %21, 0
  br i1 %tobool65, label %land.lhs.true72, label %land.lhs.true66

land.lhs.true66:                                  ; preds = %land.lhs.true
  %code68 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %22 = bitcast [4 x i8]* %code68 to i32*
  %bf.load69 = load i32* %22, align 8
  %bf.clear70 = and i32 %bf.load69, 255
  %cmp71 = icmp eq i32 %bf.clear70, 7
  br i1 %cmp71, label %if.else243, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %land.lhs.true, %land.lhs.true66
  %bf.clear76 = and i32 %bf.load, 2048
  %tobool77 = icmp eq i32 %bf.clear76, 0
  br i1 %tobool77, label %land.lhs.true78, label %if.else243

land.lhs.true78:                                  ; preds = %land.lhs.true72
  %bf.cast83 = and i64 %bf.load34, 1024
  %tobool84 = icmp ne i64 %bf.cast83, 0
  %23 = load i32* @optimize, align 4, !tbaa !4
  %tobool86 = icmp ne i32 %23, 0
  %or.cond = or i1 %tobool84, %tobool86
  br i1 %or.cond, label %if.then87, label %if.else243

if.then87:                                        ; preds = %land.lhs.true78
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load89 = load i32* %24, align 8
  %bf.lshr90 = lshr i32 %bf.load89, 13
  %bf.clear91 = and i32 %bf.lshr90, 1
  store i32 %bf.clear91, i32* %unsignedp, align 4, !tbaa !4
  %bf.load94.tr = trunc i64 %bf.load34 to i32
  %bf.cast96 = and i32 %bf.load94.tr, 255
  %call97 = call i32 @promote_mode(%union.tree_node* %0, i32 %bf.cast96, i32* %unsignedp, i32 0) #7
  %call98 = call %struct.rtx_def* @gen_reg_rtx(i32 %call97) #7
  %rtl100 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call98, %struct.rtx_def** %rtl100, align 8, !tbaa !0
  %tobool103 = icmp eq %struct.rtx_def* %call98, null
  br i1 %tobool103, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then87
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %25 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %if.then87, %cond.false
  %26 = phi %struct.rtx_def* [ %call98, %if.then87 ], [ %25, %cond.false ]
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load109 = load i32* %27, align 8
  %bf.clear110 = and i32 %bf.load109, 65535
  %cmp111 = icmp eq i32 %bf.clear110, 61
  %tobool115 = icmp eq %struct.rtx_def* %26, null
  br i1 %cmp111, label %if.then112, label %if.else125

if.then112:                                       ; preds = %cond.end
  br i1 %tobool115, label %cond.false119, label %cond.end122

cond.false119:                                    ; preds = %if.then112
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %28 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  br label %cond.end122

cond.end122:                                      ; preds = %if.then112, %cond.false119
  %cond123 = phi %struct.rtx_def* [ %28, %cond.false119 ], [ %26, %if.then112 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond123, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %29 = load i32* %rtuint, align 4, !tbaa !4
  %idxprom = zext i32 %29 to i64
  %30 = load %struct.function** @cfun, align 8, !tbaa !0
  %emit = getelementptr inbounds %struct.function* %30, i64 0, i32 3
  %31 = load %struct.emit_status** %emit, align 8, !tbaa !0
  %regno_decl = getelementptr inbounds %struct.emit_status* %31, i64 0, i32 11
  %32 = load %union.tree_node*** %regno_decl, align 8, !tbaa !0
  %arrayidx124 = getelementptr inbounds %union.tree_node** %32, i64 %idxprom
  store %union.tree_node* %decl, %union.tree_node** %arrayidx124, align 8, !tbaa !0
  br label %if.end183

if.else125:                                       ; preds = %cond.end
  br i1 %tobool115, label %cond.false132, label %cond.end135

cond.false132:                                    ; preds = %if.else125
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %33 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  %.phi.trans.insert = bitcast %struct.rtx_def* %33 to i32*
  %bf.load137.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end135

cond.end135:                                      ; preds = %if.else125, %cond.false132
  %bf.load137 = phi i32 [ %bf.load137.pre, %cond.false132 ], [ %bf.load109, %if.else125 ]
  %34 = phi %struct.rtx_def* [ %33, %cond.false132 ], [ %26, %if.else125 ]
  %bf.clear138 = and i32 %bf.load137, 65535
  %cmp139 = icmp eq i32 %bf.clear138, 65
  br i1 %cmp139, label %if.then140, label %if.end183

if.then140:                                       ; preds = %cond.end135
  %tobool143 = icmp eq %struct.rtx_def* %34, null
  br i1 %tobool143, label %cond.false147, label %cond.end150

cond.false147:                                    ; preds = %if.then140
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %35 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  br label %cond.end150

cond.end150:                                      ; preds = %if.then140, %cond.false147
  %cond151 = phi %struct.rtx_def* [ %35, %cond.false147 ], [ %34, %if.then140 ]
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %cond151, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %arrayidx155 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 0
  %rtuint156 = bitcast %union.rtunion_def* %arrayidx155 to i32*
  %37 = load i32* %rtuint156, align 4, !tbaa !4
  %idxprom157 = zext i32 %37 to i64
  %38 = load %struct.function** @cfun, align 8, !tbaa !0
  %emit158 = getelementptr inbounds %struct.function* %38, i64 0, i32 3
  %39 = load %struct.emit_status** %emit158, align 8, !tbaa !0
  %regno_decl159 = getelementptr inbounds %struct.emit_status* %39, i64 0, i32 11
  %40 = load %union.tree_node*** %regno_decl159, align 8, !tbaa !0
  %arrayidx160 = getelementptr inbounds %union.tree_node** %40, i64 %idxprom157
  store %union.tree_node* %decl, %union.tree_node** %arrayidx160, align 8, !tbaa !0
  %41 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  %tobool163 = icmp eq %struct.rtx_def* %41, null
  br i1 %tobool163, label %cond.false167, label %cond.end170

cond.false167:                                    ; preds = %cond.end150
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %42 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  br label %cond.end170

cond.end170:                                      ; preds = %cond.end150, %cond.false167
  %cond171 = phi %struct.rtx_def* [ %42, %cond.false167 ], [ %41, %cond.end150 ]
  %arrayidx173 = getelementptr inbounds %struct.rtx_def* %cond171, i64 0, i32 1, i64 1
  %rtx174 = bitcast %union.rtunion_def* %arrayidx173 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx174, align 8, !tbaa !0
  %arrayidx176 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtuint177 = bitcast %union.rtunion_def* %arrayidx176 to i32*
  %44 = load i32* %rtuint177, align 4, !tbaa !4
  %idxprom178 = zext i32 %44 to i64
  %45 = load %struct.function** @cfun, align 8, !tbaa !0
  %emit179 = getelementptr inbounds %struct.function* %45, i64 0, i32 3
  %46 = load %struct.emit_status** %emit179, align 8, !tbaa !0
  %regno_decl180 = getelementptr inbounds %struct.emit_status* %46, i64 0, i32 11
  %47 = load %union.tree_node*** %regno_decl180, align 8, !tbaa !0
  %arrayidx181 = getelementptr inbounds %union.tree_node** %47, i64 %idxprom178
  store %union.tree_node* %decl, %union.tree_node** %arrayidx181, align 8, !tbaa !0
  br label %if.end183

if.end183:                                        ; preds = %cond.end135, %cond.end170, %cond.end122
  %48 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  %tobool186 = icmp eq %struct.rtx_def* %48, null
  br i1 %tobool186, label %cond.false190, label %cond.end193

cond.false190:                                    ; preds = %if.end183
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %49 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  br label %cond.end193

cond.end193:                                      ; preds = %if.end183, %cond.false190
  %cond194 = phi %struct.rtx_def* [ %49, %cond.false190 ], [ %48, %if.end183 ]
  call void @mark_user_reg(%struct.rtx_def* %cond194) #7
  %bf.load197 = load i32* %24, align 8
  %bf.clear198 = and i32 %bf.load197, 255
  switch i32 %bf.clear198, label %if.end224 [
    i32 13, label %if.then206
    i32 15, label %if.then206
  ]

if.then206:                                       ; preds = %cond.end193, %cond.end193
  %50 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  %tobool209 = icmp eq %struct.rtx_def* %50, null
  br i1 %tobool209, label %cond.false213, label %cond.end216

cond.false213:                                    ; preds = %if.then206
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %51 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  br label %cond.end216

cond.end216:                                      ; preds = %if.then206, %cond.false213
  %cond217 = phi %struct.rtx_def* [ %51, %cond.false213 ], [ %50, %if.then206 ]
  %52 = load %union.tree_node** %type1, align 8, !tbaa !0
  %type221 = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 0, i32 1
  %53 = load %union.tree_node** %type221, align 8, !tbaa !0
  %align223 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 7
  %54 = bitcast %union.tree_node** %align223 to i32*
  %55 = load i32* %54, align 4, !tbaa !4
  call void @mark_reg_pointer(%struct.rtx_def* %cond217, i32 %55) #7
  br label %if.end224

if.end224:                                        ; preds = %cond.end193, %cond.end216
  %56 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  %tobool227 = icmp eq %struct.rtx_def* %56, null
  br i1 %tobool227, label %cond.false231, label %cond.end234

cond.false231:                                    ; preds = %if.end224
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %57 = load %struct.rtx_def** %rtl100, align 8, !tbaa !0
  br label %cond.end234

cond.end234:                                      ; preds = %if.end224, %cond.false231
  %cond235 = phi %struct.rtx_def* [ %57, %cond.false231 ], [ %56, %if.end224 ]
  call void @maybe_set_unchanging(%struct.rtx_def* %cond235, %union.tree_node* %decl) #7
  %bf.load237 = load i32* %1, align 8
  %bf.clear239 = and i32 %bf.load237, 1024
  %tobool240 = icmp eq i32 %bf.clear239, 0
  br i1 %tobool240, label %if.end426, label %if.then241

if.then241:                                       ; preds = %cond.end234
  call void @put_var_into_stack(%union.tree_node* %decl) #7
  br label %if.end426

if.else243:                                       ; preds = %land.lhs.true72, %if.else58, %land.lhs.true78, %land.lhs.true66
  %size_unit245 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 7
  %58 = load %union.tree_node** %size_unit245, align 8, !tbaa !0
  %code247 = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast [4 x i8]* %code247 to i32*
  %bf.load248 = load i32* %59, align 8
  %bf.clear249 = and i32 %bf.load248, 255
  %cmp250 = icmp eq i32 %bf.clear249, 25
  br i1 %cmp250, label %land.lhs.true251, label %if.else375

land.lhs.true251:                                 ; preds = %if.else243
  %60 = load i32* @flag_stack_check, align 4, !tbaa !4
  %tobool252 = icmp eq i32 %60, 0
  br i1 %tobool252, label %if.then262, label %land.lhs.true253

land.lhs.true253:                                 ; preds = %land.lhs.true251
  %61 = load i32* @target_flags, align 4, !tbaa !4
  %and256 = lshr i32 %61, 23
  %62 = and i32 %and256, 4
  %sub = sub i32 4092, %62
  %div = udiv i32 %sub, 100
  %conv523 = zext i32 %div to i64
  %call259 = call i32 @compare_tree_int(%union.tree_node* %58, i64 %conv523) #7
  %cmp260 = icmp sgt i32 %call259, 0
  br i1 %cmp260, label %if.else375, label %if.then262

if.then262:                                       ; preds = %land.lhs.true251, %land.lhs.true253
  %rtl265 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %63 = load %struct.rtx_def** %rtl265, align 8, !tbaa !0
  %cmp266 = icmp eq %struct.rtx_def* %63, null
  br i1 %cmp266, label %if.end319, label %cond.end278

cond.end278:                                      ; preds = %if.then262
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load280 = load i32* %64, align 8
  %bf.clear281 = and i32 %bf.load280, 65535
  %cmp282 = icmp eq i32 %bf.clear281, 66
  br i1 %cmp282, label %cond.end294, label %if.then303

cond.end294:                                      ; preds = %cond.end278
  %arrayidx297 = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 1, i64 0
  %rtx298 = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**
  %65 = load %struct.rtx_def** %rtx298, align 8, !tbaa !0
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load299 = load i32* %66, align 8
  %bf.clear300 = and i32 %bf.load299, 65535
  %cmp301 = icmp eq i32 %bf.clear300, 61
  br i1 %cmp301, label %if.end319, label %if.then303

if.then303:                                       ; preds = %cond.end294, %cond.end278
  call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 3969, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_decl, i64 0, i64 0)) #8
  unreachable

if.end319:                                        ; preds = %cond.end294, %if.then262
  %oldaddr.0 = phi %struct.rtx_def* [ null, %if.then262 ], [ %65, %cond.end294 ]
  %bf.load322 = load i64* %12, align 8
  %bf.load322.tr = trunc i64 %bf.load322 to i32
  %bf.cast324 = and i32 %bf.load322.tr, 255
  %cmp325 = icmp eq i32 %bf.cast324, 51
  br i1 %cmp325, label %cond.end337, label %cond.false328

cond.false328:                                    ; preds = %if.end319
  %idxprom334522 = zext i32 %bf.cast324 to i64
  %arrayidx335 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom334522
  %67 = load i16* %arrayidx335, align 2, !tbaa !6
  %conv336 = zext i16 %67 to i32
  br label %cond.end337

cond.end337:                                      ; preds = %if.end319, %cond.false328
  %cond338 = phi i32 [ %conv336, %cond.false328 ], [ 128, %if.end319 ]
  %u1340 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %68 = bitcast %union.anon* %u1340 to i32*
  %bf.load342 = load i32* %68, align 4
  %bf.clear344 = and i32 %bf.load342, -16777216
  %bf.set345 = or i32 %bf.clear344, %cond338
  store i32 %bf.set345, i32* %68, align 4
  %bf.clear348 = and i64 %bf.load322, -34359738369
  store i64 %bf.clear348, i64* %12, align 8
  %call349 = call %struct.rtx_def* @assign_temp(%union.tree_node* %decl, i32 1, i32 1, i32 1) #7
  call void @set_mem_attributes(%struct.rtx_def* %call349, %union.tree_node* %decl, i32 1) #7
  store %struct.rtx_def* %call349, %struct.rtx_def** %rtl265, align 8, !tbaa !0
  %tobool352 = icmp eq %struct.rtx_def* %oldaddr.0, null
  br i1 %tobool352, label %if.end426, label %if.then353

if.then353:                                       ; preds = %cond.end337
  %tobool356 = icmp eq %struct.rtx_def* %call349, null
  br i1 %tobool356, label %cond.false360, label %cond.end363

cond.false360:                                    ; preds = %if.then353
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #7
  %69 = load %struct.rtx_def** %rtl265, align 8, !tbaa !0
  br label %cond.end363

cond.end363:                                      ; preds = %if.then353, %cond.false360
  %cond364 = phi %struct.rtx_def* [ %69, %cond.false360 ], [ %call349, %if.then353 ]
  %arrayidx366 = getelementptr inbounds %struct.rtx_def* %cond364, i64 0, i32 1, i64 0
  %rtx367 = bitcast %union.rtunion_def* %arrayidx366 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx367, align 8, !tbaa !0
  %call368 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %70, %struct.rtx_def* %oldaddr.0) #7
  %cmp369 = icmp eq %struct.rtx_def* %call368, %oldaddr.0
  br i1 %cmp369, label %if.end426, label %if.then371

if.then371:                                       ; preds = %cond.end363
  %call372 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %oldaddr.0, %struct.rtx_def* %call368) #7
  br label %if.end426

if.else375:                                       ; preds = %land.lhs.true253, %if.else243
  call void @do_pending_stack_adjust() #7
  call void @save_stack_pointer() #9
  %code379 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %71 = bitcast [4 x i8]* %code379 to i32*
  %bf.load380 = load i32* %71, align 8
  %bf.clear381 = and i32 %bf.load380, 255
  %cmp382 = icmp eq i32 %bf.clear381, 18
  br i1 %cmp382, label %land.lhs.true384, label %if.end392

land.lhs.true384:                                 ; preds = %if.else375
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %72 = load i8** %values, align 8
  %tobool386 = icmp eq i8* %72, null
  br i1 %tobool386, label %if.end392, label %if.then387

if.then387:                                       ; preds = %land.lhs.true384
  %maxval = getelementptr inbounds i8* %72, i64 112
  %73 = bitcast i8* %maxval to %union.tree_node**
  %74 = load %union.tree_node** %73, align 8, !tbaa !0
  %75 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call391 = call %struct.rtx_def* @expand_expr(%union.tree_node* %74, %struct.rtx_def* %75, i32 0, i32 0) #7
  br label %if.end392

if.end392:                                        ; preds = %land.lhs.true384, %if.then387, %if.else375
  %76 = load %union.tree_node** %size_unit245, align 8, !tbaa !0
  %call395 = call %struct.rtx_def* @expand_expr(%union.tree_node* %76, %struct.rtx_def* null, i32 0, i32 0) #7
  call void @free_temp_slots() #7
  %77 = load %union.tree_node** %type1, align 8, !tbaa !0
  %align399 = getelementptr inbounds %union.tree_node* %77, i64 0, i32 0, i32 7
  %78 = bitcast %union.tree_node** %align399 to i32*
  %79 = load i32* %78, align 4, !tbaa !4
  %call400 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call395, %struct.rtx_def* null, i32 %79) #7
  %bf.load403 = load i64* %12, align 8
  %bf.load403.tr = trunc i64 %bf.load403 to i32
  %bf.cast405 = and i32 %bf.load403.tr, 255
  %call406 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast405, %struct.rtx_def* %call400) #7
  call void @set_mem_attributes(%struct.rtx_def* %call406, %union.tree_node* %decl, i32 1) #7
  %rtl408 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call406, %struct.rtx_def** %rtl408, align 8, !tbaa !0
  %80 = load i32* @target_flags, align 4, !tbaa !4
  %and409 = lshr i32 %80, 20
  %81 = and i32 %and409, 32
  %82 = add i32 %81, 32
  %u1413 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %83 = bitcast %union.anon* %u1413 to i32*
  %bf.load415 = load i32* %83, align 4
  %bf.clear417 = and i32 %bf.load415, -16777216
  %bf.set418 = or i32 %82, %bf.clear417
  store i32 %bf.set418, i32* %83, align 4
  %bf.load421 = load i64* %12, align 8
  %bf.clear422 = and i64 %bf.load421, -34359738369
  store i64 %bf.clear422, i64* %12, align 8
  br label %if.end426

if.end426:                                        ; preds = %entry, %cond.end234, %cond.end363, %cond.end337, %lor.lhs.false, %if.end28, %if.end55, %if.end392, %if.then371, %if.then241, %if.then, %if.then41
  ret void
}
