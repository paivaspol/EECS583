define void @expand_label(%union.tree_node* %label) #0 {
entry:
  tail call void @do_pending_stack_adjust() #7
  %call = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %label) #9
  %call1 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call) #7
  %name = getelementptr inbounds %union.tree_node* %label, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = getelementptr inbounds i8** %id, i64 1
  %2 = load i8** %1, align 8, !tbaa !0
  %rtl = getelementptr inbounds %union.tree_node* %label, i64 0, i32 0, i32 17
  %3 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  %tobool5 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool5, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* %label, i8* null) #7
  %4 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi %struct.rtx_def* [ %4, %cond.false ], [ %3, %if.then ]
  %5 = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 6, i32 0
  %.c = ptrtoint i8* %2 to i64
  store i64 %.c, i64* %5, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %cond.end
  %6 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt = getelementptr inbounds %struct.function* %6, i64 0, i32 1
  %7 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_stack_block_stack = getelementptr inbounds %struct.stmt_status* %7, i64 0, i32 1
  %8 = load %struct.nesting** %x_stack_block_stack, align 8, !tbaa !0
  %cmp = icmp eq %struct.nesting* %8, null
  br i1 %cmp, label %if.end20, label %if.then10

if.then10:                                        ; preds = %if.end
  %call11 = tail call i8* @ggc_alloc(i64 16) #7
  %9 = bitcast i8* %call11 to %struct.label_chain*
  %10 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt12 = getelementptr inbounds %struct.function* %10, i64 0, i32 1
  %11 = load %struct.stmt_status** %stmt12, align 8, !tbaa !0
  %x_stack_block_stack13 = getelementptr inbounds %struct.stmt_status* %11, i64 0, i32 1
  %12 = load %struct.nesting** %x_stack_block_stack13, align 8, !tbaa !0
  %label_chain = getelementptr inbounds %struct.nesting* %12, i64 0, i32 4, i32 0, i32 6
  %13 = load %struct.label_chain** %label_chain, align 8, !tbaa !0
  %next = bitcast i8* %call11 to %struct.label_chain**
  store %struct.label_chain* %13, %struct.label_chain** %next, align 8, !tbaa !0
  %14 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt14 = getelementptr inbounds %struct.function* %14, i64 0, i32 1
  %15 = load %struct.stmt_status** %stmt14, align 8, !tbaa !0
  %x_stack_block_stack15 = getelementptr inbounds %struct.stmt_status* %15, i64 0, i32 1
  %16 = load %struct.nesting** %x_stack_block_stack15, align 8, !tbaa !0
  %label_chain18 = getelementptr inbounds %struct.nesting* %16, i64 0, i32 4, i32 0, i32 6
  store %struct.label_chain* %9, %struct.label_chain** %label_chain18, align 8, !tbaa !0
  %label19 = getelementptr inbounds i8* %call11, i64 8
  %17 = bitcast i8* %label19 to %union.tree_node**
  store %union.tree_node* %label, %union.tree_node** %17, align 8, !tbaa !0
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then10
  ret void
}
