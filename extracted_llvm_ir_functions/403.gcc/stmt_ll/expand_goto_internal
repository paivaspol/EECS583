define internal fastcc void @expand_goto_internal(%union.tree_node* %body, %struct.rtx_def* %label, %struct.rtx_def* %last_insn) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %label to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 36
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 881, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.expand_goto_internal, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %label, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %cmp1 = icmp eq %struct.rtx_def* %1, null
  %2 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt.i = getelementptr inbounds %struct.function* %2, i64 0, i32 1
  %3 = load %struct.stmt_status** %stmt.i, align 8, !tbaa !0
  br i1 %cmp1, label %if.else55, label %if.then2

if.then2:                                         ; preds = %if.end
  %x_block_stack = getelementptr inbounds %struct.stmt_status* %3, i64 0, i32 0
  %block.084 = load %struct.nesting** %x_block_stack, align 8
  %tobool85 = icmp eq %struct.nesting* %block.084, null
  br i1 %tobool85, label %if.end45, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then2
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %label, i64 0, i32 1, i64 0
  %rtint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %block.087 = phi %struct.nesting* [ %block.084, %for.body.lr.ph ], [ %block.0, %for.inc ]
  %stack_level.086 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %stack_level.0., %for.inc ]
  %first_insn = getelementptr inbounds %struct.nesting* %block.087, i64 0, i32 4, i32 0, i32 2
  %4 = load %struct.rtx_def** %first_insn, align 8, !tbaa !0
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %5 = load i32* %rtint, align 4, !tbaa !4
  %6 = load i32* %rtint8, align 4, !tbaa !4
  %cmp9 = icmp slt i32 %5, %6
  br i1 %cmp9, label %for.end, label %if.end11

if.end11:                                         ; preds = %for.body
  %stack_level14 = getelementptr inbounds %struct.nesting* %block.087, i64 0, i32 4, i32 0, i32 1
  %7 = load %struct.rtx_def** %stack_level14, align 8, !tbaa !0
  %cmp15 = icmp eq %struct.rtx_def* %7, null
  %stack_level.0. = select i1 %cmp15, %struct.rtx_def* %stack_level.086, %struct.rtx_def* %7
  %cleanups = getelementptr inbounds %struct.nesting* %block.087, i64 0, i32 4, i32 0, i32 4
  %8 = load %union.tree_node** %cleanups, align 8, !tbaa !0
  %cmp23 = icmp eq %union.tree_node* %8, null
  br i1 %cmp23, label %for.inc, label %if.then24

if.then24:                                        ; preds = %if.end11
  tail call fastcc void @expand_cleanups(%union.tree_node* %8, i32 1, i32 1) #9
  tail call void @do_pending_stack_adjust() #7
  br label %for.inc

for.inc:                                          ; preds = %if.end11, %if.then24
  %next = getelementptr inbounds %struct.nesting* %block.087, i64 0, i32 1
  %block.0 = load %struct.nesting** %next, align 8
  %tobool = icmp eq %struct.nesting* %block.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %for.body
  %stack_level.0.lcssa = phi %struct.rtx_def* [ %stack_level.086, %for.body ], [ %stack_level.0., %for.inc ]
  %tobool29 = icmp eq %struct.rtx_def* %stack_level.0.lcssa, null
  br i1 %tobool29, label %if.end45, label %if.then30

if.then30:                                        ; preds = %for.end
  tail call void @clear_pending_stack_adjust() #7
  tail call void @do_pending_stack_adjust() #7
  %9 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_return_label = getelementptr inbounds %struct.function* %9, i64 0, i32 24
  %10 = load %struct.rtx_def** %x_return_label, align 8, !tbaa !0
  %cmp31 = icmp eq %struct.rtx_def* %10, %label
  br i1 %cmp31, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then30
  %11 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast [4 x i8]* %code to i32*
  %bf.load33 = load i32* %13, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  %cmp35 = icmp eq i32 %bf.clear34, 23
  br i1 %cmp35, label %land.lhs.true36, label %if.else

land.lhs.true36:                                  ; preds = %land.lhs.true
  %type39 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type39, i64 0, i32 6
  %14 = bitcast [4 x i8]* %no_force_blk_flag to i32*
  %bf.load40 = load i32* %14, align 4
  %bf.clear41 = and i32 %bf.load40, 131072
  %tobool42 = icmp eq i32 %bf.clear41, 0
  br i1 %tobool42, label %if.else, label %if.end45

if.else:                                          ; preds = %land.lhs.true36, %land.lhs.true, %if.then30
  tail call void @emit_stack_restore(i32 0, %struct.rtx_def* %stack_level.0.lcssa, %struct.rtx_def* null) #7
  br label %if.end45

if.end45:                                         ; preds = %if.then2, %land.lhs.true36, %for.end, %if.else
  %cmp46 = icmp eq %union.tree_node* %body, null
  br i1 %cmp46, label %if.end65, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %if.end45
  %bit_field_flag = getelementptr inbounds %union.tree_node* %body, i64 0, i32 0, i32 5
  %15 = bitcast [8 x i8]* %bit_field_flag to i64*
  %bf.load48 = load i64* %15, align 8
  %bf.cast = and i64 %bf.load48, 4096
  %tobool51 = icmp eq i64 %bf.cast, 0
  br i1 %tobool51, label %if.end65, label %if.then52

if.then52:                                        ; preds = %land.lhs.true47
  %name = getelementptr inbounds %union.tree_node* %body, i64 0, i32 0, i32 8
  %16 = load %union.tree_node** %name, align 8, !tbaa !0
  %id = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds i8** %id, i64 1
  %18 = load i8** %17, align 8, !tbaa !0
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([50 x i8]* @.str30, i64 0, i64 0), i8* %18) #7
  br label %if.end65

if.else55:                                        ; preds = %if.end
  %x_cond_stack.i = getelementptr inbounds %struct.stmt_status* %3, i64 0, i32 2
  %19 = load %struct.nesting** %x_cond_stack.i, align 8, !tbaa !0
  %tobool.i = icmp eq %struct.nesting* %19, null
  br i1 %tobool.i, label %if.else.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else55
  %data.i = getelementptr inbounds %struct.nesting* %19, i64 0, i32 4
  %endif_label.i = bitcast %union.anon.3* %data.i to %struct.rtx_def**
  %20 = load %struct.rtx_def** %endif_label.i, align 8, !tbaa !0
  %cmp.i = icmp eq %struct.rtx_def* %20, %label
  br i1 %cmp.i, label %if.then35.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %21 = getelementptr inbounds %struct.nesting* %19, i64 0, i32 4, i32 0, i32 1
  %22 = load %struct.rtx_def** %21, align 8, !tbaa !0
  %cmp7.i = icmp eq %struct.rtx_def* %22, %label
  br i1 %cmp7.i, label %if.end33.i, label %if.else.i

if.else.i:                                        ; preds = %lor.lhs.false.i, %if.else55
  %x_loop_stack.i = getelementptr inbounds %struct.stmt_status* %3, i64 0, i32 3
  %23 = load %struct.nesting** %x_loop_stack.i, align 8, !tbaa !0
  %tobool11.i = icmp eq %struct.nesting* %23, null
  br i1 %tobool11.i, label %if.end53.i, label %land.lhs.true12.i

land.lhs.true12.i:                                ; preds = %if.else.i
  %data15.i = getelementptr inbounds %struct.nesting* %23, i64 0, i32 4
  %start_label.i = bitcast %union.anon.3* %data15.i to %struct.rtx_def**
  %24 = load %struct.rtx_def** %start_label.i, align 8, !tbaa !0
  %cmp16.i = icmp eq %struct.rtx_def* %24, %label
  br i1 %cmp16.i, label %if.then35.i, label %lor.lhs.false17.i

lor.lhs.false17.i:                                ; preds = %land.lhs.true12.i
  %25 = getelementptr inbounds %struct.nesting* %23, i64 0, i32 4, i32 0, i32 1
  %26 = load %struct.rtx_def** %25, align 8, !tbaa !0
  %cmp22.i = icmp eq %struct.rtx_def* %26, %label
  br i1 %cmp22.i, label %if.end33.i, label %lor.lhs.false23.i

lor.lhs.false23.i:                                ; preds = %lor.lhs.false17.i
  %continue_label.i = getelementptr inbounds %struct.nesting* %23, i64 0, i32 4, i32 0, i32 3
  %27 = load %struct.nesting** %continue_label.i, align 8
  %28 = bitcast %struct.nesting* %27 to %struct.rtx_def*
  %cmp28.i = icmp eq %struct.rtx_def* %28, %label
  br i1 %cmp28.i, label %if.end33.i, label %if.end53.i

if.end33.i:                                       ; preds = %lor.lhs.false23.i, %lor.lhs.false17.i, %lor.lhs.false.i
  %end_block.0.i = phi %struct.nesting* [ %19, %lor.lhs.false.i ], [ %23, %lor.lhs.false23.i ], [ %23, %lor.lhs.false17.i ]
  %tobool34.i = icmp eq %struct.nesting* %end_block.0.i, null
  br i1 %tobool34.i, label %if.end53.i, label %if.then35.i

if.then35.i:                                      ; preds = %if.end33.i, %land.lhs.true12.i, %land.lhs.true.i
  %end_block.0214.i = phi %struct.nesting* [ %end_block.0.i, %if.end33.i ], [ %19, %land.lhs.true.i ], [ %23, %land.lhs.true12.i ]
  %x_block_stack.i = getelementptr inbounds %struct.stmt_status* %3, i64 0, i32 0
  %29 = load %struct.nesting** %x_block_stack.i, align 8, !tbaa !0
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %if.then35.i
  %end_block.0.pn.i = phi %struct.nesting* [ %end_block.0214.i, %if.then35.i ], [ %next_block.0.i, %while.cond.i ]
  %next_block.0.in.i = getelementptr inbounds %struct.nesting* %end_block.0.pn.i, i64 0, i32 0
  %next_block.0.i = load %struct.nesting** %next_block.0.in.i, align 8
  %tobool37.i = icmp ne %struct.nesting* %next_block.0.i, null
  %cmp38.i = icmp ne %struct.nesting* %next_block.0.i, %29
  %cmp38..i = and i1 %tobool37.i, %cmp38.i
  br i1 %cmp38..i, label %while.cond.i, label %while.end.i

while.end.i:                                      ; preds = %while.cond.i
  br i1 %tobool37.i, label %expand_fixup.exit, label %if.end42.i

if.end42.i:                                       ; preds = %while.end.i
  %next.i = getelementptr inbounds %struct.nesting* %29, i64 0, i32 1
  %30 = load %struct.nesting** %next.i, align 8, !tbaa !0
  %cmp47201.i = icmp eq %struct.nesting* %29, %end_block.0214.i
  br i1 %cmp47201.i, label %if.end53.i, label %for.body.i

for.body.i:                                       ; preds = %if.end42.i, %for.inc.i
  %block.0203.i = phi %struct.nesting* [ %32, %for.inc.i ], [ %29, %if.end42.i ]
  %next_block.1202.i = phi %struct.nesting* [ %next_block.2.i, %for.inc.i ], [ %30, %if.end42.i ]
  %cmp48.i = icmp eq %struct.nesting* %block.0203.i, %next_block.1202.i
  br i1 %cmp48.i, label %if.then49.i, label %for.inc.i

if.then49.i:                                      ; preds = %for.body.i
  %next50.i = getelementptr inbounds %struct.nesting* %block.0203.i, i64 0, i32 1
  %31 = load %struct.nesting** %next50.i, align 8, !tbaa !0
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then49.i, %for.body.i
  %next_block.2.i = phi %struct.nesting* [ %31, %if.then49.i ], [ %next_block.1202.i, %for.body.i ]
  %all52.i = getelementptr inbounds %struct.nesting* %block.0203.i, i64 0, i32 0
  %32 = load %struct.nesting** %all52.i, align 8, !tbaa !0
  %cmp47.i = icmp eq %struct.nesting* %32, %end_block.0214.i
  br i1 %cmp47.i, label %if.end53.i, label %for.body.i

if.end53.i:                                       ; preds = %for.inc.i, %if.end33.i, %lor.lhs.false23.i, %if.else.i, %if.end42.i
  %end_block.1.i = phi %struct.nesting* [ %30, %if.end42.i ], [ null, %if.else.i ], [ null, %lor.lhs.false23.i ], [ null, %if.end33.i ], [ %next_block.2.i, %for.inc.i ]
  %x_block_stack55.i = getelementptr inbounds %struct.stmt_status* %3, i64 0, i32 0
  %block.1197.i = load %struct.nesting** %x_block_stack55.i, align 8
  %cmp57198.i = icmp eq %struct.nesting* %block.1197.i, %end_block.1.i
  br i1 %cmp57198.i, label %if.end140.i, label %for.body58.i

for.cond56.i:                                     ; preds = %lor.lhs.false62.i
  %next69.i = getelementptr inbounds %struct.nesting* %block.1199.i, i64 0, i32 1
  %block.1.i = load %struct.nesting** %next69.i, align 8
  %cmp57.i = icmp eq %struct.nesting* %block.1.i, %end_block.1.i
  br i1 %cmp57.i, label %if.end140.i, label %for.body58.i

for.body58.i:                                     ; preds = %if.end53.i, %for.cond56.i
  %block.1199.i = phi %struct.nesting* [ %block.1.i, %for.cond56.i ], [ %block.1197.i, %if.end53.i ]
  %stack_level.i = getelementptr inbounds %struct.nesting* %block.1199.i, i64 0, i32 4, i32 0, i32 1
  %33 = load %struct.rtx_def** %stack_level.i, align 8, !tbaa !0
  %cmp61.i = icmp eq %struct.rtx_def* %33, null
  br i1 %cmp61.i, label %lor.lhs.false62.i, label %if.then72.i

lor.lhs.false62.i:                                ; preds = %for.body58.i
  %cleanups.i = getelementptr inbounds %struct.nesting* %block.1199.i, i64 0, i32 4, i32 0, i32 4
  %34 = load %union.tree_node** %cleanups.i, align 8, !tbaa !0
  %cmp65.i = icmp eq %union.tree_node* %34, null
  br i1 %cmp65.i, label %for.cond56.i, label %if.then72.i

if.then72.i:                                      ; preds = %lor.lhs.false62.i, %for.body58.i
  %call.i = tail call i8* @ggc_alloc(i64 64) #7
  %35 = bitcast i8* %call.i to %struct.goto_fixup*
  %cmp73.i = icmp eq %struct.rtx_def* %last_insn, null
  br i1 %cmp73.i, label %cond.false.i, label %if.end75.i

if.end75.i:                                       ; preds = %if.then72.i
  %target.i = getelementptr inbounds i8* %call.i, i64 16
  %36 = bitcast i8* %target.i to %union.tree_node**
  store %union.tree_node* %body, %union.tree_node** %36, align 8, !tbaa !0
  %target_rtl.i = getelementptr inbounds i8* %call.i, i64 32
  %37 = bitcast i8* %target_rtl.i to %struct.rtx_def**
  store %struct.rtx_def* %label, %struct.rtx_def** %37, align 8, !tbaa !0
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.then72.i
  tail call void @do_pending_stack_adjust() #7
  %target188.i = getelementptr inbounds i8* %call.i, i64 16
  %38 = bitcast i8* %target188.i to %union.tree_node**
  store %union.tree_node* %body, %union.tree_node** %38, align 8, !tbaa !0
  %target_rtl189.i = getelementptr inbounds i8* %call.i, i64 32
  %39 = bitcast i8* %target_rtl189.i to %struct.rtx_def**
  store %struct.rtx_def* %label, %struct.rtx_def** %39, align 8, !tbaa !0
  %call77.i = tail call %struct.rtx_def* @get_last_insn() #7
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.end75.i
  %cond78.i = phi %struct.rtx_def* [ %call77.i, %cond.false.i ], [ %last_insn, %if.end75.i ]
  %call80.i = tail call %union.tree_node* @make_node(i32 4) #7
  %used_flag.i = getelementptr inbounds %union.tree_node* %call80.i, i64 0, i32 0, i32 0, i32 2
  %40 = bitcast [4 x i8]* %used_flag.i to i32*
  %bf.load.i = load i32* %40, align 8
  %bf.set.i = or i32 %bf.load.i, 65536
  store i32 %bf.set.i, i32* %40, align 8
  %41 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_whole_function_mode_p.i = getelementptr inbounds %struct.function* %41, i64 0, i32 56
  %42 = bitcast [4 x i8]* %x_whole_function_mode_p.i to i32*
  %bf.load81.i = load i32* %42, align 8
  %bf.clear82.i = and i32 %bf.load81.i, 262144
  %tobool83.i = icmp eq i32 %bf.clear82.i, 0
  br i1 %tobool83.i, label %if.then84.i, label %if.else85.i

if.then84.i:                                      ; preds = %cond.end.i
  tail call void @insert_block(%union.tree_node* %call80.i) #7
  br label %if.end93.i

if.else85.i:                                      ; preds = %cond.end.i
  %43 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %initial.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 12
  %44 = load %union.tree_node** %initial.i, align 8, !tbaa !0
  %chain.i = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0
  %45 = load %union.tree_node** %chain.i, align 8, !tbaa !0
  %chain88.i = getelementptr inbounds %union.tree_node* %call80.i, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %45, %union.tree_node** %chain88.i, align 8, !tbaa !0
  %46 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %initial90.i = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 12
  %47 = load %union.tree_node** %initial90.i, align 8, !tbaa !0
  %chain92.i = getelementptr inbounds %union.tree_node* %47, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call80.i, %union.tree_node** %chain92.i, align 8, !tbaa !0
  br label %if.end93.i

if.end93.i:                                       ; preds = %if.else85.i, %if.then84.i
  tail call void @start_sequence() #7
  %call94.i = tail call %struct.rtx_def* @emit_note(i8* null, i32 -98) #7
  %48 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_whole_function_mode_p95.i = getelementptr inbounds %struct.function* %48, i64 0, i32 56
  %49 = bitcast [4 x i8]* %x_whole_function_mode_p95.i to i32*
  %bf.load96.i = load i32* %49, align 8
  %bf.clear98.i = and i32 %bf.load96.i, 262144
  %tobool99.i = icmp eq i32 %bf.clear98.i, 0
  br i1 %tobool99.i, label %if.end101.i, label %if.then100.i

if.then100.i:                                     ; preds = %if.end93.i
  %50 = getelementptr inbounds %struct.rtx_def* %call94.i, i64 0, i32 1, i64 3, i32 0
  %call80.c186.i = ptrtoint %union.tree_node* %call80.i to i64
  store i64 %call80.c186.i, i64* %50, align 8, !tbaa !0
  br label %if.end101.i

if.end101.i:                                      ; preds = %if.then100.i, %if.end93.i
  %call102.i = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #7
  %before_jump.i = getelementptr inbounds i8* %call.i, i64 8
  %51 = bitcast i8* %before_jump.i to %struct.rtx_def**
  store %struct.rtx_def* %call102.i, %struct.rtx_def** %51, align 8, !tbaa !0
  %call103.i = tail call %struct.rtx_def* @emit_note(i8* null, i32 -97) #7
  %52 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_whole_function_mode_p104.i = getelementptr inbounds %struct.function* %52, i64 0, i32 56
  %53 = bitcast [4 x i8]* %x_whole_function_mode_p104.i to i32*
  %bf.load105.i = load i32* %53, align 8
  %bf.clear107.i = and i32 %bf.load105.i, 262144
  %tobool108.i = icmp eq i32 %bf.clear107.i, 0
  br i1 %tobool108.i, label %if.end113.i, label %if.then109.i

if.then109.i:                                     ; preds = %if.end101.i
  %54 = getelementptr inbounds %struct.rtx_def* %call103.i, i64 0, i32 1, i64 3, i32 0
  %call80.c.i = ptrtoint %union.tree_node* %call80.i to i64
  store i64 %call80.c.i, i64* %54, align 8, !tbaa !0
  br label %if.end113.i

if.end113.i:                                      ; preds = %if.then109.i, %if.end101.i
  %context.i = getelementptr inbounds i8* %call.i, i64 24
  %55 = bitcast i8* %context.i to %union.tree_node**
  store %union.tree_node* %call80.i, %union.tree_node** %55, align 8, !tbaa !0
  tail call void @end_sequence() #7
  %call114.i = tail call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %call94.i, %struct.rtx_def* %cond78.i) #7
  %56 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt115.i = getelementptr inbounds %struct.function* %56, i64 0, i32 1
  %57 = load %struct.stmt_status** %stmt115.i, align 8, !tbaa !0
  %x_block_start_count.i = getelementptr inbounds %struct.stmt_status* %57, i64 0, i32 7
  %58 = load i32* %x_block_start_count.i, align 4, !tbaa !4
  %block_start_count.i = getelementptr inbounds i8* %call.i, i64 40
  %59 = bitcast i8* %block_start_count.i to i32*
  store i32 %58, i32* %59, align 4, !tbaa !4
  %stack_level116.i = getelementptr inbounds i8* %call.i, i64 48
  %60 = bitcast i8* %stack_level116.i to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %60, align 8, !tbaa !0
  %outer_cleanups.i = getelementptr inbounds %struct.nesting* %block.1199.i, i64 0, i32 4, i32 0, i32 5
  %61 = load %union.tree_node** %outer_cleanups.i, align 8, !tbaa !0
  %tobool119.i = icmp eq %union.tree_node* %61, null
  %cleanups123.i = getelementptr inbounds %struct.nesting* %block.1199.i, i64 0, i32 4, i32 0, i32 4
  %62 = load %union.tree_node** %cleanups123.i, align 8, !tbaa !0
  %tobool124.i = icmp eq %union.tree_node* %62, null
  %or.cond.i = and i1 %tobool119.i, %tobool124.i
  br i1 %or.cond.i, label %cond.end134.i, label %cond.true125.i

cond.true125.i:                                   ; preds = %if.end113.i
  %call132.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %62, %union.tree_node* %61) #7
  br label %cond.end134.i

cond.end134.i:                                    ; preds = %cond.true125.i, %if.end113.i
  %cond135.i = phi %union.tree_node* [ %call132.i, %cond.true125.i ], [ null, %if.end113.i ]
  %cleanup_list_list.i = getelementptr inbounds i8* %call.i, i64 56
  %63 = bitcast i8* %cleanup_list_list.i to %union.tree_node**
  store %union.tree_node* %cond135.i, %union.tree_node** %63, align 8, !tbaa !0
  %64 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt136.i = getelementptr inbounds %struct.function* %64, i64 0, i32 1
  %65 = load %struct.stmt_status** %stmt136.i, align 8, !tbaa !0
  %x_goto_fixup_chain.i = getelementptr inbounds %struct.stmt_status* %65, i64 0, i32 13
  %66 = load %struct.goto_fixup** %x_goto_fixup_chain.i, align 8, !tbaa !0
  %next137.i = bitcast i8* %call.i to %struct.goto_fixup**
  store %struct.goto_fixup* %66, %struct.goto_fixup** %next137.i, align 8, !tbaa !0
  %67 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt138.i = getelementptr inbounds %struct.function* %67, i64 0, i32 1
  %68 = load %struct.stmt_status** %stmt138.i, align 8, !tbaa !0
  %x_goto_fixup_chain139.i = getelementptr inbounds %struct.stmt_status* %68, i64 0, i32 13
  store %struct.goto_fixup* %35, %struct.goto_fixup** %x_goto_fixup_chain139.i, align 8, !tbaa !0
  br label %if.end140.i

if.end140.i:                                      ; preds = %for.cond56.i, %cond.end134.i, %if.end53.i
  %block.1193.i = phi %struct.nesting* [ %block.1199.i, %cond.end134.i ], [ %end_block.1.i, %if.end53.i ], [ %end_block.1.i, %for.cond56.i ]
  %phitmp = icmp eq %struct.nesting* %block.1193.i, null
  br label %expand_fixup.exit

expand_fixup.exit:                                ; preds = %while.end.i, %if.end140.i
  %retval.0.i = phi i1 [ %phitmp, %if.end140.i ], [ true, %while.end.i ]
  %cmp58 = icmp ne %union.tree_node* %body, null
  %or.cond = and i1 %retval.0.i, %cmp58
  br i1 %or.cond, label %if.then59, label %if.end65

if.then59:                                        ; preds = %expand_fixup.exit
  %addressable_flag = getelementptr inbounds %union.tree_node* %body, i64 0, i32 0, i32 0, i32 2
  %69 = bitcast [4 x i8]* %addressable_flag to i32*
  %bf.load61 = load i32* %69, align 8
  %bf.set = or i32 %bf.load61, 1024
  store i32 %bf.set, i32* %69, align 8
  br label %if.end65

if.end65:                                         ; preds = %land.lhs.true47, %if.end45, %expand_fixup.exit, %if.then59, %if.then52
  tail call void @emit_jump(%struct.rtx_def* %label) #9
  ret void
}
