define void @expand_start_case_dummy() #0 {
entry:
  tail call void @llvm.dbg.value(metadata !3292, i64 0, metadata !1856), !dbg !4059
  tail call void @llvm.dbg.value(metadata !3292, i64 0, metadata !1858), !dbg !4060
  tail call void @llvm.dbg.value(metadata !3295, i64 0, metadata !1860), !dbg !4060
  %0 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 4), align 8, !dbg !4060, !tbaa !2438
  %1 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4060, !tbaa !2438
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4060
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4060
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4060
  %cmp = icmp slt i64 %sub.ptr.sub, 120, !dbg !4060
  br i1 %cmp, label %if.then, label %if.end, !dbg !4060

if.then:                                          ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* @stmt_obstack, i32 120) #8, !dbg !4060
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4060, !tbaa !2438
  br label %if.end, !dbg !4060

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %1, %entry ]
  %add.ptr = getelementptr inbounds i8* %2, i64 120, !dbg !4060
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4060, !tbaa !2438
  tail call void @llvm.dbg.value(metadata !3292, i64 0, metadata !1861), !dbg !4061
  %3 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 2), align 8, !dbg !4061, !tbaa !2438
  tail call void @llvm.dbg.value(metadata !{i8* %3}, i64 0, metadata !1863), !dbg !4061
  %cmp4 = icmp eq i8* %add.ptr, %3, !dbg !4061
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4061

if.then6:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 10), align 8, !dbg !4061
  %bf.set = or i8 %bf.load, 2, !dbg !4061
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 10), align 8, !dbg !4061
  br label %if.end7, !dbg !4061

if.end7:                                          ; preds = %if.end, %if.then6
  %sub.ptr.lhs.cast9 = ptrtoint i8* %add.ptr to i64, !dbg !4061
  %4 = load i32* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 6), align 8, !dbg !4061, !tbaa !2561
  %conv11 = sext i32 %4 to i64, !dbg !4061
  %add = add nsw i64 %conv11, %sub.ptr.lhs.cast9, !dbg !4061
  %neg = xor i32 %4, -1, !dbg !4061
  %conv13 = sext i32 %neg to i64, !dbg !4061
  %and = and i64 %add, %conv13, !dbg !4061
  %add.ptr14 = getelementptr inbounds i8* null, i64 %and, !dbg !4061
  store i8* %add.ptr14, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4061, !tbaa !2438
  %5 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 1), align 8, !dbg !4061, !tbaa !2438
  %sub.ptr.lhs.cast17 = ptrtoint i8* %add.ptr14 to i64, !dbg !4061
  %sub.ptr.rhs.cast18 = ptrtoint %struct._obstack_chunk* %5 to i64, !dbg !4061
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !4061
  %6 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 4), align 8, !dbg !4061, !tbaa !2438
  %sub.ptr.lhs.cast22 = ptrtoint i8* %6 to i64, !dbg !4061
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast18, !dbg !4061
  %cmp25 = icmp sgt i64 %sub.ptr.sub19, %sub.ptr.sub24, !dbg !4061
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !4061

if.then27:                                        ; preds = %if.end7
  store i8* %6, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4061, !tbaa !2438
  br label %if.end30, !dbg !4061

if.end30:                                         ; preds = %if.then27, %if.end7
  %7 = phi i8* [ %6, %if.then27 ], [ %add.ptr14, %if.end7 ]
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 2), align 8, !dbg !4061, !tbaa !2438
  %8 = bitcast i8* %3 to %struct.nesting*, !dbg !4059
  tail call void @llvm.dbg.value(metadata !{%struct.nesting* %8}, i64 0, metadata !1855), !dbg !4059
  %9 = load %struct.function** @cfun, align 8, !dbg !4062, !tbaa !2438
  %stmt = getelementptr inbounds %struct.function* %9, i64 0, i32 1, !dbg !4062
  %10 = load %struct.stmt_status** %stmt, align 8, !dbg !4062, !tbaa !2438
  %x_case_stack = getelementptr inbounds %struct.stmt_status* %10, i64 0, i32 4, !dbg !4062
  %11 = load %struct.nesting** %x_case_stack, align 8, !dbg !4062, !tbaa !2438
  %next = getelementptr inbounds i8* %3, i64 8, !dbg !4062
  %12 = bitcast i8* %next to %struct.nesting**, !dbg !4062
  store %struct.nesting* %11, %struct.nesting** %12, align 8, !dbg !4062, !tbaa !2438
  %13 = load %struct.function** @cfun, align 8, !dbg !4063, !tbaa !2438
  %stmt33 = getelementptr inbounds %struct.function* %13, i64 0, i32 1, !dbg !4063
  %14 = load %struct.stmt_status** %stmt33, align 8, !dbg !4063, !tbaa !2438
  %x_nesting_stack = getelementptr inbounds %struct.stmt_status* %14, i64 0, i32 5, !dbg !4063
  %15 = load %struct.nesting** %x_nesting_stack, align 8, !dbg !4063, !tbaa !2438
  %all = bitcast i8* %3 to %struct.nesting**, !dbg !4063
  store %struct.nesting* %15, %struct.nesting** %all, align 8, !dbg !4063, !tbaa !2438
  %16 = load %struct.function** @cfun, align 8, !dbg !4064, !tbaa !2438
  %stmt34 = getelementptr inbounds %struct.function* %16, i64 0, i32 1, !dbg !4064
  %17 = load %struct.stmt_status** %stmt34, align 8, !dbg !4064, !tbaa !2438
  %x_nesting_depth = getelementptr inbounds %struct.stmt_status* %17, i64 0, i32 6, !dbg !4064
  %18 = load i32* %x_nesting_depth, align 4, !dbg !4064, !tbaa !2561
  %inc = add nsw i32 %18, 1, !dbg !4064
  store i32 %inc, i32* %x_nesting_depth, align 4, !dbg !4064, !tbaa !2561
  %depth = getelementptr inbounds i8* %3, i64 16, !dbg !4064
  %19 = bitcast i8* %depth to i32*, !dbg !4064
  store i32 %inc, i32* %19, align 4, !dbg !4064, !tbaa !2561
  %exit_label = getelementptr inbounds i8* %3, i64 24, !dbg !4065
  %nominal_type = getelementptr inbounds i8* %3, i64 64, !dbg !4066
  %20 = bitcast i8* %nominal_type to %union.tree_node**, !dbg !4066
  store %union.tree_node* null, %union.tree_node** %20, align 8, !dbg !4066, !tbaa !2438
  call void @llvm.memset.p0i8.i64(i8* %exit_label, i8 0, i64 32, i32 8, i1 false), !dbg !4067
  %21 = load %struct.function** @cfun, align 8, !dbg !4068, !tbaa !2438
  %stmt41 = getelementptr inbounds %struct.function* %21, i64 0, i32 1, !dbg !4068
  %22 = load %struct.stmt_status** %stmt41, align 8, !dbg !4068, !tbaa !2438
  %x_case_stack42 = getelementptr inbounds %struct.stmt_status* %22, i64 0, i32 4, !dbg !4068
  store %struct.nesting* %8, %struct.nesting** %x_case_stack42, align 8, !dbg !4068, !tbaa !2438
  %23 = load %struct.function** @cfun, align 8, !dbg !4069, !tbaa !2438
  %stmt43 = getelementptr inbounds %struct.function* %23, i64 0, i32 1, !dbg !4069
  %24 = load %struct.stmt_status** %stmt43, align 8, !dbg !4069, !tbaa !2438
  %x_nesting_stack44 = getelementptr inbounds %struct.stmt_status* %24, i64 0, i32 5, !dbg !4069
  store %struct.nesting* %8, %struct.nesting** %x_nesting_stack44, align 8, !dbg !4069, !tbaa !2438
  %25 = load %struct.function** @cfun, align 8, !dbg !4070, !tbaa !2438
  %stmt.i = getelementptr inbounds %struct.function* %25, i64 0, i32 1, !dbg !4070
  %26 = load %struct.stmt_status** %stmt.i, align 8, !dbg !4070, !tbaa !2438
  %x_block_stack.i = getelementptr inbounds %struct.stmt_status* %26, i64 0, i32 0, !dbg !4070
  %27 = load %struct.nesting** %x_block_stack.i, align 8, !dbg !4070, !tbaa !2438
  %tobool.i = icmp eq %struct.nesting* %27, null, !dbg !4070
  br i1 %tobool.i, label %start_cleanup_deferral.exit, label %if.then.i, !dbg !4070

if.then.i:                                        ; preds = %if.end30
  %conditional_code.i = getelementptr inbounds %struct.nesting* %27, i64 0, i32 4, i32 0, i32 10, !dbg !4072
  %28 = load i32* %conditional_code.i, align 4, !dbg !4072, !tbaa !2561
  %inc.i = add nsw i32 %28, 1, !dbg !4072
  store i32 %inc.i, i32* %conditional_code.i, align 4, !dbg !4072, !tbaa !2561
  br label %start_cleanup_deferral.exit, !dbg !4072

start_cleanup_deferral.exit:                      ; preds = %if.end30, %if.then.i
  ret void, !dbg !4073
}
