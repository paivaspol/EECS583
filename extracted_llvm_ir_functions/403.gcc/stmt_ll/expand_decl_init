define void @expand_decl_init(%union.tree_node* %decl) #0 {
entry:
  %used_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %used_flag to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65536
  %bf.clear3 = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear3, 32
  %bf.clear7 = and i32 %bf.load, 262144
  %tobool = icmp eq i32 %bf.clear7, 0
  %or.cond = and i1 %cmp, %tobool
  br i1 %or.cond, label %if.end, label %return

if.end:                                           ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %1 = load %union.tree_node** %initial, align 8, !tbaa !0
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp9 = icmp eq %union.tree_node* %1, %2
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !0
  %code14 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast [4 x i8]* %code14 to i32*
  %bf.load15 = load i32* %4, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %5 = and i32 %bf.load15, 254
  %6 = icmp eq i32 %5, 6
  %cmp21 = icmp eq i32 %bf.clear16, 10
  %or.cond54 = or i1 %6, %cmp21
  %cmp23 = icmp eq i32 %bf.clear16, 13
  %or.cond55 = or i1 %or.cond54, %cmp23
  %cmp25 = icmp eq i32 %bf.clear16, 15
  %or.cond56 = or i1 %or.cond55, %cmp25
  br i1 %or.cond56, label %if.then26, label %if.end30

if.then26:                                        ; preds = %if.then10
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !0
  %call = tail call %union.tree_node* @convert(%union.tree_node* %3, %union.tree_node* %7) #7
  %call29 = tail call %struct.rtx_def* @expand_assignment(%union.tree_node* %decl, %union.tree_node* %call, i32 0, i32 0) #7
  br label %if.end30

if.end30:                                         ; preds = %if.then10, %if.then26
  tail call void @emit_queue() #7
  br label %if.end49

if.else:                                          ; preds = %if.end
  %tobool33 = icmp eq %union.tree_node* %1, null
  br i1 %tobool33, label %if.end49, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %code37 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %code37 to i32*
  %bf.load38 = load i32* %8, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 2
  br i1 %cmp40, label %if.end49, label %if.then41

if.then41:                                        ; preds = %land.lhs.true
  %filename = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 1
  %9 = load i8** %filename, align 8, !tbaa !0
  %linenum = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %10 = load i32* %linenum, align 4, !tbaa !4
  %call44 = tail call %struct.rtx_def* @emit_line_note(i8* %9, i32 %10) #7
  %11 = load %union.tree_node** %initial, align 8, !tbaa !0
  %call47 = tail call %struct.rtx_def* @expand_assignment(%union.tree_node* %decl, %union.tree_node* %11, i32 0, i32 0) #7
  tail call void @emit_queue() #7
  br label %if.end49

if.end49:                                         ; preds = %land.lhs.true, %if.else, %if.then41, %if.end30
  %bf.load52 = load i32* %0, align 8
  %bf.clear53 = and i32 %bf.load52, -65537
  %bf.set = or i32 %bf.clear53, %bf.clear
  store i32 %bf.set, i32* %0, align 8
  tail call void @preserve_temp_slots(%struct.rtx_def* null) #7
  tail call void @free_temp_slots() #7
  br label %return

return:                                           ; preds = %entry, %if.end49
  ret void
}
