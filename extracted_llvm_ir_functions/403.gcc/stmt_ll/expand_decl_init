define void @expand_decl_init(%union.tree_node* %decl) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %decl}, i64 0, metadata !1776), !dbg !3912
  %used_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !3913
  %0 = bitcast [4 x i8]* %used_flag to i32*, !dbg !3913
  %bf.load = load i32* %0, align 8, !dbg !3913
  %bf.clear = and i32 %bf.load, 65536, !dbg !3913
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !1777), !dbg !3913
  %bf.clear3 = and i32 %bf.load, 255, !dbg !3914
  %cmp = icmp ne i32 %bf.clear3, 32, !dbg !3914
  %bf.clear7 = and i32 %bf.load, 262144, !dbg !3914
  %tobool = icmp eq i32 %bf.clear7, 0, !dbg !3914
  %or.cond = and i1 %cmp, %tobool, !dbg !3914
  br i1 %or.cond, label %if.end, label %return, !dbg !3914

if.end:                                           ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12, !dbg !3915
  %1 = load %union.tree_node** %initial, align 8, !dbg !3915, !tbaa !2438
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !3915, !tbaa !2438
  %cmp9 = icmp eq %union.tree_node* %1, %2, !dbg !3915
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !3915

if.then10:                                        ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1, !dbg !3916
  %3 = load %union.tree_node** %type, align 8, !dbg !3916, !tbaa !2438
  %code14 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2, !dbg !3916
  %4 = bitcast [4 x i8]* %code14 to i32*, !dbg !3916
  %bf.load15 = load i32* %4, align 8, !dbg !3916
  %bf.clear16 = and i32 %bf.load15, 255, !dbg !3916
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear16}, i64 0, metadata !1778), !dbg !3916
  %5 = and i32 %bf.load15, 254, !dbg !3917
  %6 = icmp eq i32 %5, 6, !dbg !3917
  %cmp21 = icmp eq i32 %bf.clear16, 10, !dbg !3917
  %or.cond54 = or i1 %6, %cmp21, !dbg !3917
  %cmp23 = icmp eq i32 %bf.clear16, 13, !dbg !3917
  %or.cond55 = or i1 %or.cond54, %cmp23, !dbg !3917
  %cmp25 = icmp eq i32 %bf.clear16, 15, !dbg !3917
  %or.cond56 = or i1 %or.cond55, %cmp25, !dbg !3917
  br i1 %or.cond56, label %if.then26, label %if.end30, !dbg !3917

if.then26:                                        ; preds = %if.then10
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !dbg !3918, !tbaa !2438
  %call = tail call %union.tree_node* @convert(%union.tree_node* %3, %union.tree_node* %7) #8, !dbg !3918
  %call29 = tail call %struct.rtx_def* @expand_assignment(%union.tree_node* %decl, %union.tree_node* %call, i32 0, i32 0) #8, !dbg !3918
  br label %if.end30, !dbg !3918

if.end30:                                         ; preds = %if.then10, %if.then26
  tail call void @emit_queue() #8, !dbg !3919
  br label %if.end49, !dbg !3920

if.else:                                          ; preds = %if.end
  %tobool33 = icmp eq %union.tree_node* %1, null, !dbg !3921
  br i1 %tobool33, label %if.end49, label %land.lhs.true, !dbg !3921

land.lhs.true:                                    ; preds = %if.else
  %code37 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2, !dbg !3921
  %8 = bitcast [4 x i8]* %code37 to i32*, !dbg !3921
  %bf.load38 = load i32* %8, align 8, !dbg !3921
  %bf.clear39 = and i32 %bf.load38, 255, !dbg !3921
  %cmp40 = icmp eq i32 %bf.clear39, 2, !dbg !3921
  br i1 %cmp40, label %if.end49, label %if.then41, !dbg !3921

if.then41:                                        ; preds = %land.lhs.true
  %filename = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 1, !dbg !3922
  %9 = load i8** %filename, align 8, !dbg !3922, !tbaa !2438
  %linenum = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2, !dbg !3922
  %10 = load i32* %linenum, align 4, !dbg !3922, !tbaa !2561
  %call44 = tail call %struct.rtx_def* @emit_line_note(i8* %9, i32 %10) #8, !dbg !3922
  %11 = load %union.tree_node** %initial, align 8, !dbg !3924, !tbaa !2438
  %call47 = tail call %struct.rtx_def* @expand_assignment(%union.tree_node* %decl, %union.tree_node* %11, i32 0, i32 0) #8, !dbg !3924
  tail call void @emit_queue() #8, !dbg !3925
  br label %if.end49, !dbg !3926

if.end49:                                         ; preds = %land.lhs.true, %if.else, %if.then41, %if.end30
  %bf.load52 = load i32* %0, align 8, !dbg !3927
  %bf.clear53 = and i32 %bf.load52, -65537, !dbg !3927
  %bf.set = or i32 %bf.clear53, %bf.clear, !dbg !3927
  store i32 %bf.set, i32* %0, align 8, !dbg !3927
  tail call void @preserve_temp_slots(%struct.rtx_def* null) #8, !dbg !3928
  tail call void @free_temp_slots() #8, !dbg !3929
  br label %return, !dbg !3929

return:                                           ; preds = %entry, %if.end49
  ret void, !dbg !3929
}
