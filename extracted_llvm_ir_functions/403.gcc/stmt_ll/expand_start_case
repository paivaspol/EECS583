define void @expand_start_case(i32 %exit_flag, %union.tree_node* %expr, %union.tree_node* %type, i8* %printname) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %exit_flag}, i64 0, metadata !1840), !dbg !4032
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %expr}, i64 0, metadata !1841), !dbg !4033
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %type}, i64 0, metadata !1842), !dbg !4034
  tail call void @llvm.dbg.value(metadata !{i8* %printname}, i64 0, metadata !1843), !dbg !4035
  tail call void @llvm.dbg.value(metadata !3292, i64 0, metadata !1845), !dbg !4036
  tail call void @llvm.dbg.value(metadata !3292, i64 0, metadata !1847), !dbg !4037
  tail call void @llvm.dbg.value(metadata !3295, i64 0, metadata !1849), !dbg !4037
  %0 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 4), align 8, !dbg !4037, !tbaa !2438
  %1 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4037, !tbaa !2438
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4037
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4037
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4037
  %cmp = icmp slt i64 %sub.ptr.sub, 120, !dbg !4037
  br i1 %cmp, label %if.then, label %if.end, !dbg !4037

if.then:                                          ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* @stmt_obstack, i32 120) #8, !dbg !4037
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4037, !tbaa !2438
  br label %if.end, !dbg !4037

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %1, %entry ]
  %add.ptr = getelementptr inbounds i8* %2, i64 120, !dbg !4037
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4037, !tbaa !2438
  tail call void @llvm.dbg.value(metadata !3292, i64 0, metadata !1850), !dbg !4038
  %3 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 2), align 8, !dbg !4038, !tbaa !2438
  tail call void @llvm.dbg.value(metadata !{i8* %3}, i64 0, metadata !1852), !dbg !4038
  %cmp4 = icmp eq i8* %add.ptr, %3, !dbg !4038
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4038

if.then6:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 10), align 8, !dbg !4038
  %bf.set = or i8 %bf.load, 2, !dbg !4038
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 10), align 8, !dbg !4038
  br label %if.end7, !dbg !4038

if.end7:                                          ; preds = %if.end, %if.then6
  %sub.ptr.lhs.cast9 = ptrtoint i8* %add.ptr to i64, !dbg !4038
  %4 = load i32* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 6), align 8, !dbg !4038, !tbaa !2561
  %conv11 = sext i32 %4 to i64, !dbg !4038
  %add = add nsw i64 %conv11, %sub.ptr.lhs.cast9, !dbg !4038
  %neg = xor i32 %4, -1, !dbg !4038
  %conv13 = sext i32 %neg to i64, !dbg !4038
  %and = and i64 %add, %conv13, !dbg !4038
  %add.ptr14 = getelementptr inbounds i8* null, i64 %and, !dbg !4038
  store i8* %add.ptr14, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4038, !tbaa !2438
  %5 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 1), align 8, !dbg !4038, !tbaa !2438
  %sub.ptr.lhs.cast17 = ptrtoint i8* %add.ptr14 to i64, !dbg !4038
  %sub.ptr.rhs.cast18 = ptrtoint %struct._obstack_chunk* %5 to i64, !dbg !4038
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !4038
  %6 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 4), align 8, !dbg !4038, !tbaa !2438
  %sub.ptr.lhs.cast22 = ptrtoint i8* %6 to i64, !dbg !4038
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast18, !dbg !4038
  %cmp25 = icmp sgt i64 %sub.ptr.sub19, %sub.ptr.sub24, !dbg !4038
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !4038

if.then27:                                        ; preds = %if.end7
  store i8* %6, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !dbg !4038, !tbaa !2438
  br label %if.end30, !dbg !4038

if.end30:                                         ; preds = %if.then27, %if.end7
  %7 = phi i8* [ %6, %if.then27 ], [ %add.ptr14, %if.end7 ]
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 2), align 8, !dbg !4038, !tbaa !2438
  %8 = bitcast i8* %3 to %struct.nesting*, !dbg !4036
  tail call void @llvm.dbg.value(metadata !{%struct.nesting* %8}, i64 0, metadata !1844), !dbg !4036
  %9 = load %struct.function** @cfun, align 8, !dbg !4039, !tbaa !2438
  %stmt = getelementptr inbounds %struct.function* %9, i64 0, i32 1, !dbg !4039
  %10 = load %struct.stmt_status** %stmt, align 8, !dbg !4039, !tbaa !2438
  %x_case_stack = getelementptr inbounds %struct.stmt_status* %10, i64 0, i32 4, !dbg !4039
  %11 = load %struct.nesting** %x_case_stack, align 8, !dbg !4039, !tbaa !2438
  %next = getelementptr inbounds i8* %3, i64 8, !dbg !4039
  %12 = bitcast i8* %next to %struct.nesting**, !dbg !4039
  store %struct.nesting* %11, %struct.nesting** %12, align 8, !dbg !4039, !tbaa !2438
  %13 = load %struct.function** @cfun, align 8, !dbg !4040, !tbaa !2438
  %stmt33 = getelementptr inbounds %struct.function* %13, i64 0, i32 1, !dbg !4040
  %14 = load %struct.stmt_status** %stmt33, align 8, !dbg !4040, !tbaa !2438
  %x_nesting_stack = getelementptr inbounds %struct.stmt_status* %14, i64 0, i32 5, !dbg !4040
  %15 = load %struct.nesting** %x_nesting_stack, align 8, !dbg !4040, !tbaa !2438
  %all = bitcast i8* %3 to %struct.nesting**, !dbg !4040
  store %struct.nesting* %15, %struct.nesting** %all, align 8, !dbg !4040, !tbaa !2438
  %16 = load %struct.function** @cfun, align 8, !dbg !4041, !tbaa !2438
  %stmt34 = getelementptr inbounds %struct.function* %16, i64 0, i32 1, !dbg !4041
  %17 = load %struct.stmt_status** %stmt34, align 8, !dbg !4041, !tbaa !2438
  %x_nesting_depth = getelementptr inbounds %struct.stmt_status* %17, i64 0, i32 6, !dbg !4041
  %18 = load i32* %x_nesting_depth, align 4, !dbg !4041, !tbaa !2561
  %inc = add nsw i32 %18, 1, !dbg !4041
  store i32 %inc, i32* %x_nesting_depth, align 4, !dbg !4041, !tbaa !2561
  %depth = getelementptr inbounds i8* %3, i64 16, !dbg !4041
  %19 = bitcast i8* %depth to i32*, !dbg !4041
  store i32 %inc, i32* %19, align 4, !dbg !4041, !tbaa !2561
  %tobool = icmp eq i32 %exit_flag, 0, !dbg !4042
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4042

cond.true:                                        ; preds = %if.end30
  %call = tail call %struct.rtx_def* @gen_label_rtx() #8, !dbg !4042
  br label %cond.end, !dbg !4042

cond.end:                                         ; preds = %if.end30, %cond.true
  %cond = phi %struct.rtx_def* [ %call, %cond.true ], [ null, %if.end30 ], !dbg !4042
  %exit_label = getelementptr inbounds i8* %3, i64 24, !dbg !4042
  %20 = bitcast i8* %exit_label to %struct.rtx_def**, !dbg !4042
  store %struct.rtx_def* %cond, %struct.rtx_def** %20, align 8, !dbg !4042, !tbaa !2438
  %data = getelementptr inbounds i8* %3, i64 32, !dbg !4043
  %case_list = getelementptr inbounds i8* %3, i64 40, !dbg !4043
  %21 = bitcast i8* %case_list to %struct.case_node**, !dbg !4043
  store %struct.case_node* null, %struct.case_node** %21, align 8, !dbg !4043, !tbaa !2438
  %index_expr = getelementptr inbounds i8* %3, i64 56, !dbg !4044
  %22 = bitcast i8* %index_expr to %union.tree_node**, !dbg !4044
  store %union.tree_node* %expr, %union.tree_node** %22, align 8, !dbg !4044, !tbaa !2438
  %nominal_type = getelementptr inbounds i8* %3, i64 64, !dbg !4045
  %23 = bitcast i8* %nominal_type to %union.tree_node**, !dbg !4045
  store %union.tree_node* %type, %union.tree_node** %23, align 8, !dbg !4045, !tbaa !2438
  %default_label = getelementptr inbounds i8* %3, i64 48, !dbg !4046
  %24 = bitcast i8* %default_label to %union.tree_node**, !dbg !4046
  store %union.tree_node* null, %union.tree_node** %24, align 8, !dbg !4046, !tbaa !2438
  %printname43 = getelementptr inbounds i8* %3, i64 72, !dbg !4047
  %25 = bitcast i8* %printname43 to i8**, !dbg !4047
  store i8* %printname, i8** %25, align 8, !dbg !4047, !tbaa !2438
  %call44 = tail call i32 @force_line_numbers() #8, !dbg !4048
  %line_number_status = getelementptr inbounds i8* %3, i64 80, !dbg !4048
  %26 = bitcast i8* %line_number_status to i32*, !dbg !4048
  store i32 %call44, i32* %26, align 4, !dbg !4048, !tbaa !2561
  %27 = load %struct.function** @cfun, align 8, !dbg !4049, !tbaa !2438
  %stmt47 = getelementptr inbounds %struct.function* %27, i64 0, i32 1, !dbg !4049
  %28 = load %struct.stmt_status** %stmt47, align 8, !dbg !4049, !tbaa !2438
  %x_case_stack48 = getelementptr inbounds %struct.stmt_status* %28, i64 0, i32 4, !dbg !4049
  store %struct.nesting* %8, %struct.nesting** %x_case_stack48, align 8, !dbg !4049, !tbaa !2438
  %29 = load %struct.function** @cfun, align 8, !dbg !4050, !tbaa !2438
  %stmt49 = getelementptr inbounds %struct.function* %29, i64 0, i32 1, !dbg !4050
  %30 = load %struct.stmt_status** %stmt49, align 8, !dbg !4050, !tbaa !2438
  %x_nesting_stack50 = getelementptr inbounds %struct.stmt_status* %30, i64 0, i32 5, !dbg !4050
  store %struct.nesting* %8, %struct.nesting** %x_nesting_stack50, align 8, !dbg !4050, !tbaa !2438
  tail call void @do_pending_stack_adjust() #8, !dbg !4051
  %call51 = tail call %struct.rtx_def* @get_last_insn() #8, !dbg !4052
  %31 = bitcast %struct.rtx_def* %call51 to i32*, !dbg !4052
  %bf.load52 = load i32* %31, align 8, !dbg !4052
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !4052
  %cmp54 = icmp eq i32 %bf.clear53, 37, !dbg !4052
  br i1 %cmp54, label %if.end58, label %if.then56, !dbg !4052

if.then56:                                        ; preds = %cond.end
  %call57 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #8, !dbg !4053
  br label %if.end58, !dbg !4053

if.end58:                                         ; preds = %cond.end, %if.then56
  %call59 = tail call %struct.rtx_def* @get_last_insn() #8, !dbg !4054
  %start = bitcast i8* %data to %struct.rtx_def**, !dbg !4054
  store %struct.rtx_def* %call59, %struct.rtx_def** %start, align 8, !dbg !4054, !tbaa !2438
  %32 = load %struct.function** @cfun, align 8, !dbg !4055, !tbaa !2438
  %stmt.i = getelementptr inbounds %struct.function* %32, i64 0, i32 1, !dbg !4055
  %33 = load %struct.stmt_status** %stmt.i, align 8, !dbg !4055, !tbaa !2438
  %x_block_stack.i = getelementptr inbounds %struct.stmt_status* %33, i64 0, i32 0, !dbg !4055
  %34 = load %struct.nesting** %x_block_stack.i, align 8, !dbg !4055, !tbaa !2438
  %tobool.i = icmp eq %struct.nesting* %34, null, !dbg !4055
  br i1 %tobool.i, label %start_cleanup_deferral.exit, label %if.then.i, !dbg !4055

if.then.i:                                        ; preds = %if.end58
  %conditional_code.i = getelementptr inbounds %struct.nesting* %34, i64 0, i32 4, i32 0, i32 10, !dbg !4057
  %35 = load i32* %conditional_code.i, align 4, !dbg !4057, !tbaa !2561
  %inc.i = add nsw i32 %35, 1, !dbg !4057
  store i32 %inc.i, i32* %conditional_code.i, align 4, !dbg !4057, !tbaa !2561
  br label %start_cleanup_deferral.exit, !dbg !4057

start_cleanup_deferral.exit:                      ; preds = %if.end58, %if.then.i
  ret void, !dbg !4058
}
