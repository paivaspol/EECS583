define void @expand_end_bindings(%union.tree_node* %vars, i32 %mark_ends, i32 %dont_jump_in) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt = getelementptr inbounds %struct.function* %0, i64 0, i32 1
  %1 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_block_stack = getelementptr inbounds %struct.stmt_status* %1, i64 0, i32 0
  %2 = load %struct.nesting** %x_block_stack, align 8, !tbaa !0
  tail call void @warn_about_unused_variables(%union.tree_node* %vars) #9
  %exit_label = getelementptr inbounds %struct.nesting* %2, i64 0, i32 3
  %3 = load %struct.rtx_def** %exit_label, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @do_pending_stack_adjust() #7
  %4 = load %struct.rtx_def** %exit_label, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %4) #7
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_function_call_count = getelementptr inbounds %struct.function* %5, i64 0, i32 18
  %6 = load i32* %x_function_call_count, align 4, !tbaa !4
  %n_function_calls = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 7
  %7 = load i32* %n_function_calls, align 4, !tbaa !4
  %cmp = icmp eq i32 %6, %7
  br i1 %cmp, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %x_nonlocal_labels = getelementptr inbounds %struct.function* %5, i64 0, i32 19
  %8 = load %union.tree_node** %x_nonlocal_labels, align 8, !tbaa !0
  %tobool2 = icmp eq %union.tree_node* %8, null
  br i1 %tobool2, label %if.end13, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true
  %next = getelementptr inbounds %struct.nesting* %2, i64 0, i32 1
  %9 = load %struct.nesting** %next, align 8, !tbaa !0
  %cmp4 = icmp eq %struct.nesting* %9, null
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  %has_nonlocal_label = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %10 = bitcast [4 x i8]* %has_nonlocal_label to i32*
  %bf.load = load i32* %10, align 8
  %bf.clear = and i32 %bf.load, 256
  %tobool5 = icmp eq i32 %bf.clear, 0
  br i1 %tobool5, label %if.end13, label %if.then12

cond.false:                                       ; preds = %land.lhs.true3
  %cleanups = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 4
  %11 = load %union.tree_node** %cleanups, align 8, !tbaa !0
  %cmp8 = icmp eq %union.tree_node* %11, null
  br i1 %cmp8, label %lor.lhs.false, label %if.then12

lor.lhs.false:                                    ; preds = %cond.false
  %stack_level = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 1
  %12 = load %struct.rtx_def** %stack_level, align 8, !tbaa !0
  %cmp11 = icmp eq %struct.rtx_def* %12, null
  br i1 %cmp11, label %if.end13, label %if.then12

if.then12:                                        ; preds = %cond.true, %lor.lhs.false, %cond.false
  %call.i = tail call %struct.rtx_def* @gen_label_rtx() #7
  %13 = load %struct.nesting** %next, align 8, !tbaa !0
  %cmp.i = icmp eq %struct.nesting* %13, null
  br i1 %cmp.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then12
  %14 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_goto_handler_slots.i = getelementptr inbounds %struct.function* %14, i64 0, i32 20
  %slot.0106.i = load %struct.rtx_def** %x_nonlocal_goto_handler_slots.i, align 8
  %tobool107.i = icmp eq %struct.rtx_def* %slot.0106.i, null
  br i1 %tobool107.i, label %if.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %first_insn.i = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %slot.0108.i = phi %struct.rtx_def* [ %slot.0106.i, %for.body.lr.ph.i ], [ %slot.0.i, %for.body.i ]
  %15 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %15, 25
  %16 = and i32 %and.i, 1
  %17 = or i32 %16, 4
  %call2.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %17) #7
  %fld.i = getelementptr inbounds %struct.rtx_def* %slot.0108.i, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !0
  %call3.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %18, %struct.rtx_def* %call2.i) #7
  tail call void @start_sequence() #7
  %19 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !0
  %call7.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2.i, %struct.rtx_def* %19) #7
  %call8.i = tail call %struct.rtx_def* @get_insns() #7
  tail call void @end_sequence() #7
  %20 = load %struct.rtx_def** %first_insn.i, align 8, !tbaa !0
  %call9.i = tail call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call8.i, %struct.rtx_def* %20) #7
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %slot.0108.i, i64 0, i32 1, i64 1
  %rtx12.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %slot.0.i = load %struct.rtx_def** %rtx12.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %slot.0.i, null
  br i1 %tobool.i, label %if.end.i, label %for.body.i

if.end.i:                                         ; preds = %for.body.i, %if.then.i, %if.then12
  tail call void @emit_jump(%struct.rtx_def* %call.i) #7
  %21 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_labels.i = getelementptr inbounds %struct.function* %21, i64 0, i32 19
  %link.099.i = load %union.tree_node** %x_nonlocal_labels.i, align 8
  %tobool15101.i = icmp eq %union.tree_node* %link.099.i, null
  br i1 %tobool15101.i, label %expand_nl_goto_receivers.exit, label %for.body16.lr.ph.i

for.body16.lr.ph.i:                               ; preds = %if.end.i
  %x_nonlocal_goto_handler_slots13.i = getelementptr inbounds %struct.function* %21, i64 0, i32 20
  %first_insn24.i = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 2
  br label %for.body16.i

for.body16.i:                                     ; preds = %for.inc30.i, %for.body16.lr.ph.i
  %slot.1104.in.i = phi %struct.rtx_def** [ %x_nonlocal_goto_handler_slots13.i, %for.body16.lr.ph.i ], [ %rtx33.i, %for.inc30.i ]
  %link.0103.i = phi %union.tree_node* [ %link.099.i, %for.body16.lr.ph.i ], [ %link.0.i, %for.inc30.i ]
  %label_list.0102.i = phi %struct.rtx_def* [ null, %for.body16.lr.ph.i ], [ %label_list.1.i, %for.inc30.i ]
  %slot.1104.i = load %struct.rtx_def** %slot.1104.in.i, align 8
  %value.i = getelementptr inbounds %union.tree_node* %link.0103.i, i64 0, i32 0, i32 2
  %22 = bitcast i32* %value.i to %union.tree_node**
  %23 = load %union.tree_node** %22, align 8, !tbaa !0
  %bit_field_flag.i = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 5
  %24 = bitcast [8 x i8]* %bit_field_flag.i to i64*
  %bf.load.i = load i64* %24, align 8
  %bf.cast.i = and i64 %bf.load.i, 4096
  %tobool17.i = icmp eq i64 %bf.cast.i, 0
  br i1 %tobool17.i, label %if.then18.i, label %for.inc30.i

if.then18.i:                                      ; preds = %for.body16.i
  %arrayidx20.i = getelementptr inbounds %struct.rtx_def* %slot.1104.i, i64 0, i32 1, i64 0
  %rtx21.i = bitcast %union.rtunion_def* %arrayidx20.i to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx21.i, align 8, !tbaa !0
  %26 = load %struct.rtx_def** %first_insn24.i, align 8, !tbaa !0
  %call25.i = tail call fastcc %struct.rtx_def* @expand_nl_handler_label(%struct.rtx_def* %25, %struct.rtx_def* %26) #7
  %call26.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call25.i, %struct.rtx_def* %label_list.0102.i) #7
  tail call fastcc void @expand_nl_goto_receiver() #7
  %27 = load %union.tree_node** %22, align 8, !tbaa !0
  tail call void @expand_goto(%union.tree_node* %27) #7
  br label %for.inc30.i

for.inc30.i:                                      ; preds = %if.then18.i, %for.body16.i
  %label_list.1.i = phi %struct.rtx_def* [ %label_list.0102.i, %for.body16.i ], [ %call26.i, %if.then18.i ]
  %chain.i = getelementptr inbounds %union.tree_node* %link.0103.i, i64 0, i32 0, i32 0, i32 0
  %arrayidx32.i = getelementptr inbounds %struct.rtx_def* %slot.1104.i, i64 0, i32 1, i64 1
  %rtx33.i = bitcast %union.rtunion_def* %arrayidx32.i to %struct.rtx_def**
  %link.0.i = load %union.tree_node** %chain.i, align 8
  %tobool15.i = icmp eq %union.tree_node* %link.0.i, null
  br i1 %tobool15.i, label %for.end34.i, label %for.body16.i

for.end34.i:                                      ; preds = %for.inc30.i
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_labels35.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 19
  %link.191.pre.i = load %union.tree_node** %x_nonlocal_labels35.phi.trans.insert.i, align 8
  %tobool3893.i = icmp eq %union.tree_node* %link.191.pre.i, null
  br i1 %tobool3893.i, label %expand_nl_goto_receivers.exit, label %for.body39.lr.ph.i

for.body39.lr.ph.i:                               ; preds = %for.end34.i
  %x_nonlocal_goto_handler_slots36.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 20
  br label %for.body39.i

for.body39.i:                                     ; preds = %for.inc60.i, %for.body39.lr.ph.i
  %slot.297.in.i = phi %struct.rtx_def** [ %x_nonlocal_goto_handler_slots36.i, %for.body39.lr.ph.i ], [ %rtx65.i, %for.inc60.i ]
  %link.196.i = phi %union.tree_node* [ %link.191.pre.i, %for.body39.lr.ph.i ], [ %link.1.i, %for.inc60.i ]
  %label_list.295.i = phi %struct.rtx_def* [ %label_list.1.i, %for.body39.lr.ph.i ], [ %label_list.3.i, %for.inc60.i ]
  %any_invalid.094.i = phi i32 [ 0, %for.body39.lr.ph.i ], [ %any_invalid.1.i, %for.inc60.i ]
  %slot.297.i = load %struct.rtx_def** %slot.297.in.i, align 8
  %value41.i = getelementptr inbounds %union.tree_node* %link.196.i, i64 0, i32 0, i32 2
  %28 = bitcast i32* %value41.i to %union.tree_node**
  %29 = load %union.tree_node** %28, align 8, !tbaa !0
  %bit_field_flag43.i = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 5
  %30 = bitcast [8 x i8]* %bit_field_flag43.i to i64*
  %bf.load44.i = load i64* %30, align 8
  %bf.cast47.i = and i64 %bf.load44.i, 4096
  %tobool48.i = icmp eq i64 %bf.cast47.i, 0
  br i1 %tobool48.i, label %for.inc60.i, label %if.then49.i

if.then49.i:                                      ; preds = %for.body39.i
  %arrayidx52.i = getelementptr inbounds %struct.rtx_def* %slot.297.i, i64 0, i32 1, i64 0
  %rtx53.i = bitcast %union.rtunion_def* %arrayidx52.i to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx53.i, align 8, !tbaa !0
  %32 = load %struct.rtx_def** %first_insn24.i, align 8, !tbaa !0
  %call57.i = tail call fastcc %struct.rtx_def* @expand_nl_handler_label(%struct.rtx_def* %31, %struct.rtx_def* %32) #7
  %call58.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call57.i, %struct.rtx_def* %label_list.295.i) #7
  br label %for.inc60.i

for.inc60.i:                                      ; preds = %if.then49.i, %for.body39.i
  %any_invalid.1.i = phi i32 [ 1, %if.then49.i ], [ %any_invalid.094.i, %for.body39.i ]
  %label_list.3.i = phi %struct.rtx_def* [ %call58.i, %if.then49.i ], [ %label_list.295.i, %for.body39.i ]
  %chain62.i = getelementptr inbounds %union.tree_node* %link.196.i, i64 0, i32 0, i32 0, i32 0
  %arrayidx64.i = getelementptr inbounds %struct.rtx_def* %slot.297.i, i64 0, i32 1, i64 1
  %rtx65.i = bitcast %union.rtunion_def* %arrayidx64.i to %struct.rtx_def**
  %link.1.i = load %union.tree_node** %chain62.i, align 8
  %tobool38.i = icmp eq %union.tree_node* %link.1.i, null
  br i1 %tobool38.i, label %for.end66.i, label %for.body39.i

for.end66.i:                                      ; preds = %for.inc60.i
  %tobool67.i = icmp eq i32 %any_invalid.1.i, 0
  br i1 %tobool67.i, label %expand_nl_goto_receivers.exit, label %if.then68.i

if.then68.i:                                      ; preds = %for.end66.i
  tail call fastcc void @expand_nl_goto_receiver() #7
  tail call void @expand_builtin_trap() #7
  br label %expand_nl_goto_receivers.exit

expand_nl_goto_receivers.exit:                    ; preds = %for.end66.i, %if.end.i, %for.end34.i, %if.then68.i
  %label_list.2.lcssa112.i = phi %struct.rtx_def* [ %label_list.3.i, %if.then68.i ], [ %label_list.1.i, %for.end34.i ], [ null, %if.end.i ], [ %label_list.3.i, %for.end66.i ]
  %33 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_goto_handler_labels.i = getelementptr inbounds %struct.function* %33, i64 0, i32 21
  store %struct.rtx_def* %label_list.2.lcssa112.i, %struct.rtx_def** %x_nonlocal_goto_handler_labels.i, align 8, !tbaa !0
  %call70.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call.i) #7
  br label %if.end13

if.end13:                                         ; preds = %cond.true, %lor.lhs.false, %land.lhs.true, %if.end, %expand_nl_goto_receivers.exit
  %tobool14 = icmp eq i32 %dont_jump_in, 0
  br i1 %tobool14, label %lor.lhs.false15, label %if.then20

lor.lhs.false15:                                  ; preds = %if.end13
  %stack_level18 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 1
  %34 = load %struct.rtx_def** %stack_level18, align 8, !tbaa !0
  %cmp19 = icmp eq %struct.rtx_def* %34, null
  br i1 %cmp19, label %if.end35.thread, label %if.then20

if.end35.thread:                                  ; preds = %lor.lhs.false15
  %stack_level38245 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 1
  br label %lor.lhs.false40

if.then20:                                        ; preds = %lor.lhs.false15, %if.end13
  %label_chain = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 6
  %chain.0230 = load %struct.label_chain** %label_chain, align 8
  %tobool23231 = icmp eq %struct.label_chain* %chain.0230, null
  br i1 %tobool23231, label %if.end35, label %for.body

for.body:                                         ; preds = %if.then20, %for.inc
  %chain.0232 = phi %struct.label_chain* [ %chain.0, %for.inc ], [ %chain.0230, %if.then20 ]
  %label = getelementptr inbounds %struct.label_chain* %chain.0232, i64 0, i32 1
  %35 = load %union.tree_node** %label, align 8, !tbaa !0
  %bit_field_flag = getelementptr inbounds %union.tree_node* %35, i64 0, i32 0, i32 5
  %36 = bitcast [8 x i8]* %bit_field_flag to i64*
  %bf.load24 = load i64* %36, align 8
  %bf.set = or i64 %bf.load24, 4096
  store i64 %bf.set, i64* %36, align 8
  %37 = load %union.tree_node** %label, align 8, !tbaa !0
  %addressable_flag = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 2
  %38 = bitcast [4 x i8]* %addressable_flag to i32*
  %bf.load27 = load i32* %38, align 8
  %bf.clear29 = and i32 %bf.load27, 1024
  %tobool30 = icmp eq i32 %bf.clear29, 0
  br i1 %tobool30, label %for.inc, label %if.then31

if.then31:                                        ; preds = %for.body
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %37, i8* getelementptr inbounds ([50 x i8]* @.str17, i64 0, i64 0)) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then31
  %next34 = getelementptr inbounds %struct.label_chain* %chain.0232, i64 0, i32 0
  %chain.0 = load %struct.label_chain** %next34, align 8
  %tobool23 = icmp eq %struct.label_chain* %chain.0, null
  br i1 %tobool23, label %if.end35, label %for.body

if.end35:                                         ; preds = %if.then20, %for.inc
  %stack_level38.phi.trans.insert = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 1
  %.pre = load %struct.rtx_def** %stack_level38.phi.trans.insert, align 8, !tbaa !0
  %phitmp = icmp eq %struct.rtx_def* %.pre, null
  %stack_level38 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 1
  br i1 %phitmp, label %lor.lhs.false40, label %if.then45

lor.lhs.false40:                                  ; preds = %if.end35.thread, %if.end35
  %stack_level38247 = phi %struct.rtx_def** [ %stack_level38245, %if.end35.thread ], [ %stack_level38, %if.end35 ]
  %cleanups43 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 4
  %39 = load %union.tree_node** %cleanups43, align 8, !tbaa !0
  %cmp44 = icmp eq %union.tree_node* %39, null
  br i1 %cmp44, label %if.end98, label %if.then45

if.then45:                                        ; preds = %lor.lhs.false40, %if.end35
  %stack_level38246 = phi %struct.rtx_def** [ %stack_level38, %if.end35 ], [ %stack_level38247, %lor.lhs.false40 ]
  %40 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt46 = getelementptr inbounds %struct.function* %40, i64 0, i32 1
  %41 = load %struct.stmt_status** %stmt46, align 8, !tbaa !0
  %x_expr_stmts_for_value = getelementptr inbounds %struct.stmt_status* %41, i64 0, i32 10
  %42 = load i32* %x_expr_stmts_for_value, align 4, !tbaa !4
  %x_last_expr_value = getelementptr inbounds %struct.stmt_status* %41, i64 0, i32 9
  %43 = load %struct.rtx_def** %x_last_expr_value, align 8, !tbaa !0
  %x_last_expr_type = getelementptr inbounds %struct.stmt_status* %41, i64 0, i32 8
  %44 = load %union.tree_node** %x_last_expr_type, align 8, !tbaa !0
  store i32 0, i32* %x_expr_stmts_for_value, align 4, !tbaa !4
  %call51 = tail call %struct.rtx_def* @get_last_insn() #7
  %45 = bitcast %struct.rtx_def* %call51 to i32*
  %bf.load52 = load i32* %45, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 37
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.then45
  %call56 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %call51) #7
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.then45
  %insn.0 = phi %struct.rtx_def* [ %call56, %if.then55 ], [ %call51, %if.then45 ]
  %tobool58 = icmp eq %struct.rtx_def* %insn.0, null
  br i1 %tobool58, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end57
  %46 = bitcast %struct.rtx_def* %insn.0 to i32*
  %bf.load59 = load i32* %46, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  %cmp61 = icmp ne i32 %bf.clear60, 35
  br label %lor.end

lor.end:                                          ; preds = %if.end57, %lor.rhs
  %47 = phi i1 [ true, %if.end57 ], [ %cmp61, %lor.rhs ]
  %lor.ext = zext i1 %47 to i32
  %cleanups64 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 4
  %48 = load %union.tree_node** %cleanups64, align 8, !tbaa !0
  tail call fastcc void @expand_cleanups(%union.tree_node* %48, i32 0, i32 %lor.ext) #9
  br i1 %47, label %if.then66, label %if.end67

if.then66:                                        ; preds = %lor.end
  tail call void @do_pending_stack_adjust() #7
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %lor.end
  %49 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt68 = getelementptr inbounds %struct.function* %49, i64 0, i32 1
  %50 = load %struct.stmt_status** %stmt68, align 8, !tbaa !0
  %x_expr_stmts_for_value69 = getelementptr inbounds %struct.stmt_status* %50, i64 0, i32 10
  store i32 %42, i32* %x_expr_stmts_for_value69, align 4, !tbaa !4
  %x_last_expr_value71 = getelementptr inbounds %struct.stmt_status* %50, i64 0, i32 9
  store %struct.rtx_def* %43, %struct.rtx_def** %x_last_expr_value71, align 8, !tbaa !0
  %51 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt72 = getelementptr inbounds %struct.function* %51, i64 0, i32 1
  %52 = load %struct.stmt_status** %stmt72, align 8, !tbaa !0
  %x_last_expr_type73 = getelementptr inbounds %struct.stmt_status* %52, i64 0, i32 8
  store %union.tree_node* %44, %union.tree_node** %x_last_expr_type73, align 8, !tbaa !0
  br i1 %47, label %land.lhs.true75, label %if.end89

land.lhs.true75:                                  ; preds = %if.end67
  %53 = load %struct.rtx_def** %stack_level38246, align 8, !tbaa !0
  %cmp79 = icmp eq %struct.rtx_def* %53, null
  br i1 %cmp79, label %if.end89, label %if.then80

if.then80:                                        ; preds = %land.lhs.true75
  %next81 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 1
  %54 = load %struct.nesting** %next81, align 8, !tbaa !0
  %not.tobool82 = icmp eq %struct.nesting* %54, null
  %cond = zext i1 %not.tobool82 to i32
  tail call void @emit_stack_restore(i32 %cond, %struct.rtx_def* %53, %struct.rtx_def* null) #7
  %55 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_goto_handler_slots = getelementptr inbounds %struct.function* %55, i64 0, i32 20
  %56 = load %struct.rtx_def** %x_nonlocal_goto_handler_slots, align 8, !tbaa !0
  %cmp86 = icmp eq %struct.rtx_def* %56, null
  br i1 %cmp86, label %if.end89, label %if.then87

if.then87:                                        ; preds = %if.then80
  %x_nonlocal_goto_stack_level = getelementptr inbounds %struct.function* %55, i64 0, i32 22
  tail call void @emit_stack_save(i32 2, %struct.rtx_def** %x_nonlocal_goto_stack_level, %struct.rtx_def* null) #7
  br label %if.end89

if.end89:                                         ; preds = %if.then80, %if.end67, %land.lhs.true75, %if.then87
  %57 = load %struct.rtx_def** %stack_level38246, align 8, !tbaa !0
  %58 = load %union.tree_node** %cleanups64, align 8, !tbaa !0
  %first_insn = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 2
  %59 = load %struct.rtx_def** %first_insn, align 8, !tbaa !0
  tail call fastcc void @fixup_gotos(%struct.nesting* %2, %struct.rtx_def* %57, %union.tree_node* %58, %struct.rtx_def* %59, i32 %dont_jump_in) #9
  br label %if.end98

if.end98:                                         ; preds = %lor.lhs.false40, %if.end89
  %tobool99 = icmp eq i32 %mark_ends, 0
  br i1 %tobool99, label %if.else, label %if.then100

if.then100:                                       ; preds = %if.end98
  %call101 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -97) #7
  %first_insn104 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 2
  %60 = load %struct.rtx_def** %first_insn104, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 1, i64 3
  %rttree = bitcast %union.rtunion_def* %arrayidx to %union.tree_node**
  %61 = load %union.tree_node** %rttree, align 8, !tbaa !0
  %62 = getelementptr inbounds %struct.rtx_def* %call101, i64 0, i32 1, i64 3, i32 0
  %.c = ptrtoint %union.tree_node* %61 to i64
  store i64 %.c, i64* %62, align 8, !tbaa !0
  br label %if.end113

if.else:                                          ; preds = %if.end98
  %first_insn110 = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 2
  %63 = load %struct.rtx_def** %first_insn110, align 8, !tbaa !0
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx112 to i32*
  store i32 -99, i32* %rtint, align 4, !tbaa !4
  br label %if.end113

if.end113:                                        ; preds = %if.else, %if.then100
  %block_target_temp_slot_level = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 9
  %64 = load i32* %block_target_temp_slot_level, align 4, !tbaa !4
  %65 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_target_temp_slot_level = getelementptr inbounds %struct.function* %65, i64 0, i32 42
  store i32 %64, i32* %x_target_temp_slot_level, align 4, !tbaa !4
  %innermost_stack_block = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 3
  %66 = load %struct.nesting** %innermost_stack_block, align 8, !tbaa !0
  %stmt118 = getelementptr inbounds %struct.function* %65, i64 0, i32 1
  %67 = load %struct.stmt_status** %stmt118, align 8, !tbaa !0
  %x_stack_block_stack = getelementptr inbounds %struct.stmt_status* %67, i64 0, i32 1
  store %struct.nesting* %66, %struct.nesting** %x_stack_block_stack, align 8, !tbaa !0
  %68 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt119 = getelementptr inbounds %struct.function* %68, i64 0, i32 1
  %69 = load %struct.stmt_status** %stmt119, align 8, !tbaa !0
  %x_block_stack120 = getelementptr inbounds %struct.stmt_status* %69, i64 0, i32 0
  %70 = load %struct.nesting** %x_block_stack120, align 8, !tbaa !0
  br label %do.body121

do.body121:                                       ; preds = %do.cond.do.body121_crit_edge, %if.end113
  %71 = phi %struct.stmt_status* [ %.pre244, %do.cond.do.body121_crit_edge ], [ %69, %if.end113 ]
  %x_nesting_stack = getelementptr inbounds %struct.stmt_status* %71, i64 0, i32 5
  %72 = load %struct.nesting** %x_nesting_stack, align 8, !tbaa !0
  %x_loop_stack = getelementptr inbounds %struct.stmt_status* %71, i64 0, i32 3
  %73 = load %struct.nesting** %x_loop_stack, align 8, !tbaa !0
  %cmp124 = icmp eq %struct.nesting* %73, %72
  br i1 %cmp124, label %if.then125, label %if.end131

if.then125:                                       ; preds = %do.body121
  %next128 = getelementptr inbounds %struct.nesting* %72, i64 0, i32 1
  %74 = load %struct.nesting** %next128, align 8, !tbaa !0
  store %struct.nesting* %74, %struct.nesting** %x_loop_stack, align 8, !tbaa !0
  %.pre233 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt132.phi.trans.insert = getelementptr inbounds %struct.function* %.pre233, i64 0, i32 1
  %.pre234 = load %struct.stmt_status** %stmt132.phi.trans.insert, align 8, !tbaa !0
  br label %if.end131

if.end131:                                        ; preds = %if.then125, %do.body121
  %75 = phi %struct.stmt_status* [ %.pre234, %if.then125 ], [ %71, %do.body121 ]
  %x_cond_stack = getelementptr inbounds %struct.stmt_status* %75, i64 0, i32 2
  %76 = load %struct.nesting** %x_cond_stack, align 8, !tbaa !0
  %cmp133 = icmp eq %struct.nesting* %76, %72
  br i1 %cmp133, label %if.then134, label %if.end140

if.then134:                                       ; preds = %if.end131
  %next137 = getelementptr inbounds %struct.nesting* %72, i64 0, i32 1
  %77 = load %struct.nesting** %next137, align 8, !tbaa !0
  store %struct.nesting* %77, %struct.nesting** %x_cond_stack, align 8, !tbaa !0
  %.pre235 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt141.phi.trans.insert = getelementptr inbounds %struct.function* %.pre235, i64 0, i32 1
  %.pre236 = load %struct.stmt_status** %stmt141.phi.trans.insert, align 8, !tbaa !0
  br label %if.end140

if.end140:                                        ; preds = %if.then134, %if.end131
  %78 = phi %struct.stmt_status* [ %.pre236, %if.then134 ], [ %75, %if.end131 ]
  %x_block_stack142 = getelementptr inbounds %struct.stmt_status* %78, i64 0, i32 0
  %79 = load %struct.nesting** %x_block_stack142, align 8, !tbaa !0
  %cmp143 = icmp eq %struct.nesting* %79, %72
  br i1 %cmp143, label %if.then144, label %if.end150

if.then144:                                       ; preds = %if.end140
  %next147 = getelementptr inbounds %struct.nesting* %72, i64 0, i32 1
  %80 = load %struct.nesting** %next147, align 8, !tbaa !0
  store %struct.nesting* %80, %struct.nesting** %x_block_stack142, align 8, !tbaa !0
  %.pre237 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt151.phi.trans.insert = getelementptr inbounds %struct.function* %.pre237, i64 0, i32 1
  %.pre238 = load %struct.stmt_status** %stmt151.phi.trans.insert, align 8, !tbaa !0
  br label %if.end150

if.end150:                                        ; preds = %if.then144, %if.end140
  %81 = phi %struct.stmt_status* [ %.pre238, %if.then144 ], [ %78, %if.end140 ]
  %x_stack_block_stack152 = getelementptr inbounds %struct.stmt_status* %81, i64 0, i32 1
  %82 = load %struct.nesting** %x_stack_block_stack152, align 8, !tbaa !0
  %cmp153 = icmp eq %struct.nesting* %82, %72
  br i1 %cmp153, label %if.then154, label %if.end160

if.then154:                                       ; preds = %if.end150
  %next157 = getelementptr inbounds %struct.nesting* %72, i64 0, i32 1
  %83 = load %struct.nesting** %next157, align 8, !tbaa !0
  store %struct.nesting* %83, %struct.nesting** %x_stack_block_stack152, align 8, !tbaa !0
  %.pre239 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt161.phi.trans.insert = getelementptr inbounds %struct.function* %.pre239, i64 0, i32 1
  %.pre240 = load %struct.stmt_status** %stmt161.phi.trans.insert, align 8, !tbaa !0
  br label %if.end160

if.end160:                                        ; preds = %if.then154, %if.end150
  %84 = phi %struct.stmt_status* [ %.pre240, %if.then154 ], [ %81, %if.end150 ]
  %x_case_stack = getelementptr inbounds %struct.stmt_status* %84, i64 0, i32 4
  %85 = load %struct.nesting** %x_case_stack, align 8, !tbaa !0
  %cmp162 = icmp eq %struct.nesting* %85, %72
  br i1 %cmp162, label %if.then163, label %if.end169

if.then163:                                       ; preds = %if.end160
  %next166 = getelementptr inbounds %struct.nesting* %72, i64 0, i32 1
  %86 = load %struct.nesting** %next166, align 8, !tbaa !0
  store %struct.nesting* %86, %struct.nesting** %x_case_stack, align 8, !tbaa !0
  %.pre241 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt170.phi.trans.insert = getelementptr inbounds %struct.function* %.pre241, i64 0, i32 1
  %.pre242 = load %struct.stmt_status** %stmt170.phi.trans.insert, align 8, !tbaa !0
  br label %if.end169

if.end169:                                        ; preds = %if.then163, %if.end160
  %87 = phi %struct.stmt_status* [ %.pre242, %if.then163 ], [ %84, %if.end160 ]
  %x_nesting_stack171 = getelementptr inbounds %struct.stmt_status* %87, i64 0, i32 5
  %88 = load %struct.nesting** %x_nesting_stack171, align 8, !tbaa !0
  %depth = getelementptr inbounds %struct.nesting* %88, i64 0, i32 2
  %89 = load i32* %depth, align 4, !tbaa !4
  %sub = add nsw i32 %89, -1
  %x_nesting_depth = getelementptr inbounds %struct.stmt_status* %87, i64 0, i32 6
  store i32 %sub, i32* %x_nesting_depth, align 4, !tbaa !4
  %all = getelementptr inbounds %struct.nesting* %72, i64 0, i32 0
  %90 = load %struct.nesting** %all, align 8, !tbaa !0
  store %struct.nesting* %90, %struct.nesting** %x_nesting_stack171, align 8, !tbaa !0
  %91 = bitcast %struct.nesting* %72 to i8*
  %92 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 1), align 8, !tbaa !0
  %93 = bitcast %struct._obstack_chunk* %92 to %struct.nesting*
  %cmp175 = icmp ugt %struct.nesting* %72, %93
  %94 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 4), align 8, !tbaa !0
  %cmp177 = icmp ult i8* %91, %94
  %or.cond = and i1 %cmp175, %cmp177
  br i1 %or.cond, label %if.then178, label %if.else179

if.then178:                                       ; preds = %if.end169
  store i8* %91, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 2), align 8, !tbaa !0
  store i8* %91, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !tbaa !0
  br label %do.cond

if.else179:                                       ; preds = %if.end169
  tail call void @obstack_free(%struct.obstack* @stmt_obstack, i8* %91) #7
  br label %do.cond

do.cond:                                          ; preds = %if.then178, %if.else179
  %cmp181 = icmp eq %struct.nesting* %72, %70
  br i1 %cmp181, label %do.end183, label %do.cond.do.body121_crit_edge

do.cond.do.body121_crit_edge:                     ; preds = %do.cond
  %.pre243 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt122.phi.trans.insert = getelementptr inbounds %struct.function* %.pre243, i64 0, i32 1
  %.pre244 = load %struct.stmt_status** %stmt122.phi.trans.insert, align 8, !tbaa !0
  br label %do.body121

do.end183:                                        ; preds = %do.cond
  tail call void @pop_temp_slots() #7
  ret void
}
