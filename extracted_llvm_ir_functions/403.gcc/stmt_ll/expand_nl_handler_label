define internal fastcc %struct.rtx_def* @expand_nl_handler_label(%struct.rtx_def* %slot, %struct.rtx_def* %before_insn) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %slot}, i64 0, metadata !2158), !dbg !4817
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %before_insn}, i64 0, metadata !2159), !dbg !4817
  %call = tail call %struct.rtx_def* @gen_label_rtx() #8, !dbg !4818
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !2161), !dbg !4818
  %0 = bitcast %struct.rtx_def* %call to i32*, !dbg !4819
  %bf.load = load i32* %0, align 8, !dbg !4819
  %bf.set = or i32 %bf.load, 268435456, !dbg !4819
  store i32 %bf.set, i32* %0, align 8, !dbg !4819
  tail call void @start_sequence() #8, !dbg !4820
  %1 = load i32* @target_flags, align 4, !dbg !4821, !tbaa !2561
  %and = lshr i32 %1, 25, !dbg !4821
  %2 = and i32 %and, 1, !dbg !4821
  %3 = or i32 %2, 4, !dbg !4821
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %3, %struct.rtx_def* %call) #8, !dbg !4821
  %call2 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %slot, %struct.rtx_def* %call1) #8, !dbg !4821
  %call3 = tail call %struct.rtx_def* @get_insns() #8, !dbg !4822
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call3}, i64 0, metadata !2160), !dbg !4822
  tail call void @end_sequence() #8, !dbg !4823
  %call4 = tail call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call3, %struct.rtx_def* %before_insn) #8, !dbg !4824
  %call5 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call) #8, !dbg !4825
  ret %struct.rtx_def* %call, !dbg !4826
}
