define i32 @warn_if_unused_value(%union.tree_node* nocapture %exp) #0 {
entry:
  %used_flag193 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %used_flag193 to i32*
  %bf.load194 = load i32* %0, align 8
  %bf.clear195 = and i32 %bf.load194, 65536
  %tobool196 = icmp eq i32 %bf.clear195, 0
  br i1 %tobool196, label %if.end, label %return

if.end:                                           ; preds = %entry, %tailrecurse.backedge
  %bf.load55 = phi i32 [ %bf.load, %tailrecurse.backedge ], [ %bf.load194, %entry ]
  %exp.tr197 = phi %union.tree_node* [ %exp.tr.be, %tailrecurse.backedge ], [ %exp, %entry ]
  %type = getelementptr inbounds %union.tree_node* %exp.tr197, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code to i32*
  %bf.load3 = load i32* %2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp = icmp eq i32 %bf.clear4, 5
  br i1 %cmp, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  %bf.clear10 = and i32 %bf.load55, 255
  switch i32 %bf.clear10, label %sw.default [
    i32 130, label %return
    i32 132, label %return
    i32 129, label %return
    i32 131, label %return
    i32 48, label %return
    i32 49, label %return
    i32 50, label %return
    i32 53, label %return
    i32 54, label %return
    i32 120, label %return
    i32 134, label %return
    i32 55, label %return
    i32 140, label %return
    i32 52, label %sw.bb11
    i32 118, label %sw.bb13
    i32 92, label %sw.bb18
    i32 91, label %sw.bb18
    i32 47, label %sw.bb23
    i32 115, label %sw.bb52
    i32 114, label %sw.bb52
    i32 116, label %sw.bb52
    i32 41, label %sw.bb95
  ]

sw.bb11:                                          ; preds = %if.end6
  %operands = getelementptr inbounds %union.tree_node* %exp.tr197, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %sw.bb95, %sw.bb11, %sw.bb13, %sw.bb18, %if.end37
  %exp.tr.be = phi %union.tree_node* [ %4, %sw.bb11 ], [ %7, %sw.bb13 ], [ %9, %sw.bb18 ], [ %12, %if.end37 ], [ %17, %sw.bb95 ]
  %used_flag = getelementptr inbounds %union.tree_node* %exp.tr.be, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %used_flag to i32*
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65536
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %return

sw.bb13:                                          ; preds = %if.end6
  %operands15 = getelementptr inbounds %union.tree_node* %exp.tr197, i64 0, i32 0, i32 2
  %arrayidx16 = getelementptr inbounds i32* %operands15, i64 2
  %6 = bitcast i32* %arrayidx16 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !0
  br label %tailrecurse.backedge

sw.bb18:                                          ; preds = %if.end6, %if.end6
  %operands20 = getelementptr inbounds %union.tree_node* %exp.tr197, i64 0, i32 0, i32 2
  %arrayidx21 = getelementptr inbounds i32* %operands20, i64 2
  %8 = bitcast i32* %arrayidx21 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !0
  br label %tailrecurse.backedge

sw.bb23:                                          ; preds = %if.end6
  %bf.clear27 = and i32 %bf.load55, 262144
  %tobool28 = icmp eq i32 %bf.clear27, 0
  br i1 %tobool28, label %if.end30, label %return

if.end30:                                         ; preds = %sw.bb23
  %operands32 = getelementptr inbounds %union.tree_node* %exp.tr197, i64 0, i32 0, i32 2
  %arrayidx33 = bitcast i32* %operands32 to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx33, align 8, !tbaa !0
  %call34 = tail call i32 @warn_if_unused_value(%union.tree_node* %10) #9
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %if.end37, label %return

if.end37:                                         ; preds = %if.end30
  %arrayidx40 = getelementptr inbounds i32* %operands32, i64 2
  %11 = bitcast i32* %arrayidx40 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !0
  %constant_flag = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast [4 x i8]* %constant_flag to i32*
  %bf.load42 = load i32* %13, align 8
  %bf.clear44 = and i32 %bf.load42, 512
  %tobool45 = icmp eq i32 %bf.clear44, 0
  br i1 %tobool45, label %tailrecurse.backedge, label %return

sw.bb52:                                          ; preds = %if.end6, %if.end6, %if.end6
  %bf.clear57 = and i32 %bf.load55, 262144
  %tobool58 = icmp eq i32 %bf.clear57, 0
  br i1 %tobool58, label %while.cond, label %return

while.cond:                                       ; preds = %sw.bb52, %while.cond
  %exp.pn = phi %union.tree_node* [ %tem.0, %while.cond ], [ %exp.tr197, %sw.bb52 ]
  %tem.0.in.in = getelementptr inbounds %union.tree_node* %exp.pn, i64 0, i32 0, i32 2
  %tem.0.in = bitcast i32* %tem.0.in.in to %union.tree_node**
  %tem.0 = load %union.tree_node** %tem.0.in, align 8
  %code65 = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast [4 x i8]* %code65 to i32*
  %bf.load66 = load i32* %14, align 8
  %15 = and i32 %bf.load66, 254
  %16 = icmp eq i32 %15, 114
  br i1 %16, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %bf.clear67 = and i32 %bf.load66, 255
  switch i32 %bf.clear67, label %maybe_warn [
    i32 48, label %return
    i32 49, label %return
    i32 53, label %return
  ]

sw.bb95:                                          ; preds = %if.end6
  %operands97 = getelementptr inbounds %union.tree_node* %exp.tr197, i64 0, i32 0, i32 2
  %arrayidx98 = bitcast i32* %operands97 to %union.tree_node**
  %17 = load %union.tree_node** %arrayidx98, align 8, !tbaa !0
  %type100 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type100, align 8, !tbaa !0
  %code102 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast [4 x i8]* %code102 to i32*
  %bf.load103 = load i32* %19, align 8
  %bf.clear104 = and i32 %bf.load103, 255
  %cmp105 = icmp eq i32 %bf.clear104, 15
  br i1 %cmp105, label %tailrecurse.backedge, label %sw.default

sw.default:                                       ; preds = %sw.bb95, %if.end6
  %idxprom187 = zext i32 %bf.clear10 to i64
  %arrayidx116 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom187
  %20 = load i8* %arrayidx116, align 1, !tbaa !1
  switch i8 %20, label %maybe_warn [
    i8 100, label %land.lhs.true
    i8 114, label %land.lhs.true
    i8 101, label %land.lhs.true145
  ]

land.lhs.true:                                    ; preds = %sw.default, %sw.default
  %bf.clear132 = and i32 %bf.load55, 2048
  %tobool133 = icmp eq i32 %bf.clear132, 0
  br i1 %tobool133, label %if.end135, label %return

if.end135:                                        ; preds = %land.lhs.true
  %cmp143 = icmp eq i8 %20, 101
  br i1 %cmp143, label %land.lhs.true145, label %maybe_warn

land.lhs.true145:                                 ; preds = %sw.default, %if.end135
  %arrayidx151 = getelementptr inbounds [256 x i32]* @tree_code_length, i64 0, i64 %idxprom187
  %21 = load i32* %arrayidx151, align 4, !tbaa !4
  %cmp152 = icmp eq i32 %21, 0
  br i1 %cmp152, label %return, label %maybe_warn

maybe_warn:                                       ; preds = %sw.default, %while.end, %if.end135, %land.lhs.true145
  %bf.clear159 = and i32 %bf.load55, 256
  %tobool160 = icmp eq i32 %bf.clear159, 0
  br i1 %tobool160, label %if.end162, label %return

if.end162:                                        ; preds = %maybe_warn
  %22 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt = getelementptr inbounds %struct.function* %22, i64 0, i32 1
  %23 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_emit_filename = getelementptr inbounds %struct.stmt_status* %23, i64 0, i32 11
  %24 = load i8** %x_emit_filename, align 8, !tbaa !0
  %x_emit_lineno = getelementptr inbounds %struct.stmt_status* %23, i64 0, i32 12
  %25 = load i32* %x_emit_lineno, align 4, !tbaa !4
  tail call void (i8*, i32, i8*, ...)* @warning_with_file_and_line(i8* %24, i32 %25, i8* getelementptr inbounds ([27 x i8]* @.str15, i64 0, i64 0)) #7
  br label %return

return:                                           ; preds = %entry, %if.end37, %if.end30, %sw.bb23, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end, %tailrecurse.backedge, %maybe_warn, %land.lhs.true145, %land.lhs.true, %while.end, %while.end, %while.end, %sw.bb52, %if.end162
  %retval.0 = phi i32 [ 1, %if.end162 ], [ 0, %sw.bb52 ], [ 0, %while.end ], [ 0, %while.end ], [ 0, %while.end ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true145 ], [ 0, %maybe_warn ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %if.end6 ], [ 0, %sw.bb23 ], [ 1, %if.end30 ], [ 0, %if.end37 ], [ 0, %tailrecurse.backedge ]
  ret i32 %retval.0
}
