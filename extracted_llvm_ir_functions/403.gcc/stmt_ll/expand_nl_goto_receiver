define internal fastcc void @expand_nl_goto_receiver() #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !0
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %0, %struct.rtx_def* %1) #7
  %2 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !1
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.end11, label %for.body

for.cond:                                         ; preds = %for.body
  %cmp = icmp ult i64 %inc, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.cond
  %i.019 = phi i64 [ %inc, %for.cond ], [ 0, %entry ]
  %3 = icmp ult i64 %i.019, 2
  %4 = and i64 %i.019, -3
  %5 = icmp eq i64 %4, 1
  %or.cond = and i1 %3, %5
  %inc = add i64 %i.019, 1
  br i1 %or.cond, label %if.end11, label %for.cond

for.end:                                          ; preds = %for.cond
  %cmp5 = icmp eq i64 %inc, 4
  br i1 %cmp5, label %if.then6, label %if.end11

if.then6:                                         ; preds = %for.end
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !0
  %7 = load %struct.function** @cfun, align 8, !tbaa !0
  %call7 = tail call %struct.rtx_def* @get_arg_pointer_save_area(%struct.function* %7) #7
  %call8 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call7) #7
  %call9 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %6, %struct.rtx_def* %call8) #7
  br label %if.end11

if.end11:                                         ; preds = %for.body, %entry, %for.end, %if.then6
  ret void
}
