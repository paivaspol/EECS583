define void @end_cleanup_deferral() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !dbg !3596, !tbaa !2438
  %stmt = getelementptr inbounds %struct.function* %0, i64 0, i32 1, !dbg !3596
  %1 = load %struct.stmt_status** %stmt, align 8, !dbg !3596, !tbaa !2438
  %x_block_stack = getelementptr inbounds %struct.stmt_status* %1, i64 0, i32 0, !dbg !3596
  %2 = load %struct.nesting** %x_block_stack, align 8, !dbg !3596, !tbaa !2438
  %tobool = icmp eq %struct.nesting* %2, null, !dbg !3596
  br i1 %tobool, label %if.end, label %if.then, !dbg !3596

if.then:                                          ; preds = %entry
  %conditional_code = getelementptr inbounds %struct.nesting* %2, i64 0, i32 4, i32 0, i32 10, !dbg !3597
  %3 = load i32* %conditional_code, align 4, !dbg !3597, !tbaa !2561
  %dec = add nsw i32 %3, -1, !dbg !3597
  store i32 %dec, i32* %conditional_code, align 4, !dbg !3597, !tbaa !2561
  br label %if.end, !dbg !3597

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3598
}
