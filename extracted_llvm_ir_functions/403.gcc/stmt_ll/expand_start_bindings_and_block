define void @expand_start_bindings_and_block(i32 %flags, %union.tree_node* %block) #0 {
entry:
  %0 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 4), align 8, !tbaa !0
  %1 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 120
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* @stmt_obstack, i32 120) #7
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %1, %entry ]
  %add.ptr = getelementptr inbounds i8* %2, i64 120
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !tbaa !0
  %3 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 2), align 8, !tbaa !0
  %cmp4 = icmp eq i8* %add.ptr, %3
  br i1 %cmp4, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 10), align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 10), align 8
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then6
  %sub.ptr.lhs.cast9 = ptrtoint i8* %add.ptr to i64
  %4 = load i32* getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 6), align 8, !tbaa !4
  %conv11 = sext i32 %4 to i64
  %add = add nsw i64 %conv11, %sub.ptr.lhs.cast9
  %neg = xor i32 %4, -1
  %conv13 = sext i32 %neg to i64
  %and = and i64 %add, %conv13
  %add.ptr14 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr14, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !tbaa !0
  %5 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 1), align 8, !tbaa !0
  %sub.ptr.lhs.cast17 = ptrtoint i8* %add.ptr14 to i64
  %sub.ptr.rhs.cast18 = ptrtoint %struct._obstack_chunk* %5 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %6 = load i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 4), align 8, !tbaa !0
  %sub.ptr.lhs.cast22 = ptrtoint i8* %6 to i64
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast18
  %cmp25 = icmp sgt i64 %sub.ptr.sub19, %sub.ptr.sub24
  br i1 %cmp25, label %if.then27, label %if.end30

if.then27:                                        ; preds = %if.end7
  store i8* %6, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 3), align 8, !tbaa !0
  br label %if.end30

if.end30:                                         ; preds = %if.then27, %if.end7
  %7 = phi i8* [ %6, %if.then27 ], [ %add.ptr14, %if.end7 ]
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @stmt_obstack, i64 0, i32 2), align 8, !tbaa !0
  %8 = bitcast i8* %3 to %struct.nesting*
  %and33 = and i32 %flags, 1
  %cmp34 = icmp eq i32 %and33, 0
  %and36 = and i32 %flags, 2
  %cmp37 = icmp eq i32 %and36, 0
  %tobool39 = icmp eq %union.tree_node* %block, null
  %or.cond = or i1 %cmp37, %tobool39
  br i1 %or.cond, label %if.end41, label %if.then40

if.then40:                                        ; preds = %if.end30
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), i32 3395, i8* getelementptr inbounds ([32 x i8]* @__FUNCTION__.expand_start_bindings_and_block, i64 0, i64 0)) #8
  unreachable

if.end41:                                         ; preds = %if.end30
  br i1 %cmp37, label %if.then43, label %if.else

if.then43:                                        ; preds = %if.end41
  %call = tail call %struct.rtx_def* @emit_note(i8* null, i32 -98) #7
  %9 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3, i32 0
  %block.c = ptrtoint %union.tree_node* %block to i64
  store i64 %block.c, i64* %9, align 8, !tbaa !0
  br label %if.end45

if.else:                                          ; preds = %if.end41
  %call44 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #7
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then43
  %note.0 = phi %struct.rtx_def* [ %call, %if.then43 ], [ %call44, %if.else ]
  %10 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt = getelementptr inbounds %struct.function* %10, i64 0, i32 1
  %11 = load %struct.stmt_status** %stmt, align 8, !tbaa !0
  %x_block_stack = getelementptr inbounds %struct.stmt_status* %11, i64 0, i32 0
  %12 = load %struct.nesting** %x_block_stack, align 8, !tbaa !0
  %next = getelementptr inbounds i8* %3, i64 8
  %13 = bitcast i8* %next to %struct.nesting**
  store %struct.nesting* %12, %struct.nesting** %13, align 8, !tbaa !0
  %14 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt46 = getelementptr inbounds %struct.function* %14, i64 0, i32 1
  %15 = load %struct.stmt_status** %stmt46, align 8, !tbaa !0
  %x_nesting_stack = getelementptr inbounds %struct.stmt_status* %15, i64 0, i32 5
  %16 = load %struct.nesting** %x_nesting_stack, align 8, !tbaa !0
  %all = bitcast i8* %3 to %struct.nesting**
  store %struct.nesting* %16, %struct.nesting** %all, align 8, !tbaa !0
  %17 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt47 = getelementptr inbounds %struct.function* %17, i64 0, i32 1
  %18 = load %struct.stmt_status** %stmt47, align 8, !tbaa !0
  %x_nesting_depth = getelementptr inbounds %struct.stmt_status* %18, i64 0, i32 6
  %19 = load i32* %x_nesting_depth, align 4, !tbaa !4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %x_nesting_depth, align 4, !tbaa !4
  %depth = getelementptr inbounds i8* %3, i64 16
  %20 = bitcast i8* %depth to i32*
  store i32 %inc, i32* %20, align 4, !tbaa !4
  %data = getelementptr inbounds i8* %3, i64 32
  %stack_level = getelementptr inbounds i8* %3, i64 40
  %21 = bitcast i8* %stack_level to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %21, align 8, !tbaa !0
  %cleanups = getelementptr inbounds i8* %3, i64 64
  %22 = bitcast i8* %cleanups to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %22, align 8, !tbaa !0
  %n_function_calls = getelementptr inbounds i8* %3, i64 88
  %23 = bitcast i8* %n_function_calls to i32*
  store i32 0, i32* %23, align 4, !tbaa !4
  %exception_region = getelementptr inbounds i8* %3, i64 92
  %24 = bitcast i8* %exception_region to i32*
  store i32 0, i32* %24, align 4, !tbaa !4
  %25 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_target_temp_slot_level = getelementptr inbounds %struct.function* %25, i64 0, i32 42
  %26 = load i32* %x_target_temp_slot_level, align 4, !tbaa !4
  %block_target_temp_slot_level = getelementptr inbounds i8* %3, i64 96
  %27 = bitcast i8* %block_target_temp_slot_level to i32*
  store i32 %26, i32* %27, align 4, !tbaa !4
  %conditional_code = getelementptr inbounds i8* %3, i64 100
  %28 = bitcast i8* %conditional_code to i32*
  store i32 0, i32* %28, align 4, !tbaa !4
  %last_unconditional_cleanup = getelementptr inbounds i8* %3, i64 104
  %29 = bitcast i8* %last_unconditional_cleanup to %struct.rtx_def**
  store %struct.rtx_def* %note.0, %struct.rtx_def** %29, align 8, !tbaa !0
  %call61 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #7
  %cleanup_ptr = getelementptr inbounds i8* %3, i64 112
  %30 = bitcast i8* %cleanup_ptr to %union.tree_node***
  store %union.tree_node** %22, %union.tree_node*** %30, align 8, !tbaa !0
  %31 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt67 = getelementptr inbounds %struct.function* %31, i64 0, i32 1
  %32 = load %struct.stmt_status** %stmt67, align 8, !tbaa !0
  %x_block_stack68 = getelementptr inbounds %struct.stmt_status* %32, i64 0, i32 0
  %33 = load %struct.nesting** %x_block_stack68, align 8, !tbaa !0
  %tobool69 = icmp eq %struct.nesting* %33, null
  br i1 %tobool69, label %if.else100, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %if.end45
  %cleanups75 = getelementptr inbounds %struct.nesting* %33, i64 0, i32 4, i32 0, i32 4
  %34 = load %union.tree_node** %cleanups75, align 8, !tbaa !0
  %cmp76 = icmp eq %union.tree_node* %34, null
  %outer_cleanups = getelementptr inbounds %struct.nesting* %33, i64 0, i32 4, i32 0, i32 5
  %35 = load %union.tree_node** %outer_cleanups, align 8, !tbaa !0
  %cmp83 = icmp eq %union.tree_node* %35, null
  %or.cond169 = and i1 %cmp76, %cmp83
  br i1 %or.cond169, label %if.else100, label %if.then85

if.then85:                                        ; preds = %land.lhs.true70
  %call96 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %34, %union.tree_node* %35) #7
  %outer_cleanups99 = getelementptr inbounds i8* %3, i64 72
  %36 = bitcast i8* %outer_cleanups99 to %union.tree_node**
  store %union.tree_node* %call96, %union.tree_node** %36, align 8, !tbaa !0
  br label %if.end104

if.else100:                                       ; preds = %land.lhs.true70, %if.end45
  %outer_cleanups103 = getelementptr inbounds i8* %3, i64 72
  %37 = bitcast i8* %outer_cleanups103 to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %37, align 8, !tbaa !0
  br label %if.end104

if.end104:                                        ; preds = %if.else100, %if.then85
  %label_chain = getelementptr inbounds i8* %3, i64 80
  %38 = bitcast i8* %label_chain to %struct.label_chain**
  store %struct.label_chain* null, %struct.label_chain** %38, align 8, !tbaa !0
  %39 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt107 = getelementptr inbounds %struct.function* %39, i64 0, i32 1
  %40 = load %struct.stmt_status** %stmt107, align 8, !tbaa !0
  %x_stack_block_stack = getelementptr inbounds %struct.stmt_status* %40, i64 0, i32 1
  %41 = load %struct.nesting** %x_stack_block_stack, align 8, !tbaa !0
  %innermost_stack_block = getelementptr inbounds i8* %3, i64 56
  %42 = bitcast i8* %innermost_stack_block to %struct.nesting**
  store %struct.nesting* %41, %struct.nesting** %42, align 8, !tbaa !0
  %first_insn = getelementptr inbounds i8* %3, i64 48
  %43 = bitcast i8* %first_insn to %struct.rtx_def**
  store %struct.rtx_def* %note.0, %struct.rtx_def** %43, align 8, !tbaa !0
  %44 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt112 = getelementptr inbounds %struct.function* %44, i64 0, i32 1
  %45 = load %struct.stmt_status** %stmt112, align 8, !tbaa !0
  %x_block_start_count = getelementptr inbounds %struct.stmt_status* %45, i64 0, i32 7
  %46 = load i32* %x_block_start_count, align 4, !tbaa !4
  %inc113 = add nsw i32 %46, 1
  store i32 %inc113, i32* %x_block_start_count, align 4, !tbaa !4
  %block_start_count = bitcast i8* %data to i32*
  store i32 %inc113, i32* %block_start_count, align 4, !tbaa !4
  br i1 %cmp34, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end104
  %call117 = tail call %struct.rtx_def* @gen_label_rtx() #7
  br label %cond.end

cond.end:                                         ; preds = %if.end104, %cond.true
  %cond = phi %struct.rtx_def* [ %call117, %cond.true ], [ null, %if.end104 ]
  %exit_label = getelementptr inbounds i8* %3, i64 24
  %47 = bitcast i8* %exit_label to %struct.rtx_def**
  store %struct.rtx_def* %cond, %struct.rtx_def** %47, align 8, !tbaa !0
  %48 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt118 = getelementptr inbounds %struct.function* %48, i64 0, i32 1
  %49 = load %struct.stmt_status** %stmt118, align 8, !tbaa !0
  %x_block_stack119 = getelementptr inbounds %struct.stmt_status* %49, i64 0, i32 0
  store %struct.nesting* %8, %struct.nesting** %x_block_stack119, align 8, !tbaa !0
  %50 = load %struct.function** @cfun, align 8, !tbaa !0
  %stmt120 = getelementptr inbounds %struct.function* %50, i64 0, i32 1
  %51 = load %struct.stmt_status** %stmt120, align 8, !tbaa !0
  %x_nesting_stack121 = getelementptr inbounds %struct.stmt_status* %51, i64 0, i32 5
  store %struct.nesting* %8, %struct.nesting** %x_nesting_stack121, align 8, !tbaa !0
  tail call void @push_temp_slots() #7
  ret void
}
