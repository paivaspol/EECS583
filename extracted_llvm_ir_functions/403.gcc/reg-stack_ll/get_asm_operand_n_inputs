define internal fastcc i32 @get_asm_operand_n_inputs(%struct.rtx_def* nocapture %body) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %body}, i64 0, metadata !1363), !dbg !2676
  %0 = bitcast %struct.rtx_def* %body to i32*, !dbg !2677
  %bf.load = load i32* %0, align 8, !dbg !2677
  %bf.clear = and i32 %bf.load, 65535, !dbg !2677
  switch i32 %bf.clear, label %if.end67 [
    i32 47, label %land.lhs.true
    i32 41, label %if.then12
    i32 39, label %land.lhs.true21
  ], !dbg !2677

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 1, !dbg !2677
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2677
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !2677, !tbaa !1563
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !2677
  %bf.load1 = load i32* %2, align 8, !dbg !2677
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2677
  %cmp3 = icmp eq i32 %bf.clear2, 41, !dbg !2677
  br i1 %cmp3, label %if.then, label %if.end67, !dbg !2677

if.then:                                          ; preds = %land.lhs.true
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3, !dbg !2678
  %rtvec = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtvec_def**, !dbg !2678
  %3 = load %struct.rtvec_def** %rtvec, align 8, !dbg !2678, !tbaa !1563
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0, !dbg !2678
  br label %return, !dbg !2678

if.then12:                                        ; preds = %entry
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 3, !dbg !2679
  %rtvec15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtvec_def**, !dbg !2679
  %4 = load %struct.rtvec_def** %rtvec15, align 8, !dbg !2679, !tbaa !1563
  %num_elem16 = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 0, !dbg !2679
  br label %return, !dbg !2679

land.lhs.true21:                                  ; preds = %entry
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 0, !dbg !2680
  %rtvec24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtvec_def**, !dbg !2680
  %5 = load %struct.rtvec_def** %rtvec24, align 8, !dbg !2680, !tbaa !1563
  %arrayidx25 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 0, !dbg !2680
  %6 = load %struct.rtx_def** %arrayidx25, align 8, !dbg !2680, !tbaa !1563
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2680
  %bf.load26 = load i32* %7, align 8, !dbg !2680
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !2680
  %cmp28 = icmp eq i32 %bf.clear27, 47, !dbg !2680
  br i1 %cmp28, label %if.then29, label %land.lhs.true46, !dbg !2680

if.then29:                                        ; preds = %land.lhs.true21
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1, !dbg !2681
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !2681
  %8 = load %struct.rtx_def** %rtx37, align 8, !dbg !2681, !tbaa !1563
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 3, !dbg !2681
  %rtvec40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtvec_def**, !dbg !2681
  %9 = load %struct.rtvec_def** %rtvec40, align 8, !dbg !2681, !tbaa !1563
  %num_elem41 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 0, !dbg !2681
  br label %return, !dbg !2681

land.lhs.true46:                                  ; preds = %land.lhs.true21
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %body, i64 0, i32 1, i64 0, !dbg !2682
  %rtvec49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtvec_def**, !dbg !2682
  %10 = load %struct.rtvec_def** %rtvec49, align 8, !dbg !2682, !tbaa !1563
  %arrayidx51 = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 1, i64 0, !dbg !2682
  %11 = load %struct.rtx_def** %arrayidx51, align 8, !dbg !2682, !tbaa !1563
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !2682
  %bf.load52 = load i32* %12, align 8, !dbg !2682
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !2682
  %cmp54 = icmp eq i32 %bf.clear53, 41, !dbg !2682
  br i1 %cmp54, label %if.then55, label %if.end67, !dbg !2682

if.then55:                                        ; preds = %land.lhs.true46
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 3, !dbg !2683
  %rtvec63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtvec_def**, !dbg !2683
  %13 = load %struct.rtvec_def** %rtvec63, align 8, !dbg !2683, !tbaa !1563
  %num_elem64 = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 0, !dbg !2683
  br label %return, !dbg !2683

if.end67:                                         ; preds = %entry, %land.lhs.true, %land.lhs.true46
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str2, i64 0, i64 0), i32 804, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.get_asm_operand_n_inputs, i64 0, i64 0)) #9, !dbg !2684
  unreachable, !dbg !2684

return:                                           ; preds = %if.then55, %if.then29, %if.then12, %if.then
  %retval.0.in = phi i32* [ %num_elem, %if.then ], [ %num_elem16, %if.then12 ], [ %num_elem41, %if.then29 ], [ %num_elem64, %if.then55 ]
  %retval.0 = load i32* %retval.0.in, align 4, !dbg !2678
  ret i32 %retval.0, !dbg !2685
}
