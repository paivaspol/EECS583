define internal fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** %pat) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %sw.bb37, %entry
  %pat.addr.0 = phi %struct.rtx_def** [ %pat, %entry ], [ %rtx40, %sw.bb37 ]
  %0 = load %struct.rtx_def** %pat.addr.0, align 8, !tbaa !2
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 63, label %sw.bb
    i32 125, label %sw.bb37
    i32 126, label %sw.bb37
    i32 123, label %sw.bb37
  ]

sw.bb:                                            ; preds = %for.cond
  %fld = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !2
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 61
  br i1 %cmp, label %land.lhs.true, label %sw.bb37

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !3
  %.off = add i32 %4, -8
  %5 = icmp ult i32 %.off, 8
  br i1 %5, label %if.then, label %sw.bb37

if.then:                                          ; preds = %land.lhs.true
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear21 = and i32 %bf.lshr, 255
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtuint24 = bitcast %union.rtunion_def* %arrayidx23 to i32*
  %6 = load i32* %rtuint24, align 4, !tbaa !3
  %bf.lshr26 = lshr i32 %bf.load, 16
  %bf.clear27 = and i32 %bf.lshr26, 255
  %call = tail call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear21, i32 %6, i32 %bf.clear27) #6
  %bf.load28 = load i32* %3, align 8
  %bf.lshr29 = lshr i32 %bf.load28, 16
  %bf.clear30 = and i32 %bf.lshr29, 255
  %idxprom52 = zext i32 %bf.clear30 to i64
  %7 = load i32* %rtuint, align 4, !tbaa !3
  %add = add i32 %call, -8
  %sub = add i32 %add, %7
  %idxprom34 = zext i32 %sub to i64
  %arrayidx36 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34, i64 %idxprom52
  %8 = load %struct.rtx_def** %arrayidx36, align 8, !tbaa !2
  store %struct.rtx_def* %8, %struct.rtx_def** %pat.addr.0, align 8, !tbaa !2
  br label %sw.default

sw.default:                                       ; preds = %for.cond, %if.then
  ret %struct.rtx_def** %pat.addr.0

sw.bb37:                                          ; preds = %sw.bb, %land.lhs.true, %for.cond, %for.cond, %for.cond
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  br label %for.cond
}
