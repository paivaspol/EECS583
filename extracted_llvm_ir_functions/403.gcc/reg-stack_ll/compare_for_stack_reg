define internal fastcc void @compare_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %pat_src) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !1212), !dbg !2429
  tail call void @llvm.dbg.value(metadata !{%struct.stack_def* %regstack}, i64 0, metadata !1213), !dbg !2430
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %pat_src}, i64 0, metadata !1214), !dbg !2431
  %fld = getelementptr inbounds %struct.rtx_def* %pat_src, i64 0, i32 1, !dbg !2432
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !2432
  %call = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** %rtx) #8, !dbg !2432
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %call}, i64 0, metadata !1215), !dbg !2432
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %pat_src, i64 0, i32 1, i64 1, !dbg !2433
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**, !dbg !2433
  %call4 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** %rtx3) #8, !dbg !2433
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %call4}, i64 0, metadata !1216), !dbg !2433
  %call5 = tail call fastcc %struct.rtx_def* @next_flags_user(%struct.rtx_def* %insn) #8, !dbg !2434
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call5}, i64 0, metadata !1219), !dbg !2434
  %0 = load %struct.rtx_def** %call, align 8, !dbg !2435, !tbaa !1563
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2435
  %bf.load = load i32* %1, align 8, !dbg !2435
  %bf.clear = and i32 %bf.load, 65535, !dbg !2435
  %cmp = icmp eq i32 %bf.clear, 61, !dbg !2435
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true30, !dbg !2435

land.lhs.true:                                    ; preds = %entry
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !2435
  %rtuint = bitcast %union.rtunion_def* %arrayidx7 to i32*, !dbg !2435
  %2 = load i32* %rtuint, align 4, !dbg !2435, !tbaa !1565
  %.off236 = add i32 %2, -8, !dbg !2435
  %3 = icmp ult i32 %.off236, 8, !dbg !2435
  br i1 %3, label %lor.lhs.false, label %land.lhs.true30, !dbg !2435

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.rtx_def** %call4, align 8, !dbg !2435, !tbaa !1563
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2435
  %bf.load14 = load i32* %5, align 8, !dbg !2435
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !2435
  %cmp16 = icmp eq i32 %bf.clear15, 61, !dbg !2435
  br i1 %cmp16, label %land.lhs.true17, label %if.end, !dbg !2435

land.lhs.true17:                                  ; preds = %lor.lhs.false
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0, !dbg !2435
  %rtuint20 = bitcast %union.rtunion_def* %arrayidx19 to i32*, !dbg !2435
  %6 = load i32* %rtuint20, align 4, !dbg !2435, !tbaa !1565
  %.off237 = add i32 %6, -8, !dbg !2435
  %7 = icmp ult i32 %.off237, 8, !dbg !2435
  br i1 %7, label %land.lhs.true27, label %if.end, !dbg !2435

land.lhs.true27:                                  ; preds = %land.lhs.true17
  %call28 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %4) #8, !dbg !2436
  %cmp29 = icmp eq i32 %call28, 8, !dbg !2436
  br i1 %cmp29, label %land.lhs.true30, label %if.end, !dbg !2436

land.lhs.true30:                                  ; preds = %land.lhs.true27, %land.lhs.true, %entry
  %call31 = tail call fastcc i32 @swap_rtx_condition(%struct.rtx_def* %insn) #8, !dbg !2437
  %tobool = icmp eq i32 %call31, 0, !dbg !2437
  br i1 %tobool, label %if.end, label %if.then, !dbg !2437

if.then:                                          ; preds = %land.lhs.true30
  %8 = load %struct.rtx_def** %rtx, align 8, !dbg !2438, !tbaa !1563
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %8}, i64 0, metadata !1220), !dbg !2438
  %9 = load %struct.rtx_def** %rtx3, align 8, !dbg !2439, !tbaa !1563
  %10 = getelementptr inbounds [1 x %union.rtunion_def]* %fld, i64 0, i64 0, i32 0, !dbg !2439
  %.c = ptrtoint %struct.rtx_def* %9 to i64, !dbg !2439
  store i64 %.c, i64* %10, align 8, !dbg !2439, !tbaa !1563
  %11 = getelementptr inbounds %union.rtunion_def* %arrayidx2, i64 0, i32 0, !dbg !2440
  %.c226 = ptrtoint %struct.rtx_def* %8 to i64, !dbg !2440
  store i64 %.c226, i64* %11, align 8, !dbg !2440, !tbaa !1563
  %call47 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** %rtx) #8, !dbg !2441
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %call47}, i64 0, metadata !1215), !dbg !2441
  %call51 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** %rtx3) #8, !dbg !2442
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %call51}, i64 0, metadata !1216), !dbg !2442
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4, !dbg !2443
  %rtint = bitcast %union.rtunion_def* %arrayidx53 to i32*, !dbg !2443
  store i32 -1, i32* %rtint, align 4, !dbg !2443, !tbaa !1565
  br label %if.end, !dbg !2444

if.end:                                           ; preds = %land.lhs.true30, %land.lhs.true27, %if.then, %land.lhs.true17, %lor.lhs.false
  %src2.0 = phi %struct.rtx_def** [ %call51, %if.then ], [ %call4, %land.lhs.true17 ], [ %call4, %lor.lhs.false ], [ %call4, %land.lhs.true27 ], [ %call4, %land.lhs.true30 ]
  %src1.0 = phi %struct.rtx_def** [ %call47, %if.then ], [ %call, %land.lhs.true17 ], [ %call, %lor.lhs.false ], [ %call, %land.lhs.true27 ], [ %call, %land.lhs.true30 ]
  %12 = load %struct.rtx_def** %src1.0, align 8, !dbg !2445, !tbaa !1563
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, !dbg !2445
  %rtuint56 = bitcast %union.rtunion_def* %arrayidx55 to i32*, !dbg !2445
  %13 = load i32* %rtuint56, align 4, !dbg !2445, !tbaa !1565
  %call57 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %13) #7, !dbg !2445
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call57}, i64 0, metadata !1217), !dbg !2445
  %14 = load %struct.rtx_def** %src2.0, align 8, !dbg !2446, !tbaa !1563
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !2446
  %bf.load58 = load i32* %15, align 8, !dbg !2446
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !2446
  %cmp60 = icmp eq i32 %bf.clear59, 61, !dbg !2446
  br i1 %cmp60, label %land.lhs.true61, label %if.end76, !dbg !2446

land.lhs.true61:                                  ; preds = %if.end
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0, !dbg !2446
  %rtuint64 = bitcast %union.rtunion_def* %arrayidx63 to i32*, !dbg !2446
  %16 = load i32* %rtuint64, align 4, !dbg !2446, !tbaa !1565
  %.off235 = add i32 %16, -8, !dbg !2446
  %17 = icmp ult i32 %.off235, 8, !dbg !2446
  br i1 %17, label %if.then71, label %if.end76, !dbg !2446

if.then71:                                        ; preds = %land.lhs.true61
  %call75 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %16) #7, !dbg !2447
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call75}, i64 0, metadata !1218), !dbg !2447
  br label %if.end76, !dbg !2447

if.end76:                                         ; preds = %if.end, %land.lhs.true61, %if.then71
  %src2_note.0 = phi %struct.rtx_def* [ %call75, %if.then71 ], [ null, %land.lhs.true61 ], [ null, %if.end ]
  %18 = load %struct.rtx_def** %src1.0, align 8, !dbg !2448, !tbaa !1563
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %18) #8, !dbg !2448
  tail call fastcc void @replace_reg(%struct.rtx_def** %src1.0, i32 8) #8, !dbg !2449
  %19 = load %struct.rtx_def** %src2.0, align 8, !dbg !2450, !tbaa !1563
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !2450
  %bf.load77 = load i32* %20, align 8, !dbg !2450
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !2450
  %cmp79 = icmp eq i32 %bf.clear78, 61, !dbg !2450
  br i1 %cmp79, label %land.lhs.true80, label %if.end92, !dbg !2450

land.lhs.true80:                                  ; preds = %if.end76
  %arrayidx82 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 0, !dbg !2450
  %rtuint83 = bitcast %union.rtunion_def* %arrayidx82 to i32*, !dbg !2450
  %21 = load i32* %rtuint83, align 4, !dbg !2450, !tbaa !1565
  %.off234 = add i32 %21, -8, !dbg !2450
  %22 = icmp ult i32 %.off234, 8, !dbg !2450
  br i1 %22, label %if.then90, label %if.end92, !dbg !2450

if.then90:                                        ; preds = %land.lhs.true80
  %call91 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %19) #8, !dbg !2451
  tail call fastcc void @replace_reg(%struct.rtx_def** %src2.0, i32 %call91) #8, !dbg !2451
  br label %if.end92, !dbg !2451

if.end92:                                         ; preds = %if.then90, %land.lhs.true80, %if.end76
  %tobool93 = icmp ne %struct.rtx_def* %call57, null, !dbg !2452
  br i1 %tobool93, label %if.then94, label %if.end104, !dbg !2452

if.then94:                                        ; preds = %if.end92
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %call57, i64 0, i32 1, i64 0, !dbg !2453
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !2453
  %23 = load %struct.rtx_def** %rtx97, align 8, !dbg !2453, !tbaa !1563
  %arrayidx99 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0, !dbg !2453
  %rtuint100 = bitcast %union.rtunion_def* %arrayidx99 to i32*, !dbg !2453
  %24 = load i32* %rtuint100, align 4, !dbg !2453, !tbaa !1565
  tail call fastcc void @pop_stack(%struct.stack_def* %regstack, i32 %24) #8, !dbg !2453
  tail call fastcc void @replace_reg(%struct.rtx_def** %rtx97, i32 8) #8, !dbg !2455
  br label %if.end104, !dbg !2456

if.end104:                                        ; preds = %if.then94, %if.end92
  %tobool105 = icmp eq %struct.rtx_def* %src2_note.0, null, !dbg !2457
  br i1 %tobool105, label %if.end172, label %land.lhs.true106, !dbg !2457

land.lhs.true106:                                 ; preds = %if.end104
  %25 = load %struct.rtx_def** %src1.0, align 8, !dbg !2457, !tbaa !1563
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !2457
  %bf.load107 = load i32* %26, align 8, !dbg !2457
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !2457
  %cmp109 = icmp eq i32 %bf.clear108, 61, !dbg !2457
  br i1 %cmp109, label %land.lhs.true110, label %if.then142, !dbg !2457

land.lhs.true110:                                 ; preds = %land.lhs.true106
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0, !dbg !2457
  %rtuint113 = bitcast %union.rtunion_def* %arrayidx112 to i32*, !dbg !2457
  %27 = load i32* %rtuint113, align 4, !dbg !2457, !tbaa !1565
  %.off = add i32 %27, -8, !dbg !2457
  %28 = icmp ult i32 %.off, 8, !dbg !2457
  br i1 %28, label %land.lhs.true120, label %if.then142, !dbg !2457

land.lhs.true120:                                 ; preds = %land.lhs.true110
  %29 = load %struct.rtx_def** %src2.0, align 8, !dbg !2457, !tbaa !1563
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !2457
  %bf.load121 = load i32* %30, align 8, !dbg !2457
  %bf.clear122 = and i32 %bf.load121, 65535, !dbg !2457
  %cmp123 = icmp eq i32 %bf.clear122, 61, !dbg !2457
  br i1 %cmp123, label %land.lhs.true124, label %if.then142, !dbg !2457

land.lhs.true124:                                 ; preds = %land.lhs.true120
  %arrayidx126 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0, !dbg !2457
  %rtuint127 = bitcast %union.rtunion_def* %arrayidx126 to i32*, !dbg !2457
  %31 = load i32* %rtuint127, align 4, !dbg !2457, !tbaa !1565
  %.off233 = add i32 %31, -8, !dbg !2457
  %32 = icmp ult i32 %.off233, 8, !dbg !2457
  %cmp141 = icmp eq i32 %27, %31, !dbg !2457
  %or.cond232 = and i1 %32, %cmp141, !dbg !2457
  br i1 %or.cond232, label %if.end172, label %if.then142, !dbg !2457

if.then142:                                       ; preds = %land.lhs.true124, %land.lhs.true120, %land.lhs.true110, %land.lhs.true106
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %src2_note.0, i64 0, i32 1, i64 0, !dbg !2458
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**, !dbg !2458
  %33 = load %struct.rtx_def** %rtx145, align 8, !dbg !2458, !tbaa !1563
  %call146 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %33) #8, !dbg !2458
  %cmp147.not = icmp ne i32 %call146, 8, !dbg !2458
  %tobool93.not = xor i1 %tobool93, true, !dbg !2458
  %brmerge = or i1 %cmp147.not, %tobool93.not, !dbg !2458
  %34 = load %struct.rtx_def** %rtx145, align 8, !dbg !2460, !tbaa !1563
  %arrayidx165 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 0, !dbg !2460
  %rtuint166 = bitcast %union.rtunion_def* %arrayidx165 to i32*, !dbg !2460
  %35 = load i32* %rtuint166, align 4, !dbg !2460, !tbaa !1565
  br i1 %brmerge, label %if.else160, label %if.then150, !dbg !2458

if.then150:                                       ; preds = %if.then142
  tail call fastcc void @pop_stack(%struct.stack_def* %regstack, i32 %35) #8, !dbg !2462
  tail call fastcc void @replace_reg(%struct.rtx_def** %rtx145, i32 9) #8, !dbg !2464
  br label %if.end172, !dbg !2465

if.else160:                                       ; preds = %if.then142
  tail call fastcc void @remove_regno_note(%struct.rtx_def* %insn, i32 %35) #8, !dbg !2460
  %36 = load %struct.rtx_def** %rtx145, align 8, !dbg !2466, !tbaa !1563
  %call170 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %36, i32 0) #8, !dbg !2466
  br label %if.end172

if.end172:                                        ; preds = %land.lhs.true124, %if.end104, %if.then150, %if.else160
  ret void, !dbg !2467
}
