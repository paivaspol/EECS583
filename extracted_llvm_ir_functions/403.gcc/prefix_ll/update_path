define i8* @update_path(i8* %path, i8* %key) #0 {
entry:
  %0 = load i8** @std_prefix, align 8, !tbaa !0
  %call = tail call i64 @strlen(i8* %0) #5
  %call1 = tail call i32 @strncmp(i8* %path, i8* %0, i64 %call) #5
  %tobool = icmp ne i32 %call1, 0
  %cmp = icmp eq i8* %key, null
  %or.cond = or i1 %tobool, %cmp
  br i1 %or.cond, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i8* %key, align 1, !tbaa !1
  %cmp2 = icmp eq i8 %1, 36
  br i1 %cmp2, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %call5 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0), i8* %key, i8* null) #6
  %.pre = load i8** @std_prefix, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then4
  %2 = phi i8* [ %.pre, %if.then4 ], [ %0, %if.then ]
  %key.addr.0 = phi i8* [ %call5, %if.then4 ], [ %key, %if.then ]
  %free_key.0 = phi i1 [ true, %if.then4 ], [ false, %if.then ]
  %call6 = tail call i64 @strlen(i8* %2) #5
  %arrayidx7 = getelementptr inbounds i8* %path, i64 %call6
  %call8 = tail call noalias i8* (i8*, ...)* @concat(i8* %key.addr.0, i8* %arrayidx7, i8* null) #6
  br i1 %free_key.0, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end
  tail call void @free(i8* %key.addr.0) #6
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end
  %call12 = tail call fastcc i8* @translate_name(i8* %call8) #7
  br label %if.end14

if.else:                                          ; preds = %entry
  %call13 = tail call noalias i8* @xstrdup(i8* %path) #6
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end11
  %result.0 = phi i8* [ %call13, %if.else ], [ %call12, %if.end11 ]
  ret i8* %result.0
}
