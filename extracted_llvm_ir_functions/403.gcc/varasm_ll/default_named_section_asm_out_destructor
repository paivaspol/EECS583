define void @default_named_section_asm_out_destructor(%struct.rtx_def* %symbol, i32 %priority) #0 {
entry:
  %buf = alloca [16 x i8], align 16
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %symbol}, i64 0, metadata !1294), !dbg !2688
  call void @llvm.dbg.value(metadata !{i32 %priority}, i64 0, metadata !1295), !dbg !2689
  call void @llvm.dbg.value(metadata !2690, i64 0, metadata !1296), !dbg !2691
  call void @llvm.dbg.declare(metadata !{[16 x i8]* %buf}, metadata !1297), !dbg !2692
  %cmp = icmp eq i32 %priority, 65535, !dbg !2693
  br i1 %cmp, label %if.end, label %if.then, !dbg !2693

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [16 x i8]* %buf, i64 0, i64 0, !dbg !2694
  %sub = sub nsw i32 65535, %priority, !dbg !2694
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8]* @.str63, i64 0, i64 0), i32 %sub) #10, !dbg !2694
  call void @llvm.dbg.value(metadata !{i8* %arraydecay}, i64 0, metadata !1296), !dbg !2696
  br label %if.end, !dbg !2697

if.end:                                           ; preds = %entry, %if.then
  %section.0 = phi i8* [ %arraydecay, %if.then ], [ getelementptr inbounds ([7 x i8]* @.str62, i64 0, i64 0), %entry ]
  call void @named_section_flags(i8* %section.0, i32 512) #11, !dbg !2698
  %0 = load i32* @target_flags, align 4, !dbg !2699, !tbaa !2382
  %and = lshr i32 %0, 20, !dbg !2699
  %1 = and i32 %and, 32, !dbg !2699
  %2 = add i32 %1, 32, !dbg !2699
  call void @assemble_align(i32 %2) #11, !dbg !2699
  %3 = load i32* @target_flags, align 4, !dbg !2700, !tbaa !2382
  %and2 = lshr i32 %3, 20, !dbg !2700
  %4 = and i32 %and2, 32, !dbg !2700
  %5 = add i32 %4, 32, !dbg !2700
  %div = sdiv i32 %5, 8, !dbg !2700
  %call8 = call zeroext i1 @assemble_integer(%struct.rtx_def* %symbol, i32 %div, i32 %5, i32 1) #11, !dbg !2700
  ret void, !dbg !2701
}
