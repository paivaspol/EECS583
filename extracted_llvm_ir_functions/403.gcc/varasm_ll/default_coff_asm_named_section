define void @default_coff_asm_named_section(i8* %name, i32 %flags) #0 {
entry:
  %flagchars = alloca [8 x i8], align 1
  %arraydecay = getelementptr inbounds [8 x i8]* %flagchars, i64 0, i64 0
  %and = and i32 %flags, 512
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds [8 x i8]* %flagchars, i64 0, i64 1
  store i8 119, i8* %arraydecay, align 1, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %f.0 = phi i8* [ %incdec.ptr, %if.then ], [ %arraydecay, %entry ]
  %and1 = and i32 %flags, 256
  %tobool2 = icmp eq i32 %and1, 0
  br i1 %tobool2, label %if.end5, label %if.then3

if.then3:                                         ; preds = %if.end
  %incdec.ptr4 = getelementptr inbounds i8* %f.0, i64 1
  store i8 120, i8* %f.0, align 1, !tbaa !1
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then3
  %f.1 = phi i8* [ %incdec.ptr4, %if.then3 ], [ %f.0, %if.end ]
  store i8 0, i8* %f.1, align 1, !tbaa !1
  %0 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([19 x i8]* @.str120, i64 0, i64 0), i8* %name, i8* %arraydecay) #9
  ret void
}
