define %struct.rtx_def* @assemble_static_space(i32 %size) #0 {
entry:
  %name = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !1463), !dbg !3125
  call void @llvm.dbg.declare(metadata !{[12 x i8]* %name}, metadata !1464), !dbg !3126
  %arraydecay = getelementptr inbounds [12 x i8]* %name, i64 0, i64 0, !dbg !3127
  %0 = load i32* @const_labelno, align 4, !dbg !3127, !tbaa !2382
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str74, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str96, i64 0, i64 0), i32 %0) #10, !dbg !3127
  %1 = load i32* @const_labelno, align 4, !dbg !3129, !tbaa !2382
  %inc = add nsw i32 %1, 1, !dbg !3129
  store i32 %inc, i32* @const_labelno, align 4, !dbg !3129, !tbaa !2382
  %call2 = call i8* @ggc_alloc_string(i8* %arraydecay, i32 -1) #10, !dbg !3130
  call void @llvm.dbg.value(metadata !{i8* %call2}, i64 0, metadata !1468), !dbg !3130
  %2 = load i32* @target_flags, align 4, !dbg !3131, !tbaa !2382
  %and = lshr i32 %2, 25, !dbg !3131
  %3 = and i32 %and, 1, !dbg !3131
  %4 = or i32 %3, 4, !dbg !3131
  %call3 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %4, i8* %call2) #10, !dbg !3131
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call3}, i64 0, metadata !1469), !dbg !3131
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3132, !tbaa !2357
  %6 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str97, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %5), !dbg !3132
  %7 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3132, !tbaa !2357
  call void @assemble_name(%struct._IO_FILE* %7, i8* %arraydecay) #11, !dbg !3132
  %8 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3132, !tbaa !2357
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %8) #7, !dbg !3132
  %9 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3134, !tbaa !2357
  %10 = call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str98, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %9), !dbg !3134
  %11 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3134, !tbaa !2357
  call void @assemble_name(%struct._IO_FILE* %11, i8* %arraydecay) #11, !dbg !3134
  %12 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3134, !tbaa !2357
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([8 x i8]* @.str99, i64 0, i64 0), i32 %size, i32 16) #10, !dbg !3134
  ret %struct.rtx_def* %call3, !dbg !3136
}
