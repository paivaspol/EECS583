define void @assemble_vtable_inherit(%struct.rtx_def* %child, %struct.rtx_def* %parent) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %child}, i64 0, metadata !1836), !dbg !4093
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %parent}, i64 0, metadata !1837), !dbg !4093
  %0 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !4094, !tbaa !2357
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([18 x i8]* @.str126, i64 0, i64 0), i64 17, i64 1, %struct._IO_FILE* %0), !dbg !4094
  %2 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !4095, !tbaa !2357
  tail call void @output_addr_const(%struct._IO_FILE* %2, %struct.rtx_def* %child) #10, !dbg !4095
  %3 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !4096, !tbaa !2357
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str125, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %3), !dbg !4096
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !4097, !tbaa !2357
  tail call void @output_addr_const(%struct._IO_FILE* %5, %struct.rtx_def* %parent) #10, !dbg !4097
  %6 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !4098, !tbaa !2357
  %call2 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %6) #10, !dbg !4098
  ret void, !dbg !4099
}
