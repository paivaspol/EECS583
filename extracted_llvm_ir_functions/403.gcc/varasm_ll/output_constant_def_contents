define internal fastcc void @output_constant_def_contents(%union.tree_node* %exp, i32 %reloc, i32 %labelno) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !3
  %align2 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 7
  %1 = bitcast %union.tree_node** %align2 to i32*
  %2 = load i32* %1, align 4, !tbaa !4
  %call = tail call i32 @ix86_constant_alignment(%union.tree_node* %exp, i32 %2) #9
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %3 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else131 [
    i32 30, label %land.lhs.true
    i32 34, label %land.lhs.true
    i32 29, label %if.then15
    i32 46, label %if.then110
  ]

land.lhs.true:                                    ; preds = %entry, %entry
  %section_name = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 15
  %4 = load %union.tree_node** %section_name, align 8, !tbaa !3
  %cmp9 = icmp eq %union.tree_node* %4, null
  br i1 %cmp9, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @named_section(%union.tree_node* %exp, i8* null, i32 %reloc) #10
  br label %if.end135

if.else:                                          ; preds = %land.lhs.true
  switch i32 %bf.clear, label %if.else131 [
    i32 29, label %if.then15
    i32 34, label %if.then25
    i32 46, label %if.then110
  ]

if.then15:                                        ; preds = %entry, %if.else
  %5 = load i32* @flag_writable_strings, align 4, !tbaa !4
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %if.then16, label %if.else17

if.then16:                                        ; preds = %if.then15
  %conv = sext i32 %call to i64
  tail call void @mergeable_string_section(%union.tree_node* %exp, i64 %conv, i32 0) #10
  br label %if.end135

if.else17:                                        ; preds = %if.then15
  tail call void @data_section() #10
  br label %if.end135

if.then25:                                        ; preds = %if.else
  %6 = and i32 %bf.load, 4352
  %7 = icmp eq i32 %6, 4096
  br i1 %7, label %lor.lhs.false36, label %if.then52

lor.lhs.false36:                                  ; preds = %if.then25
  %initial = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 12
  %8 = load %union.tree_node** %initial, align 8, !tbaa !3
  %tobool38 = icmp eq %union.tree_node* %8, null
  br i1 %tobool38, label %if.then52, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %lor.lhs.false36
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  %cmp42 = icmp eq %union.tree_node* %8, %9
  br i1 %cmp42, label %if.else65, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %lor.lhs.false39
  %constant_flag = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast [4 x i8]* %constant_flag to i32*
  %bf.load48 = load i32* %10, align 8
  %bf.clear50 = and i32 %bf.load48, 512
  %tobool51 = icmp eq i32 %bf.clear50, 0
  br i1 %tobool51, label %if.then52, label %if.else65

if.then52:                                        ; preds = %if.then25, %land.lhs.true44, %lor.lhs.false36
  %11 = load i32* @flag_pic, align 4, !tbaa !4
  %tobool53 = icmp eq i32 %11, 0
  br i1 %tobool53, label %if.else62, label %land.lhs.true54

land.lhs.true54:                                  ; preds = %if.then52
  %and = and i32 %reloc, 2
  %tobool55 = icmp eq i32 %and, 0
  br i1 %tobool55, label %if.else57, label %if.then56

if.then56:                                        ; preds = %land.lhs.true54
  %12 = load i32 (%union.tree_node*, i8*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 12), align 8, !tbaa !3
  %call.i = tail call i32 %12(%union.tree_node* null, i8* getelementptr inbounds ([10 x i8]* @.str7, i64 0, i64 0), i32 %reloc) #9
  tail call void @named_section_flags(i8* getelementptr inbounds ([10 x i8]* @.str7, i64 0, i64 0), i32 %call.i) #9
  br label %if.end135

if.else57:                                        ; preds = %land.lhs.true54
  %tobool60 = icmp eq i32 %reloc, 0
  %or.cond214 = or i1 %tobool53, %tobool60
  br i1 %or.cond214, label %if.else62, label %if.then61

if.then61:                                        ; preds = %if.else57
  %13 = load i32 (%union.tree_node*, i8*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 12), align 8, !tbaa !3
  %call.i218 = tail call i32 %13(%union.tree_node* null, i8* getelementptr inbounds ([16 x i8]* @.str8, i64 0, i64 0), i32 %reloc) #9
  tail call void @named_section_flags(i8* getelementptr inbounds ([16 x i8]* @.str8, i64 0, i64 0), i32 %call.i218) #9
  br label %if.end135

if.else62:                                        ; preds = %if.then52, %if.else57
  tail call void @data_section() #10
  br label %if.end135

if.else65:                                        ; preds = %land.lhs.true44, %lor.lhs.false39
  %14 = load i32* @flag_pic, align 4, !tbaa !4
  %tobool66 = icmp eq i32 %14, 0
  br i1 %tobool66, label %if.else76, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %if.else65
  %and68 = and i32 %reloc, 2
  %tobool69 = icmp eq i32 %and68, 0
  br i1 %tobool69, label %if.else71, label %if.then70

if.then70:                                        ; preds = %land.lhs.true67
  %15 = load i32 (%union.tree_node*, i8*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 12), align 8, !tbaa !3
  %call.i219 = tail call i32 %15(%union.tree_node* null, i8* getelementptr inbounds ([13 x i8]* @.str9, i64 0, i64 0), i32 %reloc) #9
  tail call void @named_section_flags(i8* getelementptr inbounds ([13 x i8]* @.str9, i64 0, i64 0), i32 %call.i219) #9
  br label %if.end135

if.else71:                                        ; preds = %land.lhs.true67
  %tobool74 = icmp eq i32 %reloc, 0
  %or.cond215 = or i1 %tobool66, %tobool74
  br i1 %or.cond215, label %if.else76, label %if.then75

if.then75:                                        ; preds = %if.else71
  %16 = load i32 (%union.tree_node*, i8*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 12), align 8, !tbaa !3
  %call.i220 = tail call i32 %16(%union.tree_node* null, i8* getelementptr inbounds ([19 x i8]* @.str10, i64 0, i64 0), i32 %reloc) #9
  tail call void @named_section_flags(i8* getelementptr inbounds ([19 x i8]* @.str10, i64 0, i64 0), i32 %call.i220) #9
  br label %if.end135

if.else76:                                        ; preds = %if.else65, %if.else71
  %17 = load i32* @flag_merge_constants, align 4, !tbaa !4
  %cmp77 = icmp slt i32 %17, 2
  br i1 %cmp77, label %if.then79, label %if.else80

if.then79:                                        ; preds = %if.else76
  tail call void @const_section() #10
  br label %if.end135

if.else80:                                        ; preds = %if.else76
  %code84 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %18 = bitcast [4 x i8]* %code84 to i32*
  %bf.load85 = load i32* %18, align 8
  %bf.clear86 = and i32 %bf.load85, 255
  %cmp87 = icmp eq i32 %bf.clear86, 29
  br i1 %cmp87, label %if.then89, label %if.else93

if.then89:                                        ; preds = %if.else80
  %conv92 = sext i32 %call to i64
  tail call void @mergeable_string_section(%union.tree_node* %8, i64 %conv92, i32 0) #10
  br label %if.end135

if.else93:                                        ; preds = %if.else80
  %mode = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 5
  %19 = bitcast [8 x i8]* %mode to i64*
  %bf.load95 = load i64* %19, align 8
  %bf.load95.tr = trunc i64 %bf.load95 to i32
  %bf.cast = and i32 %bf.load95.tr, 255
  %conv97 = sext i32 %call to i64
  tail call void @mergeable_constant_section(i32 %bf.cast, i64 %conv97, i32 0) #10
  br label %if.end135

if.then110:                                       ; preds = %entry, %if.else
  %20 = load i32* @flag_pic, align 4, !tbaa !4
  %tobool111 = icmp eq i32 %20, 0
  %tobool113 = icmp eq i32 %reloc, 0
  %or.cond216 = or i1 %tobool111, %tobool113
  br i1 %or.cond216, label %lor.lhs.false114, label %if.then128

lor.lhs.false114:                                 ; preds = %if.then110
  %21 = and i32 %bf.load, 768
  %22 = icmp eq i32 %21, 512
  br i1 %22, label %if.else129, label %if.then128

if.then128:                                       ; preds = %lor.lhs.false114, %if.then110
  tail call void @data_section() #10
  br label %if.end135

if.else129:                                       ; preds = %lor.lhs.false114
  tail call void @const_section() #10
  br label %if.end135

if.else131:                                       ; preds = %entry, %if.else
  tail call void @const_section() #10
  br label %if.end135

if.end135:                                        ; preds = %if.else17, %if.then16, %if.else131, %if.else129, %if.then128, %if.then61, %if.else62, %if.then56, %if.then75, %if.then89, %if.else93, %if.then79, %if.then70, %if.then
  %cmp136 = icmp sgt i32 %call, 8
  br i1 %cmp136, label %if.then138, label %do.body

if.then138:                                       ; preds = %if.end135
  %div = sdiv i32 %call, 8
  %conv139 = sext i32 %div to i64
  %call140 = tail call i32 @floor_log2_wide(i64 %conv139) #9
  %cmp141 = icmp eq i32 %call140, 0
  br i1 %cmp141, label %do.body, label %if.then143

if.then143:                                       ; preds = %if.then138
  %23 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %call146 = tail call i32 @floor_log2_wide(i64 %conv139) #9
  %shl = shl i32 1, %call146
  %call147 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([12 x i8]* @.str58, i64 0, i64 0), i32 %shl) #9
  br label %do.body

do.body:                                          ; preds = %if.then138, %if.end135, %if.then143
  %24 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %call150 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([8 x i8]* @.str76, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str100, i64 0, i64 0), i32 %labelno) #9
  %bf.load153 = load i32* %3, align 8
  %bf.clear154 = and i32 %bf.load153, 255
  %cmp155 = icmp eq i32 %bf.clear154, 29
  br i1 %cmp155, label %cond.true, label %cond.false170

cond.true:                                        ; preds = %do.body
  %25 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %26 = load i32* %25, align 4, !tbaa !4
  %conv157 = sext i32 %26 to i64
  %27 = load %union.tree_node** %type, align 8, !tbaa !3
  %call160 = tail call i64 @int_size_in_bytes(%union.tree_node* %27) #9
  %cmp161 = icmp sgt i64 %conv157, %call160
  br i1 %cmp161, label %cond.true163, label %cond.false

cond.true163:                                     ; preds = %cond.true
  %28 = load i32* %25, align 4, !tbaa !4
  %conv166 = sext i32 %28 to i64
  br label %cond.end174

cond.false:                                       ; preds = %cond.true
  %29 = load %union.tree_node** %type, align 8, !tbaa !3
  %call169 = tail call i64 @int_size_in_bytes(%union.tree_node* %29) #9
  br label %cond.end174

cond.false170:                                    ; preds = %do.body
  %30 = load %union.tree_node** %type, align 8, !tbaa !3
  %call173 = tail call i64 @int_size_in_bytes(%union.tree_node* %30) #9
  br label %cond.end174

cond.end174:                                      ; preds = %cond.true163, %cond.false, %cond.false170
  %cond175 = phi i64 [ %call173, %cond.false170 ], [ %conv166, %cond.true163 ], [ %call169, %cond.false ]
  tail call void @output_constant(%union.tree_node* %exp, i64 %cond175, i32 %call) #10
  ret void
}
