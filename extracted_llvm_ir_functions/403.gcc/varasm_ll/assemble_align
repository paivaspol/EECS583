define void @assemble_align(i32 %align) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %align}, i64 0, metadata !1339), !dbg !2702
  %cmp = icmp sgt i32 %align, 8, !dbg !2703
  br i1 %cmp, label %if.then, label %if.end8, !dbg !2703

if.then:                                          ; preds = %entry
  %div = sdiv i32 %align, 8, !dbg !2704
  %conv = sext i32 %div to i64, !dbg !2704
  %call = tail call i32 @floor_log2_wide(i64 %conv) #10, !dbg !2704
  %cmp1 = icmp eq i32 %call, 0, !dbg !2704
  br i1 %cmp1, label %if.end8, label %if.then3, !dbg !2704

if.then3:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2704, !tbaa !2357
  %call6 = tail call i32 @floor_log2_wide(i64 %conv) #10, !dbg !2704
  %shl = shl i32 1, %call6, !dbg !2704
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([12 x i8]* @.str58, i64 0, i64 0), i32 %shl) #10, !dbg !2704
  br label %if.end8, !dbg !2704

if.end8:                                          ; preds = %if.then, %if.then3, %entry
  ret void, !dbg !2706
}
