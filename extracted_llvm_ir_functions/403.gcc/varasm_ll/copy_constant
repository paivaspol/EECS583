define internal fastcc %union.tree_node* @copy_constant(%union.tree_node* %exp) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 121, label %sw.bb
    i32 25, label %sw.bb18
    i32 26, label %sw.bb18
    i32 29, label %sw.bb18
    i32 27, label %sw.bb20
    i32 59, label %sw.bb27
    i32 60, label %sw.bb27
    i32 115, label %sw.bb43
    i32 114, label %sw.bb43
    i32 116, label %sw.bb43
    i32 46, label %sw.bb55
  ]

sw.bb:                                            ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %code3 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code3 to i32*
  %bf.load4 = load i32* %2, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %idxprom117 = zext i32 %bf.clear5 to i64
  %arrayidx6 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom117
  %3 = load i8* %arrayidx6, align 1, !tbaa !1
  %cmp = icmp eq i8 %3, 99
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !3
  %call = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %1) #10
  %call16 = tail call %union.tree_node* @build1(i32 121, %union.tree_node* %4, %union.tree_node* %call) #9
  ret %union.tree_node* %call16

if.else:                                          ; preds = %sw.bb
  %call17 = tail call %union.tree_node* @copy_node(%union.tree_node* %exp) #9
  br label %return

sw.bb18:                                          ; preds = %entry, %entry, %entry
  %call19 = tail call %union.tree_node* @copy_node(%union.tree_node* %exp) #9
  br label %return

sw.bb20:                                          ; preds = %entry
  %type22 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type22, align 8, !tbaa !3
  %real = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %6 = bitcast i32* %real to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !3
  %call23 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %7) #10
  %8 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 4
  %9 = load %union.tree_node** %8, align 8, !tbaa !3
  %call25 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %9) #10
  %call26 = tail call %union.tree_node* @build_complex(%union.tree_node* %5, %union.tree_node* %call23, %union.tree_node* %call25) #9
  ret %union.tree_node* %call26

sw.bb27:                                          ; preds = %entry, %entry
  %type33 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type33, align 8, !tbaa !3
  %operands35 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx36 = bitcast i32* %operands35 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx36, align 8, !tbaa !3
  %call37 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %11) #10
  %arrayidx40 = getelementptr inbounds i32* %operands35, i64 2
  %12 = bitcast i32* %arrayidx40 to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !3
  %call41 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %13) #10
  %call42 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear, %union.tree_node* %10, %union.tree_node* %call37, %union.tree_node* %call41) #9
  ret %union.tree_node* %call42

sw.bb43:                                          ; preds = %entry, %entry, %entry
  %type49 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type49, align 8, !tbaa !3
  %operands51 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx52 = bitcast i32* %operands51 to %union.tree_node**
  %15 = load %union.tree_node** %arrayidx52, align 8, !tbaa !3
  %call53 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %15) #10
  %call54 = tail call %union.tree_node* @build1(i32 %bf.clear, %union.tree_node* %14, %union.tree_node* %call53) #9
  ret %union.tree_node* %call54

sw.bb55:                                          ; preds = %entry
  %call56 = tail call %union.tree_node* @copy_node(%union.tree_node* %exp) #9
  %operands58 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx59 = getelementptr inbounds i32* %operands58, i64 2
  %16 = bitcast i32* %arrayidx59 to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !3
  %call60 = tail call %union.tree_node* @copy_list(%union.tree_node* %17) #9
  %operands62 = getelementptr inbounds %union.tree_node* %call56, i64 0, i32 0, i32 2
  %arrayidx63 = getelementptr inbounds i32* %operands62, i64 2
  %18 = bitcast i32* %arrayidx63 to %union.tree_node**
  store %union.tree_node* %call60, %union.tree_node** %18, align 8, !tbaa !3
  %tobool120 = icmp eq %union.tree_node* %call60, null
  br i1 %tobool120, label %for.end, label %for.body

for.body:                                         ; preds = %sw.bb55, %for.body
  %tail.0121 = phi %union.tree_node* [ %21, %for.body ], [ %call60, %sw.bb55 ]
  %value = getelementptr inbounds %union.tree_node* %tail.0121, i64 0, i32 0, i32 2
  %19 = bitcast i32* %value to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !3
  %call65 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %20) #10
  store %union.tree_node* %call65, %union.tree_node** %19, align 8, !tbaa !3
  %chain = getelementptr inbounds %union.tree_node* %tail.0121, i64 0, i32 0, i32 0, i32 0
  %21 = load %union.tree_node** %chain, align 8, !tbaa !3
  %tobool = icmp eq %union.tree_node* %21, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %sw.bb55
  %type70 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type70, align 8, !tbaa !3
  %code72 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast [4 x i8]* %code72 to i32*
  %bf.load73 = load i32* %23, align 8
  %bf.clear74 = and i32 %bf.load73, 255
  %cmp75.not = icmp ne i32 %bf.clear74, 19
  %brmerge = or i1 %cmp75.not, %tobool120
  br i1 %brmerge, label %return, label %for.body80

for.body80:                                       ; preds = %for.end, %for.body80
  %tail.1119 = phi %union.tree_node* [ %26, %for.body80 ], [ %call60, %for.end ]
  %purpose = getelementptr inbounds %union.tree_node* %tail.1119, i64 0, i32 0, i32 1
  %24 = load i8** %purpose, align 8
  %25 = bitcast i8* %24 to %union.tree_node*
  %call82 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %25) #10
  %call82.c = bitcast %union.tree_node* %call82 to i8*
  store i8* %call82.c, i8** %purpose, align 8, !tbaa !3
  %chain87 = getelementptr inbounds %union.tree_node* %tail.1119, i64 0, i32 0, i32 0, i32 0
  %26 = load %union.tree_node** %chain87, align 8, !tbaa !3
  %tobool79 = icmp eq %union.tree_node* %26, null
  br i1 %tobool79, label %return, label %for.body80

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str4, i64 0, i64 0), i32 3193, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.copy_constant, i64 0, i64 0)) #12
  unreachable

return:                                           ; preds = %for.end, %for.body80, %sw.bb18, %if.else
  %retval.0 = phi %union.tree_node* [ %call19, %sw.bb18 ], [ %call17, %if.else ], [ %call56, %for.end ], [ %call56, %for.body80 ]
  ret %union.tree_node* %retval.0
}
