define void @assemble_external_libcall(%struct.rtx_def* nocapture %fun) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %fun to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 536870912
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %bf.set = or i32 %bf.load, 536870912
  store i32 %bf.set, i32* %0, align 8
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str93, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %1)
  %3 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.rtx_def* %fun, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx to i8**
  %4 = load i8** %rtstr, align 8, !tbaa !3
  tail call void @assemble_name(%struct._IO_FILE* %3, i8* %4) #10
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %5) #6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}
