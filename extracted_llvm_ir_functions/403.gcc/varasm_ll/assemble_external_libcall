define void @assemble_external_libcall(%struct.rtx_def* nocapture %fun) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %fun}, i64 0, metadata !1392), !dbg !3112
  %0 = bitcast %struct.rtx_def* %fun to i32*, !dbg !3113
  %bf.load = load i32* %0, align 8, !dbg !3113
  %bf.clear = and i32 %bf.load, 536870912, !dbg !3113
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !3113
  br i1 %tobool, label %if.then, label %if.end, !dbg !3113

if.then:                                          ; preds = %entry
  %bf.set = or i32 %bf.load, 536870912, !dbg !3114
  store i32 %bf.set, i32* %0, align 8, !dbg !3114
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3116, !tbaa !2357
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str93, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %1), !dbg !3116
  %3 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3116, !tbaa !2357
  %arrayidx = getelementptr inbounds %struct.rtx_def* %fun, i64 0, i32 1, i64 0, !dbg !3116
  %rtstr = bitcast %union.rtunion_def* %arrayidx to i8**, !dbg !3116
  %4 = load i8** %rtstr, align 8, !dbg !3116, !tbaa !2357
  tail call void @assemble_name(%struct._IO_FILE* %3, i8* %4) #11, !dbg !3116
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !3116, !tbaa !2357
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %5) #7, !dbg !3116
  br label %if.end, !dbg !3117

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3118
}
