define i32 @default_section_type_flags(%union.tree_node* %decl, i8* nocapture %name, i32 %reloc) #2 {
entry:
  %tobool = icmp ne %union.tree_node* %decl, null
  br i1 %tobool, label %land.lhs.true, label %if.else38

land.lhs.true:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %land.lhs.true41, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %land.lhs.true
  %1 = and i32 %bf.load, 6144
  %2 = icmp eq i32 %1, 4096
  br i1 %2, label %land.lhs.true13, label %if.else38

land.lhs.true13:                                  ; preds = %land.lhs.true2
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %3 = load %union.tree_node** %initial, align 8, !tbaa !3
  %tobool15 = icmp eq %union.tree_node* %3, null
  br i1 %tobool15, label %if.else38, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  %cmp19 = icmp eq %union.tree_node* %3, %4
  br i1 %cmp19, label %land.lhs.true27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true16
  %constant_flag = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %constant_flag to i32*
  %bf.load23 = load i32* %5, align 8
  %bf.clear25 = and i32 %bf.load23, 512
  %tobool26 = icmp eq i32 %bf.clear25, 0
  br i1 %tobool26, label %if.else38, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %lor.lhs.false, %land.lhs.true16
  %tobool28 = icmp eq i32 %reloc, 0
  br i1 %tobool28, label %if.end39, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %6 = load i32* @flag_pic, align 4, !tbaa !4
  %tobool30 = icmp eq i32 %6, 0
  br i1 %tobool30, label %lor.lhs.false31, label %if.else38

lor.lhs.false31:                                  ; preds = %land.lhs.true29
  %transparent_union = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %7 = bitcast [8 x i8]* %transparent_union to i64*
  %bf.load33 = load i64* %7, align 8
  %bf.cast = and i64 %bf.load33, 524288
  %tobool36 = icmp eq i64 %bf.cast, 0
  br i1 %tobool36, label %if.end39, label %if.else38

if.else38:                                        ; preds = %entry, %land.lhs.true2, %lor.lhs.false31, %land.lhs.true29, %lor.lhs.false, %land.lhs.true13
  br label %if.end39

if.end39:                                         ; preds = %land.lhs.true27, %lor.lhs.false31, %if.else38
  %flags.0 = phi i32 [ 512, %if.else38 ], [ 0, %lor.lhs.false31 ], [ 0, %land.lhs.true27 ]
  br i1 %tobool, label %land.lhs.true41, label %if.end50

land.lhs.true41:                                  ; preds = %if.end39, %land.lhs.true
  %flags.087 = phi i32 [ 256, %land.lhs.true ], [ %flags.0, %if.end39 ]
  %transparent_union43 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %8 = bitcast [8 x i8]* %transparent_union43 to i64*
  %bf.load44 = load i64* %8, align 8
  %bf.cast47 = lshr i64 %bf.load44, 8
  %bf.cast47.tr = trunc i64 %bf.cast47 to i32
  %9 = and i32 %bf.cast47.tr, 2048
  %10 = or i32 %9, %flags.087
  br label %if.end50

if.end50:                                         ; preds = %land.lhs.true41, %if.end39
  %flags.1 = phi i32 [ %flags.0, %if.end39 ], [ %10, %land.lhs.true41 ]
  %call = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([5 x i8]* @.str109, i64 0, i64 0)) #11
  %cmp51 = icmp eq i32 %call, 0
  br i1 %cmp51, label %if.then67, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %if.end50
  %call53 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([6 x i8]* @.str110, i64 0, i64 0), i64 5) #11
  %cmp54 = icmp eq i32 %call53, 0
  br i1 %cmp54, label %if.then67, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false52
  %call56 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([17 x i8]* @.str111, i64 0, i64 0), i64 16) #11
  %cmp57 = icmp eq i32 %call56, 0
  br i1 %cmp57, label %if.then67, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false55
  %call59 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([6 x i8]* @.str112, i64 0, i64 0)) #11
  %cmp60 = icmp eq i32 %call59, 0
  br i1 %cmp60, label %if.then67, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false58
  %call62 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([7 x i8]* @.str113, i64 0, i64 0), i64 6) #11
  %cmp63 = icmp eq i32 %call62, 0
  br i1 %cmp63, label %if.then67, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %lor.lhs.false61
  %call65 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([18 x i8]* @.str114, i64 0, i64 0), i64 17) #11
  %cmp66 = icmp eq i32 %call65, 0
  br i1 %cmp66, label %if.then67, label %if.end69

if.then67:                                        ; preds = %lor.lhs.false64, %lor.lhs.false61, %lor.lhs.false58, %lor.lhs.false55, %lor.lhs.false52, %if.end50
  %or68 = or i32 %flags.1, 8192
  br label %if.end69

if.end69:                                         ; preds = %if.then67, %lor.lhs.false64
  %flags.2 = phi i32 [ %or68, %if.then67 ], [ %flags.1, %lor.lhs.false64 ]
  ret i32 %flags.2
}
