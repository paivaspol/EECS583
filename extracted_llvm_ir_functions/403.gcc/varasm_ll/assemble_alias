define void @assemble_alias(%union.tree_node* %decl, %union.tree_node* nocapture %target) #0 {
entry:
  tail call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #10
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %0 = load %union.tree_node** %assembler_name, align 8, !tbaa !3
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %cond.false, label %cond.end

cond.false:                                       ; preds = %entry
  %1 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !3
  tail call void %1(%union.tree_node* %decl) #9
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %2 = phi %union.tree_node* [ %0, %entry ], [ %.pre, %cond.false ]
  %id = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds i8** %id, i64 1
  %4 = load i8** %3, align 8, !tbaa !3
  %public_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 524288
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %do.body, label %if.then

if.then:                                          ; preds = %cond.end
  tail call fastcc void @globalize_decl(%union.tree_node* %decl) #10
  br label %do.body

do.body:                                          ; preds = %cond.end, %if.then
  %6 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str108, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %6)
  %8 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  tail call void @assemble_name(%struct._IO_FILE* %8, i8* %4) #10
  %9 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %fputc = tail call i32 @fputc(i32 44, %struct._IO_FILE* %9) #6
  %10 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %id6 = getelementptr inbounds %union.tree_node* %target, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds i8** %id6, i64 1
  %12 = load i8** %11, align 8, !tbaa !3
  tail call void @assemble_name(%struct._IO_FILE* %10, i8* %12) #10
  %13 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %fputc41 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %13) #6
  %bf.load10 = load i32* %5, align 8
  %bf.set15 = or i32 %bf.load10, 81920
  store i32 %bf.set15, i32* %5, align 8
  %14 = load %union.tree_node** %assembler_name, align 8, !tbaa !3
  %cmp18 = icmp eq %union.tree_node* %14, null
  br i1 %cmp18, label %cond.false20, label %cond.end21

cond.false20:                                     ; preds = %do.body
  %15 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !3
  tail call void %15(%union.tree_node* %decl) #9
  %.pre42 = load %union.tree_node** %assembler_name, align 8, !tbaa !3
  br label %cond.end21

cond.end21:                                       ; preds = %do.body, %cond.false20
  %16 = phi %union.tree_node* [ %14, %do.body ], [ %.pre42, %cond.false20 ]
  %asm_written_flag25 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast [4 x i8]* %asm_written_flag25 to i32*
  %bf.load26 = load i32* %17, align 8
  %bf.set28 = or i32 %bf.load26, 16384
  store i32 %bf.set28, i32* %17, align 8
  ret void
}
