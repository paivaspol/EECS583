define %struct.rtx_def* @simplify_subtraction(%struct.rtx_def* %x) #0 {
entry:
  %val0 = alloca %struct.rtx_const, align 8
  %val1 = alloca %struct.rtx_const, align 8
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !1633), !dbg !3547
  %0 = getelementptr inbounds %struct.rtx_const* %val0, i64 0, i32 0, i64 0, !dbg !3548
  call void @llvm.lifetime.start(i64 136, i8* %0) #7, !dbg !3548
  call void @llvm.dbg.declare(metadata !{%struct.rtx_const* %val0}, metadata !1634), !dbg !3548
  %1 = getelementptr inbounds %struct.rtx_const* %val1, i64 0, i32 0, i64 0, !dbg !3548
  call void @llvm.lifetime.start(i64 136, i8* %1) #7, !dbg !3548
  call void @llvm.dbg.declare(metadata !{%struct.rtx_const* %val1}, metadata !1656), !dbg !3548
  %2 = bitcast %struct.rtx_def* %x to i32*, !dbg !3549
  %bf.load = load i32* %2, align 8, !dbg !3549
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3549
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3549
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, !dbg !3549
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !3549
  %3 = load %struct.rtx_def** %rtx, align 8, !dbg !3549, !tbaa !2357
  call fastcc void @decode_rtx_const(i32 %bf.clear, %struct.rtx_def* %3, %struct.rtx_const* %val0) #11, !dbg !3549
  %bf.load1 = load i32* %2, align 8, !dbg !3550
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !3550
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !3550
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, !dbg !3550
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !3550
  %4 = load %struct.rtx_def** %rtx6, align 8, !dbg !3550, !tbaa !2357
  call fastcc void @decode_rtx_const(i32 %bf.clear3, %struct.rtx_def* %4, %struct.rtx_const* %val1) #11, !dbg !3550
  %5 = bitcast %struct.rtx_const* %val0 to i32*, !dbg !3551
  %bf.load7 = load i32* %5, align 8, !dbg !3551
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !3551
  %cmp = icmp ugt i32 %bf.clear8, 1, !dbg !3551
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !3551

land.lhs.true:                                    ; preds = %entry
  %6 = bitcast %struct.rtx_const* %val1 to i32*, !dbg !3551
  %bf.load11 = load i32* %6, align 8, !dbg !3551
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !3551
  %cmp13 = icmp eq i32 %bf.clear8, %bf.clear12, !dbg !3551
  br i1 %cmp13, label %land.lhs.true14, label %cleanup, !dbg !3551

land.lhs.true14:                                  ; preds = %land.lhs.true
  %un = getelementptr inbounds %struct.rtx_const* %val0, i64 0, i32 1, !dbg !3551
  %base = bitcast %union.anon.5* %un to %struct.rtx_def**, !dbg !3551
  %7 = load %struct.rtx_def** %base, align 8, !dbg !3551, !tbaa !2357
  %un15 = getelementptr inbounds %struct.rtx_const* %val1, i64 0, i32 1, !dbg !3551
  %base17 = bitcast %union.anon.5* %un15 to %struct.rtx_def**, !dbg !3551
  %8 = load %struct.rtx_def** %base17, align 8, !dbg !3551, !tbaa !2357
  %cmp18 = icmp eq %struct.rtx_def* %7, %8, !dbg !3551
  br i1 %cmp18, label %if.then, label %cleanup, !dbg !3551

if.then:                                          ; preds = %land.lhs.true14
  %9 = getelementptr inbounds %struct.rtx_const* %val0, i64 0, i32 1, i32 0, i64 1, !dbg !3552
  %10 = load i64* %9, align 8, !dbg !3552, !tbaa !3187
  %11 = getelementptr inbounds %struct.rtx_const* %val1, i64 0, i32 1, i32 0, i64 1, !dbg !3552
  %12 = load i64* %11, align 8, !dbg !3552, !tbaa !3187
  %sub = sub nsw i64 %10, %12, !dbg !3552
  %call = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #10, !dbg !3552
  br label %cleanup, !dbg !3552

cleanup:                                          ; preds = %entry, %land.lhs.true, %land.lhs.true14, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %x, %land.lhs.true14 ], [ %x, %land.lhs.true ], [ %x, %entry ]
  call void @llvm.lifetime.end(i64 136, i8* %1) #7, !dbg !3553
  call void @llvm.lifetime.end(i64 136, i8* %0) #7, !dbg !3553
  ret %struct.rtx_def* %retval.0, !dbg !3553
}
