define internal fastcc void @resolve_unique_section(%union.tree_node* %decl, i32 %reloc, i32 %flag_function_or_data_sections) #0 {
entry:
  call void @llvm.dbg.value(metadata !{%union.tree_node* %decl}, i64 0, metadata !2281), !dbg !2839
  call void @llvm.dbg.value(metadata !{i32 %reloc}, i64 0, metadata !2282), !dbg !2840
  call void @llvm.dbg.value(metadata !{i32 %flag_function_or_data_sections}, i64 0, metadata !2283), !dbg !2841
  %section_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 15, !dbg !2842
  %0 = load %union.tree_node** %section_name, align 8, !dbg !2842, !tbaa !2357
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !2842
  br i1 %cmp, label %land.lhs.true, label %if.end84, !dbg !2842

land.lhs.true:                                    ; preds = %entry
  %tobool = icmp eq i32 %flag_function_or_data_sections, 0, !dbg !2842
  br i1 %tobool, label %lor.lhs.false, label %do.body, !dbg !2842

lor.lhs.false:                                    ; preds = %land.lhs.true
  %1 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 13), align 8, !dbg !2842, !tbaa !2387, !range !2388
  %tobool2 = icmp eq i8 %1, 0, !dbg !2842
  br i1 %tobool2, label %if.end84, label %land.lhs.true3, !dbg !2842

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %transparent_union = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !2842
  %2 = bitcast [8 x i8]* %transparent_union to i64*, !dbg !2842
  %bf.load = load i64* %2, align 8, !dbg !2842
  %bf.cast = and i64 %bf.load, 524288, !dbg !2842
  %tobool5 = icmp eq i64 %bf.cast, 0, !dbg !2842
  br i1 %tobool5, label %if.end84, label %do.body, !dbg !2842

do.body:                                          ; preds = %land.lhs.true3, %land.lhs.true
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !2843
  %3 = bitcast [4 x i8]* %code to i32*, !dbg !2843
  %bf.load6 = load i32* %3, align 8, !dbg !2843
  %bf.clear7 = and i32 %bf.load6, 255, !dbg !2843
  %cmp8 = icmp eq i32 %bf.clear7, 30, !dbg !2843
  br i1 %cmp8, label %if.end60, label %if.else, !dbg !2843

if.else:                                          ; preds = %do.body
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12, !dbg !2843
  %4 = load %union.tree_node** %initial, align 8, !dbg !2843, !tbaa !2357
  %cmp11 = icmp eq %union.tree_node* %4, null, !dbg !2843
  %5 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !2843, !tbaa !2357
  %cmp15 = icmp eq %union.tree_node* %4, %5, !dbg !2843
  %or.cond107 = or i1 %cmp11, %cmp15, !dbg !2843
  br i1 %or.cond107, label %if.end60, label %if.else17, !dbg !2843

if.else17:                                        ; preds = %if.else
  %6 = and i32 %bf.load6, 6144, !dbg !2843
  %or.cond.not = icmp eq i32 %6, 4096, !dbg !2843
  br i1 %or.cond.not, label %lor.lhs.false37, label %if.else58, !dbg !2843

lor.lhs.false37:                                  ; preds = %if.else17
  %constant_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2, !dbg !2843
  %7 = bitcast [4 x i8]* %constant_flag to i32*, !dbg !2843
  %bf.load41 = load i32* %7, align 8, !dbg !2843
  %bf.clear43 = and i32 %bf.load41, 512, !dbg !2843
  %tobool44 = icmp eq i32 %bf.clear43, 0, !dbg !2843
  br i1 %tobool44, label %if.else58, label %land.lhs.true45, !dbg !2843

land.lhs.true45:                                  ; preds = %lor.lhs.false37
  %tobool46 = icmp eq i32 %reloc, 0, !dbg !2843
  br i1 %tobool46, label %if.end60, label %land.lhs.true47, !dbg !2843

land.lhs.true47:                                  ; preds = %land.lhs.true45
  %8 = load i32* @flag_pic, align 4, !dbg !2843, !tbaa !2382
  %tobool48 = icmp eq i32 %8, 0, !dbg !2843
  br i1 %tobool48, label %lor.lhs.false49, label %if.else58, !dbg !2843

lor.lhs.false49:                                  ; preds = %land.lhs.true47
  %transparent_union51 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !2843
  %9 = bitcast [8 x i8]* %transparent_union51 to i64*, !dbg !2843
  %bf.load52 = load i64* %9, align 8, !dbg !2843
  %bf.cast55 = and i64 %bf.load52, 524288, !dbg !2843
  %tobool56 = icmp eq i64 %bf.cast55, 0, !dbg !2843
  br i1 %tobool56, label %if.end60, label %if.else58, !dbg !2843

if.else58:                                        ; preds = %if.else17, %lor.lhs.false49, %land.lhs.true47, %lor.lhs.false37
  call void @llvm.dbg.value(metadata !2844, i64 0, metadata !2286), !dbg !2843
  br label %if.end60

if.end60:                                         ; preds = %land.lhs.true45, %lor.lhs.false49, %if.else, %do.body, %if.else58
  %sec.0 = phi i64 [ 2, %if.else58 ], [ 0, %do.body ], [ 3, %if.else ], [ 1, %lor.lhs.false49 ], [ 1, %land.lhs.true45 ]
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14, !dbg !2843
  %10 = load %union.tree_node** %assembler_name, align 8, !dbg !2843, !tbaa !2357
  %cmp62 = icmp eq %union.tree_node* %10, null, !dbg !2843
  br i1 %cmp62, label %cond.false, label %cond.end, !dbg !2843

cond.false:                                       ; preds = %if.end60
  %11 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !dbg !2843, !tbaa !2357
  call void %11(%union.tree_node* %decl) #10, !dbg !2843
  %.pre = load %union.tree_node** %assembler_name, align 8, !dbg !2843, !tbaa !2357
  br label %cond.end, !dbg !2843

cond.end:                                         ; preds = %if.end60, %cond.false
  %12 = phi %union.tree_node* [ %.pre, %cond.false ], [ %10, %if.end60 ]
  %id = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 1, !dbg !2843
  %13 = getelementptr inbounds i8** %id, i64 1, !dbg !2843
  %14 = load i8** %13, align 8, !dbg !2843, !tbaa !2357
  call void @llvm.dbg.value(metadata !{i8* %14}, i64 0, metadata !2287), !dbg !2843
  %15 = load i8* %14, align 1, !dbg !2843, !tbaa !2353
  %cmp65 = icmp eq i8 %15, 42, !dbg !2843
  %idx.ext = zext i1 %cmp65 to i64, !dbg !2843
  %add.ptr = getelementptr inbounds i8* %14, i64 %idx.ext, !dbg !2843
  call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !2287), !dbg !2843
  %transparent_union68 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !2843
  %16 = bitcast [8 x i8]* %transparent_union68 to i64*, !dbg !2843
  %bf.load69 = load i64* %16, align 8, !dbg !2843
  %bf.lshr70 = lshr i64 %bf.load69, 19, !dbg !2843
  %bf.cast72 = and i64 %bf.lshr70, 1, !dbg !2843
  %arrayidx75 = getelementptr inbounds [4 x [2 x i8*]]* @resolve_unique_section.prefixes, i64 0, i64 %sec.0, i64 %bf.cast72, !dbg !2843
  %17 = load i8** %arrayidx75, align 8, !dbg !2843, !tbaa !2357
  call void @llvm.dbg.value(metadata !{i8* %17}, i64 0, metadata !2289), !dbg !2843
  %call = call i64 @strlen(i8* %add.ptr) #12, !dbg !2843
  %call76 = call i64 @strlen(i8* %17) #12, !dbg !2843
  %add = add i64 %call76, %call, !dbg !2843
  %conv77 = trunc i64 %add to i32, !dbg !2843
  call void @llvm.dbg.value(metadata !{i32 %conv77}, i64 0, metadata !2284), !dbg !2843
  %add78 = shl i64 %add, 32, !dbg !2843
  %sext = add i64 %add78, 4294967296, !dbg !2843
  %conv79 = ashr exact i64 %sext, 32, !dbg !2843
  %18 = alloca i8, i64 %conv79, align 1, !dbg !2843
  call void @llvm.dbg.value(metadata !{i8* %18}, i64 0, metadata !2288), !dbg !2843
  %call80 = call i32 (i8*, i8*, ...)* @sprintf(i8* %18, i8* getelementptr inbounds ([5 x i8]* @.str134, i64 0, i64 0), i8* %17, i8* %add.ptr) #10, !dbg !2843
  %call81 = call %union.tree_node* @build_string(i32 %conv77, i8* %18) #10, !dbg !2843
  store %union.tree_node* %call81, %union.tree_node** %section_name, align 8, !dbg !2843, !tbaa !2357
  br label %if.end84, !dbg !2843

if.end84:                                         ; preds = %land.lhs.true3, %lor.lhs.false, %cond.end, %entry
  ret void, !dbg !2845
}
