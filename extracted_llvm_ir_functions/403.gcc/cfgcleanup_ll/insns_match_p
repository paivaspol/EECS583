define internal fastcc zeroext i1 @insns_match_p(i32 %mode, %struct.rtx_def* %i1, %struct.rtx_def* %i2) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %i1 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %1 = bitcast %struct.rtx_def* %i2 to i32*
  %bf.load1 = load i32* %1, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear, %bf.clear2
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %i1, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %i2, i64 0, i32 1, i64 3
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx5, align 8, !tbaa !3
  %4 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load6 = load i32* %4, align 8
  %5 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load8 = load i32* %5, align 8
  %6 = xor i32 %bf.load8, %bf.load6
  %7 = and i32 %6, 65535
  %cmp10 = icmp eq i32 %7, 0
  br i1 %cmp10, label %if.end12, label %return

if.end12:                                         ; preds = %if.end
  %cmp15 = icmp eq i32 %bf.clear, 34
  br i1 %cmp15, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end12
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %i1, i64 0, i32 1, i64 7
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx18, align 8, !tbaa !3
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %i2, i64 0, i32 1, i64 7
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx21, align 8, !tbaa !3
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end23

if.end23:                                         ; preds = %land.lhs.true, %if.end12
  %and = and i32 %mode, 4
  %tobool24 = icmp eq i32 %and, 0
  br i1 %tobool24, label %if.end121, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %if.end23
  %call26 = tail call i32 @stack_regs_mentioned(%struct.rtx_def* %i1) #5
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %if.end121, label %if.then28

if.then28:                                        ; preds = %land.lhs.true25
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %i1, i64 0, i32 1, i64 6
  %note.0.in363 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %note.0364 = load %struct.rtx_def** %note.0.in363, align 8
  %tobool32365 = icmp eq %struct.rtx_def* %note.0364, null
  br i1 %tobool32365, label %for.end, label %for.body

for.body:                                         ; preds = %if.then28, %for.inc
  %note.0367 = phi %struct.rtx_def* [ %note.0, %for.inc ], [ %note.0364, %if.then28 ]
  %i1_regset.0366 = phi i64 [ %i1_regset.1, %for.inc ], [ 0, %if.then28 ]
  %10 = bitcast %struct.rtx_def* %note.0367 to i32*
  %bf.load33 = load i32* %10, align 8
  %bf.clear34 = and i32 %bf.load33, 16711680
  %cmp35 = icmp eq i32 %bf.clear34, 65536
  br i1 %cmp35, label %land.lhs.true36, label %for.inc

land.lhs.true36:                                  ; preds = %for.body
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %note.0367, i64 0, i32 1, i64 0
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx39, align 8, !tbaa !3
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load40 = load i32* %12, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 61
  br i1 %cmp42, label %land.lhs.true43, label %for.inc

land.lhs.true43:                                  ; preds = %land.lhs.true36
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx48 to i32*
  %13 = load i32* %rtuint, align 4, !tbaa !0
  %.off = add i32 %13, -8
  %14 = icmp ult i32 %.off, 8
  br i1 %14, label %if.then58, label %for.inc

if.then58:                                        ; preds = %land.lhs.true43
  %sh_prom = zext i32 %13 to i64
  %shl = shl i64 1, %sh_prom
  %or = or i64 %shl, %i1_regset.0366
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true36, %land.lhs.true43, %if.then58
  %i1_regset.1 = phi i64 [ %or, %if.then58 ], [ %i1_regset.0366, %land.lhs.true43 ], [ %i1_regset.0366, %land.lhs.true36 ], [ %i1_regset.0366, %for.body ]
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %note.0367, i64 0, i32 1, i64 1
  %note.0.in = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %note.0 = load %struct.rtx_def** %note.0.in, align 8
  %tobool32 = icmp eq %struct.rtx_def* %note.0, null
  br i1 %tobool32, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then28
  %i1_regset.0.lcssa = phi i64 [ 0, %if.then28 ], [ %i1_regset.1, %for.inc ]
  %arrayidx70 = getelementptr inbounds %struct.rtx_def* %i2, i64 0, i32 1, i64 6
  %note.1.in358 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %note.1359 = load %struct.rtx_def** %note.1.in358, align 8
  %tobool73360 = icmp eq %struct.rtx_def* %note.1359, null
  br i1 %tobool73360, label %for.end117, label %for.body74

for.body74:                                       ; preds = %for.end, %for.inc113
  %note.1362 = phi %struct.rtx_def* [ %note.1, %for.inc113 ], [ %note.1359, %for.end ]
  %i2_regset.0361 = phi i64 [ %i2_regset.1, %for.inc113 ], [ 0, %for.end ]
  %15 = bitcast %struct.rtx_def* %note.1362 to i32*
  %bf.load75 = load i32* %15, align 8
  %bf.clear77 = and i32 %bf.load75, 16711680
  %cmp78 = icmp eq i32 %bf.clear77, 65536
  br i1 %cmp78, label %land.lhs.true79, label %for.inc113

land.lhs.true79:                                  ; preds = %for.body74
  %arrayidx81 = getelementptr inbounds %struct.rtx_def* %note.1362, i64 0, i32 1, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx82, align 8, !tbaa !3
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load83 = load i32* %17, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  %cmp85 = icmp eq i32 %bf.clear84, 61
  br i1 %cmp85, label %land.lhs.true86, label %for.inc113

land.lhs.true86:                                  ; preds = %land.lhs.true79
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtuint92 = bitcast %union.rtunion_def* %arrayidx91 to i32*
  %18 = load i32* %rtuint92, align 4, !tbaa !0
  %.off357 = add i32 %18, -8
  %19 = icmp ult i32 %.off357, 8
  br i1 %19, label %if.then102, label %for.inc113

if.then102:                                       ; preds = %land.lhs.true86
  %sh_prom109 = zext i32 %18 to i64
  %shl110 = shl i64 1, %sh_prom109
  %or111 = or i64 %shl110, %i2_regset.0361
  br label %for.inc113

for.inc113:                                       ; preds = %for.body74, %land.lhs.true79, %land.lhs.true86, %if.then102
  %i2_regset.1 = phi i64 [ %or111, %if.then102 ], [ %i2_regset.0361, %land.lhs.true86 ], [ %i2_regset.0361, %land.lhs.true79 ], [ %i2_regset.0361, %for.body74 ]
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %note.1362, i64 0, i32 1, i64 1
  %note.1.in = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %note.1 = load %struct.rtx_def** %note.1.in, align 8
  %tobool73 = icmp eq %struct.rtx_def* %note.1, null
  br i1 %tobool73, label %for.end117, label %for.body74

for.end117:                                       ; preds = %for.inc113, %for.end
  %i2_regset.0.lcssa = phi i64 [ 0, %for.end ], [ %i2_regset.1, %for.inc113 ]
  %cmp118 = icmp eq i64 %i1_regset.0.lcssa, %i2_regset.0.lcssa
  br i1 %cmp118, label %if.end121, label %return

if.end121:                                        ; preds = %land.lhs.true25, %if.end23, %for.end117
  %20 = load i32* @reload_completed, align 4, !tbaa !0
  %tobool122 = icmp eq i32 %20, 0
  br i1 %tobool122, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end121
  %call123 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %3) #5
  %tobool124 = icmp eq i32 %call123, 0
  br i1 %tobool124, label %if.then127, label %return

cond.false:                                       ; preds = %if.end121
  %call125 = tail call i32 @rtx_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %3) #5
  %tobool126 = icmp eq i32 %call125, 0
  br i1 %tobool126, label %if.then127, label %return

if.then127:                                       ; preds = %cond.true, %cond.false
  %call128 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %i1) #5
  %call129 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %i2) #5
  %tobool130 = icmp eq %struct.rtx_def* %call128, null
  %tobool132 = icmp eq %struct.rtx_def* %call129, null
  %or.cond352 = or i1 %tobool130, %tobool132
  br i1 %or.cond352, label %if.end292, label %land.lhs.true133

land.lhs.true133:                                 ; preds = %if.then127
  %21 = load i32* @reload_completed, align 4, !tbaa !0
  %tobool134 = icmp eq i32 %21, 0
  br i1 %tobool134, label %if.then199, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true133
  %arrayidx136 = getelementptr inbounds %struct.rtx_def* %call128, i64 0, i32 1, i64 0
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx137, align 8, !tbaa !3
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load138 = load i32* %23, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  switch i32 %bf.clear139, label %if.end292 [
    i32 67, label %land.lhs.true190
    i32 68, label %land.lhs.true190
    i32 54, label %land.lhs.true190
    i32 55, label %land.lhs.true190
    i32 58, label %land.lhs.true190
    i32 134, label %land.lhs.true190
    i32 56, label %land.lhs.true190
    i32 140, label %land.lhs.true190
  ]

land.lhs.true190:                                 ; preds = %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false, %lor.lhs.false
  %arrayidx195 = getelementptr inbounds %struct.rtx_def* %call129, i64 0, i32 1, i64 0
  %rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx196, align 8, !tbaa !3
  %call197 = tail call i32 @rtx_equal_p(%struct.rtx_def* %22, %struct.rtx_def* %24) #5
  %tobool198 = icmp eq i32 %call197, 0
  br i1 %tobool198, label %if.end292, label %if.then199

if.then199:                                       ; preds = %land.lhs.true190, %land.lhs.true133
  %bf.load200 = load i32* %0, align 8
  %bf.clear201 = and i32 %bf.load200, 65535
  %idxprom349 = zext i32 %bf.clear201 to i64
  %arrayidx202 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom349
  %25 = load i8* %arrayidx202, align 1, !tbaa !1
  %cmp203 = icmp eq i8 %25, 105
  br i1 %cmp203, label %cond.true205, label %cond.end223

cond.true205:                                     ; preds = %if.then199
  %26 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load209 = load i32* %27, align 8
  %bf.clear210 = and i32 %bf.load209, 65535
  %cmp211 = icmp eq i32 %bf.clear210, 47
  br i1 %cmp211, label %cond.end223, label %cond.false217

cond.false217:                                    ; preds = %cond.true205
  %call221 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %i1, %struct.rtx_def* %26) #5
  br label %cond.end223

cond.end223:                                      ; preds = %cond.true205, %if.then199, %cond.false217
  %cond224 = phi %struct.rtx_def* [ %call221, %cond.false217 ], [ null, %if.then199 ], [ %26, %cond.true205 ]
  %bf.load225 = load i32* %1, align 8
  %bf.clear226 = and i32 %bf.load225, 65535
  %idxprom227350 = zext i32 %bf.clear226 to i64
  %arrayidx228 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom227350
  %28 = load i8* %arrayidx228, align 1, !tbaa !1
  %cmp230 = icmp eq i8 %28, 105
  br i1 %cmp230, label %cond.true232, label %if.end292

cond.true232:                                     ; preds = %cond.end223
  %29 = load %struct.rtx_def** %rtx5, align 8, !tbaa !3
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load236 = load i32* %30, align 8
  %bf.clear237 = and i32 %bf.load236, 65535
  %cmp238 = icmp eq i32 %bf.clear237, 47
  br i1 %cmp238, label %cond.end252, label %cond.false244

cond.false244:                                    ; preds = %cond.true232
  %call248 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %i2, %struct.rtx_def* %29) #5
  br label %cond.end252

cond.end252:                                      ; preds = %cond.true232, %cond.false244
  %cond253 = phi %struct.rtx_def* [ %call248, %cond.false244 ], [ %29, %cond.true232 ]
  %cmp254 = icmp eq %struct.rtx_def* %cond224, null
  %cmp257 = icmp eq %struct.rtx_def* %cond253, null
  %or.cond353 = or i1 %cmp254, %cmp257
  br i1 %or.cond353, label %if.end292, label %land.lhs.true259

land.lhs.true259:                                 ; preds = %cond.end252
  %fld260 = getelementptr inbounds %struct.rtx_def* %cond224, i64 0, i32 1
  %rtx262 = bitcast [1 x %union.rtunion_def]* %fld260 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx262, align 8, !tbaa !3
  %fld263 = getelementptr inbounds %struct.rtx_def* %cond253, i64 0, i32 1
  %rtx265 = bitcast [1 x %union.rtunion_def]* %fld263 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx265, align 8, !tbaa !3
  %call266 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %31, %struct.rtx_def* %32) #5
  %tobool267 = icmp eq i32 %call266, 0
  br i1 %tobool267, label %if.end292, label %if.then268

if.then268:                                       ; preds = %land.lhs.true259
  %arrayidx270 = getelementptr inbounds %struct.rtx_def* %cond224, i64 0, i32 1, i64 1
  %rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**
  %arrayidx273 = getelementptr inbounds %struct.rtx_def* %call128, i64 0, i32 1, i64 0
  %rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx274, align 8, !tbaa !3
  %call275 = tail call i32 @validate_change(%struct.rtx_def* %i1, %struct.rtx_def** %rtx271, %struct.rtx_def* %33, i32 1) #5
  %arrayidx277 = getelementptr inbounds %struct.rtx_def* %cond253, i64 0, i32 1, i64 1
  %rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**
  %arrayidx280 = getelementptr inbounds %struct.rtx_def* %call129, i64 0, i32 1, i64 0
  %rtx281 = bitcast %union.rtunion_def* %arrayidx280 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx281, align 8, !tbaa !3
  %call282 = tail call i32 @validate_change(%struct.rtx_def* %i2, %struct.rtx_def** %rtx278, %struct.rtx_def* %34, i32 1) #5
  %call283 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %3) #5
  %tobool284 = icmp eq i32 %call283, 0
  br i1 %tobool284, label %if.then285, label %if.else

if.then285:                                       ; preds = %if.then268
  tail call void @cancel_changes(i32 0) #5
  br label %if.end292

if.else:                                          ; preds = %if.then268
  %call286 = tail call i32 @apply_change_group() #5
  %tobool287 = icmp eq i32 %call286, 0
  br i1 %tobool287, label %if.end292, label %return

if.end292:                                        ; preds = %cond.end223, %lor.lhs.false, %land.lhs.true190, %if.else, %land.lhs.true259, %cond.end252, %if.then127, %if.then285
  br label %return

return:                                           ; preds = %cond.false, %cond.true, %if.else, %for.end117, %land.lhs.true, %if.end, %entry, %if.end292
  %retval.0 = phi i1 [ false, %if.end292 ], [ false, %entry ], [ false, %if.end ], [ false, %land.lhs.true ], [ false, %for.end117 ], [ true, %if.else ], [ true, %cond.true ], [ true, %cond.false ]
  ret i1 %retval.0
}
