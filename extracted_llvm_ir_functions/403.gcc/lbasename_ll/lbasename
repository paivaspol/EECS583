define i8* @lbasename(i8* %name) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %name}, i64 0, metadata !12), !dbg !14
  tail call void @llvm.dbg.value(metadata !{i8* %name}, i64 0, metadata !13), !dbg !15
  br label %for.cond, !dbg !15

for.cond:                                         ; preds = %if.then, %for.cond.for.inc_crit_edge, %entry
  %name.addr.0 = phi i8* [ %name, %entry ], [ %incdec.ptr.pre, %for.cond.for.inc_crit_edge ], [ %add.ptr, %if.then ]
  %base.0 = phi i8* [ %name, %entry ], [ %base.0, %for.cond.for.inc_crit_edge ], [ %add.ptr, %if.then ]
  %0 = load i8* %name.addr.0, align 1, !dbg !15, !tbaa !17
  switch i8 %0, label %for.cond.for.inc_crit_edge [
    i8 0, label %for.end
    i8 47, label %if.then
  ], !dbg !15

for.cond.for.inc_crit_edge:                       ; preds = %for.cond
  %incdec.ptr.pre = getelementptr inbounds i8* %name.addr.0, i64 1, !dbg !15
  br label %for.cond, !dbg !15

if.then:                                          ; preds = %for.cond
  %add.ptr = getelementptr inbounds i8* %name.addr.0, i64 1, !dbg !19
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !13), !dbg !19
  br label %for.cond, !dbg !19

for.end:                                          ; preds = %for.cond
  ret i8* %base.0, !dbg !20
}
