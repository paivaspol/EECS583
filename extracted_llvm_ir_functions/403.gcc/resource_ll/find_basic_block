define internal fastcc i32 @find_basic_block(%struct.rtx_def* %insn, i32 %search_limit) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !640), !dbg !982
  tail call void @llvm.dbg.value(metadata !{i32 %search_limit}, i64 0, metadata !641), !dbg !983
  %call = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn) #6, !dbg !984
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !640), !dbg !984
  %tobool46 = icmp eq %struct.rtx_def* %call, null, !dbg !984
  br i1 %tobool46, label %for.end.thread, label %land.lhs.true, !dbg !984

land.lhs.true:                                    ; preds = %entry, %for.inc
  %search_limit.addr.048 = phi i32 [ %dec, %for.inc ], [ %search_limit, %entry ]
  %insn.addr.047 = phi %struct.rtx_def* [ %call2, %for.inc ], [ %call, %entry ]
  %0 = bitcast %struct.rtx_def* %insn.addr.047 to i32*, !dbg !984
  %bf.load = load i32* %0, align 8, !dbg !984
  %bf.clear = and i32 %bf.load, 65535, !dbg !984
  %cmp = icmp eq i32 %bf.clear, 35, !dbg !984
  %cmp1 = icmp eq i32 %search_limit.addr.048, 0, !dbg !984
  %or.cond = or i1 %cmp, %cmp1, !dbg !984
  br i1 %or.cond, label %for.end, label %for.inc, !dbg !984

for.inc:                                          ; preds = %land.lhs.true
  %call2 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn.addr.047) #6, !dbg !986
  tail call void @llvm.dbg.value(metadata !706, i64 0, metadata !640), !dbg !986
  %dec = add nsw i32 %search_limit.addr.048, -1, !dbg !986
  tail call void @llvm.dbg.value(metadata !{i32 %dec}, i64 0, metadata !641), !dbg !986
  %tobool = icmp eq %struct.rtx_def* %call2, null, !dbg !984
  br i1 %tobool, label %for.end.thread, label %land.lhs.true, !dbg !984

for.end.thread:                                   ; preds = %entry, %for.inc
  %search_limit.addr.0.lcssa.ph = phi i32 [ %search_limit, %entry ], [ %dec, %for.inc ]
  %cmp357 = icmp eq i32 %search_limit.addr.0.lcssa.ph, 0, !dbg !987
  %.mux59 = sext i1 %cmp357 to i32, !dbg !987
  br label %return, !dbg !987

for.end:                                          ; preds = %land.lhs.true
  %cmp3 = icmp eq i32 %search_limit.addr.048, 0, !dbg !987
  %.mux = sext i1 %cmp3 to i32, !dbg !987
  br i1 %cmp3, label %return, label %if.end6, !dbg !987

if.end6:                                          ; preds = %for.end
  %call7 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.addr.047) #6, !dbg !988
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call7}, i64 0, metadata !640), !dbg !988
  %tobool944 = icmp eq %struct.rtx_def* %call7, null, !dbg !988
  br i1 %tobool944, label %return, label %land.rhs10, !dbg !988

land.rhs10:                                       ; preds = %if.end6, %for.inc24
  %insn.addr.145 = phi %struct.rtx_def* [ %call25, %for.inc24 ], [ %call7, %if.end6 ]
  %1 = bitcast %struct.rtx_def* %insn.addr.145 to i32*, !dbg !988
  %bf.load11 = load i32* %1, align 8, !dbg !988
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !988
  %cmp13 = icmp eq i32 %bf.clear12, 36, !dbg !988
  br i1 %cmp13, label %for.cond16.preheader, label %return

for.cond16.preheader:                             ; preds = %land.rhs10
  %2 = load i32* @n_basic_blocks, align 4, !dbg !990, !tbaa !669
  %cmp1741 = icmp sgt i32 %2, 0, !dbg !990
  br i1 %cmp1741, label %for.body18.lr.ph, label %for.inc24, !dbg !990

for.body18.lr.ph:                                 ; preds = %for.cond16.preheader
  %3 = load %struct.varray_head_tag** @basic_block_info, align 8, !dbg !993, !tbaa !663
  %data = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 4, !dbg !993
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*, !dbg !993
  br label %for.body18, !dbg !990

for.cond16:                                       ; preds = %for.body18
  %inc = add nsw i32 %i.042, 1, !dbg !990
  %4 = trunc i64 %indvars.iv.next to i32, !dbg !990
  %cmp17 = icmp slt i32 %4, %2, !dbg !990
  br i1 %cmp17, label %for.body18, label %for.inc24, !dbg !990

for.body18:                                       ; preds = %for.body18.lr.ph, %for.cond16
  %indvars.iv = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next, %for.cond16 ]
  %i.042 = phi i32 [ 0, %for.body18.lr.ph ], [ %inc, %for.cond16 ]
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %indvars.iv, !dbg !993
  %5 = load %struct.basic_block_def** %arrayidx, align 8, !dbg !993, !tbaa !663
  %head = getelementptr inbounds %struct.basic_block_def* %5, i64 0, i32 0, !dbg !993
  %6 = load %struct.rtx_def** %head, align 8, !dbg !993, !tbaa !663
  %cmp19 = icmp eq %struct.rtx_def* %insn.addr.145, %6, !dbg !993
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !990
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !642), !dbg !990
  br i1 %cmp19, label %return, label %for.cond16, !dbg !993

for.inc24:                                        ; preds = %for.cond16, %for.cond16.preheader
  %call25 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.addr.145) #6, !dbg !994
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call25}, i64 0, metadata !640), !dbg !994
  %tobool9 = icmp eq %struct.rtx_def* %call25, null, !dbg !988
  br i1 %tobool9, label %return, label %land.rhs10, !dbg !988

return:                                           ; preds = %if.end6, %land.rhs10, %for.inc24, %for.body18, %for.end.thread, %for.end
  %retval.0 = phi i32 [ %.mux, %for.end ], [ %.mux59, %for.end.thread ], [ %i.042, %for.body18 ], [ -1, %for.inc24 ], [ -1, %land.rhs10 ], [ -1, %if.end6 ]
  ret i32 %retval.0, !dbg !995
}
