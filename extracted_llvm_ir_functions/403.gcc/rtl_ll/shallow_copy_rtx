define %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* nocapture %orig) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %orig to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom.i69 = zext i32 %bf.clear to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom.i69
  %1 = load i8* %arrayidx.i, align 1, !tbaa !1
  %conv.i = zext i8 %1 to i64
  %sub.i = shl nuw nsw i64 %conv.i, 3
  %add.i = add i64 %sub.i, 8
  %call.i = tail call i8* @ggc_alloc(i64 %add.i) #6
  %2 = bitcast i8* %call.i to %struct.rtx_def*
  %3 = bitcast i8* %call.i to i64*
  store i64 0, i64* %3, align 8
  %4 = bitcast i8* %call.i to i32*
  store i32 %bf.clear, i32* %4, align 8
  %bf.load1 = load i32* %0, align 8
  %bf.clear2 = and i32 %bf.load1, 16711680
  %bf.set = or i32 %bf.clear2, %bf.clear
  store i32 %bf.set, i32* %4, align 8
  %bf.load5 = load i32* %0, align 8
  %bf.clear7 = and i32 %bf.load5, 268435456
  %bf.set12 = or i32 %bf.set, %bf.clear7
  store i32 %bf.set12, i32* %4, align 8
  %bf.load13 = load i32* %0, align 8
  %bf.clear15 = and i32 %bf.load13, 134217728
  %bf.set20 = or i32 %bf.set12, %bf.clear15
  store i32 %bf.set20, i32* %4, align 8
  %bf.load21 = load i32* %0, align 8
  %bf.clear23 = and i32 %bf.load21, 67108864
  %bf.set28 = or i32 %bf.set20, %bf.clear23
  store i32 %bf.set28, i32* %4, align 8
  %bf.load29 = load i32* %0, align 8
  %bf.clear31 = and i32 %bf.load29, 1073741824
  %bf.set36 = or i32 %bf.set28, %bf.clear31
  store i32 %bf.set36, i32* %4, align 8
  %bf.load37 = load i32* %0, align 8
  %bf.lshr38 = and i32 %bf.load37, -2147483648
  %bf.clear42 = and i32 %bf.set36, 2147483647
  %bf.set43 = or i32 %bf.clear42, %bf.lshr38
  store i32 %bf.set43, i32* %4, align 8
  %cmp71 = icmp eq i8 %1, 0
  br i1 %cmp71, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %conv = zext i8 %1 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %5 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv, i32 0
  %6 = load i64* %5, align 8
  %7 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 %indvars.iv, i32 0
  store i64 %6, i64* %7, align 8
  %indvars.iv.next = add i64 %indvars.iv, 1
  %8 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %8, %conv
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  ret %struct.rtx_def* %2
}
