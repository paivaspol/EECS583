define internal fastcc %struct.basic_block_def* @find_pdom(i32* nocapture %pdom, %struct.basic_block_def* %block) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %pdom}, i64 0, metadata !588), !dbg !861
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %block}, i64 0, metadata !589), !dbg !862
  %tobool = icmp eq %struct.basic_block_def* %block, null, !dbg !863
  br i1 %tobool, label %if.then, label %if.end, !dbg !863

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str1, i64 0, i64 0), i32 273, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.find_pdom, i64 0, i64 0)) #8, !dbg !864
  unreachable, !dbg !864

if.end:                                           ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 11, !dbg !865
  %0 = load i32* %index, align 4, !dbg !865, !tbaa !674
  %cmp = icmp eq i32 %0, -3, !dbg !865
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !865

if.then1:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str1, i64 0, i64 0), i32 275, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.find_pdom, i64 0, i64 0)) #8, !dbg !866
  unreachable, !dbg !866

if.end2:                                          ; preds = %if.end
  %cmp3 = icmp eq %struct.basic_block_def* %block, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), !dbg !867
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !867

if.then4:                                         ; preds = %if.end2
  %1 = load %struct.varray_head_tag** @basic_block_info, align 8, !dbg !868, !tbaa !669
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4, !dbg !868
  %arrayidx = bitcast %union.varray_data_tag* %data to %struct.basic_block_def**, !dbg !868
  %2 = load %struct.basic_block_def** %arrayidx, align 8, !dbg !868, !tbaa !669
  br label %return, !dbg !868

if.else:                                          ; preds = %if.end2
  %cmp5 = icmp eq %struct.basic_block_def* %block, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), !dbg !869
  br i1 %cmp5, label %return, label %lor.lhs.false, !dbg !869

lor.lhs.false:                                    ; preds = %if.else
  %idxprom = sext i32 %0 to i64, !dbg !869
  %arrayidx7 = getelementptr inbounds i32* %pdom, i64 %idxprom, !dbg !869
  %3 = load i32* %arrayidx7, align 4, !dbg !869, !tbaa !674
  %cmp8 = icmp eq i32 %3, -2, !dbg !869
  br i1 %cmp8, label %return, label %if.else10, !dbg !869

if.else10:                                        ; preds = %lor.lhs.false
  %idxprom14 = sext i32 %3 to i64, !dbg !870
  %4 = load %struct.varray_head_tag** @basic_block_info, align 8, !dbg !870, !tbaa !669
  %data15 = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 4, !dbg !870
  %bb16 = bitcast %union.varray_data_tag* %data15 to [1 x %struct.basic_block_def*]*, !dbg !870
  %arrayidx17 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb16, i64 0, i64 %idxprom14, !dbg !870
  %5 = load %struct.basic_block_def** %arrayidx17, align 8, !dbg !870, !tbaa !669
  br label %return, !dbg !870

return:                                           ; preds = %if.else, %lor.lhs.false, %if.else10, %if.then4
  %retval.0 = phi %struct.basic_block_def* [ %2, %if.then4 ], [ %5, %if.else10 ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %lor.lhs.false ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %if.else ]
  ret %struct.basic_block_def* %retval.0, !dbg !871
}
