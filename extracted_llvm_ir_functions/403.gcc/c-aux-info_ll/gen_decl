define internal fastcc i8* @gen_decl(%union.tree_node* nocapture %decl, i32 %is_func_definition, i32 %style) #0 {
entry:
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name, align 8, !tbaa !3
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = getelementptr inbounds i8** %id, i64 1
  %2 = load i8** %1, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %ret_val.0 = phi i8* [ %2, %if.then ], [ getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), %entry ]
  %cmp = icmp eq i32 %style, 1
  br i1 %cmp, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  %volatile_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %3 = bitcast [4 x i8]* %volatile_flag to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 2048
  %tobool6 = icmp eq i32 %bf.clear, 0
  br i1 %tobool6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end5
  %call = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str11, i64 0, i64 0), i8* %ret_val.0, i8* null) #7
  %bf.load10.pre = load i32* %3, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.end5, %if.then7
  %bf.load10 = phi i32 [ %bf.load10.pre, %if.then7 ], [ %bf.load, %if.end5 ]
  %ret_val.1 = phi i8* [ %call, %if.then7 ], [ %ret_val.0, %if.end5 ]
  %bf.clear12 = and i32 %bf.load10, 4096
  %tobool13 = icmp eq i32 %bf.clear12, 0
  br i1 %tobool13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end8
  %call15 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([7 x i8]* @.str12, i64 0, i64 0), i8* %ret_val.1, i8* null) #7
  br label %if.end16

if.end16:                                         ; preds = %if.end8, %if.then14
  %ret_val.2 = phi i8* [ %call15, %if.then14 ], [ %ret_val.1, %if.end8 ]
  store i8* getelementptr inbounds ([1 x i8]* @.str4, i64 0, i64 0), i8** @data_type, align 8, !tbaa !3
  %bf.load18 = load i32* %3, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp ne i32 %bf.clear19, 30
  %tobool21 = icmp eq i32 %is_func_definition, 0
  %or.cond = or i1 %cmp20, %tobool21
  br i1 %or.cond, label %if.else29, label %if.then22

if.then22:                                        ; preds = %if.end16
  %call23 = tail call fastcc i8* @gen_formal_list_for_func_def(%union.tree_node* %decl, i32 0) #6
  %call24 = tail call noalias i8* (i8*, ...)* @concat(i8* %ret_val.2, i8* %call23, i8* null) #7
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !3
  %type27 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type27, align 8, !tbaa !3
  %call28 = tail call fastcc i8* @gen_type(i8* %call24, %union.tree_node* %5, i32 %style) #6
  br label %if.end33

if.else29:                                        ; preds = %if.end16
  %type31 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type31, align 8, !tbaa !3
  %call32 = tail call fastcc i8* @gen_type(i8* %ret_val.2, %union.tree_node* %6, i32 %style) #6
  br label %if.end33

if.end33:                                         ; preds = %if.else29, %if.then22
  %ret_val.3 = phi i8* [ %call28, %if.then22 ], [ %call32, %if.else29 ]
  %call34 = tail call fastcc noalias i8* @affix_data_type(i8* %ret_val.3) #6
  %bf.load37 = load i32* %3, align 8
  %bf.clear38 = and i32 %bf.load37, 255
  %cmp39 = icmp eq i32 %bf.clear38, 30
  br i1 %cmp39, label %if.end48, label %land.lhs.true40

land.lhs.true40:                                  ; preds = %if.end33
  %regdecl_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %7 = bitcast [8 x i8]* %regdecl_flag to i64*
  %bf.load42 = load i64* %7, align 8
  %bf.cast = and i64 %bf.load42, 1024
  %tobool45 = icmp eq i64 %bf.cast, 0
  br i1 %tobool45, label %if.end48, label %if.then46

if.then46:                                        ; preds = %land.lhs.true40
  %call47 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([10 x i8]* @.str13, i64 0, i64 0), i8* %call34, i8* null) #7
  %bf.load50.pre = load i32* %3, align 8
  br label %if.end48

if.end48:                                         ; preds = %land.lhs.true40, %if.end33, %if.then46
  %bf.load50 = phi i32 [ %bf.load50.pre, %if.then46 ], [ %bf.load37, %land.lhs.true40 ], [ %bf.load37, %if.end33 ]
  %ret_val.4 = phi i8* [ %call47, %if.then46 ], [ %call34, %land.lhs.true40 ], [ %call34, %if.end33 ]
  %bf.clear52 = and i32 %bf.load50, 524288
  %tobool53 = icmp eq i32 %bf.clear52, 0
  br i1 %tobool53, label %if.end56, label %if.then54

if.then54:                                        ; preds = %if.end48
  %call55 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([8 x i8]* @.str14, i64 0, i64 0), i8* %ret_val.4, i8* null) #7
  %bf.load59.pre = load i32* %3, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.end48, %if.then54
  %bf.load59 = phi i32 [ %bf.load59.pre, %if.then54 ], [ %bf.load50, %if.end48 ]
  %ret_val.5 = phi i8* [ %call55, %if.then54 ], [ %ret_val.4, %if.end48 ]
  %8 = and i32 %bf.load59, 524543
  %9 = icmp eq i32 %8, 30
  br i1 %9, label %if.then69, label %return

if.then69:                                        ; preds = %if.end56
  %call70 = tail call noalias i8* (i8*, ...)* @concat(i8* getelementptr inbounds ([8 x i8]* @.str15, i64 0, i64 0), i8* %ret_val.5, i8* null) #7
  br label %return

return:                                           ; preds = %if.end56, %if.then69, %if.end
  %retval.0 = phi i8* [ %ret_val.0, %if.end ], [ %call70, %if.then69 ], [ %ret_val.5, %if.end56 ]
  ret i8* %retval.0
}
