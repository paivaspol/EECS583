define internal fastcc %union.tree_node* @lex_number(i8* %str, i32 %len) #0 {
entry:
  %parts = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %parts to i8*
  %real = alloca %struct.realvaluetype, align 8
  %args = alloca %struct.pf_args, align 8
  call void @llvm.lifetime.start(i64 64, i8* %0) #5
  %cmp = icmp eq i32 %len, 1
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 64, i32 16, i1 false)
  %cmp13 = icmp ugt i32 %len, 2
  %1 = load i8* %str, align 1, !tbaa !1
  %cmp17 = icmp eq i8 %1, 48
  br i1 %cmp13, label %land.lhs.true, label %if.else29

if.then:                                          ; preds = %entry
  %2 = load i8* %str, align 1, !tbaa !1
  switch i8 %2, label %if.else8 [
    i8 48, label %if.then3
    i8 49, label %if.then7
  ]

if.then3:                                         ; preds = %if.then
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !0
  br label %cleanup745

if.then7:                                         ; preds = %if.then
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !0
  br label %cleanup745

if.else8:                                         ; preds = %if.then
  %conv = sext i8 %2 to i64
  %sub = add i64 %conv, -48
  %call = call %union.tree_node* @build_int_2_wide(i64 %sub, i64 0) #7
  br label %cleanup745

land.lhs.true:                                    ; preds = %for.cond.preheader
  br i1 %cmp17, label %land.lhs.true19, label %do.body.preheader

land.lhs.true19:                                  ; preds = %land.lhs.true
  %arrayidx20 = getelementptr inbounds i8* %str, i64 1
  %5 = load i8* %arrayidx20, align 1, !tbaa !1
  switch i8 %5, label %land.lhs.true34 [
    i8 120, label %if.then28
    i8 88, label %if.then28
  ]

if.then28:                                        ; preds = %land.lhs.true19, %land.lhs.true19
  %add.ptr = getelementptr inbounds i8* %str, i64 2
  br label %do.body.preheader

if.else29:                                        ; preds = %for.cond.preheader
  br i1 %cmp17, label %land.lhs.true34, label %do.body.preheader

land.lhs.true34:                                  ; preds = %land.lhs.true19, %if.else29
  %arrayidx35 = getelementptr inbounds i8* %str, i64 1
  %6 = load i8* %arrayidx35, align 1, !tbaa !1
  %idxprom37 = zext i8 %6 to i64
  %arrayidx38 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom37
  %7 = load i16* %arrayidx38, align 2, !tbaa !7
  %and40 = and i16 %7, 4
  %tobool = icmp eq i16 %and40, 0
  %str.arrayidx35 = select i1 %tobool, i8* %str, i8* %arrayidx35
  %. = select i1 %tobool, i32 10, i32 8
  br label %do.body.preheader

do.body.preheader:                                ; preds = %if.else29, %if.then28, %land.lhs.true34, %land.lhs.true
  %p.0.ph = phi i8* [ %str, %land.lhs.true ], [ %str.arrayidx35, %land.lhs.true34 ], [ %add.ptr, %if.then28 ], [ %str, %if.else29 ]
  %base.0.ph = phi i32 [ 10, %land.lhs.true ], [ %., %land.lhs.true34 ], [ 16, %if.then28 ], [ 10, %if.else29 ]
  %arrayidx142 = getelementptr inbounds [16 x i32]* %parts, i64 0, i64 0
  %arrayidx148 = getelementptr inbounds [16 x i32]* %parts, i64 0, i64 15
  %idx.ext = zext i32 %len to i64
  %add.ptr158 = getelementptr inbounds i8* %str, i64 %idx.ext
  br label %do.body

do.body:                                          ; preds = %do.cond157, %do.body.preheader
  %numdigits.0 = phi i32 [ 0, %do.body.preheader ], [ %numdigits.1, %do.cond157 ]
  %overflow.0 = phi i32 [ 0, %do.body.preheader ], [ %overflow.1, %do.cond157 ]
  %p.0 = phi i8* [ %p.0.ph, %do.body.preheader ], [ %incdec.ptr, %do.cond157 ]
  %floatflag.0 = phi i32 [ 0, %do.body.preheader ], [ %floatflag.1, %do.cond157 ]
  %largest_digit.0 = phi i32 [ 0, %do.body.preheader ], [ %largest_digit.2, %do.cond157 ]
  %base.0 = phi i32 [ %base.0.ph, %do.body.preheader ], [ %base.1, %do.cond157 ]
  %incdec.ptr = getelementptr inbounds i8* %p.0, i64 1
  %8 = load i8* %p.0, align 1, !tbaa !1
  %conv45 = sext i8 %8 to i32
  switch i8 %8, label %if.else74 [
    i8 46, label %if.then48
    i8 95, label %do.body71
  ]

if.then48:                                        ; preds = %do.body
  switch i32 %floatflag.0, label %if.else60 [
    i32 1, label %do.body52
    i32 2, label %do.body57
  ]

do.body52:                                        ; preds = %if.then48
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str10, i64 0, i64 0)) #7
  br label %syntax_error

do.body57:                                        ; preds = %if.then48
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str11, i64 0, i64 0)) #7
  br label %syntax_error

if.else60:                                        ; preds = %if.then48
  %cmp63 = icmp eq i32 %base.0, 8
  %.base.0 = select i1 %cmp63, i32 10, i32 %base.0
  br label %do.cond157

do.body71:                                        ; preds = %do.body
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([21 x i8]* @.str12, i64 0, i64 0)) #7
  br label %syntax_error

if.else74:                                        ; preds = %do.body
  %and75 = and i32 %conv45, 255
  %idxprom76934 = zext i32 %and75 to i64
  %arrayidx77 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom76934
  %9 = load i16* %arrayidx77, align 2, !tbaa !7
  %conv78 = zext i16 %9 to i32
  %and79 = and i32 %conv78, 4
  %tobool80 = icmp eq i32 %and79, 0
  br i1 %tobool80, label %lor.lhs.false81, label %if.then91

lor.lhs.false81:                                  ; preds = %if.else74
  %cmp82 = icmp eq i32 %base.0, 16
  br i1 %cmp82, label %land.lhs.true84, label %if.else96

land.lhs.true84:                                  ; preds = %lor.lhs.false81
  %and89 = and i32 %conv78, 256
  %tobool90 = icmp eq i32 %and89, 0
  br i1 %tobool90, label %land.lhs.true109, label %if.then91

if.then91:                                        ; preds = %land.lhs.true84, %if.else74
  %idxprom93 = zext i8 %8 to i64
  %arrayidx94 = getelementptr inbounds [256 x i8]* @_hex_value, i64 0, i64 %idxprom93
  %10 = load i8* %arrayidx94, align 1, !tbaa !1
  %conv95 = sext i8 %10 to i32
  %cmp119 = icmp slt i32 %conv95, %largest_digit.0
  %largest_digit.0.conv95 = select i1 %cmp119, i32 %largest_digit.0, i32 %conv95
  br label %for.body127

if.else96:                                        ; preds = %lor.lhs.false81
  %cmp97 = icmp slt i32 %base.0, 11
  br i1 %cmp97, label %land.lhs.true99, label %if.else116

land.lhs.true99:                                  ; preds = %if.else96
  %11 = and i8 %8, -33
  %12 = icmp eq i8 %11, 69
  br i1 %12, label %do.end161, label %if.else116

land.lhs.true109:                                 ; preds = %land.lhs.true84
  %.pre = and i8 %8, -33
  %13 = icmp eq i8 %.pre, 80
  br i1 %13, label %do.end161, label %if.else116

if.else116:                                       ; preds = %land.lhs.true99, %if.else96, %land.lhs.true109
  %base.01123 = phi i32 [ %base.0, %if.else96 ], [ 16, %land.lhs.true109 ], [ %base.0, %land.lhs.true99 ]
  br label %do.end161

for.body127:                                      ; preds = %for.inc145, %if.then91
  %indvars.iv1078 = phi i64 [ 0, %if.then91 ], [ %indvars.iv.next1079, %for.inc145 ]
  %arrayidx129 = getelementptr inbounds [16 x i32]* %parts, i64 0, i64 %indvars.iv1078
  %14 = load i32* %arrayidx129, align 4, !tbaa !3
  %mul = mul i32 %14, %base.0
  store i32 %mul, i32* %arrayidx129, align 4, !tbaa !3
  %15 = trunc i64 %indvars.iv1078 to i32
  %tobool130 = icmp eq i32 %15, 0
  br i1 %tobool130, label %if.else141, label %if.then131

if.then131:                                       ; preds = %for.body127
  %16 = add nsw i64 %indvars.iv1078, -1
  %arrayidx134 = getelementptr inbounds [16 x i32]* %parts, i64 0, i64 %16
  %17 = load i32* %arrayidx134, align 4, !tbaa !3
  %shr = lshr i32 %17, 8
  %add = add i32 %shr, %mul
  store i32 %add, i32* %arrayidx129, align 4, !tbaa !3
  %and140 = and i32 %17, 255
  store i32 %and140, i32* %arrayidx134, align 4, !tbaa !3
  br label %for.inc145

if.else141:                                       ; preds = %for.body127
  %18 = load i32* %arrayidx142, align 16, !tbaa !3
  %add143 = add i32 %18, %conv95
  store i32 %add143, i32* %arrayidx142, align 16, !tbaa !3
  br label %for.inc145

for.inc145:                                       ; preds = %if.then131, %if.else141
  %indvars.iv.next1079 = add i64 %indvars.iv1078, 1
  %lftr.wideiv1081 = trunc i64 %indvars.iv.next1079 to i32
  %exitcond1082 = icmp eq i32 %lftr.wideiv1081, 16
  br i1 %exitcond1082, label %for.end147, label %for.body127

for.end147:                                       ; preds = %for.inc145
  %inc123 = add nsw i32 %numdigits.0, 1
  %19 = load i32* %arrayidx148, align 4, !tbaa !3
  %tobool150 = icmp ugt i32 %19, 255
  br i1 %tobool150, label %if.then151, label %do.cond157

if.then151:                                       ; preds = %for.end147
  %and153 = and i32 %19, 255
  store i32 %and153, i32* %arrayidx148, align 4, !tbaa !3
  br label %do.cond157

do.cond157:                                       ; preds = %if.else60, %for.end147, %if.then151
  %numdigits.1 = phi i32 [ %inc123, %if.then151 ], [ %inc123, %for.end147 ], [ %numdigits.0, %if.else60 ]
  %overflow.1 = phi i32 [ 1, %if.then151 ], [ %overflow.0, %for.end147 ], [ %overflow.0, %if.else60 ]
  %floatflag.1 = phi i32 [ %floatflag.0, %if.then151 ], [ %floatflag.0, %for.end147 ], [ 1, %if.else60 ]
  %largest_digit.2 = phi i32 [ %largest_digit.0.conv95, %if.then151 ], [ %largest_digit.0.conv95, %for.end147 ], [ %largest_digit.0, %if.else60 ]
  %base.1 = phi i32 [ %base.0, %if.then151 ], [ %base.0, %for.end147 ], [ %.base.0, %if.else60 ]
  %cmp159 = icmp ult i8* %incdec.ptr, %add.ptr158
  br i1 %cmp159, label %do.body, label %do.end161

do.end161:                                        ; preds = %do.cond157, %land.lhs.true109, %land.lhs.true99, %if.else116
  %numdigits.2 = phi i32 [ %numdigits.0, %if.else116 ], [ %numdigits.0, %land.lhs.true99 ], [ %numdigits.0, %land.lhs.true109 ], [ %numdigits.1, %do.cond157 ]
  %overflow.2 = phi i32 [ %overflow.0, %if.else116 ], [ %overflow.0, %land.lhs.true99 ], [ %overflow.0, %land.lhs.true109 ], [ %overflow.1, %do.cond157 ]
  %p.1 = phi i8* [ %p.0, %if.else116 ], [ %incdec.ptr, %land.lhs.true99 ], [ %incdec.ptr, %land.lhs.true109 ], [ %incdec.ptr, %do.cond157 ]
  %floatflag.2 = phi i32 [ %floatflag.0, %if.else116 ], [ 2, %land.lhs.true99 ], [ 2, %land.lhs.true109 ], [ %floatflag.1, %do.cond157 ]
  %largest_digit.3 = phi i32 [ %largest_digit.0, %if.else116 ], [ %largest_digit.0, %land.lhs.true99 ], [ %largest_digit.0, %land.lhs.true109 ], [ %largest_digit.2, %do.cond157 ]
  %base.2 = phi i32 [ %base.01123, %if.else116 ], [ 10, %land.lhs.true99 ], [ 16, %land.lhs.true109 ], [ %base.1, %do.cond157 ]
  %cmp162 = icmp eq i32 %numdigits.2, 0
  br i1 %cmp162, label %do.body165, label %if.end168

do.body165:                                       ; preds = %do.end161
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str13, i64 0, i64 0)) #7
  br label %syntax_error

if.end168:                                        ; preds = %do.end161
  %cmp169 = icmp slt i32 %largest_digit.3, %base.2
  br i1 %cmp169, label %if.end175, label %do.body172

do.body172:                                       ; preds = %if.end168
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([50 x i8]* @.str14, i64 0, i64 0)) #7
  br label %syntax_error

if.end175:                                        ; preds = %if.end168
  %cmp176 = icmp eq i32 %floatflag.2, 0
  br i1 %cmp176, label %while.cond373.preheader, label %if.then178

while.cond373.preheader:                          ; preds = %if.end175
  %cmp376964 = icmp ult i8* %p.1, %add.ptr158
  br i1 %cmp376964, label %while.body378, label %while.end436

if.then178:                                       ; preds = %if.end175
  %20 = bitcast %struct.pf_args* %args to i8*
  call void @llvm.lifetime.start(i64 56, i8* %20) #5
  %cmp179 = icmp eq i32 %base.2, 16
  %21 = load i32* @pedantic, align 4, !tbaa !3
  %tobool182 = icmp ne i32 %21, 0
  %or.cond747 = and i1 %cmp179, %tobool182
  %or.cond747.not = xor i1 %or.cond747, true
  %22 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool184 = icmp ne i32 %22, 0
  %or.cond748 = or i1 %tobool184, %or.cond747.not
  br i1 %or.cond748, label %if.end186, label %if.then185

if.then185:                                       ; preds = %if.then178
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([41 x i8]* @.str15, i64 0, i64 0)) #7
  br label %if.end186

if.end186:                                        ; preds = %if.then178, %if.then185
  %cmp179.not = xor i1 %cmp179, true
  %cmp190 = icmp eq i32 %floatflag.2, 2
  %or.cond = or i1 %cmp190, %cmp179.not
  br i1 %or.cond, label %if.end196, label %do.body193

do.body193:                                       ; preds = %if.end186
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([46 x i8]* @.str16, i64 0, i64 0)) #7
  br label %syntax_error

if.end196:                                        ; preds = %if.end186
  %cmp197 = icmp eq i32 %base.2, 10
  br i1 %cmp197, label %land.lhs.true199, label %lor.lhs.false205

land.lhs.true199:                                 ; preds = %if.end196
  %23 = and i8 %8, -33
  %24 = icmp eq i8 %23, 69
  br i1 %24, label %if.then214, label %lor.lhs.false205

lor.lhs.false205:                                 ; preds = %land.lhs.true199, %if.end196
  br i1 %cmp179, label %land.lhs.true208, label %if.end269

land.lhs.true208:                                 ; preds = %lor.lhs.false205
  %25 = and i8 %8, -33
  %26 = icmp eq i8 %25, 80
  br i1 %26, label %if.then214, label %if.end269

if.then214:                                       ; preds = %land.lhs.true208, %land.lhs.true199
  %cmp217 = icmp ult i8* %p.1, %add.ptr158
  br i1 %cmp217, label %if.then219, label %if.end222

if.then219:                                       ; preds = %if.then214
  %incdec.ptr220 = getelementptr inbounds i8* %p.1, i64 1
  %27 = load i8* %p.1, align 1, !tbaa !1
  %conv221 = sext i8 %27 to i32
  br label %if.end222

if.end222:                                        ; preds = %if.then219, %if.then214
  %c.0 = phi i32 [ %conv221, %if.then219 ], [ %conv45, %if.then214 ]
  %p.2 = phi i8* [ %incdec.ptr220, %if.then219 ], [ %p.1, %if.then214 ]
  %cmp225 = icmp ult i8* %p.2, %add.ptr158
  br i1 %cmp225, label %land.lhs.true227, label %if.end236

land.lhs.true227:                                 ; preds = %if.end222
  switch i32 %c.0, label %if.end236 [
    i32 45, label %if.then233
    i32 43, label %if.then233
  ]

if.then233:                                       ; preds = %land.lhs.true227, %land.lhs.true227
  %incdec.ptr234 = getelementptr inbounds i8* %p.2, i64 1
  %28 = load i8* %p.2, align 1, !tbaa !1
  %conv235 = sext i8 %28 to i32
  br label %if.end236

if.end236:                                        ; preds = %land.lhs.true227, %if.then233, %if.end222
  %c.1 = phi i32 [ %conv235, %if.then233 ], [ %c.0, %land.lhs.true227 ], [ %c.0, %if.end222 ]
  %p.3 = phi i8* [ %incdec.ptr234, %if.then233 ], [ %p.2, %land.lhs.true227 ], [ %p.2, %if.end222 ]
  %and237 = and i32 %c.1, 255
  %idxprom238935 = zext i32 %and237 to i64
  %arrayidx239 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom238935
  %29 = load i16* %arrayidx239, align 2, !tbaa !7
  %and241 = and i16 %29, 4
  %tobool242 = icmp eq i16 %and241, 0
  br i1 %tobool242, label %do.body244, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end236
  %cmp2501000 = icmp ult i8* %p.3, %add.ptr158
  br i1 %cmp2501000, label %land.rhs, label %while.end

do.body244:                                       ; preds = %if.end236
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str17, i64 0, i64 0)) #7
  br label %syntax_error

land.rhs:                                         ; preds = %while.cond.preheader, %while.body
  %p.41002 = phi i8* [ %incdec.ptr258, %while.body ], [ %p.3, %while.cond.preheader ]
  %c.21001 = phi i32 [ %conv259, %while.body ], [ %c.1, %while.cond.preheader ]
  %and252 = and i32 %c.21001, 255
  %idxprom253937 = zext i32 %and252 to i64
  %arrayidx254 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom253937
  %30 = load i16* %arrayidx254, align 2, !tbaa !7
  %and256 = and i16 %30, 4
  %tobool257 = icmp eq i16 %and256, 0
  br i1 %tobool257, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %incdec.ptr258 = getelementptr inbounds i8* %p.41002, i64 1
  %31 = load i8* %p.41002, align 1, !tbaa !1
  %conv259 = sext i8 %31 to i32
  %cmp250 = icmp ult i8* %incdec.ptr258, %add.ptr158
  br i1 %cmp250, label %land.rhs, label %while.end

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond.preheader
  %p.4.lcssa = phi i8* [ %p.3, %while.cond.preheader ], [ %p.41002, %land.rhs ], [ %incdec.ptr258, %while.body ]
  %c.2.lcssa = phi i32 [ %c.1, %while.cond.preheader ], [ %c.21001, %land.rhs ], [ %conv259, %while.body ]
  %and260 = and i32 %c.2.lcssa, 255
  %idxprom261936 = zext i32 %and260 to i64
  %arrayidx262 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom261936
  %32 = load i16* %arrayidx262, align 2, !tbaa !7
  %and264 = and i16 %32, 4
  %tobool265 = icmp eq i16 %and264, 0
  %incdec.ptr267 = getelementptr inbounds i8* %p.4.lcssa, i64 -1
  %incdec.ptr267.p.4 = select i1 %tobool265, i8* %incdec.ptr267, i8* %p.4.lcssa
  br label %if.end269

if.end269:                                        ; preds = %while.end, %land.lhs.true208, %lor.lhs.false205
  %p.5 = phi i8* [ %p.1, %land.lhs.true208 ], [ %p.1, %lor.lhs.false205 ], [ %incdec.ptr267.p.4, %while.end ]
  %sub.ptr.lhs.cast = ptrtoint i8* %p.5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %str to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add270 = add nsw i64 %sub.ptr.sub, 1
  %33 = alloca i8, i64 %add270, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %str, i64 %sub.ptr.sub, i32 1, i1 false)
  %arrayidx277 = getelementptr inbounds i8* %33, i64 %sub.ptr.sub
  store i8 0, i8* %arrayidx277, align 1, !tbaa !1
  %cmp281991 = icmp ult i8* %p.5, %add.ptr158
  br i1 %cmp281991, label %while.body283, label %while.end331

while.body283:                                    ; preds = %if.end269, %while.cond278.backedge
  %lflag.0995 = phi i32 [ %lflag.0.be, %while.cond278.backedge ], [ 0, %if.end269 ]
  %fflag.0994 = phi i32 [ %fflag.0.be, %while.cond278.backedge ], [ 0, %if.end269 ]
  %imag.0993 = phi i32 [ %imag.0.be, %while.cond278.backedge ], [ 0, %if.end269 ]
  %p.6992 = phi i8* [ %incdec.ptr284, %while.cond278.backedge ], [ %p.5, %if.end269 ]
  %incdec.ptr284 = getelementptr inbounds i8* %p.6992, i64 1
  %34 = load i8* %p.6992, align 1, !tbaa !1
  %conv285 = sext i8 %34 to i32
  switch i32 %conv285, label %do.body328 [
    i32 102, label %sw.bb
    i32 70, label %sw.bb
    i32 108, label %sw.bb301
    i32 76, label %sw.bb301
    i32 105, label %sw.bb317
    i32 73, label %sw.bb317
    i32 106, label %sw.bb317
    i32 74, label %sw.bb317
  ]

sw.bb:                                            ; preds = %while.body283, %while.body283
  %tobool286 = icmp eq i32 %fflag.0994, 0
  br i1 %tobool286, label %if.else291, label %do.body288

do.body288:                                       ; preds = %sw.bb
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([46 x i8]* @.str18, i64 0, i64 0)) #7
  br label %syntax_error

if.else291:                                       ; preds = %sw.bb
  %35 = load i32* @warn_traditional, align 4, !tbaa !3
  %tobool292 = icmp eq i32 %35, 0
  %36 = load i32* @in_system_header, align 4, !tbaa !3
  %tobool294 = icmp ne i32 %36, 0
  %or.cond752 = or i1 %tobool292, %tobool294
  br i1 %or.cond752, label %while.cond278.backedge, label %land.lhs.true295

land.lhs.true295:                                 ; preds = %if.else291
  %37 = load %struct.cpp_reader** @parse_in, align 8, !tbaa !0
  %call296 = call i32 @cpp_sys_macro_p(%struct.cpp_reader* %37) #7
  %tobool297 = icmp eq i32 %call296, 0
  br i1 %tobool297, label %if.then298, label %while.cond278.backedge

while.cond278.backedge:                           ; preds = %land.lhs.true295, %if.then298, %if.else291, %land.lhs.true311, %if.then314, %if.else307, %if.else323, %if.then325
  %imag.0.be = phi i32 [ %imag.0993, %land.lhs.true295 ], [ %imag.0993, %if.then298 ], [ %imag.0993, %if.else291 ], [ %imag.0993, %land.lhs.true311 ], [ %imag.0993, %if.then314 ], [ %imag.0993, %if.else307 ], [ 1, %if.else323 ], [ 1, %if.then325 ]
  %fflag.0.be = phi i32 [ 1, %land.lhs.true295 ], [ 1, %if.then298 ], [ 1, %if.else291 ], [ %fflag.0994, %land.lhs.true311 ], [ %fflag.0994, %if.then314 ], [ %fflag.0994, %if.else307 ], [ %fflag.0994, %if.else323 ], [ %fflag.0994, %if.then325 ]
  %lflag.0.be = phi i32 [ %lflag.0995, %land.lhs.true295 ], [ %lflag.0995, %if.then298 ], [ %lflag.0995, %if.else291 ], [ 1, %land.lhs.true311 ], [ 1, %if.then314 ], [ 1, %if.else307 ], [ %lflag.0995, %if.else323 ], [ %lflag.0995, %if.then325 ]
  %cmp281 = icmp ult i8* %incdec.ptr284, %add.ptr158
  br i1 %cmp281, label %while.body283, label %while.end331

if.then298:                                       ; preds = %land.lhs.true295
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([37 x i8]* @.str19, i64 0, i64 0)) #7
  br label %while.cond278.backedge

sw.bb301:                                         ; preds = %while.body283, %while.body283
  %tobool302 = icmp eq i32 %lflag.0995, 0
  br i1 %tobool302, label %if.else307, label %do.body304

do.body304:                                       ; preds = %sw.bb301
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([46 x i8]* @.str20, i64 0, i64 0)) #7
  br label %syntax_error

if.else307:                                       ; preds = %sw.bb301
  %38 = load i32* @warn_traditional, align 4, !tbaa !3
  %tobool308 = icmp eq i32 %38, 0
  %39 = load i32* @in_system_header, align 4, !tbaa !3
  %tobool310 = icmp ne i32 %39, 0
  %or.cond753 = or i1 %tobool308, %tobool310
  br i1 %or.cond753, label %while.cond278.backedge, label %land.lhs.true311

land.lhs.true311:                                 ; preds = %if.else307
  %40 = load %struct.cpp_reader** @parse_in, align 8, !tbaa !0
  %call312 = call i32 @cpp_sys_macro_p(%struct.cpp_reader* %40) #7
  %tobool313 = icmp eq i32 %call312, 0
  br i1 %tobool313, label %if.then314, label %while.cond278.backedge

if.then314:                                       ; preds = %land.lhs.true311
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([37 x i8]* @.str21, i64 0, i64 0)) #7
  br label %while.cond278.backedge

sw.bb317:                                         ; preds = %while.body283, %while.body283, %while.body283, %while.body283
  %tobool318 = icmp eq i32 %imag.0993, 0
  br i1 %tobool318, label %if.else323, label %do.body320

do.body320:                                       ; preds = %sw.bb317
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([53 x i8]* @.str22, i64 0, i64 0)) #7
  br label %syntax_error

if.else323:                                       ; preds = %sw.bb317
  %41 = load i32* @pedantic, align 4, !tbaa !3
  %tobool324 = icmp eq i32 %41, 0
  br i1 %tobool324, label %while.cond278.backedge, label %if.then325

if.then325:                                       ; preds = %if.else323
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([42 x i8]* @.str23, i64 0, i64 0)) #7
  br label %while.cond278.backedge

do.body328:                                       ; preds = %while.body283
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str24, i64 0, i64 0)) #7
  br label %syntax_error

while.end331:                                     ; preds = %while.cond278.backedge, %if.end269
  %lflag.0.lcssa = phi i32 [ 0, %if.end269 ], [ %lflag.0.be, %while.cond278.backedge ]
  %fflag.0.lcssa = phi i32 [ 0, %if.end269 ], [ %fflag.0.be, %while.cond278.backedge ]
  %imag.0.lcssa = phi i32 [ 0, %if.end269 ], [ %imag.0.be, %while.cond278.backedge ]
  %p.6.lcssa = phi i8* [ %p.5, %if.end269 ], [ %incdec.ptr284, %while.cond278.backedge ]
  %str332 = getelementptr inbounds %struct.pf_args* %args, i64 0, i32 0
  store i8* %33, i8** %str332, align 8, !tbaa !0
  %fflag333 = getelementptr inbounds %struct.pf_args* %args, i64 0, i32 1
  store i32 %fflag.0.lcssa, i32* %fflag333, align 8, !tbaa !3
  %lflag334 = getelementptr inbounds %struct.pf_args* %args, i64 0, i32 2
  store i32 %lflag.0.lcssa, i32* %lflag334, align 4, !tbaa !3
  %base335 = getelementptr inbounds %struct.pf_args* %args, i64 0, i32 3
  store i32 %base.2, i32* %base335, align 8, !tbaa !3
  %call336 = call i32 @do_float_handler(void (i8*)* @parse_float, i8* %20) #7
  %tobool337 = icmp eq i32 %call336, 0
  br i1 %tobool337, label %do.body341, label %if.then338

if.then338:                                       ; preds = %while.end331
  %value339 = getelementptr inbounds %struct.pf_args* %args, i64 0, i32 5
  %42 = bitcast %struct.realvaluetype* %real to i8*
  %43 = bitcast %struct.realvaluetype* %value339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 24, i32 8, i1 false), !tbaa.struct !9
  %conversion_errno345 = getelementptr inbounds %struct.pf_args* %args, i64 0, i32 4
  %44 = load i32* %conversion_errno345, align 4, !tbaa !3
  %type346 = getelementptr inbounds %struct.pf_args* %args, i64 0, i32 6
  %45 = load %union.tree_node** %type346, align 8, !tbaa !0
  %46 = load i32* @flag_traditional, align 4, !tbaa !3
  %notlhs = icmp eq i32 %44, 34
  %notrhs = icmp eq i32 %46, 0
  %or.cond754.not = and i1 %notrhs, %notlhs
  %47 = load i32* @pedantic, align 4, !tbaa !3
  %tobool352 = icmp ne i32 %47, 0
  %or.cond755 = and i1 %or.cond754.not, %tobool352
  br i1 %or.cond755, label %land.lhs.true353, label %if.end362

do.body341:                                       ; preds = %while.end331
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str25, i64 0, i64 0)) #7
  br label %syntax_error

land.lhs.true353:                                 ; preds = %if.then338
  %call354 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 @dconst1, %struct.realvaluetype* byval align 8 %real) #7
  %cmp355 = icmp eq i32 %call354, -1
  br i1 %cmp355, label %if.then361, label %lor.lhs.false357

lor.lhs.false357:                                 ; preds = %land.lhs.true353
  %call358 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %real, %struct.realvaluetype* byval align 8 @dconstm1) #7
  %cmp359 = icmp eq i32 %call358, -1
  br i1 %cmp359, label %if.then361, label %if.end362

if.then361:                                       ; preds = %lor.lhs.false357, %land.lhs.true353
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([48 x i8]* @.str26, i64 0, i64 0)) #7
  br label %if.end362

if.end362:                                        ; preds = %if.then338, %if.then361, %lor.lhs.false357
  %tobool363 = icmp eq i32 %imag.0.lcssa, 0
  br i1 %tobool363, label %if.else368, label %if.then364

if.then364:                                       ; preds = %if.end362
  %48 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !0
  %call365 = call %union.tree_node* @convert(%union.tree_node* %45, %union.tree_node* %48) #7
  %call366 = call %union.tree_node* @build_real(%union.tree_node* %45, %struct.realvaluetype* byval align 8 %real) #7
  %call367 = call %union.tree_node* @build_complex(%union.tree_node* null, %union.tree_node* %call365, %union.tree_node* %call366) #7
  br label %if.end734

if.else368:                                       ; preds = %if.end362
  %call369 = call %union.tree_node* @build_real(%union.tree_node* %45, %struct.realvaluetype* byval align 8 %real) #7
  br label %if.end734

while.body378:                                    ; preds = %while.cond373.preheader, %while.cond373.backedge
  %suffix_lu.0970 = phi i32 [ %suffix_lu.0.be, %while.cond373.backedge ], [ 0, %while.cond373.preheader ]
  %spec_imag.0969 = phi i32 [ %spec_imag.0.be, %while.cond373.backedge ], [ 0, %while.cond373.preheader ]
  %spec_long_long.0968 = phi i32 [ %spec_long_long.0.be, %while.cond373.backedge ], [ 0, %while.cond373.preheader ]
  %spec_long.0967 = phi i32 [ %spec_long.0.be, %while.cond373.backedge ], [ 0, %while.cond373.preheader ]
  %spec_unsigned.0966 = phi i32 [ %spec_unsigned.0.be, %while.cond373.backedge ], [ 0, %while.cond373.preheader ]
  %p.8965 = phi i8* [ %incdec.ptr379, %while.cond373.backedge ], [ %p.1, %while.cond373.preheader ]
  %incdec.ptr379 = getelementptr inbounds i8* %p.8965, i64 1
  %49 = load i8* %p.8965, align 1, !tbaa !1
  %conv380 = sext i8 %49 to i32
  switch i32 %conv380, label %do.body432 [
    i32 117, label %sw.bb381
    i32 85, label %sw.bb381
    i32 108, label %sw.bb397
    i32 76, label %sw.bb397
    i32 105, label %sw.bb423
    i32 73, label %sw.bb423
    i32 106, label %sw.bb423
    i32 74, label %sw.bb423
  ]

sw.bb381:                                         ; preds = %while.body378, %while.body378
  %tobool382 = icmp eq i32 %spec_unsigned.0966, 0
  br i1 %tobool382, label %if.else384, label %if.then383

if.then383:                                       ; preds = %sw.bb381
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str27, i64 0, i64 0)) #7
  br label %if.end393

if.else384:                                       ; preds = %sw.bb381
  %50 = load i32* @warn_traditional, align 4, !tbaa !3
  %tobool385 = icmp eq i32 %50, 0
  %51 = load i32* @in_system_header, align 4, !tbaa !3
  %tobool387 = icmp ne i32 %51, 0
  %or.cond756 = or i1 %tobool385, %tobool387
  br i1 %or.cond756, label %if.end393, label %land.lhs.true388

land.lhs.true388:                                 ; preds = %if.else384
  %52 = load %struct.cpp_reader** @parse_in, align 8, !tbaa !0
  %call389 = call i32 @cpp_sys_macro_p(%struct.cpp_reader* %52) #7
  %tobool390 = icmp eq i32 %call389, 0
  br i1 %tobool390, label %if.then391, label %if.end393

if.then391:                                       ; preds = %land.lhs.true388
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([37 x i8]* @.str28, i64 0, i64 0)) #7
  br label %if.end393

if.end393:                                        ; preds = %land.lhs.true388, %if.then391, %if.else384, %if.then383
  %tobool394 = icmp eq i32 %spec_long.0967, 0
  %suffix_lu.0. = select i1 %tobool394, i32 %suffix_lu.0970, i32 1
  br label %while.cond373.backedge

sw.bb397:                                         ; preds = %while.body378, %while.body378
  %tobool398 = icmp eq i32 %spec_long.0967, 0
  br i1 %tobool398, label %while.cond373.backedge, label %if.then399

if.then399:                                       ; preds = %sw.bb397
  %tobool400 = icmp eq i32 %spec_long_long.0968, 0
  br i1 %tobool400, label %if.else402, label %if.then401

if.then401:                                       ; preds = %if.then399
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str29, i64 0, i64 0)) #7
  br label %while.cond373.backedge

while.cond373.backedge:                           ; preds = %if.then401, %if.then408, %if.else409, %if.then417, %if.then404, %sw.bb397, %if.else426, %if.then428, %if.then425, %if.end393
  %spec_unsigned.0.be = phi i32 [ 1, %if.end393 ], [ %spec_unsigned.0966, %if.then401 ], [ %spec_unsigned.0966, %if.then408 ], [ %spec_unsigned.0966, %if.else409 ], [ %spec_unsigned.0966, %if.then417 ], [ %spec_unsigned.0966, %if.then404 ], [ %spec_unsigned.0966, %sw.bb397 ], [ %spec_unsigned.0966, %if.else426 ], [ %spec_unsigned.0966, %if.then428 ], [ %spec_unsigned.0966, %if.then425 ]
  %spec_long.0.be = phi i32 [ %spec_long.0967, %if.end393 ], [ %conv380, %if.then401 ], [ %conv380, %if.then408 ], [ %spec_long.0967, %if.else409 ], [ %spec_long.0967, %if.then417 ], [ %conv380, %if.then404 ], [ %conv380, %sw.bb397 ], [ %spec_long.0967, %if.else426 ], [ %spec_long.0967, %if.then428 ], [ %spec_long.0967, %if.then425 ]
  %spec_long_long.0.be = phi i32 [ %spec_long_long.0968, %if.end393 ], [ 1, %if.then401 ], [ 1, %if.then408 ], [ 1, %if.else409 ], [ 1, %if.then417 ], [ 1, %if.then404 ], [ %spec_long_long.0968, %sw.bb397 ], [ %spec_long_long.0968, %if.else426 ], [ %spec_long_long.0968, %if.then428 ], [ %spec_long_long.0968, %if.then425 ]
  %spec_imag.0.be = phi i32 [ %spec_imag.0969, %if.end393 ], [ %spec_imag.0969, %if.then401 ], [ %spec_imag.0969, %if.then408 ], [ %spec_imag.0969, %if.else409 ], [ %spec_imag.0969, %if.then417 ], [ %spec_imag.0969, %if.then404 ], [ %spec_imag.0969, %sw.bb397 ], [ 1, %if.else426 ], [ 1, %if.then428 ], [ 1, %if.then425 ]
  %suffix_lu.0.be = phi i32 [ %suffix_lu.0., %if.end393 ], [ %suffix_lu.0970, %if.then401 ], [ 0, %if.then408 ], [ 0, %if.else409 ], [ 0, %if.then417 ], [ %suffix_lu.0970, %if.then404 ], [ %suffix_lu.0970, %sw.bb397 ], [ %suffix_lu.0970, %if.else426 ], [ %suffix_lu.0970, %if.then428 ], [ %suffix_lu.0970, %if.then425 ]
  %cmp376 = icmp ult i8* %incdec.ptr379, %add.ptr158
  br i1 %cmp376, label %while.body378, label %while.end436

if.else402:                                       ; preds = %if.then399
  %tobool403 = icmp eq i32 %suffix_lu.0970, 0
  br i1 %tobool403, label %if.else405, label %if.then404

if.then404:                                       ; preds = %if.else402
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str30, i64 0, i64 0)) #7
  br label %while.cond373.backedge

if.else405:                                       ; preds = %if.else402
  %cmp406 = icmp eq i32 %conv380, %spec_long.0967
  br i1 %cmp406, label %if.else409, label %if.then408

if.then408:                                       ; preds = %if.else405
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str31, i64 0, i64 0)) #7
  br label %while.cond373.backedge

if.else409:                                       ; preds = %if.else405
  %53 = load i32* @pedantic, align 4, !tbaa !3
  %tobool410 = icmp eq i32 %53, 0
  %54 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool412 = icmp ne i32 %54, 0
  %or.cond757 = or i1 %tobool410, %tobool412
  %55 = load i32* @in_system_header, align 4, !tbaa !3
  %tobool414 = icmp ne i32 %55, 0
  %or.cond758 = or i1 %or.cond757, %tobool414
  %or.cond758.not = xor i1 %or.cond758, true
  %56 = load i32* @warn_long_long, align 4, !tbaa !3
  %tobool416 = icmp ne i32 %56, 0
  %or.cond759 = and i1 %tobool416, %or.cond758.not
  br i1 %or.cond759, label %if.then417, label %while.cond373.backedge

if.then417:                                       ; preds = %if.else409
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([44 x i8]* @.str32, i64 0, i64 0)) #7
  br label %while.cond373.backedge

sw.bb423:                                         ; preds = %while.body378, %while.body378, %while.body378, %while.body378
  %tobool424 = icmp eq i32 %spec_imag.0969, 0
  br i1 %tobool424, label %if.else426, label %if.then425

if.then425:                                       ; preds = %sw.bb423
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([52 x i8]* @.str33, i64 0, i64 0)) #7
  br label %while.cond373.backedge

if.else426:                                       ; preds = %sw.bb423
  %57 = load i32* @pedantic, align 4, !tbaa !3
  %tobool427 = icmp eq i32 %57, 0
  br i1 %tobool427, label %while.cond373.backedge, label %if.then428

if.then428:                                       ; preds = %if.else426
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([42 x i8]* @.str23, i64 0, i64 0)) #7
  br label %while.cond373.backedge

do.body432:                                       ; preds = %while.body378
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str34, i64 0, i64 0)) #7
  br label %syntax_error

while.end436:                                     ; preds = %while.cond373.backedge, %while.cond373.preheader
  %spec_imag.0.lcssa = phi i32 [ 0, %while.cond373.preheader ], [ %spec_imag.0.be, %while.cond373.backedge ]
  %spec_long_long.0.lcssa = phi i32 [ 0, %while.cond373.preheader ], [ %spec_long_long.0.be, %while.cond373.backedge ]
  %spec_long.0.lcssa = phi i32 [ 0, %while.cond373.preheader ], [ %spec_long.0.be, %while.cond373.backedge ]
  %spec_unsigned.0.lcssa = phi i32 [ 0, %while.cond373.preheader ], [ %spec_unsigned.0.be, %while.cond373.backedge ]
  %p.8.lcssa = phi i8* [ %p.1, %while.cond373.preheader ], [ %incdec.ptr379, %while.cond373.backedge ]
  %tobool437 = icmp eq i32 %overflow.2, 0
  br i1 %tobool437, label %if.end439, label %if.then438

if.then438:                                       ; preds = %while.end436
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([92 x i8]* @.str35, i64 0, i64 0), i32 128) #7
  br label %if.end439

if.end439:                                        ; preds = %while.end436, %if.then438
  %warn.0 = phi i32 [ 1, %if.then438 ], [ 0, %while.end436 ]
  br label %for.body443

for.body443:                                      ; preds = %for.body443, %if.end439
  %indvars.iv = phi i64 [ 0, %if.end439 ], [ %indvars.iv.next, %for.body443 ]
  %low.0957 = phi i64 [ 0, %if.end439 ], [ %or455, %for.body443 ]
  %high.0956 = phi i64 [ 0, %if.end439 ], [ %or, %for.body443 ]
  %58 = shl i64 %indvars.iv, 32
  %sext = add i64 %58, 34359738368
  %idxprom445 = ashr exact i64 %sext, 32
  %arrayidx446 = getelementptr inbounds [16 x i32]* %parts, i64 0, i64 %idxprom445
  %59 = load i32* %arrayidx446, align 4, !tbaa !3
  %conv447 = zext i32 %59 to i64
  %60 = shl nsw i64 %indvars.iv, 3
  %shl = shl i64 %conv447, %60
  %or = or i64 %shl, %high.0956
  %sext1150 = shl i64 %indvars.iv, 32
  %idxprom449 = ashr exact i64 %sext1150, 32
  %arrayidx450 = getelementptr inbounds [16 x i32]* %parts, i64 0, i64 %idxprom449
  %61 = load i32* %arrayidx450, align 4, !tbaa !3
  %conv451 = zext i32 %61 to i64
  %shl454 = shl i64 %conv451, %60
  %or455 = or i64 %shl454, %low.0957
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 8
  br i1 %exitcond, label %for.end458, label %for.body443

for.end458:                                       ; preds = %for.body443
  %call459 = call %union.tree_node* @build_int_2_wide(i64 %or455, i64 %or) #7
  %62 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !0
  %type460 = getelementptr inbounds %union.tree_node* %call459, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %62, %union.tree_node** %type460, align 8, !tbaa !0
  %63 = load i32* @warn_traditional, align 4, !tbaa !3
  %64 = load i32* @flag_traditional, align 4, !tbaa !3
  %65 = or i32 %64, %63
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %if.end520, label %if.then464

if.then464:                                       ; preds = %for.end458
  %tobool465 = icmp ne i32 %spec_long.0.lcssa, 0
  %cmp467 = icmp eq i32 %base.2, 10
  %or.cond940 = or i1 %tobool465, %cmp467
  br i1 %or.cond940, label %if.else474, label %land.lhs.true469

land.lhs.true469:                                 ; preds = %if.then464
  %67 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !0
  %call470 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %67) #7
  %tobool471 = icmp eq i32 %call470, 0
  br i1 %tobool471, label %if.else474, label %if.then472

if.then472:                                       ; preds = %land.lhs.true469
  %tobool473 = icmp ne i32 %spec_unsigned.0.lcssa, 0
  %68 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !0
  %69 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cond = select i1 %tobool473, %union.tree_node* %68, %union.tree_node* %69
  br label %if.end520

if.else474:                                       ; preds = %land.lhs.true469, %if.then464
  %tobool465.not = xor i1 %tobool465, true
  %or.cond941 = and i1 %cmp467, %tobool465.not
  br i1 %or.cond941, label %land.lhs.true479, label %if.else488

land.lhs.true479:                                 ; preds = %if.else474
  %70 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %call480 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %70) #7
  %tobool481 = icmp eq i32 %call480, 0
  br i1 %tobool481, label %if.else488, label %if.then482

if.then482:                                       ; preds = %land.lhs.true479
  %tobool483 = icmp ne i32 %spec_unsigned.0.lcssa, 0
  %71 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !0
  %72 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cond487 = select i1 %tobool483, %union.tree_node* %71, %union.tree_node* %72
  br label %if.end520

if.else488:                                       ; preds = %if.else474, %land.lhs.true479
  %tobool489 = icmp eq i32 %spec_long_long.0.lcssa, 0
  %tobool491 = icmp ne i32 %spec_unsigned.0.lcssa, 0
  br i1 %tobool489, label %if.then490, label %if.else496

if.then490:                                       ; preds = %if.else488
  %73 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 8, !tbaa !0
  %74 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !tbaa !0
  %cond495 = select i1 %tobool491, %union.tree_node* %73, %union.tree_node* %74
  br label %if.end520

if.else496:                                       ; preds = %if.else488
  %75 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !0
  %76 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !0
  %cond501 = select i1 %tobool491, %union.tree_node* %75, %union.tree_node* %76
  %call502 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %cond501) #7
  %tobool503 = icmp eq i32 %call502, 0
  br i1 %tobool503, label %if.else510, label %if.then504

if.then504:                                       ; preds = %if.else496
  %77 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !0
  %78 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !0
  %cond509 = select i1 %tobool491, %union.tree_node* %77, %union.tree_node* %78
  br label %if.end520

if.else510:                                       ; preds = %if.else496
  %79 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 10), align 8, !tbaa !0
  %80 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 9), align 8, !tbaa !0
  %cond515 = select i1 %tobool491, %union.tree_node* %79, %union.tree_node* %80
  br label %if.end520

if.end520:                                        ; preds = %for.end458, %if.then472, %if.then490, %if.else510, %if.then504, %if.then482
  %trad_type.0 = phi %union.tree_node* [ %cond509, %if.then504 ], [ %cond515, %if.else510 ], [ %cond495, %if.then490 ], [ %cond487, %if.then482 ], [ %cond, %if.then472 ], [ null, %for.end458 ]
  %81 = load i32* @warn_traditional, align 4, !tbaa !3
  %tobool521 = icmp eq i32 %81, 0
  %82 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool523 = icmp ne i32 %82, 0
  %or.cond761 = and i1 %tobool521, %tobool523
  br i1 %or.cond761, label %if.end581, label %if.then524

if.then524:                                       ; preds = %if.end520
  %tobool525 = icmp ne i32 %spec_long.0.lcssa, 0
  %tobool525.not = xor i1 %tobool525, true
  %tobool527 = icmp eq i32 %spec_unsigned.0.lcssa, 0
  %or.cond942 = and i1 %tobool527, %tobool525.not
  br i1 %or.cond942, label %land.lhs.true528, label %if.else532

land.lhs.true528:                                 ; preds = %if.then524
  %83 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %call529 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %83) #7
  %tobool530 = icmp eq i32 %call529, 0
  br i1 %tobool530, label %if.else532, label %if.then531

if.then531:                                       ; preds = %land.lhs.true528
  %84 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  br label %if.end581

if.else532:                                       ; preds = %if.then524, %land.lhs.true528
  br i1 %tobool525, label %if.else543, label %land.lhs.true534

land.lhs.true534:                                 ; preds = %if.else532
  %cmp535 = icmp eq i32 %base.2, 10
  %or.cond943 = and i1 %cmp535, %tobool527
  br i1 %or.cond943, label %if.else543, label %land.lhs.true539

land.lhs.true539:                                 ; preds = %land.lhs.true534
  %85 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !0
  %call540 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %85) #7
  %tobool541 = icmp eq i32 %call540, 0
  br i1 %tobool541, label %if.else543, label %if.then542

if.then542:                                       ; preds = %land.lhs.true539
  %86 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !0
  br label %if.end581

if.else543:                                       ; preds = %land.lhs.true534, %land.lhs.true539, %if.else532
  %tobool544 = icmp ne i32 %spec_unsigned.0.lcssa, 0
  %tobool544.not = xor i1 %tobool544, true
  %tobool546 = icmp eq i32 %spec_long_long.0.lcssa, 0
  %or.cond944 = and i1 %tobool546, %tobool544.not
  br i1 %or.cond944, label %land.lhs.true547, label %if.else551

land.lhs.true547:                                 ; preds = %if.else543
  %87 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !tbaa !0
  %call548 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %87) #7
  %tobool549 = icmp eq i32 %call548, 0
  br i1 %tobool549, label %if.else551, label %if.then550

if.then550:                                       ; preds = %land.lhs.true547
  %88 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !tbaa !0
  br label %if.end581

if.else551:                                       ; preds = %if.else543, %land.lhs.true547
  br i1 %tobool546, label %land.lhs.true553, label %if.else557

land.lhs.true553:                                 ; preds = %if.else551
  %89 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 8, !tbaa !0
  %call554 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %89) #7
  %tobool555 = icmp eq i32 %call554, 0
  br i1 %tobool555, label %if.else557, label %if.then556

if.then556:                                       ; preds = %land.lhs.true553
  %90 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 8, !tbaa !0
  br label %if.end581

if.else557:                                       ; preds = %land.lhs.true553, %if.else551
  br i1 %tobool544, label %if.else563, label %land.lhs.true559

land.lhs.true559:                                 ; preds = %if.else557
  %91 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !0
  %call560 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %91) #7
  %tobool561 = icmp eq i32 %call560, 0
  br i1 %tobool561, label %if.else563, label %if.then562

if.then562:                                       ; preds = %land.lhs.true559
  %92 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !0
  br label %if.end581

if.else563:                                       ; preds = %land.lhs.true559, %if.else557
  %93 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !0
  %call564 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %93) #7
  %tobool565 = icmp eq i32 %call564, 0
  br i1 %tobool565, label %if.else567, label %if.then566

if.then566:                                       ; preds = %if.else563
  %94 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !0
  br label %if.end581

if.else567:                                       ; preds = %if.else563
  br i1 %tobool544, label %if.else573, label %land.lhs.true569

land.lhs.true569:                                 ; preds = %if.else567
  %95 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 9), align 8, !tbaa !0
  %call570 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %95) #7
  %tobool571 = icmp eq i32 %call570, 0
  br i1 %tobool571, label %if.else573, label %if.then572

if.then572:                                       ; preds = %land.lhs.true569
  %96 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 9), align 8, !tbaa !0
  br label %if.end581

if.else573:                                       ; preds = %land.lhs.true569, %if.else567
  %97 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 10), align 8, !tbaa !0
  br label %if.end581

if.end581:                                        ; preds = %if.then531, %if.then550, %if.then562, %if.then572, %if.else573, %if.then566, %if.then556, %if.then542, %if.end520
  %ansi_type.0 = phi %union.tree_node* [ null, %if.end520 ], [ %94, %if.then566 ], [ %97, %if.else573 ], [ %96, %if.then572 ], [ %92, %if.then562 ], [ %90, %if.then556 ], [ %88, %if.then550 ], [ %86, %if.then542 ], [ %84, %if.then531 ]
  %98 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool582 = icmp ne i32 %98, 0
  %cond586 = select i1 %tobool582, %union.tree_node* %trad_type.0, %union.tree_node* %ansi_type.0
  %99 = load i32* @warn_traditional, align 4, !tbaa !3
  %100 = load i32* @in_system_header, align 4, !tbaa !3
  %notlhs953 = icmp ne i32 %99, 0
  %notrhs954 = icmp eq i32 %100, 0
  %or.cond762.not = and i1 %notrhs954, %notlhs953
  %cmp591 = icmp eq i32 %base.2, 10
  %or.cond945 = and i1 %or.cond762.not, %cmp591
  %or.cond945.not = xor i1 %or.cond945, true
  %cmp594 = icmp eq %union.tree_node* %trad_type.0, %ansi_type.0
  %or.cond946 = or i1 %cmp594, %or.cond945.not
  br i1 %or.cond946, label %if.end620, label %if.then596

if.then596:                                       ; preds = %if.end581
  %type597 = bitcast %union.tree_node* %trad_type.0 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type597, i64 0, i32 6
  %101 = bitcast [4 x i8]* %precision to i32*
  %bf.load = load i32* %101, align 4
  %type598 = bitcast %union.tree_node* %ansi_type.0 to %struct.tree_type*
  %precision599 = getelementptr inbounds %struct.tree_type* %type598, i64 0, i32 6
  %102 = bitcast [4 x i8]* %precision599 to i32*
  %bf.load600 = load i32* %102, align 4
  %103 = xor i32 %bf.load600, %bf.load
  %104 = and i32 %103, 511
  %cmp602 = icmp eq i32 %104, 0
  br i1 %cmp602, label %if.else605, label %if.then604

if.then604:                                       ; preds = %if.then596
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([52 x i8]* @.str36, i64 0, i64 0)) #7
  br label %if.end620

if.else605:                                       ; preds = %if.then596
  %unsigned_flag = getelementptr inbounds %union.tree_node* %trad_type.0, i64 0, i32 0, i32 0, i32 2
  %105 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load607 = load i32* %105, align 8
  %unsigned_flag610 = getelementptr inbounds %union.tree_node* %ansi_type.0, i64 0, i32 0, i32 0, i32 2
  %106 = bitcast [4 x i8]* %unsigned_flag610 to i32*
  %bf.load611 = load i32* %106, align 8
  %bf.lshr939 = xor i32 %bf.load611, %bf.load607
  %107 = and i32 %bf.lshr939, 8192
  %cmp614 = icmp eq i32 %107, 0
  br i1 %cmp614, label %if.else617, label %if.then616

if.then616:                                       ; preds = %if.else605
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([64 x i8]* @.str37, i64 0, i64 0)) #7
  br label %if.end620

if.else617:                                       ; preds = %if.else605
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([72 x i8]* @.str38, i64 0, i64 0)) #7
  br label %if.end620

if.end620:                                        ; preds = %if.end581, %if.then604, %if.else617, %if.then616
  %108 = load i32* @pedantic, align 4, !tbaa !3
  %tobool621 = icmp eq i32 %108, 0
  %109 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool623 = icmp ne i32 %109, 0
  %or.cond763 = or i1 %tobool621, %tobool623
  br i1 %or.cond763, label %if.end663, label %land.lhs.true624

land.lhs.true624:                                 ; preds = %if.end620
  %110 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool625 = icmp ne i32 %110, 0
  %tobool627 = icmp eq i32 %spec_long_long.0.lcssa, 0
  %or.cond947 = or i1 %tobool625, %tobool627
  %tobool629 = icmp eq i32 %warn.0, 0
  %or.cond948 = and i1 %or.cond947, %tobool629
  br i1 %or.cond948, label %land.lhs.true630, label %if.end663

land.lhs.true630:                                 ; preds = %land.lhs.true624
  %tobool631 = icmp eq i32 %110, 0
  %.val = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8
  %.val955 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8
  %type633.pn.in = select i1 %tobool631, %union.tree_node* %.val, %union.tree_node* %.val955
  %type633.pn = bitcast %union.tree_node* %type633.pn.in to %struct.tree_type*
  %bf.load635.sink.in.in = getelementptr inbounds %struct.tree_type* %type633.pn, i64 0, i32 6
  %bf.load635.sink.in = bitcast [4 x i8]* %bf.load635.sink.in.in to i32*
  %bf.load635.sink = load i32* %bf.load635.sink.in, align 4
  %bf.clear636 = and i32 %bf.load635.sink, 511
  %type644 = bitcast %union.tree_node* %cond586 to %struct.tree_type*
  %precision645 = getelementptr inbounds %struct.tree_type* %type644, i64 0, i32 6
  %111 = bitcast [4 x i8]* %precision645 to i32*
  %bf.load646 = load i32* %111, align 4
  %bf.clear647 = and i32 %bf.load646, 511
  %cmp648 = icmp ult i32 %bf.clear636, %bf.clear647
  br i1 %cmp648, label %if.then650, label %if.end663

if.then650:                                       ; preds = %land.lhs.true630
  br i1 %tobool631, label %cond.end661, label %cond.true652

cond.true652:                                     ; preds = %if.then650
  %unsigned_flag654 = getelementptr inbounds %union.tree_node* %cond586, i64 0, i32 0, i32 0, i32 2
  %112 = bitcast [4 x i8]* %unsigned_flag654 to i32*
  %bf.load655 = load i32* %112, align 8
  %bf.clear657 = and i32 %bf.load655, 8192
  %tobool658 = icmp ne i32 %bf.clear657, 0
  %cond659 = select i1 %tobool658, i8* getelementptr inbounds ([26 x i8]* @.str40, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8]* @.str41, i64 0, i64 0)
  br label %cond.end661

cond.end661:                                      ; preds = %if.then650, %cond.true652
  %cond662 = phi i8* [ %cond659, %cond.true652 ], [ getelementptr inbounds ([21 x i8]* @.str42, i64 0, i64 0), %if.then650 ]
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([53 x i8]* @.str39, i64 0, i64 0), i8* %cond662) #7
  br label %if.end663

if.end663:                                        ; preds = %land.lhs.true624, %if.end620, %cond.end661, %land.lhs.true630
  %warn.1 = phi i32 [ %warn.0, %if.end620 ], [ 1, %cond.end661 ], [ 0, %land.lhs.true630 ], [ %warn.0, %land.lhs.true624 ]
  %tobool667 = icmp eq i32 %spec_unsigned.0.lcssa, 0
  %or.cond950 = and i1 %cmp591, %tobool667
  br i1 %or.cond950, label %land.lhs.true668, label %if.end676

land.lhs.true668:                                 ; preds = %if.end663
  %unsigned_flag670 = getelementptr inbounds %union.tree_node* %cond586, i64 0, i32 0, i32 0, i32 2
  %113 = bitcast [4 x i8]* %unsigned_flag670 to i32*
  %bf.load671 = load i32* %113, align 8
  %bf.clear673 = and i32 %bf.load671, 8192
  %tobool674 = icmp eq i32 %bf.clear673, 0
  br i1 %tobool674, label %if.end676, label %if.then675

if.then675:                                       ; preds = %land.lhs.true668
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([49 x i8]* @.str43, i64 0, i64 0)) #7
  br label %if.end676

if.end676:                                        ; preds = %land.lhs.true668, %if.then675, %if.end663
  %tobool677 = icmp eq i32 %spec_imag.0.lcssa, 0
  br i1 %tobool677, label %if.else697, label %if.then678

if.then678:                                       ; preds = %if.end676
  %type679 = bitcast %union.tree_node* %cond586 to %struct.tree_type*
  %precision680 = getelementptr inbounds %struct.tree_type* %type679, i64 0, i32 6
  %114 = bitcast [4 x i8]* %precision680 to i32*
  %bf.load681 = load i32* %114, align 4
  %bf.clear682 = and i32 %bf.load681, 511
  %115 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %type683 = bitcast %union.tree_node* %115 to %struct.tree_type*
  %precision684 = getelementptr inbounds %struct.tree_type* %type683, i64 0, i32 6
  %116 = bitcast [4 x i8]* %precision684 to i32*
  %bf.load685 = load i32* %116, align 4
  %bf.clear686 = and i32 %bf.load685, 511
  %cmp687 = icmp ugt i32 %bf.clear682, %bf.clear686
  br i1 %cmp687, label %do.body693, label %if.then689

if.then689:                                       ; preds = %if.then678
  %117 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !0
  %call690 = call %union.tree_node* @convert(%union.tree_node* %115, %union.tree_node* %call459) #7
  %call691 = call %union.tree_node* @build_complex(%union.tree_node* null, %union.tree_node* %117, %union.tree_node* %call690) #7
  br label %if.end717

do.body693:                                       ; preds = %if.then678
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([55 x i8]* @.str44, i64 0, i64 0)) #7
  br label %syntax_error

if.else697:                                       ; preds = %if.end676
  %118 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool698 = icmp eq i32 %118, 0
  br i1 %tobool698, label %if.else713, label %land.lhs.true699

land.lhs.true699:                                 ; preds = %if.else697
  %call700 = call i32 @int_fits_type_p(%union.tree_node* %call459, %union.tree_node* %cond586) #7
  %tobool701 = icmp eq i32 %call700, 0
  br i1 %tobool701, label %if.then702, label %if.else713

if.then702:                                       ; preds = %land.lhs.true699
  %call703 = call %union.tree_node* @unsigned_type(%union.tree_node* %cond586) #7
  store %union.tree_node* %call703, %union.tree_node** %type460, align 8, !tbaa !0
  %call706 = call %union.tree_node* @convert(%union.tree_node* %cond586, %union.tree_node* %call459) #7
  %static_flag = getelementptr inbounds %union.tree_node* %call706, i64 0, i32 0, i32 0, i32 2
  %119 = bitcast [4 x i8]* %static_flag to i32*
  %bf.load708 = load i32* %119, align 8
  %bf.clear712 = and i32 %bf.load708, -786433
  store i32 %bf.clear712, i32* %119, align 8
  br label %if.end717

if.else713:                                       ; preds = %land.lhs.true699, %if.else697
  store %union.tree_node* %cond586, %union.tree_node** %type460, align 8, !tbaa !0
  br label %if.end717

if.end717:                                        ; preds = %if.then702, %if.else713, %if.then689
  %value.2 = phi %union.tree_node* [ %call691, %if.then689 ], [ %call459, %if.else713 ], [ %call706, %if.then702 ]
  %tobool718 = icmp eq i32 %warn.1, 0
  br i1 %tobool718, label %land.lhs.true719, label %if.end734

land.lhs.true719:                                 ; preds = %if.end717
  %type721 = getelementptr inbounds %union.tree_node* %value.2, i64 0, i32 0, i32 0, i32 1
  %120 = load %union.tree_node** %type721, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %120, i64 0, i32 0, i32 0, i32 2
  %121 = bitcast [4 x i8]* %code to i32*
  %bf.load723 = load i32* %121, align 8
  %bf.clear724 = and i32 %bf.load723, 255
  %cmp725 = icmp eq i32 %bf.clear724, 6
  br i1 %cmp725, label %land.lhs.true727, label %if.end734

land.lhs.true727:                                 ; preds = %land.lhs.true719
  %call730 = call i32 @int_fits_type_p(%union.tree_node* %value.2, %union.tree_node* %120) #7
  %tobool731 = icmp eq i32 %call730, 0
  br i1 %tobool731, label %if.then732, label %if.end734

if.then732:                                       ; preds = %land.lhs.true727
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([63 x i8]* @.str45, i64 0, i64 0)) #7
  br label %if.end734

if.end734:                                        ; preds = %if.else368, %if.then364, %land.lhs.true727, %if.end717, %land.lhs.true719, %if.then732
  %value.3 = phi %union.tree_node* [ %value.2, %if.end717 ], [ %value.2, %land.lhs.true727 ], [ %value.2, %if.then732 ], [ %value.2, %land.lhs.true719 ], [ %call367, %if.then364 ], [ %call369, %if.else368 ]
  %p.9 = phi i8* [ %p.8.lcssa, %if.end717 ], [ %p.8.lcssa, %land.lhs.true727 ], [ %p.8.lcssa, %if.then732 ], [ %p.8.lcssa, %land.lhs.true719 ], [ %p.6.lcssa, %if.then364 ], [ %p.6.lcssa, %if.else368 ]
  %cmp737 = icmp ult i8* %p.9, %add.ptr158
  br i1 %cmp737, label %if.then739, label %cleanup745

if.then739:                                       ; preds = %if.end734
  %sub.ptr.lhs.cast740 = ptrtoint i8* %p.9 to i64
  %sub.ptr.rhs.cast741 = ptrtoint i8* %str to i64
  %sub.ptr.sub742 = sub i64 %sub.ptr.lhs.cast740, %sub.ptr.rhs.cast741
  %conv743 = trunc i64 %sub.ptr.sub742 to i32
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str46, i64 0, i64 0), i32 %conv743, i8* %str) #7
  br label %cleanup745

syntax_error:                                     ; preds = %do.body244, %do.body341, %do.body288, %do.body304, %do.body320, %do.body328, %do.body193, %do.body693, %do.body432, %do.body172, %do.body165, %do.body71, %do.body57, %do.body52
  %122 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !0
  br label %cleanup745

cleanup745:                                       ; preds = %if.end734, %if.then739, %syntax_error, %if.else8, %if.then7, %if.then3
  %retval.0 = phi %union.tree_node* [ %3, %if.then3 ], [ %4, %if.then7 ], [ %call, %if.else8 ], [ %122, %syntax_error ], [ %value.3, %if.then739 ], [ %value.3, %if.end734 ]
  call void @llvm.lifetime.end(i64 64, i8* %0) #5
  ret %union.tree_node* %retval.0
}
