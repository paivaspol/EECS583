define i32 @c_lex(%union.tree_node** nocapture %value) #0 {
entry:
  %chars_seen.i = alloca i32, align 4
  br label %retry

retry:                                            ; preds = %if.then, %if.else, %entry
  call void @timevar_push(i32 7) #7
  br label %do.body

do.body:                                          ; preds = %do.body, %retry
  %0 = load %struct.cpp_reader** @parse_in, align 8, !tbaa !0
  %call = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %0) #7
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %cmp = icmp eq i8 %bf.load, 66
  br i1 %cmp, label %do.body, label %do.end

do.end:                                           ; preds = %do.body
  call void @timevar_pop(i32 7) #7
  %1 = load i32* @src_lineno, align 4, !tbaa !3
  store i32 %1, i32* @lineno, align 4, !tbaa !3
  store %union.tree_node* null, %union.tree_node** %value, align 8, !tbaa !0
  %bf.load2 = load i8* %type, align 2
  %bf.cast3 = zext i8 %bf.load2 to i32
  switch i32 %bf.cast3, label %sw.epilog [
    i32 44, label %sw.bb
    i32 45, label %sw.bb4
    i32 60, label %sw.bb5
    i32 56, label %sw.bb14
    i32 57, label %sw.bb16
    i32 58, label %sw.bb21
    i32 59, label %sw.bb21
    i32 61, label %sw.bb23
    i32 62, label %sw.bb23
    i32 63, label %sw.bb36
    i32 64, label %sw.bb36
    i32 65, label %sw.bb36
  ]

sw.bb:                                            ; preds = %do.end
  %2 = load i32* @indent_level, align 4, !tbaa !3
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @indent_level, align 4, !tbaa !3
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.end
  %3 = load i32* @indent_level, align 4, !tbaa !3
  %dec = add nsw i32 %3, -1
  store i32 %dec, i32* @indent_level, align 4, !tbaa !3
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.end
  %val = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %c = bitcast %union.anon* %val to i8*
  %4 = load i8* %c, align 1, !tbaa !1
  %conv = zext i8 %4 to i32
  %idxprom = zext i8 %4 to i64
  %arrayidx = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom
  %5 = load i16* %arrayidx, align 2, !tbaa !7
  %and7 = and i16 %5, 172
  %tobool = icmp eq i16 %and7, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb5
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str7, i64 0, i64 0), i32 %conv) #7
  br label %retry

if.else:                                          ; preds = %sw.bb5
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([23 x i8]* @.str8, i64 0, i64 0), i32 %conv) #7
  br label %retry

sw.bb14:                                          ; preds = %do.end
  %val15 = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %node = bitcast %union.anon* %val15 to %struct.cpp_hashnode**
  %6 = load %struct.cpp_hashnode** %node, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.cpp_hashnode* %6, i64 -1, i32 0, i32 1
  %7 = bitcast i8** %add.ptr to %union.tree_node*
  store %union.tree_node* %7, %union.tree_node** %value, align 8, !tbaa !0
  br label %sw.epilog

sw.bb16:                                          ; preds = %do.end
  %text = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 1
  %8 = load i8** %text, align 8, !tbaa !0
  %len = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 0
  %9 = load i32* %len, align 4, !tbaa !3
  %call20 = call fastcc %union.tree_node* @lex_number(i8* %8, i32 %9) #8
  store %union.tree_node* %call20, %union.tree_node** %value, align 8, !tbaa !0
  br label %sw.epilog

sw.bb21:                                          ; preds = %do.end, %do.end
  %10 = bitcast i32* %chars_seen.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #5
  %11 = load %struct.cpp_reader** @parse_in, align 8, !tbaa !0
  %12 = load i32* @warn_multichar, align 4, !tbaa !3
  %13 = load i32* @flag_traditional, align 4, !tbaa !3
  %call.i = call i64 @cpp_interpret_charconst(%struct.cpp_reader* %11, %struct.cpp_token* %call, i32 %12, i32 %13, i32* %chars_seen.i) #7
  %bf.load.i = load i8* %type, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 59
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb21
  %call2.i = call %union.tree_node* @build_int_2_wide(i64 %call.i, i64 0) #7
  br label %lex_charconst.exit

if.else.i:                                        ; preds = %sw.bb21
  %cmp3.i = icmp slt i64 %call.i, 0
  br i1 %cmp3.i, label %if.then4.i, label %if.else6.i

if.then4.i:                                       ; preds = %if.else.i
  %call5.i = call %union.tree_node* @build_int_2_wide(i64 %call.i, i64 -1) #7
  br label %if.end.i

if.else6.i:                                       ; preds = %if.else.i
  %call7.i = call %union.tree_node* @build_int_2_wide(i64 %call.i, i64 0) #7
  br label %if.end.i

if.end.i:                                         ; preds = %if.else6.i, %if.then4.i
  %value.0.i = phi %union.tree_node* [ %call5.i, %if.then4.i ], [ %call7.i, %if.else6.i ]
  %14 = load i32* @c_language, align 4, !tbaa !8
  %cmp8.i = icmp eq i32 %14, 1
  br i1 %cmp8.i, label %land.lhs.true.i, label %if.else11.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %15 = load i32* %chars_seen.i, align 4, !tbaa !3
  %cmp9.i = icmp ult i32 %15, 2
  br i1 %cmp9.i, label %lex_charconst.exit, label %if.else11.i

if.else11.i:                                      ; preds = %land.lhs.true.i, %if.end.i
  br label %lex_charconst.exit

lex_charconst.exit:                               ; preds = %if.then.i, %land.lhs.true.i, %if.else11.i
  %type.0.in.i = phi %union.tree_node** [ getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 0), %if.then.i ], [ getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), %if.else11.i ], [ getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), %land.lhs.true.i ]
  %value.1.i = phi %union.tree_node* [ %call2.i, %if.then.i ], [ %value.0.i, %if.else11.i ], [ %value.0.i, %land.lhs.true.i ]
  %type.0.i = load %union.tree_node** %type.0.in.i, align 8
  %16 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 9), align 8, !tbaa !0
  %type14.i = getelementptr inbounds %union.tree_node* %value.1.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %16, %union.tree_node** %type14.i, align 8, !tbaa !0
  %call15.i = call %union.tree_node* @convert(%union.tree_node* %type.0.i, %union.tree_node* %value.1.i) #7
  %public_flag.i = getelementptr inbounds %union.tree_node* %call15.i, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast [4 x i8]* %public_flag.i to i32*
  %bf.load17.i = load i32* %17, align 8
  %bf.clear.i = and i32 %bf.load17.i, -524289
  store i32 %bf.clear.i, i32* %17, align 8
  call void @llvm.lifetime.end(i64 4, i8* %10) #5
  store %union.tree_node* %call15.i, %union.tree_node** %value, align 8, !tbaa !0
  br label %sw.epilog

sw.bb23:                                          ; preds = %do.end, %do.end
  %text26 = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 1
  %18 = load i8** %text26, align 8, !tbaa !0
  %len29 = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 0
  %19 = load i32* %len29, align 4, !tbaa !3
  %cmp33 = icmp eq i8 %bf.load2, 62
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call fastcc %union.tree_node* @lex_string(i8* %18, i32 %19, i32 %conv34) #8
  store %union.tree_node* %call35, %union.tree_node** %value, align 8, !tbaa !0
  br label %sw.epilog

sw.bb36:                                          ; preds = %do.end, %do.end, %do.end
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str9, i64 0, i64 0), i32 822, i8* getelementptr inbounds ([6 x i8]* @__FUNCTION__.c_lex, i64 0, i64 0)) #10
  unreachable

sw.epilog:                                        ; preds = %do.end, %sw.bb23, %lex_charconst.exit, %sw.bb16, %sw.bb14, %sw.bb4, %sw.bb
  %bf.load38 = load i8* %type, align 2
  %bf.cast39 = zext i8 %bf.load38 to i32
  ret i32 %bf.cast39
}
