define %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %ignore) #0 {
entry:
  %alignment_pad.i = alloca %struct.args_size, align 8
  %old_stack_level.i = alloca %struct.rtx_def*, align 8
  %args_size = alloca %struct.args_size, align 8
  %adjusted_args_size = alloca %struct.args_size, align 8
  %args_so_far = alloca %struct.ix86_args, align 4
  %old_stack_level = alloca %struct.rtx_def*, align 8
  %call_fusage = alloca %struct.rtx_def*, align 8
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %0 = bitcast i32* %arrayidx to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !0
  %2 = load i32* @target_flags, align 4, !tbaa !3
  %and = and i32 %2, 2048
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %and2 = and i32 %2, 4096
  %phitmp = icmp ne i32 %and2, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %3 = phi i1 [ true, %entry ], [ %phitmp, %land.rhs ]
  %lnot.ext = zext i1 %3 to i32
  %4 = load i32* @highest_outgoing_arg_in_use, align 4, !tbaa !3
  %5 = load i8** @stack_usage_map, align 8, !tbaa !0
  store %struct.rtx_def* null, %struct.rtx_def** %old_stack_level, align 8, !tbaa !0
  %6 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr = getelementptr inbounds %struct.function* %6, i64 0, i32 2
  %7 = load %struct.expr_status** %expr, align 8, !tbaa !0
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %7, i64 0, i32 1
  %8 = load i32* %x_inhibit_defer_pop, align 4, !tbaa !3
  %arrayidx7 = bitcast i32* %operands to %union.tree_node**
  %9 = load %union.tree_node** %arrayidx7, align 8, !tbaa !0
  %nothrow_flag = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast [4 x i8]* %nothrow_flag to i32*
  %bf.load = load i32* %10, align 8
  %bf.clear = lshr i32 %bf.load, 13
  %11 = and i32 %bf.clear, 16
  %call = call %union.tree_node* @get_callee_fndecl(%union.tree_node* %exp) #7
  %tobool9 = icmp eq %union.tree_node* %call, null
  br i1 %tobool9, label %if.else52, label %if.then10

if.then10:                                        ; preds = %land.end
  %12 = load i32* @flag_no_inline, align 4, !tbaa !3
  %tobool11 = icmp ne i32 %12, 0
  %13 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %cmp = icmp eq %union.tree_node* %call, %13
  %or.cond = or i1 %tobool11, %cmp
  br i1 %or.cond, label %if.else, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %if.then10
  %inline_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 5
  %14 = bitcast [8 x i8]* %inline_flag to i64*
  %bf.load13 = load i64* %14, align 8
  %bf.cast = and i64 %bf.load13, 2048
  %tobool16 = icmp eq i64 %bf.cast, 0
  br i1 %tobool16, label %if.else, label %land.lhs.true17

land.lhs.true17:                                  ; preds = %land.lhs.true12
  %f = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 19, i32 0
  %15 = load %struct.function** %f, align 8, !tbaa !0
  %tobool19 = icmp eq %struct.function* %15, null
  br i1 %tobool19, label %if.else, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %inlinable = getelementptr inbounds %struct.function* %15, i64 0, i32 44
  %16 = load i32* %inlinable, align 4, !tbaa !3
  %tobool24 = icmp eq i32 %16, 0
  br i1 %tobool24, label %if.else, label %if.end49

if.else:                                          ; preds = %if.then10, %land.lhs.true20, %land.lhs.true17, %land.lhs.true12
  %addressable_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast [4 x i8]* %addressable_flag to i32*
  %bf.load27 = load i32* %17, align 8
  %bf.clear29 = and i32 %bf.load27, 1024
  %tobool30 = icmp eq i32 %bf.clear29, 0
  br i1 %tobool30, label %if.then31, label %if.end49

if.then31:                                        ; preds = %if.else
  %inline_flag33 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 5
  %18 = bitcast [8 x i8]* %inline_flag33 to i64*
  %bf.load34 = load i64* %18, align 8
  %bf.cast37 = and i64 %bf.load34, 2048
  %19 = load i32* @warn_inline, align 4, !tbaa !3
  %notlhs = icmp eq i64 %bf.cast37, 0
  %notrhs = icmp eq i32 %19, 0
  %or.cond.not = or i1 %notrhs, %notlhs
  %or.cond1451 = or i1 %or.cond.not, %tobool11
  %or.cond1451.not = xor i1 %or.cond1451, true
  %20 = load i32* @optimize, align 4, !tbaa !3
  %cmp44 = icmp sgt i32 %20, 0
  %or.cond1452 = and i1 %cmp44, %or.cond1451.not
  br i1 %or.cond1452, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.then31
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %call, i8* getelementptr inbounds ([26 x i8]* @.str, i64 0, i64 0)) #7
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([17 x i8]* @.str1, i64 0, i64 0)) #7
  br label %if.end46

if.end46:                                         ; preds = %if.then31, %if.then45
  %call47 = call i32 @mark_addressable(%union.tree_node* %call) #7
  br label %if.end49

if.end49:                                         ; preds = %land.lhs.true20, %if.else, %if.end46
  %is_integrable.0 = phi i32 [ 0, %if.else ], [ 0, %if.end46 ], [ 1, %land.lhs.true20 ]
  %call50 = call fastcc i32 @flags_from_decl_or_type(%union.tree_node* %call) #8
  br label %if.end58

if.else52:                                        ; preds = %land.end
  %type = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 1
  %21 = load %union.tree_node** %type, align 8, !tbaa !0
  %type55 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type55, align 8, !tbaa !0
  %call56 = call fastcc i32 @flags_from_decl_or_type(%union.tree_node* %22) #8
  br label %if.end58

if.end58:                                         ; preds = %if.else52, %if.end49
  %call50.sink = phi i32 [ %call50, %if.end49 ], [ %call56, %if.else52 ]
  %is_integrable.1 = phi i32 [ %is_integrable.0, %if.end49 ], [ 0, %if.else52 ]
  %or51 = or i32 %call50.sink, %11
  %23 = load i32* @warn_aggregate_return, align 4, !tbaa !3
  %tobool68 = icmp eq i32 %23, 0
  br i1 %tobool68, label %if.end108, label %land.lhs.true69

land.lhs.true69:                                  ; preds = %if.end58
  %type71 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type71, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast [4 x i8]* %code to i32*
  %bf.load73 = load i32* %25, align 8
  %bf.clear74 = and i32 %bf.load73, 255
  %bf.clear74.off = add i32 %bf.clear74, -18
  %switch = icmp ult i32 %bf.clear74.off, 5
  br i1 %switch, label %if.then107, label %if.end108

if.then107:                                       ; preds = %land.lhs.true69
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([34 x i8]* @.str2, i64 0, i64 0)) #7
  br label %if.end108

if.end108:                                        ; preds = %land.lhs.true69, %if.end58, %if.then107
  %call109 = call i32 @aggregate_value_p(%union.tree_node* %exp) #7
  %tobool110 = icmp eq i32 %call109, 0
  br i1 %tobool110, label %if.end131, label %if.then111

if.then111:                                       ; preds = %if.end108
  %and112 = and i32 %or51, -4610
  %type114 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %26 = load %union.tree_node** %type114, align 8, !tbaa !0
  %call115 = call i64 @int_size_in_bytes(%union.tree_node* %26) #7
  %tobool116 = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool116, label %if.else123, label %land.lhs.true117

land.lhs.true117:                                 ; preds = %if.then111
  %27 = bitcast %struct.rtx_def* %target to i32*
  %bf.load118 = load i32* %27, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 66
  br i1 %cmp120, label %if.then121, label %if.else123

if.then121:                                       ; preds = %land.lhs.true117
  %arrayidx122 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  br label %if.end131

if.else123:                                       ; preds = %if.then111, %land.lhs.true117
  %29 = load %union.tree_node** %type114, align 8, !tbaa !0
  %call126 = call %struct.rtx_def* @assign_temp(%union.tree_node* %29, i32 1, i32 1, i32 1) #7
  call void @mark_temp_addr_taken(%struct.rtx_def* %call126) #7
  %arrayidx128 = getelementptr inbounds %struct.rtx_def* %call126, i64 0, i32 1, i64 0
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx129, align 8, !tbaa !0
  br label %if.end131

if.end131:                                        ; preds = %if.end108, %if.then121, %if.else123
  %and190.i2077 = phi i32 [ %and112, %if.then121 ], [ %and112, %if.else123 ], [ %or51, %if.end108 ]
  %struct_value_size.0 = phi i64 [ %call115, %if.then121 ], [ %call115, %if.else123 ], [ 0, %if.end108 ]
  %structure_value_addr.0 = phi %struct.rtx_def* [ %28, %if.then121 ], [ %30, %if.else123 ], [ null, %if.end108 ]
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.then121 ], [ null, %if.else123 ], [ %target, %if.end108 ]
  %tobool132 = icmp eq i32 %is_integrable.1, 0
  br i1 %tobool132, label %if.end140, label %if.then133

if.then133:                                       ; preds = %if.end131
  %type135 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %31 = load %union.tree_node** %type135, align 8, !tbaa !0
  %32 = bitcast %struct.rtx_def** %old_stack_level.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %32) #4
  store %struct.rtx_def* null, %struct.rtx_def** %old_stack_level.i, align 8, !tbaa !0
  %call.i = call %struct.rtx_def* @get_last_insn() #7
  call void @timevar_push(i32 12) #7
  %call1.i = call %struct.rtx_def* @expand_inline_function(%union.tree_node* %call, %union.tree_node* %1, %struct.rtx_def* %target.addr.0, i32 %ignore, %union.tree_node* %31, %struct.rtx_def* %structure_value_addr.0) #7
  call void @timevar_pop(i32 12) #7
  %cmp.i = icmp eq %struct.rtx_def* %call1.i, inttoptr (i64 -1 to %struct.rtx_def*)
  br i1 %cmp.i, label %if.end52.i, label %if.then.i

if.then.i:                                        ; preds = %if.then133
  %33 = load i32* @target_flags, align 4, !tbaa !3
  %and.i = and i32 %33, 4096
  %tobool.i = icmp eq i32 %and.i, 0
  %34 = load i32* @stack_arg_under_construction, align 4, !tbaa !3
  %tobool8.i = icmp eq i32 %34, 0
  %or.cond.i = or i1 %tobool.i, %tobool8.i
  br i1 %or.cond.i, label %if.end44.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.then.i
  %tobool12.i = icmp eq %struct.rtx_def* %call.i, null
  br i1 %tobool12.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.then11.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %call.i, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !0
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.then11.i
  %call14.i = call %struct.rtx_def* @get_insns() #7
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi %struct.rtx_def* [ %35, %cond.true.i ], [ %call14.i, %cond.false.i ]
  %f.i = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 19, i32 0
  %36 = load %struct.function** %f.i, align 8, !tbaa !0
  %outgoing_args_size.i = getelementptr inbounds %struct.function* %36, i64 0, i32 11
  %37 = load i32* %outgoing_args_size.i, align 4, !tbaa !3
  %cmp15.i = icmp ne i32 %37, 0
  %tobool1999.i = icmp eq %struct.rtx_def* %cond.i, null
  %or.cond101.i = or i1 %cmp15.i, %tobool1999.i
  br i1 %or.cond101.i, label %if.end44.i, label %for.body20.i

for.body20.i:                                     ; preds = %cond.end.i, %for.inc25.i
  %insn.0100.i = phi %struct.rtx_def* [ %39, %for.inc25.i ], [ %cond.i, %cond.end.i ]
  %38 = bitcast %struct.rtx_def* %insn.0100.i to i32*
  %bf.load.i = load i32* %38, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp21.i = icmp eq i32 %bf.clear.i, 34
  br i1 %cmp21.i, label %if.then32.i, label %for.inc25.i

for.inc25.i:                                      ; preds = %for.body20.i
  %arrayidx27.i = getelementptr inbounds %struct.rtx_def* %insn.0100.i, i64 0, i32 1, i64 2
  %rtx28.i = bitcast %union.rtunion_def* %arrayidx27.i to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx28.i, align 8, !tbaa !0
  %tobool19.i = icmp eq %struct.rtx_def* %39, null
  br i1 %tobool19.i, label %if.end44.i, label %for.body20.i

if.then32.i:                                      ; preds = %for.body20.i
  call void @start_sequence() #7
  call void @emit_stack_save(i32 0, %struct.rtx_def** %old_stack_level.i, %struct.rtx_def* null) #7
  %call38.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 0) #7
  %call39.i = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call38.i, %struct.rtx_def* null, i32 8) #7
  %call40.i = call %struct.rtx_def* @get_insns() #7
  call void @end_sequence() #7
  %call41.i = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call40.i, %struct.rtx_def* %cond.i) #7
  %40 = load %struct.rtx_def** %old_stack_level.i, align 8, !tbaa !0
  call void @emit_stack_restore(i32 0, %struct.rtx_def* %40, %struct.rtx_def* null) #7
  br label %if.end44.i

if.end44.i:                                       ; preds = %for.inc25.i, %if.then32.i, %cond.end.i, %if.then.i
  %cmp45.i = icmp eq %struct.rtx_def* %call1.i, %target.addr.0
  br i1 %cmp45.i, label %if.end51.i, label %land.lhs.true47.i

land.lhs.true47.i:                                ; preds = %if.end44.i
  %call48.i = call i32 @rtx_equal_p(%struct.rtx_def* %call1.i, %struct.rtx_def* %target.addr.0) #7
  %tobool49.i = icmp eq i32 %call48.i, 0
  br i1 %tobool49.i, label %if.end51.i, label %try_to_integrate.exit

if.end51.i:                                       ; preds = %land.lhs.true47.i, %if.end44.i
  br label %try_to_integrate.exit

if.end52.i:                                       ; preds = %if.then133
  %inline_flag.i = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 5
  %41 = bitcast [8 x i8]* %inline_flag.i to i64*
  %bf.load54.i = load i64* %41, align 8
  %bf.cast.i = and i64 %bf.load54.i, 2048
  %42 = load i32* @warn_inline, align 4, !tbaa !3
  %notlhs.i = icmp eq i64 %bf.cast.i, 0
  %notrhs.i = icmp eq i32 %42, 0
  %or.cond.not.i = or i1 %notrhs.i, %notlhs.i
  %43 = load i32* @flag_no_inline, align 4, !tbaa !3
  %tobool60.i = icmp ne i32 %43, 0
  %or.cond72.i = or i1 %or.cond.not.i, %tobool60.i
  %or.cond72.not.i = xor i1 %or.cond72.i, true
  %44 = load i32* @optimize, align 4, !tbaa !3
  %cmp62.i = icmp sgt i32 %44, 0
  %or.cond73.i = and i1 %cmp62.i, %or.cond72.not.i
  br i1 %or.cond73.i, label %land.lhs.true64.i, label %try_to_integrate.exit.thread

land.lhs.true64.i:                                ; preds = %if.end52.i
  %addressable_flag.i = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %45 = bitcast [4 x i8]* %addressable_flag.i to i32*
  %bf.load65.i = load i32* %45, align 8
  %bf.clear67.i = and i32 %bf.load65.i, 1024
  %tobool68.i = icmp eq i32 %bf.clear67.i, 0
  br i1 %tobool68.i, label %if.then69.i, label %try_to_integrate.exit.thread

if.then69.i:                                      ; preds = %land.lhs.true64.i
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %call, i8* getelementptr inbounds ([32 x i8]* @.str7, i64 0, i64 0)) #7
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([17 x i8]* @.str1, i64 0, i64 0)) #7
  br label %try_to_integrate.exit.thread

try_to_integrate.exit.thread:                     ; preds = %if.end52.i, %land.lhs.true64.i, %if.then69.i
  %call71.i = call i32 @mark_addressable(%union.tree_node* %call) #7
  call void @llvm.lifetime.end(i64 8, i8* %32) #4
  br label %if.end140

try_to_integrate.exit:                            ; preds = %land.lhs.true47.i, %if.end51.i
  %retval.0.i = phi %struct.rtx_def* [ %call1.i, %if.end51.i ], [ %target.addr.0, %land.lhs.true47.i ]
  call void @llvm.lifetime.end(i64 8, i8* %32) #4
  %cmp137 = icmp eq %struct.rtx_def* %retval.0.i, inttoptr (i64 -1 to %struct.rtx_def*)
  br i1 %cmp137, label %if.end140, label %return

if.end140:                                        ; preds = %try_to_integrate.exit.thread, %try_to_integrate.exit, %if.end131
  %46 = load i32* @ix86_preferred_stack_boundary, align 4, !tbaa !3
  %conv = sext i32 %46 to i64
  %47 = load %union.tree_node** %arrayidx7, align 8, !tbaa !0
  %type145 = getelementptr inbounds %union.tree_node* %47, i64 0, i32 0, i32 0, i32 1
  %48 = load %union.tree_node** %type145, align 8, !tbaa !0
  %code147 = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 0, i32 2
  %49 = bitcast [4 x i8]* %code147 to i32*
  %bf.load148 = load i32* %49, align 8
  %bf.clear149 = and i32 %bf.load148, 255
  switch i32 %bf.clear149, label %if.then159 [
    i32 13, label %if.end160
    i32 15, label %if.end160
  ]

if.then159:                                       ; preds = %if.end140
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str3, i64 0, i64 0), i32 2299, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_call, i64 0, i64 0)) #10
  unreachable

if.end160:                                        ; preds = %if.end140, %if.end140
  %type162 = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 0, i32 1
  %50 = load %union.tree_node** %type162, align 8, !tbaa !0
  %call163 = call fastcc i32 @special_function_p(%union.tree_node* %call, i32 %and190.i2077) #8
  %or164 = or i32 %call163, %and190.i2077
  %and165 = and i32 %or164, 8
  %tobool166 = icmp eq i32 %and165, 0
  br i1 %tobool166, label %if.end170, label %if.then167

if.then167:                                       ; preds = %if.end160
  %51 = load %struct.function** @cfun, align 8, !tbaa !0
  %calls_alloca = getelementptr inbounds %struct.function* %51, i64 0, i32 56
  %52 = bitcast [4 x i8]* %calls_alloca to i32*
  %bf.load168 = load i32* %52, align 8
  %bf.set = or i32 %bf.load168, 64
  store i32 %bf.set, i32* %52, align 8
  br label %if.end170

if.end170:                                        ; preds = %if.end160, %if.then167
  %tobool171 = icmp ne %struct.rtx_def* %structure_value_addr.0, null
  %53 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !0
  %cmp173 = icmp eq %struct.rtx_def* %53, null
  %or.cond1453 = and i1 %tobool171, %cmp173
  br i1 %or.cond1453, label %if.then175, label %if.end195

if.then175:                                       ; preds = %if.end170
  %54 = bitcast %struct.rtx_def* %structure_value_addr.0 to i32*
  %bf.load177 = load i32* %54, align 8
  %bf.clear178 = and i32 %bf.load177, 65535
  %cmp179 = icmp eq i32 %bf.clear178, 61
  br i1 %cmp179, label %lor.lhs.false181, label %cond.true

lor.lhs.false181:                                 ; preds = %if.then175
  %55 = load i32* @target_flags, align 4, !tbaa !3
  %and182 = and i32 %55, 4096
  %tobool183 = icmp ne i32 %and182, 0
  %56 = load i32* @stack_arg_under_construction, align 4, !tbaa !3
  %tobool185 = icmp ne i32 %56, 0
  %or.cond1454 = and i1 %tobool183, %tobool185
  %57 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !0
  %cmp187 = icmp eq %struct.rtx_def* %structure_value_addr.0, %57
  %or.cond1800 = and i1 %or.cond1454, %cmp187
  br i1 %or.cond1800, label %cond.true, label %cond.end

cond.true:                                        ; preds = %lor.lhs.false181, %if.then175
  %call189 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %structure_value_addr.0) #7
  br label %cond.end

cond.end:                                         ; preds = %lor.lhs.false181, %cond.true
  %cond = phi %struct.rtx_def* [ %call189, %cond.true ], [ %structure_value_addr.0, %lor.lhs.false181 ]
  %58 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %type191 = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 0, i32 1
  %59 = load %union.tree_node** %type191, align 8, !tbaa !0
  %call192 = call %union.tree_node* @build_pointer_type(%union.tree_node* %59) #7
  %call193 = call %union.tree_node* @make_tree(%union.tree_node* %call192, %struct.rtx_def* %cond) #7
  %call194 = call %union.tree_node* @tree_cons(%union.tree_node* %58, %union.tree_node* %call193, %union.tree_node* %1) #7
  br label %if.end195

if.end195:                                        ; preds = %cond.end, %if.end170
  %structure_value_addr_parm.0 = phi i32 [ 1, %cond.end ], [ 0, %if.end170 ]
  %actparms.0 = phi %union.tree_node* [ %call194, %cond.end ], [ %1, %if.end170 ]
  %tobool1962163 = icmp eq %union.tree_node* %actparms.0, null
  br i1 %tobool1962163, label %for.end, label %for.body

for.body:                                         ; preds = %if.end195, %for.body
  %num_actuals.02165 = phi i32 [ %inc, %for.body ], [ 0, %if.end195 ]
  %p.02164 = phi %union.tree_node* [ %60, %for.body ], [ %actparms.0, %if.end195 ]
  %inc = add nsw i32 %num_actuals.02165, 1
  %chain = getelementptr inbounds %union.tree_node* %p.02164, i64 0, i32 0, i32 0, i32 0
  %60 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool196 = icmp eq %union.tree_node* %60, null
  br i1 %tobool196, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end195
  %num_actuals.0.lcssa = phi i32 [ 0, %if.end195 ], [ %inc, %for.body ]
  call void @init_cumulative_args(%struct.ix86_args* %args_so_far, %union.tree_node* %50, %struct.rtx_def* null) #7
  %conv198 = sext i32 %num_actuals.0.lcssa to i64
  %mul = mul i64 %conv198, 168
  %61 = alloca i8, i64 %mul, align 1
  %62 = bitcast i8* %61 to %struct.arg_data*
  call void @llvm.memset.p0i8.i64(i8* %61, i8 0, i64 %mul, i32 1, i1 false)
  %63 = bitcast %struct.args_size* %alignment_pad.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %63) #4
  %constant.i = getelementptr inbounds %struct.args_size* %args_size, i64 0, i32 0
  %var.i = getelementptr inbounds %struct.args_size* %args_size, i64 0, i32 1
  %64 = bitcast %struct.args_size* %args_size to i8*
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 16, i32 8, i1 false) #4
  %65 = load i32* @target_flags, align 4, !tbaa !3
  %66 = and i32 %65, 6144
  %67 = icmp eq i32 %66, 0
  br i1 %tobool1962163, label %if.end204, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.end
  %sub.i = add nsw i32 %num_actuals.0.lcssa, -1
  %68 = sext i32 %sub.i to i64
  %69 = select i1 %67, i64 %68, i64 0
  %70 = select i1 %67, i64 -1, i64 1
  br label %for.body.i

for.body.i:                                       ; preds = %if.end439.i, %for.body.lr.ph.i
  %71 = phi i32 [ %lnot.ext, %for.body.lr.ph.i ], [ %137, %if.end439.i ]
  %and190.i2071 = phi i32 [ %or164, %for.body.lr.ph.i ], [ %and190.i2070.and334.i, %if.end439.i ]
  %72 = phi i32 [ 0, %for.body.lr.ph.i ], [ %124, %if.end439.i ]
  %indvars.iv.i = phi i64 [ %69, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %if.end439.i ]
  %argpos.08.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc449.i, %if.end439.i ]
  %p.06.i = phi %union.tree_node* [ %actparms.0, %for.body.lr.ph.i ], [ %158, %if.end439.i ]
  %value.i = getelementptr inbounds %union.tree_node* %p.06.i, i64 0, i32 0, i32 2
  %73 = bitcast i32* %value.i to %union.tree_node**
  %74 = load %union.tree_node** %73, align 8, !tbaa !0
  %type4.i = getelementptr inbounds %union.tree_node* %74, i64 0, i32 0, i32 0, i32 1
  %75 = load %union.tree_node** %type4.i, align 8, !tbaa !0
  %tree_value.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 0
  store %union.tree_node* %74, %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %76 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp.i1825 = icmp eq %union.tree_node* %75, %76
  br i1 %cmp.i1825, label %if.then9.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %size.i = getelementptr inbounds %union.tree_node* %75, i64 0, i32 0, i32 2
  %77 = bitcast i32* %size.i to %union.tree_node**
  %78 = load %union.tree_node** %77, align 8, !tbaa !0
  %cmp8.i = icmp eq %union.tree_node* %78, null
  br i1 %cmp8.i, label %if.then9.i, label %if.end13.i

if.then9.i:                                       ; preds = %lor.lhs.false.i, %for.body.i
  %79 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !0
  store %union.tree_node* %79, %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %80 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then9.i, %lor.lhs.false.i
  %type.0.i = phi %union.tree_node* [ %80, %if.then9.i ], [ %75, %lor.lhs.false.i ]
  %code.i = getelementptr inbounds %union.tree_node* %type.0.i, i64 0, i32 0, i32 0, i32 2
  %81 = bitcast [4 x i8]* %code.i to i32*
  %bf.load.i1826 = load i32* %81, align 8
  %bf.clear.i1827 = and i32 %bf.load.i1826, 255
  %cmp15.i1828 = icmp eq i32 %bf.clear.i1827, 21
  br i1 %cmp15.i1828, label %land.lhs.true16.i, label %if.end25.i

land.lhs.true16.i:                                ; preds = %if.end13.i
  %type17.i = bitcast %union.tree_node* %type.0.i to %struct.tree_type*
  %transparent_union_flag.i = getelementptr inbounds %struct.tree_type* %type17.i, i64 0, i32 6
  %82 = bitcast [4 x i8]* %transparent_union_flag.i to i32*
  %bf.load18.i = load i32* %82, align 4
  %bf.clear19.i = and i32 %bf.load18.i, 524288
  %tobool20.i = icmp eq i32 %bf.clear19.i, 0
  br i1 %tobool20.i, label %if.end25.i, label %if.then21.i

if.then21.i:                                      ; preds = %land.lhs.true16.i
  %values.i = getelementptr inbounds %union.tree_node* %type.0.i, i64 0, i32 0, i32 1
  %83 = load i8** %values.i, align 8
  %type24.i = getelementptr inbounds i8* %83, i64 8
  %84 = bitcast i8* %type24.i to %union.tree_node**
  %85 = load %union.tree_node** %84, align 8, !tbaa !0
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.then21.i, %land.lhs.true16.i, %if.end13.i
  %type.1.i = phi %union.tree_node* [ %85, %if.then21.i ], [ %type.0.i, %land.lhs.true16.i ], [ %type.0.i, %if.end13.i ]
  %size27.i = getelementptr inbounds %union.tree_node* %type.1.i, i64 0, i32 0, i32 2
  %86 = bitcast i32* %size27.i to %union.tree_node**
  %87 = load %union.tree_node** %86, align 8, !tbaa !0
  %code29.i = getelementptr inbounds %union.tree_node* %87, i64 0, i32 0, i32 0, i32 2
  %88 = bitcast [4 x i8]* %code29.i to i32*
  %bf.load30.i = load i32* %88, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 255
  %cmp32.i = icmp eq i32 %bf.clear31.i, 25
  br i1 %cmp32.i, label %lor.lhs.false37.i, label %land.lhs.true33.i

land.lhs.true33.i:                                ; preds = %if.end25.i
  %call.i1829 = call i32 @contains_placeholder_p(%union.tree_node* %87) #7
  %tobool36.i = icmp eq i32 %call.i1829, 0
  br i1 %tobool36.i, label %lor.lhs.false37.i, label %if.then43.i

lor.lhs.false37.i:                                ; preds = %land.lhs.true33.i, %if.end25.i
  %addressable_flag.i1830 = getelementptr inbounds %union.tree_node* %type.1.i, i64 0, i32 0, i32 0, i32 2
  %89 = bitcast [4 x i8]* %addressable_flag.i1830 to i32*
  %bf.load39.i = load i32* %89, align 8
  %bf.clear41.i = and i32 %bf.load39.i, 1024
  %tobool42.i = icmp eq i32 %bf.clear41.i, 0
  br i1 %tobool42.i, label %if.end200.i, label %if.then43.i

if.then43.i:                                      ; preds = %lor.lhs.false37.i, %land.lhs.true33.i
  %90 = load %struct.function** @cfun, align 8, !tbaa !0
  %is_thunk.i = getelementptr inbounds %struct.function* %90, i64 0, i32 56
  %91 = bitcast [4 x i8]* %is_thunk.i to i32*
  %bf.load44.i = load i32* %91, align 8
  %bf.clear46.i = and i32 %bf.load44.i, 4096
  %tobool47.i = icmp eq i32 %bf.clear46.i, 0
  %92 = load %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %code53.i = getelementptr inbounds %union.tree_node* %92, i64 0, i32 0, i32 0, i32 2
  %93 = bitcast [4 x i8]* %code53.i to i32*
  %bf.load54.i1831 = load i32* %93, align 8
  %bf.clear55.i = and i32 %bf.load54.i1831, 255
  %cmp56.i = icmp eq i32 %bf.clear55.i, 50
  br i1 %tobool47.i, label %if.else124.i, label %if.then48.i

if.then48.i:                                      ; preds = %if.then43.i
  br i1 %cmp56.i, label %land.lhs.true57.i, label %if.end114.i

land.lhs.true57.i:                                ; preds = %if.then48.i
  %operands.i = getelementptr inbounds %union.tree_node* %92, i64 0, i32 0, i32 2
  %arrayidx61.i = getelementptr inbounds i32* %operands.i, i64 2
  %94 = bitcast i32* %arrayidx61.i to %union.tree_node**
  %95 = load %union.tree_node** %94, align 8, !tbaa !0
  %code63.i = getelementptr inbounds %union.tree_node* %95, i64 0, i32 0, i32 0, i32 2
  %96 = bitcast [4 x i8]* %code63.i to i32*
  %bf.load64.i = load i32* %96, align 8
  %bf.clear65.i = and i32 %bf.load64.i, 255
  %idxprom662.i = zext i32 %bf.clear65.i to i64
  %arrayidx67.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom662.i
  %97 = load i8* %arrayidx67.i, align 1, !tbaa !1
  %cmp68.i = icmp eq i8 %97, 100
  br i1 %cmp68.i, label %land.lhs.true70.i, label %if.end114.i

land.lhs.true70.i:                                ; preds = %land.lhs.true57.i
  %rtl.i = getelementptr inbounds %union.tree_node* %95, i64 0, i32 0, i32 17
  %98 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !0
  %tobool77.i = icmp eq %struct.rtx_def* %98, null
  br i1 %tobool77.i, label %cond.false.i1832, label %cond.end.i1834

cond.false.i1832:                                 ; preds = %land.lhs.true70.i
  call void @make_decl_rtl(%union.tree_node* %95, i8* null) #7
  %99 = load %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %operands96.i = getelementptr inbounds %union.tree_node* %99, i64 0, i32 0, i32 2
  %arrayidx97.i = getelementptr inbounds i32* %operands96.i, i64 2
  %100 = bitcast i32* %arrayidx97.i to %union.tree_node**
  %101 = load %union.tree_node** %100, align 8, !tbaa !0
  %rtl99.i = getelementptr inbounds %union.tree_node* %101, i64 0, i32 0, i32 17
  %102 = load %struct.rtx_def** %rtl99.i, align 8, !tbaa !0
  br label %cond.end.i1834

cond.end.i1834:                                   ; preds = %cond.false.i1832, %land.lhs.true70.i
  %103 = phi %union.tree_node* [ %101, %cond.false.i1832 ], [ %95, %land.lhs.true70.i ]
  %cond.i1833 = phi %struct.rtx_def* [ %102, %cond.false.i1832 ], [ %98, %land.lhs.true70.i ]
  %104 = bitcast %struct.rtx_def* %cond.i1833 to i32*
  %bf.load100.i = load i32* %104, align 8
  %bf.clear101.i = and i32 %bf.load100.i, 65535
  %cmp102.i = icmp eq i32 %bf.clear101.i, 61
  br i1 %cmp102.i, label %if.end114.i, label %if.then104.i

if.then104.i:                                     ; preds = %cond.end.i1834
  store %union.tree_node* %103, %union.tree_node** %tree_value.i, align 8, !tbaa !0
  br label %if.end114.i

if.end114.i:                                      ; preds = %if.then104.i, %cond.end.i1834, %land.lhs.true57.i, %if.then48.i
  %call115.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %type.1.i) #7
  %105 = load %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %call119.i = call %union.tree_node* @build1(i32 121, %union.tree_node* %call115.i, %union.tree_node* %105) #7
  store %union.tree_node* %call119.i, %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %call123.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %type.1.i) #7
  br label %if.end200.i

if.else124.i:                                     ; preds = %if.then43.i
  br i1 %cmp56.i, label %if.then134.i, label %if.else144.i

if.then134.i:                                     ; preds = %if.else124.i
  %call135.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %type.1.i) #7
  %106 = load %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %call139.i = call %union.tree_node* @build1(i32 121, %union.tree_node* %call135.i, %union.tree_node* %106) #7
  store %union.tree_node* %call139.i, %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %call143.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %type.1.i) #7
  br label %if.end200.i

if.else144.i:                                     ; preds = %if.else124.i
  %107 = load %union.tree_node** %86, align 8, !tbaa !0
  %cmp147.i = icmp eq %union.tree_node* %107, null
  br i1 %cmp147.i, label %if.then170.i, label %lor.lhs.false149.i

lor.lhs.false149.i:                               ; preds = %if.else144.i
  %code153.i = getelementptr inbounds %union.tree_node* %107, i64 0, i32 0, i32 0, i32 2
  %108 = bitcast [4 x i8]* %code153.i to i32*
  %bf.load154.i = load i32* %108, align 8
  %bf.clear155.i = and i32 %bf.load154.i, 255
  %cmp156.i = icmp eq i32 %bf.clear155.i, 25
  br i1 %cmp156.i, label %lor.lhs.false158.i, label %if.then170.i

lor.lhs.false158.i:                               ; preds = %lor.lhs.false149.i
  %109 = load i32* @flag_stack_check, align 4, !tbaa !3
  %tobool159.i = icmp eq i32 %109, 0
  br i1 %tobool159.i, label %if.else183.i, label %land.lhs.true160.i

land.lhs.true160.i:                               ; preds = %lor.lhs.false158.i
  %110 = getelementptr inbounds %union.tree_node* %type.1.i, i64 0, i32 0, i32 4
  %111 = load %union.tree_node** %110, align 8, !tbaa !0
  %112 = load i32* @target_flags, align 4, !tbaa !3
  %and162.i = lshr i32 %112, 23
  %113 = and i32 %and162.i, 4
  %sub165.i = sub i32 4092, %113
  %div.i = udiv i32 %sub165.i, 100
  %conv1661.i = zext i32 %div.i to i64
  %call167.i = call i32 @compare_tree_int(%union.tree_node* %111, i64 %conv1661.i) #7
  %cmp168.i = icmp sgt i32 %call167.i, 0
  br i1 %cmp168.i, label %if.then170.i, label %if.else183.i

if.then170.i:                                     ; preds = %land.lhs.true160.i, %lor.lhs.false149.i, %if.else144.i
  %114 = load %union.tree_node** %73, align 8, !tbaa !0
  %call173.i = call %struct.rtx_def* @expr_size(%union.tree_node* %114) #7
  %115 = load %struct.rtx_def** %old_stack_level, align 8, !tbaa !0
  %cmp174.i = icmp eq %struct.rtx_def* %115, null
  br i1 %cmp174.i, label %if.then176.i, label %if.end179.i

if.then176.i:                                     ; preds = %if.then170.i
  call void @emit_stack_save(i32 0, %struct.rtx_def** %old_stack_level, %struct.rtx_def* null) #7
  %116 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr.i = getelementptr inbounds %struct.function* %116, i64 0, i32 2
  %117 = load %struct.expr_status** %expr.i, align 8, !tbaa !0
  %x_pending_stack_adjust.i = getelementptr inbounds %struct.expr_status* %117, i64 0, i32 0
  %118 = load i32* %x_pending_stack_adjust.i, align 4, !tbaa !3
  store i32 0, i32* %x_pending_stack_adjust.i, align 4, !tbaa !3
  br label %if.end179.i

if.end179.i:                                      ; preds = %if.then176.i, %if.then170.i
  %119 = phi i32 [ %118, %if.then176.i ], [ %72, %if.then170.i ]
  %align.i = getelementptr inbounds %union.tree_node* %type.1.i, i64 0, i32 0, i32 7
  %120 = bitcast %union.tree_node** %align.i to i32*
  %121 = load i32* %120, align 4, !tbaa !3
  %call181.i = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call173.i, %struct.rtx_def* null, i32 %121) #7
  %call182.i = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call181.i) #7
  call void @set_mem_attributes(%struct.rtx_def* %call182.i, %union.tree_node* %type.1.i, i32 1) #7
  br label %if.end185.i

if.else183.i:                                     ; preds = %land.lhs.true160.i, %lor.lhs.false158.i
  %call184.i = call %struct.rtx_def* @assign_temp(%union.tree_node* %type.1.i, i32 0, i32 1, i32 0) #7
  br label %if.end185.i

if.end185.i:                                      ; preds = %if.else183.i, %if.end179.i
  %122 = phi i32 [ %119, %if.end179.i ], [ %72, %if.else183.i ]
  %copy.0.i = phi %struct.rtx_def* [ %call182.i, %if.end179.i ], [ %call184.i, %if.else183.i ]
  %123 = load %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %call189.i = call %struct.rtx_def* @store_expr(%union.tree_node* %123, %struct.rtx_def* %copy.0.i, i32 0) #7
  %and190.i = and i32 %and190.i2071, -4610
  %call191.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %type.1.i) #7
  %call192.i = call %union.tree_node* @make_tree(%union.tree_node* %type.1.i, %struct.rtx_def* %copy.0.i) #7
  %call193.i = call %union.tree_node* @build1(i32 121, %union.tree_node* %call191.i, %union.tree_node* %call192.i) #7
  store %union.tree_node* %call193.i, %union.tree_node** %tree_value.i, align 8, !tbaa !0
  %call197.i = call %union.tree_node* @build_pointer_type(%union.tree_node* %type.1.i) #7
  br label %if.end200.i

if.end200.i:                                      ; preds = %if.end185.i, %if.then134.i, %if.end114.i, %lor.lhs.false37.i
  %and190.i2070 = phi i32 [ %and190.i2071, %if.end114.i ], [ %and190.i2071, %if.then134.i ], [ %and190.i, %if.end185.i ], [ %and190.i2071, %lor.lhs.false37.i ]
  %124 = phi i32 [ %72, %if.end114.i ], [ %72, %if.then134.i ], [ %122, %if.end185.i ], [ %72, %lor.lhs.false37.i ]
  %type.2.i = phi %union.tree_node* [ %call123.i, %if.end114.i ], [ %call143.i, %if.then134.i ], [ %call197.i, %if.end185.i ], [ %type.1.i, %lor.lhs.false37.i ]
  %type201.i = bitcast %union.tree_node* %type.2.i to %struct.tree_type*
  %mode202.i = getelementptr inbounds %struct.tree_type* %type201.i, i64 0, i32 6
  %125 = bitcast [4 x i8]* %mode202.i to i32*
  %bf.load203.i = load i32* %125, align 4
  %bf.lshr204.i = lshr i32 %bf.load203.i, 9
  %bf.clear205.i = and i32 %bf.lshr204.i, 127
  %unsigned_flag.i = getelementptr inbounds %union.tree_node* %type.2.i, i64 0, i32 0, i32 0, i32 2
  %126 = bitcast [4 x i8]* %unsigned_flag.i to i32*
  %bf.load207.i = load i32* %126, align 8
  %bf.lshr208.i = lshr i32 %bf.load207.i, 13
  %bf.clear209.i = and i32 %bf.lshr208.i, 1
  %unsignedp212.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 6
  store i32 %bf.clear209.i, i32* %unsignedp212.i, align 4, !tbaa !3
  %mode215.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 1
  store i32 %bf.clear205.i, i32* %mode215.i, align 4, !tbaa !4
  %cmp216.i = icmp slt i32 %argpos.08.i, %num_actuals.0.lcssa
  %conv217.i = zext i1 %cmp216.i to i32
  %call218.i = call %struct.rtx_def* @function_arg(%struct.ix86_args* %args_so_far, i32 %bf.clear205.i, %union.tree_node* %type.2.i, i32 %conv217.i) #7
  %reg.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 4
  store %struct.rtx_def* %call218.i, %struct.rtx_def** %reg.i, align 8, !tbaa !0
  %tail_call_reg.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 5
  store %struct.rtx_def* %call218.i, %struct.rtx_def** %tail_call_reg.i, align 8, !tbaa !0
  %tobool229.i = icmp eq %struct.rtx_def* %call218.i, null
  br i1 %tobool229.i, label %if.end233.i, label %if.then230.i

if.then230.i:                                     ; preds = %if.end200.i
  %partial.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 7
  store i32 0, i32* %partial.i, align 4, !tbaa !3
  br label %if.end233.i

if.end233.i:                                      ; preds = %if.then230.i, %if.end200.i
  %cmp234.i = icmp eq %union.tree_node* %type.2.i, null
  br i1 %cmp234.i, label %land.end278.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end233.i
  %size237.i = getelementptr inbounds %union.tree_node* %type.2.i, i64 0, i32 0, i32 2
  %127 = bitcast i32* %size237.i to %union.tree_node**
  %128 = load %union.tree_node** %127, align 8, !tbaa !0
  %code239.i = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 0, i32 2
  %129 = bitcast [4 x i8]* %code239.i to i32*
  %bf.load240.i = load i32* %129, align 8
  %bf.clear241.i = and i32 %bf.load240.i, 255
  %cmp242.i = icmp eq i32 %bf.clear241.i, 25
  br i1 %cmp242.i, label %lor.lhs.false244.i, label %land.end278.i

lor.lhs.false244.i:                               ; preds = %land.rhs.i
  %bf.load247.i = load i32* %126, align 8
  %bf.clear249.i = and i32 %bf.load247.i, 1024
  %tobool250.i = icmp ne i32 %bf.clear249.i, 0
  %cmp252.i = icmp eq i32 %bf.clear205.i, 6
  %or.cond3.i = or i1 %tobool250.i, %cmp252.i
  br i1 %or.cond3.i, label %land.end278.i, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %lor.lhs.false244.i
  %cmp254.not.not.i = icmp eq i32 %bf.clear205.i, 51
  br i1 %cmp254.not.not.i, label %land.lhs.true268.i, label %land.end278.i

land.lhs.true268.i:                               ; preds = %lor.rhs.i
  %call269.i = call i64 @int_size_in_bytes(%union.tree_node* %type.2.i) #7
  %.pre.i = load %struct.rtx_def** %reg.i, align 8, !tbaa !0
  br label %land.end278.i

land.end278.i:                                    ; preds = %land.lhs.true268.i, %lor.rhs.i, %lor.lhs.false244.i, %land.rhs.i, %if.end233.i
  %130 = phi %struct.rtx_def* [ %call218.i, %if.end233.i ], [ %call218.i, %lor.lhs.false244.i ], [ %call218.i, %land.rhs.i ], [ %call218.i, %lor.rhs.i ], [ %.pre.i, %land.lhs.true268.i ]
  %131 = phi i32 [ 0, %if.end233.i ], [ 1, %lor.lhs.false244.i ], [ 1, %land.rhs.i ], [ 0, %lor.rhs.i ], [ 0, %land.lhs.true268.i ]
  %pass_on_stack.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 8
  store i32 %131, i32* %pass_on_stack.i, align 4, !tbaa !3
  %tobool284.i = icmp eq %struct.rtx_def* %130, null
  br i1 %tobool284.i, label %if.end307.i, label %land.lhs.true285.i

land.lhs.true285.i:                               ; preds = %land.end278.i
  %132 = bitcast %struct.rtx_def* %130 to i32*
  %bf.load289.i = load i32* %132, align 8
  %bf.clear290.i = and i32 %bf.load289.i, 65535
  %cmp291.i = icmp eq i32 %bf.clear290.i, 39
  br i1 %cmp291.i, label %land.lhs.true293.i, label %if.end307.i

land.lhs.true293.i:                               ; preds = %land.lhs.true285.i
  %arrayidx297.i = getelementptr inbounds %struct.rtx_def* %130, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx297.i to %struct.rtvec_def**
  %133 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !0
  %arrayidx298.i = getelementptr inbounds %struct.rtvec_def* %133, i64 0, i32 1, i64 0
  %134 = load %struct.rtx_def** %arrayidx298.i, align 8, !tbaa !0
  %arrayidx300.i = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 1, i64 0
  %rtx.i1835 = bitcast %union.rtunion_def* %arrayidx300.i to %struct.rtx_def**
  %135 = load %struct.rtx_def** %rtx.i1835, align 8, !tbaa !0
  %cmp301.i = icmp eq %struct.rtx_def* %135, null
  br i1 %cmp301.i, label %if.then303.i, label %if.end307.i

if.then303.i:                                     ; preds = %land.lhs.true293.i
  store i32 1, i32* %pass_on_stack.i, align 4, !tbaa !3
  br label %if.end307.i

if.end307.i:                                      ; preds = %if.then303.i, %land.lhs.true293.i, %land.lhs.true285.i, %land.end278.i
  %136 = phi i32 [ %131, %land.end278.i ], [ 1, %if.then303.i ], [ %131, %land.lhs.true293.i ], [ %131, %land.lhs.true285.i ]
  %bf.load310.i = load i32* %126, align 8
  %bf.clear312.i = and i32 %bf.load310.i, 1024
  %tobool313.i = icmp eq i32 %bf.clear312.i, 0
  br i1 %tobool313.i, label %lor.lhs.false314.i, label %if.then325.i

lor.lhs.false314.i:                               ; preds = %if.end307.i
  %tobool318.i = icmp eq i32 %136, 0
  %brmerge.i = or i1 %tobool318.i, %tobool284.i
  br i1 %brmerge.i, label %if.end326.i, label %if.then325.i

if.then325.i:                                     ; preds = %lor.lhs.false314.i, %if.end307.i
  br label %if.end326.i

if.end326.i:                                      ; preds = %if.then325.i, %lor.lhs.false314.i
  %137 = phi i32 [ %71, %lor.lhs.false314.i ], [ 1, %if.then325.i ]
  %and334.i = and i32 %and190.i2070, -4097
  %and190.i2070.and334.i = select i1 %tobool313.i, i32 %and190.i2070, i32 %and334.i
  br i1 %tobool284.i, label %if.end366.i, label %lor.lhs.false341.i

lor.lhs.false341.i:                               ; preds = %if.end326.i
  %partial344.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 7
  %138 = load i32* %partial344.i, align 4, !tbaa !3
  %139 = or i32 %138, %136
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %if.end366.thread.i, label %if.end366.i

if.end366.thread.i:                               ; preds = %lor.lhs.false341.i
  %slot_offset12.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 10
  %141 = bitcast %struct.args_size* %slot_offset12.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %64, i64 16, i32 8, i1 false) #4, !tbaa.struct !5
  %alignment_pad37113.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 17
  %142 = bitcast %struct.args_size* %alignment_pad37113.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %63, i64 16, i32 8, i1 false) #4, !tbaa.struct !5
  br label %if.then379.i

if.end366.i:                                      ; preds = %lor.lhs.false341.i, %if.end326.i
  %cmp359.i = icmp ne %struct.rtx_def* %130, null
  %conv360.i = zext i1 %cmp359.i to i32
  %offset.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 9
  %size365.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 11
  call void @locate_and_pad_parm(i32 %bf.clear205.i, %union.tree_node* %type.2.i, i32 %conv360.i, %union.tree_node* %call, %struct.args_size* %args_size, %struct.args_size* %offset.i, %struct.args_size* %size365.i, %struct.args_size* %alignment_pad.i) #7
  %.pre10.i = load i32* %pass_on_stack.i, align 4, !tbaa !3
  %phitmp.i = icmp eq i32 %.pre10.i, 0
  %slot_offset.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 10
  %143 = bitcast %struct.args_size* %slot_offset.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %64, i64 16, i32 8, i1 false) #4, !tbaa.struct !5
  %alignment_pad371.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 17
  %144 = bitcast %struct.args_size* %alignment_pad371.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %63, i64 16, i32 8, i1 false) #4, !tbaa.struct !5
  br i1 %phitmp.i, label %if.end366.i.if.then379.i_crit_edge, label %if.end366.if.end402_crit_edge.i

if.end366.i.if.then379.i_crit_edge:               ; preds = %if.end366.i
  %partial382.i.phi.trans.insert = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 7
  %.pre2200 = load i32* %partial382.i.phi.trans.insert, align 4, !tbaa !3
  br label %if.then379.i

if.end366.if.end402_crit_edge.i:                  ; preds = %if.end366.i
  %constant406.phi.trans.insert.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 11, i32 0
  %.pre11.i = load i64* %constant406.phi.trans.insert.i, align 8, !tbaa !6
  br label %if.end402.i

if.then379.i:                                     ; preds = %if.end366.i.if.then379.i_crit_edge, %if.end366.thread.i
  %145 = phi i32 [ %.pre2200, %if.end366.i.if.then379.i_crit_edge ], [ 0, %if.end366.thread.i ]
  %146 = load i32* @target_flags, align 4, !tbaa !3
  %and383.i = and i32 %146, 33554432
  %147 = lshr exact i32 %and383.i, 23
  %148 = add i32 %147, 4
  %mul.i = mul nsw i32 %148, %145
  %149 = lshr exact i32 %and383.i, 20
  %150 = add i32 %149, 32
  %div389.i = sdiv i32 %150, 8
  %div390.i = srem i32 %mul.i, %div389.i
  %mul395.i = sub i32 %mul.i, %div390.i
  %conv396.i = sext i32 %mul395.i to i64
  %constant400.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 11, i32 0
  %151 = load i64* %constant400.i, align 8, !tbaa !6
  %sub401.i = sub nsw i64 %151, %conv396.i
  store i64 %sub401.i, i64* %constant400.i, align 8, !tbaa !6
  br label %if.end402.i

if.end402.i:                                      ; preds = %if.then379.i, %if.end366.if.end402_crit_edge.i
  %152 = phi i64 [ %.pre11.i, %if.end366.if.end402_crit_edge.i ], [ %sub401.i, %if.then379.i ]
  %153 = load i64* %constant.i, align 8, !tbaa !6
  %add.i = add nsw i64 %153, %152
  store i64 %add.i, i64* %constant.i, align 8, !tbaa !6
  %var411.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i, i32 11, i32 1
  %154 = load %union.tree_node** %var411.i, align 8, !tbaa !0
  %tobool412.i = icmp eq %union.tree_node* %154, null
  br i1 %tobool412.i, label %if.end439.i, label %do.body.i

do.body.i:                                        ; preds = %if.end402.i
  %call419.i = call i32 @host_integerp(%union.tree_node* %154, i32 0) #7
  %tobool420.i = icmp eq i32 %call419.i, 0
  br i1 %tobool420.i, label %if.else425.i, label %if.then421.i

if.then421.i:                                     ; preds = %do.body.i
  %call422.i = call i64 @tree_low_cst(%union.tree_node* %154, i32 0) #7
  %155 = load i64* %constant.i, align 8, !tbaa !6
  %add424.i = add nsw i64 %155, %call422.i
  store i64 %add424.i, i64* %constant.i, align 8, !tbaa !6
  br label %if.end439.i

if.else425.i:                                     ; preds = %do.body.i
  %156 = load %union.tree_node** %var.i, align 8, !tbaa !0
  %cmp427.i = icmp eq %union.tree_node* %156, null
  %157 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !0
  %call430.i = call %union.tree_node* @convert(%union.tree_node* %157, %union.tree_node* %154) #7
  br i1 %cmp427.i, label %if.then429.i, label %if.else432.i

if.then429.i:                                     ; preds = %if.else425.i
  store %union.tree_node* %call430.i, %union.tree_node** %var.i, align 8, !tbaa !0
  br label %if.end439.i

if.else432.i:                                     ; preds = %if.else425.i
  %call435.i = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %156, %union.tree_node* %call430.i) #7
  store %union.tree_node* %call435.i, %union.tree_node** %var.i, align 8, !tbaa !0
  br label %if.end439.i

if.end439.i:                                      ; preds = %if.else432.i, %if.then429.i, %if.then421.i, %if.end402.i
  %bf.load442.i = load i32* %125, align 4
  %bf.lshr443.i = lshr i32 %bf.load442.i, 9
  %bf.clear444.i = and i32 %bf.lshr443.i, 127
  call void @function_arg_advance(%struct.ix86_args* %args_so_far, i32 %bf.clear444.i, %union.tree_node* %type.2.i, i32 %conv217.i) #7
  %chain.i = getelementptr inbounds %union.tree_node* %p.06.i, i64 0, i32 0, i32 0, i32 0
  %158 = load %union.tree_node** %chain.i, align 8, !tbaa !0
  %indvars.iv.next.i = add i64 %indvars.iv.i, %70
  %inc449.i = add nsw i32 %argpos.08.i, 1
  %tobool3.i = icmp eq %union.tree_node* %158, null
  br i1 %tobool3.i, label %initialize_argument_information.exit, label %for.body.i

initialize_argument_information.exit:             ; preds = %if.end439.i
  %.pre = load %union.tree_node** %var.i, align 8, !tbaa !0
  %phitmp2203 = icmp eq %union.tree_node* %.pre, null
  call void @llvm.lifetime.end(i64 16, i8* %63) #4
  br i1 %phitmp2203, label %if.end204, label %if.end204.thread

if.end204.thread:                                 ; preds = %initialize_argument_information.exit
  br label %finalize_must_preallocate.exit

if.end204:                                        ; preds = %for.end, %initialize_argument_information.exit
  %159 = phi i32 [ %124, %initialize_argument_information.exit ], [ 0, %for.end ]
  %and190.i20762204 = phi i32 [ %and190.i2070.and334.i, %initialize_argument_information.exit ], [ %or164, %for.end ]
  %160 = phi i32 [ %137, %initialize_argument_information.exit ], [ %lnot.ext, %for.end ]
  %tobool.i1836 = icmp eq i32 %160, 0
  br i1 %tobool.i1836, label %for.cond.preheader.i, label %finalize_must_preallocate.exit

for.cond.preheader.i:                             ; preds = %if.end204
  %cmp97.i = icmp sgt i32 %num_actuals.0.lcssa, 0
  br i1 %cmp97.i, label %for.body.i1839, label %for.end.i

for.body.i1839:                                   ; preds = %for.cond.preheader.i, %for.inc.i
  %indvars.iv.i1837 = phi i64 [ %indvars.iv.next.i1850, %for.inc.i ], [ 0, %for.cond.preheader.i ]
  %copy_to_evaluate_size.0100.i = phi i32 [ %copy_to_evaluate_size.1.i, %for.inc.i ], [ 0, %for.cond.preheader.i ]
  %partial_seen.099.i = phi i32 [ %partial_seen.1.i, %for.inc.i ], [ 0, %for.cond.preheader.i ]
  %partial.i1838 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1837, i32 7
  %161 = load i32* %partial.i1838, align 4, !tbaa !3
  %cmp2.i = icmp sgt i32 %161, 0
  br i1 %cmp2.i, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %for.body.i1839
  %pass_on_stack.i1840 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1837, i32 8
  %162 = load i32* %pass_on_stack.i1840, align 4, !tbaa !3
  %tobool5.i = icmp eq i32 %162, 0
  br i1 %tobool5.i, label %if.end13.i1845, label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i, %for.body.i1839
  %tobool7.i = icmp eq i32 %partial_seen.099.i, 0
  br i1 %tobool7.i, label %if.end13.i1845, label %land.lhs.true8.i

land.lhs.true8.i:                                 ; preds = %if.else.i
  %reg.i1841 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1837, i32 4
  %163 = load %struct.rtx_def** %reg.i1841, align 8, !tbaa !0
  %cmp11.i = icmp eq %struct.rtx_def* %163, null
  %.must_preallocate.addr.0.i = zext i1 %cmp11.i to i32
  br label %if.end13.i1845

if.end13.i1845:                                   ; preds = %land.lhs.true8.i, %if.else.i, %land.lhs.true.i
  %must_preallocate.addr.1.i = phi i32 [ 0, %if.else.i ], [ 0, %land.lhs.true.i ], [ %.must_preallocate.addr.0.i, %land.lhs.true8.i ]
  %partial_seen.1.i = phi i32 [ 0, %if.else.i ], [ 1, %land.lhs.true.i ], [ %partial_seen.099.i, %land.lhs.true8.i ]
  %tree_value.i1842 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1837, i32 0
  %164 = load %union.tree_node** %tree_value.i1842, align 8, !tbaa !0
  %type.i = getelementptr inbounds %union.tree_node* %164, i64 0, i32 0, i32 0, i32 1
  %165 = load %union.tree_node** %type.i, align 8, !tbaa !0
  %type16.i = bitcast %union.tree_node* %165 to %struct.tree_type*
  %mode.i = getelementptr inbounds %struct.tree_type* %type16.i, i64 0, i32 6
  %166 = bitcast [4 x i8]* %mode.i to i32*
  %bf.load.i1843 = load i32* %166, align 4
  %bf.clear.i1844 = and i32 %bf.load.i1843, 65024
  %cmp17.i = icmp eq i32 %bf.clear.i1844, 26112
  br i1 %cmp17.i, label %land.lhs.true18.i, label %for.inc.i

land.lhs.true18.i:                                ; preds = %if.end13.i1845
  %code.i1846 = getelementptr inbounds %union.tree_node* %164, i64 0, i32 0, i32 0, i32 2
  %167 = bitcast [4 x i8]* %code.i1846 to i32*
  %bf.load23.i = load i32* %167, align 8
  %bf.clear24.i = and i32 %bf.load23.i, 255
  switch i32 %bf.clear24.i, label %lor.lhs.false43.i [
    i32 53, label %if.then54.i
    i32 50, label %if.then54.i
    i32 51, label %if.then54.i
  ]

lor.lhs.false43.i:                                ; preds = %land.lhs.true18.i
  %addressable_flag.i1847 = getelementptr inbounds %union.tree_node* %165, i64 0, i32 0, i32 0, i32 2
  %168 = bitcast [4 x i8]* %addressable_flag.i1847 to i32*
  %bf.load50.i = load i32* %168, align 8
  %bf.clear52.i = and i32 %bf.load50.i, 1024
  %tobool53.i = icmp eq i32 %bf.clear52.i, 0
  br i1 %tobool53.i, label %for.inc.i, label %if.then54.i

if.then54.i:                                      ; preds = %lor.lhs.false43.i, %land.lhs.true18.i, %land.lhs.true18.i, %land.lhs.true18.i
  %call.i1848 = call i64 @int_size_in_bytes(%union.tree_node* %165) #7
  %conv94.i = zext i32 %copy_to_evaluate_size.0100.i to i64
  %add.i1849 = add nsw i64 %call.i1848, %conv94.i
  %conv60.i = trunc i64 %add.i1849 to i32
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then54.i, %lor.lhs.false43.i, %if.end13.i1845
  %copy_to_evaluate_size.1.i = phi i32 [ %conv60.i, %if.then54.i ], [ %copy_to_evaluate_size.0100.i, %lor.lhs.false43.i ], [ %copy_to_evaluate_size.0100.i, %if.end13.i1845 ]
  %indvars.iv.next.i1850 = add i64 %indvars.iv.i1837, 1
  %169 = trunc i64 %indvars.iv.next.i1850 to i32
  %cmp.i1851 = icmp slt i32 %169, %num_actuals.0.lcssa
  %lnot.i = icmp eq i32 %must_preallocate.addr.1.i, 0
  %or.cond.i1852 = and i1 %cmp.i1851, %lnot.i
  br i1 %or.cond.i1852, label %for.body.i1839, label %for.end.i

for.end.i:                                        ; preds = %for.inc.i, %for.cond.preheader.i
  %copy_to_evaluate_size.0.lcssa.i = phi i32 [ 0, %for.cond.preheader.i ], [ %copy_to_evaluate_size.1.i, %for.inc.i ]
  %must_preallocate.addr.0.lcssa.i = phi i32 [ 0, %for.cond.preheader.i ], [ %must_preallocate.addr.1.i, %for.inc.i ]
  %mul.i1853 = shl nsw i32 %copy_to_evaluate_size.0.lcssa.i, 1
  %conv62.i = sext i32 %mul.i1853 to i64
  %170 = load i64* %constant.i, align 8, !tbaa !6
  %cmp63.i = icmp sge i64 %conv62.i, %170
  %cmp67.i = icmp sgt i64 %170, 0
  %or.cond95.i = and i1 %cmp63.i, %cmp67.i
  %.must_preallocate.addr.096.i = select i1 %or.cond95.i, i32 1, i32 %must_preallocate.addr.0.lcssa.i
  br label %finalize_must_preallocate.exit

finalize_must_preallocate.exit:                   ; preds = %if.end204, %if.end204.thread, %for.end.i
  %171 = phi i32 [ %159, %for.end.i ], [ %124, %if.end204.thread ], [ %159, %if.end204 ]
  %and190.i20752084 = phi i32 [ %and190.i20762204, %for.end.i ], [ %and334.i, %if.end204.thread ], [ %and190.i20762204, %if.end204 ]
  %call2051855 = phi i32 [ %.must_preallocate.addr.096.i, %for.end.i ], [ 1, %if.end204.thread ], [ %160, %if.end204 ]
  br i1 %tobool171, label %land.lhs.true207, label %if.end223

land.lhs.true207:                                 ; preds = %finalize_must_preallocate.exit
  %172 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !0
  %call208 = call i32 @reg_mentioned_p(%struct.rtx_def* %172, %struct.rtx_def* %structure_value_addr.0) #7
  %tobool209 = icmp eq i32 %call208, 0
  br i1 %tobool209, label %lor.lhs.false210, label %land.lhs.true213

lor.lhs.false210:                                 ; preds = %land.lhs.true207
  %173 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !0
  %call211 = call i32 @reg_mentioned_p(%struct.rtx_def* %173, %struct.rtx_def* %structure_value_addr.0) #7
  %tobool212 = icmp eq i32 %call211, 0
  br i1 %tobool212, label %if.end223, label %land.lhs.true213

land.lhs.true213:                                 ; preds = %lor.lhs.false210, %land.lhs.true207
  %174 = load %union.tree_node** %var.i, align 8, !tbaa !0
  %tobool215 = icmp eq %union.tree_node* %174, null
  br i1 %tobool215, label %lor.lhs.false216, label %if.then221

lor.lhs.false216:                                 ; preds = %land.lhs.true213
  %175 = load i32* @target_flags, align 4, !tbaa !3
  %and217 = and i32 %175, 4096
  %tobool218 = icmp eq i32 %and217, 0
  br i1 %tobool218, label %land.lhs.true219, label %if.end223

land.lhs.true219:                                 ; preds = %lor.lhs.false216
  %176 = load i64* %constant.i, align 8, !tbaa !6
  %tobool220 = icmp eq i64 %176, 0
  br i1 %tobool220, label %if.end223, label %if.then221

if.then221:                                       ; preds = %land.lhs.true219, %land.lhs.true213
  %call222 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %structure_value_addr.0) #7
  br label %if.end223

if.end223:                                        ; preds = %land.lhs.true219, %lor.lhs.false216, %lor.lhs.false210, %if.then221, %finalize_must_preallocate.exit
  %structure_value_addr.1 = phi %struct.rtx_def* [ %call222, %if.then221 ], [ %structure_value_addr.0, %lor.lhs.false216 ], [ %structure_value_addr.0, %land.lhs.true219 ], [ %structure_value_addr.0, %lor.lhs.false210 ], [ null, %finalize_must_preallocate.exit ]
  %177 = load i32* @expand_call.currently_expanding_call, align 4, !tbaa !3
  %inc224 = add nsw i32 %177, 1
  store i32 %inc224, i32* @expand_call.currently_expanding_call, align 4, !tbaa !3
  %cmp225 = icmp eq i32 %177, 0
  %178 = load i32* @flag_optimize_sibling_calls, align 4, !tbaa !3
  %tobool228 = icmp ne i32 %178, 0
  %or.cond1455 = and i1 %cmp225, %tobool228
  %179 = load i32* @rtx_equal_function_value_matters, align 4, !tbaa !3
  %tobool230 = icmp ne i32 %179, 0
  %or.cond1456 = and i1 %or.cond1455, %tobool230
  br i1 %or.cond1456, label %lor.lhs.false231, label %if.then259

lor.lhs.false231:                                 ; preds = %if.end223
  %call232 = call i32 @any_pending_cleanups(i32 1) #7
  %tobool233 = icmp eq i32 %call232, 0
  br i1 %tobool233, label %lor.lhs.false234, label %if.then259

lor.lhs.false234:                                 ; preds = %lor.lhs.false231
  %180 = load %union.tree_node** %var.i, align 8, !tbaa !0
  %tobool236 = icmp eq %union.tree_node* %180, null
  br i1 %tobool236, label %lor.lhs.false240, label %if.then259

lor.lhs.false240:                                 ; preds = %lor.lhs.false234
  %181 = load %union.tree_node** %arrayidx7, align 8, !tbaa !0
  %code245 = getelementptr inbounds %union.tree_node* %181, i64 0, i32 0, i32 0, i32 2
  %182 = bitcast [4 x i8]* %code245 to i32*
  %bf.load246 = load i32* %182, align 8
  %bf.clear247 = and i32 %bf.load246, 255
  %cmp248 = icmp eq i32 %bf.clear247, 121
  br i1 %cmp248, label %lor.lhs.false250, label %if.then259

lor.lhs.false250:                                 ; preds = %lor.lhs.false240
  %operands255 = getelementptr inbounds %union.tree_node* %181, i64 0, i32 0, i32 2
  %arrayidx256 = bitcast i32* %operands255 to %union.tree_node**
  %183 = load %union.tree_node** %arrayidx256, align 8, !tbaa !0
  %184 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %cmp257 = icmp eq %union.tree_node* %183, %184
  br i1 %cmp257, label %if.end260, label %if.then259

if.then259:                                       ; preds = %lor.lhs.false234, %lor.lhs.false231, %if.end223, %lor.lhs.false250, %lor.lhs.false240
  %try_tail_recursion.02088 = phi i32 [ 1, %lor.lhs.false250 ], [ 1, %lor.lhs.false240 ], [ 0, %if.end223 ], [ 0, %lor.lhs.false231 ], [ 0, %lor.lhs.false234 ]
  br label %if.end260

if.end260:                                        ; preds = %lor.lhs.false250, %if.then259
  %try_tail_recursion.02087 = phi i32 [ %try_tail_recursion.02088, %if.then259 ], [ 1, %lor.lhs.false250 ]
  %try_tail_recursion.1 = phi i32 [ 0, %if.then259 ], [ 1, %lor.lhs.false250 ]
  %tobool261 = icmp ne i32 %try_tail_recursion.02087, 0
  %cmp263 = icmp eq %struct.rtx_def* %structure_value_addr.1, null
  %or.cond1801 = and i1 %tobool261, %cmp263
  %or.cond1801.not = xor i1 %or.cond1801, true
  %cmp266 = icmp eq %union.tree_node* %call, null
  %or.cond1802 = or i1 %cmp266, %or.cond1801.not
  br i1 %or.cond1802, label %if.then391, label %lor.lhs.false268

lor.lhs.false268:                                 ; preds = %if.end260
  %and269 = and i32 %and190.i20752084, 96
  %tobool270 = icmp eq i32 %and269, 0
  br i1 %tobool270, label %lor.lhs.false271, label %if.then391

lor.lhs.false271:                                 ; preds = %lor.lhs.false268
  %volatile_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %185 = bitcast [4 x i8]* %volatile_flag to i32*
  %bf.load273 = load i32* %185, align 8
  %bf.clear275 = and i32 %bf.load273, 2048
  %tobool276.not = icmp eq i32 %bf.clear275, 0
  br i1 %tobool276.not, label %land.lhs.true279, label %if.then391

land.lhs.true279:                                 ; preds = %lor.lhs.false271
  %186 = load i32* @flag_pic, align 4, !tbaa !3
  %tobool280 = icmp eq i32 %186, 0
  br i1 %tobool280, label %land.lhs.true287, label %lor.lhs.false281

lor.lhs.false281:                                 ; preds = %land.lhs.true279
  %bf.clear285 = and i32 %bf.load273, 524288
  %tobool286 = icmp eq i32 %bf.clear285, 0
  br i1 %tobool286, label %land.lhs.true287, label %if.then391

land.lhs.true287:                                 ; preds = %lor.lhs.false281, %land.lhs.true279
  %187 = load i32* @target_flags, align 4, !tbaa !3
  %and288 = and i32 %187, 32
  %tobool289 = icmp eq i32 %and288, 0
  br i1 %tobool289, label %lor.lhs.false375, label %lor.lhs.false290

lor.lhs.false290:                                 ; preds = %land.lhs.true287
  %type292 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  %188 = load %union.tree_node** %type292, align 8, !tbaa !0
  %type294 = getelementptr inbounds %union.tree_node* %188, i64 0, i32 0, i32 0, i32 1
  %189 = load %union.tree_node** %type294, align 8, !tbaa !0
  %type295 = bitcast %union.tree_node* %189 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type295, i64 0, i32 6
  %190 = bitcast [4 x i8]* %mode to i32*
  %bf.load296 = load i32* %190, align 4
  %bf.lshr297 = lshr i32 %bf.load296, 9
  %bf.clear298 = and i32 %bf.lshr297, 127
  %idxprom1798 = zext i32 %bf.clear298 to i64
  %arrayidx299 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom1798
  %191 = load i32* %arrayidx299, align 4, !tbaa !7
  switch i32 %191, label %lor.lhs.false375 [
    i32 2, label %lor.lhs.false330
    i32 6, label %lor.lhs.false330
    i32 8, label %lor.lhs.false330
  ]

lor.lhs.false330:                                 ; preds = %lor.lhs.false290, %lor.lhs.false290, %lor.lhs.false290
  %192 = load %struct.function** @cfun, align 8, !tbaa !0
  %decl331 = getelementptr inbounds %struct.function* %192, i64 0, i32 6
  %193 = load %union.tree_node** %decl331, align 8, !tbaa !0
  %type333 = getelementptr inbounds %union.tree_node* %193, i64 0, i32 0, i32 0, i32 1
  %194 = load %union.tree_node** %type333, align 8, !tbaa !0
  %type335 = getelementptr inbounds %union.tree_node* %194, i64 0, i32 0, i32 0, i32 1
  %195 = load %union.tree_node** %type335, align 8, !tbaa !0
  %type336 = bitcast %union.tree_node* %195 to %struct.tree_type*
  %mode337 = getelementptr inbounds %struct.tree_type* %type336, i64 0, i32 6
  %196 = bitcast [4 x i8]* %mode337 to i32*
  %bf.load338 = load i32* %196, align 4
  %bf.lshr339 = lshr i32 %bf.load338, 9
  %bf.clear340 = and i32 %bf.lshr339, 127
  %idxprom3411799 = zext i32 %bf.clear340 to i64
  %arrayidx342 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom3411799
  %197 = load i32* %arrayidx342, align 4, !tbaa !7
  switch i32 %197, label %if.then391 [
    i32 2, label %lor.lhs.false375
    i32 6, label %lor.lhs.false375
    i32 8, label %lor.lhs.false375
  ]

lor.lhs.false375:                                 ; preds = %lor.lhs.false330, %lor.lhs.false330, %lor.lhs.false330, %lor.lhs.false290, %land.lhs.true287
  %198 = load i64* %constant.i, align 8, !tbaa !6
  %199 = load %struct.function** @cfun, align 8, !tbaa !0
  %args_size377 = getelementptr inbounds %struct.function* %199, i64 0, i32 9
  %200 = load i32* %args_size377, align 4, !tbaa !3
  %conv378 = sext i32 %200 to i64
  %cmp379 = icmp sgt i64 %198, %conv378
  br i1 %cmp379, label %if.then391, label %lor.lhs.false381

lor.lhs.false381:                                 ; preds = %lor.lhs.false375
  %conv383 = trunc i64 %198 to i32
  %call384 = call i32 @ix86_return_pops_args(%union.tree_node* %call, %union.tree_node* %50, i32 %conv383) #7
  %201 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %type386 = getelementptr inbounds %union.tree_node* %201, i64 0, i32 0, i32 0, i32 1
  %202 = load %union.tree_node** %type386, align 8, !tbaa !0
  %203 = load %struct.function** @cfun, align 8, !tbaa !0
  %args_size387 = getelementptr inbounds %struct.function* %203, i64 0, i32 9
  %204 = load i32* %args_size387, align 4, !tbaa !3
  %call388 = call i32 @ix86_return_pops_args(%union.tree_node* %201, %union.tree_node* %202, i32 %204) #7
  %cmp389 = icmp eq i32 %call384, %call388
  br i1 %cmp389, label %if.end392, label %if.then391

if.then391:                                       ; preds = %lor.lhs.false271, %lor.lhs.false330, %if.end260, %lor.lhs.false281, %lor.lhs.false381, %lor.lhs.false268, %lor.lhs.false375
  br label %if.end392

if.end392:                                        ; preds = %lor.lhs.false381, %if.then391
  %try_tail_call.1 = phi i32 [ 0, %if.then391 ], [ %try_tail_recursion.02087, %lor.lhs.false381 ]
  %tobool395 = icmp eq i32 %try_tail_recursion.1, 0
  %205 = or i32 %try_tail_call.1, %try_tail_recursion.1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %if.end449, label %if.then396

if.then396:                                       ; preds = %if.end392
  %207 = load i32* @target_flags, align 4, !tbaa !3
  %208 = and i32 %207, 6144
  %209 = icmp eq i32 %208, 0
  %sub = add nsw i32 %num_actuals.0.lcssa, -1
  %.sub = select i1 %209, i32 0, i32 %sub
  %num_actuals.0. = select i1 %209, i32 %num_actuals.0.lcssa, i32 -1
  %cmp4072158 = icmp eq i32 %.sub, %num_actuals.0.
  br i1 %cmp4072158, label %for.end444, label %for.body409.lr.ph

for.body409.lr.ph:                                ; preds = %if.then396
  %210 = sext i32 %.sub to i64
  %211 = select i1 %209, i64 1, i64 -1
  br label %for.body409

for.body409:                                      ; preds = %for.body409.lr.ph, %for.inc443
  %indvars.iv2196 = phi i64 [ %210, %for.body409.lr.ph ], [ %indvars.iv.next2197, %for.inc443 ]
  %actparms.12160 = phi %union.tree_node* [ null, %for.body409.lr.ph ], [ %actparms.2, %for.inc443 ]
  %tree_value = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2196, i32 0
  %212 = load %union.tree_node** %tree_value, align 8, !tbaa !0
  %call412 = call i32 @unsafe_for_reeval(%union.tree_node* %212) #7
  switch i32 %call412, label %sw.default [
    i32 0, label %sw.epilog
    i32 1, label %sw.bb
    i32 2, label %sw.bb420
  ]

sw.bb:                                            ; preds = %for.body409
  %213 = load %union.tree_node** %tree_value, align 8, !tbaa !0
  %call416 = call %union.tree_node* @unsave_expr(%union.tree_node* %213) #7
  store %union.tree_node* %call416, %union.tree_node** %tree_value, align 8, !tbaa !0
  br label %sw.epilog

sw.bb420:                                         ; preds = %for.body409
  %214 = load %union.tree_node** %tree_value, align 8, !tbaa !0
  %type426 = getelementptr inbounds %union.tree_node* %214, i64 0, i32 0, i32 0, i32 1
  %215 = load %union.tree_node** %type426, align 8, !tbaa !0
  %call427 = call %union.tree_node* @build_decl(i32 34, %union.tree_node* null, %union.tree_node* %215) #7
  %216 = load %union.tree_node** %tree_value, align 8, !tbaa !0
  %call431 = call %struct.rtx_def* @expand_expr(%union.tree_node* %216, %struct.rtx_def* null, i32 0, i32 0) #7
  %rtl = getelementptr inbounds %union.tree_node* %call427, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call431, %struct.rtx_def** %rtl, align 8, !tbaa !0
  store %union.tree_node* %call427, %union.tree_node** %tree_value, align 8, !tbaa !0
  br label %sw.epilog

sw.default:                                       ; preds = %for.body409
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str3, i64 0, i64 0), i32 2528, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_call, i64 0, i64 0)) #10
  unreachable

sw.epilog:                                        ; preds = %sw.bb420, %sw.bb, %for.body409
  br i1 %tobool395, label %for.inc443, label %if.then437

if.then437:                                       ; preds = %sw.epilog
  %217 = load %union.tree_node** %tree_value, align 8, !tbaa !0
  %call441 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %217, %union.tree_node* %actparms.12160) #7
  br label %for.inc443

for.inc443:                                       ; preds = %sw.epilog, %if.then437
  %actparms.2 = phi %union.tree_node* [ %call441, %if.then437 ], [ %actparms.12160, %sw.epilog ]
  %indvars.iv.next2197 = add i64 %indvars.iv2196, %211
  %218 = trunc i64 %indvars.iv.next2197 to i32
  %cmp407 = icmp eq i32 %218, %num_actuals.0.
  br i1 %cmp407, label %for.end444, label %for.body409

for.end444:                                       ; preds = %for.inc443, %if.then396
  %actparms.1.lcssa = phi %union.tree_node* [ null, %if.then396 ], [ %actparms.2, %for.inc443 ]
  %call445 = call i32 @any_pending_cleanups(i32 1) #7
  %tobool446 = icmp eq i32 %call445, 0
  %try_tail_recursion.1. = select i1 %tobool446, i32 %try_tail_recursion.1, i32 0
  %try_tail_call.1. = select i1 %tobool446, i32 %try_tail_call.1, i32 0
  br label %if.end449

if.end449:                                        ; preds = %for.end444, %if.end392
  %try_tail_recursion.2 = phi i32 [ %try_tail_recursion.1, %if.end392 ], [ %try_tail_recursion.1., %for.end444 ]
  %try_tail_call.2 = phi i32 [ %try_tail_call.1, %if.end392 ], [ %try_tail_call.1., %for.end444 ]
  %actparms.3 = phi %union.tree_node* [ %actparms.0, %if.end392 ], [ %actparms.1.lcssa, %for.end444 ]
  %tobool450 = icmp eq i32 %try_tail_recursion.2, 0
  br i1 %tobool450, label %if.end469, label %if.then451

if.then451:                                       ; preds = %if.end449
  %219 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr452 = getelementptr inbounds %struct.function* %219, i64 0, i32 2
  %220 = load %struct.expr_status** %expr452, align 8, !tbaa !0
  %x_pending_stack_adjust = getelementptr inbounds %struct.expr_status* %220, i64 0, i32 0
  %221 = load i32* %x_pending_stack_adjust, align 4, !tbaa !3
  %x_stack_pointer_delta = getelementptr inbounds %struct.expr_status* %220, i64 0, i32 2
  %222 = load i32* %x_stack_pointer_delta, align 4, !tbaa !3
  call void @emit_queue() #7
  call void @start_sequence() #7
  call void @expand_start_target_temps() #7
  %call454 = call %struct.rtx_def* @get_last_insn() #7
  %call455 = call i32 @optimize_tail_recursion(%union.tree_node* %actparms.3, %struct.rtx_def* %call454) #7
  %tobool456 = icmp eq i32 %call455, 0
  br i1 %tobool456, label %if.end464, label %if.then457

if.then457:                                       ; preds = %if.then451
  %call458 = call i32 @any_pending_cleanups(i32 1) #7
  %tobool459 = icmp eq i32 %call458, 0
  br i1 %tobool459, label %if.else461, label %if.end464

if.else461:                                       ; preds = %if.then457
  %call462 = call %struct.rtx_def* @get_insns() #7
  br label %if.end464

if.end464:                                        ; preds = %if.then457, %if.then451, %if.else461
  %try_tail_call.3 = phi i32 [ %try_tail_call.2, %if.else461 ], [ %try_tail_call.2, %if.then451 ], [ 0, %if.then457 ]
  %tail_recursion_insns.0 = phi %struct.rtx_def* [ %call462, %if.else461 ], [ null, %if.then451 ], [ null, %if.then457 ]
  call void @expand_end_target_temps() #7
  call void @end_sequence() #7
  %223 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr465 = getelementptr inbounds %struct.function* %223, i64 0, i32 2
  %224 = load %struct.expr_status** %expr465, align 8, !tbaa !0
  %x_pending_stack_adjust466 = getelementptr inbounds %struct.expr_status* %224, i64 0, i32 0
  store i32 %221, i32* %x_pending_stack_adjust466, align 4, !tbaa !3
  %x_stack_pointer_delta468 = getelementptr inbounds %struct.expr_status* %224, i64 0, i32 2
  store i32 %222, i32* %x_stack_pointer_delta468, align 4, !tbaa !3
  br label %if.end469

if.end469:                                        ; preds = %if.end449, %if.end464
  %try_tail_call.4 = phi i32 [ %try_tail_call.3, %if.end464 ], [ %try_tail_call.2, %if.end449 ]
  %tail_recursion_insns.1 = phi %struct.rtx_def* [ %tail_recursion_insns.0, %if.end464 ], [ null, %if.end449 ]
  %225 = load i32* @profile_arc_flag, align 4, !tbaa !3
  %tobool470 = icmp eq i32 %225, 0
  br i1 %tobool470, label %if.end479, label %land.lhs.true471

land.lhs.true471:                                 ; preds = %if.end469
  %and472 = and i32 %and190.i20752084, 128
  %tobool473 = icmp eq i32 %and472, 0
  br i1 %tobool473, label %if.end479, label %if.then474

if.then474:                                       ; preds = %land.lhs.true471
  %226 = load i32* @target_flags, align 4, !tbaa !3
  %and475 = lshr i32 %226, 25
  %227 = and i32 %and475, 1
  %228 = or i32 %227, 4
  %call478 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %228, i8* getelementptr inbounds ([15 x i8]* @.str4, i64 0, i64 0)) #7
  call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %call478, i32 7, i32 0, i32 0) #8
  br label %if.end479

if.end479:                                        ; preds = %land.lhs.true471, %if.end469, %if.then474
  %229 = load %struct.function** @cfun, align 8, !tbaa !0
  %preferred_stack_boundary480 = getelementptr inbounds %struct.function* %229, i64 0, i32 53
  %230 = load i32* %preferred_stack_boundary480, align 4, !tbaa !3
  %cmp482 = icmp sge i32 %230, %46
  %231 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %cmp485 = icmp eq %union.tree_node* %call, %231
  %or.cond1805 = or i1 %cmp482, %cmp485
  br i1 %or.cond1805, label %if.end490, label %if.then487

if.then487:                                       ; preds = %if.end479
  store i32 %46, i32* %preferred_stack_boundary480, align 4, !tbaa !3
  br label %if.end490

if.end490:                                        ; preds = %if.end479, %if.then487
  %div = sdiv i64 %conv, 8
  %x_function_call_count = getelementptr inbounds %struct.function* %229, i64 0, i32 18
  %232 = load i32* %x_function_call_count, align 4, !tbaa !3
  %inc491 = add nsw i32 %232, 1
  store i32 %inc491, i32* %x_function_call_count, align 4, !tbaa !3
  %tobool501 = icmp eq i32 %try_tail_call.4, 0
  %cmp81.i = icmp sgt i32 %num_actuals.0.lcssa, 0
  %233 = bitcast %struct.args_size* %adjusted_args_size to i8*
  %constant.i1877 = getelementptr inbounds %struct.args_size* %adjusted_args_size, i64 0, i32 0
  %var.i1883 = getelementptr inbounds %struct.args_size* %adjusted_args_size, i64 0, i32 1
  %type753 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %cmp263.not = xor i1 %cmp263, true
  %tobool882 = icmp eq i32 %structure_value_addr_parm.0, 0
  %tobool1090 = icmp eq i32 %ignore, 0
  %used_flag.i = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %234 = bitcast [4 x i8]* %used_flag.i to i32*
  %rtl.i1931 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 17
  %conv733 = trunc i64 %div to i32
  %tobool619 = icmp eq i32 %call2051855, 0
  %tobool632 = icmp eq i32 %4, 0
  %idxprom639 = sext i32 %4 to i64
  br label %for.body495

for.cond1362.preheader:                           ; preds = %for.inc1359
  %tobool13632108 = icmp eq %struct.rtx_def* %normal_call_insns.1, null
  br i1 %tobool13632108, label %for.cond1384.preheader, label %for.body1364

for.body495:                                      ; preds = %for.inc1359.thread, %if.end490, %for.inc1359
  %target.addr.12156 = phi %struct.rtx_def* [ %target.addr.0, %if.end490 ], [ %target.addr.5, %for.inc1359 ], [ %target.addr.12156, %for.inc1359.thread ]
  %normal_call_insns.02155 = phi %struct.rtx_def* [ null, %if.end490 ], [ %normal_call_insns.1, %for.inc1359 ], [ %normal_call_insns.02155, %for.inc1359.thread ]
  %tail_call_insns.02154 = phi %struct.rtx_def* [ null, %if.end490 ], [ %tail_call_insns.1., %for.inc1359 ], [ %tail_call_insns.02154, %for.inc1359.thread ]
  %pass.02153 = phi i32 [ 0, %if.end490 ], [ %inc1360, %for.inc1359 ], [ %inc13602223, %for.inc1359.thread ]
  %old_stack_arg_under_construction.02151 = phi i32 [ 0, %if.end490 ], [ %old_stack_arg_under_construction.420942211, %for.inc1359 ], [ %old_stack_arg_under_construction.02151, %for.inc1359.thread ]
  %235 = phi i32 [ %171, %if.end490 ], [ %356, %for.inc1359 ], [ %235, %for.inc1359.thread ]
  %and190.i20732150 = phi i32 [ %and190.i20752084, %if.end490 ], [ %storemerge1797, %for.inc1359 ], [ %and190.i20732150, %for.inc1359.thread ]
  %cmp498 = icmp eq i32 %pass.02153, 0
  br i1 %cmp498, label %if.then500, label %if.end508

if.then500:                                       ; preds = %for.body495
  br i1 %tobool501, label %for.inc1359.thread, label %if.end503

for.inc1359.thread:                               ; preds = %if.then500
  %inc13602223 = add nsw i32 %pass.02153, 1
  br label %for.body495

if.end503:                                        ; preds = %if.then500
  call void @emit_queue() #7
  %236 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr504 = getelementptr inbounds %struct.function* %236, i64 0, i32 2
  %237 = load %struct.expr_status** %expr504, align 8, !tbaa !0
  %x_pending_stack_adjust505 = getelementptr inbounds %struct.expr_status* %237, i64 0, i32 0
  %238 = load i32* %x_pending_stack_adjust505, align 4, !tbaa !3
  %x_stack_pointer_delta507 = getelementptr inbounds %struct.expr_status* %237, i64 0, i32 2
  %239 = load i32* %x_stack_pointer_delta507, align 4, !tbaa !3
  br label %if.end508

if.end508:                                        ; preds = %if.end503, %for.body495
  %save_pending_stack_adjust496.0 = phi i32 [ %238, %if.end503 ], [ 0, %for.body495 ]
  %save_stack_pointer_delta497.0 = phi i32 [ %239, %if.end503 ], [ 0, %for.body495 ]
  %tobool509 = icmp ne i32 %pass.02153, 0
  %or513 = or i32 %and190.i20732150, 256
  %and511 = and i32 %and190.i20732150, -257
  %storemerge1797 = select i1 %tobool509, i32 %and511, i32 %or513
  store %struct.rtx_def* null, %struct.rtx_def** %call_fusage, align 8, !tbaa !0
  call void @start_sequence() #7
  br i1 %cmp498, label %if.then517, label %if.end518

if.then517:                                       ; preds = %if.end508
  call void @expand_start_target_temps() #7
  br label %if.end518

if.end518:                                        ; preds = %if.then517, %if.end508
  %240 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr519 = getelementptr inbounds %struct.function* %240, i64 0, i32 2
  %241 = load %struct.expr_status** %expr519, align 8, !tbaa !0
  %x_pending_stack_adjust520 = getelementptr inbounds %struct.expr_status* %241, i64 0, i32 0
  %242 = load i32* %x_pending_stack_adjust520, align 4, !tbaa !3
  %cmp521 = icmp sgt i32 %242, 31
  br i1 %cmp521, label %if.then534, label %lor.lhs.false523

lor.lhs.false523:                                 ; preds = %if.end518
  %cmp526 = icmp sgt i32 %242, 0
  br i1 %cmp526, label %land.lhs.true528, label %lor.lhs.false531

land.lhs.true528:                                 ; preds = %lor.lhs.false523
  %and529 = and i32 %storemerge1797, 1032
  %tobool530.not = icmp ne i32 %and529, 0
  %brmerge1806 = or i1 %tobool530.not, %cmp498
  br i1 %brmerge1806, label %if.then534, label %if.end535

lor.lhs.false531:                                 ; preds = %lor.lhs.false523
  br i1 %cmp498, label %if.then534, label %if.end535

if.then534:                                       ; preds = %land.lhs.true528, %lor.lhs.false531, %if.end518
  call void @do_pending_stack_adjust() #7
  br label %if.end535

if.end535:                                        ; preds = %land.lhs.true528, %if.then534, %lor.lhs.false531
  br i1 %tobool509, label %land.lhs.true537, label %if.end553

land.lhs.true537:                                 ; preds = %if.end535
  %and538 = and i32 %storemerge1797, 4096
  %tobool539 = icmp eq i32 %and538, 0
  br i1 %tobool539, label %if.then546, label %if.then540

if.then540:                                       ; preds = %land.lhs.true537
  %243 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr541 = getelementptr inbounds %struct.function* %243, i64 0, i32 2
  %244 = load %struct.expr_status** %expr541, align 8, !tbaa !0
  %x_inhibit_defer_pop542 = getelementptr inbounds %struct.expr_status* %244, i64 0, i32 1
  %245 = load i32* %x_inhibit_defer_pop542, align 4, !tbaa !3
  %add543 = add nsw i32 %245, 1
  store i32 %add543, i32* %x_inhibit_defer_pop542, align 4, !tbaa !3
  br label %if.then546

if.then546:                                       ; preds = %land.lhs.true537, %if.then540
  br i1 %cmp81.i, label %for.body.i1861, label %precompute_arguments.exit

for.body.i1861:                                   ; preds = %if.then546, %for.inc.i1875
  %indvars.iv.i1859 = phi i64 [ %indvars.iv.next.i1873, %for.inc.i1875 ], [ 0, %if.then546 ]
  %tree_value.i1860 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1859, i32 0
  br i1 %tobool539, label %lor.lhs.false.i1863, label %if.then.i1869

lor.lhs.false.i1863:                              ; preds = %for.body.i1861
  %246 = load %union.tree_node** %tree_value.i1860, align 8, !tbaa !0
  %247 = load i32* @target_flags, align 4, !tbaa !3
  %and1.i = lshr i32 %247, 12
  %and1.lobit.i = and i32 %and1.i, 1
  %248 = xor i32 %and1.lobit.i, 1
  store %union.tree_node* null, %union.tree_node** @calls_function_save_exprs, align 8, !tbaa !0
  %call.i.i = call fastcc i32 @calls_function_1(%union.tree_node* %246, i32 %248) #7
  store %union.tree_node* null, %union.tree_node** @calls_function_save_exprs, align 8, !tbaa !0
  %tobool3.i1862 = icmp eq i32 %call.i.i, 0
  br i1 %tobool3.i1862, label %for.inc.i1875, label %if.then.i1869

if.then.i1869:                                    ; preds = %lor.lhs.false.i1863, %for.body.i1861
  %249 = load %union.tree_node** %tree_value.i1860, align 8, !tbaa !0
  %type.i1864 = getelementptr inbounds %union.tree_node* %249, i64 0, i32 0, i32 0, i32 1
  %250 = load %union.tree_node** %type.i1864, align 8, !tbaa !0
  %addressable_flag.i1865 = getelementptr inbounds %union.tree_node* %250, i64 0, i32 0, i32 0, i32 2
  %251 = bitcast [4 x i8]* %addressable_flag.i1865 to i32*
  %bf.load.i1866 = load i32* %251, align 8
  %bf.clear.i1867 = and i32 %bf.load.i1866, 1024
  %tobool8.i1868 = icmp eq i32 %bf.clear.i1867, 0
  br i1 %tobool8.i1868, label %if.end.i, label %if.then9.i1870

if.then9.i1870:                                   ; preds = %if.then.i1869
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str3, i64 0, i64 0), i32 1512, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.precompute_arguments, i64 0, i64 0)) #10
  unreachable

if.end.i:                                         ; preds = %if.then.i1869
  %call13.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %249, %struct.rtx_def* null, i32 0, i32 0) #7
  %value.i1871 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1859, i32 2
  store %struct.rtx_def* %call13.i, %struct.rtx_def** %value.i1871, align 8, !tbaa !0
  call void @emit_queue() #7
  %252 = load %struct.rtx_def** %value.i1871, align 8, !tbaa !0
  %call19.i = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %252, i32 0) #7
  store %struct.rtx_def* %call19.i, %struct.rtx_def** %value.i1871, align 8, !tbaa !0
  %initial_value.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1859, i32 3
  store %struct.rtx_def* %call19.i, %struct.rtx_def** %initial_value.i, align 8, !tbaa !0
  %253 = load %union.tree_node** %tree_value.i1860, align 8, !tbaa !0
  %type29.i = getelementptr inbounds %union.tree_node* %253, i64 0, i32 0, i32 0, i32 1
  %254 = load %union.tree_node** %type29.i, align 8, !tbaa !0
  %type30.i = bitcast %union.tree_node* %254 to %struct.tree_type*
  %mode31.i = getelementptr inbounds %struct.tree_type* %type30.i, i64 0, i32 6
  %255 = bitcast [4 x i8]* %mode31.i to i32*
  %bf.load32.i = load i32* %255, align 4
  %bf.lshr33.i = lshr i32 %bf.load32.i, 9
  %bf.clear34.i = and i32 %bf.lshr33.i, 127
  %mode37.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1859, i32 1
  %256 = load i32* %mode37.i, align 4, !tbaa !4
  %cmp38.i = icmp eq i32 %bf.clear34.i, %256
  br i1 %cmp38.i, label %for.inc.i1875, label %if.then39.i

if.then39.i:                                      ; preds = %if.end.i
  %unsignedp.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1859, i32 6
  %257 = load i32* %unsignedp.i, align 4, !tbaa !3
  %call48.i1872 = call %struct.rtx_def* @convert_modes(i32 %256, i32 %bf.clear34.i, %struct.rtx_def* %call19.i, i32 %257) #7
  store %struct.rtx_def* %call48.i1872, %struct.rtx_def** %value.i1871, align 8, !tbaa !0
  br label %for.inc.i1875

for.inc.i1875:                                    ; preds = %if.then39.i, %if.end.i, %lor.lhs.false.i1863
  %indvars.iv.next.i1873 = add i64 %indvars.iv.i1859, 1
  %258 = trunc i64 %indvars.iv.next.i1873 to i32
  %cmp.i1874 = icmp slt i32 %258, %num_actuals.0.lcssa
  br i1 %cmp.i1874, label %for.body.i1861, label %precompute_arguments.exit

precompute_arguments.exit:                        ; preds = %for.inc.i1875, %if.then546
  %and550 = and i32 %storemerge1797, 4100
  %tobool551 = icmp eq i32 %and550, 0
  br i1 %tobool551, label %if.end553, label %if.then552

if.then552:                                       ; preds = %precompute_arguments.exit
  call void @start_sequence() #7
  br label %if.end553

if.end553:                                        ; preds = %if.end535, %precompute_arguments.exit, %if.then552
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %233, i8* %64, i64 16, i32 8, i1 false), !tbaa.struct !5
  %conv560 = select i1 %cmp498, i32 0, i32 %46
  %259 = load i64* %constant.i1877, align 8, !tbaa !6
  %conv.i = trunc i64 %259 to i32
  %260 = load i32* @target_flags, align 4, !tbaa !3
  %and.i1878 = and i32 %260, 4096
  %tobool.i1879 = icmp eq i32 %and.i1878, 0
  br i1 %tobool.i1879, label %if.end.i1885, label %land.lhs.true.i1882

land.lhs.true.i1882:                              ; preds = %if.end553
  %and1.i1880 = lshr i32 %260, 20
  %261 = and i32 %and1.i1880, 32
  %262 = add i32 %261, 32
  %cmp.i1881 = icmp slt i32 %262, %conv560
  %.preferred_stack_boundary.i = select i1 %cmp.i1881, i32 %262, i32 %conv560
  br label %if.end.i1885

if.end.i1885:                                     ; preds = %land.lhs.true.i1882, %if.end553
  %preferred_stack_boundary.addr.0.i = phi i32 [ %conv560, %if.end553 ], [ %.preferred_stack_boundary.i, %land.lhs.true.i1882 ]
  %263 = load %union.tree_node** %var.i1883, align 8, !tbaa !0
  %tobool7.i1884 = icmp eq %union.tree_node* %263, null
  br i1 %tobool7.i1884, label %if.else.i1895, label %cond.false.i1889

cond.false.i1889:                                 ; preds = %if.end.i1885
  %264 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !0
  %call14.i1886 = call %union.tree_node* @convert(%union.tree_node* %264, %union.tree_node* %263) #7
  %call16.i = call %union.tree_node* @size_int_wide(i64 %259, i32 1) #7
  %call17.i = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call14.i1886, %union.tree_node* %call16.i) #7
  store %union.tree_node* %call17.i, %union.tree_node** %var.i1883, align 8, !tbaa !0
  store i64 0, i64* %constant.i1877, align 8, !tbaa !6
  %div.i1887 = sdiv i32 %preferred_stack_boundary.addr.0.i, 8
  %cmp21.i1888 = icmp sgt i32 %preferred_stack_boundary.addr.0.i, 15
  br i1 %cmp21.i1888, label %if.then23.i, label %compute_argument_block_size.exit

if.then23.i:                                      ; preds = %cond.false.i1889
  %265 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr.i1890 = getelementptr inbounds %struct.function* %265, i64 0, i32 2
  %266 = load %struct.expr_status** %expr.i1890, align 8, !tbaa !0
  %x_stack_pointer_delta.i = getelementptr inbounds %struct.expr_status* %266, i64 0, i32 2
  %267 = load i32* %x_stack_pointer_delta.i, align 4, !tbaa !3
  %sub.i1891 = add nsw i32 %div.i1887, -1
  %and24.i = and i32 %267, %sub.i1891
  %tobool25.i = icmp eq i32 %and24.i, 0
  br i1 %tobool25.i, label %if.end27.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.then23.i
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str3, i64 0, i64 0), i32 1425, i8* getelementptr inbounds ([28 x i8]* @__FUNCTION__.compute_argument_block_size, i64 0, i64 0)) #10
  unreachable

if.end27.i:                                       ; preds = %if.then23.i
  %call29.i = call %union.tree_node* @round_up(%union.tree_node* %call17.i, i32 %div.i1887) #7
  store %union.tree_node* %call29.i, %union.tree_node** %var.i1883, align 8, !tbaa !0
  br label %compute_argument_block_size.exit

if.else.i1895:                                    ; preds = %if.end.i1885
  %div46.i = sdiv i32 %preferred_stack_boundary.addr.0.i, 8
  %cmp47.i = icmp slt i32 %preferred_stack_boundary.addr.0.i, 8
  %268 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr52.i = getelementptr inbounds %struct.function* %268, i64 0, i32 2
  %269 = load %struct.expr_status** %expr52.i, align 8, !tbaa !0
  %x_stack_pointer_delta53.i = getelementptr inbounds %struct.expr_status* %269, i64 0, i32 2
  %270 = load i32* %x_stack_pointer_delta53.i, align 4, !tbaa !3
  %conv54.i = sext i32 %270 to i64
  %271 = sext i32 %div46.i to i64
  %conv55.i = select i1 %cmp47.i, i64 1, i64 %271
  %add.i1892 = add i64 %259, -1
  %add56.i = add i64 %add.i1892, %conv55.i
  %sub57.i = add i64 %add56.i, %conv54.i
  %div59.i = srem i64 %sub57.i, %conv55.i
  %mul.i1893 = sub i64 %sub57.i, %div59.i
  %sub64.i = sub i64 %mul.i1893, %conv54.i
  %cmp68.i1894 = icmp sgt i64 %sub64.i, 0
  %sub64..i = select i1 %cmp68.i1894, i64 %sub64.i, i64 0
  store i64 %sub64..i, i64* %constant.i1877, align 8, !tbaa !6
  br label %compute_argument_block_size.exit

compute_argument_block_size.exit:                 ; preds = %cond.false.i1889, %if.end27.i, %if.else.i1895
  %272 = phi i64 [ 0, %if.end27.i ], [ %sub64..i, %if.else.i1895 ], [ 0, %cond.false.i1889 ]
  %273 = phi %union.tree_node* [ %call29.i, %if.end27.i ], [ null, %if.else.i1895 ], [ %call17.i, %cond.false.i1889 ]
  %274 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr562 = getelementptr inbounds %struct.function* %274, i64 0, i32 2
  %275 = load %struct.expr_status** %expr562, align 8, !tbaa !0
  %x_stack_pointer_delta563 = getelementptr inbounds %struct.expr_status* %275, i64 0, i32 2
  %276 = load i32* %x_stack_pointer_delta563, align 4, !tbaa !3
  %x_pending_stack_adjust565 = getelementptr inbounds %struct.expr_status* %275, i64 0, i32 0
  %277 = load i32* %x_pending_stack_adjust565, align 4, !tbaa !3
  %sub566 = sub nsw i32 %276, %277
  br i1 %cmp498, label %if.then569, label %if.else573

if.then569:                                       ; preds = %compute_argument_block_size.exit
  %278 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !0
  %279 = load i64* %constant.i, align 8, !tbaa !6
  %conv571 = trunc i64 %279 to i32
  %call572 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %conv571) #7
  store %struct.simple_bitmap_def* %call572, %struct.simple_bitmap_def** @stored_args_map, align 8, !tbaa !0
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call572) #7
  br label %if.end707

if.else573:                                       ; preds = %compute_argument_block_size.exit
  %cmp575 = icmp eq %union.tree_node* %273, null
  br i1 %cmp575, label %if.else611, label %if.then577

if.then577:                                       ; preds = %if.else573
  %280 = load %struct.rtx_def** %old_stack_level, align 8, !tbaa !0
  %cmp578 = icmp eq %struct.rtx_def* %280, null
  br i1 %cmp578, label %if.then580, label %cond.end608

if.then580:                                       ; preds = %if.then577
  call void @emit_stack_save(i32 0, %struct.rtx_def** %old_stack_level, %struct.rtx_def* null) #7
  %281 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr581 = getelementptr inbounds %struct.function* %281, i64 0, i32 2
  %282 = load %struct.expr_status** %expr581, align 8, !tbaa !0
  %x_pending_stack_adjust582 = getelementptr inbounds %struct.expr_status* %282, i64 0, i32 0
  %283 = load i32* %x_pending_stack_adjust582, align 4, !tbaa !3
  store i32 0, i32* %x_pending_stack_adjust582, align 4, !tbaa !3
  %284 = load i32* @stack_arg_under_construction, align 4, !tbaa !3
  store i32 0, i32* @stack_arg_under_construction, align 4, !tbaa !3
  br label %cond.end608

cond.end608:                                      ; preds = %if.then580, %if.then577
  %285 = phi i32 [ %283, %if.then580 ], [ %235, %if.then577 ]
  %old_stack_arg_under_construction.1 = phi i32 [ %284, %if.then580 ], [ %old_stack_arg_under_construction.02151, %if.then577 ]
  %286 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !0
  %call601 = call %union.tree_node* @convert(%union.tree_node* %286, %union.tree_node* %273) #7
  %call603 = call %union.tree_node* @size_int_wide(i64 %272, i32 1) #7
  %call604 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call601, %union.tree_node* %call603) #7
  %call607 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call604, %struct.rtx_def* null, i32 0, i32 0) #7
  %call610 = call %struct.rtx_def* @push_block(%struct.rtx_def* %call607, i32 0, i32 0) #7
  br label %if.end707

if.else611:                                       ; preds = %if.else573
  %conv613 = trunc i64 %272 to i32
  %outgoing_args_size = getelementptr inbounds %struct.function* %274, i64 0, i32 11
  %287 = load i32* %outgoing_args_size, align 4, !tbaa !3
  %cmp614 = icmp sgt i32 %conv613, %287
  br i1 %cmp614, label %if.then616, label %if.end618

if.then616:                                       ; preds = %if.else611
  store i32 %conv613, i32* %outgoing_args_size, align 4, !tbaa !3
  br label %if.end618

if.end618:                                        ; preds = %if.then616, %if.else611
  br i1 %tobool619, label %compute_argument_addresses.exit, label %if.then620

if.then620:                                       ; preds = %if.end618
  %288 = load i32* @target_flags, align 4, !tbaa !3
  %and621 = and i32 %288, 4096
  %tobool622 = icmp eq i32 %and621, 0
  br i1 %tobool622, label %if.else644, label %if.then623

if.then623:                                       ; preds = %if.then620
  %cmp625 = icmp sgt i32 %4, %conv613
  %cond630 = select i1 %cmp625, i32 %4, i32 %conv613
  store i32 %cond630, i32* @highest_outgoing_arg_in_use, align 4, !tbaa !3
  %conv631 = sext i32 %cond630 to i64
  %289 = alloca i8, i64 %conv631, align 1
  store i8* %289, i8** @stack_usage_map, align 8, !tbaa !0
  br i1 %tobool632, label %if.end635, label %if.then633

if.then633:                                       ; preds = %if.then623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %289, i8* %5, i64 %idxprom639, i32 1, i1 false)
  br label %if.end635

if.end635:                                        ; preds = %if.then623, %if.then633
  %cmp636 = icmp eq i32 %4, %cond630
  br i1 %cmp636, label %if.end643, label %if.then638

if.then638:                                       ; preds = %if.end635
  %arrayidx640 = getelementptr inbounds i8* %289, i64 %idxprom639
  %sub641 = sub nsw i32 %cond630, %4
  %conv642 = sext i32 %sub641 to i64
  call void @llvm.memset.p0i8.i64(i8* %arrayidx640, i8 0, i64 %conv642, i32 1, i1 false)
  br label %if.end643

if.end643:                                        ; preds = %if.end635, %if.then638
  %290 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !0
  br label %if.end707

if.else644:                                       ; preds = %if.then620
  %x_inhibit_defer_pop646 = getelementptr inbounds %struct.expr_status* %275, i64 0, i32 1
  %291 = load i32* %x_inhibit_defer_pop646, align 4, !tbaa !3
  %cmp647 = icmp eq i32 %291, 0
  br i1 %cmp647, label %if.then649, label %if.end663

if.then649:                                       ; preds = %if.else644
  %call651 = call fastcc i32 @combine_pending_stack_adjustment_and_call(i32 %conv.i, %struct.args_size* %adjusted_args_size, i32 %conv733) #8
  %sub652 = sub nsw i32 %conv.i, %call651
  %cmp653 = icmp slt i32 %sub652, 0
  br i1 %cmp653, label %if.end663.thread, label %if.else659

if.end663.thread:                                 ; preds = %if.then649
  %sub656 = sub nsw i32 0, %sub652
  %292 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr657 = getelementptr inbounds %struct.function* %292, i64 0, i32 2
  %293 = load %struct.expr_status** %expr657, align 8, !tbaa !0
  %x_pending_stack_adjust658 = getelementptr inbounds %struct.expr_status* %293, i64 0, i32 0
  store i32 %sub656, i32* %x_pending_stack_adjust658, align 4, !tbaa !3
  call void @do_pending_stack_adjust() #7
  br label %if.then666

if.else659:                                       ; preds = %if.then649
  %294 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr660 = getelementptr inbounds %struct.function* %294, i64 0, i32 2
  %295 = load %struct.expr_status** %expr660, align 8, !tbaa !0
  %x_pending_stack_adjust661 = getelementptr inbounds %struct.expr_status* %295, i64 0, i32 0
  store i32 0, i32* %x_pending_stack_adjust661, align 4, !tbaa !3
  br label %if.end663

if.end663:                                        ; preds = %if.else659, %if.else644
  %needed.0 = phi i32 [ %sub652, %if.else659 ], [ %conv613, %if.else644 ]
  %cmp664 = icmp eq i32 %needed.0, 0
  br i1 %cmp664, label %if.then666, label %if.else667

if.then666:                                       ; preds = %if.end663.thread, %if.end663
  %296 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !0
  br label %if.end671

if.else667:                                       ; preds = %if.end663
  %conv668 = sext i32 %needed.0 to i64
  %call669 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv668) #7
  %call670 = call %struct.rtx_def* @push_block(%struct.rtx_def* %call669, i32 0, i32 0) #7
  br label %if.end671

if.end671:                                        ; preds = %if.else667, %if.then666
  %argblock.0 = phi %struct.rtx_def* [ %296, %if.then666 ], [ %call670, %if.else667 ]
  %call672 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %argblock.0) #7
  %297 = load i32* @stack_arg_under_construction, align 4, !tbaa !3
  %tobool673 = icmp eq i32 %297, 0
  br i1 %tobool673, label %if.end690, label %if.then674

if.then674:                                       ; preds = %if.end671
  %298 = load i64* %constant.i1877, align 8, !tbaa !6
  %call678 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %298) #7
  %299 = load %struct.rtx_def** %old_stack_level, align 8, !tbaa !0
  %cmp679 = icmp eq %struct.rtx_def* %299, null
  br i1 %cmp679, label %if.then681, label %if.end688

if.then681:                                       ; preds = %if.then674
  call void @emit_stack_save(i32 0, %struct.rtx_def** %old_stack_level, %struct.rtx_def* null) #7
  %300 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr682 = getelementptr inbounds %struct.function* %300, i64 0, i32 2
  %301 = load %struct.expr_status** %expr682, align 8, !tbaa !0
  %x_pending_stack_adjust683 = getelementptr inbounds %struct.expr_status* %301, i64 0, i32 0
  %302 = load i32* %x_pending_stack_adjust683, align 4, !tbaa !3
  store i32 0, i32* %x_pending_stack_adjust683, align 4, !tbaa !3
  %303 = load i32* @stack_arg_under_construction, align 4, !tbaa !3
  store i32 0, i32* @stack_arg_under_construction, align 4, !tbaa !3
  %304 = load i32* @highest_outgoing_arg_in_use, align 4, !tbaa !3
  %conv686 = sext i32 %304 to i64
  %305 = alloca i8, i64 %conv686, align 1
  store i8* %305, i8** @stack_usage_map, align 8, !tbaa !0
  call void @llvm.memset.p0i8.i64(i8* %305, i8 0, i64 %conv686, i32 1, i1 false)
  store i32 0, i32* @highest_outgoing_arg_in_use, align 4, !tbaa !3
  br label %if.end688

if.end688:                                        ; preds = %if.then681, %if.then674
  %306 = phi i32 [ %302, %if.then681 ], [ %235, %if.then674 ]
  %old_stack_arg_under_construction.2 = phi i32 [ %303, %if.then681 ], [ %old_stack_arg_under_construction.02151, %if.then674 ]
  %call689 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call678, %struct.rtx_def* null, i32 8) #7
  br label %if.end690

if.end690:                                        ; preds = %if.end671, %if.end688
  %307 = phi i32 [ %306, %if.end688 ], [ %235, %if.end671 ]
  %old_stack_arg_under_construction.3 = phi i32 [ %old_stack_arg_under_construction.2, %if.end688 ], [ %old_stack_arg_under_construction.02151, %if.end671 ]
  br i1 %cmp81.i, label %for.body694, label %if.end707

for.cond691:                                      ; preds = %for.body694
  %308 = trunc i64 %indvars.iv.next to i32
  %cmp692 = icmp slt i32 %308, %num_actuals.0.lcssa
  br i1 %cmp692, label %for.body694, label %if.end707

for.body694:                                      ; preds = %if.end690, %for.cond691
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond691 ], [ 0, %if.end690 ]
  %pass_on_stack = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv, i32 8
  %309 = load i32* %pass_on_stack, align 4, !tbaa !3
  %tobool697 = icmp eq i32 %309, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %tobool697, label %for.cond691, label %if.then698

if.then698:                                       ; preds = %for.body694
  %call699 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %call672) #7
  br label %if.end707

if.end707:                                        ; preds = %if.end690, %for.cond691, %cond.end608, %if.end643, %if.then698, %if.then569
  %310 = phi i32 [ %235, %if.then569 ], [ %285, %cond.end608 ], [ %235, %if.end643 ], [ %307, %if.then698 ], [ %307, %for.cond691 ], [ %307, %if.end690 ]
  %old_stack_arg_under_construction.4 = phi i32 [ %old_stack_arg_under_construction.02151, %if.then569 ], [ %old_stack_arg_under_construction.1, %cond.end608 ], [ %old_stack_arg_under_construction.02151, %if.end643 ], [ %old_stack_arg_under_construction.3, %if.then698 ], [ %old_stack_arg_under_construction.3, %for.cond691 ], [ %old_stack_arg_under_construction.3, %if.end690 ]
  %argblock.1 = phi %struct.rtx_def* [ %278, %if.then569 ], [ %call610, %cond.end608 ], [ %290, %if.end643 ], [ %call699, %if.then698 ], [ %call672, %for.cond691 ], [ %call672, %if.end690 ]
  %tobool.i1896 = icmp eq %struct.rtx_def* %argblock.1, null
  br i1 %tobool.i1896, label %compute_argument_addresses.exit, label %if.then.i1900

if.then.i1900:                                    ; preds = %if.end707
  %311 = bitcast %struct.rtx_def* %argblock.1 to i32*
  %bf.load.i1897 = load i32* %311, align 8
  %bf.clear.i1898 = and i32 %bf.load.i1897, 65535
  %cmp.i1899 = icmp eq i32 %bf.clear.i1898, 75
  br i1 %cmp.i1899, label %if.then1.i, label %if.end.i1903

if.then1.i:                                       ; preds = %if.then.i1900
  %fld.i = getelementptr inbounds %struct.rtx_def* %argblock.1, i64 0, i32 1
  %rtx.i1901 = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %312 = load %struct.rtx_def** %rtx.i1901, align 8, !tbaa !0
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def* %argblock.1, i64 0, i32 1, i64 1
  %rtx4.i = bitcast %union.rtunion_def* %arrayidx3.i to %struct.rtx_def**
  %313 = load %struct.rtx_def** %rtx4.i, align 8, !tbaa !0
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %313, i64 0, i32 1, i64 0, i32 0
  %314 = load i64* %rtwint.i, align 8, !tbaa !6
  %sext.i = shl i64 %314, 32
  %phitmp.i1902 = ashr exact i64 %sext.i, 32
  br label %if.end.i1903

if.end.i1903:                                     ; preds = %if.then1.i, %if.then.i1900
  %arg_offset.0.i = phi i64 [ %phitmp.i1902, %if.then1.i ], [ 0, %if.then.i1900 ]
  %arg_reg.0.i = phi %struct.rtx_def* [ %312, %if.then1.i ], [ %argblock.1, %if.then.i1900 ]
  br i1 %cmp81.i, label %for.body.i1907, label %compute_argument_addresses.exit.thread

for.body.i1907:                                   ; preds = %if.end.i1903, %for.inc.i1926
  %indvars.iv.i1904 = phi i64 [ %indvars.iv.next.i1925, %for.inc.i1926 ], [ 0, %if.end.i1903 ]
  %offset10.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 9
  %var.i1905 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 9, i32 1
  %315 = load %union.tree_node** %var.i1905, align 8, !tbaa !0
  %cmp11.i1906 = icmp eq %union.tree_node* %315, null
  br i1 %cmp11.i1906, label %cond.true.i1910, label %cond.false28.i

cond.true.i1910:                                  ; preds = %for.body.i1907
  %constant.i1908 = getelementptr inbounds %struct.args_size* %offset10.i, i64 0, i32 0
  %316 = load i64* %constant.i1908, align 8, !tbaa !6
  %call.i1909 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %316) #7
  br label %cond.end41.i

cond.false28.i:                                   ; preds = %for.body.i1907
  %317 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !0
  %call33.i = call %union.tree_node* @convert(%union.tree_node* %317, %union.tree_node* %315) #7
  %constant37.i = getelementptr inbounds %struct.args_size* %offset10.i, i64 0, i32 0
  %318 = load i64* %constant37.i, align 8, !tbaa !6
  %call38.i1911 = call %union.tree_node* @size_int_wide(i64 %318, i32 1) #7
  %call39.i1912 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call33.i, %union.tree_node* %call38.i1911) #7
  %call40.i1913 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call39.i1912, %struct.rtx_def* null, i32 0, i32 0) #7
  br label %cond.end41.i

cond.end41.i:                                     ; preds = %cond.false28.i, %cond.true.i1910
  %cond42.i = phi %struct.rtx_def* [ %call.i1909, %cond.true.i1910 ], [ %call40.i1913, %cond.false28.i ]
  %slot_offset45.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 10
  %var46.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 10, i32 1
  %319 = load %union.tree_node** %var46.i, align 8, !tbaa !0
  %cmp47.i1914 = icmp eq %union.tree_node* %319, null
  br i1 %cmp47.i1914, label %cond.true49.i, label %cond.false68.i

cond.true49.i:                                    ; preds = %cond.end41.i
  %constant53.i = getelementptr inbounds %struct.args_size* %slot_offset45.i, i64 0, i32 0
  %320 = load i64* %constant53.i, align 8, !tbaa !6
  %call54.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %320) #7
  br label %cond.end83.i

cond.false68.i:                                   ; preds = %cond.end41.i
  %321 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !tbaa !0
  %call73.i = call %union.tree_node* @convert(%union.tree_node* %321, %union.tree_node* %319) #7
  %constant77.i = getelementptr inbounds %struct.args_size* %slot_offset45.i, i64 0, i32 0
  %322 = load i64* %constant77.i, align 8, !tbaa !6
  %call78.i = call %union.tree_node* @size_int_wide(i64 %322, i32 1) #7
  %call79.i = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %call73.i, %union.tree_node* %call78.i) #7
  %call82.i = call %struct.rtx_def* @expand_expr(%union.tree_node* %call79.i, %struct.rtx_def* null, i32 0, i32 0) #7
  br label %cond.end83.i

cond.end83.i:                                     ; preds = %cond.false68.i, %cond.true49.i
  %cond84.i = phi %struct.rtx_def* [ %call54.i, %cond.true49.i ], [ %call82.i, %cond.false68.i ]
  %pass_on_stack.i1915 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 8
  %323 = load i32* %pass_on_stack.i1915, align 4, !tbaa !3
  %tobool87.i = icmp eq i32 %323, 0
  br i1 %tobool87.i, label %land.lhs.true.i1917, label %if.end93.i

land.lhs.true.i1917:                              ; preds = %cond.end83.i
  %reg.i1916 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 4
  %324 = load %struct.rtx_def** %reg.i1916, align 8, !tbaa !0
  %cmp90.i = icmp eq %struct.rtx_def* %324, null
  br i1 %cmp90.i, label %if.end93.i, label %for.inc.i1926

if.end93.i:                                       ; preds = %land.lhs.true.i1917, %cond.end83.i
  %325 = bitcast %struct.rtx_def* %cond42.i to i32*
  %bf.load94.i = load i32* %325, align 8
  %bf.clear95.i = and i32 %bf.load94.i, 65535
  %cmp96.i = icmp eq i32 %bf.clear95.i, 54
  br i1 %cmp96.i, label %if.then98.i, label %if.else.i1919

if.then98.i:                                      ; preds = %if.end93.i
  %rtwint101.i = getelementptr inbounds %struct.rtx_def* %cond42.i, i64 0, i32 1, i64 0, i32 0
  %326 = load i64* %rtwint101.i, align 8, !tbaa !6
  %call102.i = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %arg_reg.0.i, i64 %326) #7
  br label %if.end106.i

if.else.i1919:                                    ; preds = %if.end93.i
  %327 = load i32* @target_flags, align 4, !tbaa !3
  %and.i1918 = lshr i32 %327, 25
  %328 = and i32 %and.i1918, 1
  %329 = or i32 %328, 4
  %call105.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %329, %struct.rtx_def* %arg_reg.0.i, %struct.rtx_def* %cond42.i) #7
  br label %if.end106.i

if.end106.i:                                      ; preds = %if.else.i1919, %if.then98.i
  %addr.0.i = phi %struct.rtx_def* [ %call102.i, %if.then98.i ], [ %call105.i, %if.else.i1919 ]
  %call108.i = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %addr.0.i, i64 %arg_offset.0.i) #7
  %mode.i1920 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 1
  %330 = load i32* %mode.i1920, align 4, !tbaa !4
  %call111.i = call %struct.rtx_def* @gen_rtx_MEM(i32 %330, %struct.rtx_def* %call108.i) #7
  %stack.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 12
  store %struct.rtx_def* %call111.i, %struct.rtx_def** %stack.i, align 8, !tbaa !0
  %tree_value.i1921 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 0
  %331 = load %union.tree_node** %tree_value.i1921, align 8, !tbaa !0
  %type.i1922 = getelementptr inbounds %union.tree_node* %331, i64 0, i32 0, i32 0, i32 1
  %332 = load %union.tree_node** %type.i1922, align 8, !tbaa !0
  call void @set_mem_attributes(%struct.rtx_def* %call111.i, %union.tree_node* %332, i32 1) #7
  %333 = bitcast %struct.rtx_def* %cond84.i to i32*
  %bf.load119.i = load i32* %333, align 8
  %bf.clear120.i = and i32 %bf.load119.i, 65535
  %cmp121.i = icmp eq i32 %bf.clear120.i, 54
  br i1 %cmp121.i, label %if.then123.i, label %if.else128.i

if.then123.i:                                     ; preds = %if.end106.i
  %rtwint126.i = getelementptr inbounds %struct.rtx_def* %cond84.i, i64 0, i32 1, i64 0, i32 0
  %334 = load i64* %rtwint126.i, align 8, !tbaa !6
  %call127.i = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %arg_reg.0.i, i64 %334) #7
  br label %if.end133.i

if.else128.i:                                     ; preds = %if.end106.i
  %335 = load i32* @target_flags, align 4, !tbaa !3
  %and129.i = lshr i32 %335, 25
  %336 = and i32 %and129.i, 1
  %337 = or i32 %336, 4
  %call132.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %337, %struct.rtx_def* %arg_reg.0.i, %struct.rtx_def* %cond84.i) #7
  br label %if.end133.i

if.end133.i:                                      ; preds = %if.else128.i, %if.then123.i
  %addr.1.i = phi %struct.rtx_def* [ %call127.i, %if.then123.i ], [ %call132.i, %if.else128.i ]
  %call135.i1923 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %addr.1.i, i64 %arg_offset.0.i) #7
  %338 = load i32* %mode.i1920, align 4, !tbaa !4
  %call139.i1924 = call %struct.rtx_def* @gen_rtx_MEM(i32 %338, %struct.rtx_def* %call135.i1923) #7
  %stack_slot.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1904, i32 13
  store %struct.rtx_def* %call139.i1924, %struct.rtx_def** %stack_slot.i, align 8, !tbaa !0
  %339 = load %union.tree_node** %tree_value.i1921, align 8, !tbaa !0
  %type149.i = getelementptr inbounds %union.tree_node* %339, i64 0, i32 0, i32 0, i32 1
  %340 = load %union.tree_node** %type149.i, align 8, !tbaa !0
  call void @set_mem_attributes(%struct.rtx_def* %call139.i1924, %union.tree_node* %340, i32 1) #7
  %341 = load %struct.rtx_def** %stack.i, align 8, !tbaa !0
  call void @set_mem_alias_set(%struct.rtx_def* %341, i64 0) #7
  %342 = load %struct.rtx_def** %stack_slot.i, align 8, !tbaa !0
  call void @set_mem_alias_set(%struct.rtx_def* %342, i64 0) #7
  br label %for.inc.i1926

for.inc.i1926:                                    ; preds = %if.end133.i, %land.lhs.true.i1917
  %indvars.iv.next.i1925 = add i64 %indvars.iv.i1904, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i1925 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %num_actuals.0.lcssa
  br i1 %exitcond, label %compute_argument_addresses.exit.thread, label %for.body.i1907

compute_argument_addresses.exit.thread:           ; preds = %if.end.i1903, %for.inc.i1926
  %343 = load i32* @target_flags, align 4, !tbaa !3
  %344 = and i32 %343, 6144
  %or.cond1808.not2205 = icmp ne i32 %344, 0
  br label %compute_argument_addresses.exit.if.end747_crit_edge

compute_argument_addresses.exit:                  ; preds = %if.end707, %if.end618
  %old_stack_arg_under_construction.42094 = phi i32 [ %old_stack_arg_under_construction.02151, %if.end618 ], [ %old_stack_arg_under_construction.4, %if.end707 ]
  %345 = phi i32 [ %235, %if.end618 ], [ %310, %if.end707 ]
  %346 = load i32* @target_flags, align 4, !tbaa !3
  %347 = and i32 %346, 6144
  %or.cond1808.not = icmp ne i32 %347, 0
  br i1 %or.cond1808.not, label %compute_argument_addresses.exit.if.end747_crit_edge, label %land.lhs.true716

compute_argument_addresses.exit.if.end747_crit_edge: ; preds = %compute_argument_addresses.exit.thread, %compute_argument_addresses.exit
  %or.cond1808.not2213 = phi i1 [ %or.cond1808.not2205, %compute_argument_addresses.exit.thread ], [ %or.cond1808.not, %compute_argument_addresses.exit ]
  %348 = phi i32 [ %310, %compute_argument_addresses.exit.thread ], [ %345, %compute_argument_addresses.exit ]
  %old_stack_arg_under_construction.420942212 = phi i32 [ %old_stack_arg_under_construction.4, %compute_argument_addresses.exit.thread ], [ %old_stack_arg_under_construction.42094, %compute_argument_addresses.exit ]
  %argblock.120952210 = phi %struct.rtx_def* [ %argblock.1, %compute_argument_addresses.exit.thread ], [ null, %compute_argument_addresses.exit ]
  %tobool.i189620972208 = phi i1 [ false, %compute_argument_addresses.exit.thread ], [ true, %compute_argument_addresses.exit ]
  %tobool.i18962097.mux = and i1 %or.cond1808.not2213, %tobool.i189620972208
  br label %if.end747

land.lhs.true716:                                 ; preds = %compute_argument_addresses.exit
  %349 = load i64* %constant.i1877, align 8, !tbaa !6
  %sext = shl i64 %259, 32
  %conv718 = ashr exact i64 %sext, 32
  %cmp719 = icmp eq i64 %349, %conv718
  br i1 %cmp719, label %if.end747, label %if.then721

if.then721:                                       ; preds = %land.lhs.true716
  %350 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr722 = getelementptr inbounds %struct.function* %350, i64 0, i32 2
  %351 = load %struct.expr_status** %expr722, align 8, !tbaa !0
  %x_pending_stack_adjust723 = getelementptr inbounds %struct.expr_status* %351, i64 0, i32 0
  %352 = load i32* %x_pending_stack_adjust723, align 4, !tbaa !3
  %tobool724 = icmp eq i32 %352, 0
  br i1 %tobool724, label %if.then740, label %land.lhs.true725

land.lhs.true725:                                 ; preds = %if.then721
  %and726 = and i32 %storemerge1797, 4096
  %tobool727 = icmp eq i32 %and726, 0
  br i1 %tobool727, label %land.lhs.true728, label %if.then740

land.lhs.true728:                                 ; preds = %land.lhs.true725
  %x_inhibit_defer_pop730 = getelementptr inbounds %struct.expr_status* %351, i64 0, i32 1
  %353 = load i32* %x_inhibit_defer_pop730, align 4, !tbaa !3
  %tobool731 = icmp eq i32 %353, 0
  br i1 %tobool731, label %if.then732, label %if.then740

if.then732:                                       ; preds = %land.lhs.true728
  %call734 = call fastcc i32 @combine_pending_stack_adjustment_and_call(i32 %conv.i, %struct.args_size* %adjusted_args_size, i32 %conv733) #8
  %354 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr735 = getelementptr inbounds %struct.function* %354, i64 0, i32 2
  %355 = load %struct.expr_status** %expr735, align 8, !tbaa !0
  %x_pending_stack_adjust736 = getelementptr inbounds %struct.expr_status* %355, i64 0, i32 0
  store i32 %call734, i32* %x_pending_stack_adjust736, align 4, !tbaa !3
  call void @do_pending_stack_adjust() #7
  br label %if.end747

if.then740:                                       ; preds = %if.then721, %land.lhs.true725, %land.lhs.true728
  %sub743 = sub nsw i64 %349, %conv718
  %call744 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub743) #7
  call void @anti_adjust_stack(%struct.rtx_def* %call744) #7
  br label %if.end747

if.end747:                                        ; preds = %land.lhs.true716, %compute_argument_addresses.exit.if.end747_crit_edge, %if.then732, %if.then740
  %356 = phi i32 [ %348, %compute_argument_addresses.exit.if.end747_crit_edge ], [ %345, %if.then732 ], [ %345, %if.then740 ], [ %345, %land.lhs.true716 ]
  %old_stack_arg_under_construction.420942211 = phi i32 [ %old_stack_arg_under_construction.420942212, %compute_argument_addresses.exit.if.end747_crit_edge ], [ %old_stack_arg_under_construction.42094, %if.then732 ], [ %old_stack_arg_under_construction.42094, %if.then740 ], [ %old_stack_arg_under_construction.42094, %land.lhs.true716 ]
  %argblock.120952209 = phi %struct.rtx_def* [ %argblock.120952210, %compute_argument_addresses.exit.if.end747_crit_edge ], [ null, %if.then732 ], [ null, %if.then740 ], [ null, %land.lhs.true716 ]
  %tobool.i18962098 = phi i1 [ %tobool.i18962097.mux, %compute_argument_addresses.exit.if.end747_crit_edge ], [ true, %if.then732 ], [ true, %if.then740 ], [ true, %land.lhs.true716 ]
  %357 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr748 = getelementptr inbounds %struct.function* %357, i64 0, i32 2
  %358 = load %struct.expr_status** %expr748, align 8, !tbaa !0
  %x_inhibit_defer_pop749 = getelementptr inbounds %struct.expr_status* %358, i64 0, i32 1
  %359 = load i32* %x_inhibit_defer_pop749, align 4, !tbaa !3
  %add750 = add nsw i32 %359, 1
  store i32 %add750, i32* %x_inhibit_defer_pop749, align 4, !tbaa !3
  br i1 %cmp266, label %if.else.i1941, label %if.then.i1930

if.then.i1930:                                    ; preds = %if.end747
  %bf.load.i1928 = load i32* %234, align 8
  %bf.clear.i1929 = and i32 %bf.load.i1928, 65536
  %tobool1.i = icmp eq i32 %bf.clear.i1929, 0
  br i1 %tobool1.i, label %if.then2.i, label %if.end.i1933

if.then2.i:                                       ; preds = %if.then.i1930
  call void @assemble_external(%union.tree_node* %call) #7
  %bf.load5.i = load i32* %234, align 8
  %bf.set.i = or i32 %bf.load5.i, 65536
  store i32 %bf.set.i, i32* %234, align 8
  br label %if.end.i1933

if.end.i1933:                                     ; preds = %if.then2.i, %if.then.i1930
  %360 = load %struct.rtx_def** %rtl.i1931, align 8, !tbaa !0
  %tobool7.i1932 = icmp eq %struct.rtx_def* %360, null
  br i1 %tobool7.i1932, label %cond.false.i1934, label %cond.end.i1937

cond.false.i1934:                                 ; preds = %if.end.i1933
  call void @make_decl_rtl(%union.tree_node* %call, i8* null) #7
  %361 = load %struct.rtx_def** %rtl.i1931, align 8, !tbaa !0
  br label %cond.end.i1937

cond.end.i1937:                                   ; preds = %cond.false.i1934, %if.end.i1933
  %cond.i1935 = phi %struct.rtx_def* [ %361, %cond.false.i1934 ], [ %360, %if.end.i1933 ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %cond.i1935, i64 0, i32 1, i64 0
  %rtx.i1936 = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %362 = load %struct.rtx_def** %rtx.i1936, align 8, !tbaa !0
  br label %rtx_for_function_call.exit

if.else.i1941:                                    ; preds = %if.end747
  call void @push_temp_slots() #7
  %363 = load %union.tree_node** %arrayidx7, align 8, !tbaa !0
  %call.i1940 = call %struct.rtx_def* @expand_expr(%union.tree_node* %363, %struct.rtx_def* null, i32 0, i32 0) #7
  call void @pop_temp_slots() #7
  call void @emit_queue() #7
  br label %rtx_for_function_call.exit

rtx_for_function_call.exit:                       ; preds = %cond.end.i1937, %if.else.i1941
  %funexp.0.i = phi %struct.rtx_def* [ %362, %cond.end.i1937 ], [ %call.i1940, %if.else.i1941 ]
  %364 = load %union.tree_node** %type753, align 8, !tbaa !0
  %type754 = bitcast %union.tree_node* %364 to %struct.tree_type*
  %mode755 = getelementptr inbounds %struct.tree_type* %type754, i64 0, i32 6
  %365 = bitcast [4 x i8]* %mode755 to i32*
  %bf.load756 = load i32* %365, align 4
  %bf.clear758 = and i32 %bf.load756, 65024
  %cmp759 = icmp ne i32 %bf.clear758, 0
  %or.cond1809 = and i1 %cmp759, %cmp263
  br i1 %or.cond1809, label %if.else772, label %if.end779

if.else772:                                       ; preds = %rtx_for_function_call.exit
  %conv776 = zext i1 %cmp498 to i32
  %call777 = call %struct.rtx_def* @hard_function_value(%union.tree_node* %364, %union.tree_node* %call, i32 %conv776) #7
  br label %if.end779

if.end779:                                        ; preds = %rtx_for_function_call.exit, %if.else772
  %valreg.0 = phi %struct.rtx_def* [ %call777, %if.else772 ], [ null, %rtx_for_function_call.exit ]
  br i1 %cmp81.i, label %for.body.i1945, label %for.end822.thread

for.end822.thread:                                ; preds = %if.end779
  %tobool509.not2214 = xor i1 %tobool509, true
  br label %if.end862

for.body.i1945:                                   ; preds = %if.end779, %for.inc.i1968
  %reg_parm_seen.0.load20652081 = phi i32 [ %reg_parm_seen.0.load20652080, %for.inc.i1968 ], [ 0, %if.end779 ]
  %indvars.iv.i1942 = phi i64 [ %indvars.iv.next.i1965, %for.inc.i1968 ], [ 0, %if.end779 ]
  %arrayidx.i1943 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1942
  %reg.i1944 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1942, i32 4
  %366 = load %struct.rtx_def** %reg.i1944, align 8, !tbaa !0
  %cmp1.i = icmp eq %struct.rtx_def* %366, null
  br i1 %cmp1.i, label %for.inc.i1968, label %land.lhs.true.i1948

land.lhs.true.i1948:                              ; preds = %for.body.i1945
  %pass_on_stack.i1946 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1942, i32 8
  %367 = load i32* %pass_on_stack.i1946, align 4, !tbaa !3
  %tobool.i1947 = icmp eq i32 %367, 0
  br i1 %tobool.i1947, label %if.then.i1950, label %for.inc.i1968

if.then.i1950:                                    ; preds = %land.lhs.true.i1948
  %value.i1949 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1942, i32 2
  %368 = load %struct.rtx_def** %value.i1949, align 8, !tbaa !0
  %cmp6.i = icmp eq %struct.rtx_def* %368, null
  br i1 %cmp6.i, label %if.then7.i, label %if.then.if.end_crit_edge.i

if.then.if.end_crit_edge.i:                       ; preds = %if.then.i1950
  %tree_value20.pre.i = getelementptr inbounds %struct.arg_data* %arrayidx.i1943, i64 0, i32 0
  br label %if.end.i1958

if.then7.i:                                       ; preds = %if.then.i1950
  call void @push_temp_slots() #7
  %tree_value.i1951 = getelementptr inbounds %struct.arg_data* %arrayidx.i1943, i64 0, i32 0
  %369 = load %union.tree_node** %tree_value.i1951, align 8, !tbaa !0
  %call.i1952 = call %struct.rtx_def* @expand_expr(%union.tree_node* %369, %struct.rtx_def* null, i32 0, i32 0) #7
  store %struct.rtx_def* %call.i1952, %struct.rtx_def** %value.i1949, align 8, !tbaa !0
  call void @preserve_temp_slots(%struct.rtx_def* %call.i1952) #7
  call void @pop_temp_slots() #7
  call void @emit_queue() #7
  %.pre.i1957.pre = load %struct.rtx_def** %value.i1949, align 8, !tbaa !0
  br label %if.end.i1958

if.end.i1958:                                     ; preds = %if.then7.i, %if.then.if.end_crit_edge.i
  %.pre.i1957 = phi %struct.rtx_def* [ %368, %if.then.if.end_crit_edge.i ], [ %.pre.i1957.pre, %if.then7.i ]
  %tree_value20.pre-phi.i = phi %union.tree_node** [ %tree_value20.pre.i, %if.then.if.end_crit_edge.i ], [ %tree_value.i1951, %if.then7.i ]
  %mode.i1953 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1942, i32 1
  %370 = load i32* %mode.i1953, align 4, !tbaa !4
  %371 = load %union.tree_node** %tree_value20.pre-phi.i, align 8, !tbaa !0
  %type.i1954 = getelementptr inbounds %union.tree_node* %371, i64 0, i32 0, i32 0, i32 1
  %372 = load %union.tree_node** %type.i1954, align 8, !tbaa !0
  %type21.i = bitcast %union.tree_node* %372 to %struct.tree_type*
  %mode22.i = getelementptr inbounds %struct.tree_type* %type21.i, i64 0, i32 6
  %373 = bitcast [4 x i8]* %mode22.i to i32*
  %bf.load.i1955 = load i32* %373, align 4
  %bf.lshr.i = lshr i32 %bf.load.i1955, 9
  %bf.clear.i1956 = and i32 %bf.lshr.i, 127
  %cmp23.i = icmp eq i32 %370, %bf.clear.i1956
  br i1 %cmp23.i, label %if.end47.i, label %if.then24.i

if.then24.i:                                      ; preds = %if.end.i1958
  %unsignedp.i1959 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv.i1942, i32 6
  %374 = load i32* %unsignedp.i1959, align 4, !tbaa !3
  %call43.i = call %struct.rtx_def* @convert_modes(i32 %370, i32 %bf.clear.i1956, %struct.rtx_def* %.pre.i1957, i32 %374) #7
  store %struct.rtx_def* %call43.i, %struct.rtx_def** %value.i1949, align 8, !tbaa !0
  br label %if.end47.i

if.end47.i:                                       ; preds = %if.then24.i, %if.end.i1958
  %375 = phi %struct.rtx_def* [ %call43.i, %if.then24.i ], [ %.pre.i1957, %if.end.i1958 ]
  %376 = bitcast %struct.rtx_def* %375 to i32*
  %bf.load51.i = load i32* %376, align 8
  %bf.clear52.i1960 = and i32 %bf.load51.i, 65535
  switch i32 %bf.clear52.i1960, label %land.lhs.true68.i [
    i32 61, label %for.inc.i1968
    i32 63, label %land.lhs.true60.i
  ]

land.lhs.true60.i:                                ; preds = %if.end47.i
  %arrayidx64.i = getelementptr inbounds %struct.rtx_def* %375, i64 0, i32 1, i64 0
  %rtx.i1961 = bitcast %union.rtunion_def* %arrayidx64.i to %struct.rtx_def**
  %377 = load %struct.rtx_def** %rtx.i1961, align 8, !tbaa !0
  %378 = bitcast %struct.rtx_def* %377 to i32*
  %bf.load65.i1962 = load i32* %378, align 8
  %bf.clear66.i = and i32 %bf.load65.i1962, 65535
  %cmp67.i1963 = icmp eq i32 %bf.clear66.i, 61
  br i1 %cmp67.i1963, label %for.inc.i1968, label %land.lhs.true68.i

land.lhs.true68.i:                                ; preds = %land.lhs.true60.i, %if.end47.i
  %379 = load i32* %mode.i1953, align 4, !tbaa !4
  %cmp72.i = icmp eq i32 %379, 51
  br i1 %cmp72.i, label %for.inc.i1968, label %land.lhs.true73.i

land.lhs.true73.i:                                ; preds = %land.lhs.true68.i
  %call77.i = call i32 @rtx_cost(%struct.rtx_def* %375, i32 47) #7
  %cmp78.i = icmp sgt i32 %call77.i, 4
  br i1 %cmp78.i, label %if.then84.i, label %for.inc.i1968

if.then84.i:                                      ; preds = %land.lhs.true73.i
  %380 = load i32* %mode.i1953, align 4, !tbaa !4
  %381 = load %struct.rtx_def** %value.i1949, align 8, !tbaa !0
  %call91.i = call %struct.rtx_def* @copy_to_mode_reg(i32 %380, %struct.rtx_def* %381) #7
  store %struct.rtx_def* %call91.i, %struct.rtx_def** %value.i1949, align 8, !tbaa !0
  br label %for.inc.i1968

for.inc.i1968:                                    ; preds = %if.then84.i, %land.lhs.true73.i, %land.lhs.true68.i, %land.lhs.true60.i, %if.end47.i, %land.lhs.true.i1948, %for.body.i1945
  %reg_parm_seen.0.load20652080 = phi i32 [ 1, %if.then84.i ], [ 1, %land.lhs.true73.i ], [ 1, %land.lhs.true68.i ], [ 1, %land.lhs.true60.i ], [ 1, %if.end47.i ], [ %reg_parm_seen.0.load20652081, %land.lhs.true.i1948 ], [ %reg_parm_seen.0.load20652081, %for.body.i1945 ]
  %indvars.iv.next.i1965 = add i64 %indvars.iv.i1942, 1
  %lftr.wideiv2167 = trunc i64 %indvars.iv.next.i1965 to i32
  %exitcond2168 = icmp eq i32 %lftr.wideiv2167, %num_actuals.0.lcssa
  br i1 %exitcond2168, label %precompute_register_parameters.exit, label %for.body.i1945

precompute_register_parameters.exit:              ; preds = %for.inc.i1968
  %tobool509.not = xor i1 %tobool509, true
  br i1 %cmp81.i, label %for.body790.lr.ph, label %for.end822

for.body790.lr.ph:                                ; preds = %precompute_register_parameters.exit
  %382 = load %union.tree_node** %var.i1883, align 8, !tbaa !0
  %cmp805 = icmp ne %union.tree_node* %382, null
  %conv806 = zext i1 %cmp805 to i32
  br label %for.body790

for.body790:                                      ; preds = %for.inc820, %for.body790.lr.ph
  %indvars.iv2169 = phi i64 [ 0, %for.body790.lr.ph ], [ %indvars.iv.next2170, %for.inc820 ]
  %sibcall_failure.02114 = phi i32 [ 0, %for.body790.lr.ph ], [ %sibcall_failure.1, %for.inc820 ]
  %arrayidx792 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2169
  %reg = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2169, i32 4
  %383 = load %struct.rtx_def** %reg, align 8, !tbaa !0
  %cmp793 = icmp eq %struct.rtx_def* %383, null
  br i1 %cmp793, label %if.then800, label %lor.lhs.false795

lor.lhs.false795:                                 ; preds = %for.body790
  %pass_on_stack798 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2169, i32 8
  %384 = load i32* %pass_on_stack798, align 4, !tbaa !3
  %tobool799 = icmp eq i32 %384, 0
  br i1 %tobool799, label %for.inc820, label %if.then800

if.then800:                                       ; preds = %lor.lhs.false795, %for.body790
  %call801 = call %struct.rtx_def* @get_last_insn() #7
  %call807 = call fastcc i32 @store_one_arg(%struct.arg_data* %arrayidx792, %struct.rtx_def* %argblock.120952209, i32 %storemerge1797, i32 %conv806) #8
  %tobool808 = icmp eq i32 %call807, 0
  br i1 %tobool808, label %lor.lhs.false809, label %if.then817

lor.lhs.false809:                                 ; preds = %if.then800
  br i1 %cmp498, label %land.lhs.true812, label %for.inc820

land.lhs.true812:                                 ; preds = %lor.lhs.false809
  %call815 = call fastcc i32 @check_sibcall_argument_overlap(%struct.rtx_def* %call801, %struct.arg_data* %arrayidx792) #8
  %tobool816 = icmp eq i32 %call815, 0
  br i1 %tobool816, label %for.inc820, label %if.then817

if.then817:                                       ; preds = %land.lhs.true812, %if.then800
  br label %for.inc820

for.inc820:                                       ; preds = %land.lhs.true812, %lor.lhs.false795, %if.then817, %lor.lhs.false809
  %sibcall_failure.1 = phi i32 [ 1, %if.then817 ], [ %sibcall_failure.02114, %land.lhs.true812 ], [ %sibcall_failure.02114, %lor.lhs.false809 ], [ %sibcall_failure.02114, %lor.lhs.false795 ]
  %indvars.iv.next2170 = add i64 %indvars.iv2169, 1
  %lftr.wideiv2171 = trunc i64 %indvars.iv.next2170 to i32
  %exitcond2172 = icmp eq i32 %lftr.wideiv2171, %num_actuals.0.lcssa
  br i1 %exitcond2172, label %for.end822, label %for.body790

for.end822:                                       ; preds = %for.inc820, %precompute_register_parameters.exit
  %sibcall_failure.0.lcssa = phi i32 [ 0, %precompute_register_parameters.exit ], [ %sibcall_failure.1, %for.inc820 ]
  %tobool823 = icmp eq i32 %reg_parm_seen.0.load20652080, 0
  %cmp81.i.not = xor i1 %cmp81.i, true
  %brmerge = or i1 %tobool823, %cmp81.i.not
  br i1 %brmerge, label %if.end862, label %for.body828.lr.ph

for.body828.lr.ph:                                ; preds = %for.end822
  %385 = load %union.tree_node** %var.i1883, align 8, !tbaa !0
  %cmp844 = icmp ne %union.tree_node* %385, null
  %conv845 = zext i1 %cmp844 to i32
  br label %for.body828

for.body828:                                      ; preds = %for.inc859, %for.body828.lr.ph
  %indvars.iv2173 = phi i64 [ 0, %for.body828.lr.ph ], [ %indvars.iv.next2174, %for.inc859 ]
  %sibcall_failure.22117 = phi i32 [ %sibcall_failure.0.lcssa, %for.body828.lr.ph ], [ %sibcall_failure.3, %for.inc859 ]
  %arrayidx830 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2173
  %partial = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2173, i32 7
  %386 = load i32* %partial, align 4, !tbaa !3
  %cmp831 = icmp eq i32 %386, 0
  br i1 %cmp831, label %for.inc859, label %land.lhs.true833

land.lhs.true833:                                 ; preds = %for.body828
  %pass_on_stack836 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2173, i32 8
  %387 = load i32* %pass_on_stack836, align 4, !tbaa !3
  %tobool837 = icmp eq i32 %387, 0
  br i1 %tobool837, label %if.then838, label %for.inc859

if.then838:                                       ; preds = %land.lhs.true833
  %call840 = call %struct.rtx_def* @get_last_insn() #7
  %call846 = call fastcc i32 @store_one_arg(%struct.arg_data* %arrayidx830, %struct.rtx_def* %argblock.120952209, i32 %storemerge1797, i32 %conv845) #8
  %tobool847 = icmp eq i32 %call846, 0
  br i1 %tobool847, label %lor.lhs.false848, label %if.then856

lor.lhs.false848:                                 ; preds = %if.then838
  br i1 %cmp498, label %land.lhs.true851, label %for.inc859

land.lhs.true851:                                 ; preds = %lor.lhs.false848
  %call854 = call fastcc i32 @check_sibcall_argument_overlap(%struct.rtx_def* %call840, %struct.arg_data* %arrayidx830) #8
  %tobool855 = icmp eq i32 %call854, 0
  br i1 %tobool855, label %for.inc859, label %if.then856

if.then856:                                       ; preds = %land.lhs.true851, %if.then838
  br label %for.inc859

for.inc859:                                       ; preds = %land.lhs.true851, %land.lhs.true833, %for.body828, %if.then856, %lor.lhs.false848
  %sibcall_failure.3 = phi i32 [ %sibcall_failure.22117, %land.lhs.true833 ], [ 1, %if.then856 ], [ %sibcall_failure.22117, %land.lhs.true851 ], [ %sibcall_failure.22117, %lor.lhs.false848 ], [ %sibcall_failure.22117, %for.body828 ]
  %indvars.iv.next2174 = add i64 %indvars.iv2173, 1
  %lftr.wideiv2175 = trunc i64 %indvars.iv.next2174 to i32
  %exitcond2176 = icmp eq i32 %lftr.wideiv2175, %num_actuals.0.lcssa
  br i1 %exitcond2176, label %if.end862, label %for.body828

if.end862:                                        ; preds = %for.end822, %for.inc859, %for.end822.thread
  %reg_parm_seen.0.load2065207922152220 = phi i32 [ 0, %for.end822.thread ], [ %reg_parm_seen.0.load20652080, %for.end822 ], [ %reg_parm_seen.0.load20652080, %for.inc859 ]
  %tobool509.not22162218 = phi i1 [ %tobool509.not2214, %for.end822.thread ], [ %tobool509.not, %for.end822 ], [ %tobool509.not, %for.inc859 ]
  %sibcall_failure.4 = phi i32 [ 0, %for.end822.thread ], [ %sibcall_failure.0.lcssa, %for.end822 ], [ %sibcall_failure.3, %for.inc859 ]
  %388 = load i32* @target_flags, align 4, !tbaa !3
  %389 = and i32 %388, 6144
  %or.cond1811.not = icmp ne i32 %389, 0
  %or.cond1812 = and i1 %or.cond1811.not, %tobool.i18962098
  br i1 %or.cond1812, label %if.then871, label %if.end876

if.then871:                                       ; preds = %if.end862
  %390 = load i64* %constant.i1877, align 8, !tbaa !6
  %sext2103 = shl i64 %259, 32
  %conv873 = ashr exact i64 %sext2103, 32
  %sub874 = sub nsw i64 %390, %conv873
  %call875 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub874) #7
  call void @anti_adjust_stack(%struct.rtx_def* %call875) #7
  br label %if.end876

if.end876:                                        ; preds = %if.end862, %if.then871
  %or.cond1814.not = and i1 %tobool509, %cmp263.not
  %or.cond1815 = and i1 %or.cond1814.not, %tobool882
  br i1 %or.cond1815, label %if.then883, label %if.end896

if.then883:                                       ; preds = %if.end876
  %391 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !0
  %392 = load i32* @target_flags, align 4, !tbaa !3
  %and884 = lshr i32 %392, 25
  %393 = and i32 %and884, 1
  %394 = or i32 %393, 4
  %call887 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %structure_value_addr.1, %struct.rtx_def* null) #7
  %call888 = call %struct.rtx_def* @force_reg(i32 %394, %struct.rtx_def* %call887) #7
  %call889 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %391, %struct.rtx_def* %call888) #7
  %395 = load %struct.rtx_def** @struct_value_rtx, align 8, !tbaa !0
  %396 = bitcast %struct.rtx_def* %395 to i32*
  %bf.load890 = load i32* %396, align 8
  %bf.clear891 = and i32 %bf.load890, 65535
  %cmp892 = icmp eq i32 %bf.clear891, 61
  br i1 %cmp892, label %if.then894, label %if.end896

if.then894:                                       ; preds = %if.then883
  call void @use_reg(%struct.rtx_def** %call_fusage, %struct.rtx_def* %395) #7
  br label %if.end896

if.end896:                                        ; preds = %if.end876, %if.then883, %if.then894
  %call899 = call %struct.rtx_def* @prepare_call_address(%struct.rtx_def* %funexp.0.i, %union.tree_node* %call, %struct.rtx_def** %call_fusage, i32 %reg_parm_seen.0.load2065207922152220, i32 undef) #8
  br i1 %cmp81.i, label %for.body.lr.ph.i1982, label %load_register_parameters.exit

for.body.lr.ph.i1982:                             ; preds = %if.end896
  %and.i1980 = and i32 %storemerge1797, 256
  %tobool.i1981 = icmp eq i32 %and.i1980, 0
  br label %for.body.i1984

for.body.i1984:                                   ; preds = %for.inc120.i, %for.body.lr.ph.i1982
  %indvars.iv174.i = phi i64 [ 0, %for.body.lr.ph.i1982 ], [ %indvars.iv.next175.i, %for.inc120.i ]
  %arrayidx.i1983 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i
  br i1 %tobool.i1981, label %cond.false.i1987, label %cond.true.i1986

cond.true.i1986:                                  ; preds = %for.body.i1984
  %tail_call_reg.i1985 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 5
  br label %cond.end.i1990

cond.false.i1987:                                 ; preds = %for.body.i1984
  %reg3.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 4
  br label %cond.end.i1990

cond.end.i1990:                                   ; preds = %cond.false.i1987, %cond.true.i1986
  %cond.in.i = phi %struct.rtx_def** [ %tail_call_reg.i1985, %cond.true.i1986 ], [ %reg3.i, %cond.false.i1987 ]
  %cond.i1988 = load %struct.rtx_def** %cond.in.i, align 8
  %partial6.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 7
  %397 = load i32* %partial6.i, align 4, !tbaa !3
  %tobool7.i1989 = icmp eq %struct.rtx_def* %cond.i1988, null
  br i1 %tobool7.i1989, label %for.inc120.i, label %if.then.i1992

if.then.i1992:                                    ; preds = %cond.end.i1990
  %tobool8.i1991 = icmp eq i32 %397, 0
  br i1 %tobool8.i1991, label %cond.false10.i, label %cond.true9.i

cond.true9.i:                                     ; preds = %if.then.i1992
  %conv.i1993 = sext i32 %397 to i64
  br label %cond.end33.i

cond.false10.i:                                   ; preds = %if.then.i1992
  %tree_value.i1994 = getelementptr inbounds %struct.arg_data* %arrayidx.i1983, i64 0, i32 0
  %398 = load %union.tree_node** %tree_value.i1994, align 8, !tbaa !0
  %type.i1995 = getelementptr inbounds %union.tree_node* %398, i64 0, i32 0, i32 0, i32 1
  %399 = load %union.tree_node** %type.i1995, align 8, !tbaa !0
  %type13.i = bitcast %union.tree_node* %399 to %struct.tree_type*
  %mode.i1996 = getelementptr inbounds %struct.tree_type* %type13.i, i64 0, i32 6
  %400 = bitcast [4 x i8]* %mode.i1996 to i32*
  %bf.load.i1997 = load i32* %400, align 4
  %bf.clear.i1998 = and i32 %bf.load.i1997, 65024
  %cmp14.i1999 = icmp eq i32 %bf.clear.i1998, 26112
  br i1 %cmp14.i1999, label %cond.true16.i, label %cond.end33.i

cond.true16.i:                                    ; preds = %cond.false10.i
  %call.i2000 = call i64 @int_size_in_bytes(%union.tree_node* %399) #7
  %401 = load i32* @target_flags, align 4, !tbaa !3
  %and22.i = lshr i32 %401, 23
  %402 = and i32 %and22.i, 4
  %403 = add i32 %402, 4
  %sub167.i = or i32 %402, 3
  %conv25168.i = zext i32 %sub167.i to i64
  %add.i2001 = add nsw i64 %conv25168.i, %call.i2000
  %conv29169.i = zext i32 %403 to i64
  %div.i2002 = sdiv i64 %add.i2001, %conv29169.i
  br label %cond.end33.i

cond.end33.i:                                     ; preds = %cond.true16.i, %cond.false10.i, %cond.true9.i
  %cond34.i = phi i64 [ %conv.i1993, %cond.true9.i ], [ %div.i2002, %cond.true16.i ], [ -1, %cond.false10.i ]
  %conv35.i = trunc i64 %cond34.i to i32
  %404 = bitcast %struct.rtx_def* %cond.i1988 to i32*
  %bf.load36.i = load i32* %404, align 8
  %bf.clear37.i = and i32 %bf.load36.i, 65535
  %cmp38.i2003 = icmp eq i32 %bf.clear37.i, 39
  br i1 %cmp38.i2003, label %if.then40.i, label %if.else.i2006

if.then40.i:                                      ; preds = %cond.end33.i
  %value.i2004 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 2
  %405 = load %struct.rtx_def** %value.i2004, align 8, !tbaa !0
  %tree_value45.i = getelementptr inbounds %struct.arg_data* %arrayidx.i1983, i64 0, i32 0
  %406 = load %union.tree_node** %tree_value45.i, align 8, !tbaa !0
  %type47.i = getelementptr inbounds %union.tree_node* %406, i64 0, i32 0, i32 0, i32 1
  %407 = load %union.tree_node** %type47.i, align 8, !tbaa !0
  %call48.i2005 = call i64 @int_size_in_bytes(%union.tree_node* %407) #7
  %conv49.i = trunc i64 %call48.i2005 to i32
  call void @emit_group_load(%struct.rtx_def* %cond.i1988, %struct.rtx_def* %405, i32 %conv49.i) #7
  br label %if.end97.i

if.else.i2006:                                    ; preds = %cond.end33.i
  %cmp50.i = icmp eq i32 %conv35.i, -1
  br i1 %cmp50.i, label %if.then52.i, label %if.else57.i

if.then52.i:                                      ; preds = %if.else.i2006
  %value55.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 2
  %408 = load %struct.rtx_def** %value55.i, align 8, !tbaa !0
  %call56.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %cond.i1988, %struct.rtx_def* %408) #7
  br label %if.end97.i

if.else57.i:                                      ; preds = %if.else.i2006
  %n_aligned_regs.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 16
  %409 = load i32* %n_aligned_regs.i, align 4, !tbaa !3
  %cmp60.i = icmp eq i32 %409, 0
  br i1 %cmp60.i, label %if.else78.i, label %for.cond63.preheader.i

for.cond63.preheader.i:                           ; preds = %if.else57.i
  %cmp67170.i = icmp sgt i32 %409, 0
  br i1 %cmp67170.i, label %for.body69.lr.ph.i, label %if.end97.i

for.body69.lr.ph.i:                               ; preds = %for.cond63.preheader.i
  %arrayidx70.i = getelementptr inbounds %struct.rtx_def* %cond.i1988, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx70.i to i32*
  %aligned_regs.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 15
  br label %for.body69.i

for.body69.i:                                     ; preds = %for.body69.i, %for.body69.lr.ph.i
  %indvars.iv.i2007 = phi i64 [ 0, %for.body69.lr.ph.i ], [ %indvars.iv.next.i2009, %for.body69.i ]
  %410 = load i32* @word_mode, align 4, !tbaa !4
  %411 = load i32* %rtuint.i, align 4, !tbaa !3
  %412 = trunc i64 %indvars.iv.i2007 to i32
  %add71.i = add i32 %411, %412
  %call72.i = call %struct.rtx_def* @gen_rtx_REG(i32 %410, i32 %add71.i) #7
  %413 = load %struct.rtx_def*** %aligned_regs.i, align 8, !tbaa !0
  %arrayidx76.i = getelementptr inbounds %struct.rtx_def** %413, i64 %indvars.iv.i2007
  %414 = load %struct.rtx_def** %arrayidx76.i, align 8, !tbaa !0
  %call77.i2008 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call72.i, %struct.rtx_def* %414) #7
  %indvars.iv.next.i2009 = add i64 %indvars.iv.i2007, 1
  %415 = load i32* %n_aligned_regs.i, align 4, !tbaa !3
  %416 = trunc i64 %indvars.iv.next.i2009 to i32
  %cmp67.i2010 = icmp slt i32 %416, %415
  br i1 %cmp67.i2010, label %for.body69.i, label %if.end97.i

if.else78.i:                                      ; preds = %if.else57.i
  br i1 %tobool8.i1991, label %if.then84.i2015, label %lor.lhs.false.i2013

lor.lhs.false.i2013:                              ; preds = %if.else78.i
  %pass_on_stack.i2011 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 8
  %417 = load i32* %pass_on_stack.i2011, align 4, !tbaa !3
  %tobool83.i2012 = icmp eq i32 %417, 0
  br i1 %tobool83.i2012, label %if.end97.i, label %if.then84.i2015

if.then84.i2015:                                  ; preds = %lor.lhs.false.i2013, %if.else78.i
  %arrayidx86.i = getelementptr inbounds %struct.rtx_def* %cond.i1988, i64 0, i32 1, i64 0
  %rtuint87.i = bitcast %union.rtunion_def* %arrayidx86.i to i32*
  %418 = load i32* %rtuint87.i, align 4, !tbaa !3
  %value90.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 2
  %419 = load %struct.rtx_def** %value90.i, align 8, !tbaa !0
  %call91.i2014 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %419) #7
  %mode94.i = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv174.i, i32 1
  %420 = load i32* %mode94.i, align 4, !tbaa !4
  call void @move_block_to_reg(i32 %418, %struct.rtx_def* %call91.i2014, i32 %conv35.i, i32 %420) #7
  br label %if.end97.i

if.end97.i:                                       ; preds = %for.body69.i, %if.then84.i2015, %lor.lhs.false.i2013, %for.cond63.preheader.i, %if.then52.i, %if.then40.i
  %bf.load98.i = load i32* %404, align 8
  %bf.clear99.i = and i32 %bf.load98.i, 65535
  %cmp100.i = icmp eq i32 %bf.clear99.i, 39
  br i1 %cmp100.i, label %if.then102.i, label %if.else103.i

if.then102.i:                                     ; preds = %if.end97.i
  call void @use_group_regs(%struct.rtx_def** %call_fusage, %struct.rtx_def* %cond.i1988) #7
  br label %for.inc120.i

if.else103.i:                                     ; preds = %if.end97.i
  %cmp104.i = icmp eq i32 %conv35.i, -1
  br i1 %cmp104.i, label %if.then106.i, label %if.else107.i

if.then106.i:                                     ; preds = %if.else103.i
  call void @use_reg(%struct.rtx_def** %call_fusage, %struct.rtx_def* %cond.i1988) #7
  br label %for.inc120.i

if.else107.i:                                     ; preds = %if.else103.i
  %arrayidx109.i = getelementptr inbounds %struct.rtx_def* %cond.i1988, i64 0, i32 1, i64 0
  %rtuint110.i = bitcast %union.rtunion_def* %arrayidx109.i to i32*
  %421 = load i32* %rtuint110.i, align 4, !tbaa !3
  %cmp111.i = icmp eq i32 %conv35.i, 0
  %cond116.i = select i1 %cmp111.i, i32 1, i32 %conv35.i
  call void @use_regs(%struct.rtx_def** %call_fusage, i32 %421, i32 %cond116.i) #7
  br label %for.inc120.i

for.inc120.i:                                     ; preds = %if.else107.i, %if.then106.i, %if.then102.i, %cond.end.i1990
  %indvars.iv.next175.i = add i64 %indvars.iv174.i, 1
  %lftr.wideiv2177 = trunc i64 %indvars.iv.next175.i to i32
  %exitcond2178 = icmp eq i32 %lftr.wideiv2177, %num_actuals.0.lcssa
  br i1 %exitcond2178, label %load_register_parameters.exit, label %for.body.i1984

load_register_parameters.exit:                    ; preds = %for.inc120.i, %if.end896
  call void @emit_queue() #7
  %call900 = call %struct.rtx_def* @get_last_insn() #7
  %422 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !0
  %call901 = call %struct.rtx_def* @function_arg(%struct.ix86_args* %args_so_far, i32 0, %union.tree_node* %422, i32 1) #7
  br i1 %tobool509, label %land.lhs.true903, label %if.end922

land.lhs.true903:                                 ; preds = %load_register_parameters.exit
  %423 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr904 = getelementptr inbounds %struct.function* %423, i64 0, i32 2
  %424 = load %struct.expr_status** %expr904, align 8, !tbaa !0
  %x_stack_pointer_delta905 = getelementptr inbounds %struct.expr_status* %424, i64 0, i32 2
  %425 = load i32* %x_stack_pointer_delta905, align 4, !tbaa !3
  %conv906 = sext i32 %425 to i64
  %rem = srem i64 %conv906, %div
  %tobool907 = icmp eq i64 %rem, 0
  br i1 %tobool907, label %land.lhs.true913, label %if.then908

if.then908:                                       ; preds = %land.lhs.true903
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str3, i64 0, i64 0), i32 3049, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_call, i64 0, i64 0)) #10
  unreachable

land.lhs.true913:                                 ; preds = %land.lhs.true903
  %sext2102 = shl i64 %259, 32
  %conv910 = ashr exact i64 %sext2102, 32
  %426 = load i64* %constant.i1877, align 8, !tbaa !6
  %427 = load %struct.rtx_def** %call_fusage, align 8, !tbaa !0
  call fastcc void @emit_call_1(%struct.rtx_def* %call899, %union.tree_node* %call, %union.tree_node* %50, i64 %conv910, i64 %426, i64 %struct_value_size.0, %struct.rtx_def* %call901, %struct.rtx_def* %valreg.0, i32 %8, %struct.rtx_def* %427, i32 %storemerge1797) #8
  %428 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr914 = getelementptr inbounds %struct.function* %428, i64 0, i32 2
  %429 = load %struct.expr_status** %expr914, align 8, !tbaa !0
  %x_stack_pointer_delta915 = getelementptr inbounds %struct.expr_status* %429, i64 0, i32 2
  %430 = load i32* %x_stack_pointer_delta915, align 4, !tbaa !3
  %x_pending_stack_adjust917 = getelementptr inbounds %struct.expr_status* %429, i64 0, i32 0
  %431 = load i32* %x_pending_stack_adjust917, align 4, !tbaa !3
  %sub918 = sub nsw i32 %430, %431
  %cmp919 = icmp eq i32 %sub566, %sub918
  br i1 %cmp919, label %land.lhs.true924, label %if.then921

if.then921:                                       ; preds = %land.lhs.true913
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str3, i64 0, i64 0), i32 3060, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_call, i64 0, i64 0)) #10
  unreachable

if.end922:                                        ; preds = %load_register_parameters.exit
  %sext2101 = shl i64 %259, 32
  %conv910.c = ashr exact i64 %sext2101, 32
  %432 = load i64* %constant.i1877, align 8, !tbaa !6
  %433 = load %struct.rtx_def** %call_fusage, align 8, !tbaa !0
  call fastcc void @emit_call_1(%struct.rtx_def* %call899, %union.tree_node* %call, %union.tree_node* %50, i64 %conv910.c, i64 %432, i64 %struct_value_size.0, %struct.rtx_def* %call901, %struct.rtx_def* %valreg.0, i32 %8, %struct.rtx_def* %433, i32 %storemerge1797) #8
  br label %if.end1015

land.lhs.true924:                                 ; preds = %land.lhs.true913
  %and925 = and i32 %storemerge1797, 4096
  %tobool926 = icmp eq i32 %and925, 0
  br i1 %tobool926, label %land.lhs.true983, label %if.then927

if.then927:                                       ; preds = %land.lhs.true924
  %cmp929 = icmp eq %struct.rtx_def* %valreg.0, null
  br i1 %cmp929, label %if.then936, label %lor.lhs.false931

lor.lhs.false931:                                 ; preds = %if.then927
  %434 = bitcast %struct.rtx_def* %valreg.0 to i32*
  %bf.load932 = load i32* %434, align 8
  %bf.clear933 = and i32 %bf.load932, 65535
  %cmp934 = icmp eq i32 %bf.clear933, 39
  br i1 %cmp934, label %if.then936, label %if.else939

if.then936:                                       ; preds = %lor.lhs.false931, %if.then927
  %call937 = call %struct.rtx_def* @get_insns() #7
  call void @end_sequence() #7
  %call938 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call937) #7
  br label %if.end1015

if.else939:                                       ; preds = %lor.lhs.false931
  %bf.lshr942 = lshr i32 %bf.load932, 16
  %bf.clear943 = and i32 %bf.lshr942, 255
  %call944 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear943) #7
  %435 = load %union.tree_node** %type753, align 8, !tbaa !0
  %code948 = getelementptr inbounds %union.tree_node* %435, i64 0, i32 0, i32 0, i32 2
  %436 = bitcast [4 x i8]* %code948 to i32*
  %bf.load949 = load i32* %436, align 8
  %bf.clear950 = and i32 %bf.load949, 255
  %cmp951 = icmp eq i32 %bf.clear950, 13
  br i1 %cmp951, label %if.then953, label %for.cond960.preheader

if.then953:                                       ; preds = %if.else939
  %type957 = getelementptr inbounds %union.tree_node* %435, i64 0, i32 0, i32 0, i32 1
  %437 = load %union.tree_node** %type957, align 8, !tbaa !0
  %align = getelementptr inbounds %union.tree_node* %437, i64 0, i32 0, i32 7
  %438 = bitcast %union.tree_node** %align to i32*
  %439 = load i32* %438, align 4, !tbaa !3
  call void @mark_reg_pointer(%struct.rtx_def* %call944, i32 %439) #7
  br label %for.cond960.preheader

for.cond960.preheader:                            ; preds = %if.then953, %if.else939
  br i1 %cmp81.i, label %for.body963, label %for.end969

for.body963:                                      ; preds = %for.cond960.preheader, %for.body963
  %indvars.iv2179 = phi i64 [ %indvars.iv.next2180, %for.body963 ], [ 0, %for.cond960.preheader ]
  %note.02121 = phi %struct.rtx_def* [ %call966, %for.body963 ], [ null, %for.cond960.preheader ]
  %initial_value = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2179, i32 3
  %440 = load %struct.rtx_def** %initial_value, align 8, !tbaa !0
  %call966 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %440, %struct.rtx_def* %note.02121) #7
  %indvars.iv.next2180 = add i64 %indvars.iv2179, 1
  %lftr.wideiv2181 = trunc i64 %indvars.iv.next2180 to i32
  %exitcond2182 = icmp eq i32 %lftr.wideiv2181, %num_actuals.0.lcssa
  br i1 %exitcond2182, label %for.end969, label %for.body963

for.end969:                                       ; preds = %for.body963, %for.cond960.preheader
  %note.0.lcssa = phi %struct.rtx_def* [ null, %for.cond960.preheader ], [ %call966, %for.body963 ]
  %call970 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call899, %struct.rtx_def* %note.0.lcssa) #7
  %call971 = call %struct.rtx_def* @get_insns() #7
  call void @end_sequence() #7
  %and972 = and i32 %storemerge1797, 512
  %tobool973 = icmp eq i32 %and972, 0
  br i1 %tobool973, label %if.end979, label %if.then974

if.then974:                                       ; preds = %for.end969
  %call975 = call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 0) #7
  %call976 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call975) #7
  %call977 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call976) #7
  %call978 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call977, %struct.rtx_def* %call970) #7
  br label %if.end979

if.end979:                                        ; preds = %for.end969, %if.then974
  %note.1 = phi %struct.rtx_def* [ %call978, %if.then974 ], [ %call970, %for.end969 ]
  call void @emit_libcall_block(%struct.rtx_def* %call971, %struct.rtx_def* %call944, %struct.rtx_def* %valreg.0, %struct.rtx_def* %note.1) #7
  br label %if.end1015

land.lhs.true983:                                 ; preds = %land.lhs.true924
  %and984 = and i32 %storemerge1797, 4
  %tobool985 = icmp eq i32 %and984, 0
  br i1 %tobool985, label %if.end1015, label %if.then986

if.then986:                                       ; preds = %land.lhs.true983
  %441 = bitcast %struct.rtx_def* %valreg.0 to i32*
  %bf.load988 = load i32* %441, align 8
  %bf.lshr989 = lshr i32 %bf.load988, 16
  %bf.clear990 = and i32 %bf.lshr989, 255
  %call991 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear990) #7
  %442 = load %union.tree_node** %type753, align 8, !tbaa !0
  %code996 = getelementptr inbounds %union.tree_node* %442, i64 0, i32 0, i32 0, i32 2
  %443 = bitcast [4 x i8]* %code996 to i32*
  %bf.load997 = load i32* %443, align 8
  %bf.clear998 = and i32 %bf.load997, 255
  %cmp999 = icmp eq i32 %bf.clear998, 13
  br i1 %cmp999, label %if.then1001, label %if.end1002

if.then1001:                                      ; preds = %if.then986
  call void @mark_reg_pointer(%struct.rtx_def* %call991, i32 128) #7
  br label %if.end1002

if.end1002:                                       ; preds = %if.then1001, %if.then986
  %call1003 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call991, %struct.rtx_def* %valreg.0) #7
  %call1004 = call %struct.rtx_def* @get_last_insn() #7
  %arrayidx1006 = getelementptr inbounds %struct.rtx_def* %call1004, i64 0, i32 1, i64 6
  %rtx1007 = bitcast %union.rtunion_def* %arrayidx1006 to %struct.rtx_def**
  %444 = load %struct.rtx_def** %rtx1007, align 8, !tbaa !0
  %call1008 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 18, %struct.rtx_def* %call991, %struct.rtx_def* %444) #7
  %445 = getelementptr inbounds %union.rtunion_def* %arrayidx1006, i64 0, i32 0
  %call1008.c = ptrtoint %struct.rtx_def* %call1008 to i64
  store i64 %call1008.c, i64* %445, align 8, !tbaa !0
  %call1012 = call %struct.rtx_def* @get_insns() #7
  call void @end_sequence() #7
  %call1013 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call1012) #7
  br label %if.end1015

if.end1015:                                       ; preds = %if.end922, %land.lhs.true983, %if.end1002, %if.then936, %if.end979
  %valreg.1 = phi %struct.rtx_def* [ %valreg.0, %if.then936 ], [ %call944, %if.end979 ], [ %call991, %if.end1002 ], [ %valreg.0, %land.lhs.true983 ], [ %valreg.0, %if.end922 ]
  %and1016 = and i32 %storemerge1797, 66
  %tobool1017.not = icmp ne i32 %and1016, 0
  %brmerge1817 = or i1 %tobool1017.not, %cmp498
  br i1 %brmerge1817, label %if.then1021, label %if.end1036

if.then1021:                                      ; preds = %if.end1015
  %call1023 = call %struct.rtx_def* @get_last_insn() #7
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then1021
  %last1022.0 = phi %struct.rtx_def* [ %call1023, %if.then1021 ], [ %447, %while.body ]
  %446 = bitcast %struct.rtx_def* %last1022.0 to i32*
  %bf.load1024 = load i32* %446, align 8
  %bf.clear1025 = and i32 %bf.load1024, 65535
  %cmp1026 = icmp eq i32 %bf.clear1025, 34
  br i1 %cmp1026, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %arrayidx1029 = getelementptr inbounds %struct.rtx_def* %last1022.0, i64 0, i32 1, i64 1
  %rtx1030 = bitcast %union.rtunion_def* %arrayidx1029 to %struct.rtx_def**
  %447 = load %struct.rtx_def** %rtx1030, align 8, !tbaa !0
  %cmp1031 = icmp eq %struct.rtx_def* %447, %call900
  br i1 %cmp1031, label %if.then1033, label %while.cond

if.then1033:                                      ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str3, i64 0, i64 0), i32 3148, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_call, i64 0, i64 0)) #10
  unreachable

while.end:                                        ; preds = %while.cond
  %call1035 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %last1022.0) #7
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1015, %while.end
  %and1037 = and i32 %storemerge1797, 64
  %tobool1038 = icmp eq i32 %and1037, 0
  br i1 %tobool1038, label %if.end1043, label %if.then1039

if.then1039:                                      ; preds = %if.end1036
  %448 = load %struct.function** @cfun, align 8, !tbaa !0
  %calls_longjmp = getelementptr inbounds %struct.function* %448, i64 0, i32 56
  %449 = bitcast [4 x i8]* %calls_longjmp to i32*
  %bf.load1040 = load i32* %449, align 8
  %bf.set1042 = or i32 %bf.load1040, 32
  store i32 %bf.set1042, i32* %449, align 8
  br label %if.end1043

if.end1043:                                       ; preds = %if.end1036, %if.then1039
  %cmp1044 = icmp ne %struct.rtx_def* %target.addr.12156, null
  br i1 %cmp1044, label %land.lhs.true1046, label %if.end1062

land.lhs.true1046:                                ; preds = %if.end1043
  %450 = bitcast %struct.rtx_def* %target.addr.12156 to i32*
  %bf.load1047 = load i32* %450, align 8
  %bf.clear1048 = and i32 %bf.load1047, 65535
  %cmp1049 = icmp ne i32 %bf.clear1048, 66
  %or.cond1818 = or i1 %cmp1049, %cmp263
  %bf.clear1057 = and i32 %bf.load1047, 67108864
  %tobool1058 = icmp eq i32 %bf.clear1057, 0
  %or.cond1819 = or i1 %or.cond1818, %tobool1058
  br i1 %or.cond1819, label %if.end1062, label %if.then1059

if.then1059:                                      ; preds = %land.lhs.true1046
  %call1060 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target.addr.12156) #7
  %call1061 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1060) #7
  br label %if.end1062

if.end1062:                                       ; preds = %land.lhs.true1046, %if.then1059, %if.end1043
  %call1063 = call i32 @any_pending_cleanups(i32 1) #7
  %tobool1064 = icmp eq i32 %call1063, 0
  %cmp1044.not = xor i1 %cmp1044, true
  %brmerge1824 = or i1 %tobool1064, %cmp1044.not
  %sibcall_failure.4.mux = select i1 %tobool1064, i32 %sibcall_failure.4, i32 1
  br i1 %brmerge1824, label %if.end1079, label %land.lhs.true1067

land.lhs.true1067:                                ; preds = %if.end1062
  %451 = bitcast %struct.rtx_def* %target.addr.12156 to i32*
  %bf.load1068 = load i32* %451, align 8
  %bf.clear1069 = and i32 %bf.load1068, 65535
  %cmp1070 = icmp eq i32 %bf.clear1069, 61
  br i1 %cmp1070, label %land.lhs.true1072, label %if.end1079

land.lhs.true1072:                                ; preds = %land.lhs.true1067
  %arrayidx1074 = getelementptr inbounds %struct.rtx_def* %target.addr.12156, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx1074 to i32*
  %452 = load i32* %rtuint, align 4, !tbaa !3
  %cmp1075 = icmp ult i32 %452, 53
  %.target.addr.1 = select i1 %cmp1075, %struct.rtx_def* null, %struct.rtx_def* %target.addr.12156
  br label %if.end1079

if.end1079:                                       ; preds = %land.lhs.true1072, %if.end1062, %land.lhs.true1067
  %sibcall_failure.5 = phi i32 [ %sibcall_failure.4.mux, %if.end1062 ], [ 1, %land.lhs.true1072 ], [ 1, %land.lhs.true1067 ]
  %target.addr.3 = phi %struct.rtx_def* [ %target.addr.12156, %if.end1062 ], [ %.target.addr.1, %land.lhs.true1072 ], [ %target.addr.12156, %land.lhs.true1067 ]
  %453 = load %union.tree_node** %type753, align 8, !tbaa !0
  %type1082 = bitcast %union.tree_node* %453 to %struct.tree_type*
  %mode1083 = getelementptr inbounds %struct.tree_type* %type1082, i64 0, i32 6
  %454 = bitcast [4 x i8]* %mode1083 to i32*
  %bf.load1084 = load i32* %454, align 4
  %bf.lshr1085 = lshr i32 %bf.load1084, 9
  %bf.clear1086 = and i32 %bf.lshr1085, 127
  %cmp1087 = icmp ne i32 %bf.clear1086, 0
  %or.cond1820 = and i1 %cmp1087, %tobool1090
  br i1 %or.cond1820, label %if.else1092, label %if.then1091

if.then1091:                                      ; preds = %if.end1079
  %455 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  br label %if.end1243

if.else1092:                                      ; preds = %if.end1079
  br i1 %cmp263, label %if.else1132, label %if.then1094

if.then1094:                                      ; preds = %if.else1092
  %cmp1095 = icmp eq %struct.rtx_def* %target.addr.3, null
  br i1 %cmp1095, label %if.then1102, label %lor.lhs.false1097

lor.lhs.false1097:                                ; preds = %if.then1094
  %456 = bitcast %struct.rtx_def* %target.addr.3 to i32*
  %bf.load1098 = load i32* %456, align 8
  %bf.clear1099 = and i32 %bf.load1098, 65535
  %cmp1100 = icmp eq i32 %bf.clear1099, 66
  br i1 %cmp1100, label %if.end1243, label %if.then1102

if.then1102:                                      ; preds = %lor.lhs.false1097, %if.then1094
  %call1117 = call %struct.rtx_def* @memory_address(i32 %bf.clear1086, %struct.rtx_def* %structure_value_addr.1) #7
  %call1118 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear1086, %struct.rtx_def* %call1117) #7
  call void @set_mem_attributes(%struct.rtx_def* %call1118, %union.tree_node* %exp, i32 1) #7
  br label %if.end1243

if.else1132:                                      ; preds = %if.else1092
  %457 = bitcast %struct.rtx_def* %valreg.1 to i32*
  %bf.load1133 = load i32* %457, align 8
  %bf.clear1134 = and i32 %bf.load1133, 65535
  %cmp1135 = icmp eq i32 %bf.clear1134, 39
  %cmp1138 = icmp eq %struct.rtx_def* %target.addr.3, null
  br i1 %cmp1135, label %if.then1137, label %if.else1196

if.then1137:                                      ; preds = %if.else1132
  br i1 %cmp1138, label %if.then1140, label %if.end1187

if.then1140:                                      ; preds = %if.then1137
  %readonly_flag = getelementptr inbounds %union.tree_node* %453, i64 0, i32 0, i32 0, i32 2
  %458 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load1146 = load i32* %458, align 8
  %459 = lshr i32 %bf.load1146, 10
  %mul1157 = and i32 %459, 2
  %460 = lshr i32 %bf.load1084, 19
  %mul1165 = and i32 %460, 4
  %bf.clear1172 = and i32 %bf.load1146, 255
  %cmp1173 = icmp eq i32 %bf.clear1172, 20
  br i1 %cmp1173, label %land.rhs1175, label %land.end1181

land.rhs1175:                                     ; preds = %if.then1140
  %type1179 = getelementptr inbounds %union.tree_node* %453, i64 0, i32 0, i32 0, i32 1
  %461 = load %union.tree_node** %type1179, align 8, !tbaa !0
  %tobool1180 = icmp ne %union.tree_node* %461, null
  br label %land.end1181

land.end1181:                                     ; preds = %land.rhs1175, %if.then1140
  %462 = phi i1 [ false, %if.then1140 ], [ %tobool1180, %land.rhs1175 ]
  %land.ext = zext i1 %462 to i32
  %mul1182 = shl nuw nsw i32 %land.ext, 3
  %or1158 = or i32 %mul1165, %mul1157
  %or1166 = or i32 %or1158, %mul1182
  %or1184 = or i32 %or1166, 1
  %call1185 = call %union.tree_node* @build_qualified_type(%union.tree_node* %453, i32 %or1184) #7
  %call1186 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call1185, i32 0, i32 1, i32 1) #7
  call void @preserve_temp_slots(%struct.rtx_def* %call1186) #7
  br label %if.end1187

if.end1187:                                       ; preds = %land.end1181, %if.then1137
  %target.addr.4 = phi %struct.rtx_def* [ %call1186, %land.end1181 ], [ %target.addr.3, %if.then1137 ]
  %call1188 = call i32 @rtx_equal_p(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %valreg.1) #7
  %tobool1189 = icmp eq i32 %call1188, 0
  br i1 %tobool1189, label %if.then1190, label %if.end1243

if.then1190:                                      ; preds = %if.end1187
  %463 = load %union.tree_node** %type753, align 8, !tbaa !0
  %call1193 = call i64 @int_size_in_bytes(%union.tree_node* %463) #7
  %conv1194 = trunc i64 %call1193 to i32
  call void @emit_group_store(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %valreg.1, i32 %conv1194) #7
  br label %if.end1243

if.else1196:                                      ; preds = %if.else1132
  br i1 %cmp1138, label %if.else1222, label %land.lhs.true1198

land.lhs.true1198:                                ; preds = %if.else1196
  %464 = bitcast %struct.rtx_def* %target.addr.3 to i32*
  %bf.load1199 = load i32* %464, align 8
  %bf.lshr1200 = lshr i32 %bf.load1199, 16
  %bf.clear1201 = and i32 %bf.lshr1200, 255
  %cmp1209 = icmp eq i32 %bf.clear1201, %bf.clear1086
  br i1 %cmp1209, label %land.lhs.true1211, label %if.else1222

land.lhs.true1211:                                ; preds = %land.lhs.true1198
  %bf.lshr1216 = lshr i32 %bf.load1133, 16
  %bf.clear1217 = and i32 %bf.lshr1216, 255
  %cmp1218 = icmp eq i32 %bf.clear1086, %bf.clear1217
  br i1 %cmp1218, label %if.then1220, label %if.else1222

if.then1220:                                      ; preds = %land.lhs.true1211
  %call1221 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.3, %struct.rtx_def* %valreg.1) #7
  br label %if.end1243

if.else1222:                                      ; preds = %if.else1196, %land.lhs.true1211, %land.lhs.true1198
  %bf.clear1229 = and i32 %bf.load1084, 65024
  %cmp1230 = icmp eq i32 %bf.clear1229, 26112
  br i1 %cmp1230, label %if.then1232, label %if.else1236

if.then1232:                                      ; preds = %if.else1222
  %call1235 = call %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def* %target.addr.3, %struct.rtx_def* %valreg.1, %union.tree_node* %453) #7
  br label %if.end1243

if.else1236:                                      ; preds = %if.else1222
  %call1237 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %valreg.1) #7
  br label %if.end1243

if.end1243:                                       ; preds = %if.then1190, %if.end1187, %lor.lhs.false1097, %if.then1102, %if.then1232, %if.else1236, %if.then1220, %if.then1091
  %sibcall_failure.6 = phi i32 [ %sibcall_failure.5, %if.then1091 ], [ %sibcall_failure.5, %if.then1102 ], [ %sibcall_failure.5, %lor.lhs.false1097 ], [ %sibcall_failure.5, %if.then1220 ], [ 1, %if.then1232 ], [ %sibcall_failure.5, %if.else1236 ], [ 1, %if.end1187 ], [ 1, %if.then1190 ]
  %target.addr.5 = phi %struct.rtx_def* [ %455, %if.then1091 ], [ %call1118, %if.then1102 ], [ %target.addr.3, %lor.lhs.false1097 ], [ %target.addr.3, %if.then1220 ], [ %call1235, %if.then1232 ], [ %call1237, %if.else1236 ], [ %target.addr.4, %if.end1187 ], [ %target.addr.4, %if.then1190 ]
  %465 = load %struct.rtx_def** %old_stack_level, align 8, !tbaa !0
  %tobool1244 = icmp eq %struct.rtx_def* %465, null
  br i1 %tobool1244, label %if.else1251, label %land.lhs.true1245

land.lhs.true1245:                                ; preds = %if.end1243
  %and1246 = and i32 %storemerge1797, 1024
  %tobool1247 = icmp eq i32 %and1246, 0
  br i1 %tobool1247, label %if.then1248, label %if.else1251

if.then1248:                                      ; preds = %land.lhs.true1245
  call void @emit_stack_restore(i32 0, %struct.rtx_def* %465, %struct.rtx_def* null) #7
  %466 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr1249 = getelementptr inbounds %struct.function* %466, i64 0, i32 2
  %467 = load %struct.expr_status** %expr1249, align 8, !tbaa !0
  %x_pending_stack_adjust1250 = getelementptr inbounds %struct.expr_status* %467, i64 0, i32 0
  store i32 %356, i32* %x_pending_stack_adjust1250, align 4, !tbaa !3
  store i32 %old_stack_arg_under_construction.420942211, i32* @stack_arg_under_construction, align 4, !tbaa !3
  store i32 %4, i32* @highest_outgoing_arg_in_use, align 4, !tbaa !3
  store i8* %5, i8** @stack_usage_map, align 8, !tbaa !0
  br label %if.end1305

if.else1251:                                      ; preds = %land.lhs.true1245, %if.end1243
  %468 = load i32* @target_flags, align 4, !tbaa !3
  %and1252 = and i32 %468, 4096
  %tobool1253 = icmp eq i32 %and1252, 0
  %brmerge1822 = or i1 %tobool1253, %tobool509.not22162218
  br i1 %brmerge1822, label %if.end1305, label %for.cond1260.preheader

for.cond1260.preheader:                           ; preds = %if.else1251
  br i1 %cmp81.i, label %for.body1263, label %for.end1303

for.body1263:                                     ; preds = %for.cond1260.preheader, %for.inc1301
  %indvars.iv2184 = phi i64 [ %indvars.iv.next2185, %for.inc1301 ], [ 0, %for.cond1260.preheader ]
  %save_area1266 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2184, i32 14
  %469 = load %struct.rtx_def** %save_area1266, align 8, !tbaa !0
  %tobool1267 = icmp eq %struct.rtx_def* %469, null
  br i1 %tobool1267, label %for.inc1301, label %if.then1268

if.then1268:                                      ; preds = %for.body1263
  %470 = bitcast %struct.rtx_def* %469 to i32*
  %bf.load1272 = load i32* %470, align 8
  %bf.lshr1273 = lshr i32 %bf.load1272, 16
  %bf.clear1274 = and i32 %bf.lshr1273, 255
  %stack_slot = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2184, i32 13
  %471 = load %struct.rtx_def** %stack_slot, align 8, !tbaa !0
  %arrayidx1278 = getelementptr inbounds %struct.rtx_def* %471, i64 0, i32 1, i64 0
  %rtx1279 = bitcast %union.rtunion_def* %arrayidx1278 to %struct.rtx_def**
  %472 = load %struct.rtx_def** %rtx1279, align 8, !tbaa !0
  %call1280 = call %struct.rtx_def* @memory_address(i32 %bf.clear1274, %struct.rtx_def* %472) #7
  %call1281 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear1274, %struct.rtx_def* %call1280) #7
  %cmp1282 = icmp eq i32 %bf.clear1274, 51
  %473 = load %struct.rtx_def** %save_area1266, align 8, !tbaa !0
  br i1 %cmp1282, label %if.else1289, label %if.then1284

if.then1284:                                      ; preds = %if.then1268
  %call1288 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1281, %struct.rtx_def* %473) #7
  br label %for.inc1301

if.else1289:                                      ; preds = %if.then1268
  %call1293 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %473) #7
  %constant1296 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2184, i32 11, i32 0
  %474 = load i64* %constant1296, align 8, !tbaa !6
  %call1297 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %474) #7
  %call1298 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call1281, %struct.rtx_def* %call1293, %struct.rtx_def* %call1297) #7
  br label %for.inc1301

for.inc1301:                                      ; preds = %for.body1263, %if.else1289, %if.then1284
  %indvars.iv.next2185 = add i64 %indvars.iv2184, 1
  %lftr.wideiv2186 = trunc i64 %indvars.iv.next2185 to i32
  %exitcond2187 = icmp eq i32 %lftr.wideiv2186, %num_actuals.0.lcssa
  br i1 %exitcond2187, label %for.end1303, label %for.body1263

for.end1303:                                      ; preds = %for.inc1301, %for.cond1260.preheader
  store i32 %4, i32* @highest_outgoing_arg_in_use, align 4, !tbaa !3
  store i8* %5, i8** @stack_usage_map, align 8, !tbaa !0
  br label %if.end1305

if.end1305:                                       ; preds = %if.else1251, %for.end1303, %if.then1248
  %sibcall_failure.7 = phi i32 [ %sibcall_failure.6, %for.end1303 ], [ %sibcall_failure.6, %if.else1251 ], [ 1, %if.then1248 ]
  %and1306 = and i32 %storemerge1797, 8
  %tobool1307 = icmp eq i32 %and1306, 0
  br i1 %tobool1307, label %for.cond1313.preheader, label %land.lhs.true1308

land.lhs.true1308:                                ; preds = %if.end1305
  %475 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_goto_handler_slots = getelementptr inbounds %struct.function* %475, i64 0, i32 20
  %476 = load %struct.rtx_def** %x_nonlocal_goto_handler_slots, align 8, !tbaa !0
  %cmp1309 = icmp eq %struct.rtx_def* %476, null
  br i1 %cmp1309, label %for.cond1313.preheader, label %if.then1311

if.then1311:                                      ; preds = %land.lhs.true1308
  %x_nonlocal_goto_stack_level = getelementptr inbounds %struct.function* %475, i64 0, i32 22
  call void @emit_stack_save(i32 2, %struct.rtx_def** %x_nonlocal_goto_stack_level, %struct.rtx_def* null) #7
  br label %for.cond1313.preheader

for.cond1313.preheader:                           ; preds = %land.lhs.true1308, %if.end1305, %if.then1311
  br i1 %cmp81.i, label %for.body1316, label %for.end1327

for.body1316:                                     ; preds = %for.cond1313.preheader, %for.inc1325
  %indvars.iv2188 = phi i64 [ %indvars.iv.next2189, %for.inc1325 ], [ 0, %for.cond1313.preheader ]
  %aligned_regs = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2188, i32 15
  %477 = load %struct.rtx_def*** %aligned_regs, align 8, !tbaa !0
  %tobool1319 = icmp eq %struct.rtx_def** %477, null
  br i1 %tobool1319, label %for.inc1325, label %if.then1320

if.then1320:                                      ; preds = %for.body1316
  %478 = bitcast %struct.rtx_def** %477 to i8*
  call void @free(i8* %478) #7
  br label %for.inc1325

for.inc1325:                                      ; preds = %for.body1316, %if.then1320
  %indvars.iv.next2189 = add i64 %indvars.iv2188, 1
  %lftr.wideiv2190 = trunc i64 %indvars.iv.next2189 to i32
  %exitcond2191 = icmp eq i32 %lftr.wideiv2190, %num_actuals.0.lcssa
  br i1 %exitcond2191, label %for.end1327, label %for.body1316

for.end1327:                                      ; preds = %for.inc1325, %for.cond1313.preheader
  br i1 %cmp498, label %if.then1330, label %if.end1331

if.then1330:                                      ; preds = %for.end1327
  call void @expand_end_target_temps() #7
  br label %if.end1331

if.end1331:                                       ; preds = %if.then1330, %for.end1327
  %call1332 = call %struct.rtx_def* @get_insns() #7
  call void @end_sequence() #7
  br i1 %cmp498, label %if.then1335, label %for.inc1359

if.then1335:                                      ; preds = %if.end1331
  %479 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr1336 = getelementptr inbounds %struct.function* %479, i64 0, i32 2
  %480 = load %struct.expr_status** %expr1336, align 8, !tbaa !0
  %x_pending_stack_adjust1337 = getelementptr inbounds %struct.expr_status* %480, i64 0, i32 0
  store i32 %save_pending_stack_adjust496.0, i32* %x_pending_stack_adjust1337, align 4, !tbaa !3
  %x_stack_pointer_delta1339 = getelementptr inbounds %struct.expr_status* %480, i64 0, i32 2
  store i32 %save_stack_pointer_delta497.0, i32* %x_stack_pointer_delta1339, align 4, !tbaa !3
  br i1 %cmp81.i, label %for.body1343, label %for.end1353

for.body1343:                                     ; preds = %if.then1335, %for.body1343
  %indvars.iv2192 = phi i64 [ %indvars.iv.next2193, %for.body1343 ], [ 0, %if.then1335 ]
  %value = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2192, i32 2
  store %struct.rtx_def* null, %struct.rtx_def** %value, align 8, !tbaa !0
  %aligned_regs1348 = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2192, i32 15
  store %struct.rtx_def** null, %struct.rtx_def*** %aligned_regs1348, align 8, !tbaa !0
  %stack = getelementptr inbounds %struct.arg_data* %62, i64 %indvars.iv2192, i32 12
  store %struct.rtx_def* null, %struct.rtx_def** %stack, align 8, !tbaa !0
  %indvars.iv.next2193 = add i64 %indvars.iv2192, 1
  %lftr.wideiv2194 = trunc i64 %indvars.iv.next2193 to i32
  %exitcond2195 = icmp eq i32 %lftr.wideiv2194, %num_actuals.0.lcssa
  br i1 %exitcond2195, label %for.end1353, label %for.body1343

for.end1353:                                      ; preds = %for.body1343, %if.then1335
  %481 = load %struct.simple_bitmap_def** @stored_args_map, align 8, !tbaa !0
  %482 = bitcast %struct.simple_bitmap_def* %481 to i8*
  call void @free(i8* %482) #7
  br label %for.inc1359

for.inc1359:                                      ; preds = %for.end1353, %if.end1331
  %tail_call_insns.1 = phi %struct.rtx_def* [ %call1332, %for.end1353 ], [ %tail_call_insns.02154, %if.end1331 ]
  %normal_call_insns.1 = phi %struct.rtx_def* [ %normal_call_insns.02155, %for.end1353 ], [ %call1332, %if.end1331 ]
  %tobool1356 = icmp eq i32 %sibcall_failure.7, 0
  %tail_call_insns.1. = select i1 %tobool1356, %struct.rtx_def* %tail_call_insns.1, %struct.rtx_def* null
  %inc1360 = add nsw i32 %pass.02153, 1
  %cmp493 = icmp slt i32 %inc1360, 2
  br i1 %cmp493, label %for.body495, label %for.cond1362.preheader

for.cond1384.preheader:                           ; preds = %for.inc1379, %for.cond1362.preheader
  %tobool13852106 = icmp eq %struct.rtx_def* %tail_call_insns.1., null
  br i1 %tobool13852106, label %for.cond1406.preheader, label %for.body1386

for.body1364:                                     ; preds = %for.cond1362.preheader, %for.inc1379
  %insn.02109 = phi %struct.rtx_def* [ %486, %for.inc1379 ], [ %normal_call_insns.1, %for.cond1362.preheader ]
  %483 = bitcast %struct.rtx_def* %insn.02109 to i32*
  %bf.load1365 = load i32* %483, align 8
  %bf.clear1366 = and i32 %bf.load1365, 65535
  %cmp1367 = icmp eq i32 %bf.clear1366, 34
  br i1 %cmp1367, label %land.lhs.true1369, label %for.inc1379

land.lhs.true1369:                                ; preds = %for.body1364
  %arrayidx1371 = getelementptr inbounds %struct.rtx_def* %insn.02109, i64 0, i32 1, i64 3
  %rtx1372 = bitcast %union.rtunion_def* %arrayidx1371 to %struct.rtx_def**
  %484 = load %struct.rtx_def** %rtx1372, align 8, !tbaa !0
  %485 = bitcast %struct.rtx_def* %484 to i32*
  %bf.load1373 = load i32* %485, align 8
  %bf.clear1374 = and i32 %bf.load1373, 65535
  %cmp1375 = icmp eq i32 %bf.clear1374, 141
  br i1 %cmp1375, label %if.then1377, label %for.inc1379

if.then1377:                                      ; preds = %land.lhs.true1369
  call void @replace_call_placeholder(%struct.rtx_def* %insn.02109, i32 1) #7
  br label %for.inc1379

for.inc1379:                                      ; preds = %for.body1364, %land.lhs.true1369, %if.then1377
  %arrayidx1381 = getelementptr inbounds %struct.rtx_def* %insn.02109, i64 0, i32 1, i64 2
  %rtx1382 = bitcast %union.rtunion_def* %arrayidx1381 to %struct.rtx_def**
  %486 = load %struct.rtx_def** %rtx1382, align 8, !tbaa !0
  %tobool1363 = icmp eq %struct.rtx_def* %486, null
  br i1 %tobool1363, label %for.cond1384.preheader, label %for.body1364

for.cond1406.preheader:                           ; preds = %for.inc1401, %for.cond1384.preheader
  %tobool14072104 = icmp eq %struct.rtx_def* %tail_recursion_insns.1, null
  br i1 %tobool14072104, label %for.end1427, label %for.body1408

for.body1386:                                     ; preds = %for.cond1384.preheader, %for.inc1401
  %insn.12107 = phi %struct.rtx_def* [ %490, %for.inc1401 ], [ %tail_call_insns.1, %for.cond1384.preheader ]
  %487 = bitcast %struct.rtx_def* %insn.12107 to i32*
  %bf.load1387 = load i32* %487, align 8
  %bf.clear1388 = and i32 %bf.load1387, 65535
  %cmp1389 = icmp eq i32 %bf.clear1388, 34
  br i1 %cmp1389, label %land.lhs.true1391, label %for.inc1401

land.lhs.true1391:                                ; preds = %for.body1386
  %arrayidx1393 = getelementptr inbounds %struct.rtx_def* %insn.12107, i64 0, i32 1, i64 3
  %rtx1394 = bitcast %union.rtunion_def* %arrayidx1393 to %struct.rtx_def**
  %488 = load %struct.rtx_def** %rtx1394, align 8, !tbaa !0
  %489 = bitcast %struct.rtx_def* %488 to i32*
  %bf.load1395 = load i32* %489, align 8
  %bf.clear1396 = and i32 %bf.load1395, 65535
  %cmp1397 = icmp eq i32 %bf.clear1396, 141
  br i1 %cmp1397, label %if.then1399, label %for.inc1401

if.then1399:                                      ; preds = %land.lhs.true1391
  call void @replace_call_placeholder(%struct.rtx_def* %insn.12107, i32 1) #7
  br label %for.inc1401

for.inc1401:                                      ; preds = %for.body1386, %land.lhs.true1391, %if.then1399
  %arrayidx1403 = getelementptr inbounds %struct.rtx_def* %insn.12107, i64 0, i32 1, i64 2
  %rtx1404 = bitcast %union.rtunion_def* %arrayidx1403 to %struct.rtx_def**
  %490 = load %struct.rtx_def** %rtx1404, align 8, !tbaa !0
  %tobool1385 = icmp eq %struct.rtx_def* %490, null
  br i1 %tobool1385, label %for.cond1406.preheader, label %for.body1386

for.body1408:                                     ; preds = %for.cond1406.preheader, %for.inc1423
  %insn.22105 = phi %struct.rtx_def* [ %494, %for.inc1423 ], [ %tail_recursion_insns.1, %for.cond1406.preheader ]
  %491 = bitcast %struct.rtx_def* %insn.22105 to i32*
  %bf.load1409 = load i32* %491, align 8
  %bf.clear1410 = and i32 %bf.load1409, 65535
  %cmp1411 = icmp eq i32 %bf.clear1410, 34
  br i1 %cmp1411, label %land.lhs.true1413, label %for.inc1423

land.lhs.true1413:                                ; preds = %for.body1408
  %arrayidx1415 = getelementptr inbounds %struct.rtx_def* %insn.22105, i64 0, i32 1, i64 3
  %rtx1416 = bitcast %union.rtunion_def* %arrayidx1415 to %struct.rtx_def**
  %492 = load %struct.rtx_def** %rtx1416, align 8, !tbaa !0
  %493 = bitcast %struct.rtx_def* %492 to i32*
  %bf.load1417 = load i32* %493, align 8
  %bf.clear1418 = and i32 %bf.load1417, 65535
  %cmp1419 = icmp eq i32 %bf.clear1418, 141
  br i1 %cmp1419, label %if.then1421, label %for.inc1423

if.then1421:                                      ; preds = %land.lhs.true1413
  call void @replace_call_placeholder(%struct.rtx_def* %insn.22105, i32 1) #7
  br label %for.inc1423

for.inc1423:                                      ; preds = %for.body1408, %land.lhs.true1413, %if.then1421
  %arrayidx1425 = getelementptr inbounds %struct.rtx_def* %insn.22105, i64 0, i32 1, i64 2
  %rtx1426 = bitcast %union.rtunion_def* %arrayidx1425 to %struct.rtx_def**
  %494 = load %struct.rtx_def** %rtx1426, align 8, !tbaa !0
  %tobool1407 = icmp eq %struct.rtx_def* %494, null
  br i1 %tobool1407, label %for.end1427, label %for.body1408

for.end1427:                                      ; preds = %for.inc1423, %for.cond1406.preheader
  %tobool1428 = icmp ne %struct.rtx_def* %tail_recursion_insns.1, null
  %tobool1428.not = xor i1 %tobool1428, true
  %or.cond1823 = and i1 %tobool13852106, %tobool1428.not
  br i1 %or.cond1823, label %if.else1441, label %if.then1431

if.then1431:                                      ; preds = %for.end1427
  br i1 %tobool1428, label %if.then1433, label %if.end1437

if.then1433:                                      ; preds = %if.then1431
  %495 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_tail_recursion_label = getelementptr inbounds %struct.function* %495, i64 0, i32 28
  %496 = load %struct.rtx_def** %x_tail_recursion_label, align 8, !tbaa !0
  %497 = bitcast %struct.rtx_def* %496 to i32*
  %bf.load1434 = load i32* %497, align 8
  %bf.set1436 = or i32 %bf.load1434, 268435456
  store i32 %bf.set1436, i32* %497, align 8
  br label %if.end1437

if.end1437:                                       ; preds = %if.then1431, %if.then1433
  %498 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_tail_recursion_label1438 = getelementptr inbounds %struct.function* %498, i64 0, i32 28
  %499 = load %struct.rtx_def** %x_tail_recursion_label1438, align 8, !tbaa !0
  %call1439 = call %struct.rtx_def* @gen_rtx_fmt_uuuu(i32 141, i32 0, %struct.rtx_def* %normal_call_insns.1, %struct.rtx_def* %tail_call_insns.1., %struct.rtx_def* %tail_recursion_insns.1, %struct.rtx_def* %499) #7
  %call1440 = call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call1439) #7
  br label %if.end1443

if.else1441:                                      ; preds = %for.end1427
  %call1442 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %normal_call_insns.1) #7
  br label %if.end1443

if.end1443:                                       ; preds = %if.else1441, %if.end1437
  %500 = load i32* @expand_call.currently_expanding_call, align 4, !tbaa !3
  %dec = add nsw i32 %500, -1
  store i32 %dec, i32* @expand_call.currently_expanding_call, align 4, !tbaa !3
  %and1444 = and i32 %storemerge1797, 1024
  %tobool1445 = icmp eq i32 %and1444, 0
  br i1 %tobool1445, label %return, label %if.then1446

if.then1446:                                      ; preds = %if.end1443
  call void @clear_pending_stack_adjust() #7
  %501 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %call1447 = call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 49, i32 0, %struct.rtx_def* %501) #7
  %call1448 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1447) #7
  %502 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !0
  %503 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %call1449 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %502, %struct.rtx_def* %503) #7
  call void @save_stack_pointer() #7
  br label %return

return:                                           ; preds = %if.then1446, %if.end1443, %try_to_integrate.exit
  %retval.0 = phi %struct.rtx_def* [ %retval.0.i, %try_to_integrate.exit ], [ %target.addr.5, %if.end1443 ], [ %target.addr.5, %if.then1446 ]
  ret %struct.rtx_def* %retval.0
}
