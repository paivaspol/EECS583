define void @start_init(%union.tree_node* %decl, %union.tree_node* %asmspec_tree, i32 %top_level) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 72) #8
  %0 = bitcast i8* %call to %struct.initializer_stack*
  %tobool = icmp eq %union.tree_node* %asmspec_tree, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %pointer = getelementptr inbounds %union.tree_node* %asmspec_tree, i64 0, i32 0, i32 4
  %1 = load %union.tree_node** %pointer, align 8
  %2 = bitcast %union.tree_node* %1 to i8*
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %asmspec.0 = phi i8* [ %2, %if.then ], [ null, %entry ]
  %3 = load %union.tree_node** @constructor_decl, align 8, !tbaa !0
  %decl1 = getelementptr inbounds i8* %call, i64 8
  %4 = bitcast i8* %decl1 to %union.tree_node**
  store %union.tree_node* %3, %union.tree_node** %4, align 8, !tbaa !0
  %5 = load i8** @constructor_asmspec, align 8, !tbaa !0
  %asmspec2 = getelementptr inbounds i8* %call, i64 16
  %6 = bitcast i8* %asmspec2 to i8**
  store i8* %5, i8** %6, align 8, !tbaa !0
  %7 = load i32* @require_constant_value, align 4, !tbaa !3
  %conv = trunc i32 %7 to i8
  %8 = getelementptr inbounds i8* %call, i64 69
  store i8 %conv, i8* %8, align 1, !tbaa !1
  %9 = load i32* @require_constant_elements, align 4, !tbaa !3
  %conv3 = trunc i32 %9 to i8
  %10 = getelementptr inbounds i8* %call, i64 70
  store i8 %conv3, i8* %10, align 1, !tbaa !1
  %11 = load %struct.constructor_stack** @constructor_stack, align 8, !tbaa !0
  %constructor_stack = getelementptr inbounds i8* %call, i64 24
  %12 = bitcast i8* %constructor_stack to %struct.constructor_stack**
  store %struct.constructor_stack* %11, %struct.constructor_stack** %12, align 8, !tbaa !0
  %13 = load %struct.constructor_range_stack** @constructor_range_stack, align 8, !tbaa !0
  %constructor_range_stack = getelementptr inbounds i8* %call, i64 32
  %14 = bitcast i8* %constructor_range_stack to %struct.constructor_range_stack**
  store %struct.constructor_range_stack* %13, %struct.constructor_range_stack** %14, align 8, !tbaa !0
  %15 = load %union.tree_node** @constructor_elements, align 8, !tbaa !0
  %elements = getelementptr inbounds i8* %call, i64 40
  %16 = bitcast i8* %elements to %union.tree_node**
  store %union.tree_node* %15, %union.tree_node** %16, align 8, !tbaa !0
  %17 = load %struct.spelling** @spelling, align 8, !tbaa !0
  %spelling = getelementptr inbounds i8* %call, i64 48
  %18 = bitcast i8* %spelling to %struct.spelling**
  store %struct.spelling* %17, %struct.spelling** %18, align 8, !tbaa !0
  %19 = load %struct.spelling** @spelling_base, align 8, !tbaa !0
  %spelling_base = getelementptr inbounds i8* %call, i64 56
  %20 = bitcast i8* %spelling_base to %struct.spelling**
  store %struct.spelling* %19, %struct.spelling** %20, align 8, !tbaa !0
  %21 = load i32* @spelling_size, align 4, !tbaa !3
  %spelling_size = getelementptr inbounds i8* %call, i64 64
  %22 = bitcast i8* %spelling_size to i32*
  store i32 %21, i32* %22, align 4, !tbaa !3
  %23 = load i32* @constructor_subconstants_deferred, align 4, !tbaa !3
  %conv4 = trunc i32 %23 to i8
  %24 = getelementptr inbounds i8* %call, i64 71
  store i8 %conv4, i8* %24, align 1, !tbaa !1
  %25 = load i32* @constructor_top_level, align 4, !tbaa !3
  %conv5 = trunc i32 %25 to i8
  %26 = getelementptr inbounds i8* %call, i64 68
  store i8 %conv5, i8* %26, align 1, !tbaa !1
  %27 = load %struct.initializer_stack** @initializer_stack, align 8, !tbaa !0
  %next = bitcast i8* %call to %struct.initializer_stack**
  store %struct.initializer_stack* %27, %struct.initializer_stack** %next, align 8, !tbaa !0
  store %struct.initializer_stack* %0, %struct.initializer_stack** @initializer_stack, align 8, !tbaa !0
  store %union.tree_node* %decl, %union.tree_node** @constructor_decl, align 8, !tbaa !0
  store i8* %asmspec.0, i8** @constructor_asmspec, align 8, !tbaa !0
  store i32 0, i32* @constructor_subconstants_deferred, align 4, !tbaa !3
  store i32 0, i32* @constructor_designated, align 4, !tbaa !3
  store i32 %top_level, i32* @constructor_top_level, align 4, !tbaa !3
  %cmp = icmp eq %union.tree_node* %decl, null
  br i1 %cmp, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end
  %static_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast [4 x i8]* %static_flag to i32*
  %bf.load = load i32* %28, align 8
  %bf.lshr = lshr i32 %bf.load, 18
  %bf.clear = and i32 %bf.lshr, 1
  store i32 %bf.clear, i32* @require_constant_value, align 4, !tbaa !3
  %bf.load11 = load i32* %28, align 8
  %bf.clear13 = and i32 %bf.load11, 262144
  %tobool14 = icmp eq i32 %bf.clear13, 0
  br i1 %tobool14, label %lor.lhs.false, label %land.rhs

lor.lhs.false:                                    ; preds = %if.then8
  %29 = load i32* @pedantic, align 4, !tbaa !3
  %tobool15 = icmp eq i32 %29, 0
  %30 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool16 = icmp ne i32 %30, 0
  %or.cond = or i1 %tobool15, %tobool16
  br i1 %or.cond, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.then8, %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %31 = load %union.tree_node** %type, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %31, i64 0, i32 0, i32 0, i32 2
  %32 = bitcast [4 x i8]* %code to i32*
  %bf.load19 = load i32* %32, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %switch.tableidx = add i32 %bf.clear20, -18
  %33 = icmp ult i32 %switch.tableidx, 5
  br i1 %33, label %switch.lookup, label %land.end

switch.lookup:                                    ; preds = %land.rhs
  %switch.cast = trunc i32 %switch.tableidx to i5
  %switch.downshift = lshr i5 -3, %switch.cast
  %switch.masked = zext i5 %switch.downshift to i32
  %phitmp = and i32 %switch.masked, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %switch.lookup, %lor.lhs.false
  %34 = phi i32 [ 0, %lor.lhs.false ], [ %phitmp, %switch.lookup ], [ 0, %land.rhs ]
  store i32 %34, i32* @require_constant_elements, align 4, !tbaa !3
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %35 = load %union.tree_node** %name, align 8, !tbaa !0
  %id = getelementptr inbounds %union.tree_node* %35, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds i8** %id, i64 1
  %37 = load i8** %36, align 8, !tbaa !0
  br label %if.end50

if.else:                                          ; preds = %if.end
  store i32 0, i32* @require_constant_value, align 4, !tbaa !3
  store i32 0, i32* @require_constant_elements, align 4, !tbaa !3
  br label %if.end50

if.end50:                                         ; preds = %if.else, %land.end
  %locus.0 = phi i8* [ %37, %land.end ], [ getelementptr inbounds ([12 x i8]* @.str112, i64 0, i64 0), %if.else ]
  store %struct.constructor_stack* null, %struct.constructor_stack** @constructor_stack, align 8, !tbaa !0
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8, !tbaa !0
  store i1 false, i1* @missing_braces_mentioned, align 1
  store %struct.spelling* null, %struct.spelling** @spelling_base, align 8, !tbaa !0
  store i32 0, i32* @spelling_size, align 4, !tbaa !3
  store %struct.spelling* null, %struct.spelling** @spelling, align 8, !tbaa !0
  %tobool51 = icmp eq i8* %locus.0, null
  br i1 %tobool51, label %if.end53, label %push_string.exit

push_string.exit:                                 ; preds = %if.end50
  store i32 10, i32* @spelling_size, align 4, !tbaa !3
  %call.i = tail call noalias i8* @xmalloc(i64 160) #8
  %phitmp77 = bitcast i8* %call.i to %struct.spelling*
  store %struct.spelling* %phitmp77, %struct.spelling** @spelling_base, align 8, !tbaa !0
  store %struct.spelling* %phitmp77, %struct.spelling** @spelling, align 8, !tbaa !0
  %kind.i = bitcast i8* %call.i to i32*
  store i32 1, i32* %kind.i, align 4, !tbaa !3
  %s.i = getelementptr inbounds i8* %call.i, i64 8
  %38 = bitcast i8* %s.i to i8**
  store i8* %locus.0, i8** %38, align 8, !tbaa !0
  %39 = load %struct.spelling** @spelling, align 8, !tbaa !0
  %incdec.ptr.i = getelementptr inbounds %struct.spelling* %39, i64 1
  store %struct.spelling* %incdec.ptr.i, %struct.spelling** @spelling, align 8, !tbaa !0
  br label %if.end53

if.end53:                                         ; preds = %if.end50, %push_string.exit
  ret void
}
