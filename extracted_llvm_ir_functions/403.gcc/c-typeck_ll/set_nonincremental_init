define internal fastcc void @set_nonincremental_init() #0 {
entry:
  %0 = load %union.tree_node** @constructor_type, align 8, !dbg !4394, !tbaa !1977
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !4394
  %1 = bitcast [4 x i8]* %code to i32*, !dbg !4394
  %bf.load = load i32* %1, align 8, !dbg !4394
  %bf.clear = and i32 %bf.load, 255, !dbg !4394
  switch i32 %bf.clear, label %return [
    i32 20, label %for.cond.preheader
    i32 18, label %for.cond.preheader
  ], !dbg !4394

for.cond.preheader:                               ; preds = %entry, %entry
  %chain.047 = load %union.tree_node** @constructor_elements, align 8, !dbg !4395
  %tobool48 = icmp eq %union.tree_node* %chain.047, null, !dbg !4395
  br i1 %tobool48, label %for.end, label %for.body, !dbg !4395

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %chain.049 = phi %union.tree_node* [ %chain.0, %for.body ], [ %chain.047, %for.cond.preheader ]
  %purpose = getelementptr inbounds %union.tree_node* %chain.049, i64 0, i32 0, i32 1, !dbg !4397
  %2 = load i8** %purpose, align 8, !dbg !4397
  %3 = bitcast i8* %2 to %union.tree_node*, !dbg !4397
  %value = getelementptr inbounds %union.tree_node* %chain.049, i64 0, i32 0, i32 2, !dbg !4397
  %4 = bitcast i32* %value to %union.tree_node**, !dbg !4397
  %5 = load %union.tree_node** %4, align 8, !dbg !4397, !tbaa !1977
  tail call fastcc void @add_pending_init(%union.tree_node* %3, %union.tree_node* %5) #8, !dbg !4397
  %chain8 = getelementptr inbounds %union.tree_node* %chain.049, i64 0, i32 0, i32 0, i32 0, !dbg !4395
  %chain.0 = load %union.tree_node** %chain8, align 8, !dbg !4395
  %tobool = icmp eq %union.tree_node* %chain.0, null, !dbg !4395
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %for.body, !dbg !4395

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.pre = load %union.tree_node** @constructor_type, align 8, !dbg !4398, !tbaa !1977
  br label %for.end, !dbg !4395

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader
  %6 = phi %union.tree_node* [ %.pre, %for.cond.for.end_crit_edge ], [ %0, %for.cond.preheader ]
  store %union.tree_node* null, %union.tree_node** @constructor_elements, align 8, !dbg !4399, !tbaa !1977
  %code10 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2, !dbg !4398
  %7 = bitcast [4 x i8]* %code10 to i32*, !dbg !4398
  %bf.load11 = load i32* %7, align 8, !dbg !4398
  %bf.clear12 = and i32 %bf.load11, 255, !dbg !4398
  switch i32 %bf.clear12, label %if.end40 [
    i32 20, label %if.then14
    i32 18, label %if.then29
  ], !dbg !4398

if.then14:                                        ; preds = %for.end
  %values = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 1, !dbg !4400
  %8 = load i8** %values, align 8, !dbg !4400
  %9 = bitcast i8* %8 to %union.tree_node*, !dbg !4400
  store %union.tree_node* %9, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !4402, !tbaa !1977
  %cmp1545 = icmp eq i8* %8, null, !dbg !4403
  br i1 %cmp1545, label %if.end40, label %land.lhs.true16, !dbg !4403

land.lhs.true16:                                  ; preds = %if.then14, %while.body
  %storemerge46 = phi %union.tree_node* [ %12, %while.body ], [ %9, %if.then14 ]
  %lang_flag_4 = getelementptr inbounds %union.tree_node* %storemerge46, i64 0, i32 0, i32 5, !dbg !4403
  %10 = bitcast [8 x i8]* %lang_flag_4 to i64*, !dbg !4403
  %bf.load17 = load i64* %10, align 8, !dbg !4403
  %bf.cast = and i64 %bf.load17, 2199023255552, !dbg !4403
  %cmp19 = icmp eq i64 %bf.cast, 0, !dbg !4403
  br i1 %cmp19, label %if.end40, label %land.rhs, !dbg !4403

land.rhs:                                         ; preds = %land.lhs.true16
  %name = getelementptr inbounds %union.tree_node* %storemerge46, i64 0, i32 0, i32 8, !dbg !4403
  %11 = load %union.tree_node** %name, align 8, !dbg !4403, !tbaa !1977
  %cmp21 = icmp eq %union.tree_node* %11, null, !dbg !4403
  br i1 %cmp21, label %while.body, label %if.end40

while.body:                                       ; preds = %land.rhs
  %chain23 = getelementptr inbounds %union.tree_node* %storemerge46, i64 0, i32 0, i32 0, i32 0, !dbg !4402
  %12 = load %union.tree_node** %chain23, align 8, !dbg !4402, !tbaa !1977
  store %union.tree_node* %12, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !4402, !tbaa !1977
  %cmp15 = icmp eq %union.tree_node* %12, null, !dbg !4403
  br i1 %cmp15, label %if.end40, label %land.lhs.true16, !dbg !4403

if.then29:                                        ; preds = %for.end
  %values31 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 1, !dbg !4404
  %13 = load i8** %values31, align 8, !dbg !4404
  %tobool32 = icmp eq i8* %13, null, !dbg !4404
  br i1 %tobool32, label %if.else37, label %if.then33, !dbg !4404

if.then33:                                        ; preds = %if.then29
  %14 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !dbg !4406, !tbaa !1977
  %minval = getelementptr inbounds i8* %13, i64 104, !dbg !4406
  %15 = bitcast i8* %minval to %union.tree_node**, !dbg !4406
  %16 = load %union.tree_node** %15, align 8, !dbg !4406, !tbaa !1977
  %call = tail call %union.tree_node* @convert(%union.tree_node* %14, %union.tree_node* %16) #9, !dbg !4406
  store %union.tree_node* %call, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !4406, !tbaa !1977
  br label %if.end40, !dbg !4406

if.else37:                                        ; preds = %if.then29
  %17 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !4407, !tbaa !1977
  store %union.tree_node* %17, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !4407, !tbaa !1977
  br label %if.end40

if.end40:                                         ; preds = %if.then14, %land.lhs.true16, %land.rhs, %while.body, %for.end, %if.else37, %if.then33
  store i32 0, i32* @constructor_incremental, align 4, !dbg !4408, !tbaa !2105
  br label %return, !dbg !4408

return:                                           ; preds = %entry, %if.end40
  ret void, !dbg !4408
}
