define %union.tree_node* @c_sizeof_nowarn(%union.tree_node* nocapture %type) #0 {
entry:
  %code1 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code1 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else [
    i32 23, label %if.then
    i32 5, label %if.then
    i32 0, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry, %entry
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !0
  br label %if.end15

if.else:                                          ; preds = %entry
  %size6 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 2
  %2 = bitcast i32* %size6 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !0
  %cmp7 = icmp eq %union.tree_node* %3, null
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %if.else
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !0
  br label %if.end15

if.else9:                                         ; preds = %if.else
  %5 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  %6 = load %union.tree_node** %5, align 8, !tbaa !0
  %7 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !0
  %type11 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type11, i64 0, i32 6
  %8 = bitcast [4 x i8]* %precision to i32*
  %bf.load12 = load i32* %8, align 4
  %bf.clear13 = lshr i32 %bf.load12, 3
  %div = and i32 %bf.clear13, 63
  %conv23 = zext i32 %div to i64
  %call = tail call %union.tree_node* @size_int_wide(i64 %conv23, i32 0) #8
  %call14 = tail call %union.tree_node* @size_binop(i32 63, %union.tree_node* %6, %union.tree_node* %call) #8
  br label %if.end15

if.end15:                                         ; preds = %if.then8, %if.else9, %if.then
  %size.0 = phi %union.tree_node* [ %1, %if.then ], [ %call14, %if.else9 ], [ %4, %if.then8 ]
  %9 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 4), align 8, !tbaa !0
  %call16 = tail call %union.tree_node* @build1(i32 115, %union.tree_node* %9, %union.tree_node* %size.0) #8
  %call17 = tail call %union.tree_node* @fold(%union.tree_node* %call16) #8
  ret %union.tree_node* %call17
}
