define internal fastcc %union.tree_node* @qualify_type(%union.tree_node* %type, %union.tree_node* nocapture %like) #0 {
entry:
  %readonly_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 1
  %1 = lshr i32 %bf.load, 10
  %mul5 = and i32 %1, 2
  %type6 = bitcast %union.tree_node* %type to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type6, i64 0, i32 6
  %2 = bitcast [4 x i8]* %restrict_flag to i32*
  %bf.load7 = load i32* %2, align 4
  %3 = lshr i32 %bf.load7, 19
  %mul10 = and i32 %3, 4
  %bf.clear14 = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear14, 20
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %type16 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type16, align 8, !tbaa !0
  %tobool = icmp ne %union.tree_node* %4, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %5 to i32
  %mul17 = shl nuw nsw i32 %land.ext, 3
  %readonly_flag20 = getelementptr inbounds %union.tree_node* %like, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %readonly_flag20 to i32*
  %bf.load21 = load i32* %6, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 12
  %bf.clear23 = and i32 %bf.lshr22, 1
  %7 = lshr i32 %bf.load21, 10
  %mul30 = and i32 %7, 2
  %type32 = bitcast %union.tree_node* %like to %struct.tree_type*
  %restrict_flag33 = getelementptr inbounds %struct.tree_type* %type32, i64 0, i32 6
  %8 = bitcast [4 x i8]* %restrict_flag33 to i32*
  %bf.load34 = load i32* %8, align 4
  %9 = lshr i32 %bf.load34, 19
  %mul37 = and i32 %9, 4
  %bf.clear42 = and i32 %bf.load21, 255
  %cmp43 = icmp eq i32 %bf.clear42, 20
  br i1 %cmp43, label %land.rhs44, label %land.end48

land.rhs44:                                       ; preds = %land.end
  %type46 = getelementptr inbounds %union.tree_node* %like, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type46, align 8, !tbaa !0
  %tobool47 = icmp ne %union.tree_node* %10, null
  br label %land.end48

land.end48:                                       ; preds = %land.rhs44, %land.end
  %11 = phi i1 [ false, %land.end ], [ %tobool47, %land.rhs44 ]
  %land.ext49 = zext i1 %11 to i32
  %mul50 = shl nuw nsw i32 %land.ext49, 3
  %or31 = or i32 %bf.clear, %mul5
  %or38 = or i32 %or31, %mul10
  %or51 = or i32 %or38, %mul17
  %or = or i32 %or51, %mul30
  %or11 = or i32 %or, %bf.clear23
  %or18 = or i32 %or11, %mul37
  %or52 = or i32 %or18, %mul50
  %call = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %type, i32 %or52) #8
  ret %union.tree_node* %call
}
