define i32 @comptypes(%union.tree_node* %type1, %union.tree_node* %type2) #0 {
entry:
  %cmp = icmp ne %union.tree_node* %type1, %type2
  %tobool = icmp ne %union.tree_node* %type1, null
  %or.cond = and i1 %cmp, %tobool
  %tobool2 = icmp ne %union.tree_node* %type2, null
  %or.cond291 = and i1 %or.cond, %tobool2
  br i1 %or.cond291, label %lor.lhs.false3, label %return

lor.lhs.false3:                                   ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %type1, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp4 = icmp eq i32 %bf.clear, 0
  br i1 %cmp4, label %return, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %code7 = getelementptr inbounds %union.tree_node* %type2, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code7 to i32*
  %bf.load8 = load i32* %1, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 0
  br i1 %cmp10, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false5
  %cmp15 = icmp eq i32 %bf.clear, 6
  br i1 %cmp15, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %if.end
  %type = bitcast %union.tree_node* %type1 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %2 = bitcast [4 x i8]* %no_force_blk_flag to i32*
  %bf.load16 = load i32* %2, align 4
  %bf.clear17 = and i32 %bf.load16, 131072
  %tobool18 = icmp eq i32 %bf.clear17, 0
  br i1 %tobool18, label %if.end25, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true
  %values = getelementptr inbounds %union.tree_node* %type1, i64 0, i32 0, i32 1
  %3 = load i8** %values, align 8
  %cmp21 = icmp eq i8* %3, null
  br i1 %cmp21, label %if.end25, label %if.then22

if.then22:                                        ; preds = %land.lhs.true19
  %4 = bitcast i8* %3 to %union.tree_node*
  br label %if.end25

if.end25:                                         ; preds = %land.lhs.true19, %land.lhs.true, %if.then22, %if.end
  %t1.0 = phi %union.tree_node* [ %4, %if.then22 ], [ %type1, %land.lhs.true19 ], [ %type1, %land.lhs.true ], [ %type1, %if.end ]
  %cmp30 = icmp eq i32 %bf.clear9, 6
  br i1 %cmp30, label %land.lhs.true31, label %if.end45

land.lhs.true31:                                  ; preds = %if.end25
  %type32 = bitcast %union.tree_node* %type2 to %struct.tree_type*
  %no_force_blk_flag33 = getelementptr inbounds %struct.tree_type* %type32, i64 0, i32 6
  %5 = bitcast [4 x i8]* %no_force_blk_flag33 to i32*
  %bf.load34 = load i32* %5, align 4
  %bf.clear36 = and i32 %bf.load34, 131072
  %tobool37 = icmp eq i32 %bf.clear36, 0
  br i1 %tobool37, label %if.end45, label %land.lhs.true38

land.lhs.true38:                                  ; preds = %land.lhs.true31
  %values40 = getelementptr inbounds %union.tree_node* %type2, i64 0, i32 0, i32 1
  %6 = load i8** %values40, align 8
  %cmp41 = icmp eq i8* %6, null
  br i1 %cmp41, label %if.end45, label %if.then42

if.then42:                                        ; preds = %land.lhs.true38
  %7 = bitcast i8* %6 to %union.tree_node*
  br label %if.end45

if.end45:                                         ; preds = %land.lhs.true38, %land.lhs.true31, %if.end25, %if.then42
  %t2.0 = phi %union.tree_node* [ %7, %if.then42 ], [ %type2, %if.end25 ], [ %type2, %land.lhs.true31 ], [ %type2, %land.lhs.true38 ]
  %code47 = getelementptr inbounds %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %code47 to i32*
  %bf.load48 = load i32* %8, align 8
  %bf.clear49 = and i32 %bf.load48, 255
  %cmp50 = icmp eq i32 %bf.clear49, 10
  br i1 %cmp50, label %if.then51, label %if.end59

if.then51:                                        ; preds = %if.end45
  %type52 = bitcast %union.tree_node* %t1.0 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type52, i64 0, i32 6
  %9 = bitcast [4 x i8]* %precision to i32*
  %bf.load53 = load i32* %9, align 4
  %bf.clear54 = and i32 %bf.load53, 511
  %bf.lshr57 = lshr i32 %bf.load48, 13
  %bf.clear58 = and i32 %bf.lshr57, 1
  %call = tail call %union.tree_node* @type_for_size(i32 %bf.clear54, i32 %bf.clear58) #8
  br label %if.end59

if.end59:                                         ; preds = %if.end45, %if.then51
  %t1.1 = phi %union.tree_node* [ %call, %if.then51 ], [ %t1.0, %if.end45 ]
  %code61 = getelementptr inbounds %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast [4 x i8]* %code61 to i32*
  %bf.load62 = load i32* %10, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  %cmp64 = icmp eq i32 %bf.clear63, 10
  br i1 %cmp64, label %if.then65, label %if.end76

if.then65:                                        ; preds = %if.end59
  %type66 = bitcast %union.tree_node* %t2.0 to %struct.tree_type*
  %precision67 = getelementptr inbounds %struct.tree_type* %type66, i64 0, i32 6
  %11 = bitcast [4 x i8]* %precision67 to i32*
  %bf.load68 = load i32* %11, align 4
  %bf.clear69 = and i32 %bf.load68, 511
  %bf.lshr73 = lshr i32 %bf.load62, 13
  %bf.clear74 = and i32 %bf.lshr73, 1
  %call75 = tail call %union.tree_node* @type_for_size(i32 %bf.clear69, i32 %bf.clear74) #8
  br label %if.end76

if.end76:                                         ; preds = %if.then65, %if.end59
  %t2.1 = phi %union.tree_node* [ %call75, %if.then65 ], [ %t2.0, %if.end59 ]
  %cmp77 = icmp eq %union.tree_node* %t1.1, %t2.1
  br i1 %cmp77, label %return, label %if.end79

if.end79:                                         ; preds = %if.end76
  %code81 = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast [4 x i8]* %code81 to i32*
  %bf.load82 = load i32* %12, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  %code85 = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast [4 x i8]* %code85 to i32*
  %bf.load86 = load i32* %13, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp eq i32 %bf.clear83, %bf.clear87
  br i1 %cmp88, label %if.end90, label %return

if.end90:                                         ; preds = %if.end79
  %bf.lshr93 = lshr i32 %bf.load82, 12
  %bf.clear94 = and i32 %bf.lshr93, 1
  %14 = lshr i32 %bf.load82, 10
  %mul99 = and i32 %14, 2
  %or = or i32 %bf.clear94, %mul99
  %type100 = bitcast %union.tree_node* %t1.1 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type100, i64 0, i32 6
  %15 = bitcast [4 x i8]* %restrict_flag to i32*
  %bf.load101 = load i32* %15, align 4
  %16 = lshr i32 %bf.load101, 19
  %mul104 = and i32 %16, 4
  %or105 = or i32 %or, %mul104
  %cmp110 = icmp eq i32 %bf.clear83, 20
  br i1 %cmp110, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end90
  %type112 = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type112, align 8, !tbaa !0
  %tobool113 = icmp ne %union.tree_node* %17, null
  br label %land.end

land.end:                                         ; preds = %if.end90, %land.rhs
  %18 = phi i1 [ %tobool113, %land.rhs ], [ false, %if.end90 ]
  %land.ext = zext i1 %18 to i32
  %mul114 = shl nuw nsw i32 %land.ext, 3
  %or115 = or i32 %or105, %mul114
  %bf.lshr119 = lshr i32 %bf.load86, 12
  %bf.clear120 = and i32 %bf.lshr119, 1
  %19 = lshr i32 %bf.load86, 10
  %mul127 = and i32 %19, 2
  %or128 = or i32 %bf.clear120, %mul127
  %type129 = bitcast %union.tree_node* %t2.1 to %struct.tree_type*
  %restrict_flag130 = getelementptr inbounds %struct.tree_type* %type129, i64 0, i32 6
  %20 = bitcast [4 x i8]* %restrict_flag130 to i32*
  %bf.load131 = load i32* %20, align 4
  %21 = lshr i32 %bf.load131, 19
  %mul134 = and i32 %21, 4
  %or135 = or i32 %or128, %mul134
  br i1 %cmp110, label %land.rhs141, label %land.end145

land.rhs141:                                      ; preds = %land.end
  %type143 = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type143, align 8, !tbaa !0
  %tobool144 = icmp ne %union.tree_node* %22, null
  br label %land.end145

land.end145:                                      ; preds = %land.rhs141, %land.end
  %23 = phi i1 [ false, %land.end ], [ %tobool144, %land.rhs141 ]
  %land.ext146 = zext i1 %23 to i32
  %mul147 = shl nuw nsw i32 %land.ext146, 3
  %or148 = or i32 %or135, %mul147
  %cmp149 = icmp eq i32 %or115, %or148
  br i1 %cmp149, label %if.end151, label %return

if.end151:                                        ; preds = %land.end145
  %24 = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 15
  %25 = load %union.tree_node** %24, align 8, !tbaa !0
  %26 = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 15
  %27 = load %union.tree_node** %26, align 8, !tbaa !0
  %cmp155 = icmp eq %union.tree_node* %25, %27
  br i1 %cmp155, label %return, label %if.end157

if.end157:                                        ; preds = %if.end151
  %28 = load i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 5), align 8, !tbaa !0
  %call158 = tail call i32 %28(%union.tree_node* %t1.1, %union.tree_node* %t2.1) #8
  %tobool159 = icmp eq i32 %call158, 0
  br i1 %tobool159, label %return, label %if.end161

if.end161:                                        ; preds = %if.end157
  %bf.load164 = load i32* %12, align 8
  %bf.clear165 = and i32 %bf.load164, 255
  switch i32 %bf.clear165, label %sw.epilog [
    i32 13, label %sw.bb
    i32 23, label %sw.bb176
    i32 18, label %sw.bb178
    i32 20, label %sw.bb279
  ]

sw.bb:                                            ; preds = %if.end161
  %type167 = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 1
  %29 = load %union.tree_node** %type167, align 8, !tbaa !0
  %type169 = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 1
  %30 = load %union.tree_node** %type169, align 8, !tbaa !0
  %cmp170 = icmp eq %union.tree_node* %29, %30
  br i1 %cmp170, label %sw.epilog, label %cond.false

cond.false:                                       ; preds = %sw.bb
  %call175 = tail call i32 @comptypes(%union.tree_node* %29, %union.tree_node* %30) #7
  br label %sw.epilog

sw.bb176:                                         ; preds = %if.end161
  %type.i = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 1
  %31 = load %union.tree_node** %type.i, align 8, !tbaa !0
  %type2.i = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 1
  %32 = load %union.tree_node** %type2.i, align 8, !tbaa !0
  %cmp.i = icmp eq %union.tree_node* %31, %32
  br i1 %cmp.i, label %if.end.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %sw.bb176
  %call.i = tail call i32 @comptypes(%union.tree_node* %31, %union.tree_node* %32) #8
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %sw.epilog, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i, %sw.bb176
  %val.0.i = phi i32 [ 1, %sw.bb176 ], [ %call.i, %lor.lhs.false.i ]
  %values.i = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 1
  %33 = load i8** %values.i, align 8
  %34 = bitcast i8* %33 to %union.tree_node*
  %values9.i = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 1
  %35 = load i8** %values9.i, align 8
  %36 = bitcast i8* %35 to %union.tree_node*
  %cmp10.i = icmp eq i8* %33, null
  br i1 %cmp10.i, label %if.then11.i, label %if.end24.i

if.then11.i:                                      ; preds = %if.end.i
  %call12.i = tail call i32 @self_promoting_args_p(%union.tree_node* %36) #8
  %tobool13.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.i, label %sw.epilog, label %if.end15.i

if.end15.i:                                       ; preds = %if.then11.i
  %37 = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 16
  %38 = load %union.tree_node** %37, align 8, !tbaa !0
  %tobool17.i = icmp eq %union.tree_node* %38, null
  br i1 %tobool17.i, label %sw.epilog, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end15.i
  %call20.i = tail call fastcc i32 @type_lists_compatible_p(%union.tree_node* %36, %union.tree_node* %38) #8
  %cmp21.i = icmp eq i32 %call20.i, 1
  %val.0..i = select i1 %cmp21.i, i32 %val.0.i, i32 2
  br label %sw.epilog

if.end24.i:                                       ; preds = %if.end.i
  %cmp25.i = icmp eq i8* %35, null
  br i1 %cmp25.i, label %if.then26.i, label %if.end41.i

if.then26.i:                                      ; preds = %if.end24.i
  %call27.i = tail call i32 @self_promoting_args_p(%union.tree_node* %34) #8
  %tobool28.i = icmp eq i32 %call27.i, 0
  br i1 %tobool28.i, label %sw.epilog, label %if.end30.i

if.end30.i:                                       ; preds = %if.then26.i
  %39 = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 16
  %40 = load %union.tree_node** %39, align 8, !tbaa !0
  %tobool33.i = icmp eq %union.tree_node* %40, null
  br i1 %tobool33.i, label %sw.epilog, label %land.lhs.true34.i

land.lhs.true34.i:                                ; preds = %if.end30.i
  %call37.i = tail call fastcc i32 @type_lists_compatible_p(%union.tree_node* %34, %union.tree_node* %40) #8
  %cmp38.i = icmp eq i32 %call37.i, 1
  %val.0.59.i = select i1 %cmp38.i, i32 %val.0.i, i32 2
  br label %sw.epilog

if.end41.i:                                       ; preds = %if.end24.i
  %call42.i = tail call fastcc i32 @type_lists_compatible_p(%union.tree_node* %34, %union.tree_node* %36) #8
  %cmp43.i = icmp ne i32 %call42.i, 1
  %cond.i = select i1 %cmp43.i, i32 %call42.i, i32 %val.0.i
  br label %sw.epilog

sw.bb178:                                         ; preds = %if.end161
  %values180 = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 1
  %41 = load i8** %values180, align 8
  %values182 = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 1
  %42 = load i8** %values182, align 8
  %type184 = getelementptr inbounds %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 1
  %43 = load %union.tree_node** %type184, align 8, !tbaa !0
  %type186 = getelementptr inbounds %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 1
  %44 = load %union.tree_node** %type186, align 8, !tbaa !0
  %cmp187 = icmp eq %union.tree_node* %43, %44
  br i1 %cmp187, label %if.end196, label %land.lhs.true188

land.lhs.true188:                                 ; preds = %sw.bb178
  %call193 = tail call i32 @comptypes(%union.tree_node* %43, %union.tree_node* %44) #7
  %cmp194 = icmp eq i32 %call193, 0
  br i1 %cmp194, label %return, label %if.end196

if.end196:                                        ; preds = %sw.bb178, %land.lhs.true188
  %val.0 = phi i32 [ %call193, %land.lhs.true188 ], [ 1, %sw.bb178 ]
  %cmp197 = icmp eq i8* %41, null
  %cmp199 = icmp eq i8* %42, null
  %or.cond360 = or i1 %cmp197, %cmp199
  %cmp201 = icmp eq i8* %41, %42
  %or.cond361 = or i1 %or.cond360, %cmp201
  br i1 %or.cond361, label %sw.epilog, label %if.end203

if.end203:                                        ; preds = %if.end196
  %maxval = getelementptr inbounds i8* %41, i64 112
  %45 = bitcast i8* %maxval to %union.tree_node**
  %46 = load %union.tree_node** %45, align 8, !tbaa !0
  %lnot = icmp eq %union.tree_node* %46, null
  %maxval207 = getelementptr inbounds i8* %42, i64 112
  %47 = bitcast i8* %maxval207 to %union.tree_node**
  %48 = load %union.tree_node** %47, align 8, !tbaa !0
  %lnot209 = icmp eq %union.tree_node* %48, null
  br i1 %lnot, label %land.end226, label %land.rhs212

land.rhs212:                                      ; preds = %if.end203
  %minval = getelementptr inbounds i8* %41, i64 104
  %49 = bitcast i8* %minval to %union.tree_node**
  %50 = load %union.tree_node** %49, align 8, !tbaa !0
  %code215 = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 0, i32 2
  %51 = bitcast [4 x i8]* %code215 to i32*
  %bf.load216 = load i32* %51, align 8
  %bf.clear217 = and i32 %bf.load216, 255
  %cmp218 = icmp eq i32 %bf.clear217, 25
  br i1 %cmp218, label %lor.rhs, label %land.end226

lor.rhs:                                          ; preds = %land.rhs212
  %code222 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %52 = bitcast [4 x i8]* %code222 to i32*
  %bf.load223 = load i32* %52, align 8
  %bf.clear224 = and i32 %bf.load223, 255
  %cmp225 = icmp ne i32 %bf.clear224, 25
  br label %land.end226

land.end226:                                      ; preds = %land.rhs212, %lor.rhs, %if.end203
  %53 = phi i1 [ false, %if.end203 ], [ true, %land.rhs212 ], [ %cmp225, %lor.rhs ]
  br i1 %lnot209, label %land.end247, label %land.rhs230

land.rhs230:                                      ; preds = %land.end226
  %minval232 = getelementptr inbounds i8* %42, i64 104
  %54 = bitcast i8* %minval232 to %union.tree_node**
  %55 = load %union.tree_node** %54, align 8, !tbaa !0
  %code234 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 0, i32 2
  %56 = bitcast [4 x i8]* %code234 to i32*
  %bf.load235 = load i32* %56, align 8
  %bf.clear236 = and i32 %bf.load235, 255
  %cmp237 = icmp eq i32 %bf.clear236, 25
  br i1 %cmp237, label %lor.rhs238, label %sw.epilog

lor.rhs238:                                       ; preds = %land.rhs230
  %code242 = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast [4 x i8]* %code242 to i32*
  %bf.load243 = load i32* %57, align 8
  %bf.clear244 = and i32 %bf.load243, 255
  %cmp245 = icmp ne i32 %bf.clear244, 25
  br label %land.end247

land.end247:                                      ; preds = %lor.rhs238, %land.end226
  %58 = phi i1 [ false, %land.end226 ], [ %cmp245, %lor.rhs238 ]
  %brmerge = or i1 %53, %58
  %brmerge362.demorgan = and i1 %lnot, %lnot209
  %or.cond367 = or i1 %brmerge, %brmerge362.demorgan
  br i1 %or.cond367, label %sw.epilog, label %if.end259

if.end259:                                        ; preds = %land.end247
  %brmerge363 = or i1 %lnot, %lnot209
  br i1 %brmerge363, label %if.then277, label %lor.lhs.false263

lor.lhs.false263:                                 ; preds = %if.end259
  %minval265 = getelementptr inbounds i8* %41, i64 104
  %59 = bitcast i8* %minval265 to %union.tree_node**
  %60 = load %union.tree_node** %59, align 8, !tbaa !0
  %minval267 = getelementptr inbounds i8* %42, i64 104
  %61 = bitcast i8* %minval267 to %union.tree_node**
  %62 = load %union.tree_node** %61, align 8, !tbaa !0
  %call268 = tail call i32 @tree_int_cst_equal(%union.tree_node* %60, %union.tree_node* %62) #8
  %tobool269 = icmp eq i32 %call268, 0
  br i1 %tobool269, label %if.then277, label %lor.lhs.false270

lor.lhs.false270:                                 ; preds = %lor.lhs.false263
  %63 = load %union.tree_node** %45, align 8, !tbaa !0
  %64 = load %union.tree_node** %47, align 8, !tbaa !0
  %call275 = tail call i32 @tree_int_cst_equal(%union.tree_node* %63, %union.tree_node* %64) #8
  %tobool276 = icmp eq i32 %call275, 0
  br i1 %tobool276, label %if.then277, label %sw.epilog

if.then277:                                       ; preds = %if.end259, %lor.lhs.false270, %lor.lhs.false263
  br label %sw.epilog

sw.bb279:                                         ; preds = %if.end161
  %call280 = tail call i32 @maybe_objc_comptypes(%union.tree_node* %t1.1, %union.tree_node* %t2.1, i32 0) #8
  %cmp281 = icmp eq i32 %call280, 1
  %. = zext i1 %cmp281 to i32
  br label %sw.epilog

sw.epilog:                                        ; preds = %land.rhs230, %land.lhs.true.i, %if.end41.i, %land.lhs.true34.i, %if.end30.i, %if.then26.i, %if.end15.i, %if.then11.i, %lor.lhs.false.i, %sw.bb279, %land.end247, %cond.false, %sw.bb, %lor.lhs.false270, %if.end161, %if.then277, %if.end196
  %val.1 = phi i32 [ 0, %if.end161 ], [ %val.0, %if.end196 ], [ %val.0, %land.end247 ], [ 0, %if.then277 ], [ %val.0, %lor.lhs.false270 ], [ %call175, %cond.false ], [ 1, %sw.bb ], [ %., %sw.bb279 ], [ %val.0..i, %land.lhs.true.i ], [ %cond.i, %if.end41.i ], [ 0, %lor.lhs.false.i ], [ 0, %if.then11.i ], [ %val.0.i, %if.end15.i ], [ 0, %if.then26.i ], [ %val.0.i, %if.end30.i ], [ %val.0.59.i, %land.lhs.true34.i ], [ %val.0, %land.rhs230 ]
  %cmp284 = icmp eq i32 %call158, 2
  %cmp286 = icmp eq i32 %val.1, 1
  %or.cond364 = and i1 %cmp284, %cmp286
  %cond290 = select i1 %or.cond364, i32 2, i32 %val.1
  br label %return

return:                                           ; preds = %sw.epilog, %land.lhs.true188, %if.end157, %if.end151, %land.end145, %if.end79, %if.end76, %lor.lhs.false3, %lor.lhs.false5, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %lor.lhs.false5 ], [ 1, %lor.lhs.false3 ], [ 1, %if.end76 ], [ 0, %if.end79 ], [ 0, %land.end145 ], [ 1, %if.end151 ], [ 0, %if.end157 ], [ 0, %land.lhs.true188 ], [ %cond290, %sw.epilog ]
  ret i32 %retval.0
}
