define %union.tree_node* @c_expand_return(%union.tree_node* %retval1) #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !0
  %type3 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type3, align 8, !tbaa !0
  %volatile_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %3 = bitcast [4 x i8]* %volatile_flag to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 2048
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([54 x i8]* @.str141, i64 0, i64 0)) #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %tobool5 = icmp eq %union.tree_node* %retval1, null
  br i1 %tobool5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end
  store i32 1, i32* @current_function_returns_null, align 4, !tbaa !3
  %4 = load i32* @warn_return_type, align 4, !tbaa !3
  %5 = load i32* @flag_isoc99, align 4, !tbaa !3
  %6 = or i32 %5, %4
  %7 = icmp eq i32 %6, 0
  %cmp = icmp eq %union.tree_node* %2, null
  %or.cond = or i1 %7, %cmp
  br i1 %or.cond, label %if.end152, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %if.then6
  %code = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %code to i32*
  %bf.load11 = load i32* %8, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 5
  br i1 %cmp13, label %if.end152, label %if.then14

if.then14:                                        ; preds = %land.lhs.true9
  tail call void (i8*, ...)* @pedwarn_c99(i8* getelementptr inbounds ([55 x i8]* @.str142, i64 0, i64 0)) #8
  br label %if.end152

if.else:                                          ; preds = %if.end
  %cmp16 = icmp eq %union.tree_node* %2, null
  br i1 %cmp16, label %if.then23, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %if.else
  %code19 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast [4 x i8]* %code19 to i32*
  %bf.load20 = load i32* %9, align 8
  %bf.clear21 = and i32 %bf.load20, 255
  %cmp22 = icmp eq i32 %bf.clear21, 5
  br i1 %cmp22, label %if.then23, label %if.else35

if.then23:                                        ; preds = %lor.lhs.false17, %if.else
  store i32 1, i32* @current_function_returns_null, align 4, !tbaa !3
  %10 = load i32* @pedantic, align 4, !tbaa !3
  %tobool24 = icmp eq i32 %10, 0
  br i1 %tobool24, label %lor.lhs.false25, label %if.then33

lor.lhs.false25:                                  ; preds = %if.then23
  %type27 = getelementptr inbounds %union.tree_node* %retval1, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type27, align 8, !tbaa !0
  %code29 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast [4 x i8]* %code29 to i32*
  %bf.load30 = load i32* %12, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  %cmp32 = icmp eq i32 %bf.clear31, 5
  br i1 %cmp32, label %if.end152, label %if.then33

if.then33:                                        ; preds = %lor.lhs.false25, %if.then23
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([50 x i8]* @.str143, i64 0, i64 0)) #8
  br label %if.end152

if.else35:                                        ; preds = %lor.lhs.false17
  %call = tail call fastcc %union.tree_node* @convert_for_assignment(%union.tree_node* %2, %union.tree_node* %retval1, i8* getelementptr inbounds ([7 x i8]* @.str144, i64 0, i64 0), %union.tree_node* null, %union.tree_node* null, i32 0) #7
  %13 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %result = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 11
  %14 = load %union.tree_node** %result, align 8, !tbaa !0
  store i32 1, i32* @current_function_returns_value, align 4, !tbaa !3
  %15 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp36 = icmp eq %union.tree_node* %call, %15
  br i1 %cmp36, label %return, label %if.end38

if.end38:                                         ; preds = %if.else35
  %type40 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 1
  %16 = load %union.tree_node** %type40, align 8, !tbaa !0
  %call41 = tail call %union.tree_node* @convert(%union.tree_node* %16, %union.tree_node* %call) #8
  br label %while.body

while.body:                                       ; preds = %while.body.backedge, %if.end38
  %inner.0 = phi %union.tree_node* [ %call41, %if.end38 ], [ %inner.0.be, %while.body.backedge ]
  %code43 = getelementptr inbounds %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast [4 x i8]* %code43 to i32*
  %bf.load44 = load i32* %17, align 8
  %bf.clear45 = and i32 %bf.load44, 255
  switch i32 %bf.clear45, label %while.end147 [
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 114, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb46
    i32 121, label %while.cond110
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body
  %operands = getelementptr inbounds %union.tree_node* %inner.0, i64 0, i32 0, i32 2
  br label %while.body.backedge

sw.bb46:                                          ; preds = %while.body
  %operands48 = getelementptr inbounds %union.tree_node* %inner.0, i64 0, i32 0, i32 2
  %arrayidx49 = getelementptr inbounds i32* %operands48, i64 2
  br label %while.cond50

while.cond50:                                     ; preds = %land.rhs, %sw.bb46
  %op1.0.in.in = phi i32* [ %arrayidx49, %sw.bb46 ], [ %operands84, %land.rhs ]
  %op1.0.in = bitcast i32* %op1.0.in.in to %union.tree_node**
  %op1.0 = load %union.tree_node** %op1.0.in, align 8
  %type52 = getelementptr inbounds %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type52, align 8, !tbaa !0
  %code54 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast [4 x i8]* %code54 to i32*
  %bf.load55 = load i32* %19, align 8
  %bf.clear56 = and i32 %bf.load55, 255
  switch i32 %bf.clear56, label %land.rhs [
    i32 13, label %while.end147
    i32 15, label %while.end147
  ]

land.rhs:                                         ; preds = %while.cond50
  %code67 = getelementptr inbounds %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast [4 x i8]* %code67 to i32*
  %bf.load68 = load i32* %20, align 8
  %bf.clear69 = and i32 %bf.load68, 255
  %bf.clear69.off = add i32 %bf.clear69, -114
  %switch = icmp ult i32 %bf.clear69.off, 3
  %operands84 = getelementptr inbounds %union.tree_node* %op1.0, i64 0, i32 0, i32 2
  br i1 %switch, label %while.cond50, label %while.end

while.end:                                        ; preds = %land.rhs
  switch i32 %bf.clear56, label %while.body.backedge [
    i32 13, label %while.end147
    i32 15, label %while.end147
  ]

while.body.backedge:                              ; preds = %while.end, %sw.bb
  %inner.0.be.in.in = phi i32* [ %operands, %sw.bb ], [ %operands48, %while.end ]
  %inner.0.be.in = bitcast i32* %inner.0.be.in.in to %union.tree_node**
  %inner.0.be = load %union.tree_node** %inner.0.be.in, align 8
  br label %while.body

while.cond110:                                    ; preds = %while.body, %while.cond110
  %inner.0.pn = phi %union.tree_node* [ %inner.1, %while.cond110 ], [ %inner.0, %while.body ]
  %inner.1.in.in = getelementptr inbounds %union.tree_node* %inner.0.pn, i64 0, i32 0, i32 2
  %inner.1.in = bitcast i32* %inner.1.in.in to %union.tree_node**
  %inner.1 = load %union.tree_node** %inner.1.in, align 8
  %code112 = getelementptr inbounds %union.tree_node* %inner.1, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast [4 x i8]* %code112 to i32*
  %bf.load113 = load i32* %21, align 8
  %bf.clear114 = and i32 %bf.load113, 255
  %idxprom181 = zext i32 %bf.clear114 to i64
  %arrayidx115 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom181
  %22 = load i8* %arrayidx115, align 1, !tbaa !1
  %cmp116 = icmp eq i8 %22, 114
  br i1 %cmp116, label %while.cond110, label %while.end122

while.end122:                                     ; preds = %while.cond110
  %cmp127 = icmp eq i32 %bf.clear114, 34
  br i1 %cmp127, label %land.lhs.true129, label %while.end147

land.lhs.true129:                                 ; preds = %while.end122
  %external_flag = getelementptr inbounds %union.tree_node* %inner.1, i64 0, i32 0, i32 5
  %23 = bitcast [8 x i8]* %external_flag to i64*
  %bf.load131 = load i64* %23, align 8
  %bf.cast = and i64 %bf.load131, 256
  %tobool134 = icmp eq i64 %bf.cast, 0
  br i1 %tobool134, label %land.lhs.true135, label %while.end147

land.lhs.true135:                                 ; preds = %land.lhs.true129
  %bf.clear139 = and i32 %bf.load113, 262144
  %tobool140 = icmp eq i32 %bf.clear139, 0
  br i1 %tobool140, label %land.lhs.true141, label %while.end147

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %context = getelementptr inbounds %union.tree_node* %inner.1, i64 0, i32 0, i32 9
  %24 = load %union.tree_node** %context, align 8, !tbaa !0
  %25 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %cmp143 = icmp eq %union.tree_node* %24, %25
  br i1 %cmp143, label %if.then145, label %while.end147

if.then145:                                       ; preds = %land.lhs.true141
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([43 x i8]* @.str145, i64 0, i64 0)) #8
  br label %while.end147

while.end147:                                     ; preds = %while.cond50, %while.cond50, %while.end, %while.end, %while.body, %land.lhs.true135, %land.lhs.true129, %if.then145, %land.lhs.true141, %while.end122
  %26 = load %union.tree_node** %type40, align 8, !tbaa !0
  %call150 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %26, %union.tree_node* %14, %union.tree_node* %call41) #8
  br label %if.end152

if.end152:                                        ; preds = %lor.lhs.false25, %land.lhs.true9, %if.then6, %while.end147, %if.then33, %if.then14
  %retval.addr.0 = phi %union.tree_node* [ %retval1, %if.then33 ], [ %retval1, %lor.lhs.false25 ], [ %call150, %while.end147 ], [ null, %if.then14 ], [ null, %land.lhs.true9 ], [ null, %if.then6 ]
  %call153 = tail call %union.tree_node* @build_return_stmt(%union.tree_node* %retval.addr.0) #8
  %call154 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call153) #8
  br label %return

return:                                           ; preds = %if.else35, %if.end152
  %retval.0 = phi %union.tree_node* [ %call154, %if.end152 ], [ null, %if.else35 ]
  ret %union.tree_node* %retval.0
}
