define %union.tree_node* @build_component_ref(%union.tree_node* %datum, %union.tree_node* %component) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %datum, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !0
  %code3 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code3 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %code5 = getelementptr inbounds %union.tree_node* %datum, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code5 to i32*
  %bf.load6 = load i32* %2, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cond84 = icmp eq i32 %bf.clear7, 47
  br i1 %cond84, label %sw.bb, label %sw.epilog

sw.bb:                                            ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %datum, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  %call = tail call %union.tree_node* @build_component_ref(%union.tree_node* %4, %union.tree_node* %component) #7
  %type9 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type9, align 8, !tbaa !0
  %arrayidx12 = bitcast i32* %operands to %union.tree_node**
  %6 = load %union.tree_node** %arrayidx12, align 8, !tbaa !0
  %call13 = tail call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call) #8
  %call14 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 47, %union.tree_node* %5, %union.tree_node* %6, %union.tree_node* %call13) #8
  ret %union.tree_node* %call14

sw.epilog:                                        ; preds = %entry
  %cmp = icmp eq i32 %bf.clear, 20
  %7 = and i32 %bf.load, 254
  %8 = icmp eq i32 %7, 20
  br i1 %8, label %if.then, label %if.else

if.then:                                          ; preds = %sw.epilog
  %size = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %9 = bitcast i32* %size to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !0
  %cmp17 = icmp eq %union.tree_node* %10, null
  br i1 %cmp17, label %if.then18, label %if.end

if.then18:                                        ; preds = %if.then
  tail call void @incomplete_type_error(%union.tree_node* null, %union.tree_node* %0) #7
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %return

if.end:                                           ; preds = %if.then
  %call19 = tail call fastcc %union.tree_node* @lookup_field(%union.tree_node* %datum, %union.tree_node* %component) #7
  %tobool = icmp eq %union.tree_node* %call19, null
  br i1 %tobool, label %if.then20, label %for.body

if.then20:                                        ; preds = %if.end
  %cond = select i1 %cmp, i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str2, i64 0, i64 0)
  %id = getelementptr inbounds %union.tree_node* %component, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds i8** %id, i64 1
  %13 = load i8** %12, align 8, !tbaa !0
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([28 x i8]* @.str16, i64 0, i64 0), i8* %cond, i8* %13) #8
  %14 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %return

for.body:                                         ; preds = %if.end, %if.end75
  %datum.addr.0115 = phi %union.tree_node* [ %call32, %if.end75 ], [ %datum, %if.end ]
  %field.0114 = phi %union.tree_node* [ %24, %if.end75 ], [ %call19, %if.end ]
  %value24 = getelementptr inbounds %union.tree_node* %field.0114, i64 0, i32 0, i32 2
  %15 = bitcast i32* %value24 to %union.tree_node**
  %16 = load %union.tree_node** %15, align 8, !tbaa !0
  %type26 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 1
  %17 = load %union.tree_node** %type26, align 8, !tbaa !0
  %18 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp27 = icmp eq %union.tree_node* %17, %18
  br i1 %cmp27, label %return, label %if.end29

if.end29:                                         ; preds = %for.body
  %call32 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %17, %union.tree_node* %datum.addr.0115, %union.tree_node* %16) #8
  %readonly_flag = getelementptr inbounds %union.tree_node* %datum.addr.0115, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load34 = load i32* %19, align 8
  %bf.clear35 = and i32 %bf.load34, 4096
  %tobool36 = icmp eq i32 %bf.clear35, 0
  br i1 %tobool36, label %lor.lhs.false37, label %if.then44

lor.lhs.false37:                                  ; preds = %if.end29
  %readonly_flag39 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast [4 x i8]* %readonly_flag39 to i32*
  %bf.load40 = load i32* %20, align 8
  %bf.clear42 = and i32 %bf.load40, 4096
  %tobool43 = icmp eq i32 %bf.clear42, 0
  br i1 %tobool43, label %if.end49, label %if.then44

if.then44:                                        ; preds = %lor.lhs.false37, %if.end29
  %readonly_flag46 = getelementptr inbounds %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast [4 x i8]* %readonly_flag46 to i32*
  %bf.load47 = load i32* %21, align 8
  %bf.set = or i32 %bf.load47, 4096
  store i32 %bf.set, i32* %21, align 8
  %bf.load51.pre = load i32* %19, align 8
  br label %if.end49

if.end49:                                         ; preds = %lor.lhs.false37, %if.then44
  %bf.load51 = phi i32 [ %bf.load34, %lor.lhs.false37 ], [ %bf.load51.pre, %if.then44 ]
  %bf.clear53 = and i32 %bf.load51, 2048
  %tobool54 = icmp eq i32 %bf.clear53, 0
  %volatile_flag57 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %22 = bitcast [4 x i8]* %volatile_flag57 to i32*
  br i1 %tobool54, label %lor.lhs.false55, label %if.then62

lor.lhs.false55:                                  ; preds = %if.end49
  %bf.load58 = load i32* %22, align 8
  %bf.clear60 = and i32 %bf.load58, 2048
  %tobool61 = icmp eq i32 %bf.clear60, 0
  br i1 %tobool61, label %if.end68, label %if.then62

if.then62:                                        ; preds = %if.end49, %lor.lhs.false55
  %volatile_flag64 = getelementptr inbounds %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast [4 x i8]* %volatile_flag64 to i32*
  %bf.load65 = load i32* %23, align 8
  %bf.set67 = or i32 %bf.load65, 2048
  store i32 %bf.set67, i32* %23, align 8
  %bf.load70.pre = load i32* %22, align 8
  br label %if.end68

if.end68:                                         ; preds = %lor.lhs.false55, %if.then62
  %bf.load70 = phi i32 [ %bf.load58, %lor.lhs.false55 ], [ %bf.load70.pre, %if.then62 ]
  %bf.clear72 = and i32 %bf.load70, 8388608
  %tobool73 = icmp eq i32 %bf.clear72, 0
  br i1 %tobool73, label %if.end75, label %if.then74

if.then74:                                        ; preds = %if.end68
  tail call void @warn_deprecated_use(%union.tree_node* %16) #8
  br label %if.end75

if.end75:                                         ; preds = %if.end68, %if.then74
  %chain = getelementptr inbounds %union.tree_node* %field.0114, i64 0, i32 0, i32 0, i32 0
  %24 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool23 = icmp eq %union.tree_node* %24, null
  br i1 %tobool23, label %return, label %for.body

if.else:                                          ; preds = %sw.epilog
  %cmp77 = icmp eq i32 %bf.clear, 0
  br i1 %cmp77, label %if.end83, label %if.then78

if.then78:                                        ; preds = %if.else
  %id80 = getelementptr inbounds %union.tree_node* %component, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds i8** %id80, i64 1
  %26 = load i8** %25, align 8, !tbaa !0
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([62 x i8]* @.str18, i64 0, i64 0), i8* %26) #8
  br label %if.end83

if.end83:                                         ; preds = %if.else, %if.then78
  %27 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %return

return:                                           ; preds = %for.body, %if.end75, %if.end83, %if.then20, %if.then18
  %retval.0 = phi %union.tree_node* [ %14, %if.then20 ], [ %11, %if.then18 ], [ %27, %if.end83 ], [ %17, %for.body ], [ %call32, %if.end75 ]
  ret %union.tree_node* %retval.0
}
