define void @set_init_label(%union.tree_node* %fieldname) #0 {
entry:
  %call = tail call fastcc i32 @set_designator(i32 0) #7
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.end18

if.end:                                           ; preds = %entry
  store i1 true, i1* @designator_errorneous, align 1
  %0 = load %union.tree_node** @constructor_type, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -20
  %switch = icmp ult i32 %bf.clear.off, 2
  br i1 %switch, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @error_init(i8* getelementptr inbounds ([46 x i8]* @.str126, i64 0, i64 0)) #7
  br label %if.end18

if.end7:                                          ; preds = %if.end
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %2 = load i8** %values, align 8
  %cond25 = icmp eq i8* %2, null
  br i1 %cond25, label %if.then14, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end7
  %3 = bitcast i8* %2 to %union.tree_node*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %tail.026 = phi %union.tree_node* [ %3, %for.body.lr.ph ], [ %5, %for.inc ]
  %name = getelementptr inbounds %union.tree_node* %tail.026, i64 0, i32 0, i32 8
  %4 = load %union.tree_node** %name, align 8, !tbaa !0
  %cmp9 = icmp eq %union.tree_node* %4, %fieldname
  br i1 %cmp9, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %tail.026, i64 0, i32 0, i32 0, i32 0
  %5 = load %union.tree_node** %chain, align 8, !tbaa !0
  %cond = icmp eq %union.tree_node* %5, null
  br i1 %cond, label %if.then14, label %for.body

for.end:                                          ; preds = %for.body
  %cmp13 = icmp eq %union.tree_node* %tail.026, null
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.end7, %for.inc, %for.end
  %id = getelementptr inbounds %union.tree_node* %fieldname, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds i8** %id, i64 1
  %7 = load i8** %6, align 8, !tbaa !0
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str127, i64 0, i64 0), i8* %7) #8
  br label %if.end18

if.else:                                          ; preds = %for.end
  store %union.tree_node* %tail.026, %union.tree_node** @constructor_fields, align 8, !tbaa !0
  %8 = load i32* @designator_depth, align 4, !tbaa !3
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* @designator_depth, align 4, !tbaa !3
  store i1 false, i1* @designator_errorneous, align 1
  %9 = load %struct.constructor_range_stack** @constructor_range_stack, align 8, !tbaa !0
  %tobool15 = icmp eq %struct.constructor_range_stack* %9, null
  br i1 %tobool15, label %if.end18, label %if.then16

if.then16:                                        ; preds = %if.else
  tail call fastcc void @push_range_stack(%union.tree_node* null) #7
  br label %if.end18

if.end18:                                         ; preds = %if.else, %entry, %if.then16, %if.then6, %if.then14
  ret void
}
