define %union.tree_node* @build_asm_stmt(%union.tree_node* %cv_qualifier, %union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers) #0 {
entry:
  %chain = getelementptr inbounds %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0
  %0 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @combine_strings(%union.tree_node* %string) #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %string.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %string, %entry ]
  %code = getelementptr inbounds %union.tree_node* %string.addr.0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 29
  br i1 %cmp, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str137, i64 0, i64 0)) #8
  br label %return

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq %union.tree_node* %cv_qualifier, null
  br i1 %cmp4, label %if.end7, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end3
  %2 = load %union.tree_node*** @ridpointers, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %union.tree_node** %2, i64 9
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %cmp5 = icmp eq %union.tree_node* %3, %cv_qualifier
  br i1 %cmp5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %land.lhs.true
  %id = getelementptr inbounds %union.tree_node* %cv_qualifier, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds i8** %id, i64 1
  %5 = load i8** %4, align 8, !tbaa !0
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([28 x i8]* @.str138, i64 0, i64 0), i8* %5) #8
  br label %if.end7

if.end7:                                          ; preds = %land.lhs.true, %if.end3, %if.then6
  %cv_qualifier.addr.0 = phi %union.tree_node* [ null, %if.then6 ], [ %cv_qualifier, %land.lhs.true ], [ null, %if.end3 ]
  %tobool8228 = icmp eq %union.tree_node* %outputs, null
  br i1 %tobool8228, label %for.cond159.preheader, label %for.body

for.cond99.preheader:                             ; preds = %while.end93
  br i1 %tobool8228, label %for.cond159.preheader, label %for.body101

for.body:                                         ; preds = %if.end7, %while.end93
  %tail.0229 = phi %union.tree_node* [ %18, %while.end93 ], [ %outputs, %if.end7 ]
  %value = getelementptr inbounds %union.tree_node* %tail.0229, i64 0, i32 0, i32 2
  %6 = bitcast i32* %value to %union.tree_node**
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %output.0.pre = load %union.tree_node** %6, align 8
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %for.body
  %8 = phi %union.tree_node* [ %output.0.pre, %for.body ], [ %10, %land.rhs ]
  %code10 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast [4 x i8]* %code10 to i32*
  %bf.load11 = load i32* %9, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %bf.clear12.off = add i32 %bf.clear12, -114
  %switch = icmp ult i32 %bf.clear12.off, 3
  br i1 %switch, label %land.lhs.true25, label %while.end

land.lhs.true25:                                  ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 2
  %arrayidx26 = bitcast i32* %operands to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx26, align 8, !tbaa !0
  %cmp27 = icmp eq %union.tree_node* %10, %7
  br i1 %cmp27, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true25
  %type = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type, align 8, !tbaa !0
  %type29 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type29, i64 0, i32 6
  %12 = bitcast [4 x i8]* %mode to i32*
  %bf.load30 = load i32* %12, align 4
  %type36 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type36, align 8, !tbaa !0
  %type37 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode38 = getelementptr inbounds %struct.tree_type* %type37, i64 0, i32 6
  %14 = bitcast [4 x i8]* %mode38 to i32*
  %bf.load39 = load i32* %14, align 4
  %bf.lshr219 = xor i32 %bf.load39, %bf.load30
  %15 = and i32 %bf.lshr219, 65024
  %cmp42 = icmp eq i32 %15, 0
  br i1 %cmp42, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true25, %land.rhs
  store %union.tree_node* %8, %union.tree_node** %6, align 8, !tbaa !0
  br label %while.cond48

while.cond48:                                     ; preds = %while.body89, %while.end
  %output.1 = phi %union.tree_node* [ %8, %while.end ], [ %17, %while.body89 ]
  %code50 = getelementptr inbounds %union.tree_node* %output.1, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast [4 x i8]* %code50 to i32*
  %bf.load51 = load i32* %16, align 8
  %bf.clear52 = and i32 %bf.load51, 255
  switch i32 %bf.clear52, label %while.end93 [
    i32 115, label %while.body89
    i32 114, label %while.body89
    i32 76, label %while.body89
    i32 72, label %while.body89
    i32 74, label %while.body89
    i32 75, label %while.body89
    i32 73, label %while.body89
  ]

while.body89:                                     ; preds = %while.cond48, %while.cond48, %while.cond48, %while.cond48, %while.cond48, %while.cond48, %while.cond48
  %operands91 = getelementptr inbounds %union.tree_node* %output.1, i64 0, i32 0, i32 2
  %arrayidx92 = bitcast i32* %operands91 to %union.tree_node**
  %17 = load %union.tree_node** %arrayidx92, align 8, !tbaa !0
  br label %while.cond48

while.end93:                                      ; preds = %while.cond48
  %call96 = tail call i32 @lvalue_or_else(%union.tree_node* %8, i8* getelementptr inbounds ([32 x i8]* @.str139, i64 0, i64 0)) #7
  %chain98 = getelementptr inbounds %union.tree_node* %tail.0229, i64 0, i32 0, i32 0, i32 0
  %18 = load %union.tree_node** %chain98, align 8, !tbaa !0
  %tobool8 = icmp eq %union.tree_node* %18, null
  br i1 %tobool8, label %for.cond99.preheader, label %for.body

for.cond159.preheader:                            ; preds = %if.end7, %while.end152, %for.cond99.preheader
  %tobool160224 = icmp eq %union.tree_node* %inputs, null
  br i1 %tobool160224, label %for.end170, label %for.body161

for.body101:                                      ; preds = %for.cond99.preheader, %while.end152
  %tail.1227 = phi %union.tree_node* [ %28, %while.end152 ], [ %outputs, %for.cond99.preheader ]
  %value104 = getelementptr inbounds %union.tree_node* %tail.1227, i64 0, i32 0, i32 2
  %19 = bitcast i32* %value104 to %union.tree_node**
  %20 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %output102.0.pre = load %union.tree_node** %19, align 8
  br label %while.cond105

while.cond105:                                    ; preds = %land.rhs128, %for.body101
  %output102.0 = phi %union.tree_node* [ %output102.0.pre, %for.body101 ], [ %22, %land.rhs128 ]
  %code107 = getelementptr inbounds %union.tree_node* %output102.0, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast [4 x i8]* %code107 to i32*
  %bf.load108 = load i32* %21, align 8
  %bf.clear109 = and i32 %bf.load108, 255
  %bf.clear109.off = add i32 %bf.clear109, -114
  %switch223 = icmp ult i32 %bf.clear109.off, 3
  br i1 %switch223, label %land.lhs.true123, label %while.end152

land.lhs.true123:                                 ; preds = %while.cond105
  %operands125 = getelementptr inbounds %union.tree_node* %output102.0, i64 0, i32 0, i32 2
  %arrayidx126 = bitcast i32* %operands125 to %union.tree_node**
  %22 = load %union.tree_node** %arrayidx126, align 8, !tbaa !0
  %cmp127 = icmp eq %union.tree_node* %22, %20
  br i1 %cmp127, label %while.end152, label %land.rhs128

land.rhs128:                                      ; preds = %land.lhs.true123
  %type130 = getelementptr inbounds %union.tree_node* %output102.0, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type130, align 8, !tbaa !0
  %type131 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %mode132 = getelementptr inbounds %struct.tree_type* %type131, i64 0, i32 6
  %24 = bitcast [4 x i8]* %mode132 to i32*
  %bf.load133 = load i32* %24, align 4
  %type140 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type140, align 8, !tbaa !0
  %type141 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %mode142 = getelementptr inbounds %struct.tree_type* %type141, i64 0, i32 6
  %26 = bitcast [4 x i8]* %mode142 to i32*
  %bf.load143 = load i32* %26, align 4
  %bf.lshr134220 = xor i32 %bf.load143, %bf.load133
  %27 = and i32 %bf.lshr134220, 65024
  %cmp146 = icmp eq i32 %27, 0
  br i1 %cmp146, label %while.cond105, label %while.end152

while.end152:                                     ; preds = %while.cond105, %land.lhs.true123, %land.rhs128
  store %union.tree_node* %output102.0, %union.tree_node** %19, align 8, !tbaa !0
  %chain157 = getelementptr inbounds %union.tree_node* %tail.1227, i64 0, i32 0, i32 0, i32 0
  %28 = load %union.tree_node** %chain157, align 8, !tbaa !0
  %tobool100 = icmp eq %union.tree_node* %28, null
  br i1 %tobool100, label %for.cond159.preheader, label %for.body101

for.body161:                                      ; preds = %for.cond159.preheader, %for.body161
  %tail.2225 = phi %union.tree_node* [ %31, %for.body161 ], [ %inputs, %for.cond159.preheader ]
  %value163 = getelementptr inbounds %union.tree_node* %tail.2225, i64 0, i32 0, i32 2
  %29 = bitcast i32* %value163 to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !0
  %call164 = tail call fastcc %union.tree_node* @default_function_array_conversion(%union.tree_node* %30) #7
  store %union.tree_node* %call164, %union.tree_node** %29, align 8, !tbaa !0
  %chain169 = getelementptr inbounds %union.tree_node* %tail.2225, i64 0, i32 0, i32 0, i32 0
  %31 = load %union.tree_node** %chain169, align 8, !tbaa !0
  %tobool160 = icmp eq %union.tree_node* %31, null
  br i1 %tobool160, label %for.end170, label %for.body161

for.end170:                                       ; preds = %for.body161, %for.cond159.preheader
  %call171 = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 165, %union.tree_node* %cv_qualifier.addr.0, %union.tree_node* %string.addr.0, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers) #8
  %call172 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call171) #8
  br label %return

return:                                           ; preds = %for.end170, %if.then2
  %retval.0 = phi %union.tree_node* [ null, %if.then2 ], [ %call172, %for.end170 ]
  ret %union.tree_node* %retval.0
}
