define internal fastcc i32 @comp_target_types(%union.tree_node* %ttl, %union.tree_node* %ttr) #0 {
entry:
  %call = tail call i32 @maybe_objc_comptypes(%union.tree_node* %ttl, %union.tree_node* %ttr, i32 1) #8
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node* %ttl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !0
  %1 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 15
  %2 = load %union.tree_node** %1, align 8, !tbaa !0
  %type3 = getelementptr inbounds %union.tree_node* %ttr, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type3, align 8, !tbaa !0
  %4 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 15
  %5 = load %union.tree_node** %4, align 8, !tbaa !0
  %call6 = tail call i32 @comptypes(%union.tree_node* %2, %union.tree_node* %5) #7
  %cmp7 = icmp eq i32 %call6, 2
  %6 = load i32* @pedantic, align 4, !tbaa !3
  %tobool = icmp ne i32 %6, 0
  %or.cond = and i1 %cmp7, %tobool
  br i1 %or.cond, label %if.then8, label %return

if.then8:                                         ; preds = %if.end
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([31 x i8]* @.str180, i64 0, i64 0)) #8
  br label %return

return:                                           ; preds = %if.end, %if.then8, %entry
  %retval.0 = phi i32 [ %call, %entry ], [ 2, %if.then8 ], [ %call6, %if.end ]
  ret i32 %retval.0
}
