define internal fastcc i32 @set_designator(i32 %array) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %array}, i64 0, metadata !1713), !dbg !4491
  %0 = load %union.tree_node** @constructor_type, align 8, !dbg !4492, !tbaa !1977
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !4492
  br i1 %cmp, label %return, label %if.end, !dbg !4492

if.end:                                           ; preds = %entry
  %.b = load i1* @designator_errorneous, align 1
  br i1 %.b, label %return, label %if.end2, !dbg !4493

if.end2:                                          ; preds = %if.end
  %1 = load i32* @designator_depth, align 4, !dbg !4494, !tbaa !2105
  %tobool3 = icmp eq i32 %1, 0, !dbg !4494
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !4494

if.then4:                                         ; preds = %if.end2
  %2 = load %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !4495, !tbaa !1977
  %tobool5 = icmp eq %struct.constructor_range_stack* %2, null, !dbg !4495
  br i1 %tobool5, label %while.cond.preheader, label %if.then6, !dbg !4495

while.cond.preheader:                             ; preds = %if.then4
  %3 = load %struct.constructor_stack** @constructor_stack, align 8, !dbg !4497, !tbaa !1977
  %implicit59 = getelementptr inbounds %struct.constructor_stack* %3, i64 0, i32 16, !dbg !4497
  %4 = load i8* %implicit59, align 1, !dbg !4497, !tbaa !1978
  %tobool860 = icmp eq i8 %4, 0, !dbg !4497
  br i1 %tobool860, label %while.end, label %while.body, !dbg !4497

if.then6:                                         ; preds = %if.then4
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str7, i64 0, i64 0), i32 5645, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.set_designator, i64 0, i64 0)) #10, !dbg !4498
  unreachable, !dbg !4498

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %call = tail call %union.tree_node* @pop_init_level(i32 1) #8, !dbg !4499
  tail call void @process_init_element(%union.tree_node* %call) #8, !dbg !4499
  %5 = load %struct.constructor_stack** @constructor_stack, align 8, !dbg !4497, !tbaa !1977
  %implicit = getelementptr inbounds %struct.constructor_stack* %5, i64 0, i32 16, !dbg !4497
  %6 = load i8* %implicit, align 1, !dbg !4497, !tbaa !1978
  %tobool8 = icmp eq i8 %6, 0, !dbg !4497
  br i1 %tobool8, label %while.end, label %while.body, !dbg !4497

while.end:                                        ; preds = %while.body, %while.cond.preheader
  store i32 1, i32* @constructor_designated, align 4, !dbg !4500, !tbaa !2105
  br label %return, !dbg !4501

if.end9:                                          ; preds = %if.end2
  %7 = load i32* @constructor_no_implicit, align 4, !dbg !4502, !tbaa !2105
  %tobool10 = icmp eq i32 %7, 0, !dbg !4502
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !4502

if.then11:                                        ; preds = %if.end9
  tail call void @error_init(i8* getelementptr inbounds ([40 x i8]* @.str153, i64 0, i64 0)) #8, !dbg !4503
  br label %return, !dbg !4505

if.end12:                                         ; preds = %if.end9
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !4506
  %8 = bitcast [4 x i8]* %code to i32*, !dbg !4506
  %bf.load = load i32* %8, align 8, !dbg !4506
  %bf.clear = and i32 %bf.load, 255, !dbg !4506
  switch i32 %bf.clear, label %if.else35 [
    i32 20, label %if.then19
    i32 21, label %if.then19
    i32 18, label %if.then30
  ], !dbg !4506

if.then19:                                        ; preds = %if.end12, %if.end12
  %9 = load %union.tree_node** @constructor_fields, align 8, !dbg !4507, !tbaa !1977
  %type = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 1, !dbg !4507
  %10 = load %union.tree_node** %type, align 8, !dbg !4507, !tbaa !1977
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %10}, i64 0, metadata !1714), !dbg !4507
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !4509, !tbaa !1977
  %cmp21 = icmp eq %union.tree_node* %10, %11, !dbg !4509
  br i1 %cmp21, label %if.end37, label %if.then22, !dbg !4509

if.then22:                                        ; preds = %if.then19
  %12 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 15, !dbg !4510
  %13 = load %union.tree_node** %12, align 8, !dbg !4510, !tbaa !1977
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %13}, i64 0, metadata !1714), !dbg !4510
  br label %if.end37, !dbg !4510

if.then30:                                        ; preds = %if.end12
  %type32 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1, !dbg !4511
  %14 = load %union.tree_node** %type32, align 8, !dbg !4511, !tbaa !1977
  %15 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 15, !dbg !4511
  %16 = load %union.tree_node** %15, align 8, !dbg !4511, !tbaa !1977
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %16}, i64 0, metadata !1714), !dbg !4511
  br label %if.end37

if.else35:                                        ; preds = %if.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str7, i64 0, i64 0), i32 5673, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.set_designator, i64 0, i64 0)) #10, !dbg !4513
  unreachable, !dbg !4513

if.end37:                                         ; preds = %if.then19, %if.then22, %if.then30
  %subtype.0 = phi %union.tree_node* [ %13, %if.then22 ], [ %10, %if.then19 ], [ %16, %if.then30 ]
  %code39 = getelementptr inbounds %union.tree_node* %subtype.0, i64 0, i32 0, i32 0, i32 2, !dbg !4514
  %17 = bitcast [4 x i8]* %code39 to i32*, !dbg !4514
  %bf.load40 = load i32* %17, align 8, !dbg !4514
  %bf.clear41 = and i32 %bf.load40, 255, !dbg !4514
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear41}, i64 0, metadata !1715), !dbg !4514
  %tobool42 = icmp ne i32 %array, 0, !dbg !4515
  %tobool42.not = xor i1 %tobool42, true, !dbg !4515
  %cmp43 = icmp eq i32 %bf.clear41, 18, !dbg !4515
  %or.cond = or i1 %cmp43, %tobool42.not, !dbg !4515
  br i1 %or.cond, label %if.else45, label %if.then44, !dbg !4515

if.then44:                                        ; preds = %if.end37
  tail call void @error_init(i8* getelementptr inbounds ([37 x i8]* @.str122, i64 0, i64 0)) #8, !dbg !4516
  br label %return, !dbg !4518

if.else45:                                        ; preds = %if.end37
  br i1 %tobool42, label %if.end53, label %land.lhs.true47, !dbg !4519

land.lhs.true47:                                  ; preds = %if.else45
  %bf.clear41.off = add i32 %bf.clear41, -20, !dbg !4519
  %18 = icmp ugt i32 %bf.clear41.off, 1, !dbg !4519
  br i1 %18, label %if.then51, label %if.end53, !dbg !4519

if.then51:                                        ; preds = %land.lhs.true47
  tail call void @error_init(i8* getelementptr inbounds ([46 x i8]* @.str126, i64 0, i64 0)) #8, !dbg !4520
  br label %return, !dbg !4522

if.end53:                                         ; preds = %if.else45, %land.lhs.true47
  store i32 1, i32* @constructor_designated, align 4, !dbg !4523, !tbaa !2105
  tail call void @push_init_level(i32 2) #8, !dbg !4524
  br label %return, !dbg !4525

return:                                           ; preds = %if.end, %entry, %if.end53, %if.then51, %if.then44, %if.then11, %while.end
  %retval.0 = phi i32 [ 1, %if.then11 ], [ 1, %if.then44 ], [ 0, %if.end53 ], [ 1, %if.then51 ], [ 0, %while.end ], [ 1, %entry ], [ 1, %if.end ]
  ret i32 %retval.0, !dbg !4525
}
