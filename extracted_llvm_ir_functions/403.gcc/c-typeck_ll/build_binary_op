define %union.tree_node* @build_binary_op(i32 %code, %union.tree_node* %orig_op0, %union.tree_node* %orig_op1, i32 %convert_p) #0 {
entry:
  %unsigned0 = alloca i32, align 4
  %unsigned1 = alloca i32, align 4
  %unsigned_arg = alloca i32, align 4
  %xop0 = alloca %union.tree_node*, align 8
  %xop1 = alloca %union.tree_node*, align 8
  %xresult_type = alloca %union.tree_node*, align 8
  %xresultcode = alloca i32, align 4
  %unsignedp0 = alloca i32, align 4
  %unsignedp1 = alloca i32, align 4
  %tobool = icmp eq i32 %convert_p, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %orig_op0) #7
  %call1 = call %union.tree_node* @default_conversion(%union.tree_node* %orig_op1) #7
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %op1.0 = phi %union.tree_node* [ %call1, %if.then ], [ %orig_op1, %entry ]
  %op0.0 = phi %union.tree_node* [ %call, %if.then ], [ %orig_op0, %entry ]
  %type = getelementptr inbounds %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !0
  %type4 = getelementptr inbounds %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type4, align 8, !tbaa !0
  %code6 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code6 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 255
  %code8 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %3 = bitcast [4 x i8]* %code8 to i32*
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %if.end
  %op0.1 = phi %union.tree_node* [ %op0.0, %if.end ], [ %6, %land.rhs ]
  %code12 = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %code12 to i32*
  %bf.load13 = load i32* %5, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %bf.clear14.off = add i32 %bf.clear14, -114
  %switch = icmp ult i32 %bf.clear14.off, 3
  br i1 %switch, label %land.lhs.true, label %while.cond38

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %6 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %cmp26 = icmp eq %union.tree_node* %6, %4
  br i1 %cmp26, label %while.cond38, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type33 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type33, align 8, !tbaa !0
  %cmp34 = icmp eq %union.tree_node* %0, %7
  br i1 %cmp34, label %while.cond, label %while.cond38

while.cond38:                                     ; preds = %while.cond, %land.lhs.true, %land.rhs, %land.rhs61
  %op1.1 = phi %union.tree_node* [ %9, %land.rhs61 ], [ %op1.0, %land.rhs ], [ %op1.0, %land.lhs.true ], [ %op1.0, %while.cond ]
  %code40 = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %code40 to i32*
  %bf.load41 = load i32* %8, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %bf.clear42.off = add i32 %bf.clear42, -114
  %switch1659 = icmp ult i32 %bf.clear42.off, 3
  br i1 %switch1659, label %land.lhs.true56, label %while.end75

land.lhs.true56:                                  ; preds = %while.cond38
  %operands58 = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 2
  %arrayidx59 = bitcast i32* %operands58 to %union.tree_node**
  %9 = load %union.tree_node** %arrayidx59, align 8, !tbaa !0
  %cmp60 = icmp eq %union.tree_node* %9, %4
  br i1 %cmp60, label %while.end75, label %land.rhs61

land.rhs61:                                       ; preds = %land.lhs.true56
  %type68 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type68, align 8, !tbaa !0
  %cmp69 = icmp eq %union.tree_node* %1, %10
  br i1 %cmp69, label %while.cond38, label %while.end75

while.end75:                                      ; preds = %while.cond38, %land.lhs.true56, %land.rhs61
  %cmp76 = icmp eq i32 %bf.clear, 0
  %cmp78 = icmp eq i32 %bf.clear10, 0
  %or.cond1629 = or i1 %cmp76, %cmp78
  br i1 %or.cond1629, label %return, label %if.end80

if.end80:                                         ; preds = %while.end75
  switch i32 %code, label %sw.epilog [
    i32 59, label %sw.bb
    i32 60, label %sw.bb95
    i32 61, label %sw.bb113
    i32 62, label %sw.bb114
    i32 63, label %sw.bb114
    i32 64, label %sw.bb114
    i32 65, label %sw.bb114
    i32 71, label %sw.bb114
    i32 88, label %sw.bb157
    i32 89, label %sw.bb157
    i32 86, label %sw.bb157
    i32 87, label %sw.bb157
    i32 66, label %sw.bb163
    i32 68, label %sw.bb163
    i32 91, label %sw.bb198
    i32 92, label %sw.bb198
    i32 93, label %sw.bb198
    i32 94, label %sw.bb198
    i32 95, label %sw.bb198
    i32 83, label %sw.bb218
    i32 82, label %sw.bb261
    i32 85, label %sw.bb308
    i32 84, label %sw.bb308
    i32 101, label %sw.bb355
    i32 102, label %sw.bb355
    i32 79, label %sw.bb508
    i32 78, label %sw.bb508
    i32 98, label %sw.bb548
    i32 100, label %sw.bb548
    i32 97, label %sw.bb548
    i32 99, label %sw.bb548
    i32 103, label %sw.bb667
    i32 104, label %sw.bb667
    i32 105, label %sw.bb667
    i32 106, label %sw.bb667
    i32 107, label %sw.bb667
    i32 108, label %sw.bb667
    i32 109, label %sw.bb667
  ]

sw.bb:                                            ; preds = %if.end80
  %cmp81 = icmp eq i32 %bf.clear, 13
  %cmp83 = icmp eq i32 %bf.clear10, 6
  %or.cond1630 = and i1 %cmp81, %cmp83
  br i1 %or.cond1630, label %if.then84, label %if.else86

if.then84:                                        ; preds = %sw.bb
  %call85 = call %union.tree_node* @pointer_int_sum(i32 59, %union.tree_node* %op0.1, %union.tree_node* %op1.1) #8
  br label %return

if.else86:                                        ; preds = %sw.bb
  %cmp87 = icmp eq i32 %bf.clear10, 13
  %cmp89 = icmp eq i32 %bf.clear, 6
  %or.cond1631 = and i1 %cmp87, %cmp89
  br i1 %or.cond1631, label %if.then90, label %sw.epilog

if.then90:                                        ; preds = %if.else86
  %call91 = call %union.tree_node* @pointer_int_sum(i32 59, %union.tree_node* %op1.1, %union.tree_node* %op0.1) #8
  br label %return

sw.bb95:                                          ; preds = %if.end80
  %cmp96 = icmp eq i32 %bf.clear, 13
  %cmp98 = icmp eq i32 %bf.clear10, 13
  %or.cond1632 = and i1 %cmp96, %cmp98
  br i1 %or.cond1632, label %land.lhs.true99, label %if.else104

land.lhs.true99:                                  ; preds = %sw.bb95
  %call100 = call fastcc i32 @comp_target_types(%union.tree_node* %0, %union.tree_node* %1) #7
  %tobool101 = icmp eq i32 %call100, 0
  br i1 %tobool101, label %if.else104, label %if.then102

if.then102:                                       ; preds = %land.lhs.true99
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 30), align 8, !tbaa !0
  %type.i = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type.i, align 8, !tbaa !0
  %type2.i = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type2.i, align 8, !tbaa !0
  %14 = load i32* @pedantic, align 4, !tbaa !3
  %15 = load i32* @warn_pointer_arith, align 4, !tbaa !3
  %16 = or i32 %15, %14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %if.end13.i, label %if.then.i

if.then.i:                                        ; preds = %if.then102
  %code.i = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %18 = bitcast [4 x i8]* %code.i to i32*
  %bf.load.i = load i32* %18, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp.i = icmp eq i32 %bf.clear.i, 5
  br i1 %cmp.i, label %if.then5.i, label %if.end.i

if.then5.i:                                       ; preds = %if.then.i
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([45 x i8]* @.str178, i64 0, i64 0)) #8
  %bf.load8.i.pre = load i32* %18, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then5.i, %if.then.i
  %bf.load8.i = phi i32 [ %bf.load8.i.pre, %if.then5.i ], [ %bf.load.i, %if.then.i ]
  %bf.clear9.i = and i32 %bf.load8.i, 255
  %cmp10.i = icmp eq i32 %bf.clear9.i, 23
  br i1 %cmp10.i, label %if.then11.i, label %if.end13.i

if.then11.i:                                      ; preds = %if.end.i
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([42 x i8]* @.str179, i64 0, i64 0)) #8
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then11.i, %if.end.i, %if.then102
  %bf.load16.i = load i32* %5, align 8
  %bf.clear17.i = and i32 %bf.load16.i, 255
  %cmp18.i = icmp eq i32 %bf.clear17.i, 115
  br i1 %cmp18.i, label %cond.true.i, label %cond.end.i

cond.true.i:                                      ; preds = %if.end13.i
  %operands.i = getelementptr inbounds %union.tree_node* %op0.1, i64 0, i32 0, i32 2
  %arrayidx.i = bitcast i32* %operands.i to %union.tree_node**
  %19 = load %union.tree_node** %arrayidx.i, align 8, !tbaa !0
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.end13.i
  %cond.i = phi %union.tree_node* [ %19, %cond.true.i ], [ %op0.1, %if.end13.i ]
  %bf.load21.i = load i32* %8, align 8
  %bf.clear22.i = and i32 %bf.load21.i, 255
  %cmp23.i = icmp eq i32 %bf.clear22.i, 115
  br i1 %cmp23.i, label %cond.true24.i, label %cond.end29.i

cond.true24.i:                                    ; preds = %cond.end.i
  %operands26.i = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 2
  %arrayidx27.i = bitcast i32* %operands26.i to %union.tree_node**
  %20 = load %union.tree_node** %arrayidx27.i, align 8, !tbaa !0
  br label %cond.end29.i

cond.end29.i:                                     ; preds = %cond.end.i, %cond.true24.i
  %cond30.i = phi %union.tree_node* [ %20, %cond.true24.i ], [ %op1.1, %cond.end.i ]
  %code32.i = getelementptr inbounds %union.tree_node* %cond.i, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast [4 x i8]* %code32.i to i32*
  %bf.load33.i = load i32* %21, align 8
  %bf.clear34.i = and i32 %bf.load33.i, 255
  %cmp35.i = icmp eq i32 %bf.clear34.i, 59
  br i1 %cmp35.i, label %if.then36.i, label %if.end43.i

if.then36.i:                                      ; preds = %cond.end29.i
  %operands38.i = getelementptr inbounds %union.tree_node* %cond.i, i64 0, i32 0, i32 2
  %arrayidx39.i = getelementptr inbounds i32* %operands38.i, i64 2
  %22 = bitcast i32* %arrayidx39.i to %union.tree_node**
  %arrayidx42.i = bitcast i32* %operands38.i to %union.tree_node**
  %23 = load %union.tree_node** %arrayidx42.i, align 8, !tbaa !0
  br label %if.end43.i

if.end43.i:                                       ; preds = %cond.end29.i, %if.then36.i
  %con0.0.i = phi %union.tree_node* [ %23, %if.then36.i ], [ %cond.i, %cond.end29.i ]
  %lit0.0.in.i = phi %union.tree_node** [ %22, %if.then36.i ], [ getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), %cond.end29.i ]
  %lit0.0.i = load %union.tree_node** %lit0.0.in.i, align 8
  %code45.i = getelementptr inbounds %union.tree_node* %cond30.i, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast [4 x i8]* %code45.i to i32*
  %bf.load46.i = load i32* %24, align 8
  %bf.clear47.i = and i32 %bf.load46.i, 255
  %cmp48.i = icmp eq i32 %bf.clear47.i, 59
  br i1 %cmp48.i, label %if.then49.i, label %if.end57.i

if.then49.i:                                      ; preds = %if.end43.i
  %operands51.i = getelementptr inbounds %union.tree_node* %cond30.i, i64 0, i32 0, i32 2
  %arrayidx52.i = getelementptr inbounds i32* %operands51.i, i64 2
  %25 = bitcast i32* %arrayidx52.i to %union.tree_node**
  %arrayidx55.i = bitcast i32* %operands51.i to %union.tree_node**
  %26 = load %union.tree_node** %arrayidx55.i, align 8, !tbaa !0
  br label %if.end57.i

if.end57.i:                                       ; preds = %if.then49.i, %if.end43.i
  %con1.0.i = phi %union.tree_node* [ %26, %if.then49.i ], [ %cond30.i, %if.end43.i ]
  %lit1.0.in.i = phi %union.tree_node** [ %25, %if.then49.i ], [ getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), %if.end43.i ]
  %lit1.0.i = load %union.tree_node** %lit1.0.in.i, align 8
  %call.i = call i32 @operand_equal_p(%union.tree_node* %con0.0.i, %union.tree_node* %con1.0.i, i32 0) #8
  %tobool58.i = icmp eq i32 %call.i, 0
  %op1.lit1.0.i = select i1 %tobool58.i, %union.tree_node* %op1.1, %union.tree_node* %lit1.0.i
  %op0.lit0.0.i = select i1 %tobool58.i, %union.tree_node* %op0.1, %union.tree_node* %lit0.0.i
  %call61.i = call %union.tree_node* @convert(%union.tree_node* %11, %union.tree_node* %op0.lit0.0.i) #8
  %call62.i = call %union.tree_node* @convert(%union.tree_node* %11, %union.tree_node* %op1.lit1.0.i) #8
  %call63.i = call %union.tree_node* @build_binary_op(i32 60, %union.tree_node* %call61.i, %union.tree_node* %call62.i, i32 0) #8
  %type65.i = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 1
  %27 = load %union.tree_node** %type65.i, align 8, !tbaa !0
  %type67.i = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 1
  %28 = load %union.tree_node** %type67.i, align 8, !tbaa !0
  %size.i = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 2
  %29 = bitcast i32* %size.i to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !0
  %cmp69.i = icmp eq %union.tree_node* %30, null
  br i1 %cmp69.i, label %lor.lhs.false70.i, label %if.end81.i

lor.lhs.false70.i:                                ; preds = %if.end57.i
  %code76.i = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast [4 x i8]* %code76.i to i32*
  %bf.load77.i = load i32* %31, align 8
  %bf.clear78.i = and i32 %bf.load77.i, 255
  %cmp79.i = icmp eq i32 %bf.clear78.i, 5
  br i1 %cmp79.i, label %if.end81.i, label %if.then80.i

if.then80.i:                                      ; preds = %lor.lhs.false70.i
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str14, i64 0, i64 0)) #8
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.then80.i, %lor.lhs.false70.i, %if.end57.i
  %call82.i = call %union.tree_node* @c_size_in_bytes(%union.tree_node* %13) #8
  %call83.i = call %union.tree_node* @convert(%union.tree_node* %11, %union.tree_node* %call82.i) #8
  %call84.i = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 71, %union.tree_node* %11, %union.tree_node* %call63.i, %union.tree_node* %call83.i) #8
  %call85.i = call %union.tree_node* @fold(%union.tree_node* %call84.i) #8
  %cmp86.i = icmp eq %union.tree_node* %call85.i, %call84.i
  br i1 %cmp86.i, label %if.then87.i, label %return

if.then87.i:                                      ; preds = %if.end81.i
  %constant_flag.i = getelementptr inbounds %union.tree_node* %call63.i, i64 0, i32 0, i32 0, i32 2
  %32 = bitcast [4 x i8]* %constant_flag.i to i32*
  %bf.load89.i = load i32* %32, align 8
  %constant_flag92.i = getelementptr inbounds %union.tree_node* %call82.i, i64 0, i32 0, i32 0, i32 2
  %33 = bitcast [4 x i8]* %constant_flag92.i to i32*
  %bf.load93.i = load i32* %33, align 8
  %constant_flag97.i = getelementptr inbounds %union.tree_node* %call84.i, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast [4 x i8]* %constant_flag97.i to i32*
  %bf.load98.i = load i32* %34, align 8
  %bf.load93.mask.i = and i32 %bf.load89.i, 512
  %bf.shl.i = and i32 %bf.load93.mask.i, %bf.load93.i
  %bf.clear99.i = and i32 %bf.load98.i, -513
  %bf.set.i = or i32 %bf.clear99.i, %bf.shl.i
  store i32 %bf.set.i, i32* %34, align 8
  br label %return

if.else104:                                       ; preds = %land.lhs.true99, %sw.bb95
  %cmp107 = icmp eq i32 %bf.clear10, 6
  %or.cond1633 = and i1 %cmp96, %cmp107
  br i1 %or.cond1633, label %if.then108, label %sw.epilog

if.then108:                                       ; preds = %if.else104
  %call109 = call %union.tree_node* @pointer_int_sum(i32 60, %union.tree_node* %op0.1, %union.tree_node* %op1.1) #8
  br label %return

sw.bb113:                                         ; preds = %if.end80
  br label %sw.epilog

sw.bb114:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  %35 = load i32* @warn_div_by_zero, align 4, !tbaa !3
  %tobool115 = icmp ne i32 %35, 0
  %36 = load i32* @skip_evaluation, align 4, !tbaa !3
  %cmp117 = icmp eq i32 %36, 0
  %or.cond = and i1 %tobool115, %cmp117
  br i1 %or.cond, label %land.lhs.true118, label %if.end122

land.lhs.true118:                                 ; preds = %sw.bb114
  %call119 = call i32 @integer_zerop(%union.tree_node* %op1.1) #8
  %tobool120 = icmp eq i32 %call119, 0
  br i1 %tobool120, label %if.end122, label %if.then121

if.then121:                                       ; preds = %land.lhs.true118
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([17 x i8]* @.str45, i64 0, i64 0)) #8
  br label %if.end122

if.end122:                                        ; preds = %land.lhs.true118, %if.then121, %sw.bb114
  %37 = and i32 %bf.load, 254
  %38 = icmp eq i32 %37, 6
  %cmp127 = icmp eq i32 %bf.clear, 8
  %or.cond1301 = or i1 %38, %cmp127
  br i1 %or.cond1301, label %land.lhs.true128, label %sw.epilog

land.lhs.true128:                                 ; preds = %if.end122
  %39 = and i32 %bf.load9, 254
  %40 = icmp eq i32 %39, 6
  %cmp133 = icmp eq i32 %bf.clear10, 8
  %or.cond1303 = or i1 %40, %cmp133
  br i1 %or.cond1303, label %if.then134, label %sw.epilog

if.then134:                                       ; preds = %land.lhs.true128
  %cmp123.not = icmp ne i32 %bf.clear, 6
  %cmp129.not = icmp ne i32 %bf.clear10, 6
  %brmerge = or i1 %cmp123.not, %cmp129.not
  br i1 %brmerge, label %sw.epilog, label %if.else139

if.else139:                                       ; preds = %if.then134
  %type141 = getelementptr inbounds %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 1
  %41 = load %union.tree_node** %type141, align 8, !tbaa !0
  %unsigned_flag = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 0, i32 2
  %42 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load143 = load i32* %42, align 8
  %bf.clear144 = and i32 %bf.load143, 8192
  %tobool145 = icmp eq i32 %bf.clear144, 0
  br i1 %tobool145, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.else139
  %bf.load148 = load i32* %8, align 8
  %bf.clear149 = and i32 %bf.load148, 255
  %cmp150 = icmp eq i32 %bf.clear149, 25
  br i1 %cmp150, label %land.rhs151, label %lor.end

land.rhs151:                                      ; preds = %lor.rhs
  %call152 = call i32 @integer_all_onesp(%union.tree_node* %op1.1) #8
  %lnot = icmp eq i32 %call152, 0
  br label %lor.end

lor.end:                                          ; preds = %if.else139, %lor.rhs, %land.rhs151
  %43 = phi i1 [ true, %if.else139 ], [ false, %lor.rhs ], [ %lnot, %land.rhs151 ]
  %lor.ext = zext i1 %43 to i32
  br label %sw.epilog

sw.bb157:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80
  %cmp158 = icmp eq i32 %bf.clear, 6
  %cmp160 = icmp eq i32 %bf.clear10, 6
  %or.cond1634 = and i1 %cmp158, %cmp160
  %.1660 = sext i1 %or.cond1634 to i32
  br label %sw.epilog

sw.bb163:                                         ; preds = %if.end80, %if.end80
  %44 = load i32* @warn_div_by_zero, align 4, !tbaa !3
  %tobool164 = icmp ne i32 %44, 0
  %45 = load i32* @skip_evaluation, align 4, !tbaa !3
  %cmp166 = icmp eq i32 %45, 0
  %or.cond1304 = and i1 %tobool164, %cmp166
  br i1 %or.cond1304, label %land.lhs.true167, label %if.end171

land.lhs.true167:                                 ; preds = %sw.bb163
  %call168 = call i32 @integer_zerop(%union.tree_node* %op1.1) #8
  %tobool169 = icmp eq i32 %call168, 0
  br i1 %tobool169, label %if.end171, label %if.then170

if.then170:                                       ; preds = %land.lhs.true167
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([17 x i8]* @.str45, i64 0, i64 0)) #8
  br label %if.end171

if.end171:                                        ; preds = %land.lhs.true167, %if.then170, %sw.bb163
  %cmp172 = icmp eq i32 %bf.clear, 6
  %cmp174 = icmp eq i32 %bf.clear10, 6
  %or.cond1635 = and i1 %cmp172, %cmp174
  br i1 %or.cond1635, label %if.then175, label %sw.epilog

if.then175:                                       ; preds = %if.end171
  %type177 = getelementptr inbounds %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 1
  %46 = load %union.tree_node** %type177, align 8, !tbaa !0
  %unsigned_flag179 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %47 = bitcast [4 x i8]* %unsigned_flag179 to i32*
  %bf.load180 = load i32* %47, align 8
  %bf.clear182 = and i32 %bf.load180, 8192
  %tobool183 = icmp eq i32 %bf.clear182, 0
  br i1 %tobool183, label %lor.rhs184, label %lor.end195

lor.rhs184:                                       ; preds = %if.then175
  %bf.load187 = load i32* %8, align 8
  %bf.clear188 = and i32 %bf.load187, 255
  %cmp189 = icmp eq i32 %bf.clear188, 25
  br i1 %cmp189, label %land.rhs190, label %lor.end195

land.rhs190:                                      ; preds = %lor.rhs184
  %call191 = call i32 @integer_all_onesp(%union.tree_node* %op1.1) #8
  %lnot193 = icmp eq i32 %call191, 0
  br label %lor.end195

lor.end195:                                       ; preds = %if.then175, %lor.rhs184, %land.rhs190
  %48 = phi i1 [ true, %if.then175 ], [ false, %lor.rhs184 ], [ %lnot193, %land.rhs190 ]
  %lor.ext196 = zext i1 %48 to i32
  br label %sw.epilog

sw.bb198:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  switch i32 %bf.clear, label %sw.epilog [
    i32 13, label %land.lhs.true206
    i32 8, label %land.lhs.true206
    i32 7, label %land.lhs.true206
    i32 6, label %land.lhs.true206
  ]

land.lhs.true206:                                 ; preds = %sw.bb198, %sw.bb198, %sw.bb198, %sw.bb198
  switch i32 %bf.clear10, label %sw.epilog [
    i32 13, label %if.then214
    i32 8, label %if.then214
    i32 7, label %if.then214
    i32 6, label %if.then214
  ]

if.then214:                                       ; preds = %land.lhs.true206, %land.lhs.true206, %land.lhs.true206, %land.lhs.true206
  %49 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %call215 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %op0.1) #8
  %call216 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %op1.1) #8
  br label %sw.epilog

sw.bb218:                                         ; preds = %if.end80
  %cmp219 = icmp eq i32 %bf.clear, 6
  %cmp221 = icmp eq i32 %bf.clear10, 6
  %or.cond1636 = and i1 %cmp219, %cmp221
  br i1 %or.cond1636, label %if.then222, label %sw.epilog

if.then222:                                       ; preds = %sw.bb218
  %cmp227 = icmp eq i32 %bf.clear42, 25
  %50 = load i32* @skip_evaluation, align 4, !tbaa !3
  %cmp229 = icmp eq i32 %50, 0
  %or.cond1311 = and i1 %cmp227, %cmp229
  br i1 %or.cond1311, label %if.then230, label %if.end248

if.then230:                                       ; preds = %if.then222
  %call231 = call i32 @tree_int_cst_sgn(%union.tree_node* %op1.1) #8
  %cmp232 = icmp slt i32 %call231, 0
  br i1 %cmp232, label %if.then233, label %if.else234

if.then233:                                       ; preds = %if.then230
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str46, i64 0, i64 0)) #8
  br label %if.end248

if.else234:                                       ; preds = %if.then230
  %call235 = call i32 @integer_zerop(%union.tree_node* %op1.1) #8
  %tobool236 = icmp eq i32 %call235, 0
  %. = zext i1 %tobool236 to i32
  %type239 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type239, i64 0, i32 6
  %51 = bitcast [4 x i8]* %precision to i32*
  %bf.load240 = load i32* %51, align 4
  %bf.clear241 = and i32 %bf.load240, 511
  %conv = zext i32 %bf.clear241 to i64
  %call242 = call i32 @compare_tree_int(%union.tree_node* %op1.1, i64 %conv) #8
  %cmp243 = icmp sgt i32 %call242, -1
  br i1 %cmp243, label %if.then245, label %if.end248

if.then245:                                       ; preds = %if.else234
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([35 x i8]* @.str47, i64 0, i64 0)) #8
  br label %if.end248

if.end248:                                        ; preds = %if.then233, %if.then245, %if.else234, %if.then222
  %short_shift.1 = phi i32 [ 0, %if.then233 ], [ %., %if.then245 ], [ %., %if.else234 ], [ 0, %if.then222 ]
  %52 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool249 = icmp eq i32 %52, 0
  br i1 %tobool249, label %if.then250, label %sw.epilog

if.then250:                                       ; preds = %if.end248
  %type252 = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 1
  %53 = load %union.tree_node** %type252, align 8, !tbaa !0
  %54 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 15
  %55 = load %union.tree_node** %54, align 8, !tbaa !0
  %56 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp254 = icmp eq %union.tree_node* %55, %56
  br i1 %cmp254, label %sw.epilog, label %if.then256

if.then256:                                       ; preds = %if.then250
  %call257 = call %union.tree_node* @convert(%union.tree_node* %56, %union.tree_node* %op1.1) #8
  br label %sw.epilog

sw.bb261:                                         ; preds = %if.end80
  %cmp262 = icmp eq i32 %bf.clear, 6
  %cmp265 = icmp eq i32 %bf.clear10, 6
  %or.cond1637 = and i1 %cmp262, %cmp265
  br i1 %or.cond1637, label %if.then267, label %sw.epilog

if.then267:                                       ; preds = %sw.bb261
  %cmp272 = icmp eq i32 %bf.clear42, 25
  %57 = load i32* @skip_evaluation, align 4, !tbaa !3
  %cmp275 = icmp eq i32 %57, 0
  %or.cond1312 = and i1 %cmp272, %cmp275
  br i1 %or.cond1312, label %if.then277, label %if.end294

if.then277:                                       ; preds = %if.then267
  %call278 = call i32 @tree_int_cst_sgn(%union.tree_node* %op1.1) #8
  %cmp279 = icmp slt i32 %call278, 0
  br i1 %cmp279, label %if.then281, label %if.else282

if.then281:                                       ; preds = %if.then277
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([29 x i8]* @.str48, i64 0, i64 0)) #8
  br label %if.end294

if.else282:                                       ; preds = %if.then277
  %type283 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %precision284 = getelementptr inbounds %struct.tree_type* %type283, i64 0, i32 6
  %58 = bitcast [4 x i8]* %precision284 to i32*
  %bf.load285 = load i32* %58, align 4
  %bf.clear286 = and i32 %bf.load285, 511
  %conv287 = zext i32 %bf.clear286 to i64
  %call288 = call i32 @compare_tree_int(%union.tree_node* %op1.1, i64 %conv287) #8
  %cmp289 = icmp sgt i32 %call288, -1
  br i1 %cmp289, label %if.then291, label %if.end294

if.then291:                                       ; preds = %if.else282
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([34 x i8]* @.str49, i64 0, i64 0)) #8
  br label %if.end294

if.end294:                                        ; preds = %if.then281, %if.then291, %if.else282, %if.then267
  %59 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool295 = icmp eq i32 %59, 0
  br i1 %tobool295, label %if.then296, label %sw.epilog

if.then296:                                       ; preds = %if.end294
  %type298 = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 1
  %60 = load %union.tree_node** %type298, align 8, !tbaa !0
  %61 = getelementptr inbounds %union.tree_node* %60, i64 0, i32 0, i32 15
  %62 = load %union.tree_node** %61, align 8, !tbaa !0
  %63 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp301 = icmp eq %union.tree_node* %62, %63
  br i1 %cmp301, label %sw.epilog, label %if.then303

if.then303:                                       ; preds = %if.then296
  %call304 = call %union.tree_node* @convert(%union.tree_node* %63, %union.tree_node* %op1.1) #8
  br label %sw.epilog

sw.bb308:                                         ; preds = %if.end80, %if.end80
  %cmp309 = icmp eq i32 %bf.clear, 6
  %cmp312 = icmp eq i32 %bf.clear10, 6
  %or.cond1638 = and i1 %cmp309, %cmp312
  br i1 %or.cond1638, label %if.then314, label %sw.epilog

if.then314:                                       ; preds = %sw.bb308
  %cmp319 = icmp eq i32 %bf.clear42, 25
  %64 = load i32* @skip_evaluation, align 4, !tbaa !3
  %cmp322 = icmp eq i32 %64, 0
  %or.cond1313 = and i1 %cmp319, %cmp322
  br i1 %or.cond1313, label %if.then324, label %if.end341

if.then324:                                       ; preds = %if.then314
  %call325 = call i32 @tree_int_cst_sgn(%union.tree_node* %op1.1) #8
  %cmp326 = icmp slt i32 %call325, 0
  br i1 %cmp326, label %if.then328, label %if.else329

if.then328:                                       ; preds = %if.then324
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([24 x i8]* @.str50, i64 0, i64 0)) #8
  br label %if.end341

if.else329:                                       ; preds = %if.then324
  %type330 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %precision331 = getelementptr inbounds %struct.tree_type* %type330, i64 0, i32 6
  %65 = bitcast [4 x i8]* %precision331 to i32*
  %bf.load332 = load i32* %65, align 4
  %bf.clear333 = and i32 %bf.load332, 511
  %conv334 = zext i32 %bf.clear333 to i64
  %call335 = call i32 @compare_tree_int(%union.tree_node* %op1.1, i64 %conv334) #8
  %cmp336 = icmp sgt i32 %call335, -1
  br i1 %cmp336, label %if.then338, label %if.end341

if.then338:                                       ; preds = %if.else329
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([29 x i8]* @.str51, i64 0, i64 0)) #8
  br label %if.end341

if.end341:                                        ; preds = %if.then328, %if.then338, %if.else329, %if.then314
  %66 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool342 = icmp eq i32 %66, 0
  br i1 %tobool342, label %if.then343, label %sw.epilog

if.then343:                                       ; preds = %if.end341
  %type345 = getelementptr inbounds %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 1
  %67 = load %union.tree_node** %type345, align 8, !tbaa !0
  %68 = getelementptr inbounds %union.tree_node* %67, i64 0, i32 0, i32 15
  %69 = load %union.tree_node** %68, align 8, !tbaa !0
  %70 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp348 = icmp eq %union.tree_node* %69, %70
  br i1 %cmp348, label %sw.epilog, label %if.then350

if.then350:                                       ; preds = %if.then343
  %call351 = call %union.tree_node* @convert(%union.tree_node* %70, %union.tree_node* %op1.1) #8
  br label %sw.epilog

sw.bb355:                                         ; preds = %if.end80, %if.end80
  %71 = load i32* @warn_float_equal, align 4, !tbaa !3
  %tobool356 = icmp eq i32 %71, 0
  br i1 %tobool356, label %if.end364, label %land.lhs.true357

land.lhs.true357:                                 ; preds = %sw.bb355
  %cmp358 = icmp eq i32 %bf.clear, 7
  %cmp361 = icmp eq i32 %bf.clear10, 7
  %or.cond1639 = or i1 %cmp358, %cmp361
  br i1 %or.cond1639, label %if.then363, label %if.end364

if.then363:                                       ; preds = %land.lhs.true357
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([49 x i8]* @.str52, i64 0, i64 0)) #8
  br label %if.end364

if.end364:                                        ; preds = %land.lhs.true357, %sw.bb355, %if.then363
  %72 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp365 = icmp eq i32 %bf.clear, 6
  %73 = and i32 %bf.load, 254
  %74 = icmp eq i32 %73, 6
  %cmp371 = icmp eq i32 %bf.clear, 8
  %or.cond1315 = or i1 %74, %cmp371
  br i1 %or.cond1315, label %land.lhs.true373, label %if.else383

land.lhs.true373:                                 ; preds = %if.end364
  %75 = and i32 %bf.load9, 254
  %76 = icmp eq i32 %75, 6
  %cmp380 = icmp eq i32 %bf.clear10, 8
  %or.cond1317 = or i1 %76, %cmp380
  br i1 %or.cond1317, label %sw.epilog, label %if.else383

if.else383:                                       ; preds = %land.lhs.true373, %if.end364
  %cmp384 = icmp eq i32 %bf.clear, 13
  %cmp387 = icmp eq i32 %bf.clear10, 13
  %or.cond1640 = and i1 %cmp384, %cmp387
  br i1 %or.cond1640, label %if.then389, label %if.else454

if.then389:                                       ; preds = %if.else383
  %type391 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %77 = load %union.tree_node** %type391, align 8, !tbaa !0
  %type393 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %78 = load %union.tree_node** %type393, align 8, !tbaa !0
  %call394 = call fastcc i32 @comp_target_types(%union.tree_node* %0, %union.tree_node* %1) #7
  %tobool395 = icmp eq i32 %call394, 0
  br i1 %tobool395, label %if.else398, label %if.then396

if.then396:                                       ; preds = %if.then389
  %call397 = call %union.tree_node* @common_type(%union.tree_node* %0, %union.tree_node* %1) #7
  br label %if.end449

if.else398:                                       ; preds = %if.then389
  %code400 = getelementptr inbounds %union.tree_node* %77, i64 0, i32 0, i32 0, i32 2
  %79 = bitcast [4 x i8]* %code400 to i32*
  %bf.load401 = load i32* %79, align 8
  %bf.clear402 = and i32 %bf.load401, 255
  %cmp403 = icmp eq i32 %bf.clear402, 5
  br i1 %cmp403, label %if.then405, label %if.else422

if.then405:                                       ; preds = %if.else398
  %80 = load i32* @pedantic, align 4, !tbaa !3
  %tobool406 = icmp eq i32 %80, 0
  br i1 %tobool406, label %if.end449, label %land.lhs.true407

land.lhs.true407:                                 ; preds = %if.then405
  %call408 = call i32 @integer_zerop(%union.tree_node* %op0.1) #8
  %tobool409 = icmp ne i32 %call408, 0
  %cmp411 = icmp eq %union.tree_node* %op0.1, %orig_op0
  %or.cond1641 = and i1 %tobool409, %cmp411
  br i1 %or.cond1641, label %if.end449, label %land.lhs.true413

land.lhs.true413:                                 ; preds = %land.lhs.true407
  %code415 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 2
  %81 = bitcast [4 x i8]* %code415 to i32*
  %bf.load416 = load i32* %81, align 8
  %bf.clear417 = and i32 %bf.load416, 255
  %cmp418 = icmp eq i32 %bf.clear417, 23
  br i1 %cmp418, label %if.then420, label %if.end449

if.then420:                                       ; preds = %land.lhs.true413
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([59 x i8]* @.str53, i64 0, i64 0)) #8
  br label %if.end449

if.else422:                                       ; preds = %if.else398
  %code424 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 2
  %82 = bitcast [4 x i8]* %code424 to i32*
  %bf.load425 = load i32* %82, align 8
  %bf.clear426 = and i32 %bf.load425, 255
  %cmp427 = icmp eq i32 %bf.clear426, 5
  br i1 %cmp427, label %if.then429, label %if.else446

if.then429:                                       ; preds = %if.else422
  %83 = load i32* @pedantic, align 4, !tbaa !3
  %tobool430 = icmp eq i32 %83, 0
  br i1 %tobool430, label %if.end449, label %land.lhs.true431

land.lhs.true431:                                 ; preds = %if.then429
  %call432 = call i32 @integer_zerop(%union.tree_node* %op1.1) #8
  %tobool433 = icmp ne i32 %call432, 0
  %cmp435 = icmp eq %union.tree_node* %op1.1, %orig_op1
  %or.cond1642 = and i1 %tobool433, %cmp435
  br i1 %or.cond1642, label %if.end449, label %land.lhs.true437

land.lhs.true437:                                 ; preds = %land.lhs.true431
  %bf.load440 = load i32* %79, align 8
  %bf.clear441 = and i32 %bf.load440, 255
  %cmp442 = icmp eq i32 %bf.clear441, 23
  br i1 %cmp442, label %if.then444, label %if.end449

if.then444:                                       ; preds = %land.lhs.true437
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([59 x i8]* @.str53, i64 0, i64 0)) #8
  br label %if.end449

if.else446:                                       ; preds = %if.else422
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([50 x i8]* @.str54, i64 0, i64 0)) #8
  br label %if.end449

if.end449:                                        ; preds = %land.lhs.true431, %land.lhs.true407, %if.then405, %if.then429, %if.then420, %land.lhs.true413, %land.lhs.true437, %if.then444, %if.else446, %if.then396
  %result_type.0 = phi %union.tree_node* [ %call397, %if.then396 ], [ null, %if.then420 ], [ null, %land.lhs.true413 ], [ null, %if.then405 ], [ null, %if.then444 ], [ null, %land.lhs.true437 ], [ null, %if.then429 ], [ null, %if.else446 ], [ null, %land.lhs.true407 ], [ null, %land.lhs.true431 ]
  %cmp450 = icmp eq %union.tree_node* %result_type.0, null
  %84 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !0
  %.result_type.0 = select i1 %cmp450, %union.tree_node* %84, %union.tree_node* %result_type.0
  br label %sw.epilog

if.else454:                                       ; preds = %if.else383
  br i1 %cmp384, label %land.lhs.true457, label %if.else468

land.lhs.true457:                                 ; preds = %if.else454
  %bf.load460 = load i32* %8, align 8
  %bf.clear461 = and i32 %bf.load460, 255
  %cmp462 = icmp eq i32 %bf.clear461, 25
  br i1 %cmp462, label %land.lhs.true464, label %if.else468

land.lhs.true464:                                 ; preds = %land.lhs.true457
  %call465 = call i32 @integer_zerop(%union.tree_node* %op1.1) #8
  %tobool466 = icmp eq i32 %call465, 0
  br i1 %tobool466, label %if.else468, label %sw.epilog

if.else468:                                       ; preds = %land.lhs.true464, %land.lhs.true457, %if.else454
  br i1 %cmp387, label %land.lhs.true471, label %if.else482

land.lhs.true471:                                 ; preds = %if.else468
  %bf.load474 = load i32* %5, align 8
  %bf.clear475 = and i32 %bf.load474, 255
  %cmp476 = icmp eq i32 %bf.clear475, 25
  br i1 %cmp476, label %land.lhs.true478, label %if.else492

land.lhs.true478:                                 ; preds = %land.lhs.true471
  %call479 = call i32 @integer_zerop(%union.tree_node* %op0.1) #8
  %tobool480 = icmp eq i32 %call479, 0
  br i1 %tobool480, label %if.else482, label %sw.epilog

if.else482:                                       ; preds = %land.lhs.true478, %if.else468
  %cmp486 = icmp eq i32 %bf.clear10, 6
  %or.cond1643 = and i1 %cmp384, %cmp486
  br i1 %or.cond1643, label %if.then488, label %if.else492

if.then488:                                       ; preds = %if.else482
  %85 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool489 = icmp eq i32 %85, 0
  br i1 %tobool489, label %if.then490, label %sw.epilog

if.then490:                                       ; preds = %if.then488
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str55, i64 0, i64 0)) #8
  br label %sw.epilog

if.else492:                                       ; preds = %land.lhs.true471, %if.else482
  br i1 %cmp365, label %land.lhs.true495, label %sw.epilog

land.lhs.true495:                                 ; preds = %if.else492
  br i1 %cmp387, label %if.then498, label %sw.epilog

if.then498:                                       ; preds = %land.lhs.true495
  %86 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool499 = icmp eq i32 %86, 0
  br i1 %tobool499, label %if.then500, label %sw.epilog

if.then500:                                       ; preds = %if.then498
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str55, i64 0, i64 0)) #8
  br label %sw.epilog

sw.bb508:                                         ; preds = %if.end80, %if.end80
  %87 = and i32 %bf.load, 254
  %88 = icmp eq i32 %87, 6
  br i1 %88, label %land.lhs.true514, label %if.else521

land.lhs.true514:                                 ; preds = %sw.bb508
  %89 = and i32 %bf.load9, 254
  %90 = icmp eq i32 %89, 6
  br i1 %90, label %sw.epilog, label %if.else521

if.else521:                                       ; preds = %land.lhs.true514, %sw.bb508
  %cmp522 = icmp eq i32 %bf.clear, 13
  %cmp525 = icmp eq i32 %bf.clear10, 13
  %or.cond1644 = and i1 %cmp522, %cmp525
  br i1 %or.cond1644, label %if.then527, label %sw.epilog

if.then527:                                       ; preds = %if.else521
  %call528 = call fastcc i32 @comp_target_types(%union.tree_node* %0, %union.tree_node* %1) #7
  %tobool529 = icmp eq i32 %call528, 0
  br i1 %tobool529, label %if.else544, label %if.then530

if.then530:                                       ; preds = %if.then527
  %call531 = call %union.tree_node* @common_type(%union.tree_node* %0, %union.tree_node* %1) #7
  %91 = load i32* @pedantic, align 4, !tbaa !3
  %tobool532 = icmp eq i32 %91, 0
  br i1 %tobool532, label %sw.epilog, label %land.lhs.true533

land.lhs.true533:                                 ; preds = %if.then530
  %type535 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %92 = load %union.tree_node** %type535, align 8, !tbaa !0
  %code537 = getelementptr inbounds %union.tree_node* %92, i64 0, i32 0, i32 0, i32 2
  %93 = bitcast [4 x i8]* %code537 to i32*
  %bf.load538 = load i32* %93, align 8
  %bf.clear539 = and i32 %bf.load538, 255
  %cmp540 = icmp eq i32 %bf.clear539, 23
  br i1 %cmp540, label %if.then542, label %sw.epilog

if.then542:                                       ; preds = %land.lhs.true533
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([59 x i8]* @.str56, i64 0, i64 0)) #8
  br label %sw.epilog

if.else544:                                       ; preds = %if.then527
  %94 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !0
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([50 x i8]* @.str54, i64 0, i64 0)) #8
  br label %sw.epilog

sw.bb548:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80
  %95 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp549 = icmp eq i32 %bf.clear, 6
  %96 = and i32 %bf.load, 254
  %97 = icmp eq i32 %96, 6
  br i1 %97, label %land.lhs.true554, label %if.else561

land.lhs.true554:                                 ; preds = %sw.bb548
  %98 = and i32 %bf.load9, 254
  %99 = icmp eq i32 %98, 6
  br i1 %99, label %sw.epilog, label %if.else561

if.else561:                                       ; preds = %land.lhs.true554, %sw.bb548
  %cmp562 = icmp eq i32 %bf.clear, 13
  %cmp565 = icmp eq i32 %bf.clear10, 13
  %or.cond1645 = and i1 %cmp562, %cmp565
  br i1 %or.cond1645, label %if.then567, label %if.else605

if.then567:                                       ; preds = %if.else561
  %call568 = call fastcc i32 @comp_target_types(%union.tree_node* %0, %union.tree_node* %1) #7
  %tobool569 = icmp eq i32 %call568, 0
  br i1 %tobool569, label %if.else603, label %if.then570

if.then570:                                       ; preds = %if.then567
  %call571 = call %union.tree_node* @common_type(%union.tree_node* %0, %union.tree_node* %1) #7
  %type573 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %100 = load %union.tree_node** %type573, align 8, !tbaa !0
  %size = getelementptr inbounds %union.tree_node* %100, i64 0, i32 0, i32 2
  %101 = bitcast i32* %size to %union.tree_node**
  %102 = load %union.tree_node** %101, align 8, !tbaa !0
  %lnot577 = icmp eq %union.tree_node* %102, null
  %type579 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %103 = load %union.tree_node** %type579, align 8, !tbaa !0
  %size581 = getelementptr inbounds %union.tree_node* %103, i64 0, i32 0, i32 2
  %104 = bitcast i32* %size581 to %union.tree_node**
  %105 = load %union.tree_node** %104, align 8, !tbaa !0
  %lnot584 = icmp eq %union.tree_node* %105, null
  %cmp586 = xor i1 %lnot577, %lnot584
  br i1 %cmp586, label %if.then588, label %if.else589

if.then588:                                       ; preds = %if.then570
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([47 x i8]* @.str57, i64 0, i64 0)) #8
  br label %sw.epilog

if.else589:                                       ; preds = %if.then570
  %106 = load i32* @pedantic, align 4, !tbaa !3
  %tobool590 = icmp eq i32 %106, 0
  br i1 %tobool590, label %sw.epilog, label %land.lhs.true591

land.lhs.true591:                                 ; preds = %if.else589
  %code595 = getelementptr inbounds %union.tree_node* %100, i64 0, i32 0, i32 0, i32 2
  %107 = bitcast [4 x i8]* %code595 to i32*
  %bf.load596 = load i32* %107, align 8
  %bf.clear597 = and i32 %bf.load596, 255
  %cmp598 = icmp eq i32 %bf.clear597, 23
  br i1 %cmp598, label %if.then600, label %sw.epilog

if.then600:                                       ; preds = %land.lhs.true591
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([59 x i8]* @.str56, i64 0, i64 0)) #8
  br label %sw.epilog

if.else603:                                       ; preds = %if.then567
  %108 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !0
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([50 x i8]* @.str54, i64 0, i64 0)) #8
  br label %sw.epilog

if.else605:                                       ; preds = %if.else561
  %cmp613 = icmp eq i32 %bf.clear42, 25
  %or.cond1687 = and i1 %cmp562, %cmp613
  br i1 %or.cond1687, label %land.lhs.true615, label %if.else624

land.lhs.true615:                                 ; preds = %if.else605
  %call616 = call i32 @integer_zerop(%union.tree_node* %op1.1) #8
  %tobool617 = icmp eq i32 %call616, 0
  br i1 %tobool617, label %if.else624, label %if.then618

if.then618:                                       ; preds = %land.lhs.true615
  %109 = load i32* @pedantic, align 4, !tbaa !3
  %110 = load i32* @extra_warnings, align 4, !tbaa !3
  %111 = or i32 %110, %109
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %sw.epilog, label %if.then622

if.then622:                                       ; preds = %if.then618
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([48 x i8]* @.str58, i64 0, i64 0)) #8
  br label %sw.epilog

if.else624:                                       ; preds = %land.lhs.true615, %if.else605
  br i1 %cmp565, label %land.lhs.true627, label %if.else641

land.lhs.true627:                                 ; preds = %if.else624
  %bf.load630 = load i32* %5, align 8
  %bf.clear631 = and i32 %bf.load630, 255
  %cmp632 = icmp eq i32 %bf.clear631, 25
  br i1 %cmp632, label %land.lhs.true634, label %if.else651

land.lhs.true634:                                 ; preds = %land.lhs.true627
  %call635 = call i32 @integer_zerop(%union.tree_node* %op0.1) #8
  %tobool636 = icmp eq i32 %call635, 0
  br i1 %tobool636, label %if.else641, label %if.then637

if.then637:                                       ; preds = %land.lhs.true634
  %113 = load i32* @pedantic, align 4, !tbaa !3
  %tobool638 = icmp eq i32 %113, 0
  br i1 %tobool638, label %sw.epilog, label %if.then639

if.then639:                                       ; preds = %if.then637
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([48 x i8]* @.str58, i64 0, i64 0)) #8
  br label %sw.epilog

if.else641:                                       ; preds = %land.lhs.true634, %if.else624
  %cmp645 = icmp eq i32 %bf.clear10, 6
  %or.cond1646 = and i1 %cmp562, %cmp645
  br i1 %or.cond1646, label %if.then647, label %if.else651

if.then647:                                       ; preds = %if.else641
  %114 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool648 = icmp eq i32 %114, 0
  br i1 %tobool648, label %if.then649, label %sw.epilog

if.then649:                                       ; preds = %if.then647
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str55, i64 0, i64 0)) #8
  br label %sw.epilog

if.else651:                                       ; preds = %land.lhs.true627, %if.else641
  br i1 %cmp549, label %land.lhs.true654, label %sw.epilog

land.lhs.true654:                                 ; preds = %if.else651
  br i1 %cmp565, label %if.then657, label %sw.epilog

if.then657:                                       ; preds = %land.lhs.true654
  %115 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool658 = icmp eq i32 %115, 0
  br i1 %tobool658, label %if.then659, label %sw.epilog

if.then659:                                       ; preds = %if.then657
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str55, i64 0, i64 0)) #8
  br label %sw.epilog

sw.bb667:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  %116 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp668 = icmp eq i32 %bf.clear, 7
  %cmp671 = icmp eq i32 %bf.clear10, 7
  %or.cond1647 = and i1 %cmp668, %cmp671
  br i1 %or.cond1647, label %sw.epilog, label %if.then673

if.then673:                                       ; preds = %sw.bb667
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([52 x i8]* @.str59, i64 0, i64 0)) #8
  %117 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %return

sw.epilog:                                        ; preds = %sw.bb157, %if.end449, %sw.bb667, %land.lhs.true554, %land.lhs.true514, %land.lhs.true478, %land.lhs.true464, %land.lhs.true373, %if.then350, %if.then343, %if.then303, %if.then296, %if.then256, %if.then250, %land.lhs.true206, %sw.bb198, %lor.end, %if.then134, %if.else104, %if.else86, %if.end248, %if.end294, %if.end341, %if.then488, %if.then498, %if.then530, %if.else589, %if.then618, %if.then637, %if.then647, %if.then657, %if.end80, %if.then622, %if.then649, %if.then659, %land.lhs.true654, %if.else651, %if.then639, %if.else603, %land.lhs.true591, %if.then600, %if.then588, %if.else544, %if.then542, %land.lhs.true533, %if.else521, %if.then490, %if.then500, %land.lhs.true495, %if.else492, %sw.bb308, %sw.bb261, %sw.bb218, %if.then214, %if.end171, %lor.end195, %if.end122, %land.lhs.true128, %sw.bb113
  %common.0 = phi i32 [ 0, %if.end80 ], [ 0, %if.then588 ], [ 0, %if.then600 ], [ 0, %land.lhs.true591 ], [ 0, %if.else589 ], [ 0, %if.else603 ], [ 0, %if.then622 ], [ 0, %if.then618 ], [ 0, %if.then639 ], [ 0, %if.then637 ], [ 0, %if.then647 ], [ 0, %if.then649 ], [ 0, %if.then657 ], [ 0, %if.then659 ], [ 0, %land.lhs.true654 ], [ 0, %if.else651 ], [ 0, %if.then542 ], [ 0, %land.lhs.true533 ], [ 0, %if.then530 ], [ 0, %if.else544 ], [ 0, %if.else521 ], [ 0, %if.then488 ], [ 0, %if.then490 ], [ 0, %if.then498 ], [ 0, %if.then500 ], [ 0, %land.lhs.true495 ], [ 0, %if.else492 ], [ 0, %if.end341 ], [ 0, %sw.bb308 ], [ 0, %if.end294 ], [ 0, %sw.bb261 ], [ 0, %if.end248 ], [ 0, %sw.bb218 ], [ 0, %if.then214 ], [ 0, %land.lhs.true206 ], [ 0, %sw.bb198 ], [ 1, %lor.end195 ], [ 0, %if.end171 ], [ 0, %land.lhs.true128 ], [ 0, %if.end122 ], [ 1, %sw.bb113 ], [ 1, %if.else86 ], [ 1, %if.else104 ], [ 1, %if.then134 ], [ 1, %lor.end ], [ 0, %if.then250 ], [ 0, %if.then256 ], [ 0, %if.then296 ], [ 0, %if.then303 ], [ 0, %if.then343 ], [ 0, %if.then350 ], [ 0, %land.lhs.true373 ], [ 0, %if.end449 ], [ 0, %land.lhs.true464 ], [ 0, %land.lhs.true478 ], [ 0, %land.lhs.true514 ], [ 0, %land.lhs.true554 ], [ 1, %sw.bb667 ], [ 0, %sw.bb157 ]
  %short_shift.2 = phi i32 [ 0, %if.end80 ], [ 0, %if.then588 ], [ 0, %if.then600 ], [ 0, %land.lhs.true591 ], [ 0, %if.else589 ], [ 0, %if.else603 ], [ 0, %if.then622 ], [ 0, %if.then618 ], [ 0, %if.then639 ], [ 0, %if.then637 ], [ 0, %if.then647 ], [ 0, %if.then649 ], [ 0, %if.then657 ], [ 0, %if.then659 ], [ 0, %land.lhs.true654 ], [ 0, %if.else651 ], [ 0, %if.then542 ], [ 0, %land.lhs.true533 ], [ 0, %if.then530 ], [ 0, %if.else544 ], [ 0, %if.else521 ], [ 0, %if.then488 ], [ 0, %if.then490 ], [ 0, %if.then498 ], [ 0, %if.then500 ], [ 0, %land.lhs.true495 ], [ 0, %if.else492 ], [ 0, %if.end341 ], [ 0, %sw.bb308 ], [ 0, %if.end294 ], [ 0, %sw.bb261 ], [ %short_shift.1, %if.end248 ], [ 0, %sw.bb218 ], [ 0, %if.then214 ], [ 0, %land.lhs.true206 ], [ 0, %sw.bb198 ], [ 0, %lor.end195 ], [ 0, %if.end171 ], [ 0, %land.lhs.true128 ], [ 0, %if.end122 ], [ 0, %sw.bb113 ], [ 0, %if.else86 ], [ 0, %if.else104 ], [ 0, %if.then134 ], [ 0, %lor.end ], [ %short_shift.1, %if.then250 ], [ %short_shift.1, %if.then256 ], [ 0, %if.then296 ], [ 0, %if.then303 ], [ 0, %if.then343 ], [ 0, %if.then350 ], [ 0, %land.lhs.true373 ], [ 0, %if.end449 ], [ 0, %land.lhs.true464 ], [ 0, %land.lhs.true478 ], [ 0, %land.lhs.true514 ], [ 0, %land.lhs.true554 ], [ 0, %sw.bb667 ], [ 0, %sw.bb157 ]
  %short_compare.0 = phi i32 [ 0, %if.end80 ], [ 0, %if.then588 ], [ 0, %if.then600 ], [ 0, %land.lhs.true591 ], [ 0, %if.else589 ], [ 0, %if.else603 ], [ 0, %if.then622 ], [ 0, %if.then618 ], [ 0, %if.then639 ], [ 0, %if.then637 ], [ 0, %if.then647 ], [ 0, %if.then649 ], [ 0, %if.then657 ], [ 0, %if.then659 ], [ 0, %land.lhs.true654 ], [ 0, %if.else651 ], [ 0, %if.then542 ], [ 0, %land.lhs.true533 ], [ 0, %if.then530 ], [ 0, %if.else544 ], [ 0, %if.else521 ], [ 0, %if.then488 ], [ 0, %if.then490 ], [ 0, %if.then498 ], [ 0, %if.then500 ], [ 0, %land.lhs.true495 ], [ 0, %if.else492 ], [ 0, %if.end341 ], [ 0, %sw.bb308 ], [ 0, %if.end294 ], [ 0, %sw.bb261 ], [ 0, %if.end248 ], [ 0, %sw.bb218 ], [ 0, %if.then214 ], [ 0, %land.lhs.true206 ], [ 0, %sw.bb198 ], [ 0, %lor.end195 ], [ 0, %if.end171 ], [ 0, %land.lhs.true128 ], [ 0, %if.end122 ], [ 0, %sw.bb113 ], [ 0, %if.else86 ], [ 0, %if.else104 ], [ 0, %if.then134 ], [ 0, %lor.end ], [ 0, %if.then250 ], [ 0, %if.then256 ], [ 0, %if.then296 ], [ 0, %if.then303 ], [ 0, %if.then343 ], [ 0, %if.then350 ], [ 1, %land.lhs.true373 ], [ 0, %if.end449 ], [ 0, %land.lhs.true464 ], [ 0, %land.lhs.true478 ], [ 0, %land.lhs.true514 ], [ 1, %land.lhs.true554 ], [ 0, %sw.bb667 ], [ 0, %sw.bb157 ]
  %shorten.1 = phi i32 [ 0, %if.end80 ], [ 0, %if.then588 ], [ 0, %if.then600 ], [ 0, %land.lhs.true591 ], [ 0, %if.else589 ], [ 0, %if.else603 ], [ 0, %if.then622 ], [ 0, %if.then618 ], [ 0, %if.then639 ], [ 0, %if.then637 ], [ 0, %if.then647 ], [ 0, %if.then649 ], [ 0, %if.then657 ], [ 0, %if.then659 ], [ 0, %land.lhs.true654 ], [ 0, %if.else651 ], [ 0, %if.then542 ], [ 0, %land.lhs.true533 ], [ 0, %if.then530 ], [ 0, %if.else544 ], [ 0, %if.else521 ], [ 0, %if.then488 ], [ 0, %if.then490 ], [ 0, %if.then498 ], [ 0, %if.then500 ], [ 0, %land.lhs.true495 ], [ 0, %if.else492 ], [ 0, %if.end341 ], [ 0, %sw.bb308 ], [ 0, %if.end294 ], [ 0, %sw.bb261 ], [ 0, %if.end248 ], [ 0, %sw.bb218 ], [ 0, %if.then214 ], [ 0, %land.lhs.true206 ], [ 0, %sw.bb198 ], [ %lor.ext196, %lor.end195 ], [ 0, %if.end171 ], [ 0, %land.lhs.true128 ], [ 0, %if.end122 ], [ 0, %sw.bb113 ], [ 0, %if.else86 ], [ 0, %if.else104 ], [ 0, %if.then134 ], [ %lor.ext, %lor.end ], [ 0, %if.then250 ], [ 0, %if.then256 ], [ 0, %if.then296 ], [ 0, %if.then303 ], [ 0, %if.then343 ], [ 0, %if.then350 ], [ 0, %land.lhs.true373 ], [ 0, %if.end449 ], [ 0, %land.lhs.true464 ], [ 0, %land.lhs.true478 ], [ 1, %land.lhs.true514 ], [ 0, %land.lhs.true554 ], [ 0, %sw.bb667 ], [ %.1660, %sw.bb157 ]
  %build_type.0 = phi %union.tree_node* [ null, %if.end80 ], [ %95, %if.then588 ], [ %95, %if.then600 ], [ %95, %land.lhs.true591 ], [ %95, %if.else589 ], [ %95, %if.else603 ], [ %95, %if.then622 ], [ %95, %if.then618 ], [ %95, %if.then639 ], [ %95, %if.then637 ], [ %95, %if.then647 ], [ %95, %if.then649 ], [ %95, %if.then657 ], [ %95, %if.then659 ], [ %95, %land.lhs.true654 ], [ %95, %if.else651 ], [ null, %if.then542 ], [ null, %land.lhs.true533 ], [ null, %if.then530 ], [ null, %if.else544 ], [ null, %if.else521 ], [ %72, %if.then488 ], [ %72, %if.then490 ], [ %72, %if.then498 ], [ %72, %if.then500 ], [ %72, %land.lhs.true495 ], [ %72, %if.else492 ], [ null, %if.end341 ], [ null, %sw.bb308 ], [ null, %if.end294 ], [ null, %sw.bb261 ], [ null, %if.end248 ], [ null, %sw.bb218 ], [ null, %if.then214 ], [ null, %land.lhs.true206 ], [ null, %sw.bb198 ], [ null, %lor.end195 ], [ null, %if.end171 ], [ null, %land.lhs.true128 ], [ null, %if.end122 ], [ null, %sw.bb113 ], [ null, %if.else86 ], [ null, %if.else104 ], [ null, %if.then134 ], [ null, %lor.end ], [ null, %if.then250 ], [ null, %if.then256 ], [ null, %if.then296 ], [ null, %if.then303 ], [ null, %if.then343 ], [ null, %if.then350 ], [ %72, %land.lhs.true373 ], [ %72, %if.end449 ], [ %72, %land.lhs.true464 ], [ %72, %land.lhs.true478 ], [ null, %land.lhs.true514 ], [ %95, %land.lhs.true554 ], [ %116, %sw.bb667 ], [ null, %sw.bb157 ]
  %converted.0 = phi i32 [ 0, %if.end80 ], [ 0, %if.then588 ], [ 0, %if.then600 ], [ 0, %land.lhs.true591 ], [ 0, %if.else589 ], [ 0, %if.else603 ], [ 0, %if.then622 ], [ 0, %if.then618 ], [ 0, %if.then639 ], [ 0, %if.then637 ], [ 0, %if.then647 ], [ 0, %if.then649 ], [ 0, %if.then657 ], [ 0, %if.then659 ], [ 0, %land.lhs.true654 ], [ 0, %if.else651 ], [ 0, %if.then542 ], [ 0, %land.lhs.true533 ], [ 0, %if.then530 ], [ 0, %if.else544 ], [ 0, %if.else521 ], [ 0, %if.then488 ], [ 0, %if.then490 ], [ 0, %if.then498 ], [ 0, %if.then500 ], [ 0, %land.lhs.true495 ], [ 0, %if.else492 ], [ 0, %if.end341 ], [ 0, %sw.bb308 ], [ 0, %if.end294 ], [ 0, %sw.bb261 ], [ 0, %if.end248 ], [ 0, %sw.bb218 ], [ 1, %if.then214 ], [ 0, %land.lhs.true206 ], [ 0, %sw.bb198 ], [ 0, %lor.end195 ], [ 0, %if.end171 ], [ 0, %land.lhs.true128 ], [ 0, %if.end122 ], [ 0, %sw.bb113 ], [ 0, %if.else86 ], [ 0, %if.else104 ], [ 0, %if.then134 ], [ 0, %lor.end ], [ 1, %if.then250 ], [ 1, %if.then256 ], [ 1, %if.then296 ], [ 1, %if.then303 ], [ 1, %if.then343 ], [ 1, %if.then350 ], [ 0, %land.lhs.true373 ], [ 0, %if.end449 ], [ 0, %land.lhs.true464 ], [ 0, %land.lhs.true478 ], [ 0, %land.lhs.true514 ], [ 0, %land.lhs.true554 ], [ 0, %sw.bb667 ], [ 0, %sw.bb157 ]
  %result_type.1 = phi %union.tree_node* [ null, %if.end80 ], [ %call571, %if.then588 ], [ %call571, %if.then600 ], [ %call571, %land.lhs.true591 ], [ %call571, %if.else589 ], [ %108, %if.else603 ], [ %0, %if.then622 ], [ %0, %if.then618 ], [ %1, %if.then639 ], [ %1, %if.then637 ], [ %0, %if.then647 ], [ %0, %if.then649 ], [ %1, %if.then657 ], [ %1, %if.then659 ], [ null, %land.lhs.true654 ], [ null, %if.else651 ], [ %call531, %if.then542 ], [ %call531, %land.lhs.true533 ], [ %call531, %if.then530 ], [ %94, %if.else544 ], [ null, %if.else521 ], [ %0, %if.then488 ], [ %0, %if.then490 ], [ %1, %if.then498 ], [ %1, %if.then500 ], [ null, %land.lhs.true495 ], [ null, %if.else492 ], [ %0, %if.end341 ], [ null, %sw.bb308 ], [ %0, %if.end294 ], [ null, %sw.bb261 ], [ %0, %if.end248 ], [ null, %sw.bb218 ], [ %49, %if.then214 ], [ null, %land.lhs.true206 ], [ null, %sw.bb198 ], [ null, %lor.end195 ], [ null, %if.end171 ], [ null, %land.lhs.true128 ], [ null, %if.end122 ], [ null, %sw.bb113 ], [ null, %if.else86 ], [ null, %if.else104 ], [ null, %if.then134 ], [ null, %lor.end ], [ %0, %if.then250 ], [ %0, %if.then256 ], [ %0, %if.then296 ], [ %0, %if.then303 ], [ %0, %if.then343 ], [ %0, %if.then350 ], [ null, %land.lhs.true373 ], [ %.result_type.0, %if.end449 ], [ %0, %land.lhs.true464 ], [ %1, %land.lhs.true478 ], [ null, %land.lhs.true514 ], [ null, %land.lhs.true554 ], [ null, %sw.bb667 ], [ null, %sw.bb157 ]
  %resultcode.1 = phi i32 [ %code, %if.end80 ], [ %code, %if.then588 ], [ %code, %if.then600 ], [ %code, %land.lhs.true591 ], [ %code, %if.else589 ], [ %code, %if.else603 ], [ %code, %if.then622 ], [ %code, %if.then618 ], [ %code, %if.then639 ], [ %code, %if.then637 ], [ %code, %if.then647 ], [ %code, %if.then649 ], [ %code, %if.then657 ], [ %code, %if.then659 ], [ %code, %land.lhs.true654 ], [ %code, %if.else651 ], [ %code, %if.then542 ], [ %code, %land.lhs.true533 ], [ %code, %if.then530 ], [ %code, %if.else544 ], [ %code, %if.else521 ], [ %code, %if.then488 ], [ %code, %if.then490 ], [ %code, %if.then498 ], [ %code, %if.then500 ], [ %code, %land.lhs.true495 ], [ %code, %if.else492 ], [ %code, %if.end341 ], [ %code, %sw.bb308 ], [ 82, %if.end294 ], [ 82, %sw.bb261 ], [ 83, %if.end248 ], [ 83, %sw.bb218 ], [ %code, %if.then214 ], [ %code, %land.lhs.true206 ], [ %code, %sw.bb198 ], [ %code, %lor.end195 ], [ %code, %if.end171 ], [ %code, %land.lhs.true128 ], [ %code, %if.end122 ], [ 61, %sw.bb113 ], [ 59, %if.else86 ], [ 60, %if.else104 ], [ 70, %if.then134 ], [ %code, %lor.end ], [ 83, %if.then250 ], [ 83, %if.then256 ], [ 82, %if.then296 ], [ 82, %if.then303 ], [ %code, %if.then343 ], [ %code, %if.then350 ], [ %code, %land.lhs.true373 ], [ %code, %if.end449 ], [ %code, %land.lhs.true464 ], [ %code, %land.lhs.true478 ], [ %code, %land.lhs.true514 ], [ %code, %land.lhs.true554 ], [ %code, %sw.bb667 ], [ %code, %sw.bb157 ]
  %op1.5 = phi %union.tree_node* [ %op1.1, %if.end80 ], [ %op1.1, %if.then588 ], [ %op1.1, %if.then600 ], [ %op1.1, %land.lhs.true591 ], [ %op1.1, %if.else589 ], [ %op1.1, %if.else603 ], [ %op1.1, %if.then622 ], [ %op1.1, %if.then618 ], [ %op1.1, %if.then639 ], [ %op1.1, %if.then637 ], [ %op1.1, %if.then647 ], [ %op1.1, %if.then649 ], [ %op1.1, %if.then657 ], [ %op1.1, %if.then659 ], [ %op1.1, %land.lhs.true654 ], [ %op1.1, %if.else651 ], [ %op1.1, %if.then542 ], [ %op1.1, %land.lhs.true533 ], [ %op1.1, %if.then530 ], [ %op1.1, %if.else544 ], [ %op1.1, %if.else521 ], [ %op1.1, %if.then488 ], [ %op1.1, %if.then490 ], [ %op1.1, %if.then498 ], [ %op1.1, %if.then500 ], [ %op1.1, %land.lhs.true495 ], [ %op1.1, %if.else492 ], [ %op1.1, %if.end341 ], [ %op1.1, %sw.bb308 ], [ %op1.1, %if.end294 ], [ %op1.1, %sw.bb261 ], [ %op1.1, %if.end248 ], [ %op1.1, %sw.bb218 ], [ %call216, %if.then214 ], [ %op1.1, %land.lhs.true206 ], [ %op1.1, %sw.bb198 ], [ %op1.1, %lor.end195 ], [ %op1.1, %if.end171 ], [ %op1.1, %land.lhs.true128 ], [ %op1.1, %if.end122 ], [ %op1.1, %sw.bb113 ], [ %op1.1, %if.else86 ], [ %op1.1, %if.else104 ], [ %op1.1, %if.then134 ], [ %op1.1, %lor.end ], [ %op1.1, %if.then250 ], [ %call257, %if.then256 ], [ %op1.1, %if.then296 ], [ %call304, %if.then303 ], [ %op1.1, %if.then343 ], [ %call351, %if.then350 ], [ %op1.1, %land.lhs.true373 ], [ %op1.1, %if.end449 ], [ %op1.1, %land.lhs.true464 ], [ %op1.1, %land.lhs.true478 ], [ %op1.1, %land.lhs.true514 ], [ %op1.1, %land.lhs.true554 ], [ %op1.1, %sw.bb667 ], [ %op1.1, %sw.bb157 ]
  %op0.2 = phi %union.tree_node* [ %op0.1, %if.end80 ], [ %op0.1, %if.then588 ], [ %op0.1, %if.then600 ], [ %op0.1, %land.lhs.true591 ], [ %op0.1, %if.else589 ], [ %op0.1, %if.else603 ], [ %op0.1, %if.then622 ], [ %op0.1, %if.then618 ], [ %op0.1, %if.then639 ], [ %op0.1, %if.then637 ], [ %op0.1, %if.then647 ], [ %op0.1, %if.then649 ], [ %op0.1, %if.then657 ], [ %op0.1, %if.then659 ], [ %op0.1, %land.lhs.true654 ], [ %op0.1, %if.else651 ], [ %op0.1, %if.then542 ], [ %op0.1, %land.lhs.true533 ], [ %op0.1, %if.then530 ], [ %op0.1, %if.else544 ], [ %op0.1, %if.else521 ], [ %op0.1, %if.then488 ], [ %op0.1, %if.then490 ], [ %op0.1, %if.then498 ], [ %op0.1, %if.then500 ], [ %op0.1, %land.lhs.true495 ], [ %op0.1, %if.else492 ], [ %op0.1, %if.end341 ], [ %op0.1, %sw.bb308 ], [ %op0.1, %if.end294 ], [ %op0.1, %sw.bb261 ], [ %op0.1, %if.end248 ], [ %op0.1, %sw.bb218 ], [ %call215, %if.then214 ], [ %op0.1, %land.lhs.true206 ], [ %op0.1, %sw.bb198 ], [ %op0.1, %lor.end195 ], [ %op0.1, %if.end171 ], [ %op0.1, %land.lhs.true128 ], [ %op0.1, %if.end122 ], [ %op0.1, %sw.bb113 ], [ %op0.1, %if.else86 ], [ %op0.1, %if.else104 ], [ %op0.1, %if.then134 ], [ %op0.1, %lor.end ], [ %op0.1, %if.then250 ], [ %op0.1, %if.then256 ], [ %op0.1, %if.then296 ], [ %op0.1, %if.then303 ], [ %op0.1, %if.then343 ], [ %op0.1, %if.then350 ], [ %op0.1, %land.lhs.true373 ], [ %op0.1, %if.end449 ], [ %op0.1, %land.lhs.true464 ], [ %op0.1, %land.lhs.true478 ], [ %op0.1, %land.lhs.true514 ], [ %op0.1, %land.lhs.true554 ], [ %op0.1, %sw.bb667 ], [ %op0.1, %sw.bb157 ]
  %118 = and i32 %bf.load, 254
  %119 = icmp eq i32 %118, 6
  %cmp681 = icmp eq i32 %bf.clear, 8
  %or.cond1324 = or i1 %119, %cmp681
  br i1 %or.cond1324, label %land.lhs.true683, label %if.end1248

land.lhs.true683:                                 ; preds = %sw.epilog
  %120 = and i32 %bf.load9, 254
  %121 = icmp eq i32 %120, 6
  %cmp690 = icmp eq i32 %bf.clear10, 8
  %or.cond1326 = or i1 %121, %cmp690
  br i1 %or.cond1326, label %if.then692, label %if.end1248

if.then692:                                       ; preds = %land.lhs.true683
  %tobool699.not = icmp eq i32 %shorten.1, 0
  %tobool703 = icmp eq i32 %short_compare.0, 0
  %122 = or i32 %short_compare.0, %common.0
  %123 = or i32 %122, %shorten.1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %if.end706, label %if.then704

if.then704:                                       ; preds = %if.then692
  %call705 = call %union.tree_node* @common_type(%union.tree_node* %0, %union.tree_node* %1) #7
  br label %if.end706

if.end706:                                        ; preds = %if.then692, %if.then704
  %result_type.2 = phi %union.tree_node* [ %call705, %if.then704 ], [ %result_type.1, %if.then692 ]
  %.cmp696.not = or i1 %cmp681, %cmp690
  %brmerge1651 = or i1 %tobool699.not, %.cmp696.not
  br i1 %brmerge1651, label %if.end885, label %if.then710

if.then710:                                       ; preds = %if.end706
  %call711 = call %union.tree_node* @get_narrower(%union.tree_node* %op0.2, i32* %unsigned0) #8
  %call712 = call %union.tree_node* @get_narrower(%union.tree_node* %op1.5, i32* %unsigned1) #8
  %unsigned_flag714 = getelementptr inbounds %union.tree_node* %result_type.2, i64 0, i32 0, i32 0, i32 2
  %125 = bitcast [4 x i8]* %unsigned_flag714 to i32*
  %bf.load715 = load i32* %125, align 8
  %bf.lshr716 = lshr i32 %bf.load715, 13
  %bf.clear717 = and i32 %bf.lshr716, 1
  %type720 = getelementptr inbounds %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 1
  %126 = load %union.tree_node** %type720, align 8, !tbaa !0
  %type721 = bitcast %union.tree_node* %126 to %struct.tree_type*
  %precision722 = getelementptr inbounds %struct.tree_type* %type721, i64 0, i32 6
  %127 = bitcast [4 x i8]* %precision722 to i32*
  %bf.load723 = load i32* %127, align 4
  %type726 = getelementptr inbounds %union.tree_node* %call711, i64 0, i32 0, i32 0, i32 1
  %128 = load %union.tree_node** %type726, align 8, !tbaa !0
  %type727 = bitcast %union.tree_node* %128 to %struct.tree_type*
  %precision728 = getelementptr inbounds %struct.tree_type* %type727, i64 0, i32 6
  %129 = bitcast [4 x i8]* %precision728 to i32*
  %bf.load729 = load i32* %129, align 4
  %130 = xor i32 %bf.load729, %bf.load723
  %131 = and i32 %130, 511
  %cmp731 = icmp ne i32 %131, 0
  %cmp736 = icmp eq %union.tree_node* %126, %result_type.2
  %or.cond1652 = or i1 %cmp731, %cmp736
  br i1 %or.cond1652, label %if.end746, label %if.then738

if.then738:                                       ; preds = %if.then710
  %unsigned_flag742 = getelementptr inbounds %union.tree_node* %126, i64 0, i32 0, i32 0, i32 2
  %132 = bitcast [4 x i8]* %unsigned_flag742 to i32*
  %bf.load743 = load i32* %132, align 8
  %bf.lshr744 = lshr i32 %bf.load743, 13
  %bf.clear745 = and i32 %bf.lshr744, 1
  store i32 %bf.clear745, i32* %unsigned0, align 4, !tbaa !3
  br label %if.end746

if.end746:                                        ; preds = %if.then710, %if.then738
  %type748 = getelementptr inbounds %union.tree_node* %op1.5, i64 0, i32 0, i32 0, i32 1
  %133 = load %union.tree_node** %type748, align 8, !tbaa !0
  %type749 = bitcast %union.tree_node* %133 to %struct.tree_type*
  %precision750 = getelementptr inbounds %struct.tree_type* %type749, i64 0, i32 6
  %134 = bitcast [4 x i8]* %precision750 to i32*
  %bf.load751 = load i32* %134, align 4
  %type754 = getelementptr inbounds %union.tree_node* %call712, i64 0, i32 0, i32 0, i32 1
  %135 = load %union.tree_node** %type754, align 8, !tbaa !0
  %type755 = bitcast %union.tree_node* %135 to %struct.tree_type*
  %precision756 = getelementptr inbounds %struct.tree_type* %type755, i64 0, i32 6
  %136 = bitcast [4 x i8]* %precision756 to i32*
  %bf.load757 = load i32* %136, align 4
  %137 = xor i32 %bf.load757, %bf.load751
  %138 = and i32 %137, 511
  %cmp759 = icmp ne i32 %138, 0
  %cmp764 = icmp eq %union.tree_node* %133, %result_type.2
  %or.cond1653 = or i1 %cmp759, %cmp764
  br i1 %or.cond1653, label %if.end774, label %if.then766

if.then766:                                       ; preds = %if.end746
  %unsigned_flag770 = getelementptr inbounds %union.tree_node* %133, i64 0, i32 0, i32 0, i32 2
  %139 = bitcast [4 x i8]* %unsigned_flag770 to i32*
  %bf.load771 = load i32* %139, align 8
  %bf.lshr772 = lshr i32 %bf.load771, 13
  %bf.clear773 = and i32 %bf.lshr772, 1
  store i32 %bf.clear773, i32* %unsigned1, align 4, !tbaa !3
  br label %if.end774

if.end774:                                        ; preds = %if.end746, %if.then766
  %cmp775 = icmp eq i32 %shorten.1, -1
  %140 = load i32* %unsigned0, align 4, !tbaa !3
  %.bf.clear717 = select i1 %cmp775, i32 %140, i32 %bf.clear717
  %bf.load783 = load i32* %129, align 4
  %bf.clear784 = and i32 %bf.load783, 511
  %type785 = bitcast %union.tree_node* %result_type.2 to %struct.tree_type*
  %precision786 = getelementptr inbounds %struct.tree_type* %type785, i64 0, i32 6
  %141 = bitcast [4 x i8]* %precision786 to i32*
  %bf.load787 = load i32* %141, align 4
  %bf.clear788 = and i32 %bf.load787, 511
  %cmp789 = icmp ult i32 %bf.clear784, %bf.clear788
  br i1 %cmp789, label %land.lhs.true791, label %if.else820

land.lhs.true791:                                 ; preds = %if.end774
  %bf.load796 = load i32* %136, align 4
  %bf.clear797 = and i32 %bf.load796, 511
  %cmp804 = icmp eq i32 %bf.clear797, %bf.clear784
  br i1 %cmp804, label %land.lhs.true806, label %if.else820

land.lhs.true806:                                 ; preds = %land.lhs.true791
  %142 = load i32* %unsigned1, align 4, !tbaa !3
  %cmp807 = icmp eq i32 %140, %142
  br i1 %cmp807, label %land.lhs.true809, label %if.else820

land.lhs.true809:                                 ; preds = %land.lhs.true806
  %tobool810 = icmp ne i32 %140, 0
  %tobool812 = icmp eq i32 %.bf.clear717, 0
  %or.cond1654 = or i1 %tobool810, %tobool812
  br i1 %or.cond1654, label %if.then813, label %if.else820

if.then813:                                       ; preds = %land.lhs.true809
  %call818 = call %union.tree_node* @common_type(%union.tree_node* %128, %union.tree_node* %135) #7
  %call819 = call %union.tree_node* @signed_or_unsigned_type(i32 %140, %union.tree_node* %call818) #8
  br label %if.end885

if.else820:                                       ; preds = %land.lhs.true809, %land.lhs.true806, %land.lhs.true791, %if.end774
  %code822 = getelementptr inbounds %union.tree_node* %call711, i64 0, i32 0, i32 0, i32 2
  %143 = bitcast [4 x i8]* %code822 to i32*
  %bf.load823 = load i32* %143, align 8
  %bf.clear824 = and i32 %bf.load823, 255
  %cmp825 = icmp eq i32 %bf.clear824, 25
  br i1 %cmp825, label %land.lhs.true827, label %if.else851

land.lhs.true827:                                 ; preds = %if.else820
  %144 = load i32* %unsigned1, align 4, !tbaa !3
  %tobool828 = icmp ne i32 %144, 0
  %tobool830 = icmp eq i32 %.bf.clear717, 0
  %or.cond1655 = or i1 %tobool828, %tobool830
  br i1 %or.cond1655, label %land.lhs.true831, label %if.else851

land.lhs.true831:                                 ; preds = %land.lhs.true827
  %bf.load836 = load i32* %136, align 4
  %bf.clear837 = and i32 %bf.load836, 511
  %cmp842 = icmp ult i32 %bf.clear837, %bf.clear788
  br i1 %cmp842, label %land.lhs.true844, label %if.else851

land.lhs.true844:                                 ; preds = %land.lhs.true831
  %call847 = call %union.tree_node* @signed_or_unsigned_type(i32 %144, %union.tree_node* %135) #8
  %call848 = call i32 @int_fits_type_p(%union.tree_node* %call711, %union.tree_node* %call847) #8
  %tobool849 = icmp eq i32 %call848, 0
  br i1 %tobool849, label %if.else851, label %if.end885

if.else851:                                       ; preds = %land.lhs.true827, %land.lhs.true844, %land.lhs.true831, %if.else820
  %code853 = getelementptr inbounds %union.tree_node* %call712, i64 0, i32 0, i32 0, i32 2
  %145 = bitcast [4 x i8]* %code853 to i32*
  %bf.load854 = load i32* %145, align 8
  %bf.clear855 = and i32 %bf.load854, 255
  %cmp856 = icmp eq i32 %bf.clear855, 25
  br i1 %cmp856, label %land.lhs.true858, label %if.end885

land.lhs.true858:                                 ; preds = %if.else851
  %146 = load i32* %unsigned0, align 4, !tbaa !3
  %tobool859 = icmp ne i32 %146, 0
  %tobool861 = icmp eq i32 %.bf.clear717, 0
  %or.cond1656 = or i1 %tobool859, %tobool861
  br i1 %or.cond1656, label %land.lhs.true862, label %if.end885

land.lhs.true862:                                 ; preds = %land.lhs.true858
  %147 = load %union.tree_node** %type726, align 8, !tbaa !0
  %type865 = bitcast %union.tree_node* %147 to %struct.tree_type*
  %precision866 = getelementptr inbounds %struct.tree_type* %type865, i64 0, i32 6
  %148 = bitcast [4 x i8]* %precision866 to i32*
  %bf.load867 = load i32* %148, align 4
  %bf.clear868 = and i32 %bf.load867, 511
  %bf.load871 = load i32* %141, align 4
  %bf.clear872 = and i32 %bf.load871, 511
  %cmp873 = icmp ult i32 %bf.clear868, %bf.clear872
  br i1 %cmp873, label %land.lhs.true875, label %if.end885

land.lhs.true875:                                 ; preds = %land.lhs.true862
  %call878 = call %union.tree_node* @signed_or_unsigned_type(i32 %146, %union.tree_node* %147) #8
  %call879 = call i32 @int_fits_type_p(%union.tree_node* %call712, %union.tree_node* %call878) #8
  %tobool880 = icmp eq i32 %call879, 0
  %result_type.2.call878 = select i1 %tobool880, %union.tree_node* %result_type.2, %union.tree_node* %call878
  br label %if.end885

if.end885:                                        ; preds = %land.lhs.true875, %land.lhs.true858, %land.lhs.true844, %if.end706, %if.then813, %if.else851, %land.lhs.true862
  %final_type.0 = phi %union.tree_node* [ %result_type.2, %if.then813 ], [ %result_type.2, %land.lhs.true862 ], [ %result_type.2, %if.else851 ], [ null, %if.end706 ], [ %result_type.2, %land.lhs.true844 ], [ %result_type.2, %land.lhs.true858 ], [ %result_type.2, %land.lhs.true875 ]
  %result_type.3 = phi %union.tree_node* [ %call819, %if.then813 ], [ %result_type.2, %land.lhs.true862 ], [ %result_type.2, %if.else851 ], [ %result_type.2, %if.end706 ], [ %call847, %land.lhs.true844 ], [ %result_type.2, %land.lhs.true858 ], [ %result_type.2.call878, %land.lhs.true875 ]
  %tobool886 = icmp eq i32 %short_shift.2, 0
  br i1 %tobool886, label %if.end950, label %if.then887

if.then887:                                       ; preds = %if.end885
  %call889 = call %union.tree_node* @get_narrower(%union.tree_node* %op0.2, i32* %unsigned_arg) #8
  %cmp890 = icmp eq %union.tree_node* %call889, %op0.2
  br i1 %cmp890, label %land.lhs.true892, label %if.end905

land.lhs.true892:                                 ; preds = %if.then887
  %type894 = getelementptr inbounds %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 1
  %149 = load %union.tree_node** %type894, align 8, !tbaa !0
  %cmp895 = icmp eq %union.tree_node* %result_type.3, %149
  br i1 %cmp895, label %if.then897, label %if.end905

if.then897:                                       ; preds = %land.lhs.true892
  %unsigned_flag901 = getelementptr inbounds %union.tree_node* %result_type.3, i64 0, i32 0, i32 0, i32 2
  %150 = bitcast [4 x i8]* %unsigned_flag901 to i32*
  %bf.load902 = load i32* %150, align 8
  %bf.lshr903 = lshr i32 %bf.load902, 13
  %bf.clear904 = and i32 %bf.lshr903, 1
  store i32 %bf.clear904, i32* %unsigned_arg, align 4, !tbaa !3
  br label %if.end905

if.end905:                                        ; preds = %if.then897, %land.lhs.true892, %if.then887
  %type907 = getelementptr inbounds %union.tree_node* %call889, i64 0, i32 0, i32 0, i32 1
  %151 = load %union.tree_node** %type907, align 8, !tbaa !0
  %type908 = bitcast %union.tree_node* %151 to %struct.tree_type*
  %precision909 = getelementptr inbounds %struct.tree_type* %type908, i64 0, i32 6
  %152 = bitcast [4 x i8]* %precision909 to i32*
  %bf.load910 = load i32* %152, align 4
  %bf.clear911 = and i32 %bf.load910, 511
  %type912 = bitcast %union.tree_node* %result_type.3 to %struct.tree_type*
  %precision913 = getelementptr inbounds %struct.tree_type* %type912, i64 0, i32 6
  %153 = bitcast [4 x i8]* %precision913 to i32*
  %bf.load914 = load i32* %153, align 4
  %bf.clear915 = and i32 %bf.load914, 511
  %cmp916 = icmp ult i32 %bf.clear911, %bf.clear915
  br i1 %cmp916, label %land.lhs.true918, label %if.end950

land.lhs.true918:                                 ; preds = %if.end905
  %conv925 = zext i32 %bf.clear911 to i64
  %call926 = call i32 @compare_tree_int(%union.tree_node* %op1.5, i64 %conv925) #8
  %cmp927 = icmp slt i32 %call926, 0
  br i1 %cmp927, label %land.lhs.true929, label %if.end950

land.lhs.true929:                                 ; preds = %land.lhs.true918
  %unsigned_flag931 = getelementptr inbounds %union.tree_node* %result_type.3, i64 0, i32 0, i32 0, i32 2
  %154 = bitcast [4 x i8]* %unsigned_flag931 to i32*
  %bf.load932 = load i32* %154, align 8
  %bf.clear934 = and i32 %bf.load932, 8192
  %tobool935 = icmp ne i32 %bf.clear934, 0
  %.pre1686 = load i32* %unsigned_arg, align 4, !tbaa !3
  %tobool937 = icmp eq i32 %.pre1686, 0
  %or.cond1688 = and i1 %tobool935, %tobool937
  br i1 %or.cond1688, label %if.end950, label %if.then938

if.then938:                                       ; preds = %land.lhs.true929
  %155 = load %union.tree_node** %type907, align 8, !tbaa !0
  %call941 = call %union.tree_node* @signed_or_unsigned_type(i32 %.pre1686, %union.tree_node* %155) #8
  %type943 = getelementptr inbounds %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 1
  %156 = load %union.tree_node** %type943, align 8, !tbaa !0
  %cmp944 = icmp eq %union.tree_node* %156, %call941
  br i1 %cmp944, label %if.end950, label %if.then946

if.then946:                                       ; preds = %if.then938
  %call947 = call %union.tree_node* @convert(%union.tree_node* %call941, %union.tree_node* %op0.2) #8
  br label %if.end950

if.end950:                                        ; preds = %land.lhs.true929, %if.then946, %if.then938, %if.end885, %if.end905, %land.lhs.true918
  %final_type.1 = phi %union.tree_node* [ %result_type.3, %land.lhs.true918 ], [ %result_type.3, %if.end905 ], [ %final_type.0, %if.end885 ], [ %result_type.3, %if.then938 ], [ %result_type.3, %if.then946 ], [ %result_type.3, %land.lhs.true929 ]
  %converted.1 = phi i32 [ %converted.0, %land.lhs.true918 ], [ %converted.0, %if.end905 ], [ %converted.0, %if.end885 ], [ 1, %if.then938 ], [ 1, %if.then946 ], [ %converted.0, %land.lhs.true929 ]
  %result_type.4 = phi %union.tree_node* [ %result_type.3, %land.lhs.true918 ], [ %result_type.3, %if.end905 ], [ %result_type.3, %if.end885 ], [ %call941, %if.then938 ], [ %call941, %if.then946 ], [ %result_type.3, %land.lhs.true929 ]
  %op0.4 = phi %union.tree_node* [ %op0.2, %land.lhs.true918 ], [ %op0.2, %if.end905 ], [ %op0.2, %if.end885 ], [ %op0.2, %if.then938 ], [ %call947, %if.then946 ], [ %op0.2, %land.lhs.true929 ]
  br i1 %tobool703, label %if.end1248, label %if.then952

if.then952:                                       ; preds = %if.end950
  store %union.tree_node* %op0.4, %union.tree_node** %xop0, align 8, !tbaa !0
  store %union.tree_node* %op1.5, %union.tree_node** %xop1, align 8, !tbaa !0
  store %union.tree_node* %result_type.4, %union.tree_node** %xresult_type, align 8, !tbaa !0
  store i32 %resultcode.1, i32* %xresultcode, align 4, !tbaa !4
  %call953 = call %union.tree_node* @shorten_compare(%union.tree_node** %xop0, %union.tree_node** %xop1, %union.tree_node** %xresult_type, i32* %xresultcode) #8
  %cmp954 = icmp eq %union.tree_node* %call953, null
  br i1 %cmp954, label %if.end957, label %return

if.end957:                                        ; preds = %if.then952
  %157 = load %union.tree_node** %xop0, align 8, !tbaa !0
  %158 = load %union.tree_node** %xop1, align 8, !tbaa !0
  %159 = load i32* %xresultcode, align 4, !tbaa !4
  %160 = load i32* @warn_sign_compare, align 4, !tbaa !3
  %cmp958 = icmp slt i32 %160, 0
  br i1 %cmp958, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end957
  %161 = load i32* @extra_warnings, align 4, !tbaa !3
  %tobool960 = icmp ne i32 %161, 0
  %.old = load i32* @skip_evaluation, align 4, !tbaa !3
  %cmp964.old = icmp eq i32 %.old, 0
  %or.cond1329 = and i1 %tobool960, %cmp964.old
  br i1 %or.cond1329, label %if.then966, label %if.end1248

cond.false:                                       ; preds = %if.end957
  %cmp961 = icmp ne i32 %160, 0
  %162 = load i32* @skip_evaluation, align 4, !tbaa !3
  %cmp964 = icmp eq i32 %162, 0
  %or.cond1327 = and i1 %cmp961, %cmp964
  br i1 %or.cond1327, label %if.then966, label %if.end1248

if.then966:                                       ; preds = %cond.true, %cond.false
  %type968 = getelementptr inbounds %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 1
  %163 = load %union.tree_node** %type968, align 8, !tbaa !0
  %unsigned_flag970 = getelementptr inbounds %union.tree_node* %163, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast [4 x i8]* %unsigned_flag970 to i32*
  %bf.load971 = load i32* %164, align 8
  %bf.clear973 = and i32 %bf.load971, 8192
  %lnot975 = icmp eq i32 %bf.clear973, 0
  %bf.clear973.lobit = lshr exact i32 %bf.clear973, 13
  %type978 = getelementptr inbounds %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 1
  %165 = load %union.tree_node** %type978, align 8, !tbaa !0
  %unsigned_flag980 = getelementptr inbounds %union.tree_node* %165, i64 0, i32 0, i32 0, i32 2
  %166 = bitcast [4 x i8]* %unsigned_flag980 to i32*
  %bf.load981 = load i32* %166, align 8
  %bf.clear983 = lshr i32 %bf.load981, 13
  %bf.clear983.lobit = and i32 %bf.clear983, 1
  %call987 = call %union.tree_node* @get_narrower(%union.tree_node* %157, i32* %unsignedp0) #8
  %call988 = call %union.tree_node* @get_narrower(%union.tree_node* %158, i32* %unsignedp1) #8
  store %union.tree_node* %orig_op0, %union.tree_node** %xop0, align 8, !tbaa !0
  store %union.tree_node* %orig_op1, %union.tree_node** %xop1, align 8, !tbaa !0
  %code9911674 = getelementptr inbounds %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 2
  %167 = bitcast [4 x i8]* %code9911674 to i32*
  %bf.load9921675 = load i32* %167, align 8
  %bf.clear9931676 = and i32 %bf.load9921675, 255
  %bf.clear993.off1677 = add i32 %bf.clear9931676, -114
  %switch16611678 = icmp ult i32 %bf.clear993.off1677, 3
  br i1 %switch16611678, label %land.lhs.true1010.lr.ph, label %while.cond1033.preheader

land.lhs.true1010.lr.ph:                          ; preds = %if.then966
  %.pre1683 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %land.lhs.true1010

while.cond1033.preheader:                         ; preds = %while.body1028, %land.rhs1016, %land.lhs.true1010, %if.then966
  %xop0.val = phi %union.tree_node* [ %orig_op0, %if.then966 ], [ %169, %land.lhs.true1010 ], [ %169, %land.rhs1016 ], [ %170, %while.body1028 ]
  %code10351669 = getelementptr inbounds %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 2
  %168 = bitcast [4 x i8]* %code10351669 to i32*
  %bf.load10361670 = load i32* %168, align 8
  %bf.clear10371671 = and i32 %bf.load10361670, 255
  %bf.clear1037.off1672 = add i32 %bf.clear10371671, -114
  %switch16621673 = icmp ult i32 %bf.clear1037.off1672, 3
  br i1 %switch16621673, label %land.lhs.true1054.lr.ph, label %while.end1076

land.lhs.true1054.lr.ph:                          ; preds = %while.cond1033.preheader
  %.pre = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %land.lhs.true1054

land.lhs.true1010:                                ; preds = %land.lhs.true1010.lr.ph, %while.body1028
  %169 = phi %union.tree_node* [ %orig_op0, %land.lhs.true1010.lr.ph ], [ %170, %while.body1028 ]
  %operands1012 = getelementptr inbounds %union.tree_node* %169, i64 0, i32 0, i32 2
  %arrayidx1013 = bitcast i32* %operands1012 to %union.tree_node**
  %170 = load %union.tree_node** %arrayidx1013, align 8, !tbaa !0
  %cmp1014 = icmp eq %union.tree_node* %170, %.pre1683
  br i1 %cmp1014, label %while.cond1033.preheader, label %land.rhs1016

land.rhs1016:                                     ; preds = %land.lhs.true1010
  %type1018 = getelementptr inbounds %union.tree_node* %169, i64 0, i32 0, i32 0, i32 1
  %171 = load %union.tree_node** %type1018, align 8, !tbaa !0
  %type1023 = getelementptr inbounds %union.tree_node* %170, i64 0, i32 0, i32 0, i32 1
  %172 = load %union.tree_node** %type1023, align 8, !tbaa !0
  %cmp1024 = icmp eq %union.tree_node* %171, %172
  br i1 %cmp1024, label %while.body1028, label %while.cond1033.preheader

while.body1028:                                   ; preds = %land.rhs1016
  store %union.tree_node* %170, %union.tree_node** %xop0, align 8, !tbaa !0
  %code991 = getelementptr inbounds %union.tree_node* %170, i64 0, i32 0, i32 0, i32 2
  %173 = bitcast [4 x i8]* %code991 to i32*
  %bf.load992 = load i32* %173, align 8
  %bf.clear993 = and i32 %bf.load992, 255
  %bf.clear993.off = add i32 %bf.clear993, -114
  %switch1661 = icmp ult i32 %bf.clear993.off, 3
  br i1 %switch1661, label %land.lhs.true1010, label %while.cond1033.preheader

land.lhs.true1054:                                ; preds = %land.lhs.true1054.lr.ph, %while.body1072
  %174 = phi %union.tree_node* [ %orig_op1, %land.lhs.true1054.lr.ph ], [ %175, %while.body1072 ]
  %operands1056 = getelementptr inbounds %union.tree_node* %174, i64 0, i32 0, i32 2
  %arrayidx1057 = bitcast i32* %operands1056 to %union.tree_node**
  %175 = load %union.tree_node** %arrayidx1057, align 8, !tbaa !0
  %cmp1058 = icmp eq %union.tree_node* %175, %.pre
  br i1 %cmp1058, label %while.end1076, label %land.rhs1060

land.rhs1060:                                     ; preds = %land.lhs.true1054
  %type1062 = getelementptr inbounds %union.tree_node* %174, i64 0, i32 0, i32 0, i32 1
  %176 = load %union.tree_node** %type1062, align 8, !tbaa !0
  %type1067 = getelementptr inbounds %union.tree_node* %175, i64 0, i32 0, i32 0, i32 1
  %177 = load %union.tree_node** %type1067, align 8, !tbaa !0
  %cmp1068 = icmp eq %union.tree_node* %176, %177
  br i1 %cmp1068, label %while.body1072, label %while.end1076

while.body1072:                                   ; preds = %land.rhs1060
  store %union.tree_node* %175, %union.tree_node** %xop1, align 8, !tbaa !0
  %code1035 = getelementptr inbounds %union.tree_node* %175, i64 0, i32 0, i32 0, i32 2
  %178 = bitcast [4 x i8]* %code1035 to i32*
  %bf.load1036 = load i32* %178, align 8
  %bf.clear1037 = and i32 %bf.load1036, 255
  %bf.clear1037.off = add i32 %bf.clear1037, -114
  %switch1662 = icmp ult i32 %bf.clear1037.off, 3
  br i1 %switch1662, label %land.lhs.true1054, label %while.end1076

while.end1076:                                    ; preds = %while.body1072, %land.lhs.true1054, %land.rhs1060, %while.cond1033.preheader
  %xop1.val = phi %union.tree_node* [ %orig_op1, %while.cond1033.preheader ], [ %174, %land.rhs1060 ], [ %174, %land.lhs.true1054 ], [ %175, %while.body1072 ]
  %unsigned_flag1078 = getelementptr inbounds %union.tree_node* %result_type.4, i64 0, i32 0, i32 0, i32 2
  %179 = bitcast [4 x i8]* %unsigned_flag1078 to i32*
  %bf.load1079 = load i32* %179, align 8
  %bf.clear1081 = and i32 %bf.load1079, 8192
  %tobool1082 = icmp eq i32 %bf.clear1081, 0
  %cmp1085 = icmp eq i32 %bf.clear973.lobit, %bf.clear983.lobit
  %or.cond1657 = or i1 %tobool1082, %cmp1085
  br i1 %or.cond1657, label %if.end1143, label %if.else1088

if.else1088:                                      ; preds = %while.end1076
  %uop.0 = select i1 %lnot975, %union.tree_node* %xop1.val, %union.tree_node* %xop0.val
  %sop.0 = select i1 %lnot975, %union.tree_node* %xop0.val, %union.tree_node* %xop1.val
  %call1093 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %sop.0) #8
  %tobool1094 = icmp eq i32 %call1093, 0
  br i1 %tobool1094, label %if.else1096, label %if.end1143

if.else1096:                                      ; preds = %if.else1088
  %code1098 = getelementptr inbounds %union.tree_node* %uop.0, i64 0, i32 0, i32 0, i32 2
  %180 = bitcast [4 x i8]* %code1098 to i32*
  %bf.load1099 = load i32* %180, align 8
  %bf.clear1100 = and i32 %bf.load1099, 255
  %cmp1101 = icmp eq i32 %bf.clear1100, 25
  br i1 %cmp1101, label %land.lhs.true1103, label %if.else1114

land.lhs.true1103:                                ; preds = %if.else1096
  %.off = add i32 %159, -101
  %181 = icmp ult i32 %.off, 2
  br i1 %181, label %land.lhs.true1109, label %if.else1114

land.lhs.true1109:                                ; preds = %land.lhs.true1103
  %call1110 = call %union.tree_node* @signed_type(%union.tree_node* %result_type.4) #8
  %call1111 = call i32 @int_fits_type_p(%union.tree_node* %uop.0, %union.tree_node* %call1110) #8
  %tobool1112 = icmp eq i32 %call1111, 0
  br i1 %tobool1112, label %land.lhs.true1109.if.else1114_crit_edge, label %if.end1143

land.lhs.true1109.if.else1114_crit_edge:          ; preds = %land.lhs.true1109
  %bf.load1117.pre = load i32* %180, align 8
  br label %if.else1114

if.else1114:                                      ; preds = %land.lhs.true1109.if.else1114_crit_edge, %land.lhs.true1103, %if.else1096
  %bf.load1117 = phi i32 [ %bf.load1117.pre, %land.lhs.true1109.if.else1114_crit_edge ], [ %bf.load1099, %land.lhs.true1103 ], [ %bf.load1099, %if.else1096 ]
  %bf.clear1118 = and i32 %bf.load1117, 255
  %cmp1119 = icmp eq i32 %bf.clear1118, 25
  br i1 %cmp1119, label %land.lhs.true1121, label %if.else1138

land.lhs.true1121:                                ; preds = %if.else1114
  %type1123 = getelementptr inbounds %union.tree_node* %uop.0, i64 0, i32 0, i32 0, i32 1
  %182 = load %union.tree_node** %type1123, align 8, !tbaa !0
  %code1125 = getelementptr inbounds %union.tree_node* %182, i64 0, i32 0, i32 0, i32 2
  %183 = bitcast [4 x i8]* %code1125 to i32*
  %bf.load1126 = load i32* %183, align 8
  %bf.clear1127 = and i32 %bf.load1126, 255
  %cmp1128 = icmp eq i32 %bf.clear1127, 10
  br i1 %cmp1128, label %land.lhs.true1130, label %if.else1138

land.lhs.true1130:                                ; preds = %land.lhs.true1121
  %184 = getelementptr inbounds %union.tree_node* %182, i64 0, i32 0, i32 13
  %185 = load %union.tree_node** %184, align 8, !tbaa !0
  %call1134 = call %union.tree_node* @signed_type(%union.tree_node* %result_type.4) #8
  %call1135 = call i32 @int_fits_type_p(%union.tree_node* %185, %union.tree_node* %call1134) #8
  %tobool1136 = icmp eq i32 %call1135, 0
  br i1 %tobool1136, label %if.else1138, label %if.end1143

if.else1138:                                      ; preds = %land.lhs.true1130, %land.lhs.true1121, %if.else1114
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str60, i64 0, i64 0)) #8
  br label %if.end1143

if.end1143:                                       ; preds = %land.lhs.true1109, %land.lhs.true1130, %if.else1088, %while.end1076, %if.else1138
  %code1145 = getelementptr inbounds %union.tree_node* %call987, i64 0, i32 0, i32 0, i32 2
  %186 = bitcast [4 x i8]* %code1145 to i32*
  %bf.load1146 = load i32* %186, align 8
  %bf.clear1147 = and i32 %bf.load1146, 255
  %cmp1148 = icmp eq i32 %bf.clear1147, 90
  %code1151 = getelementptr inbounds %union.tree_node* %call988, i64 0, i32 0, i32 0, i32 2
  %187 = bitcast [4 x i8]* %code1151 to i32*
  %bf.load1152 = load i32* %187, align 8
  %bf.clear1153 = and i32 %bf.load1152, 255
  %cmp1154 = icmp eq i32 %bf.clear1153, 90
  %cmp1156 = xor i1 %cmp1148, %cmp1154
  br i1 %cmp1156, label %if.then1158, label %if.end1248

if.then1158:                                      ; preds = %if.end1143
  br i1 %cmp1148, label %if.then1165, label %if.else1170

if.then1165:                                      ; preds = %if.then1158
  %operands1167 = getelementptr inbounds %union.tree_node* %call987, i64 0, i32 0, i32 2
  %arrayidx1168 = bitcast i32* %operands1167 to %union.tree_node**
  %188 = load %union.tree_node** %arrayidx1168, align 8, !tbaa !0
  %call1169 = call %union.tree_node* @get_narrower(%union.tree_node* %188, i32* %unsignedp0) #8
  br label %if.end1175

if.else1170:                                      ; preds = %if.then1158
  %operands1172 = getelementptr inbounds %union.tree_node* %call988, i64 0, i32 0, i32 2
  %arrayidx1173 = bitcast i32* %operands1172 to %union.tree_node**
  %189 = load %union.tree_node** %arrayidx1173, align 8, !tbaa !0
  %call1174 = call %union.tree_node* @get_narrower(%union.tree_node* %189, i32* %unsignedp1) #8
  br label %if.end1175

if.end1175:                                       ; preds = %if.else1170, %if.then1165
  %primop0.0 = phi %union.tree_node* [ %call1169, %if.then1165 ], [ %call987, %if.else1170 ]
  %primop1.0 = phi %union.tree_node* [ %call988, %if.then1165 ], [ %call1174, %if.else1170 ]
  %call1176 = call i32 @host_integerp(%union.tree_node* %primop0.0, i32 0) #8
  %tobool1177 = icmp eq i32 %call1176, 0
  br i1 %tobool1177, label %lor.lhs.false1178, label %if.then1181

lor.lhs.false1178:                                ; preds = %if.end1175
  %call1179 = call i32 @host_integerp(%union.tree_node* %primop1.0, i32 0) #8
  %tobool1180 = icmp eq i32 %call1179, 0
  br i1 %tobool1180, label %if.else1212, label %if.then1181

if.then1181:                                      ; preds = %lor.lhs.false1178, %if.end1175
  %call1182 = call i32 @host_integerp(%union.tree_node* %primop0.0, i32 0) #8
  %tobool1183 = icmp eq i32 %call1182, 0
  br i1 %tobool1183, label %if.else1186, label %if.then1184

if.then1184:                                      ; preds = %if.then1181
  %190 = load i32* %unsignedp1, align 4, !tbaa !3
  %call1185 = call i64 @tree_low_cst(%union.tree_node* %primop0.0, i32 0) #8
  br label %if.end1188

if.else1186:                                      ; preds = %if.then1181
  %191 = load i32* %unsignedp0, align 4, !tbaa !3
  %call1187 = call i64 @tree_low_cst(%union.tree_node* %primop1.0, i32 0) #8
  br label %if.end1188

if.end1188:                                       ; preds = %if.else1186, %if.then1184
  %primop.0 = phi %union.tree_node* [ %primop1.0, %if.then1184 ], [ %primop0.0, %if.else1186 ]
  %constant.0 = phi i64 [ %call1185, %if.then1184 ], [ %call1187, %if.else1186 ]
  %unsignedp.0 = phi i32 [ %190, %if.then1184 ], [ %191, %if.else1186 ]
  %type1190 = getelementptr inbounds %union.tree_node* %primop.0, i64 0, i32 0, i32 0, i32 1
  %192 = load %union.tree_node** %type1190, align 8, !tbaa !0
  %type1191 = bitcast %union.tree_node* %192 to %struct.tree_type*
  %precision1192 = getelementptr inbounds %struct.tree_type* %type1191, i64 0, i32 6
  %193 = bitcast [4 x i8]* %precision1192 to i32*
  %bf.load1193 = load i32* %193, align 4
  %bf.clear1194 = and i32 %bf.load1193, 511
  %type1195 = bitcast %union.tree_node* %result_type.4 to %struct.tree_type*
  %precision1196 = getelementptr inbounds %struct.tree_type* %type1195, i64 0, i32 6
  %194 = bitcast [4 x i8]* %precision1196 to i32*
  %bf.load1197 = load i32* %194, align 4
  %bf.clear1198 = and i32 %bf.load1197, 511
  %notlhs = icmp uge i32 %bf.clear1194, %bf.clear1198
  %notrhs = icmp ugt i32 %bf.clear1194, 63
  %or.cond1335.not = or i1 %notrhs, %notlhs
  %tobool1205 = icmp eq i32 %unsignedp.0, 0
  %or.cond1658 = or i1 %or.cond1335.not, %tobool1205
  br i1 %or.cond1658, label %if.end1248, label %if.then1206

if.then1206:                                      ; preds = %if.end1188
  %sh_prom = zext i32 %bf.clear1194 to i64
  %shl = shl i64 -1, %sh_prom
  %and = and i64 %shl, %constant.0
  %cmp1207 = icmp eq i64 %and, %shl
  br i1 %cmp1207, label %if.end1248, label %if.then1209

if.then1209:                                      ; preds = %if.then1206
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([47 x i8]* @.str61, i64 0, i64 0)) #8
  br label %if.end1248

if.else1212:                                      ; preds = %lor.lhs.false1178
  %195 = load i32* %unsignedp0, align 4, !tbaa !3
  %tobool1213 = icmp eq i32 %195, 0
  br i1 %tobool1213, label %if.end1248, label %land.lhs.true1214

land.lhs.true1214:                                ; preds = %if.else1212
  %196 = load i32* %unsignedp1, align 4, !tbaa !3
  %tobool1215 = icmp eq i32 %196, 0
  br i1 %tobool1215, label %if.end1248, label %land.lhs.true1216

land.lhs.true1216:                                ; preds = %land.lhs.true1214
  %type1218 = getelementptr inbounds %union.tree_node* %primop0.0, i64 0, i32 0, i32 0, i32 1
  %197 = load %union.tree_node** %type1218, align 8, !tbaa !0
  %type1219 = bitcast %union.tree_node* %197 to %struct.tree_type*
  %precision1220 = getelementptr inbounds %struct.tree_type* %type1219, i64 0, i32 6
  %198 = bitcast [4 x i8]* %precision1220 to i32*
  %bf.load1221 = load i32* %198, align 4
  %bf.clear1222 = and i32 %bf.load1221, 511
  %type1223 = bitcast %union.tree_node* %result_type.4 to %struct.tree_type*
  %precision1224 = getelementptr inbounds %struct.tree_type* %type1223, i64 0, i32 6
  %199 = bitcast [4 x i8]* %precision1224 to i32*
  %bf.load1225 = load i32* %199, align 4
  %bf.clear1226 = and i32 %bf.load1225, 511
  %cmp1227 = icmp ult i32 %bf.clear1222, %bf.clear1226
  br i1 %cmp1227, label %land.lhs.true1229, label %if.end1248

land.lhs.true1229:                                ; preds = %land.lhs.true1216
  %type1231 = getelementptr inbounds %union.tree_node* %primop1.0, i64 0, i32 0, i32 0, i32 1
  %200 = load %union.tree_node** %type1231, align 8, !tbaa !0
  %type1232 = bitcast %union.tree_node* %200 to %struct.tree_type*
  %precision1233 = getelementptr inbounds %struct.tree_type* %type1232, i64 0, i32 6
  %201 = bitcast [4 x i8]* %precision1233 to i32*
  %bf.load1234 = load i32* %201, align 4
  %bf.clear1235 = and i32 %bf.load1234, 511
  %cmp1240 = icmp ult i32 %bf.clear1235, %bf.clear1226
  br i1 %cmp1240, label %if.then1242, label %if.end1248

if.then1242:                                      ; preds = %land.lhs.true1229
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([47 x i8]* @.str62, i64 0, i64 0)) #8
  br label %if.end1248

if.end1248:                                       ; preds = %if.end1188, %if.then1206, %land.lhs.true1214, %if.else1212, %if.end950, %if.end1143, %land.lhs.true1216, %land.lhs.true1229, %if.then1242, %if.then1209, %cond.false, %cond.true, %land.lhs.true683, %sw.epilog
  %final_type.2 = phi %union.tree_node* [ %final_type.1, %if.then1209 ], [ %final_type.1, %if.then1206 ], [ %final_type.1, %if.end1188 ], [ %final_type.1, %if.then1242 ], [ %final_type.1, %land.lhs.true1229 ], [ %final_type.1, %land.lhs.true1216 ], [ %final_type.1, %land.lhs.true1214 ], [ %final_type.1, %if.else1212 ], [ %final_type.1, %if.end1143 ], [ %final_type.1, %cond.true ], [ %final_type.1, %cond.false ], [ %final_type.1, %if.end950 ], [ null, %land.lhs.true683 ], [ null, %sw.epilog ]
  %converted.2 = phi i32 [ 1, %if.then1209 ], [ 1, %if.then1206 ], [ 1, %if.end1188 ], [ 1, %if.then1242 ], [ 1, %land.lhs.true1229 ], [ 1, %land.lhs.true1216 ], [ 1, %land.lhs.true1214 ], [ 1, %if.else1212 ], [ 1, %if.end1143 ], [ 1, %cond.true ], [ 1, %cond.false ], [ %converted.1, %if.end950 ], [ %converted.0, %land.lhs.true683 ], [ %converted.0, %sw.epilog ]
  %result_type.5 = phi %union.tree_node* [ %result_type.4, %if.then1209 ], [ %result_type.4, %if.then1206 ], [ %result_type.4, %if.end1188 ], [ %result_type.4, %if.then1242 ], [ %result_type.4, %land.lhs.true1229 ], [ %result_type.4, %land.lhs.true1216 ], [ %result_type.4, %land.lhs.true1214 ], [ %result_type.4, %if.else1212 ], [ %result_type.4, %if.end1143 ], [ %result_type.4, %cond.true ], [ %result_type.4, %cond.false ], [ %result_type.4, %if.end950 ], [ %result_type.1, %land.lhs.true683 ], [ %result_type.1, %sw.epilog ]
  %resultcode.2 = phi i32 [ %159, %if.then1209 ], [ %159, %if.then1206 ], [ %159, %if.end1188 ], [ %159, %if.then1242 ], [ %159, %land.lhs.true1229 ], [ %159, %land.lhs.true1216 ], [ %159, %land.lhs.true1214 ], [ %159, %if.else1212 ], [ %159, %if.end1143 ], [ %159, %cond.true ], [ %159, %cond.false ], [ %resultcode.1, %if.end950 ], [ %resultcode.1, %land.lhs.true683 ], [ %resultcode.1, %sw.epilog ]
  %op1.6 = phi %union.tree_node* [ %158, %if.then1209 ], [ %158, %if.then1206 ], [ %158, %if.end1188 ], [ %158, %if.then1242 ], [ %158, %land.lhs.true1229 ], [ %158, %land.lhs.true1216 ], [ %158, %land.lhs.true1214 ], [ %158, %if.else1212 ], [ %158, %if.end1143 ], [ %158, %cond.true ], [ %158, %cond.false ], [ %op1.5, %if.end950 ], [ %op1.5, %land.lhs.true683 ], [ %op1.5, %sw.epilog ]
  %op0.5 = phi %union.tree_node* [ %157, %if.then1209 ], [ %157, %if.then1206 ], [ %157, %if.end1188 ], [ %157, %if.then1242 ], [ %157, %land.lhs.true1229 ], [ %157, %land.lhs.true1216 ], [ %157, %land.lhs.true1214 ], [ %157, %if.else1212 ], [ %157, %if.end1143 ], [ %157, %cond.true ], [ %157, %cond.false ], [ %op0.4, %if.end950 ], [ %op0.2, %land.lhs.true683 ], [ %op0.2, %sw.epilog ]
  %tobool1249 = icmp eq %union.tree_node* %result_type.5, null
  br i1 %tobool1249, label %if.then1250, label %if.end1251

if.then1250:                                      ; preds = %if.end1248
  call void @binary_op_error(i32 %code) #8
  %202 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %return

if.end1251:                                       ; preds = %if.end1248
  %tobool1252 = icmp eq i32 %converted.2, 0
  br i1 %tobool1252, label %if.then1253, label %if.end1268

if.then1253:                                      ; preds = %if.end1251
  %type1255 = getelementptr inbounds %union.tree_node* %op0.5, i64 0, i32 0, i32 0, i32 1
  %203 = load %union.tree_node** %type1255, align 8, !tbaa !0
  %cmp1256 = icmp eq %union.tree_node* %203, %result_type.5
  br i1 %cmp1256, label %if.end1260, label %if.then1258

if.then1258:                                      ; preds = %if.then1253
  %call1259 = call %union.tree_node* @convert(%union.tree_node* %result_type.5, %union.tree_node* %op0.5) #8
  br label %if.end1260

if.end1260:                                       ; preds = %if.then1253, %if.then1258
  %op0.6 = phi %union.tree_node* [ %call1259, %if.then1258 ], [ %op0.5, %if.then1253 ]
  %type1262 = getelementptr inbounds %union.tree_node* %op1.6, i64 0, i32 0, i32 0, i32 1
  %204 = load %union.tree_node** %type1262, align 8, !tbaa !0
  %cmp1263 = icmp eq %union.tree_node* %204, %result_type.5
  br i1 %cmp1263, label %if.end1268, label %if.then1265

if.then1265:                                      ; preds = %if.end1260
  %call1266 = call %union.tree_node* @convert(%union.tree_node* %result_type.5, %union.tree_node* %op1.6) #8
  br label %if.end1268

if.end1268:                                       ; preds = %if.end1260, %if.end1251, %if.then1265
  %op1.7 = phi %union.tree_node* [ %op1.6, %if.end1251 ], [ %call1266, %if.then1265 ], [ %op1.6, %if.end1260 ]
  %op0.7 = phi %union.tree_node* [ %op0.5, %if.end1251 ], [ %op0.6, %if.then1265 ], [ %op0.6, %if.end1260 ]
  %cmp1269 = icmp eq %union.tree_node* %build_type.0, null
  %result_type.5.build_type.0 = select i1 %cmp1269, %union.tree_node* %result_type.5, %union.tree_node* %build_type.0
  %call1273 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %resultcode.2, %union.tree_node* %result_type.5.build_type.0, %union.tree_node* %op0.7, %union.tree_node* %op1.7) #8
  %call1274 = call %union.tree_node* @fold(%union.tree_node* %call1273) #8
  %cmp1275 = icmp eq %union.tree_node* %call1274, %call1273
  br i1 %cmp1275, label %if.then1277, label %if.end1292

if.then1277:                                      ; preds = %if.end1268
  %constant_flag = getelementptr inbounds %union.tree_node* %op0.7, i64 0, i32 0, i32 0, i32 2
  %205 = bitcast [4 x i8]* %constant_flag to i32*
  %bf.load1279 = load i32* %205, align 8
  %constant_flag1283 = getelementptr inbounds %union.tree_node* %op1.7, i64 0, i32 0, i32 0, i32 2
  %206 = bitcast [4 x i8]* %constant_flag1283 to i32*
  %bf.load1284 = load i32* %206, align 8
  %constant_flag1289 = getelementptr inbounds %union.tree_node* %call1273, i64 0, i32 0, i32 0, i32 2
  %207 = bitcast [4 x i8]* %constant_flag1289 to i32*
  %bf.load1290 = load i32* %207, align 8
  %bf.load1284.mask = and i32 %bf.load1279, 512
  %bf.shl = and i32 %bf.load1284.mask, %bf.load1284
  %bf.clear1291 = and i32 %bf.load1290, -513
  %bf.set = or i32 %bf.clear1291, %bf.shl
  store i32 %bf.set, i32* %207, align 8
  br label %if.end1292

if.end1292:                                       ; preds = %if.then1277, %if.end1268
  %cmp1293 = icmp eq %union.tree_node* %final_type.2, null
  br i1 %cmp1293, label %return, label %if.then1295

if.then1295:                                      ; preds = %if.end1292
  %call1296 = call %union.tree_node* @convert(%union.tree_node* %final_type.2, %union.tree_node* %call1274) #8
  br label %return

return:                                           ; preds = %while.end75, %if.then87.i, %if.end81.i, %if.end1292, %if.then952, %if.then1295, %if.then1250, %if.then673, %if.then108, %if.then90, %if.then84
  %retval.0 = phi %union.tree_node* [ %call1296, %if.then1295 ], [ %202, %if.then1250 ], [ %117, %if.then673 ], [ %call109, %if.then108 ], [ %call85, %if.then84 ], [ %call91, %if.then90 ], [ %call953, %if.then952 ], [ %call1274, %if.end1292 ], [ %call85.i, %if.end81.i ], [ %call84.i, %if.then87.i ], [ %4, %while.end75 ]
  ret %union.tree_node* %retval.0
}
