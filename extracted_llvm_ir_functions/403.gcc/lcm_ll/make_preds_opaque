define internal fastcc void @make_preds_opaque(%struct.basic_block_def* nocapture %b, i32 %j) #0 {
entry:
  %pred = getelementptr inbounds %struct.basic_block_def* %b, i64 0, i32 4
  %e.025 = load %struct.edge_def** %pred, align 8
  %tobool26 = icmp eq %struct.edge_def* %e.025, null
  br i1 %tobool26, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %div = lshr i32 %j, 6
  %idxprom = zext i32 %div to i64
  %rem = and i32 %j, 63
  %sh_prom = zext i32 %rem to i64
  %0 = shl i64 1, %sh_prom
  %neg = xor i64 %0, -1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %e.027 = phi %struct.edge_def* [ %e.025, %for.body.lr.ph ], [ %e.0, %for.inc ]
  %src = getelementptr inbounds %struct.edge_def* %e.027, i64 0, i32 2
  %1 = load %struct.basic_block_def** %src, align 8, !tbaa !3
  %aux = getelementptr inbounds %struct.edge_def* %e.027, i64 0, i32 5
  %2 = load i8** %aux, align 8, !tbaa !3
  %tobool1 = icmp eq i8* %2, null
  br i1 %tobool1, label %lor.lhs.false, label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %index = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !0
  %idxprom2 = sext i32 %3 to i64
  %4 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def** %4, i64 %idxprom2
  %5 = load %struct.simple_bitmap_def** %arrayidx, align 8, !tbaa !3
  %arrayidx3 = getelementptr inbounds %struct.simple_bitmap_def* %5, i64 0, i32 3, i64 %idxprom
  %6 = load i64* %arrayidx3, align 8, !tbaa !4
  %and24 = and i64 %6, %0
  %tobool4 = icmp eq i64 %and24, 0
  br i1 %tobool4, label %for.inc, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %and14 = and i64 %6, %neg
  store i64 %and14, i64* %arrayidx3, align 8, !tbaa !4
  tail call fastcc void @make_preds_opaque(%struct.basic_block_def* %1, i32 %j) #5
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false, %for.body, %if.end
  %pred_next = getelementptr inbounds %struct.edge_def* %e.027, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}
