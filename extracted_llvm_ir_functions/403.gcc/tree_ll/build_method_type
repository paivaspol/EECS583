define %union.tree_node* @build_method_type(%union.tree_node* %basetype, %union.tree_node* %type) #0 {
entry:
  %call = tail call %union.tree_node* @make_node(i32 16) #10
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str147, i64 0, i64 0), i32 4009, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.build_method_type, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node* %basetype, i64 0, i32 0, i32 15
  %2 = load %union.tree_node** %1, align 8, !tbaa !0
  %3 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 13
  store %union.tree_node* %2, %union.tree_node** %3, align 8, !tbaa !0
  %type4 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type4, align 8, !tbaa !0
  %type6 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %4, %union.tree_node** %type6, align 8, !tbaa !0
  %call7 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %basetype) #10
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %5 = load i8** %values, align 8
  %6 = bitcast i8* %5 to %union.tree_node*
  %call.i = tail call i8* @ggc_alloc(i64 40) #9
  tail call void @llvm.memset.p0i8.i64(i8* %call.i, i8 0, i64 24, i32 8, i1 false) #4
  %code.i = getelementptr inbounds i8* %call.i, i64 16
  %7 = bitcast i8* %code.i to i32*
  store i32 2, i32* %7, align 8
  %chain2.i = bitcast i8* %call.i to %union.tree_node**
  store %union.tree_node* %6, %union.tree_node** %chain2.i, align 8, !tbaa !0
  %purpose3.i = getelementptr inbounds i8* %call.i, i64 24
  %8 = bitcast i8* %purpose3.i to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %8, align 8, !tbaa !0
  %value5.i = getelementptr inbounds i8* %call.i, i64 32
  %9 = bitcast i8* %value5.i to %union.tree_node**
  store %union.tree_node* %call7, %union.tree_node** %9, align 8, !tbaa !0
  %values11 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 1
  store i8* %call.i, i8** %values11, align 8, !tbaa !0
  %10 = ptrtoint %union.tree_node* %basetype to i64
  %and = and i64 %10, 262143
  %11 = ptrtoint %union.tree_node* %type to i64
  %and12 = and i64 %11, 262143
  %add = add i64 %and12, %and
  %conv = trunc i64 %add to i32
  %call13 = tail call %union.tree_node* @type_hash_canon(i32 %conv, %union.tree_node* %call) #10
  %size = getelementptr inbounds %union.tree_node* %call13, i64 0, i32 0, i32 2
  %12 = bitcast i32* %size to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !0
  %cmp15 = icmp eq %union.tree_node* %13, null
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  tail call void @layout_type(%union.tree_node* %call13) #9
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then17
  ret %union.tree_node* %call13
}
