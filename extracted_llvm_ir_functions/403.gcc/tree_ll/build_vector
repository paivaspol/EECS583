define %union.tree_node* @build_vector(%union.tree_node* %type, %union.tree_node* %vals) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %type}, i64 0, metadata !963), !dbg !2044
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %vals}, i64 0, metadata !964), !dbg !2044
  %call = tail call %union.tree_node* @make_node(i32 28) #11, !dbg !2045
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call}, i64 0, metadata !965), !dbg !2045
  tail call void @llvm.dbg.value(metadata !429, i64 0, metadata !966), !dbg !2046
  tail call void @llvm.dbg.value(metadata !429, i64 0, metadata !967), !dbg !2046
  %elements = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2, !dbg !2047
  %0 = bitcast i32* %elements to %union.tree_node**, !dbg !2047
  store %union.tree_node* %vals, %union.tree_node** %0, align 8, !dbg !2047, !tbaa !1913
  %type1 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !2048
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !dbg !2048, !tbaa !1913
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %vals}, i64 0, metadata !968), !dbg !2049
  %tobool31 = icmp eq %union.tree_node* %vals, null, !dbg !2049
  br i1 %tobool31, label %for.end, label %for.body, !dbg !2049

for.body:                                         ; preds = %entry, %for.body
  %over1.034 = phi i32 [ %or, %for.body ], [ 0, %entry ]
  %link.033 = phi %union.tree_node* [ %4, %for.body ], [ %vals, %entry ]
  %over2.032 = phi i32 [ %or8, %for.body ], [ 0, %entry ]
  %value2 = getelementptr inbounds %union.tree_node* %link.033, i64 0, i32 0, i32 2, !dbg !2050
  %1 = bitcast i32* %value2 to %union.tree_node**, !dbg !2050
  %2 = load %union.tree_node** %1, align 8, !dbg !2050, !tbaa !1913
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %2}, i64 0, metadata !969), !dbg !2050
  %public_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2, !dbg !2051
  %3 = bitcast [4 x i8]* %public_flag to i32*, !dbg !2051
  %bf.load = load i32* %3, align 8, !dbg !2051
  %bf.lshr = lshr i32 %bf.load, 19, !dbg !2051
  %bf.clear = and i32 %bf.lshr, 1, !dbg !2051
  %or = or i32 %bf.clear, %over1.034, !dbg !2051
  tail call void @llvm.dbg.value(metadata !{i32 %or}, i64 0, metadata !966), !dbg !2051
  %bf.lshr6 = lshr i32 %bf.load, 18, !dbg !2052
  %bf.clear7 = and i32 %bf.lshr6, 1, !dbg !2052
  %or8 = or i32 %bf.clear7, %over2.032, !dbg !2052
  tail call void @llvm.dbg.value(metadata !{i32 %or8}, i64 0, metadata !967), !dbg !2052
  %chain = getelementptr inbounds %union.tree_node* %link.033, i64 0, i32 0, i32 0, i32 0, !dbg !2049
  %4 = load %union.tree_node** %chain, align 8, !dbg !2049, !tbaa !1913
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %4}, i64 0, metadata !968), !dbg !2049
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !2049
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %for.body, !dbg !2049

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %phitmp = shl i32 %or, 19, !dbg !2049
  %phitmp36 = and i32 %phitmp, 524288, !dbg !2049
  %phitmp37 = shl i32 %or8, 18, !dbg !2049
  %phitmp38 = and i32 %phitmp37, 262144, !dbg !2049
  br label %for.end, !dbg !2049

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry
  %over1.0.lcssa = phi i32 [ %phitmp36, %for.cond.for.end_crit_edge ], [ 0, %entry ]
  %over2.0.lcssa = phi i32 [ %phitmp38, %for.cond.for.end_crit_edge ], [ 0, %entry ]
  %public_flag11 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2, !dbg !2053
  %5 = bitcast [4 x i8]* %public_flag11 to i32*, !dbg !2053
  %bf.load12 = load i32* %5, align 8, !dbg !2053
  %bf.clear13 = and i32 %bf.load12, -786433, !dbg !2053
  %bf.set = or i32 %over1.0.lcssa, %over2.0.lcssa, !dbg !2053
  %bf.set20 = or i32 %bf.set, %bf.clear13, !dbg !2054
  store i32 %bf.set20, i32* %5, align 8, !dbg !2054
  ret %union.tree_node* %call, !dbg !2055
}
