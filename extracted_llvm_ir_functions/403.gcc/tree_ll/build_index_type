define %union.tree_node* @build_index_type(%union.tree_node* %maxval) #0 {
entry:
  %call = tail call %union.tree_node* @make_node(i32 6) #10
  %0 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %type, align 8, !tbaa !0
  %1 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %type1 = bitcast %union.tree_node* %1 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %2 = bitcast [4 x i8]* %precision to i32*
  %bf.load = load i32* %2, align 4
  %bf.clear = and i32 %bf.load, 511
  %type2 = bitcast %union.tree_node* %call to %struct.tree_type*
  %precision3 = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6
  %3 = bitcast [4 x i8]* %precision3 to i32*
  %bf.load4 = load i32* %3, align 4
  %bf.clear5 = and i32 %bf.load4, -512
  %bf.set = or i32 %bf.clear5, %bf.clear
  store i32 %bf.set, i32* %3, align 4
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !0
  %5 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 12
  store %union.tree_node* %4, %union.tree_node** %5, align 8, !tbaa !0
  %6 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %call7 = tail call %union.tree_node* @convert(%union.tree_node* %6, %union.tree_node* %maxval) #9
  %7 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 13
  store %union.tree_node* %call7, %union.tree_node** %7, align 8, !tbaa !0
  %8 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %type10 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type10, i64 0, i32 6
  %9 = bitcast [4 x i8]* %mode to i32*
  %bf.load11 = load i32* %9, align 4
  %bf.clear12 = and i32 %bf.load11, 65024
  %bf.load15 = load i32* %3, align 4
  %bf.clear17 = and i32 %bf.load15, -65025
  %bf.set18 = or i32 %bf.clear17, %bf.clear12
  store i32 %bf.set18, i32* %3, align 4
  %10 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %size = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 2
  %11 = bitcast i32* %size to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !0
  %size21 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %13 = bitcast i32* %size21 to %union.tree_node**
  store %union.tree_node* %12, %union.tree_node** %13, align 8, !tbaa !0
  %14 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %15 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 4
  %16 = load %union.tree_node** %15, align 8, !tbaa !0
  %17 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 4
  store %union.tree_node* %16, %union.tree_node** %17, align 8, !tbaa !0
  %18 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %align = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 7
  %19 = bitcast %union.tree_node** %align to i32*
  %20 = load i32* %19, align 4, !tbaa !4
  %align27 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 7
  %21 = bitcast %union.tree_node** %align27 to i32*
  store i32 %20, i32* %21, align 4, !tbaa !4
  %type28 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type* %type28, i64 0, i32 6
  %22 = bitcast [4 x i8]* %user_align to i32*
  %bf.load29 = load i32* %22, align 4
  %bf.lshr30 = and i32 %bf.load29, -2147483648
  %bf.clear36 = and i32 %bf.set18, 2147483647
  %bf.set37 = or i32 %bf.clear36, %bf.lshr30
  store i32 %bf.set37, i32* %3, align 4
  %code.i = getelementptr inbounds %union.tree_node* %maxval, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast [4 x i8]* %code.i to i32*
  %bf.load.i = load i32* %23, align 8
  %24 = and i32 %bf.load.i, 524543
  %25 = icmp eq i32 %24, 25
  br i1 %25, label %land.rhs.i, label %return

land.rhs.i:                                       ; preds = %entry
  %int_cst4.i = getelementptr inbounds %union.tree_node* %maxval, i64 0, i32 0, i32 2
  %high.i = getelementptr inbounds i32* %int_cst4.i, i64 2
  %26 = bitcast i32* %high.i to i64*
  %27 = load i64* %26, align 8, !tbaa !3
  %cmp5.i = icmp eq i64 %27, 0
  br i1 %cmp5.i, label %if.then, label %return

if.then:                                          ; preds = %land.rhs.i
  %call39 = tail call i64 @tree_low_cst(%union.tree_node* %maxval, i32 1) #10
  %conv = trunc i64 %call39 to i32
  %call40 = tail call %union.tree_node* @type_hash_canon(i32 %conv, %union.tree_node* %call) #10
  br label %return

return:                                           ; preds = %land.rhs.i, %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call40, %if.then ], [ %call, %entry ], [ %call, %land.rhs.i ]
  ret %union.tree_node* %retval.0
}
