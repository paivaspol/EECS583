define %union.tree_node* @lookup_attribute(i8* nocapture %attr_name, %union.tree_node* %list) #0 {
entry:
  %tobool11 = icmp eq %union.tree_node* %list, null
  br i1 %tobool11, label %return, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %l.012 = phi %union.tree_node* [ %3, %for.inc ], [ %list, %entry ]
  %purpose = getelementptr inbounds %union.tree_node* %l.012, i64 0, i32 0, i32 1
  %0 = load i8** %purpose, align 8
  %code = getelementptr inbounds i8* %0, i64 16
  %1 = bitcast i8* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str147, i64 0, i64 0), i32 2848, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.lookup_attribute, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %for.body
  %2 = bitcast i8* %0 to %union.tree_node*
  %call = tail call i32 @is_attribute_p(i8* %attr_name, %union.tree_node* %2) #10
  %tobool4 = icmp eq i32 %call, 0
  br i1 %tobool4, label %for.inc, label %return

for.inc:                                          ; preds = %if.end
  %chain = getelementptr inbounds %union.tree_node* %l.012, i64 0, i32 0, i32 0, i32 0
  %3 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %3, null
  br i1 %tobool, label %return, label %for.body

return:                                           ; preds = %for.inc, %if.end, %entry
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %l.012, %if.end ], [ null, %for.inc ]
  ret %union.tree_node* %retval.0
}
