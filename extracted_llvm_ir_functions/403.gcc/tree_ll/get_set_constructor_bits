define %union.tree_node* @get_set_constructor_bits(%union.tree_node* nocapture %init, i8* nocapture %buffer, i32 %bit_size) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %init, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !0
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = load i8** %values, align 8
  %minval = getelementptr inbounds i8* %1, i64 104
  %2 = bitcast i8* %minval to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !0
  %call = tail call i64 @tree_low_cst(%union.tree_node* %3, i32 0) #10
  %cmp107 = icmp sgt i32 %bit_size, 0
  br i1 %cmp107, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %4 = add i32 %bit_size, -1
  %5 = zext i32 %4 to i64
  %6 = add i64 %5, 1
  call void @llvm.memset.p0i8.i64(i8* %buffer, i8 0, i64 %6, i32 1, i1 false)
  br label %for.end

for.end:                                          ; preds = %for.body.lr.ph, %entry
  %operands = getelementptr inbounds %union.tree_node* %init, i64 0, i32 0, i32 2
  %arrayidx3 = getelementptr inbounds i32* %operands, i64 2
  %7 = bitcast i32* %arrayidx3 to %union.tree_node**
  %vals.0103 = load %union.tree_node** %7, align 8
  %cmp5104 = icmp eq %union.tree_node* %vals.0103, null
  br i1 %cmp5104, label %return, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.end
  %conv58 = sext i32 %bit_size to i64
  %8 = add i64 %call, 1
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.inc66
  %vals.0106 = phi %union.tree_node* [ %vals.0103, %for.body6.lr.ph ], [ %vals.0, %for.inc66 ]
  %non_const_bits.0105 = phi %union.tree_node* [ null, %for.body6.lr.ph ], [ %non_const_bits.1, %for.inc66 ]
  %value = getelementptr inbounds %union.tree_node* %vals.0106, i64 0, i32 0, i32 2
  %9 = bitcast i32* %value to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !0
  %call7 = tail call i32 @host_integerp(%union.tree_node* %10, i32 0) #10
  %tobool = icmp eq i32 %call7, 0
  %purpose15.phi.trans.insert = getelementptr inbounds %union.tree_node* %vals.0106, i64 0, i32 0, i32 1
  %.pre = load i8** %purpose15.phi.trans.insert, align 8
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body6
  %cmp9 = icmp eq i8* %.pre, null
  br i1 %cmp9, label %if.else50, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = bitcast i8* %.pre to %union.tree_node*
  %call12 = tail call i32 @host_integerp(%union.tree_node* %11, i32 0) #10
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %if.then, label %if.then22

if.then:                                          ; preds = %for.body6, %land.lhs.true
  %12 = bitcast i8* %.pre to %union.tree_node*
  %call.i = tail call i8* @ggc_alloc(i64 40) #9
  %13 = bitcast i8* %call.i to %union.tree_node*
  tail call void @llvm.memset.p0i8.i64(i8* %call.i, i8 0, i64 24, i32 8, i1 false) #4
  %code.i = getelementptr inbounds i8* %call.i, i64 16
  %14 = bitcast i8* %code.i to i32*
  store i32 2, i32* %14, align 8
  %chain2.i = bitcast i8* %call.i to %union.tree_node**
  store %union.tree_node* %non_const_bits.0105, %union.tree_node** %chain2.i, align 8, !tbaa !0
  %purpose3.i = getelementptr inbounds i8* %call.i, i64 24
  %15 = bitcast i8* %purpose3.i to %union.tree_node**
  store %union.tree_node* %12, %union.tree_node** %15, align 8, !tbaa !0
  %value5.i = getelementptr inbounds i8* %call.i, i64 32
  %16 = bitcast i8* %value5.i to %union.tree_node**
  store %union.tree_node* %10, %union.tree_node** %16, align 8, !tbaa !0
  br label %for.inc66

if.then22:                                        ; preds = %land.lhs.true
  %call25 = tail call i64 @tree_low_cst(%union.tree_node* %11, i32 0) #10
  %sub = sub nsw i64 %call25, %call
  %17 = load %union.tree_node** %9, align 8, !tbaa !0
  %call28 = tail call i64 @tree_low_cst(%union.tree_node* %17, i32 0) #10
  %sub29 = sub nsw i64 %call28, %call
  %cmp30 = icmp slt i64 %sub, 0
  br i1 %cmp30, label %if.then41, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %if.then22
  %notlhs = icmp slt i64 %sub, %conv58
  %notrhs = icmp sgt i64 %sub29, -1
  %or.cond.not = and i1 %notrhs, %notlhs
  %cmp39 = icmp slt i64 %sub29, %conv58
  %or.cond97 = and i1 %or.cond.not, %cmp39
  br i1 %or.cond97, label %for.cond42.preheader, label %if.then41

for.cond42.preheader:                             ; preds = %lor.lhs.false31
  %cmp4399 = icmp sgt i64 %sub, %sub29
  br i1 %cmp4399, label %for.inc66, label %for.body45.lr.ph

for.body45.lr.ph:                                 ; preds = %for.cond42.preheader
  %scevgep.sum = sub i64 %call25, %call
  %scevgep109 = getelementptr i8* %buffer, i64 %scevgep.sum
  %18 = sub i64 %call25, %call
  %19 = sub i64 %call28, %call
  %20 = icmp sgt i64 %18, %19
  %smax = select i1 %20, i64 %18, i64 %19
  %21 = add i64 %8, %smax
  %22 = sub i64 %21, %call25
  call void @llvm.memset.p0i8.i64(i8* %scevgep109, i8 1, i64 %22, i32 1, i1 false)
  br label %for.inc66

if.then41:                                        ; preds = %lor.lhs.false31, %if.then22
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str147, i64 0, i64 0), i32 4718, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.get_set_constructor_bits, i64 0, i64 0)) #8
  unreachable

if.else50:                                        ; preds = %lor.lhs.false
  %call53 = tail call i64 @tree_low_cst(%union.tree_node* %10, i32 0) #10
  %sub54 = sub nsw i64 %call53, %call
  %cmp55 = icmp sgt i64 %sub54, -1
  %cmp59 = icmp slt i64 %sub54, %conv58
  %or.cond = and i1 %cmp55, %cmp59
  br i1 %or.cond, label %if.end62, label %if.then61

if.then61:                                        ; preds = %if.else50
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str169, i64 0, i64 0)) #9
  br label %return

if.end62:                                         ; preds = %if.else50
  %arrayidx63 = getelementptr inbounds i8* %buffer, i64 %sub54
  store i8 1, i8* %arrayidx63, align 1, !tbaa !1
  br label %for.inc66

for.inc66:                                        ; preds = %for.cond42.preheader, %for.body45.lr.ph, %if.then, %if.end62
  %non_const_bits.1 = phi %union.tree_node* [ %non_const_bits.0105, %if.end62 ], [ %13, %if.then ], [ %non_const_bits.0105, %for.body45.lr.ph ], [ %non_const_bits.0105, %for.cond42.preheader ]
  %chain = getelementptr inbounds %union.tree_node* %vals.0106, i64 0, i32 0, i32 0, i32 0
  %vals.0 = load %union.tree_node** %chain, align 8
  %cmp5 = icmp eq %union.tree_node* %vals.0, null
  br i1 %cmp5, label %return, label %for.body6

return:                                           ; preds = %for.end, %for.inc66, %if.then61
  %retval.0 = phi %union.tree_node* [ null, %if.then61 ], [ null, %for.end ], [ %non_const_bits.1, %for.inc66 ]
  ret %union.tree_node* %retval.0
}
