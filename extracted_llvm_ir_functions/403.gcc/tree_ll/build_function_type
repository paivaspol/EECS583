define %union.tree_node* @build_function_type(%union.tree_node* %value_type, %union.tree_node* %arg_types) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %value_type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str150, i64 0, i64 0)) #9
  %1 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %value_type.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %value_type, %entry ]
  %call = tail call %union.tree_node* @make_node(i32 23) #10
  %type = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %value_type.addr.0, %union.tree_node** %type, align 8, !tbaa !0
  %values = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 1
  %arg_types.c = bitcast %union.tree_node* %arg_types to i8*
  store i8* %arg_types.c, i8** %values, align 8, !tbaa !0
  %2 = ptrtoint %union.tree_node* %value_type.addr.0 to i64
  %and = and i64 %2, 262143
  %tobool6.i = icmp eq %union.tree_node* %arg_types, null
  br i1 %tobool6.i, label %type_hash_list.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end, %for.body.i
  %tail.08.i = phi %union.tree_node* [ %6, %for.body.i ], [ %arg_types, %if.end ]
  %hashcode.07.i = phi i64 [ %add.i, %for.body.i ], [ 0, %if.end ]
  %value.i = getelementptr inbounds %union.tree_node* %tail.08.i, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value.i to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  %5 = ptrtoint %union.tree_node* %4 to i64
  %and.i = and i64 %5, 262143
  %conv.i = and i64 %hashcode.07.i, 4294967295
  %add.i = add i64 %and.i, %conv.i
  %chain.i = getelementptr inbounds %union.tree_node* %tail.08.i, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain.i, align 8, !tbaa !0
  %tobool.i = icmp eq %union.tree_node* %6, null
  br i1 %tobool.i, label %for.cond.for.end_crit_edge.i, label %for.body.i

for.cond.for.end_crit_edge.i:                     ; preds = %for.body.i
  %fold = add i64 %and.i, %hashcode.07.i
  %phitmp = and i64 %fold, 4294967295
  br label %type_hash_list.exit

type_hash_list.exit:                              ; preds = %if.end, %for.cond.for.end_crit_edge.i
  %hashcode.0.lcssa.i = phi i64 [ %phitmp, %for.cond.for.end_crit_edge.i ], [ 0, %if.end ]
  %add = add i64 %hashcode.0.lcssa.i, %and
  %conv4 = trunc i64 %add to i32
  %call5 = tail call %union.tree_node* @type_hash_canon(i32 %conv4, %union.tree_node* %call) #10
  %size = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 2
  %7 = bitcast i32* %size to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !0
  %cmp7 = icmp eq %union.tree_node* %8, null
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %type_hash_list.exit
  tail call void @layout_type(%union.tree_node* %call5) #9
  br label %if.end10

if.end10:                                         ; preds = %type_hash_list.exit, %if.then9
  ret %union.tree_node* %call5
}
