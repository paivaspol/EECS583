define i32 @unsafe_for_reeval(%union.tree_node* %expr) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %expr, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %code3 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code3 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default.i [
    i32 118, label %first_rtl_op.exit
    i32 136, label %sw.bb1.i
    i32 120, label %sw.bb1.i
    i32 55, label %first_rtl_op.exit
    i32 54, label %sw.default
  ]

sw.bb1.i:                                         ; preds = %if.end, %if.end
  br label %first_rtl_op.exit

sw.default.i:                                     ; preds = %if.end
  %idxprom.i72 = zext i32 %bf.clear to i64
  %arrayidx.i = getelementptr inbounds [256 x i32]* @tree_code_length, i64 0, i64 %idxprom.i72
  %1 = load i32* %arrayidx.i, align 4, !tbaa !4
  br label %first_rtl_op.exit

first_rtl_op.exit:                                ; preds = %if.end, %if.end, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi i32 [ %1, %sw.default.i ], [ 0, %sw.bb1.i ], [ 2, %if.end ], [ 2, %if.end ]
  switch i32 %bf.clear, label %sw.default [
    i32 118, label %return
    i32 120, label %return
    i32 2, label %for.body
    i32 53, label %sw.bb9
    i32 50, label %sw.epilog
  ]

for.body:                                         ; preds = %first_rtl_op.exit, %for.body
  %exp.080 = phi %union.tree_node* [ %4, %for.body ], [ %expr, %first_rtl_op.exit ]
  %unsafeness.079 = phi i32 [ %cond, %for.body ], [ 0, %first_rtl_op.exit ]
  %value = getelementptr inbounds %union.tree_node* %exp.080, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !0
  %call6 = tail call i32 @unsafe_for_reeval(%union.tree_node* %3) #10
  %cmp7 = icmp sgt i32 %call6, %unsafeness.079
  %cond = select i1 %cmp7, i32 %call6, i32 %unsafeness.079
  %chain = getelementptr inbounds %union.tree_node* %exp.080, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain, align 8, !tbaa !0
  %cmp5 = icmp eq %union.tree_node* %4, null
  br i1 %cmp5, label %return, label %for.body

sw.bb9:                                           ; preds = %first_rtl_op.exit
  %operands = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %5 = bitcast i32* %arrayidx to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !0
  %call11 = tail call i32 @unsafe_for_reeval(%union.tree_node* %6) #10
  %cmp12 = icmp sgt i32 %call11, 1
  %cond16 = select i1 %cmp12, i32 %call11, i32 1
  ret i32 %cond16

sw.default:                                       ; preds = %if.end, %first_rtl_op.exit
  %retval.0.i71 = phi i32 [ %retval.0.i, %first_rtl_op.exit ], [ 3, %if.end ]
  %7 = load i32 (%union.tree_node*)** @lang_unsafe_for_reeval, align 8, !tbaa !0
  %cmp18 = icmp eq i32 (%union.tree_node*)* %7, null
  br i1 %cmp18, label %sw.epilog, label %if.then19

if.then19:                                        ; preds = %sw.default
  %call20 = tail call i32 %7(%union.tree_node* %expr) #9
  %cmp21 = icmp sgt i32 %call20, -1
  br i1 %cmp21, label %return, label %sw.epilog

sw.epilog:                                        ; preds = %first_rtl_op.exit, %sw.default, %if.then19
  %retval.0.i70 = phi i32 [ %retval.0.i71, %if.then19 ], [ %retval.0.i71, %sw.default ], [ %retval.0.i, %first_rtl_op.exit ]
  %unsafeness.1 = phi i32 [ 0, %if.then19 ], [ 0, %sw.default ], [ 1, %first_rtl_op.exit ]
  %idxprom69 = zext i32 %bf.clear to i64
  %arrayidx25 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom69
  %8 = load i8* %arrayidx25, align 1, !tbaa !1
  %conv = sext i8 %8 to i32
  switch i32 %conv, label %sw.default45 [
    i32 99, label %return
    i32 116, label %return
    i32 120, label %return
    i32 100, label %return
    i32 98, label %return
    i32 101, label %for.cond28.preheader
    i32 114, label %for.cond28.preheader
    i32 115, label %for.cond28.preheader
    i32 60, label %for.cond28.preheader
    i32 50, label %for.cond28.preheader
    i32 49, label %for.cond28.preheader
  ]

for.cond28.preheader:                             ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %cmp2974 = icmp sgt i32 %retval.0.i70, 0
  br i1 %cmp2974, label %for.body31.lr.ph, label %return

for.body31.lr.ph:                                 ; preds = %for.cond28.preheader
  %operands34 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 2
  %9 = bitcast i32* %operands34 to [1 x %union.tree_node*]*
  %10 = sext i32 %retval.0.i70 to i64
  br label %for.body31

for.body31:                                       ; preds = %for.body31.lr.ph, %for.body31
  %indvars.iv = phi i64 [ %10, %for.body31.lr.ph ], [ %indvars.iv.next, %for.body31 ]
  %unsafeness.275 = phi i32 [ %unsafeness.1, %for.body31.lr.ph ], [ %cond42, %for.body31 ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx35 = getelementptr inbounds [1 x %union.tree_node*]* %9, i64 0, i64 %indvars.iv.next
  %11 = load %union.tree_node** %arrayidx35, align 8, !tbaa !0
  %call36 = tail call i32 @unsafe_for_reeval(%union.tree_node* %11) #10
  %cmp37 = icmp sgt i32 %call36, %unsafeness.275
  %cond42 = select i1 %cmp37, i32 %call36, i32 %unsafeness.275
  %12 = trunc i64 %indvars.iv.next to i32
  %cmp29 = icmp sgt i32 %12, 0
  br i1 %cmp29, label %for.body31, label %return

sw.default45:                                     ; preds = %sw.epilog
  br label %return

return:                                           ; preds = %for.body, %for.cond28.preheader, %for.body31, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %if.then19, %first_rtl_op.exit, %first_rtl_op.exit, %entry, %sw.default45
  %retval.0 = phi i32 [ 2, %sw.default45 ], [ 1, %entry ], [ 2, %first_rtl_op.exit ], [ 2, %first_rtl_op.exit ], [ %call20, %if.then19 ], [ 0, %sw.epilog ], [ 0, %sw.epilog ], [ 0, %sw.epilog ], [ 0, %sw.epilog ], [ 0, %sw.epilog ], [ %unsafeness.1, %for.cond28.preheader ], [ %cond42, %for.body31 ], [ %cond, %for.body ]
  ret i32 %retval.0
}
