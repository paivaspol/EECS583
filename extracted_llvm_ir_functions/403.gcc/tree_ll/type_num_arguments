define i32 @type_num_arguments(%union.tree_node* nocapture %type) #3 {
entry:
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %0 = load i8** %values, align 8
  %tobool6 = icmp eq i8* %0, null
  br i1 %tobool6, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %1 = bitcast i8* %0 to %union.tree_node*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.else
  %t.08 = phi %union.tree_node* [ %1, %for.body.lr.ph ], [ %5, %if.else ]
  %i.07 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.else ]
  %value = getelementptr inbounds %union.tree_node* %t.08, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 5
  br i1 %cmp, label %for.end, label %if.else

if.else:                                          ; preds = %for.body
  %inc = add nsw i32 %i.07, 1
  %chain = getelementptr inbounds %union.tree_node* %t.08, i64 0, i32 0, i32 0, i32 0
  %5 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %5, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %if.else, %for.body, %entry
  %i.0.lcssa = phi i32 [ 0, %entry ], [ %i.07, %for.body ], [ %inc, %if.else ]
  ret i32 %i.0.lcssa
}
