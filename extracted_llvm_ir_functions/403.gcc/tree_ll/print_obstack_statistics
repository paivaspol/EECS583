define void @print_obstack_statistics(i8* %str, %struct.obstack* nocapture %o) #0 {
entry:
  %chunk1 = getelementptr inbounds %struct.obstack* %o, i64 0, i32 1
  %0 = load %struct._obstack_chunk** %chunk1, align 8, !tbaa !0
  %next_free = getelementptr inbounds %struct.obstack* %o, i64 0, i32 3
  %1 = load i8** %next_free, align 8, !tbaa !0
  %arraydecay = getelementptr inbounds %struct._obstack_chunk* %0, i64 0, i32 2, i64 0
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %chunk.0.in21 = getelementptr inbounds %struct._obstack_chunk* %0, i64 0, i32 1
  %chunk.022 = load %struct._obstack_chunk** %chunk.0.in21, align 8
  %tobool23 = icmp eq %struct._obstack_chunk* %chunk.022, null
  br i1 %tobool23, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %chunk.026 = phi %struct._obstack_chunk* [ %chunk.0, %while.body ], [ %chunk.022, %entry ]
  %n_alloc.0.in25 = phi i64 [ %add9, %while.body ], [ %sub.ptr.sub, %entry ]
  %n_chunks.024 = phi i32 [ %add3, %while.body ], [ 1, %entry ]
  %add3 = add nsw i32 %n_chunks.024, 1
  %limit = getelementptr inbounds %struct._obstack_chunk* %chunk.026, i64 0, i32 0
  %2 = load i8** %limit, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct._obstack_chunk* %chunk.026, i64 0, i32 2, i64 0
  %sub.ptr.lhs.cast5 = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast6 = ptrtoint i8* %arrayidx to i64
  %sext = shl i64 %n_alloc.0.in25, 32
  %conv8 = ashr exact i64 %sext, 32
  %sub.ptr.sub7 = sub i64 %conv8, %sub.ptr.rhs.cast6
  %add9 = add i64 %sub.ptr.sub7, %sub.ptr.lhs.cast5
  %chunk.0.in = getelementptr inbounds %struct._obstack_chunk* %chunk.026, i64 0, i32 1
  %chunk.0 = load %struct._obstack_chunk** %chunk.0.in, align 8
  %tobool = icmp eq %struct._obstack_chunk* %chunk.0, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %entry
  %n_alloc.0.in.lcssa = phi i64 [ %sub.ptr.sub, %entry ], [ %add9, %while.body ]
  %n_chunks.0.lcssa = phi i32 [ 1, %entry ], [ %add3, %while.body ]
  %n_alloc.0 = trunc i64 %n_alloc.0.in.lcssa to i32
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([33 x i8]* @.str162, i64 0, i64 0), i8* %str, i32 %n_alloc.0, i32 %n_chunks.0.lcssa) #9
  ret void
}
