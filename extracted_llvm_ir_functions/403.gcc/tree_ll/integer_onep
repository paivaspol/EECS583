define i32 @integer_onep(%union.tree_node* nocapture %expr) #3 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !tbaa !0
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %entry
  %expr.addr.0 = phi %union.tree_node* [ %expr, %entry ], [ %2, %land.rhs ]
  %code = getelementptr inbounds %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %cmp12 = icmp eq %union.tree_node* %2, %0
  br i1 %cmp12, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !0
  %type14 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type14, i64 0, i32 6
  %4 = bitcast [4 x i8]* %mode to i32*
  %bf.load15 = load i32* %4, align 4
  %type21 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type21, align 8, !tbaa !0
  %type22 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %mode23 = getelementptr inbounds %struct.tree_type* %type22, i64 0, i32 6
  %6 = bitcast [4 x i8]* %mode23 to i32*
  %bf.load24 = load i32* %6, align 4
  %bf.lshr72 = xor i32 %bf.load24, %bf.load15
  %7 = and i32 %bf.lshr72, 65024
  %cmp27 = icmp eq i32 %7, 0
  br i1 %cmp27, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true, %land.rhs
  %8 = and i32 %bf.load, 262399
  %9 = icmp eq i32 %8, 25
  br i1 %9, label %land.lhs.true41, label %lor.rhs

land.lhs.true41:                                  ; preds = %while.end
  %int_cst42 = getelementptr inbounds %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst42 to i64*
  %10 = load i64* %low, align 8, !tbaa !3
  %cmp43 = icmp eq i64 %10, 1
  br i1 %cmp43, label %land.lhs.true44, label %lor.rhs

land.lhs.true44:                                  ; preds = %land.lhs.true41
  %high = getelementptr inbounds i32* %int_cst42, i64 2
  %11 = bitcast i32* %high to i64*
  %12 = load i64* %11, align 8, !tbaa !3
  %cmp47 = icmp eq i64 %12, 0
  br i1 %cmp47, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true44, %land.lhs.true41, %while.end
  %cmp52 = icmp eq i32 %bf.clear, 27
  br i1 %cmp52, label %land.lhs.true53, label %lor.end

land.lhs.true53:                                  ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 2
  %13 = bitcast i32* %real to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !0
  %call = tail call i32 @integer_onep(%union.tree_node* %14) #10
  %tobool54 = icmp eq i32 %call, 0
  br i1 %tobool54, label %lor.end, label %land.rhs55

land.rhs55:                                       ; preds = %land.lhs.true53
  %15 = getelementptr inbounds %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 4
  %16 = load %union.tree_node** %15, align 8, !tbaa !0
  %call57 = tail call i32 @integer_zerop(%union.tree_node* %16) #10
  %tobool58 = icmp ne i32 %call57, 0
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true53, %lor.rhs, %land.rhs55, %land.lhs.true44
  %17 = phi i1 [ true, %land.lhs.true44 ], [ false, %land.lhs.true53 ], [ false, %lor.rhs ], [ %tobool58, %land.rhs55 ]
  %lor.ext = zext i1 %17 to i32
  ret i32 %lor.ext
}
