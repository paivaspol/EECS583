define %union.tree_node* @build_decl(i32 %code, %union.tree_node* %name, %union.tree_node* %type) #0 {
entry:
  %call = tail call %union.tree_node* @make_node(i32 %code) #10
  %name1 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 8
  store %union.tree_node* %name, %union.tree_node** %name1, align 8, !tbaa !0
  %type2 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type2, align 8, !tbaa !0
  %0 = and i32 %code, -2
  %1 = icmp eq i32 %0, 34
  %cmp5 = icmp eq i32 %code, 36
  %or.cond10 = or i1 %1, %cmp5
  br i1 %or.cond10, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void @layout_decl(%union.tree_node* %call, i32 0) #9
  br label %if.end9

if.else:                                          ; preds = %entry
  %cmp6 = icmp eq i32 %code, 30
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.else
  %mode = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 5
  %2 = bitcast [8 x i8]* %mode to i64*
  %bf.load = load i64* %2, align 8
  %bf.clear = and i64 %bf.load, -256
  %bf.set = or i64 %bf.clear, 2
  store i64 %bf.set, i64* %2, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7, %if.then
  ret %union.tree_node* %call
}
