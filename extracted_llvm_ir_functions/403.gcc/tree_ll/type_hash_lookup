define %union.tree_node* @type_hash_lookup(i32 %hashcode, %union.tree_node* %type) #0 {
entry:
  %in = alloca %struct.type_hash, align 8
  call void @llvm.dbg.value(metadata !{i32 %hashcode}, i64 0, metadata !1410), !dbg !3095
  call void @llvm.dbg.value(metadata !{%union.tree_node* %type}, i64 0, metadata !1411), !dbg !3096
  call void @llvm.dbg.declare(metadata !{%struct.type_hash* %in}, metadata !1418), !dbg !3097
  call void @layout_type(%union.tree_node* %type) #10, !dbg !3098
  %conv = zext i32 %hashcode to i64, !dbg !3099
  %hash = getelementptr inbounds %struct.type_hash* %in, i64 0, i32 0, !dbg !3099
  store i64 %conv, i64* %hash, align 8, !dbg !3099, !tbaa !1927
  %type1 = getelementptr inbounds %struct.type_hash* %in, i64 0, i32 1, !dbg !3100
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !dbg !3100, !tbaa !1913
  %0 = load %struct.htab** @type_hash_table, align 8, !dbg !3101, !tbaa !1913
  %1 = bitcast %struct.type_hash* %in to i8*, !dbg !3101
  %call = call i8* @htab_find_with_hash(%struct.htab* %0, i8* %1, i32 %hashcode) #10, !dbg !3101
  %tobool = icmp eq i8* %call, null, !dbg !3102
  br i1 %tobool, label %return, label %if.then, !dbg !3102

if.then:                                          ; preds = %entry
  %type2 = getelementptr inbounds i8* %call, i64 8, !dbg !3103
  %2 = bitcast i8* %type2 to %union.tree_node**, !dbg !3103
  %3 = load %union.tree_node** %2, align 8, !dbg !3103, !tbaa !1913
  br label %return, !dbg !3103

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ null, %entry ]
  ret %union.tree_node* %retval.0, !dbg !3104
}
