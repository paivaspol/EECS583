define %union.tree_node* @type_hash_lookup(i32 %hashcode, %union.tree_node* %type) #0 {
entry:
  %in = alloca %struct.type_hash, align 8
  call void @layout_type(%union.tree_node* %type) #9
  %conv = zext i32 %hashcode to i64
  %hash = getelementptr inbounds %struct.type_hash* %in, i64 0, i32 0
  store i64 %conv, i64* %hash, align 8, !tbaa !3
  %type1 = getelementptr inbounds %struct.type_hash* %in, i64 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !tbaa !0
  %0 = load %struct.htab** @type_hash_table, align 8, !tbaa !0
  %1 = bitcast %struct.type_hash* %in to i8*
  %call = call i8* @htab_find_with_hash(%struct.htab* %0, i8* %1, i32 %hashcode) #9
  %tobool = icmp eq i8* %call, null
  br i1 %tobool, label %return, label %if.then

if.then:                                          ; preds = %entry
  %type2 = getelementptr inbounds i8* %call, i64 8
  %2 = bitcast i8* %type2 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ null, %entry ]
  ret %union.tree_node* %retval.0
}
