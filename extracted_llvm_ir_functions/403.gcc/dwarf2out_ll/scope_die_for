define internal fastcc %struct.die_struct* @scope_die_for(%union.tree_node* nocapture %t, %struct.die_struct* %context_die) #1 {
entry:
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom71 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom71
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 116
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 9575, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.scope_die_for, i64 0, i64 0)) #12
  unreachable

if.end:                                           ; preds = %entry
  %context = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 17
  %2 = load %struct.rtx_def** %context, align 8
  %3 = bitcast %struct.rtx_def* %2 to %union.tree_node*
  %tobool = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %4 = getelementptr inbounds %struct.rtx_def* %2, i64 1, i32 0
  %5 = bitcast [4 x i8]* %4 to i32*
  %bf.load4 = load i32* %5, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 38
  %. = select i1 %cmp6, %union.tree_node* null, %union.tree_node* %3
  br label %if.end9

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %containing_scope.0 = phi %union.tree_node* [ %3, %if.end ], [ %., %land.lhs.true ]
  %tobool10 = icmp eq %union.tree_node* %containing_scope.0, null
  br i1 %tobool10, label %if.then22, label %if.end19

if.end19:                                         ; preds = %if.end9
  %code13 = getelementptr inbounds %union.tree_node* %containing_scope.0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %code13 to i32*
  %bf.load14 = load i32* %6, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 23
  %.containing_scope.0 = select i1 %cmp16, %union.tree_node* null, %union.tree_node* %containing_scope.0
  %cmp20 = icmp eq %union.tree_node* %.containing_scope.0, null
  br i1 %cmp20, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end9, %if.end19
  %7 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !4
  br label %if.end58

if.else:                                          ; preds = %if.end19
  %code24 = getelementptr inbounds %union.tree_node* %.containing_scope.0, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %code24 to i32*
  %bf.load25 = load i32* %8, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %idxprom2772 = zext i32 %bf.clear26 to i64
  %arrayidx28 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom2772
  %9 = load i8* %arrayidx28, align 1, !tbaa !1
  %cmp30 = icmp eq i8 %9, 116
  br i1 %cmp30, label %if.then32, label %if.end58

if.then32:                                        ; preds = %if.else
  %10 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !4
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 1
  %11 = load i64* %elements_used, align 8, !tbaa !6
  %sub = add i64 %11, 4294967295
  %conv33 = trunc i64 %sub to i32
  %cmp3476 = icmp sgt i32 %conv33, -1
  br i1 %cmp3476, label %for.body.lr.ph, label %if.then44

for.body.lr.ph:                                   ; preds = %if.then32
  %data = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %sext = shl i64 %sub, 32
  %12 = ashr exact i64 %sext, 32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %indvars.iv.next = add i64 %indvars.iv, -1
  %dec = add nsw i32 %i.077, -1
  %13 = trunc i64 %indvars.iv to i32
  %cmp34 = icmp sgt i32 %13, 0
  br i1 %cmp34, label %for.body, label %if.then44

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ %12, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %i.077 = phi i32 [ %conv33, %for.body.lr.ph ], [ %dec, %for.cond ]
  %arrayidx37 = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %indvars.iv
  %14 = load %union.tree_node** %arrayidx37, align 8, !tbaa !4
  %cmp38 = icmp eq %union.tree_node* %14, %.containing_scope.0
  br i1 %cmp38, label %for.end, label %for.cond

for.end:                                          ; preds = %for.body
  %cmp42 = icmp slt i32 %i.077, 0
  br i1 %cmp42, label %if.then44, label %if.else54

if.then44:                                        ; preds = %if.then32, %for.cond, %for.end
  %15 = load i32* @debug_info_level, align 4, !tbaa !10
  %cmp45 = icmp ugt i32 %15, 1
  br i1 %cmp45, label %land.lhs.true47, label %if.end53

land.lhs.true47:                                  ; preds = %if.then44
  %bf.clear50 = and i32 %bf.load25, 16384
  %tobool51 = icmp eq i32 %bf.clear50, 0
  br i1 %tobool51, label %if.then52, label %if.end53

if.then52:                                        ; preds = %land.lhs.true47
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 9604, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.scope_die_for, i64 0, i64 0)) #12
  unreachable

if.end53:                                         ; preds = %land.lhs.true47, %if.then44
  %16 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !4
  br label %if.end58

if.else54:                                        ; preds = %for.end
  %symtab.i = getelementptr inbounds %union.tree_node* %.containing_scope.0, i64 0, i32 0, i32 10
  %pointer2.i = load %union.tree_node** %symtab.i, align 8
  %17 = bitcast %union.tree_node* %pointer2.i to %struct.die_struct*
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.else54, %if.end53, %if.then22
  %scope_die.0 = phi %struct.die_struct* [ %7, %if.then22 ], [ %16, %if.end53 ], [ %17, %if.else54 ], [ %context_die, %if.else ]
  ret %struct.die_struct* %scope_die.0
}
