define internal fastcc void @compute_section_prefix(%struct.die_struct* %unit_die) #1 {
entry:
  %checksum = alloca [16 x i8], align 16
  %ctx = alloca %struct.md5_ctx, align 4
  br label %tailrecurse.i.i

tailrecurse.i.i:                                  ; preds = %for.end.i.i, %entry
  %die.tr.i.i = phi %struct.die_struct* [ %unit_die, %entry ], [ %spec.1.i.i, %for.end.i.i ]
  %cmp.i.i = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i, label %get_AT_string.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %tailrecurse.i.i
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.026.i.i = load %struct.dw_attr_struct** %die_attr.i.i, align 8
  %cmp127.i.i = icmp eq %struct.dw_attr_struct* %a.026.i.i, null
  br i1 %cmp127.i.i, label %get_AT_string.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i, %for.inc.i.i
  %a.029.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.026.i.i, %if.then.i.i ]
  %spec.028.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i, i64 0, i32 0
  %0 = load i32* %dw_attr.i.i, align 4, !tbaa !11
  switch i32 %0, label %for.inc.i.i [
    i32 3, label %land.lhs.true.i.i
    i32 71, label %land.lhs.true.i.i.i
    i32 49, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i, %for.body.i.i
  %val_class.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i, i64 0, i32 2, i32 0
  %1 = load i32* %val_class.i.i.i.i, align 4, !tbaa !1
  %cmp.i.i.i = icmp eq i32 %1, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #12
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %2 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !4
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %AT_ref.exit.i.i, %for.body.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %2, %AT_ref.exit.i.i ], [ %spec.028.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i, label %get_AT_string.exit, label %tailrecurse.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %val_class.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i, i64 0, i32 2, i32 0
  %3 = load i32* %val_class.i.i.i, align 4, !tbaa !1
  %cmp.i2.i = icmp eq i32 %3, 14
  br i1 %cmp.i2.i, label %AT_string.exit.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 4518, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.AT_string, i64 0, i64 0)) #12
  unreachable

AT_string.exit.i:                                 ; preds = %land.lhs.true.i.i
  %v.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i, i64 0, i32 2, i32 1
  %val_str.i.i = bitcast %union.anon.3* %v.i.i to %struct.indirect_string_node**
  %4 = load %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !4
  %str.i.i = getelementptr inbounds %struct.indirect_string_node* %4, i64 0, i32 0, i32 1
  %5 = load i8** %str.i.i, align 8, !tbaa !4
  br label %get_AT_string.exit

get_AT_string.exit:                               ; preds = %tailrecurse.i.i, %if.then.i.i, %for.end.i.i, %AT_string.exit.i
  %cond.i = phi i8* [ %5, %AT_string.exit.i ], [ null, %for.end.i.i ], [ null, %if.then.i.i ], [ null, %tailrecurse.i.i ]
  %call1 = call i8* @lbasename(i8* %cond.i) #9
  %call2 = call i64 @strlen(i8* %call1) #11
  %add = add i64 %call2, 64
  %6 = alloca i8, i64 %add, align 1
  %7 = bitcast %struct.md5_ctx* %ctx to i8*
  call void @llvm.lifetime.start(i64 156, i8* %7) #5
  call void @md5_init_ctx(%struct.md5_ctx* %ctx) #9
  call fastcc void @die_checksum(%struct.die_struct* %unit_die, %struct.md5_ctx* %ctx) #10
  %arraydecay = getelementptr inbounds [16 x i8]* %checksum, i64 0, i64 0
  %call3 = call i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %arraydecay) #9
  %call4 = call i32 (i8*, i8*, ...)* @sprintf(i8* %6, i8* getelementptr inbounds ([4 x i8]* @.str381, i64 0, i64 0), i8* %call1) #9
  call void @clean_symbol_name(i8* %6) #9
  %call5 = call i64 @strlen(i8* %6) #11
  %add.ptr = getelementptr inbounds i8* %6, i64 %call5
  br label %for.body

for.body:                                         ; preds = %for.body, %get_AT_string.exit
  %indvars.iv = phi i64 [ 0, %get_AT_string.exit ], [ %indvars.iv.next, %for.body ]
  %p.019 = phi i8* [ %add.ptr, %get_AT_string.exit ], [ %add.ptr7, %for.body ]
  %arrayidx = getelementptr inbounds [16 x i8]* %checksum, i64 0, i64 %indvars.iv
  %8 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %8 to i32
  %call6 = call i32 (i8*, i8*, ...)* @sprintf(i8* %p.019, i8* getelementptr inbounds ([5 x i8]* @.str382, i64 0, i64 0), i32 %conv) #9
  %add.ptr7 = getelementptr inbounds i8* %p.019, i64 2
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %call8 = call noalias i8* @xstrdup(i8* %6) #9
  %die_symbol = getelementptr inbounds %struct.die_struct* %unit_die, i64 0, i32 1
  store i8* %call8, i8** %die_symbol, align 8, !tbaa !4
  store i8* %call8, i8** @comdat_symbol_id, align 8, !tbaa !4
  store i32 0, i32* @comdat_symbol_number, align 4, !tbaa !0
  call void @llvm.lifetime.end(i64 156, i8* %7) #5
  ret void
}
