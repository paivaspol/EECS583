define internal void @dwarf2out_source_line(i32 %line, i8* %filename) #1 {
entry:
  %0 = load i32* @debug_info_level, align 4, !tbaa !10
  %cmp = icmp ugt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end8

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  tail call void @function_section(%union.tree_node* %1) #9
  %2 = load i32* @flag_debug_asm, align 4, !tbaa !0
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %3 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !4
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([11 x i8]* @.str408, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str409, i64 0, i64 0), i8* %filename, i32 %line) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then1
  %call2 = tail call fastcc i32 @lookup_filename(i8* %filename) #10
  %4 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !4
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([15 x i8]* @.str410, i64 0, i64 0), i32 %call2, i32 %line) #9
  %5 = load i32* @line_info_table_in_use, align 4, !tbaa !0
  %inc = add i32 %5, 1
  store i32 %inc, i32* @line_info_table_in_use, align 4, !tbaa !0
  %6 = load %union.tree_node** @current_function_decl, align 8, !tbaa !4
  %section_name = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 15
  %7 = load %union.tree_node** %section_name, align 8, !tbaa !4
  %tobool4 = icmp eq %union.tree_node* %7, null
  br i1 %tobool4, label %if.end8, label %if.then5

if.then5:                                         ; preds = %if.end
  %8 = load i32* @separate_line_info_table_in_use, align 4, !tbaa !0
  %inc6 = add i32 %8, 1
  store i32 %inc6, i32* @separate_line_info_table_in_use, align 4, !tbaa !0
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then5, %entry
  ret void
}
