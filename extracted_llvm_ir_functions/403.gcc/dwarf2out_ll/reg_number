define internal fastcc i32 @reg_number(%struct.rtx_def* nocapture %rtl) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %rtl}, i64 0, metadata !2784), !dbg !10495
  %arrayidx = getelementptr inbounds %struct.rtx_def* %rtl, i64 0, i32 1, i64 0, !dbg !10496
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !10496
  %0 = load i32* %rtuint, align 4, !dbg !10496, !tbaa !3758
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !2785), !dbg !10496
  %cmp = icmp ugt i32 %0, 52, !dbg !10497
  br i1 %cmp, label %if.then, label %if.end, !dbg !10497

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 7617, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.reg_number, i64 0, i64 0)) #13, !dbg !10498
  unreachable, !dbg !10498

if.end:                                           ; preds = %entry
  %1 = load i32* @target_flags, align 4, !dbg !10499, !tbaa !3758
  %and = and i32 %1, 33554432, !dbg !10499
  %tobool = icmp eq i32 %and, 0, !dbg !10499
  %idxprom = zext i32 %0 to i64, !dbg !10499
  %svr4_dbx_register_map.dbx64_register_map = select i1 %tobool, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map, !dbg !10499
  %cond.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map, i64 0, i64 %idxprom, !dbg !10499
  %cond = load i32* %cond.in, align 4, !dbg !10499
  ret i32 %cond, !dbg !10499
}
