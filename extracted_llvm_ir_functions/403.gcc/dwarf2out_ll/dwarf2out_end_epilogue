define void @dwarf2out_end_epilogue() #1 {
entry:
  %label = alloca [30 x i8], align 16
  call void @llvm.dbg.declare(metadata !{[30 x i8]* %label}, metadata !1882), !dbg !4440
  %arraydecay = getelementptr inbounds [30 x i8]* %label, i64 0, i64 0, !dbg !4441
  %0 = load i32* @current_funcdef_number, align 4, !dbg !4441, !tbaa !3758
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i32 %0) #10, !dbg !4441
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !4443, !tbaa !3768
  call void @assemble_name(%struct._IO_FILE* %1, i8* %arraydecay) #10, !dbg !4443
  %2 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !4443, !tbaa !3768
  %3 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %2), !dbg !4443
  %4 = load i32* @fde_table_in_use, align 4, !dbg !4444, !tbaa !3758
  %sub = add i32 %4, -1, !dbg !4444
  %idxprom = zext i32 %sub to i64, !dbg !4444
  %5 = load %struct.dw_fde_struct** @fde_table, align 8, !dbg !4444, !tbaa !3768
  %call4 = call noalias i8* @xstrdup(i8* %arraydecay) #10, !dbg !4445
  %dw_fde_end = getelementptr inbounds %struct.dw_fde_struct* %5, i64 %idxprom, i32 2, !dbg !4445
  store i8* %call4, i8** %dw_fde_end, align 8, !dbg !4445, !tbaa !3768
  ret void, !dbg !4446
}
