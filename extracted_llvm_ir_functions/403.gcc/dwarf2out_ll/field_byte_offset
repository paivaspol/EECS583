define internal fastcc i64 @field_byte_offset(%union.tree_node* %decl) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %decl}, i64 0, metadata !2560), !dbg !9442
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !9443
  %0 = bitcast [4 x i8]* %code to i32*, !dbg !9443
  %bf.load = load i32* %0, align 8, !dbg !9443
  %bf.clear = and i32 %bf.load, 255, !dbg !9443
  switch i32 %bf.clear, label %if.then6 [
    i32 0, label %return
    i32 37, label %if.end.i
  ], !dbg !9443

if.then6:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 8430, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.field_byte_offset, i64 0, i64 0)) #13, !dbg !9444
  unreachable, !dbg !9444

if.end.i:                                         ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %decl}, i64 0, metadata !9445), !dbg !9447
  %result.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 11, !dbg !9448
  %1 = load %union.tree_node** %result.i, align 8, !dbg !9448, !tbaa !3768
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %1}, i64 0, metadata !9449), !dbg !9448
  %cmp2.i = icmp eq %union.tree_node* %1, null, !dbg !9450
  br i1 %cmp2.i, label %if.then3.i, label %field_type.exit, !dbg !9450

if.then3.i:                                       ; preds = %if.end.i
  %type5.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1, !dbg !9451
  %2 = load %union.tree_node** %type5.i, align 8, !dbg !9451, !tbaa !3768
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %2}, i64 0, metadata !9449), !dbg !9451
  br label %field_type.exit, !dbg !9451

field_type.exit:                                  ; preds = %if.end.i, %if.then3.i
  %retval.0.i = phi %union.tree_node* [ %2, %if.then3.i ], [ %1, %if.end.i ]
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %retval.0.i}, i64 0, metadata !2565), !dbg !9446
  %size = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4, !dbg !9452
  %3 = load %union.tree_node** %size, align 8, !dbg !9452, !tbaa !3768
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %3}, i64 0, metadata !2566), !dbg !9452
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !9453
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !9454, !tbaa !3768
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %4}, i64 0, metadata !2566), !dbg !9454
  %. = select i1 %tobool, %union.tree_node* %4, %union.tree_node* %3, !dbg !9453
  %call11 = tail call %union.tree_node* @bit_position(%union.tree_node* %decl) #10, !dbg !9455
  %call12 = tail call i32 @host_integerp(%union.tree_node* %call11, i32 0) #10, !dbg !9455
  %tobool13 = icmp eq i32 %call12, 0, !dbg !9455
  br i1 %tobool13, label %return, label %if.end15, !dbg !9455

if.end15:                                         ; preds = %field_type.exit
  %call16 = tail call i64 @int_bit_position(%union.tree_node* %decl) #10, !dbg !9456
  tail call void @llvm.dbg.value(metadata !{i64 %call16}, i64 0, metadata !2567), !dbg !9456
  %call17 = tail call i32 @host_integerp(%union.tree_node* %., i32 1) #10, !dbg !9457
  %tobool18 = icmp eq i32 %call17, 0, !dbg !9457
  br i1 %tobool18, label %if.else21, label %if.then19, !dbg !9457

if.then19:                                        ; preds = %if.end15
  %call20 = tail call i64 @tree_low_cst(%union.tree_node* %., i32 1) #10, !dbg !9458
  tail call void @llvm.dbg.value(metadata !{i64 %call20}, i64 0, metadata !2569), !dbg !9458
  br label %if.end23, !dbg !9458

if.else21:                                        ; preds = %if.end15
  %5 = load i32* @target_flags, align 4, !dbg !9459, !tbaa !3758
  %and = lshr i32 %5, 20, !dbg !9459
  %6 = and i32 %and, 32, !dbg !9459
  %7 = add i32 %6, 32, !dbg !9459
  %conv68 = zext i32 %7 to i64, !dbg !9459
  tail call void @llvm.dbg.value(metadata !{i64 %conv68}, i64 0, metadata !2569), !dbg !9459
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then19
  %field_size_in_bits.0 = phi i64 [ %call20, %if.then19 ], [ %conv68, %if.else21 ]
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %retval.0.i}, i64 0, metadata !9460) #6, !dbg !9462
  %code.i76 = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 0, i32 2, !dbg !9463
  %8 = bitcast [4 x i8]* %code.i76 to i32*, !dbg !9463
  %bf.load.i77 = load i32* %8, align 8, !dbg !9463
  %bf.clear.i78 = and i32 %bf.load.i77, 255, !dbg !9463
  %cmp.i79 = icmp eq i32 %bf.clear.i78, 0, !dbg !9463
  br i1 %cmp.i79, label %if.then.i81, label %if.else.i, !dbg !9463

if.then.i81:                                      ; preds = %if.end23
  %9 = load i32* @target_flags, align 4, !dbg !9464, !tbaa !3758
  %and.i80 = lshr i32 %9, 20, !dbg !9464
  %10 = and i32 %and.i80, 32, !dbg !9464
  %11 = add i32 %10, 32, !dbg !9464
  %conv19.i = zext i32 %11 to i64, !dbg !9464
  br label %simple_type_size_in_bits.exit, !dbg !9464

if.else.i:                                        ; preds = %if.end23
  %size.i = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 2, !dbg !9465
  %12 = bitcast i32* %size.i to %union.tree_node**, !dbg !9465
  %13 = load %union.tree_node** %12, align 8, !dbg !9465, !tbaa !3768
  %cmp2.i82 = icmp eq %union.tree_node* %13, null, !dbg !9465
  br i1 %cmp2.i82, label %simple_type_size_in_bits.exit, label %if.else5.i, !dbg !9465

if.else5.i:                                       ; preds = %if.else.i
  %call.i83 = tail call i32 @host_integerp(%union.tree_node* %13, i32 1) #10, !dbg !9466
  %tobool8.i = icmp eq i32 %call.i83, 0, !dbg !9466
  br i1 %tobool8.i, label %if.else13.i, label %if.then9.i, !dbg !9466

if.then9.i:                                       ; preds = %if.else5.i
  %14 = load %union.tree_node** %12, align 8, !dbg !9467, !tbaa !3768
  %call12.i = tail call i64 @tree_low_cst(%union.tree_node* %14, i32 1) #10, !dbg !9467
  br label %simple_type_size_in_bits.exit, !dbg !9467

if.else13.i:                                      ; preds = %if.else5.i
  %align.i = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 7, !dbg !9468
  %15 = bitcast %union.tree_node** %align.i to i32*, !dbg !9468
  %16 = load i32* %15, align 4, !dbg !9468, !tbaa !3758
  %conv15.i = zext i32 %16 to i64, !dbg !9468
  br label %simple_type_size_in_bits.exit, !dbg !9468

simple_type_size_in_bits.exit:                    ; preds = %if.then.i81, %if.else.i, %if.then9.i, %if.else13.i
  %retval.0.i84 = phi i64 [ %conv19.i, %if.then.i81 ], [ %call12.i, %if.then9.i ], [ %conv15.i, %if.else13.i ], [ 0, %if.else.i ]
  tail call void @llvm.dbg.value(metadata !{i64 %retval.0.i84}, i64 0, metadata !2563), !dbg !9461
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %retval.0.i}, i64 0, metadata !9469), !dbg !9471
  %bf.load.i86 = load i32* %8, align 8, !dbg !9472
  %bf.clear.i87 = and i32 %bf.load.i86, 255, !dbg !9472
  %cmp.i88 = icmp eq i32 %bf.clear.i87, 0, !dbg !9472
  br i1 %cmp.i88, label %cond.false.i, label %cond.true.i, !dbg !9472

cond.true.i:                                      ; preds = %simple_type_size_in_bits.exit
  %align.i89 = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 7, !dbg !9472
  %17 = bitcast %union.tree_node** %align.i89 to i32*, !dbg !9472
  %18 = load i32* %17, align 4, !dbg !9472, !tbaa !3758
  br label %simple_type_align_in_bits.exit, !dbg !9472

cond.false.i:                                     ; preds = %simple_type_size_in_bits.exit
  %19 = load i32* @target_flags, align 4, !dbg !9472, !tbaa !3758
  %and.i90 = lshr i32 %19, 20, !dbg !9472
  %20 = and i32 %and.i90, 32, !dbg !9472
  %21 = add i32 %20, 32, !dbg !9472
  br label %simple_type_align_in_bits.exit, !dbg !9472

simple_type_align_in_bits.exit:                   ; preds = %cond.true.i, %cond.false.i
  %cond2.i = phi i32 [ %18, %cond.true.i ], [ %21, %cond.false.i ], !dbg !9472
  tail call void @llvm.dbg.value(metadata !{i32 %cond2.i}, i64 0, metadata !2561), !dbg !9470
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %decl}, i64 0, metadata !9473) #6, !dbg !9475
  %bf.load.i70 = load i32* %0, align 8, !dbg !9476
  %bf.clear.i71 = and i32 %bf.load.i70, 255, !dbg !9476
  %cmp.i72 = icmp eq i32 %bf.clear.i71, 0, !dbg !9476
  br i1 %cmp.i72, label %if.then.i73, label %if.end.i74, !dbg !9476

if.then.i73:                                      ; preds = %simple_type_align_in_bits.exit
  %22 = load i32* @target_flags, align 4, !dbg !9477, !tbaa !3758
  %and.i = lshr i32 %22, 20, !dbg !9477
  %23 = and i32 %and.i, 32, !dbg !9477
  %24 = add i32 %23, 32, !dbg !9477
  br label %simple_field_decl_align_in_bits.exit, !dbg !9477

if.end.i74:                                       ; preds = %simple_type_align_in_bits.exit
  %u1.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6, !dbg !9478
  %25 = bitcast %union.anon* %u1.i to i32*, !dbg !9478
  %bf.load1.i = load i32* %25, align 4, !dbg !9478
  %bf.clear2.i = and i32 %bf.load1.i, 16777215, !dbg !9478
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear2.i}, i64 0, metadata !9479) #6, !dbg !9478
  %call.i = tail call i32 @x86_field_alignment(%union.tree_node* %decl, i32 %bf.clear2.i) #10, !dbg !9480
  tail call void @llvm.dbg.value(metadata !{i32 %call.i}, i64 0, metadata !9479) #6, !dbg !9480
  br label %simple_field_decl_align_in_bits.exit, !dbg !9481

simple_field_decl_align_in_bits.exit:             ; preds = %if.then.i73, %if.end.i74
  %retval.0.i75 = phi i32 [ %24, %if.then.i73 ], [ %call.i, %if.end.i74 ]
  tail call void @llvm.dbg.value(metadata !{i32 %retval.0.i75}, i64 0, metadata !2562), !dbg !9474
  %add = add i64 %field_size_in_bits.0, %call16, !dbg !9482
  tail call void @llvm.dbg.value(metadata !{i64 %add}, i64 0, metadata !2568), !dbg !9482
  %sub = sub i64 %add, %retval.0.i84, !dbg !9483
  tail call void @llvm.dbg.value(metadata !{i64 %sub}, i64 0, metadata !2564), !dbg !9483
  %sub27 = add i32 %cond2.i, -1, !dbg !9484
  %conv28 = zext i32 %sub27 to i64, !dbg !9484
  %add29 = add nsw i64 %conv28, %sub, !dbg !9484
  tail call void @llvm.dbg.value(metadata !{i64 %add29}, i64 0, metadata !2564), !dbg !9484
  %conv30 = zext i32 %cond2.i to i64, !dbg !9485
  %div = srem i64 %add29, %conv30, !dbg !9486
  %mul = sub i64 %add29, %div, !dbg !9486
  tail call void @llvm.dbg.value(metadata !{i64 %mul}, i64 0, metadata !2564), !dbg !9486
  %cmp32 = icmp sgt i64 %mul, %call16, !dbg !9487
  br i1 %cmp32, label %if.then34, label %if.end43, !dbg !9487

if.then34:                                        ; preds = %simple_field_decl_align_in_bits.exit
  tail call void @llvm.dbg.value(metadata !{i64 %sub}, i64 0, metadata !2564), !dbg !9488
  %sub36 = add i32 %retval.0.i75, -1, !dbg !9490
  %conv37 = zext i32 %sub36 to i64, !dbg !9490
  %add38 = add nsw i64 %conv37, %sub, !dbg !9490
  tail call void @llvm.dbg.value(metadata !{i64 %add38}, i64 0, metadata !2564), !dbg !9490
  %conv39 = zext i32 %retval.0.i75 to i64, !dbg !9491
  %div40 = srem i64 %add38, %conv39, !dbg !9492
  %mul42 = sub i64 %add38, %div40, !dbg !9492
  tail call void @llvm.dbg.value(metadata !{i64 %mul42}, i64 0, metadata !2564), !dbg !9492
  br label %if.end43, !dbg !9493

if.end43:                                         ; preds = %if.then34, %simple_field_decl_align_in_bits.exit
  %object_offset_in_bits.0 = phi i64 [ %mul42, %if.then34 ], [ %mul, %simple_field_decl_align_in_bits.exit ]
  %div44 = sdiv i64 %object_offset_in_bits.0, 8, !dbg !9494
  br label %return, !dbg !9494

return:                                           ; preds = %field_type.exit, %entry, %if.end43
  %retval.0 = phi i64 [ %div44, %if.end43 ], [ 0, %entry ], [ 0, %field_type.exit ]
  ret i64 %retval.0, !dbg !9495
}
