define internal fastcc void @flush_queued_reg_saves() #1 {
entry:
  %0 = load %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !4
  %tobool6 = icmp eq %struct.queued_reg_save* %0, null
  br i1 %tobool6, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %q.07 = phi %struct.queued_reg_save* [ %6, %for.body ], [ %0, %entry ]
  %1 = load i8** @last_reg_save_label, align 8, !tbaa !4
  %reg = getelementptr inbounds %struct.queued_reg_save* %q.07, i64 0, i32 1
  %2 = load %struct.rtx_def** %reg, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !0
  %cfa_offset = getelementptr inbounds %struct.queued_reg_save* %q.07, i64 0, i32 2
  %4 = load i64* %cfa_offset, align 8, !tbaa !6
  %5 = load i32* @target_flags, align 4, !tbaa !0
  %and.i = and i32 %5, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  %idxprom.i = zext i32 %3 to i64
  %svr4_dbx_register_map.dbx64_register_map.i = select i1 %tobool.i, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i, i64 0, i64 %idxprom.i
  %cond.i = load i32* %cond.in.i, align 4
  tail call fastcc void @reg_save(i8* %1, i32 %cond.i, i32 -1, i64 %4) #9
  %next1 = getelementptr inbounds %struct.queued_reg_save* %q.07, i64 0, i32 0
  %6 = load %struct.queued_reg_save** %next1, align 8, !tbaa !4
  %7 = bitcast %struct.queued_reg_save* %q.07 to i8*
  tail call void @free(i8* %7) #9
  %tobool = icmp eq %struct.queued_reg_save* %6, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  store %struct.queued_reg_save* null, %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !4
  store i8* null, i8** @last_reg_save_label, align 8, !tbaa !4
  ret void
}
