define internal fastcc void @add_type_attribute(%struct.die_struct* %object_die, %union.tree_node* %type, i32 %decl_const, i32 %decl_volatile, %struct.die_struct* %context_die) #1 {
entry:
  %code1 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code1 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %1 = and i32 %bf.load, 254
  %2 = icmp eq i32 %1, 6
  br i1 %2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %type4 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type4, align 8, !tbaa !4
  %cmp5 = icmp eq %union.tree_node* %3, null
  br i1 %cmp5, label %if.end, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 11
  %5 = load %union.tree_node** %4, align 8, !tbaa !4
  %cmp8 = icmp eq %union.tree_node* %5, null
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true6
  %code12 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %code12 to i32*
  %bf.load13 = load i32* %6, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then, %land.lhs.true6
  %bf.load27 = phi i32 [ %bf.load13, %if.then ], [ %bf.load, %land.lhs.true6 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %entry ]
  %type.addr.0 = phi %union.tree_node* [ %3, %if.then ], [ %type, %land.lhs.true6 ], [ %type, %land.lhs.true ], [ %type, %entry ]
  %code.0 = phi i32 [ %bf.clear14, %if.then ], [ %bf.clear, %land.lhs.true6 ], [ %bf.clear, %land.lhs.true ], [ %bf.clear, %entry ]
  switch i32 %code.0, label %if.end19 [
    i32 5, label %if.end35
    i32 0, label %if.end35
  ]

if.end19:                                         ; preds = %if.end
  %tobool = icmp eq i32 %decl_const, 0
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.end19
  %bf.clear22 = and i32 %bf.load27, 4096
  %tobool23 = icmp ne i32 %bf.clear22, 0
  br label %lor.end

lor.end:                                          ; preds = %if.end19, %lor.rhs
  %7 = phi i1 [ true, %if.end19 ], [ %tobool23, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32
  %tobool24 = icmp eq i32 %decl_volatile, 0
  br i1 %tobool24, label %lor.rhs25, label %lor.end31

lor.rhs25:                                        ; preds = %lor.end
  %bf.clear29 = and i32 %bf.load27, 2048
  %tobool30 = icmp ne i32 %bf.clear29, 0
  br label %lor.end31

lor.end31:                                        ; preds = %lor.end, %lor.rhs25
  %8 = phi i1 [ true, %lor.end ], [ %tobool30, %lor.rhs25 ]
  %lor.ext32 = zext i1 %8 to i32
  %call = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0, i32 %lor.ext, i32 %lor.ext32, %struct.die_struct* %context_die) #10
  %cmp33 = icmp eq %struct.die_struct* %call, null
  br i1 %cmp33, label %if.end35, label %if.then34

if.then34:                                        ; preds = %lor.end31
  %call.i = tail call noalias i8* @xmalloc(i64 40) #9
  %dw_attr_next.i = getelementptr inbounds i8* %call.i, i64 8
  %9 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %9, align 8, !tbaa !4
  %dw_attr.i = bitcast i8* %call.i to i32*
  store i32 73, i32* %dw_attr.i, align 4, !tbaa !11
  %dw_attr_val.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 10, i32* %val_class.i, align 4, !tbaa !1
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %die2.i = bitcast i8* %v.i to %struct.die_struct**
  store %struct.die_struct* %call, %struct.die_struct** %die2.i, align 8, !tbaa !4
  %external.i = getelementptr inbounds i8* %call.i, i64 32
  %10 = bitcast i8* %external.i to i32*
  store i32 0, i32* %10, align 4, !tbaa !0
  %cmp.i.i = icmp eq %struct.die_struct* %object_die, null
  %cmp1.i.i = icmp eq i8* %call.i, null
  %or.cond.i.i = or i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.end35, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then34
  %11 = bitcast i8* %call.i to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %object_die, i64 0, i32 2
  %12 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !4
  store %struct.dw_attr_struct* %12, %struct.dw_attr_struct** %9, align 8, !tbaa !4
  store %struct.dw_attr_struct* %11, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !4
  br label %if.end35

if.end35:                                         ; preds = %if.then.i.i, %if.then34, %if.end, %if.end, %lor.end31
  ret void
}
