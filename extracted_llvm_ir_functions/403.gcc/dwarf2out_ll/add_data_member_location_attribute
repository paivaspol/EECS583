define internal fastcc void @add_data_member_location_attribute(%struct.die_struct* %die, %union.tree_node* %decl) #1 {
entry:
  %loc_descr = alloca %struct.dw_loc_descr_struct*, align 8
  store %struct.dw_loc_descr_struct* null, %struct.dw_loc_descr_struct** %loc_descr, align 8
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 3
  br i1 %cmp, label %if.then, label %if.else20

if.then:                                          ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 262144
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %1 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !4
  br label %tailrecurse.i.i.i

tailrecurse.i.i.i:                                ; preds = %for.end.i.i.i, %land.lhs.true
  %die.tr.i.i.i = phi %struct.die_struct* [ %1, %land.lhs.true ], [ %spec.1.i.i.i, %for.end.i.i.i ]
  %cmp.i.i.i = icmp eq %struct.die_struct* %die.tr.i.i.i, null
  br i1 %cmp.i.i.i, label %if.else, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %tailrecurse.i.i.i
  %die_attr.i.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i, i64 0, i32 2
  %a.026.i.i.i = load %struct.dw_attr_struct** %die_attr.i.i.i, align 8
  %cmp127.i.i.i = icmp eq %struct.dw_attr_struct* %a.026.i.i.i, null
  br i1 %cmp127.i.i.i, label %if.else, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %if.then.i.i.i, %for.inc.i.i.i
  %a.029.i.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i, %for.inc.i.i.i ], [ %a.026.i.i.i, %if.then.i.i.i ]
  %spec.028.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i, %for.inc.i.i.i ], [ null, %if.then.i.i.i ]
  %dw_attr.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i.i, i64 0, i32 0
  %2 = load i32* %dw_attr.i.i.i, align 4, !tbaa !11
  switch i32 %2, label %for.inc.i.i.i [
    i32 19, label %land.lhs.true.i.i.i
    i32 71, label %land.lhs.true.i.i.i.i
    i32 49, label %land.lhs.true.i.i.i.i
  ]

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i, %for.body.i.i.i
  %val_class.i.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i.i, i64 0, i32 2, i32 0
  %3 = load i32* %val_class.i.i.i.i.i, align 4, !tbaa !1
  %cmp.i.i.i.i = icmp eq i32 %3, 10
  br i1 %cmp.i.i.i.i, label %AT_ref.exit.i.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #12
  unreachable

AT_ref.exit.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i
  %v.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i = bitcast %union.anon.3* %v.i.i.i.i to %struct.die_struct**
  %4 = load %struct.die_struct** %die.i.i.i.i, align 8, !tbaa !4
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %AT_ref.exit.i.i.i, %for.body.i.i.i
  %spec.1.i.i.i = phi %struct.die_struct* [ %4, %AT_ref.exit.i.i.i ], [ %spec.028.i.i.i, %for.body.i.i.i ]
  %dw_attr_next.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i.i, i64 0, i32 1
  %a.0.i.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i, align 8
  %cmp1.i.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i.i, null
  br i1 %cmp1.i.i.i, label %for.end.i.i.i, label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i
  %tobool.i.i.i = icmp eq %struct.die_struct* %spec.1.i.i.i, null
  br i1 %tobool.i.i.i, label %if.else, label %tailrecurse.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %val_class.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i.i, i64 0, i32 2, i32 0
  %5 = load i32* %val_class.i.i.i.i, align 4, !tbaa !1
  %cmp.i4.i.i = icmp eq i32 %5, 6
  br i1 %cmp.i4.i.i, label %AT_unsigned.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #12
  unreachable

AT_unsigned.exit.i.i:                             ; preds = %land.lhs.true.i.i.i
  %val_unsigned.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.029.i.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %6 = load i64* %val_unsigned.i.i.i, align 8, !tbaa !6
  %phitmp.i.i = trunc i64 %6 to i32
  %phitmp.i = icmp eq i32 %phitmp.i.i, 4
  br i1 %phitmp.i, label %add_loc_descr.exit, label %if.else

add_loc_descr.exit:                               ; preds = %AT_unsigned.exit.i.i
  %call.i = call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i = getelementptr inbounds i8* %call.i, i64 8
  %7 = bitcast i8* %dw_loc_opc.i to i32*
  store i32 18, i32* %7, align 4, !tbaa !9
  %dw_loc_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_loc_oprnd1.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !1
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 0, i64* %val_unsigned.i, align 8, !tbaa !6
  %dw_loc_oprnd2.i = getelementptr inbounds i8* %call.i, i64 40
  %val_class2.i = bitcast i8* %dw_loc_oprnd2.i to i32*
  store i32 6, i32* %val_class2.i, align 4, !tbaa !1
  %v4.i = getelementptr inbounds i8* %call.i, i64 48
  %val_unsigned5.i = bitcast i8* %v4.i to i64*
  store i64 0, i64* %val_unsigned5.i, align 8, !tbaa !6
  %8 = bitcast i8* %call.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %8, %struct.dw_loc_descr_struct** %loc_descr, align 8, !tbaa !4
  %call.i38 = call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i39 = getelementptr inbounds i8* %call.i38, i64 8
  %9 = bitcast i8* %dw_loc_opc.i39 to i32*
  store i32 6, i32* %9, align 4, !tbaa !9
  %dw_loc_oprnd1.i40 = getelementptr inbounds i8* %call.i38, i64 16
  %val_class.i41 = bitcast i8* %dw_loc_oprnd1.i40 to i32*
  store i32 6, i32* %val_class.i41, align 4, !tbaa !1
  %v.i42 = getelementptr inbounds i8* %call.i38, i64 24
  %val_unsigned.i43 = bitcast i8* %v.i42 to i64*
  store i64 0, i64* %val_unsigned.i43, align 8, !tbaa !6
  %dw_loc_oprnd2.i44 = getelementptr inbounds i8* %call.i38, i64 40
  %val_class2.i45 = bitcast i8* %dw_loc_oprnd2.i44 to i32*
  store i32 6, i32* %val_class2.i45, align 4, !tbaa !1
  %v4.i46 = getelementptr inbounds i8* %call.i38, i64 48
  %val_unsigned5.i47 = bitcast i8* %v4.i46 to i64*
  store i64 0, i64* %val_unsigned5.i47, align 8, !tbaa !6
  br label %for.cond.i51

for.cond.i51:                                     ; preds = %for.cond.i51, %add_loc_descr.exit
  %d.0.i48 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit ], [ %dw_loc_next.i50, %for.cond.i51 ]
  %10 = load %struct.dw_loc_descr_struct** %d.0.i48, align 8, !tbaa !4
  %cmp.i49 = icmp eq %struct.dw_loc_descr_struct* %10, null
  %dw_loc_next.i50 = getelementptr inbounds %struct.dw_loc_descr_struct* %10, i64 0, i32 0
  br i1 %cmp.i49, label %add_loc_descr.exit52, label %for.cond.i51

add_loc_descr.exit52:                             ; preds = %for.cond.i51
  %11 = bitcast i8* %call.i38 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %11, %struct.dw_loc_descr_struct** %d.0.i48, align 8, !tbaa !4
  %a = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %a, i64 10
  %12 = bitcast i32* %arrayidx to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !4
  %call8 = call i64 @tree_low_cst(%union.tree_node* %13, i32 0) #9
  %cmp9 = icmp sgt i64 %call8, -1
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %add_loc_descr.exit52
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 8599, i8* getelementptr inbounds ([35 x i8]* @__FUNCTION__.add_data_member_location_attribute, i64 0, i64 0)) #12
  unreachable

if.end:                                           ; preds = %add_loc_descr.exit52
  %sub = sub nsw i64 0, %call8
  %call11 = call fastcc %struct.dw_loc_descr_struct* @int_loc_descriptor(i64 %sub) #10
  br label %for.cond.i59

for.cond.i59:                                     ; preds = %for.cond.i59, %if.end
  %d.0.i56 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %if.end ], [ %dw_loc_next.i58, %for.cond.i59 ]
  %14 = load %struct.dw_loc_descr_struct** %d.0.i56, align 8, !tbaa !4
  %cmp.i57 = icmp eq %struct.dw_loc_descr_struct* %14, null
  %dw_loc_next.i58 = getelementptr inbounds %struct.dw_loc_descr_struct* %14, i64 0, i32 0
  br i1 %cmp.i57, label %add_loc_descr.exit60, label %for.cond.i59

add_loc_descr.exit60:                             ; preds = %for.cond.i59
  store %struct.dw_loc_descr_struct* %call11, %struct.dw_loc_descr_struct** %d.0.i56, align 8, !tbaa !4
  %call.i71 = call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i72 = getelementptr inbounds i8* %call.i71, i64 8
  %15 = bitcast i8* %dw_loc_opc.i72 to i32*
  store i32 28, i32* %15, align 4, !tbaa !9
  %dw_loc_oprnd1.i73 = getelementptr inbounds i8* %call.i71, i64 16
  %val_class.i74 = bitcast i8* %dw_loc_oprnd1.i73 to i32*
  store i32 6, i32* %val_class.i74, align 4, !tbaa !1
  %v.i75 = getelementptr inbounds i8* %call.i71, i64 24
  %val_unsigned.i76 = bitcast i8* %v.i75 to i64*
  store i64 0, i64* %val_unsigned.i76, align 8, !tbaa !6
  %dw_loc_oprnd2.i77 = getelementptr inbounds i8* %call.i71, i64 40
  %val_class2.i78 = bitcast i8* %dw_loc_oprnd2.i77 to i32*
  store i32 6, i32* %val_class2.i78, align 4, !tbaa !1
  %v4.i79 = getelementptr inbounds i8* %call.i71, i64 48
  %val_unsigned5.i80 = bitcast i8* %v4.i79 to i64*
  store i64 0, i64* %val_unsigned5.i80, align 8, !tbaa !6
  br label %for.cond.i84

for.cond.i84:                                     ; preds = %for.cond.i84, %add_loc_descr.exit60
  %d.0.i81 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit60 ], [ %dw_loc_next.i83, %for.cond.i84 ]
  %16 = load %struct.dw_loc_descr_struct** %d.0.i81, align 8, !tbaa !4
  %cmp.i82 = icmp eq %struct.dw_loc_descr_struct* %16, null
  %dw_loc_next.i83 = getelementptr inbounds %struct.dw_loc_descr_struct* %16, i64 0, i32 0
  br i1 %cmp.i82, label %add_loc_descr.exit85, label %for.cond.i84

add_loc_descr.exit85:                             ; preds = %for.cond.i84
  %17 = bitcast i8* %call.i71 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %17, %struct.dw_loc_descr_struct** %d.0.i81, align 8, !tbaa !4
  %call.i86 = call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i87 = getelementptr inbounds i8* %call.i86, i64 8
  %18 = bitcast i8* %dw_loc_opc.i87 to i32*
  store i32 6, i32* %18, align 4, !tbaa !9
  %dw_loc_oprnd1.i88 = getelementptr inbounds i8* %call.i86, i64 16
  %val_class.i89 = bitcast i8* %dw_loc_oprnd1.i88 to i32*
  store i32 6, i32* %val_class.i89, align 4, !tbaa !1
  %v.i90 = getelementptr inbounds i8* %call.i86, i64 24
  %val_unsigned.i91 = bitcast i8* %v.i90 to i64*
  store i64 0, i64* %val_unsigned.i91, align 8, !tbaa !6
  %dw_loc_oprnd2.i92 = getelementptr inbounds i8* %call.i86, i64 40
  %val_class2.i93 = bitcast i8* %dw_loc_oprnd2.i92 to i32*
  store i32 6, i32* %val_class2.i93, align 4, !tbaa !1
  %v4.i94 = getelementptr inbounds i8* %call.i86, i64 48
  %val_unsigned5.i95 = bitcast i8* %v4.i94 to i64*
  store i64 0, i64* %val_unsigned5.i95, align 8, !tbaa !6
  br label %for.cond.i99

for.cond.i99:                                     ; preds = %for.cond.i99, %add_loc_descr.exit85
  %d.0.i96 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit85 ], [ %dw_loc_next.i98, %for.cond.i99 ]
  %19 = load %struct.dw_loc_descr_struct** %d.0.i96, align 8, !tbaa !4
  %cmp.i97 = icmp eq %struct.dw_loc_descr_struct* %19, null
  %dw_loc_next.i98 = getelementptr inbounds %struct.dw_loc_descr_struct* %19, i64 0, i32 0
  br i1 %cmp.i97, label %add_loc_descr.exit100, label %for.cond.i99

add_loc_descr.exit100:                            ; preds = %for.cond.i99
  %20 = bitcast i8* %call.i86 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %20, %struct.dw_loc_descr_struct** %d.0.i96, align 8, !tbaa !4
  %call.i106 = call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i107 = getelementptr inbounds i8* %call.i106, i64 8
  %21 = bitcast i8* %dw_loc_opc.i107 to i32*
  store i32 34, i32* %21, align 4, !tbaa !9
  %dw_loc_oprnd1.i108 = getelementptr inbounds i8* %call.i106, i64 16
  %val_class.i109 = bitcast i8* %dw_loc_oprnd1.i108 to i32*
  store i32 6, i32* %val_class.i109, align 4, !tbaa !1
  %v.i110 = getelementptr inbounds i8* %call.i106, i64 24
  %val_unsigned.i111 = bitcast i8* %v.i110 to i64*
  store i64 0, i64* %val_unsigned.i111, align 8, !tbaa !6
  %dw_loc_oprnd2.i112 = getelementptr inbounds i8* %call.i106, i64 40
  %val_class2.i113 = bitcast i8* %dw_loc_oprnd2.i112 to i32*
  store i32 6, i32* %val_class2.i113, align 4, !tbaa !1
  %v4.i114 = getelementptr inbounds i8* %call.i106, i64 48
  %val_unsigned5.i115 = bitcast i8* %v4.i114 to i64*
  store i64 0, i64* %val_unsigned5.i115, align 8, !tbaa !6
  br label %for.cond.i104

for.cond.i104:                                    ; preds = %for.cond.i104, %add_loc_descr.exit100
  %d.0.i101 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit100 ], [ %dw_loc_next.i103, %for.cond.i104 ]
  %22 = load %struct.dw_loc_descr_struct** %d.0.i101, align 8, !tbaa !4
  %cmp.i102 = icmp eq %struct.dw_loc_descr_struct* %22, null
  %dw_loc_next.i103 = getelementptr inbounds %struct.dw_loc_descr_struct* %22, i64 0, i32 0
  br i1 %cmp.i102, label %if.end22, label %for.cond.i104

if.else:                                          ; preds = %tailrecurse.i.i.i, %if.then.i.i.i, %for.end.i.i.i, %AT_unsigned.exit.i.i, %if.then
  %a16 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds i32* %a16, i64 2
  %23 = bitcast i32* %arrayidx17 to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !4
  %call18 = call i64 @tree_low_cst(%union.tree_node* %24, i32 0) #9
  br label %if.then24

if.else20:                                        ; preds = %entry
  %call21 = call fastcc i64 @field_byte_offset(%union.tree_node* %decl) #10
  br label %if.then24

if.end22:                                         ; preds = %for.cond.i104
  %25 = bitcast i8* %call.i106 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %25, %struct.dw_loc_descr_struct** %d.0.i101, align 8, !tbaa !4
  %loc_descr.0.load.pre = load %struct.dw_loc_descr_struct** %loc_descr, align 8
  %tobool23 = icmp eq %struct.dw_loc_descr_struct* %loc_descr.0.load.pre, null
  br i1 %tobool23, label %if.then24, label %if.end27

if.then24:                                        ; preds = %if.else20, %if.else, %if.end22
  %offset.0126 = phi i64 [ %call8, %if.end22 ], [ %call18, %if.else ], [ %call21, %if.else20 ]
  %call.i61 = call noalias i8* @xcalloc(i64 1, i64 72) #9
  %26 = bitcast i8* %call.i61 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i62 = getelementptr inbounds i8* %call.i61, i64 8
  %27 = bitcast i8* %dw_loc_opc.i62 to i32*
  store i32 35, i32* %27, align 4, !tbaa !9
  %dw_loc_oprnd1.i63 = getelementptr inbounds i8* %call.i61, i64 16
  %val_class.i64 = bitcast i8* %dw_loc_oprnd1.i63 to i32*
  store i32 6, i32* %val_class.i64, align 4, !tbaa !1
  %v.i65 = getelementptr inbounds i8* %call.i61, i64 24
  %val_unsigned.i66 = bitcast i8* %v.i65 to i64*
  store i64 %offset.0126, i64* %val_unsigned.i66, align 8, !tbaa !6
  %dw_loc_oprnd2.i67 = getelementptr inbounds i8* %call.i61, i64 40
  %val_class2.i68 = bitcast i8* %dw_loc_oprnd2.i67 to i32*
  store i32 6, i32* %val_class2.i68, align 4, !tbaa !1
  %v4.i69 = getelementptr inbounds i8* %call.i61, i64 48
  %val_unsigned5.i70 = bitcast i8* %v4.i69 to i64*
  store i64 0, i64* %val_unsigned5.i70, align 8, !tbaa !6
  store %struct.dw_loc_descr_struct* %26, %struct.dw_loc_descr_struct** %loc_descr, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.end22, %if.then24
  %loc_descr.0.load116 = phi %struct.dw_loc_descr_struct* [ %loc_descr.0.load.pre, %if.end22 ], [ %26, %if.then24 ]
  %call.i53 = call noalias i8* @xmalloc(i64 40) #9
  %dw_attr_next.i = getelementptr inbounds i8* %call.i53, i64 8
  %28 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %28, align 8, !tbaa !4
  %dw_attr.i = bitcast i8* %call.i53 to i32*
  store i32 56, i32* %dw_attr.i, align 4, !tbaa !11
  %dw_attr_val.i = getelementptr inbounds i8* %call.i53, i64 16
  %val_class.i54 = bitcast i8* %dw_attr_val.i to i32*
  store i32 2, i32* %val_class.i54, align 4, !tbaa !1
  %v.i55 = getelementptr inbounds i8* %call.i53, i64 24
  %val_loc.i = bitcast i8* %v.i55 to %struct.dw_loc_descr_struct**
  store %struct.dw_loc_descr_struct* %loc_descr.0.load116, %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !4
  %cmp.i.i = icmp eq %struct.die_struct* %die, null
  %cmp1.i.i = icmp eq i8* %call.i53, null
  %or.cond.i.i = or i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %add_AT_loc.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end27
  %29 = bitcast i8* %call.i53 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %30 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !4
  store %struct.dw_attr_struct* %30, %struct.dw_attr_struct** %28, align 8, !tbaa !4
  store %struct.dw_attr_struct* %29, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !4
  br label %add_AT_loc.exit

add_AT_loc.exit:                                  ; preds = %if.end27, %if.then.i.i
  ret void
}
