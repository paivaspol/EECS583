define internal fastcc %struct.die_struct* @gen_formal_parameter_die(%union.tree_node* %node, %struct.die_struct* %context_die) #1 {
entry:
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #9
  %0 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 5, i32* %die_tag.i, align 4, !tbaa !12
  %cmp.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %0, %context_die
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #12
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %1 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %1, align 8, !tbaa !4
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %2 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !4
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %3 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %3, align 8, !tbaa !4
  store %struct.die_struct* %0, %struct.die_struct** %die_child.i.i, align 8, !tbaa !4
  br label %new_die.exit

if.else.i:                                        ; preds = %entry
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #9
  %4 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %0, %struct.die_struct** %die2.i, align 8, !tbaa !4
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %5 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %node, %union.tree_node** %5, align 8, !tbaa !4
  %6 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !4
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %7 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %6, %struct.limbo_die_struct** %7, align 8, !tbaa !4
  store %struct.limbo_die_struct* %4, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !4
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %code = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom45 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom45
  %9 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = sext i8 %9 to i32
  switch i32 %conv, label %sw.default [
    i32 100, label %sw.bb
    i32 116, label %sw.bb24
  ]

sw.bb:                                            ; preds = %new_die.exit
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 5
  %10 = bitcast [8 x i8]* %abstract_flag.i to i64*
  %bf.load.i = load i64* %10, align 8
  %bf.cast.i = and i64 %bf.load.i, 32768
  %tobool.i = icmp ne i64 %bf.cast.i, 0
  %abstract_origin4.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 13
  %.pre.i = load %union.tree_node** %abstract_origin4.phi.trans.insert.i, align 8, !tbaa !4
  %cmp.i46 = icmp eq %union.tree_node* %.pre.i, %node
  %or.cond.i = and i1 %tobool.i, %cmp.i46
  %retval.0.i = select i1 %or.cond.i, %union.tree_node* null, %union.tree_node* %.pre.i
  %cmp = icmp eq %union.tree_node* %retval.0.i, null
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb
  tail call fastcc void @add_abstract_origin_attribute(%struct.die_struct* %0, %union.tree_node* %retval.0.i) #10
  br label %if.end15

if.else:                                          ; preds = %sw.bb
  tail call fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %0, %union.tree_node* %node) #10
  %type = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type, align 8, !tbaa !4
  %bf.load5 = load i32* %8, align 8
  %bf.lshr = lshr i32 %bf.load5, 12
  %bf.clear6 = and i32 %bf.lshr, 1
  %bf.lshr9 = lshr i32 %bf.load5, 11
  %bf.clear10 = and i32 %bf.lshr9, 1
  tail call fastcc void @add_type_attribute(%struct.die_struct* %0, %union.tree_node* %11, i32 %bf.clear6, i32 %bf.clear10, %struct.die_struct* %context_die) #10
  %bf.load11 = load i64* %10, align 8
  %bf.cast = and i64 %bf.load11, 4194304
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.else
  %call.i47 = tail call noalias i8* @xmalloc(i64 40) #9
  %dw_attr_next.i = getelementptr inbounds i8* %call.i47, i64 8
  %12 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %12, align 8, !tbaa !4
  %dw_attr.i = bitcast i8* %call.i47 to i32*
  store i32 52, i32* %dw_attr.i, align 4, !tbaa !11
  %dw_attr_val.i = getelementptr inbounds i8* %call.i47, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 9, i32* %val_class.i, align 4, !tbaa !1
  %v.i = getelementptr inbounds i8* %call.i47, i64 24
  store i8 1, i8* %v.i, align 1, !tbaa !1
  %cmp.i.i = icmp eq i8* %call.i, null
  %cmp1.i.i48 = icmp eq i8* %call.i47, null
  %or.cond.i.i = or i1 %cmp.i.i, %cmp1.i.i48
  br i1 %or.cond.i.i, label %if.end15, label %if.then.i.i49

if.then.i.i49:                                    ; preds = %if.then14
  %13 = bitcast i8* %call.i47 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %14 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %15 = load %struct.dw_attr_struct** %14, align 8, !tbaa !4
  store %struct.dw_attr_struct* %15, %struct.dw_attr_struct** %12, align 8, !tbaa !4
  store %struct.dw_attr_struct* %13, %struct.dw_attr_struct** %14, align 8, !tbaa !4
  br label %if.end15

if.end15:                                         ; preds = %if.then.i.i49, %if.then14, %if.else, %if.then
  tail call fastcc void @equate_decl_number_to_die(%union.tree_node* %node, %struct.die_struct* %0) #10
  %bf.load17 = load i64* %10, align 8
  %bf.cast20 = and i64 %bf.load17, 32768
  %tobool21 = icmp eq i64 %bf.cast20, 0
  br i1 %tobool21, label %if.then22, label %sw.epilog

if.then22:                                        ; preds = %if.end15
  tail call fastcc void @add_location_or_const_value_attribute(%struct.die_struct* %0, %union.tree_node* %node) #10
  br label %sw.epilog

sw.bb24:                                          ; preds = %new_die.exit
  tail call fastcc void @add_type_attribute(%struct.die_struct* %0, %union.tree_node* %node, i32 0, i32 0, %struct.die_struct* %context_die) #10
  br label %sw.epilog

sw.default:                                       ; preds = %new_die.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str4, i64 0, i64 0), i32 10025, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.gen_formal_parameter_die, i64 0, i64 0)) #12
  unreachable

sw.epilog:                                        ; preds = %if.end15, %if.then22, %sw.bb24
  ret %struct.die_struct* %0
}
