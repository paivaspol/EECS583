define internal fastcc noalias %struct.dw_loc_descr_struct* @based_loc_descr(i32 %reg, i64 %offset) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !0
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %1 = load i32* @frame_pointer_needed, align 4, !tbaa !0
  %tobool1 = icmp ne i32 %1, 0
  %idxprom = select i1 %tobool1, i64 6, i64 7
  %svr4_dbx_register_map.dbx64_register_map = select i1 %tobool, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond6.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map, i64 0, i64 %idxprom
  %cond6 = load i32* %cond6.in, align 4
  %cmp = icmp eq i32 %cond6, %reg
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i = getelementptr inbounds i8* %call.i, i64 8
  %2 = bitcast i8* %dw_loc_opc.i to i32*
  store i32 145, i32* %2, align 4, !tbaa !9
  %dw_loc_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_loc_oprnd1.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !1
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 %offset, i64* %val_unsigned.i, align 8, !tbaa !6
  %dw_loc_oprnd2.i = getelementptr inbounds i8* %call.i, i64 40
  %val_class2.i = bitcast i8* %dw_loc_oprnd2.i to i32*
  store i32 6, i32* %val_class2.i, align 4, !tbaa !1
  %v4.i = getelementptr inbounds i8* %call.i, i64 48
  %val_unsigned5.i = bitcast i8* %v4.i to i64*
  store i64 0, i64* %val_unsigned5.i, align 8, !tbaa !6
  br label %if.end12

if.else:                                          ; preds = %entry
  %cmp7 = icmp ult i32 %reg, 32
  br i1 %cmp7, label %if.then8, label %if.else10

if.then8:                                         ; preds = %if.else
  %add = add i32 %reg, 112
  %call.i17 = tail call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i18 = getelementptr inbounds i8* %call.i17, i64 8
  %3 = bitcast i8* %dw_loc_opc.i18 to i32*
  store i32 %add, i32* %3, align 4, !tbaa !9
  %dw_loc_oprnd1.i19 = getelementptr inbounds i8* %call.i17, i64 16
  %val_class.i20 = bitcast i8* %dw_loc_oprnd1.i19 to i32*
  store i32 6, i32* %val_class.i20, align 4, !tbaa !1
  %v.i21 = getelementptr inbounds i8* %call.i17, i64 24
  %val_unsigned.i22 = bitcast i8* %v.i21 to i64*
  store i64 %offset, i64* %val_unsigned.i22, align 8, !tbaa !6
  %dw_loc_oprnd2.i23 = getelementptr inbounds i8* %call.i17, i64 40
  %val_class2.i24 = bitcast i8* %dw_loc_oprnd2.i23 to i32*
  store i32 6, i32* %val_class2.i24, align 4, !tbaa !1
  %v4.i25 = getelementptr inbounds i8* %call.i17, i64 48
  %val_unsigned5.i26 = bitcast i8* %v4.i25 to i64*
  store i64 0, i64* %val_unsigned5.i26, align 8, !tbaa !6
  br label %if.end12

if.else10:                                        ; preds = %if.else
  %conv = zext i32 %reg to i64
  %call.i27 = tail call noalias i8* @xcalloc(i64 1, i64 72) #9
  %dw_loc_opc.i28 = getelementptr inbounds i8* %call.i27, i64 8
  %4 = bitcast i8* %dw_loc_opc.i28 to i32*
  store i32 146, i32* %4, align 4, !tbaa !9
  %dw_loc_oprnd1.i29 = getelementptr inbounds i8* %call.i27, i64 16
  %val_class.i30 = bitcast i8* %dw_loc_oprnd1.i29 to i32*
  store i32 6, i32* %val_class.i30, align 4, !tbaa !1
  %v.i31 = getelementptr inbounds i8* %call.i27, i64 24
  %val_unsigned.i32 = bitcast i8* %v.i31 to i64*
  store i64 %conv, i64* %val_unsigned.i32, align 8, !tbaa !6
  %dw_loc_oprnd2.i33 = getelementptr inbounds i8* %call.i27, i64 40
  %val_class2.i34 = bitcast i8* %dw_loc_oprnd2.i33 to i32*
  store i32 6, i32* %val_class2.i34, align 4, !tbaa !1
  %v4.i35 = getelementptr inbounds i8* %call.i27, i64 48
  %val_unsigned5.i36 = bitcast i8* %v4.i35 to i64*
  store i64 %offset, i64* %val_unsigned5.i36, align 8, !tbaa !6
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.else10, %if.then
  %loc_result.0.in = phi i8* [ %call.i, %if.then ], [ %call.i17, %if.then8 ], [ %call.i27, %if.else10 ]
  %loc_result.0 = bitcast i8* %loc_result.0.in to %struct.dw_loc_descr_struct*
  ret %struct.dw_loc_descr_struct* %loc_result.0
}
