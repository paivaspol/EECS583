define void @_obstack_newchunk(%struct.obstack* nocapture %h, i32 %length) #1 {
  tail call void @llvm.dbg.value(metadata %struct.obstack* %h, i64 0, metadata !96, metadata !155), !dbg !267
  tail call void @llvm.dbg.value(metadata i32 %length, i64 0, metadata !97, metadata !155), !dbg !268
  %1 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 1, !dbg !269
  %2 = load %struct._obstack_chunk** %1, align 8, !dbg !269, !tbaa !186
  tail call void @llvm.dbg.value(metadata %struct._obstack_chunk* %2, i64 0, metadata !98, metadata !155), !dbg !270
  %3 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 3, !dbg !271
  %4 = load i8** %3, align 8, !dbg !271, !tbaa !199
  %5 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 2, !dbg !272
  %6 = load i8** %5, align 8, !dbg !272, !tbaa !196
  %7 = ptrtoint i8* %4 to i64, !dbg !273
  %8 = ptrtoint i8* %6 to i64, !dbg !273
  %9 = sub i64 %7, %8, !dbg !273
  tail call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !101, metadata !155), !dbg !274
  %10 = sext i32 %length to i64, !dbg !275
  %11 = ashr i64 %9, 3, !dbg !276
  %12 = add nsw i64 %10, 100, !dbg !277
  %13 = add i64 %12, %9, !dbg !278
  %14 = add i64 %13, %11, !dbg !279
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !100, metadata !155), !dbg !280
  %15 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 0, !dbg !281
  %16 = load i64* %15, align 8, !dbg !281, !tbaa !176
  %17 = icmp slt i64 %14, %16, !dbg !283
  tail call void @llvm.dbg.value(metadata i64 %16, i64 0, metadata !100, metadata !155), !dbg !280
  %. = select i1 %17, i64 %16, i64 %14, !dbg !284
  %18 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 10, !dbg !285
  %19 = load i8* %18, align 8, !dbg !285
  %20 = and i8 %19, 1, !dbg !285
  %21 = icmp eq i8 %20, 0, !dbg !285
  %22 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 7, !dbg !285
  %23 = load %struct._obstack_chunk* (i8*, i64)** %22, align 8, !dbg !285, !tbaa !167
  br i1 %21, label %28, label %24, !dbg !285

; <label>:24                                      ; preds = %0
  %25 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 9, !dbg !285
  %26 = load i8** %25, align 8, !dbg !285, !tbaa !238
  %27 = tail call %struct._obstack_chunk* %23(i8* %26, i64 %.) #6, !dbg !285
  br label %31, !dbg !285

; <label>:28                                      ; preds = %0
  %29 = bitcast %struct._obstack_chunk* (i8*, i64)* %23 to %struct._obstack_chunk* (i64)*, !dbg !285
  %30 = tail call %struct._obstack_chunk* %29(i64 %.) #6, !dbg !285
  br label %31, !dbg !285

; <label>:31                                      ; preds = %28, %24
  %32 = phi %struct._obstack_chunk* [ %27, %24 ], [ %30, %28 ], !dbg !285
  tail call void @llvm.dbg.value(metadata %struct._obstack_chunk* %32, i64 0, metadata !99, metadata !155), !dbg !286
  %33 = icmp eq %struct._obstack_chunk* %32, null, !dbg !287
  br i1 %33, label %34, label %36, !dbg !289

; <label>:34                                      ; preds = %31
  %35 = load void ()** @obstack_alloc_failed_handler, align 8, !dbg !290, !tbaa !146
  tail call void %35() #6, !dbg !291
  br label %36, !dbg !291

; <label>:36                                      ; preds = %31, %34
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %1, align 8, !dbg !292, !tbaa !186
  %37 = getelementptr inbounds %struct._obstack_chunk* %32, i64 0, i32 1, !dbg !293
  store %struct._obstack_chunk* %2, %struct._obstack_chunk** %37, align 8, !dbg !294, !tbaa !212
  %38 = bitcast %struct._obstack_chunk* %32 to i8*, !dbg !295
  %39 = getelementptr inbounds i8* %38, i64 %., !dbg !296
  %40 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 4, !dbg !297
  store i8* %39, i8** %40, align 8, !dbg !298, !tbaa !209
  %41 = getelementptr inbounds %struct._obstack_chunk* %32, i64 0, i32 0, !dbg !299
  store i8* %39, i8** %41, align 8, !dbg !300, !tbaa !205
  %42 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 6, !dbg !301
  %43 = load i32* %42, align 4, !dbg !301, !tbaa !180
  %44 = icmp sgt i32 %43, 6, !dbg !303
  br i1 %44, label %45, label %.preheader, !dbg !304

; <label>:45                                      ; preds = %36
  %46 = lshr i64 %9, 2, !dbg !305
  %47 = icmp eq i64 %46, 0, !dbg !308
  br i1 %47, label %._crit_edge6, label %.lr.ph5, !dbg !310

.lr.ph5:                                          ; preds = %45
  %48 = bitcast i8** %5 to i32**, !dbg !311
  %49 = load i32** %48, align 8, !dbg !311, !tbaa !196
  %50 = getelementptr inbounds %struct._obstack_chunk* %32, i64 0, i32 2, i64 0, !dbg !312
  %51 = bitcast i8* %50 to i32*, !dbg !313
  br label %52, !dbg !310

; <label>:52                                      ; preds = %.lr.ph5, %52
  %i.03.in = phi i64 [ %46, %.lr.ph5 ], [ %i.03, %52 ]
  %i.03 = add nsw i64 %i.03.in, -1, !dbg !314
  %53 = getelementptr inbounds i32* %49, i64 %i.03, !dbg !315
  %54 = load i32* %53, align 4, !dbg !315, !tbaa !152
  %55 = getelementptr inbounds i32* %51, i64 %i.03, !dbg !316
  store i32 %54, i32* %55, align 4, !dbg !317, !tbaa !152
  %56 = icmp sgt i64 %i.03.in, 1, !dbg !308
  br i1 %56, label %52, label %._crit_edge6, !dbg !310

._crit_edge6:                                     ; preds = %52, %45
  %57 = shl nuw i64 %46, 2, !dbg !318
  tail call void @llvm.dbg.value(metadata i64 %57, i64 0, metadata !103, metadata !155), !dbg !319
  br label %.preheader, !dbg !320

.preheader:                                       ; preds = %36, %._crit_edge6
  %i.1.ph = phi i64 [ 0, %36 ], [ %57, %._crit_edge6 ]
  %58 = icmp slt i64 %i.1.ph, %9, !dbg !321
  %59 = load i8** %5, align 8, !dbg !324, !tbaa !196
  br i1 %58, label %.lr.ph, label %._crit_edge, !dbg !325

.lr.ph:                                           ; preds = %.preheader
  %60 = add i64 %7, -1, !dbg !325
  %61 = sub i64 %60, %8, !dbg !325
  br label %62, !dbg !325

; <label>:62                                      ; preds = %62, %.lr.ph
  %63 = phi i8* [ %59, %.lr.ph ], [ %68, %62 ]
  %i.11 = phi i64 [ %i.1.ph, %.lr.ph ], [ %67, %62 ]
  %64 = getelementptr inbounds i8* %63, i64 %i.11, !dbg !326
  %65 = load i8* %64, align 1, !dbg !326, !tbaa !327
  %66 = getelementptr inbounds %struct._obstack_chunk* %32, i64 0, i32 2, i64 %i.11, !dbg !328
  store i8 %65, i8* %66, align 1, !dbg !329, !tbaa !327
  %67 = add nsw i64 %i.11, 1, !dbg !330
  tail call void @llvm.dbg.value(metadata i64 %67, i64 0, metadata !102, metadata !155), !dbg !331
  %68 = load i8** %5, align 8, !dbg !324, !tbaa !196
  %exitcond = icmp eq i64 %i.11, %61, !dbg !325
  br i1 %exitcond, label %._crit_edge, label %62, !dbg !325

._crit_edge:                                      ; preds = %62, %.preheader
  %.lcssa = phi i8* [ %59, %.preheader ], [ %68, %62 ]
  %69 = getelementptr inbounds %struct._obstack_chunk* %2, i64 0, i32 2, i64 0, !dbg !332
  %70 = icmp eq i8* %.lcssa, %69, !dbg !334
  br i1 %70, label %71, label %91, !dbg !335

; <label>:71                                      ; preds = %._crit_edge
  %72 = load i8* %18, align 8, !dbg !336
  %73 = and i8 %72, 2, !dbg !336
  %74 = icmp eq i8 %73, 0, !dbg !337
  br i1 %74, label %75, label %91, !dbg !338

; <label>:75                                      ; preds = %71
  %76 = getelementptr inbounds %struct._obstack_chunk* %2, i64 0, i32 1, !dbg !339
  %77 = bitcast %struct._obstack_chunk** %76 to i64*, !dbg !339
  %78 = load i64* %77, align 8, !dbg !339, !tbaa !212
  %79 = bitcast %struct._obstack_chunk** %37 to i64*, !dbg !341
  store i64 %78, i64* %79, align 8, !dbg !341, !tbaa !212
  %80 = load i8* %18, align 8, !dbg !342
  %81 = and i8 %80, 1, !dbg !342
  %82 = icmp eq i8 %81, 0, !dbg !342
  %83 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 8, !dbg !342
  %84 = load void (i8*, %struct._obstack_chunk*)** %83, align 8, !dbg !342, !tbaa !172
  br i1 %82, label %88, label %85, !dbg !345

; <label>:85                                      ; preds = %75
  %86 = getelementptr inbounds %struct.obstack* %h, i64 0, i32 9, !dbg !342
  %87 = load i8** %86, align 8, !dbg !342, !tbaa !238
  tail call void %84(i8* %87, %struct._obstack_chunk* %2) #6, !dbg !342
  br label %91, !dbg !342

; <label>:88                                      ; preds = %75
  %89 = bitcast void (i8*, %struct._obstack_chunk*)* %84 to void (i8*)*, !dbg !342
  %90 = bitcast %struct._obstack_chunk* %2 to i8*, !dbg !342
  tail call void %89(i8* %90) #6, !dbg !342
  br label %91

; <label>:91                                      ; preds = %71, %88, %85, %._crit_edge
  %92 = getelementptr inbounds %struct._obstack_chunk* %32, i64 0, i32 2, i64 0, !dbg !346
  store i8* %92, i8** %5, align 8, !dbg !347, !tbaa !196
  %93 = getelementptr inbounds %struct._obstack_chunk* %32, i64 0, i32 2, i64 %9, !dbg !348
  store i8* %93, i8** %3, align 8, !dbg !349, !tbaa !199
  %94 = load i8* %18, align 8, !dbg !350
  %95 = and i8 %94, -3, !dbg !350
  store i8 %95, i8* %18, align 8, !dbg !350
  ret void, !dbg !351
}
