define internal fastcc zeroext i1 @inside_basic_block_p(%struct.rtx_def* nocapture %insn) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !1101), !dbg !1506
  %0 = bitcast %struct.rtx_def* %insn to i32*, !dbg !1507
  %bf.load = load i32* %0, align 8, !dbg !1507
  %bf.clear = and i32 %bf.load, 65535, !dbg !1507
  switch i32 %bf.clear, label %sw.default [
    i32 36, label %sw.bb
    i32 33, label %sw.bb25
    i32 34, label %return
    i32 32, label %return
    i32 35, label %sw.bb41
    i32 37, label %sw.bb41
  ], !dbg !1507

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2, !dbg !1508
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1508
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !1508, !tbaa !1204
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !1508
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !1508

lor.lhs.false:                                    ; preds = %sw.bb
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !1508
  %bf.load4 = load i32* %2, align 8, !dbg !1508
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !1508
  %cmp6 = icmp eq i32 %bf.clear5, 33, !dbg !1508
  br i1 %cmp6, label %lor.rhs, label %return, !dbg !1508

lor.rhs:                                          ; preds = %lor.lhs.false
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3, !dbg !1508
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !1508
  %3 = load %struct.rtx_def** %rtx12, align 8, !dbg !1508, !tbaa !1204
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !1508
  %bf.load13 = load i32* %4, align 8, !dbg !1508
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !1508
  %bf.clear14.off = add i32 %bf.clear14, -44, !dbg !1508
  %5 = icmp ugt i32 %bf.clear14.off, 1, !dbg !1508
  ret i1 %5, !dbg !1508

sw.bb25:                                          ; preds = %entry
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !1510
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !1510
  %6 = load %struct.rtx_def** %rtx28, align 8, !dbg !1510, !tbaa !1204
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !1510
  %bf.load29 = load i32* %7, align 8, !dbg !1510
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !1510
  %bf.clear30.off = add i32 %bf.clear30, -44, !dbg !1510
  %8 = icmp ugt i32 %bf.clear30.off, 1, !dbg !1510
  br label %return

sw.bb41:                                          ; preds = %entry, %entry
  br label %return, !dbg !1511

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str1, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.inside_basic_block_p, i64 0, i64 0)) #7, !dbg !1512
  unreachable, !dbg !1512

return:                                           ; preds = %entry, %entry, %sw.bb, %lor.lhs.false, %sw.bb41, %sw.bb25
  %retval.0 = phi i1 [ false, %sw.bb41 ], [ %8, %sw.bb25 ], [ true, %lor.lhs.false ], [ true, %sw.bb ], [ true, %entry ], [ true, %entry ]
  ret i1 %retval.0, !dbg !1513
}
