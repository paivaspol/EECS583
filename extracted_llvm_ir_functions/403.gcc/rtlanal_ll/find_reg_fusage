define i32 @find_reg_fusage(%struct.rtx_def* nocapture %insn, i32 %code, %struct.rtx_def* %datum) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !697), !dbg !1253
  tail call void @llvm.dbg.value(metadata !{i32 %code}, i64 0, metadata !698), !dbg !1254
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %datum}, i64 0, metadata !699), !dbg !1255
  %0 = bitcast %struct.rtx_def* %insn to i32*, !dbg !1256
  %bf.load = load i32* %0, align 8, !dbg !1256
  %bf.clear = and i32 %bf.load, 65535, !dbg !1256
  %cmp = icmp eq i32 %bf.clear, 34, !dbg !1256
  br i1 %cmp, label %if.end, label %return, !dbg !1256

if.end:                                           ; preds = %entry
  %tobool = icmp eq %struct.rtx_def* %datum, null, !dbg !1257
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !1257

if.then1:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), i32 1862, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.find_reg_fusage, i64 0, i64 0)) #8, !dbg !1258
  unreachable, !dbg !1258

if.end2:                                          ; preds = %if.end
  %1 = bitcast %struct.rtx_def* %datum to i32*, !dbg !1259
  %bf.load3 = load i32* %1, align 8, !dbg !1259
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !1259
  %cmp5 = icmp eq i32 %bf.clear4, 61, !dbg !1259
  br i1 %cmp5, label %if.else, label %if.then6, !dbg !1259

if.then6:                                         ; preds = %if.end2
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 7, !dbg !1260
  %link.0.in143 = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1260
  %link.0144 = load %struct.rtx_def** %link.0.in143, align 8, !dbg !1260
  %tobool7145 = icmp eq %struct.rtx_def* %link.0144, null, !dbg !1260
  br i1 %tobool7145, label %return, label %for.body, !dbg !1260

for.body:                                         ; preds = %if.then6, %for.inc
  %link.0146 = phi %struct.rtx_def* [ %link.0, %for.inc ], [ %link.0144, %if.then6 ]
  %fld8 = getelementptr inbounds %struct.rtx_def* %link.0146, i64 0, i32 1, !dbg !1262
  %rtx10 = bitcast [1 x %union.rtunion_def]* %fld8 to %struct.rtx_def**, !dbg !1262
  %2 = load %struct.rtx_def** %rtx10, align 8, !dbg !1262, !tbaa !979
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !1262
  %bf.load11 = load i32* %3, align 8, !dbg !1262
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !1262
  %cmp13 = icmp eq i32 %bf.clear12, %code, !dbg !1262
  br i1 %cmp13, label %land.lhs.true, label %for.inc, !dbg !1262

land.lhs.true:                                    ; preds = %for.body
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !1263
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !1263
  %4 = load %struct.rtx_def** %rtx19, align 8, !dbg !1263, !tbaa !979
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %datum, %struct.rtx_def* %4) #6, !dbg !1263
  %tobool20 = icmp eq i32 %call, 0, !dbg !1263
  br i1 %tobool20, label %for.inc, label %return, !dbg !1263

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %link.0146, i64 0, i32 1, i64 1, !dbg !1264
  %link.0.in = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !1260
  %link.0 = load %struct.rtx_def** %link.0.in, align 8, !dbg !1260
  %tobool7 = icmp eq %struct.rtx_def* %link.0, null, !dbg !1260
  br i1 %tobool7, label %return, label %for.body, !dbg !1260

if.else:                                          ; preds = %if.end2
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %datum, i64 0, i32 1, i64 0, !dbg !1265
  %rtuint = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !1265
  %5 = load i32* %rtuint, align 4, !dbg !1265, !tbaa !992
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !702), !dbg !1265
  %cmp28 = icmp ult i32 %5, 53, !dbg !1266
  br i1 %cmp28, label %if.then29, label %return, !dbg !1266

if.then29:                                        ; preds = %if.else
  %.off = add i32 %5, -8, !dbg !1267
  %6 = icmp ult i32 %.off, 8, !dbg !1267
  %.off129 = add i32 %5, -21, !dbg !1267
  %7 = icmp ult i32 %.off129, 8, !dbg !1267
  %or.cond = or i1 %6, %7, !dbg !1267
  %.off130 = add i32 %5, -45, !dbg !1267
  %8 = icmp ult i32 %.off130, 8, !dbg !1267
  %or.cond136 = or i1 %or.cond, %8, !dbg !1267
  %.off131 = add i32 %5, -29, !dbg !1267
  %9 = icmp ult i32 %.off131, 8, !dbg !1267
  %or.cond138 = or i1 %or.cond136, %9, !dbg !1267
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !1267
  %bf.clear45 = and i32 %bf.lshr, 255, !dbg !1267
  br i1 %or.cond138, label %cond.true, label %cond.false, !dbg !1267

cond.true:                                        ; preds = %if.then29
  %idxprom133 = zext i32 %bf.clear45 to i64, !dbg !1267
  %arrayidx46 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom133, !dbg !1267
  %10 = load i32* %arrayidx46, align 4, !dbg !1267, !tbaa !1239
  %cmp47 = icmp eq i32 %10, 5, !dbg !1267
  br i1 %cmp47, label %cond.end85, label %lor.rhs, !dbg !1267

lor.rhs:                                          ; preds = %cond.true
  %cmp53 = icmp eq i32 %10, 6, !dbg !1267
  %phitmp = select i1 %cmp53, i32 2, i32 1, !dbg !1267
  br label %cond.end85, !dbg !1267

cond.false:                                       ; preds = %if.then29
  switch i32 %bf.clear45, label %cond.false70 [
    i32 18, label %cond.true58
    i32 24, label %cond.true66
  ], !dbg !1267

cond.true58:                                      ; preds = %cond.false
  %11 = load i32* @target_flags, align 4, !dbg !1267, !tbaa !992
  %and = lshr i32 %11, 25, !dbg !1267
  %12 = and i32 %and, 1, !dbg !1267
  %13 = xor i32 %12, 3, !dbg !1267
  br label %cond.end85, !dbg !1267

cond.true66:                                      ; preds = %cond.false
  %14 = load i32* @target_flags, align 4, !dbg !1267, !tbaa !992
  %and67 = lshr i32 %14, 24, !dbg !1267
  %15 = and i32 %and67, 2, !dbg !1267
  %16 = xor i32 %15, 6, !dbg !1267
  br label %cond.end85, !dbg !1267

cond.false70:                                     ; preds = %cond.false
  %idxprom74132 = zext i32 %bf.clear45 to i64, !dbg !1267
  %arrayidx75 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom74132, !dbg !1267
  %17 = load i8* %arrayidx75, align 1, !dbg !1267, !tbaa !980
  %conv = zext i8 %17 to i32, !dbg !1267
  %18 = load i32* @target_flags, align 4, !dbg !1267, !tbaa !992
  %and76 = lshr i32 %18, 23, !dbg !1267
  %19 = and i32 %and76, 4, !dbg !1267
  %20 = add i32 %19, 4, !dbg !1267
  %add = add i32 %conv, -1, !dbg !1267
  %sub = add i32 %add, %20, !dbg !1267
  %div = sdiv i32 %sub, %20, !dbg !1267
  br label %cond.end85, !dbg !1267

cond.end85:                                       ; preds = %cond.true, %lor.rhs, %cond.true58, %cond.false70, %cond.true66
  %cond86 = phi i32 [ %13, %cond.true58 ], [ %16, %cond.true66 ], [ %div, %cond.false70 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ], !dbg !1267
  %add87 = add i32 %cond86, %5, !dbg !1267
  tail call void @llvm.dbg.value(metadata !{i32 %add87}, i64 0, metadata !704), !dbg !1267
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !706), !dbg !1268
  %cmp89139 = icmp ult i32 %5, %add87, !dbg !1268
  br i1 %cmp89139, label %for.body91, label %return, !dbg !1268

for.cond88:                                       ; preds = %for.body91
  %cmp89 = icmp ult i32 %inc, %add87, !dbg !1268
  br i1 %cmp89, label %for.body91, label %return, !dbg !1268

for.body91:                                       ; preds = %cond.end85, %for.cond88
  %i.0140 = phi i32 [ %inc, %for.cond88 ], [ %5, %cond.end85 ]
  %call92 = tail call i32 @find_regno_fusage(%struct.rtx_def* %insn, i32 %code, i32 %i.0140) #5, !dbg !1270
  %tobool93 = icmp eq i32 %call92, 0, !dbg !1270
  %inc = add i32 %i.0140, 1, !dbg !1268
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !706), !dbg !1268
  br i1 %tobool93, label %for.cond88, label %return, !dbg !1270

return:                                           ; preds = %if.then6, %land.lhs.true, %for.inc, %cond.end85, %for.body91, %for.cond88, %if.else, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.else ], [ 0, %cond.end85 ], [ 1, %for.body91 ], [ 0, %for.cond88 ], [ 0, %if.then6 ], [ 1, %land.lhs.true ], [ 0, %for.inc ]
  ret i32 %retval.0, !dbg !1271
}
