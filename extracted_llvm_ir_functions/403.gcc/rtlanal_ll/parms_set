define internal void @parms_set(%struct.rtx_def* nocapture %x, %struct.rtx_def* nocapture %pat, i8* nocapture %data) #1 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !3
  %cmp1 = icmp ult i32 %1, 53
  br i1 %cmp1, label %land.lhs.true2, label %if.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %regs = getelementptr inbounds i8* %data, i64 8
  %2 = bitcast i8* %regs to i64*
  %3 = load i64* %2, align 8, !tbaa !4
  %sh_prom = zext i32 %1 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %3, %shl
  %tobool = icmp eq i64 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true2
  %neg = xor i64 %shl, -1
  %and12 = and i64 %3, %neg
  store i64 %and12, i64* %2, align 8, !tbaa !4
  %nregs = bitcast i8* %data to i32*
  %4 = load i32* %nregs, align 4, !tbaa !3
  %dec = add nsw i32 %4, -1
  store i32 %dec, i32* %nregs, align 4, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %land.lhs.true2, %if.then, %land.lhs.true, %entry
  ret void
}
