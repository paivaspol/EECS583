define i32 @subreg_regno(%struct.rtx_def* nocapture %x) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !928), !dbg !1525
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, !dbg !1526
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !1526
  %0 = load %struct.rtx_def** %rtx, align 8, !dbg !1526, !tbaa !979
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !930), !dbg !1526
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !1527
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*, !dbg !1527
  %1 = load i32* %rtuint, align 4, !dbg !1527, !tbaa !992
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !931), !dbg !1527
  %2 = bitcast %struct.rtx_def* %0 to i32*, !dbg !1528
  %bf.load = load i32* %2, align 8, !dbg !1528
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !1528
  %bf.clear = and i32 %bf.lshr, 255, !dbg !1528
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, !dbg !1528
  %rtuint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*, !dbg !1528
  %3 = load i32* %rtuint5, align 4, !dbg !1528, !tbaa !992
  %4 = bitcast %struct.rtx_def* %x to i32*, !dbg !1528
  %bf.load6 = load i32* %4, align 8, !dbg !1528
  %bf.lshr7 = lshr i32 %bf.load6, 16, !dbg !1528
  %bf.clear8 = and i32 %bf.lshr7, 255, !dbg !1528
  %call = tail call i32 @subreg_regno_offset(i32 %1, i32 %bf.clear, i32 %3, i32 %bf.clear8) #5, !dbg !1528
  %add = add i32 %call, %1, !dbg !1528
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !929), !dbg !1528
  ret i32 %add, !dbg !1529
}
