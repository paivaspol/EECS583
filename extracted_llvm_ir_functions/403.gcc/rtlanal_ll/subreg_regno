define i32 @subreg_regno(%struct.rtx_def* nocapture %x) #1 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !3
  %2 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %2, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtuint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %3 = load i32* %rtuint5, align 4, !tbaa !3
  %4 = bitcast %struct.rtx_def* %x to i32*
  %bf.load6 = load i32* %4, align 8
  %bf.lshr7 = lshr i32 %bf.load6, 16
  %bf.clear8 = and i32 %bf.lshr7, 255
  %call = tail call i32 @subreg_regno_offset(i32 %1, i32 %bf.clear, i32 %3, i32 %bf.clear8) #4
  %add = add i32 %call, %1
  ret i32 %add
}
