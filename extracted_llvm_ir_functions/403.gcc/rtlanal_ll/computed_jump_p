define i32 @computed_jump_p(%struct.rtx_def* nocapture %insn) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.then, label %if.end92

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 13, %struct.rtx_def* null) #4
  %tobool = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool, label %if.else, label %return

if.else:                                          ; preds = %if.then
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  switch i32 %bf.clear3, label %if.end92 [
    i32 39, label %if.then5
    i32 47, label %land.lhs.true77
  ]

if.then5:                                         ; preds = %if.else
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !3
  %cmp8114 = icmp sgt i32 %4, 0
  br i1 %cmp8114, label %for.body.lr.ph, label %if.end92

for.body.lr.ph:                                   ; preds = %if.then5
  %5 = sext i32 %4 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv118.in = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv118, %for.inc ]
  %has_use_labelref.0116 = phi i32 [ 0, %for.body.lr.ph ], [ %has_use_labelref.1, %for.inc ]
  %indvars.iv118 = add i64 %indvars.iv118.in, -1
  %arrayidx12 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv118
  %6 = load %struct.rtx_def** %arrayidx12, align 8, !tbaa !0
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load13 = load i32* %7, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 48
  br i1 %cmp15, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx24, align 8, !tbaa !0
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load25 = load i32* %9, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 67
  %.has_use_labelref.0 = select i1 %cmp27, i32 1, i32 %has_use_labelref.0116
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %has_use_labelref.1 = phi i32 [ %has_use_labelref.0116, %for.body ], [ %.has_use_labelref.0, %land.lhs.true ]
  %10 = trunc i64 %indvars.iv118 to i32
  %cmp8 = icmp sgt i32 %10, 0
  br i1 %cmp8, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  %tobool29.not = icmp ne i32 %has_use_labelref.1, 0
  %cmp8114.not = xor i1 %cmp8114, true
  %brmerge = or i1 %tobool29.not, %cmp8114.not
  br i1 %brmerge, label %if.end92, label %for.body34.lr.ph

for.body34.lr.ph:                                 ; preds = %for.end
  %11 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !0
  %12 = sext i32 %4 to i64
  br label %for.body34

for.body34:                                       ; preds = %for.body34.lr.ph, %for.inc69
  %indvars.iv.in = phi i64 [ %12, %for.body34.lr.ph ], [ %indvars.iv, %for.inc69 ]
  %indvars.iv = add i64 %indvars.iv.in, -1
  %arrayidx40 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv
  %13 = load %struct.rtx_def** %arrayidx40, align 8, !tbaa !0
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load41 = load i32* %14, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 47
  br i1 %cmp43, label %land.lhs.true44, label %for.inc69

land.lhs.true44:                                  ; preds = %for.body34
  %fld51 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1
  %rtx53 = bitcast [1 x %union.rtunion_def]* %fld51 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx53, align 8, !tbaa !0
  %cmp54 = icmp eq %struct.rtx_def* %15, %11
  br i1 %cmp54, label %land.lhs.true55, label %for.inc69

land.lhs.true55:                                  ; preds = %land.lhs.true44
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx64, align 8, !tbaa !0
  %call65 = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %16) #4
  %tobool66 = icmp eq i32 %call65, 0
  br i1 %tobool66, label %for.inc69, label %return

for.inc69:                                        ; preds = %land.lhs.true55, %for.body34, %land.lhs.true44
  %17 = trunc i64 %indvars.iv to i32
  %cmp33 = icmp sgt i32 %17, 0
  br i1 %cmp33, label %for.body34, label %if.end92

land.lhs.true77:                                  ; preds = %if.else
  %fld78 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx80 = bitcast [1 x %union.rtunion_def]* %fld78 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx80, align 8, !tbaa !0
  %19 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !0
  %cmp81 = icmp eq %struct.rtx_def* %18, %19
  br i1 %cmp81, label %land.lhs.true82, label %if.end92

land.lhs.true82:                                  ; preds = %land.lhs.true77
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx85, align 8, !tbaa !0
  %call86 = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %20) #4
  %tobool87 = icmp eq i32 %call86, 0
  br i1 %tobool87, label %if.end92, label %return

if.end92:                                         ; preds = %for.end, %if.then5, %for.inc69, %if.else, %land.lhs.true82, %land.lhs.true77, %entry
  br label %return

return:                                           ; preds = %land.lhs.true55, %land.lhs.true82, %if.then, %if.end92
  %retval.0 = phi i32 [ 0, %if.end92 ], [ 0, %if.then ], [ 1, %land.lhs.true82 ], [ 1, %land.lhs.true55 ]
  ret i32 %retval.0
}
