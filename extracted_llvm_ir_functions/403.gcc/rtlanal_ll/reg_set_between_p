define i32 @reg_set_between_p(%struct.rtx_def* %reg, %struct.rtx_def* %from_insn, %struct.rtx_def* %to_insn) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %reg}, i64 0, metadata !481), !dbg !1306
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %from_insn}, i64 0, metadata !482), !dbg !1306
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %to_insn}, i64 0, metadata !483), !dbg !1306
  %cmp = icmp eq %struct.rtx_def* %from_insn, %to_insn, !dbg !1307
  br i1 %cmp, label %return, label %for.cond.preheader, !dbg !1307

for.cond.preheader:                               ; preds = %entry
  %insn.0.in.in16 = getelementptr inbounds %struct.rtx_def* %from_insn, i64 0, i32 1, i64 2, !dbg !1308
  %insn.0.in17 = bitcast %union.rtunion_def* %insn.0.in.in16 to %struct.rtx_def**, !dbg !1308
  %insn.018 = load %struct.rtx_def** %insn.0.in17, align 8, !dbg !1308
  %cmp119 = icmp eq %struct.rtx_def* %insn.018, %to_insn, !dbg !1308
  br i1 %cmp119, label %return, label %for.body, !dbg !1308

for.body:                                         ; preds = %for.cond.preheader, %for.cond.backedge
  %insn.020 = phi %struct.rtx_def* [ %insn.0, %for.cond.backedge ], [ %insn.018, %for.cond.preheader ]
  %0 = bitcast %struct.rtx_def* %insn.020 to i32*, !dbg !1310
  %bf.load = load i32* %0, align 8, !dbg !1310
  %bf.clear = and i32 %bf.load, 65535, !dbg !1310
  %idxprom15 = zext i32 %bf.clear to i64, !dbg !1310
  %arrayidx2 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom15, !dbg !1310
  %1 = load i8* %arrayidx2, align 1, !dbg !1310, !tbaa !980
  %cmp3 = icmp eq i8 %1, 105, !dbg !1310
  br i1 %cmp3, label %land.lhs.true, label %for.cond.backedge, !dbg !1310

land.lhs.true:                                    ; preds = %for.body
  %call = tail call i32 @reg_set_p(%struct.rtx_def* %reg, %struct.rtx_def* %insn.020) #5, !dbg !1310
  %tobool = icmp eq i32 %call, 0, !dbg !1310
  br i1 %tobool, label %for.cond.backedge, label %return, !dbg !1310

for.cond.backedge:                                ; preds = %land.lhs.true, %for.body
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.020, i64 0, i32 1, i64 2, !dbg !1308
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !1308
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8, !dbg !1308
  %cmp1 = icmp eq %struct.rtx_def* %insn.0, %to_insn, !dbg !1308
  br i1 %cmp1, label %return, label %for.body, !dbg !1308

return:                                           ; preds = %for.cond.preheader, %land.lhs.true, %for.cond.backedge, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.cond.preheader ], [ 1, %land.lhs.true ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0, !dbg !1311
}
