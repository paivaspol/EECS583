define i32 @dead_or_set_regno_p(%struct.rtx_def* nocapture %insn, i32 %test_regno) #0 {
entry:
  %call = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %test_regno) #4
  %tobool = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %land.lhs.true, label %if.end4

land.lhs.true:                                    ; preds = %if.end
  %call1 = tail call i32 @find_regno_fusage(%struct.rtx_def* %insn, i32 49, i32 %test_regno) #4
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.end4, label %return

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load5 = load i32* %2, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 38
  br i1 %cmp7, label %if.then8, label %if.end12

if.then8:                                         ; preds = %if.end4
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx11, align 8, !tbaa !0
  %.phi.trans.insert = bitcast %struct.rtx_def* %3 to i32*
  %bf.load13.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.end4
  %bf.load13 = phi i32 [ %bf.load13.pre, %if.then8 ], [ %bf.load5, %if.end4 ]
  %pattern.0 = phi %struct.rtx_def* [ %3, %if.then8 ], [ %1, %if.end4 ]
  %bf.clear14 = and i32 %bf.load13, 65535
  switch i32 %bf.clear14, label %return [
    i32 47, label %if.then16
    i32 39, label %if.then160
  ]

if.then16:                                        ; preds = %if.end12
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx22, align 8, !tbaa !0
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load23 = load i32* %5, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 63
  br i1 %cmp25, label %land.lhs.true26, label %if.end58

land.lhs.true26:                                  ; preds = %if.then16
  %bf.lshr = lshr i32 %bf.load23, 16
  %bf.clear28 = and i32 %bf.lshr, 255
  %idxprom432 = zext i32 %bf.clear28 to i64
  %arrayidx29 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom432
  %6 = load i8* %arrayidx29, align 1, !tbaa !1
  %conv = zext i8 %6 to i32
  %7 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %7, 23
  %8 = and i32 %and, 4
  %9 = add i32 %8, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %9
  %div = sdiv i32 %sub, %9
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx36, align 8, !tbaa !0
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load37 = load i32* %11, align 8
  %bf.lshr38 = lshr i32 %bf.load37, 16
  %bf.clear39 = and i32 %bf.lshr38, 255
  %idxprom40433 = zext i32 %bf.clear39 to i64
  %arrayidx41 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom40433
  %12 = load i8* %arrayidx41, align 1, !tbaa !1
  %conv42 = zext i8 %12 to i32
  %add46451 = or i32 %8, 3
  %sub47 = add i32 %add46451, %conv42
  %div51 = sdiv i32 %sub47, %9
  %cmp52 = icmp eq i32 %div, %div51
  %. = select i1 %cmp52, %struct.rtx_def* %10, %struct.rtx_def* %4
  %.phi.trans.insert453 = bitcast %struct.rtx_def* %. to i32*
  %bf.load59.pre = load i32* %.phi.trans.insert453, align 8
  br label %if.end58

if.end58:                                         ; preds = %land.lhs.true26, %if.then16
  %bf.load59 = phi i32 [ %bf.load23, %if.then16 ], [ %bf.load59.pre, %land.lhs.true26 ]
  %dest.0 = phi %struct.rtx_def* [ %4, %if.then16 ], [ %., %land.lhs.true26 ]
  %bf.clear60 = and i32 %bf.load59, 65535
  %cmp61 = icmp eq i32 %bf.clear60, 61
  br i1 %cmp61, label %if.end64, label %return

if.end64:                                         ; preds = %if.end58
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %dest.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx66 to i32*
  %13 = load i32* %rtuint, align 4, !tbaa !3
  %cmp67 = icmp ugt i32 %13, 52
  br i1 %cmp67, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end64
  %add69 = add i32 %13, 1
  br label %cond.end150

cond.false:                                       ; preds = %if.end64
  %.off425 = add i32 %13, -8
  %14 = icmp ult i32 %.off425, 8
  %.off426 = add i32 %13, -21
  %15 = icmp ult i32 %.off426, 8
  %or.cond = or i1 %14, %15
  %.off427 = add i32 %13, -45
  %16 = icmp ult i32 %.off427, 8
  %or.cond436 = or i1 %or.cond, %16
  %.off428 = add i32 %13, -29
  %17 = icmp ult i32 %.off428, 8
  %or.cond438 = or i1 %or.cond436, %17
  %bf.lshr94 = lshr i32 %bf.load59, 16
  %bf.clear95 = and i32 %bf.lshr94, 255
  br i1 %or.cond438, label %cond.true92, label %cond.false108

cond.true92:                                      ; preds = %cond.false
  %idxprom96430 = zext i32 %bf.clear95 to i64
  %arrayidx97 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom96430
  %18 = load i32* %arrayidx97, align 4, !tbaa !5
  %cmp98 = icmp eq i32 %18, 5
  br i1 %cmp98, label %cond.end147, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true92
  %cmp105 = icmp eq i32 %18, 6
  %phitmp431 = select i1 %cmp105, i32 2, i32 1
  br label %cond.end147

cond.false108:                                    ; preds = %cond.false
  switch i32 %bf.clear95, label %cond.false128 [
    i32 18, label %cond.true114
    i32 24, label %cond.true124
  ]

cond.true114:                                     ; preds = %cond.false108
  %19 = load i32* @target_flags, align 4, !tbaa !3
  %and115 = lshr i32 %19, 25
  %20 = and i32 %and115, 1
  %21 = xor i32 %20, 3
  br label %cond.end147

cond.true124:                                     ; preds = %cond.false108
  %22 = load i32* @target_flags, align 4, !tbaa !3
  %and125 = lshr i32 %22, 24
  %23 = and i32 %and125, 2
  %24 = xor i32 %23, 6
  br label %cond.end147

cond.false128:                                    ; preds = %cond.false108
  %idxprom132429 = zext i32 %bf.clear95 to i64
  %arrayidx133 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom132429
  %25 = load i8* %arrayidx133, align 1, !tbaa !1
  %conv134 = zext i8 %25 to i32
  %26 = load i32* @target_flags, align 4, !tbaa !3
  %and135 = lshr i32 %26, 23
  %27 = and i32 %and135, 4
  %28 = add i32 %27, 4
  %add138 = add i32 %conv134, -1
  %sub139 = add i32 %add138, %28
  %div143 = sdiv i32 %sub139, %28
  br label %cond.end147

cond.end147:                                      ; preds = %cond.true92, %lor.rhs, %cond.true114, %cond.false128, %cond.true124
  %cond148 = phi i32 [ %21, %cond.true114 ], [ %24, %cond.true124 ], [ %div143, %cond.false128 ], [ 2, %cond.true92 ], [ %phitmp431, %lor.rhs ]
  %add149 = add i32 %cond148, %13
  br label %cond.end150

cond.end150:                                      ; preds = %cond.end147, %cond.true
  %cond151 = phi i32 [ %add69, %cond.true ], [ %add149, %cond.end147 ]
  %cmp154 = icmp ugt i32 %cond151, %test_regno
  %not.cmp152 = icmp ule i32 %13, %test_regno
  %29 = and i1 %cmp154, %not.cmp152
  %land.ext = zext i1 %29 to i32
  br label %return

if.then160:                                       ; preds = %if.end12
  %arrayidx162 = getelementptr inbounds %struct.rtx_def* %pattern.0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtvec_def**
  %30 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %30, i64 0, i32 0
  %31 = load i32* %num_elem, align 4, !tbaa !3
  %cmp164448 = icmp sgt i32 %31, 0
  br i1 %cmp164448, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %if.then160
  %32 = load i32* @target_flags, align 4, !tbaa !3
  %and205 = lshr i32 %32, 23
  %33 = and i32 %and205, 4
  %34 = add i32 %33, 4
  %add226450 = or i32 %33, 3
  %and301 = lshr i32 %32, 25
  %35 = and i32 %and301, 1
  %36 = xor i32 %35, 3
  %and311 = lshr i32 %32, 24
  %37 = and i32 %and311, 2
  %38 = xor i32 %37, 6
  %39 = sext i32 %31 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %39, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx170 = getelementptr inbounds %struct.rtvec_def* %30, i64 0, i32 1, i64 %indvars.iv.next
  %40 = load %struct.rtx_def** %arrayidx170, align 8, !tbaa !0
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load171 = load i32* %41, align 8
  %bf.clear172 = and i32 %bf.load171, 65535
  %cmp173 = icmp eq i32 %bf.clear172, 38
  br i1 %cmp173, label %if.then175, label %if.end179

if.then175:                                       ; preds = %for.body
  %arrayidx177 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 1
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx178, align 8, !tbaa !0
  %.phi.trans.insert455 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load180.pre = load i32* %.phi.trans.insert455, align 8
  br label %if.end179

if.end179:                                        ; preds = %if.then175, %for.body
  %bf.load180 = phi i32 [ %bf.load180.pre, %if.then175 ], [ %bf.load171, %for.body ]
  %body.0 = phi %struct.rtx_def* [ %42, %if.then175 ], [ %40, %for.body ]
  %bf.clear181 = and i32 %bf.load180, 65535
  switch i32 %bf.clear181, label %for.cond.backedge [
    i32 47, label %if.then189
    i32 49, label %if.then189
  ]

if.then189:                                       ; preds = %if.end179, %if.end179
  %arrayidx192 = getelementptr inbounds %struct.rtx_def* %body.0, i64 0, i32 1, i64 0
  %rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx193, align 8, !tbaa !0
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load194 = load i32* %44, align 8
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 63
  br i1 %cmp196, label %land.lhs.true198, label %if.end238

land.lhs.true198:                                 ; preds = %if.then189
  %bf.lshr200 = lshr i32 %bf.load194, 16
  %bf.clear201 = and i32 %bf.lshr200, 255
  %idxprom202423 = zext i32 %bf.clear201 to i64
  %arrayidx203 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom202423
  %45 = load i8* %arrayidx203, align 1, !tbaa !1
  %conv204 = zext i8 %45 to i32
  %add208 = add i32 %conv204, -1
  %sub209 = add i32 %add208, %34
  %div213 = sdiv i32 %sub209, %34
  %arrayidx215 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %46 = load %struct.rtx_def** %rtx216, align 8, !tbaa !0
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load217 = load i32* %47, align 8
  %bf.lshr218 = lshr i32 %bf.load217, 16
  %bf.clear219 = and i32 %bf.lshr218, 255
  %idxprom220424 = zext i32 %bf.clear219 to i64
  %arrayidx221 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom220424
  %48 = load i8* %arrayidx221, align 1, !tbaa !1
  %conv222 = zext i8 %48 to i32
  %sub227 = add i32 %add226450, %conv222
  %div231 = sdiv i32 %sub227, %34
  %cmp232 = icmp eq i32 %div213, %div231
  %.439 = select i1 %cmp232, %struct.rtx_def* %46, %struct.rtx_def* %43
  %.phi.trans.insert457 = bitcast %struct.rtx_def* %.439 to i32*
  %bf.load239.pre = load i32* %.phi.trans.insert457, align 8
  br label %if.end238

if.end238:                                        ; preds = %land.lhs.true198, %if.then189
  %bf.load239 = phi i32 [ %bf.load194, %if.then189 ], [ %bf.load239.pre, %land.lhs.true198 ]
  %dest190.0 = phi %struct.rtx_def* [ %43, %if.then189 ], [ %.439, %land.lhs.true198 ]
  %bf.clear240 = and i32 %bf.load239, 65535
  %cmp241 = icmp eq i32 %bf.clear240, 61
  br i1 %cmp241, label %if.end244, label %for.cond.backedge

if.end244:                                        ; preds = %if.end238
  %arrayidx246 = getelementptr inbounds %struct.rtx_def* %dest190.0, i64 0, i32 1, i64 0
  %rtuint247 = bitcast %union.rtunion_def* %arrayidx246 to i32*
  %49 = load i32* %rtuint247, align 4, !tbaa !3
  %cmp248 = icmp ugt i32 %49, 52
  br i1 %cmp248, label %cond.true250, label %cond.false252

cond.true250:                                     ; preds = %if.end244
  %add251 = add i32 %49, 1
  br label %cond.end337

cond.false252:                                    ; preds = %if.end244
  %.off = add i32 %49, -8
  %50 = icmp ult i32 %.off, 8
  %.off418 = add i32 %49, -21
  %51 = icmp ult i32 %.off418, 8
  %or.cond441 = or i1 %50, %51
  %.off419 = add i32 %49, -45
  %52 = icmp ult i32 %.off419, 8
  %or.cond443 = or i1 %or.cond441, %52
  %.off420 = add i32 %49, -29
  %53 = icmp ult i32 %.off420, 8
  %or.cond445 = or i1 %or.cond443, %53
  %bf.lshr278 = lshr i32 %bf.load239, 16
  %bf.clear279 = and i32 %bf.lshr278, 255
  br i1 %or.cond445, label %cond.true276, label %cond.false294

cond.true276:                                     ; preds = %cond.false252
  %idxprom280422 = zext i32 %bf.clear279 to i64
  %arrayidx281 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom280422
  %54 = load i32* %arrayidx281, align 4, !tbaa !5
  %cmp282 = icmp eq i32 %54, 5
  br i1 %cmp282, label %cond.end334, label %lor.rhs284

lor.rhs284:                                       ; preds = %cond.true276
  %cmp290 = icmp eq i32 %54, 6
  %phitmp = select i1 %cmp290, i32 2, i32 1
  br label %cond.end334

cond.false294:                                    ; preds = %cond.false252
  switch i32 %bf.clear279, label %cond.false314 [
    i32 18, label %cond.end334
    i32 24, label %cond.true310
  ]

cond.true310:                                     ; preds = %cond.false294
  br label %cond.end334

cond.false314:                                    ; preds = %cond.false294
  %idxprom318421 = zext i32 %bf.clear279 to i64
  %arrayidx319 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom318421
  %55 = load i8* %arrayidx319, align 1, !tbaa !1
  %conv320 = zext i8 %55 to i32
  %add324 = add i32 %conv320, -1
  %sub325 = add i32 %add324, %34
  %div329 = sdiv i32 %sub325, %34
  br label %cond.end334

cond.end334:                                      ; preds = %cond.false294, %cond.true276, %lor.rhs284, %cond.false314, %cond.true310
  %cond335 = phi i32 [ %38, %cond.true310 ], [ %div329, %cond.false314 ], [ 2, %cond.true276 ], [ %phitmp, %lor.rhs284 ], [ %36, %cond.false294 ]
  %add336 = add i32 %cond335, %49
  br label %cond.end337

cond.end337:                                      ; preds = %cond.end334, %cond.true250
  %cond338 = phi i32 [ %add251, %cond.true250 ], [ %add336, %cond.end334 ]
  %cmp339 = icmp ule i32 %49, %test_regno
  %cmp342 = icmp ugt i32 %cond338, %test_regno
  %or.cond446 = and i1 %cmp339, %cmp342
  br i1 %or.cond446, label %return, label %for.cond.backedge

for.cond.backedge:                                ; preds = %cond.end337, %if.end179, %if.end238
  %56 = trunc i64 %indvars.iv.next to i32
  %cmp164 = icmp sgt i32 %56, 0
  br i1 %cmp164, label %for.body, label %return

return:                                           ; preds = %if.then160, %cond.end337, %for.cond.backedge, %if.end12, %if.end58, %land.lhs.true, %entry, %cond.end150
  %retval.0 = phi i32 [ %land.ext, %cond.end150 ], [ 1, %entry ], [ 1, %land.lhs.true ], [ 0, %if.end58 ], [ 0, %if.end12 ], [ 0, %if.then160 ], [ 1, %cond.end337 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}
