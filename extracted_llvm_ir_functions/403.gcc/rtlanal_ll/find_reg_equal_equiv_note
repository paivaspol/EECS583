define %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* nocapture %insn) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom30 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom30
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %cond.true, label %return

cond.true:                                        ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 47
  br i1 %cmp5, label %cond.end15, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %2) #4
  br label %cond.end15

cond.end15:                                       ; preds = %cond.true, %cond.false
  %cond16 = phi %struct.rtx_def* [ %call, %cond.false ], [ %2, %cond.true ]
  %cmp17 = icmp eq %struct.rtx_def* %cond16, null
  br i1 %cmp17, label %return, label %if.else

if.else:                                          ; preds = %cond.end15
  %call19 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 3, %struct.rtx_def* null) #4
  %cmp20 = icmp eq %struct.rtx_def* %call19, null
  br i1 %cmp20, label %if.else23, label %return

if.else23:                                        ; preds = %if.else
  %call24 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 4, %struct.rtx_def* null) #4
  br label %return

return:                                           ; preds = %entry, %if.else, %cond.end15, %if.else23
  %retval.0 = phi %struct.rtx_def* [ %call24, %if.else23 ], [ null, %cond.end15 ], [ %call19, %if.else ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}
