define i32 @noop_move_p(%struct.rtx_def* nocapture %insn) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !555), !dbg !1474
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !1475
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1475
  %0 = load %struct.rtx_def** %rtx, align 8, !dbg !1475, !tbaa !979
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !556), !dbg !1475
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4, !dbg !1476
  %rtint = bitcast %union.rtunion_def* %arrayidx2 to i32*, !dbg !1476
  %1 = load i32* %rtint, align 4, !dbg !1476, !tbaa !992
  %cmp = icmp eq i32 %1, 2147483647, !dbg !1476
  br i1 %cmp, label %return, label %if.end, !dbg !1476

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 4, %struct.rtx_def* null) #5, !dbg !1477
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !1477
  br i1 %tobool, label %if.end4, label %return, !dbg !1477

if.end4:                                          ; preds = %if.end
  %call5 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 6, %struct.rtx_def* null) #5, !dbg !1478
  %tobool6 = icmp eq %struct.rtx_def* %call5, null, !dbg !1478
  br i1 %tobool6, label %if.end8, label %return, !dbg !1478

if.end8:                                          ; preds = %if.end4
  %2 = bitcast %struct.rtx_def* %0 to i32*, !dbg !1479
  %bf.load = load i32* %2, align 8, !dbg !1479
  %bf.clear = and i32 %bf.load, 65535, !dbg !1479
  %cmp9 = icmp eq i32 %bf.clear, 47, !dbg !1479
  br i1 %cmp9, label %land.lhs.true, label %if.end13, !dbg !1479

land.lhs.true:                                    ; preds = %if.end8
  %call10 = tail call i32 @set_noop_p(%struct.rtx_def* %0) #5, !dbg !1479
  %tobool11 = icmp eq i32 %call10, 0, !dbg !1479
  br i1 %tobool11, label %land.lhs.true.if.end13_crit_edge, label %return, !dbg !1479

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  %bf.load14.pre = load i32* %2, align 8, !dbg !1480
  br label %if.end13, !dbg !1479

if.end13:                                         ; preds = %land.lhs.true.if.end13_crit_edge, %if.end8
  %bf.load14 = phi i32 [ %bf.load14.pre, %land.lhs.true.if.end13_crit_edge ], [ %bf.load, %if.end8 ]
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !1480
  %cmp16 = icmp eq i32 %bf.clear15, 39, !dbg !1480
  br i1 %cmp16, label %for.cond.preheader, label %return, !dbg !1480

for.cond.preheader:                               ; preds = %if.end13
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !1481
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**, !dbg !1481
  %3 = load %struct.rtvec_def** %rtvec, align 8, !dbg !1481, !tbaa !979
  %num_elem54 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0, !dbg !1481
  %4 = load i32* %num_elem54, align 4, !dbg !1481, !tbaa !992
  %cmp2055 = icmp sgt i32 %4, 0, !dbg !1481
  br i1 %cmp2055, label %for.body, label %return, !dbg !1481

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %5 = phi %struct.rtvec_def* [ %8, %for.inc ], [ %3, %for.cond.preheader ]
  %arrayidx24 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv, !dbg !1482
  %6 = load %struct.rtx_def** %arrayidx24, align 8, !dbg !1482, !tbaa !979
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !559), !dbg !1482
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !1483
  %bf.load25 = load i32* %7, align 8, !dbg !1483
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !1483
  switch i32 %bf.clear26, label %return [
    i32 48, label %for.inc
    i32 49, label %for.inc
    i32 47, label %lor.lhs.false36
  ], !dbg !1483

lor.lhs.false36:                                  ; preds = %for.body
  %call37 = tail call i32 @set_noop_p(%struct.rtx_def* %6) #5, !dbg !1484
  %tobool38 = icmp eq i32 %call37, 0, !dbg !1484
  br i1 %tobool38, label %return, label %lor.lhs.false36.for.inc_crit_edge, !dbg !1484

lor.lhs.false36.for.inc_crit_edge:                ; preds = %lor.lhs.false36
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !dbg !1481, !tbaa !979
  br label %for.inc, !dbg !1484

for.inc:                                          ; preds = %lor.lhs.false36.for.inc_crit_edge, %for.body, %for.body
  %8 = phi %struct.rtvec_def* [ %.pre, %lor.lhs.false36.for.inc_crit_edge ], [ %5, %for.body ], [ %5, %for.body ], !dbg !1481
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1481
  %num_elem = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0, !dbg !1481
  %9 = load i32* %num_elem, align 4, !dbg !1481, !tbaa !992
  %10 = trunc i64 %indvars.iv.next to i32, !dbg !1481
  %cmp20 = icmp slt i32 %10, %9, !dbg !1481
  br i1 %cmp20, label %for.body, label %return, !dbg !1481

return:                                           ; preds = %for.cond.preheader, %lor.lhs.false36, %for.body, %for.inc, %if.end13, %land.lhs.true, %if.end4, %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end4 ], [ 1, %land.lhs.true ], [ 0, %if.end13 ], [ 1, %for.cond.preheader ], [ 0, %lor.lhs.false36 ], [ 0, %for.body ], [ 1, %for.inc ]
  ret i32 %retval.0, !dbg !1485
}
