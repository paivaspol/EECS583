define i32 @find_regno_fusage(%struct.rtx_def* nocapture %insn, i32 %code, i32 %regno) #0 {
entry:
  %cmp = icmp ugt i32 %regno, 52
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 34
  br i1 %cmp1, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 7
  %link.0.in116 = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %link.0117 = load %struct.rtx_def** %link.0.in116, align 8
  %tobool118 = icmp eq %struct.rtx_def* %link.0117, null
  br i1 %tobool118, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %1 = load i32* @target_flags, align 4, !tbaa !3
  %and66 = lshr i32 %1, 23
  %2 = and i32 %and66, 4
  %3 = add i32 %2, 4
  %and = lshr i32 %1, 25
  %4 = and i32 %and, 1
  %5 = xor i32 %4, 3
  %and57 = lshr i32 %1, 24
  %6 = and i32 %and57, 2
  %7 = xor i32 %6, 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %link.0119 = phi %struct.rtx_def* [ %link.0117, %for.body.lr.ph ], [ %link.0, %for.inc ]
  %fld2 = getelementptr inbounds %struct.rtx_def* %link.0119, i64 0, i32 1
  %rtx4 = bitcast [1 x %union.rtunion_def]* %fld2 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx4, align 8, !tbaa !0
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load5 = load i32* %9, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, %code
  br i1 %cmp7, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx10, align 8, !tbaa !0
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load11 = load i32* %11, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 61
  br i1 %cmp13, label %land.lhs.true14, label %for.inc

land.lhs.true14:                                  ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %12 = load i32* %rtuint, align 4, !tbaa !3
  %cmp17 = icmp ugt i32 %12, %regno
  br i1 %cmp17, label %for.inc, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %.off = add i32 %12, -8
  %13 = icmp ult i32 %.off, 8
  %.off106 = add i32 %12, -21
  %14 = icmp ult i32 %.off106, 8
  %or.cond = or i1 %13, %14
  %.off107 = add i32 %12, -45
  %15 = icmp ult i32 %.off107, 8
  %or.cond113 = or i1 %or.cond, %15
  %.off108 = add i32 %12, -29
  %16 = icmp ult i32 %.off108, 8
  %or.cond115 = or i1 %or.cond113, %16
  %bf.lshr = lshr i32 %bf.load11, 16
  %bf.clear35 = and i32 %bf.lshr, 255
  br i1 %or.cond115, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true18
  %idxprom110 = zext i32 %bf.clear35 to i64
  %arrayidx36 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom110
  %17 = load i32* %arrayidx36, align 4, !tbaa !5
  %cmp37 = icmp eq i32 %17, 5
  br i1 %cmp37, label %cond.end75, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp43 = icmp eq i32 %17, 6
  %phitmp = select i1 %cmp43, i32 2, i32 1
  br label %cond.end75

cond.false:                                       ; preds = %land.lhs.true18
  switch i32 %bf.clear35, label %cond.false60 [
    i32 18, label %cond.end75
    i32 24, label %cond.true56
  ]

cond.true56:                                      ; preds = %cond.false
  br label %cond.end75

cond.false60:                                     ; preds = %cond.false
  %idxprom64109 = zext i32 %bf.clear35 to i64
  %arrayidx65 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom64109
  %18 = load i8* %arrayidx65, align 1, !tbaa !1
  %conv = zext i8 %18 to i32
  %add = add i32 %conv, -1
  %sub = add i32 %add, %3
  %div = sdiv i32 %sub, %3
  br label %cond.end75

cond.end75:                                       ; preds = %cond.false, %cond.true, %lor.rhs, %cond.false60, %cond.true56
  %cond76 = phi i32 [ %7, %cond.true56 ], [ %div, %cond.false60 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ], [ %5, %cond.false ]
  %add77 = add i32 %cond76, %12
  %cmp78 = icmp ugt i32 %add77, %regno
  br i1 %cmp78, label %return, label %for.inc

for.inc:                                          ; preds = %land.lhs.true14, %for.body, %land.lhs.true, %cond.end75
  %arrayidx83 = getelementptr inbounds %struct.rtx_def* %link.0119, i64 0, i32 1, i64 1
  %link.0.in = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %link.0.in, align 8
  %tobool = icmp eq %struct.rtx_def* %link.0, null
  br i1 %tobool, label %return, label %for.body

return:                                           ; preds = %if.end, %cond.end75, %for.inc, %entry, %lor.lhs.false
  %retval.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.end ], [ 1, %cond.end75 ], [ 0, %for.inc ]
  ret i32 %retval.0
}
