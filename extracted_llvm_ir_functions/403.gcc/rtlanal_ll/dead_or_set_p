define i32 @dead_or_set_p(%struct.rtx_def* nocapture %insn, %struct.rtx_def* nocapture %x) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !650), !dbg !1582
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !651), !dbg !1583
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !1584
  %bf.load = load i32* %0, align 8, !dbg !1584
  %bf.clear = and i32 %bf.load, 65535, !dbg !1584
  switch i32 %bf.clear, label %if.then4 [
    i32 69, label %return
    i32 61, label %if.end5
  ], !dbg !1584

if.then4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), i32 1678, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.dead_or_set_p, i64 0, i64 0)) #8, !dbg !1585
  unreachable, !dbg !1585

if.end5:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, !dbg !1586
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !1586
  %1 = load i32* %rtuint, align 4, !dbg !1586, !tbaa !992
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !652), !dbg !1586
  %cmp6 = icmp ugt i32 %1, 52, !dbg !1587
  br i1 %cmp6, label %cond.end66, label %cond.false, !dbg !1587

cond.false:                                       ; preds = %if.end5
  %.off = add i32 %1, -8, !dbg !1587
  %2 = icmp ult i32 %.off, 8, !dbg !1587
  %.off95 = add i32 %1, -21, !dbg !1587
  %3 = icmp ult i32 %.off95, 8, !dbg !1587
  %or.cond = or i1 %2, %3, !dbg !1587
  %.off96 = add i32 %1, -45, !dbg !1587
  %4 = icmp ult i32 %.off96, 8, !dbg !1587
  %or.cond102 = or i1 %or.cond, %4, !dbg !1587
  %.off97 = add i32 %1, -29, !dbg !1587
  %5 = icmp ult i32 %.off97, 8, !dbg !1587
  %or.cond104 = or i1 %or.cond102, %5, !dbg !1587
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !1587
  %bf.clear22 = and i32 %bf.lshr, 255, !dbg !1587
  br i1 %or.cond104, label %cond.true20, label %cond.false31, !dbg !1587

cond.true20:                                      ; preds = %cond.false
  %idxprom99 = zext i32 %bf.clear22 to i64, !dbg !1587
  %arrayidx23 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom99, !dbg !1587
  %6 = load i32* %arrayidx23, align 4, !dbg !1587, !tbaa !1239
  %cmp24 = icmp eq i32 %6, 5, !dbg !1587
  br i1 %cmp24, label %cond.end62, label %lor.rhs, !dbg !1587

lor.rhs:                                          ; preds = %cond.true20
  %cmp30 = icmp eq i32 %6, 6, !dbg !1587
  %phitmp = select i1 %cmp30, i32 2, i32 1, !dbg !1587
  br label %cond.end62, !dbg !1587

cond.false31:                                     ; preds = %cond.false
  switch i32 %bf.clear22, label %cond.false47 [
    i32 18, label %cond.true36
    i32 24, label %cond.true43
  ], !dbg !1587

cond.true36:                                      ; preds = %cond.false31
  %7 = load i32* @target_flags, align 4, !dbg !1587, !tbaa !992
  %and = lshr i32 %7, 25, !dbg !1587
  %8 = and i32 %and, 1, !dbg !1587
  %9 = xor i32 %8, 3, !dbg !1587
  br label %cond.end62, !dbg !1587

cond.true43:                                      ; preds = %cond.false31
  %10 = load i32* @target_flags, align 4, !dbg !1587, !tbaa !992
  %and44 = lshr i32 %10, 24, !dbg !1587
  %11 = and i32 %and44, 2, !dbg !1587
  %12 = xor i32 %11, 6, !dbg !1587
  br label %cond.end62, !dbg !1587

cond.false47:                                     ; preds = %cond.false31
  %idxprom5198 = zext i32 %bf.clear22 to i64, !dbg !1587
  %arrayidx52 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom5198, !dbg !1587
  %13 = load i8* %arrayidx52, align 1, !dbg !1587, !tbaa !980
  %conv = zext i8 %13 to i32, !dbg !1587
  %14 = load i32* @target_flags, align 4, !dbg !1587, !tbaa !992
  %and53 = lshr i32 %14, 23, !dbg !1587
  %15 = and i32 %and53, 4, !dbg !1587
  %16 = add i32 %15, 4, !dbg !1587
  %add = add i32 %conv, -1, !dbg !1587
  %sub = add i32 %add, %16, !dbg !1587
  %div = sdiv i32 %sub, %16, !dbg !1587
  br label %cond.end62, !dbg !1587

cond.end62:                                       ; preds = %cond.true20, %lor.rhs, %cond.true36, %cond.false47, %cond.true43
  %cond63 = phi i32 [ %9, %cond.true36 ], [ %12, %cond.true43 ], [ %div, %cond.false47 ], [ 2, %cond.true20 ], [ %phitmp, %lor.rhs ], !dbg !1587
  %add64 = add i32 %1, -1, !dbg !1587
  %sub65 = add i32 %add64, %cond63, !dbg !1587
  br label %cond.end66, !dbg !1587

cond.end66:                                       ; preds = %if.end5, %cond.end62
  %cond67 = phi i32 [ %sub65, %cond.end62 ], [ %1, %if.end5 ], !dbg !1587
  tail call void @llvm.dbg.value(metadata !{i32 %cond67}, i64 0, metadata !653), !dbg !1587
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !654), !dbg !1588
  %cmp68105 = icmp ugt i32 %1, %cond67, !dbg !1588
  br i1 %cmp68105, label %return, label %for.body, !dbg !1588

for.cond:                                         ; preds = %for.body
  %cmp68 = icmp ugt i32 %inc, %cond67, !dbg !1588
  br i1 %cmp68, label %return, label %for.body, !dbg !1588

for.body:                                         ; preds = %cond.end66, %for.cond
  %i.0106 = phi i32 [ %inc, %for.cond ], [ %1, %cond.end66 ]
  %call = tail call i32 @dead_or_set_regno_p(%struct.rtx_def* %insn, i32 %i.0106) #5, !dbg !1590
  %tobool70 = icmp eq i32 %call, 0, !dbg !1590
  %inc = add i32 %i.0106, 1, !dbg !1588
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !654), !dbg !1588
  br i1 %tobool70, label %return, label %for.cond, !dbg !1590

return:                                           ; preds = %cond.end66, %for.body, %for.cond, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %cond.end66 ], [ 0, %for.body ], [ 1, %for.cond ]
  ret i32 %retval.0, !dbg !1591
}
