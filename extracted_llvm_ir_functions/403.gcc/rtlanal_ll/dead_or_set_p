define i32 @dead_or_set_p(%struct.rtx_def* nocapture %insn, %struct.rtx_def* nocapture %x) #1 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then4 [
    i32 69, label %return
    i32 61, label %if.end5
  ]

if.then4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), i32 1678, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.dead_or_set_p, i64 0, i64 0)) #6
  unreachable

if.end5:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !3
  %cmp6 = icmp ugt i32 %1, 52
  br i1 %cmp6, label %cond.end66, label %cond.false

cond.false:                                       ; preds = %if.end5
  %.off = add i32 %1, -8
  %2 = icmp ult i32 %.off, 8
  %.off95 = add i32 %1, -21
  %3 = icmp ult i32 %.off95, 8
  %or.cond = or i1 %2, %3
  %.off96 = add i32 %1, -45
  %4 = icmp ult i32 %.off96, 8
  %or.cond102 = or i1 %or.cond, %4
  %.off97 = add i32 %1, -29
  %5 = icmp ult i32 %.off97, 8
  %or.cond104 = or i1 %or.cond102, %5
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear22 = and i32 %bf.lshr, 255
  br i1 %or.cond104, label %cond.true20, label %cond.false31

cond.true20:                                      ; preds = %cond.false
  %idxprom99 = zext i32 %bf.clear22 to i64
  %arrayidx23 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom99
  %6 = load i32* %arrayidx23, align 4, !tbaa !5
  %cmp24 = icmp eq i32 %6, 5
  br i1 %cmp24, label %cond.end62, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true20
  %cmp30 = icmp eq i32 %6, 6
  %phitmp = select i1 %cmp30, i32 2, i32 1
  br label %cond.end62

cond.false31:                                     ; preds = %cond.false
  switch i32 %bf.clear22, label %cond.false47 [
    i32 18, label %cond.true36
    i32 24, label %cond.true43
  ]

cond.true36:                                      ; preds = %cond.false31
  %7 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %7, 25
  %8 = and i32 %and, 1
  %9 = xor i32 %8, 3
  br label %cond.end62

cond.true43:                                      ; preds = %cond.false31
  %10 = load i32* @target_flags, align 4, !tbaa !3
  %and44 = lshr i32 %10, 24
  %11 = and i32 %and44, 2
  %12 = xor i32 %11, 6
  br label %cond.end62

cond.false47:                                     ; preds = %cond.false31
  %idxprom5198 = zext i32 %bf.clear22 to i64
  %arrayidx52 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom5198
  %13 = load i8* %arrayidx52, align 1, !tbaa !1
  %conv = zext i8 %13 to i32
  %14 = load i32* @target_flags, align 4, !tbaa !3
  %and53 = lshr i32 %14, 23
  %15 = and i32 %and53, 4
  %16 = add i32 %15, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %16
  %div = sdiv i32 %sub, %16
  br label %cond.end62

cond.end62:                                       ; preds = %cond.true20, %lor.rhs, %cond.true36, %cond.false47, %cond.true43
  %cond63 = phi i32 [ %9, %cond.true36 ], [ %12, %cond.true43 ], [ %div, %cond.false47 ], [ 2, %cond.true20 ], [ %phitmp, %lor.rhs ]
  %add64 = add i32 %1, -1
  %sub65 = add i32 %add64, %cond63
  br label %cond.end66

cond.end66:                                       ; preds = %if.end5, %cond.end62
  %cond67 = phi i32 [ %sub65, %cond.end62 ], [ %1, %if.end5 ]
  %cmp68105 = icmp ugt i32 %1, %cond67
  br i1 %cmp68105, label %return, label %for.body

for.cond:                                         ; preds = %for.body
  %cmp68 = icmp ugt i32 %inc, %cond67
  br i1 %cmp68, label %return, label %for.body

for.body:                                         ; preds = %cond.end66, %for.cond
  %i.0106 = phi i32 [ %inc, %for.cond ], [ %1, %cond.end66 ]
  %call = tail call i32 @dead_or_set_regno_p(%struct.rtx_def* %insn, i32 %i.0106) #4
  %tobool70 = icmp eq i32 %call, 0
  %inc = add i32 %i.0106, 1
  br i1 %tobool70, label %return, label %for.cond

return:                                           ; preds = %cond.end66, %for.body, %for.cond, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %cond.end66 ], [ 0, %for.body ], [ 1, %for.cond ]
  ret i32 %retval.0
}
