define %struct.rtx_def* @first_insn_after_basic_block_note(%struct.basic_block_def* nocapture %block) #0 {
entry:
  %head = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 0
  %0 = load %struct.rtx_def** %head, align 8, !tbaa !3
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 36
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %.phi.trans.insert = bitcast %struct.rtx_def* %2 to i32*
  %bf.load4.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %bf.load4 = phi i32 [ %bf.load4.pre, %if.then2 ], [ %bf.load, %if.end ]
  %insn.0 = phi %struct.rtx_def* [ %2, %if.then2 ], [ %0, %if.end ]
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 37
  br i1 %cmp6, label %land.lhs.true, label %if.then10

land.lhs.true:                                    ; preds = %if.end3
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %3 = load i32* %rtint, align 4, !tbaa !0
  %cmp9 = icmp eq i32 %3, -80
  br i1 %cmp9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %land.lhs.true, %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str3, i64 0, i64 0), i32 400, i8* getelementptr inbounds ([34 x i8]* @__FUNCTION__.first_insn_after_basic_block_note, i64 0, i64 0)) #7
  unreachable

if.end11:                                         ; preds = %land.lhs.true
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 2
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx14, align 8, !tbaa !3
  br label %return

return:                                           ; preds = %entry, %if.end11
  %retval.0 = phi %struct.rtx_def* [ %4, %if.end11 ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}
