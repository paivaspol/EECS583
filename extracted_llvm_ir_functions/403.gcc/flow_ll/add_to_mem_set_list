define internal fastcc void @add_to_mem_set_list(%struct.propagate_block_info* nocapture %pbi, %struct.rtx_def* %mem) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %mem to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 3342336
  br i1 %cmp, label %if.end37, label %if.end

if.end:                                           ; preds = %entry
  %mem_set_list = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 4
  %i.052 = load %struct.rtx_def** %mem_set_list, align 8
  %tobool53 = icmp eq %struct.rtx_def* %i.052, null
  br i1 %tobool53, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %mem, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.054 = phi %struct.rtx_def* [ %i.052, %for.body.lr.ph ], [ %i.0, %for.inc ]
  %fld = getelementptr inbounds %struct.rtx_def* %i.054, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %2 = load %struct.rtx_def** %rtx3, align 8, !tbaa !3
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx6, align 8, !tbaa !3
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %3) #6
  %tobool7 = icmp eq i32 %call, 0
  br i1 %tobool7, label %for.inc, label %if.then8

if.then8:                                         ; preds = %for.body
  %bf.load9 = load i32* %0, align 8
  %bf.lshr10 = lshr i32 %bf.load9, 16
  %bf.clear11 = and i32 %bf.lshr10, 255
  %idxprom50 = zext i32 %bf.clear11 to i64
  %arrayidx12 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom50
  %4 = load i8* %arrayidx12, align 1, !tbaa !1
  %5 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load13 = load i32* %5, align 8
  %bf.lshr14 = lshr i32 %bf.load13, 16
  %bf.clear15 = and i32 %bf.lshr14, 255
  %idxprom1651 = zext i32 %bf.clear15 to i64
  %arrayidx17 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1651
  %6 = load i8* %arrayidx17, align 1, !tbaa !1
  %cmp19 = icmp ugt i8 %4, %6
  br i1 %cmp19, label %if.then21, label %if.end37

if.then21:                                        ; preds = %if.then8
  %7 = getelementptr inbounds [1 x %union.rtunion_def]* %fld, i64 0, i64 0, i32 0
  %mem.c = ptrtoint %struct.rtx_def* %mem to i64
  store i64 %mem.c, i64* %7, align 8, !tbaa !3
  br label %if.end37

for.inc:                                          ; preds = %for.body
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %i.054, i64 0, i32 1, i64 1
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %i.0 = load %struct.rtx_def** %rtx29, align 8
  %tobool = icmp eq %struct.rtx_def* %i.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end
  %mem_set_list_len = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 7
  %8 = load i32* %mem_set_list_len, align 4, !tbaa !0
  %cmp30 = icmp slt i32 %8, 100
  br i1 %cmp30, label %if.then32, label %if.end37

if.then32:                                        ; preds = %for.end
  %9 = load %struct.rtx_def** %mem_set_list, align 8, !tbaa !3
  %call34 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %mem, %struct.rtx_def* %9) #6
  store %struct.rtx_def* %call34, %struct.rtx_def** %mem_set_list, align 8, !tbaa !3
  %10 = load i32* %mem_set_list_len, align 4, !tbaa !0
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %mem_set_list_len, align 4, !tbaa !0
  br label %if.end37

if.end37:                                         ; preds = %if.then8, %if.then21, %entry, %if.then32, %for.end
  ret void
}
