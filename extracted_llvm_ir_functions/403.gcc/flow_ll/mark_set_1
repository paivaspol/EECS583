define internal fastcc void @mark_set_1(%struct.propagate_block_info* nocapture %pbi, i32 %code, %struct.rtx_def* %reg, %struct.rtx_def* %cond, %struct.rtx_def* %insn, i32 %flags) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %reg to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 39, label %sw.bb
    i32 133, label %do.body
    i32 132, label %do.body
    i32 64, label %do.body
    i32 61, label %sw.bb41
    i32 63, label %sw.bb125
  ]

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %1 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  %num_elem = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 0
  %2 = load i32* %num_elem, align 4, !tbaa !0
  %cmp846 = icmp sgt i32 %2, 0
  br i1 %cmp846, label %for.body.lr.ph, label %if.end614

for.body.lr.ph:                                   ; preds = %sw.bb
  %3 = sext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %4 = phi %struct.rtvec_def* [ %1, %for.body.lr.ph ], [ %.pre860, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv856 = phi i64 [ %3, %for.body.lr.ph ], [ %indvars.iv.next857, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv.next857 = add i64 %indvars.iv856, -1
  %arrayidx4 = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 1, i64 %indvars.iv.next857
  %5 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !3
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %cmp7 = icmp eq %struct.rtx_def* %6, null
  br i1 %cmp7, label %for.cond.backedge, label %if.then

for.cond.backedge:                                ; preds = %for.body, %if.then
  %7 = trunc i64 %indvars.iv.next857 to i32
  %cmp = icmp sgt i32 %7, 0
  br i1 %cmp, label %for.cond.backedge.for.body_crit_edge, label %if.end614

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %.pre860 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  br label %for.body

if.then:                                          ; preds = %for.body
  tail call fastcc void @mark_set_1(%struct.propagate_block_info* %pbi, i32 %code, %struct.rtx_def* %6, %struct.rtx_def* %cond, %struct.rtx_def* %insn, i32 %flags) #8
  br label %for.cond.backedge

do.body:                                          ; preds = %do.body, %do.body, %do.body, %do.body, %entry, %entry, %entry
  %reg.addr.0 = phi %struct.rtx_def* [ %reg, %entry ], [ %reg, %entry ], [ %reg, %entry ], [ %8, %do.body ], [ %8, %do.body ], [ %8, %do.body ], [ %8, %do.body ]
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx20, align 8, !tbaa !3
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load21 = load i32* %9, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  switch i32 %bf.clear22, label %if.end38 [
    i32 63, label %do.body
    i32 133, label %do.body
    i32 132, label %do.body
    i32 64, label %do.body
    i32 66, label %sw.epilog
  ]

if.end38:                                         ; preds = %do.body
  %reg_live = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %10 = load %struct.bitmap_head_def** %reg_live, align 8, !tbaa !3
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx40 to i32*
  %11 = load i32* %rtuint, align 4, !tbaa !0
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11) #6
  %conv = sext i32 %call to i64
  br label %sw.bb41

sw.bb41:                                          ; preds = %entry, %if.end38
  %not_dead.0 = phi i64 [ 0, %entry ], [ %conv, %if.end38 ]
  %reg.addr.1 = phi %struct.rtx_def* [ %reg, %entry ], [ %8, %if.end38 ]
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %reg.addr.1, i64 0, i32 1, i64 0
  %rtuint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %12 = load i32* %rtuint44, align 4, !tbaa !0
  %cmp45 = icmp slt i32 %12, 53
  br i1 %cmp45, label %if.then47, label %sw.epilog

if.then47:                                        ; preds = %sw.bb41
  %.off = add i32 %12, -8
  %13 = icmp ult i32 %.off, 8
  %.off808 = add i32 %12, -21
  %14 = icmp ult i32 %.off808, 8
  %or.cond = or i1 %13, %14
  %.off809 = add i32 %12, -45
  %15 = icmp ult i32 %.off809, 8
  %or.cond816 = or i1 %or.cond, %15
  %.off810 = add i32 %12, -29
  %16 = icmp ult i32 %.off810, 8
  %or.cond818 = or i1 %or.cond816, %16
  %17 = bitcast %struct.rtx_def* %reg.addr.1 to i32*
  %bf.load70 = load i32* %17, align 8
  %bf.lshr = lshr i32 %bf.load70, 16
  %bf.clear71 = and i32 %bf.lshr, 255
  br i1 %or.cond818, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then47
  %idxprom72812 = zext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom72812
  %18 = load i32* %arrayidx73, align 4, !tbaa !5
  %cmp74 = icmp eq i32 %18, 5
  br i1 %cmp74, label %cond.end120, label %lor.rhs76

lor.rhs76:                                        ; preds = %cond.true
  %cmp82 = icmp eq i32 %18, 6
  %phitmp813 = select i1 %cmp82, i32 2, i32 1
  br label %cond.end120

cond.false:                                       ; preds = %if.then47
  switch i32 %bf.clear71, label %cond.false103 [
    i32 18, label %cond.true91
    i32 24, label %cond.true99
  ]

cond.true91:                                      ; preds = %cond.false
  %19 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %19, 25
  %20 = and i32 %and, 1
  %21 = xor i32 %20, 3
  br label %cond.end120

cond.true99:                                      ; preds = %cond.false
  %22 = load i32* @target_flags, align 4, !tbaa !0
  %and100 = lshr i32 %22, 24
  %23 = and i32 %and100, 2
  %24 = xor i32 %23, 6
  br label %cond.end120

cond.false103:                                    ; preds = %cond.false
  %idxprom107811 = zext i32 %bf.clear71 to i64
  %arrayidx108 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom107811
  %25 = load i8* %arrayidx108, align 1, !tbaa !1
  %conv109 = zext i8 %25 to i32
  %26 = load i32* @target_flags, align 4, !tbaa !0
  %and110 = lshr i32 %26, 23
  %27 = and i32 %and110, 4
  %28 = add i32 %27, 4
  %add = add i32 %conv109, -1
  %sub113 = add i32 %add, %28
  %div = sdiv i32 %sub113, %28
  br label %cond.end120

cond.end120:                                      ; preds = %cond.true, %lor.rhs76, %cond.true91, %cond.false103, %cond.true99
  %cond121 = phi i32 [ %21, %cond.true91 ], [ %24, %cond.true99 ], [ %div, %cond.false103 ], [ 2, %cond.true ], [ %phitmp813, %lor.rhs76 ]
  %sub122 = add i32 %12, -1
  %add123 = add i32 %sub122, %cond121
  br label %sw.epilog

sw.bb125:                                         ; preds = %entry
  %fld126 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1
  %rtx128 = bitcast [1 x %union.rtunion_def]* %fld126 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx128, align 8, !tbaa !3
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load129 = load i32* %30, align 8
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 61
  br i1 %cmp131, label %if.then133, label %sw.epilog

if.then133:                                       ; preds = %sw.bb125
  %bf.lshr135 = lshr i32 %bf.load, 16
  %bf.clear136 = and i32 %bf.lshr135, 255
  %bf.lshr141 = lshr i32 %bf.load129, 16
  %bf.clear142 = and i32 %bf.lshr141, 255
  %arrayidx147 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0
  %rtuint148 = bitcast %union.rtunion_def* %arrayidx147 to i32*
  %31 = load i32* %rtuint148, align 4, !tbaa !0
  %cmp149 = icmp slt i32 %31, 53
  br i1 %cmp149, label %if.then151, label %if.else

if.then151:                                       ; preds = %if.then133
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 1
  %rtuint154 = bitcast %union.rtunion_def* %arrayidx153 to i32*
  %32 = load i32* %rtuint154, align 4, !tbaa !0
  %call155 = tail call i32 @subreg_regno_offset(i32 %31, i32 %bf.clear142, i32 %32, i32 %bf.clear136) #6
  %add156 = add i32 %call155, %31
  %add156.off = add i32 %add156, -8
  %33 = icmp ult i32 %add156.off, 8
  %add156.off803 = add i32 %add156, -21
  %34 = icmp ult i32 %add156.off803, 8
  %or.cond820 = or i1 %33, %34
  %add156.off804 = add i32 %add156, -45
  %35 = icmp ult i32 %add156.off804, 8
  %or.cond822 = or i1 %or.cond820, %35
  %add156.off805 = add i32 %add156, -29
  %36 = icmp ult i32 %add156.off805, 8
  %or.cond824 = or i1 %or.cond822, %36
  br i1 %or.cond824, label %cond.true180, label %cond.false192

cond.true180:                                     ; preds = %if.then151
  %idxprom181807 = zext i32 %bf.clear136 to i64
  %arrayidx182 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom181807
  %37 = load i32* %arrayidx182, align 4, !tbaa !5
  %cmp183 = icmp eq i32 %37, 5
  br i1 %cmp183, label %cond.end223, label %lor.rhs185

lor.rhs185:                                       ; preds = %cond.true180
  %cmp188 = icmp eq i32 %37, 6
  %phitmp = select i1 %cmp188, i32 2, i32 1
  br label %cond.end223

cond.false192:                                    ; preds = %if.then151
  switch i32 %bf.clear136, label %cond.false206 [
    i32 18, label %cond.true195
    i32 24, label %cond.true202
  ]

cond.true195:                                     ; preds = %cond.false192
  %38 = load i32* @target_flags, align 4, !tbaa !0
  %and196 = lshr i32 %38, 25
  %39 = and i32 %and196, 1
  %40 = xor i32 %39, 3
  br label %cond.end223

cond.true202:                                     ; preds = %cond.false192
  %41 = load i32* @target_flags, align 4, !tbaa !0
  %and203 = lshr i32 %41, 24
  %42 = and i32 %and203, 2
  %43 = xor i32 %42, 6
  br label %cond.end223

cond.false206:                                    ; preds = %cond.false192
  %idxprom207806 = zext i32 %bf.clear136 to i64
  %arrayidx208 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom207806
  %44 = load i8* %arrayidx208, align 1, !tbaa !1
  %conv209 = zext i8 %44 to i32
  %45 = load i32* @target_flags, align 4, !tbaa !0
  %and210 = lshr i32 %45, 23
  %46 = and i32 %and210, 4
  %47 = add i32 %46, 4
  %add213 = add i32 %conv209, -1
  %sub214 = add i32 %add213, %47
  %div218 = sdiv i32 %sub214, %47
  br label %cond.end223

cond.end223:                                      ; preds = %cond.true180, %lor.rhs185, %cond.true195, %cond.false206, %cond.true202
  %cond224 = phi i32 [ %40, %cond.true195 ], [ %43, %cond.true202 ], [ %div218, %cond.false206 ], [ 2, %cond.true180 ], [ %phitmp, %lor.rhs185 ]
  %add225 = add i32 %add156, -1
  %sub226 = add i32 %add225, %cond224
  %call227 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear136, i32 %add156) #6
  br label %sw.epilog

if.else:                                          ; preds = %if.then133
  %idxprom228801 = zext i32 %bf.clear136 to i64
  %arrayidx229 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom228801
  %48 = load i8* %arrayidx229, align 1, !tbaa !1
  %conv230 = zext i8 %48 to i32
  %49 = load i32* @target_flags, align 4, !tbaa !0
  %and231 = lshr i32 %49, 23
  %50 = and i32 %and231, 4
  %51 = add i32 %50, 4
  %add234 = add i32 %conv230, -1
  %sub235 = add i32 %add234, %51
  %div239 = sdiv i32 %sub235, %51
  %idxprom240802 = zext i32 %bf.clear142 to i64
  %arrayidx241 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom240802
  %52 = load i8* %arrayidx241, align 1, !tbaa !1
  %conv242 = zext i8 %52 to i32
  %add246849 = or i32 %50, 3
  %sub247 = add i32 %add246849, %conv242
  %div251 = sdiv i32 %sub247, %51
  %cmp252 = icmp slt i32 %div239, %div251
  br i1 %cmp252, label %if.then254, label %sw.epilog

if.then254:                                       ; preds = %if.else
  %reg_live255 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %53 = load %struct.bitmap_head_def** %reg_live255, align 8, !tbaa !3
  %call256 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %53, i32 %31) #6
  %conv257 = sext i32 %call256 to i64
  %.pre = load %struct.rtx_def** %rtx128, align 8, !tbaa !3
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.body, %if.else, %if.then254, %sw.bb125, %entry, %cond.end223, %sw.bb41, %cond.end120
  %not_dead.2 = phi i64 [ 0, %entry ], [ 0, %cond.end223 ], [ %not_dead.0, %cond.end120 ], [ %not_dead.0, %sw.bb41 ], [ 0, %sw.bb125 ], [ %conv257, %if.then254 ], [ 0, %if.else ], [ 0, %do.body ]
  %regno_last.0 = phi i32 [ -1, %entry ], [ %sub226, %cond.end223 ], [ %add123, %cond.end120 ], [ %12, %sw.bb41 ], [ -1, %sw.bb125 ], [ %31, %if.then254 ], [ %31, %if.else ], [ -1, %do.body ]
  %regno_first.0 = phi i32 [ -1, %entry ], [ %add156, %cond.end223 ], [ %12, %cond.end120 ], [ %12, %sw.bb41 ], [ -1, %sw.bb125 ], [ %31, %if.then254 ], [ %31, %if.else ], [ -1, %do.body ]
  %reg.addr.2 = phi %struct.rtx_def* [ %reg, %entry ], [ %call227, %cond.end223 ], [ %reg.addr.1, %cond.end120 ], [ %reg.addr.1, %sw.bb41 ], [ %29, %sw.bb125 ], [ %.pre, %if.then254 ], [ %29, %if.else ], [ %8, %do.body ]
  %54 = load i32* @optimize, align 4, !tbaa !0
  %tobool268 = icmp eq i32 %54, 0
  br i1 %tobool268, label %if.end302, label %land.lhs.true269

land.lhs.true269:                                 ; preds = %sw.epilog
  %and270 = and i32 %flags, 16
  %tobool271 = icmp eq i32 %and270, 0
  br i1 %tobool271, label %if.end302, label %if.then272

if.then272:                                       ; preds = %land.lhs.true269
  %55 = bitcast %struct.rtx_def* %reg.addr.2 to i32*
  %bf.load273 = load i32* %55, align 8
  %bf.clear274 = and i32 %bf.load273, 65535
  %cmp275 = icmp eq i32 %bf.clear274, 61
  br i1 %cmp275, label %if.then277, label %if.end278

if.then277:                                       ; preds = %if.then272
  tail call fastcc void @invalidate_mems_from_set(%struct.propagate_block_info* %pbi, %struct.rtx_def* %reg.addr.2) #8
  br label %if.end278

if.end278:                                        ; preds = %if.then277, %if.then272
  %tobool279 = icmp eq %struct.rtx_def* %insn, null
  br i1 %tobool279, label %if.end286, label %land.lhs.true280

land.lhs.true280:                                 ; preds = %if.end278
  %bf.load281 = load i32* %55, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  %cmp283 = icmp eq i32 %bf.clear282, 66
  br i1 %cmp283, label %if.then285, label %if.end286

if.then285:                                       ; preds = %land.lhs.true280
  tail call fastcc void @invalidate_mems_from_autoinc(%struct.propagate_block_info* %pbi, %struct.rtx_def* %insn) #8
  br label %if.end286

if.end286:                                        ; preds = %if.end278, %if.then285, %land.lhs.true280
  %bf.load287 = load i32* %55, align 8
  %bf.clear288 = and i32 %bf.load287, 65535
  %cmp289 = icmp eq i32 %bf.clear288, 66
  br i1 %cmp289, label %land.lhs.true291, label %if.end302

land.lhs.true291:                                 ; preds = %if.end286
  %call292 = tail call i32 @side_effects_p(%struct.rtx_def* %reg.addr.2) #6
  %tobool293 = icmp eq i32 %call292, 0
  %tobool295 = icmp eq %struct.rtx_def* %cond, null
  %or.cond825 = and i1 %tobool293, %tobool295
  br i1 %or.cond825, label %land.lhs.true296, label %if.end302

land.lhs.true296:                                 ; preds = %land.lhs.true291
  %56 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !3
  %call297 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %56, %struct.rtx_def* %reg.addr.2) #6
  %tobool298 = icmp eq i32 %call297, 0
  br i1 %tobool298, label %if.then299, label %if.end302

if.then299:                                       ; preds = %land.lhs.true296
  %call300 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %reg.addr.2) #6
  tail call fastcc void @add_to_mem_set_list(%struct.propagate_block_info* %pbi, %struct.rtx_def* %call300) #8
  br label %if.end302

if.end302:                                        ; preds = %land.lhs.true296, %land.lhs.true291, %land.lhs.true269, %sw.epilog, %if.end286, %if.then299
  %57 = bitcast %struct.rtx_def* %reg.addr.2 to i32*
  %bf.load303 = load i32* %57, align 8
  %bf.clear304 = and i32 %bf.load303, 65535
  switch i32 %bf.clear304, label %if.end614 [
    i32 61, label %land.lhs.true307
    i32 62, label %if.then600
  ]

land.lhs.true307:                                 ; preds = %if.end302
  switch i32 %regno_first.0, label %for.cond330.preheader [
    i32 20, label %land.lhs.true310
    i32 6, label %land.lhs.true317
    i32 16, label %land.lhs.true324
  ]

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %58 = load i32* @reload_completed, align 4, !tbaa !0
  %tobool311 = icmp eq i32 %58, 0
  %59 = load i32* @frame_pointer_needed, align 4, !tbaa !0
  %tobool313 = icmp ne i32 %59, 0
  %or.cond624 = or i1 %tobool311, %tobool313
  br i1 %or.cond624, label %if.then587, label %for.cond330.preheader

land.lhs.true317:                                 ; preds = %land.lhs.true307
  %60 = load i32* @reload_completed, align 4, !tbaa !0
  %tobool318 = icmp eq i32 %60, 0
  %61 = load i32* @frame_pointer_needed, align 4, !tbaa !0
  %tobool320 = icmp ne i32 %61, 0
  %or.cond625 = or i1 %tobool318, %tobool320
  br i1 %or.cond625, label %if.then587, label %for.cond330.preheader

land.lhs.true324:                                 ; preds = %land.lhs.true307
  %62 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !1
  %tobool328 = icmp eq i8 %62, 0
  br i1 %tobool328, label %for.cond330.preheader, label %if.else582

for.cond330.preheader:                            ; preds = %land.lhs.true307, %land.lhs.true324, %land.lhs.true310, %land.lhs.true317
  %i.1.ph = phi i32 [ 6, %land.lhs.true317 ], [ 20, %land.lhs.true310 ], [ 16, %land.lhs.true324 ], [ %regno_first.0, %land.lhs.true307 ]
  %cmp331839 = icmp sgt i32 %i.1.ph, %regno_last.0
  br i1 %cmp331839, label %for.end357, label %for.body333.lr.ph

for.body333.lr.ph:                                ; preds = %for.cond330.preheader
  %reg_live334 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %local_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 5
  %cmp350 = icmp eq i32 %code, 49
  %new_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 2
  %cond_local_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 6
  %cmp338 = icmp eq %struct.rtx_def* %cond, null
  br label %for.body333

for.body333:                                      ; preds = %if.end353, %for.body333.lr.ph
  %some_was_dead.0842 = phi i32 [ 0, %for.body333.lr.ph ], [ %or355, %if.end353 ]
  %some_was_live.0841 = phi i32 [ 0, %for.body333.lr.ph ], [ %or, %if.end353 ]
  %i.1840 = phi i32 [ %i.1.ph, %for.body333.lr.ph ], [ %inc, %if.end353 ]
  %63 = load %struct.bitmap_head_def** %reg_live334, align 8, !tbaa !3
  %call335 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %63, i32 %i.1840) #6
  %64 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !3
  %tobool336 = icmp eq %struct.bitmap_head_def* %64, null
  br i1 %tobool336, label %if.end349, label %if.then337

if.then337:                                       ; preds = %for.body333
  %65 = load %struct.bitmap_head_def** %cond_local_set, align 8, !tbaa !3
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %65, i32 %i.1840) #6
  br i1 %cmp338, label %if.else346, label %land.lhs.true340

land.lhs.true340:                                 ; preds = %if.then337
  %66 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !3
  %call342 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %66, i32 %i.1840) #6
  %tobool343 = icmp eq i32 %call342, 0
  br i1 %tobool343, label %if.then344, label %if.else346

if.then344:                                       ; preds = %land.lhs.true340
  %67 = load %struct.bitmap_head_def** %cond_local_set, align 8, !tbaa !3
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %67, i32 %i.1840) #6
  br label %if.end349

if.else346:                                       ; preds = %land.lhs.true340, %if.then337
  %68 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !3
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %68, i32 %i.1840) #6
  br label %if.end349

if.end349:                                        ; preds = %for.body333, %if.then344, %if.else346
  br i1 %cmp350, label %if.end353, label %if.then352

if.then352:                                       ; preds = %if.end349
  %69 = load %struct.bitmap_head_def** %new_set, align 8, !tbaa !3
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %69, i32 %i.1840) #6
  br label %if.end353

if.end353:                                        ; preds = %if.end349, %if.then352
  %or = or i32 %call335, %some_was_live.0841
  %lnot = icmp eq i32 %call335, 0
  %lnot.ext = zext i1 %lnot to i32
  %or355 = or i32 %lnot.ext, %some_was_dead.0842
  %inc = add nsw i32 %i.1840, 1
  %cmp331 = icmp slt i32 %i.1840, %regno_last.0
  br i1 %cmp331, label %for.body333, label %for.end357

for.end357:                                       ; preds = %if.end353, %for.cond330.preheader
  %some_was_dead.0.lcssa = phi i32 [ 0, %for.cond330.preheader ], [ %or355, %if.end353 ]
  %some_was_live.0.lcssa = phi i32 [ 0, %for.cond330.preheader ], [ %or, %if.end353 ]
  %and358 = and i32 %flags, 71
  %tobool359 = icmp eq i32 %and358, 0
  br i1 %tobool359, label %if.end562, label %if.then360

if.then360:                                       ; preds = %for.end357
  %bb = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 0
  %70 = load %struct.basic_block_def** %bb, align 8, !tbaa !3
  %index = getelementptr inbounds %struct.basic_block_def* %70, i64 0, i32 11
  %71 = load i32* %index, align 4, !tbaa !0
  %and361 = and i32 %flags, 66
  %tobool362 = icmp eq i32 %and361, 0
  br i1 %tobool362, label %if.end376, label %if.then363

if.then363:                                       ; preds = %if.then360
  %idxprom364 = sext i32 %regno_first.0 to i64
  %reg_next_use = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 3
  %72 = load %struct.rtx_def*** %reg_next_use, align 8, !tbaa !3
  %arrayidx365 = getelementptr inbounds %struct.rtx_def** %72, i64 %idxprom364
  %73 = load %struct.rtx_def** %arrayidx365, align 8, !tbaa !3
  %cmp367836 = icmp sgt i32 %regno_first.0, %regno_last.0
  br i1 %cmp367836, label %if.end376, label %for.body369

for.body369:                                      ; preds = %if.then363, %for.body369.for.body369_crit_edge
  %74 = phi %struct.rtx_def** [ %.pre859, %for.body369.for.body369_crit_edge ], [ %72, %if.then363 ]
  %indvars.iv854 = phi i64 [ %indvars.iv.next855, %for.body369.for.body369_crit_edge ], [ %idxprom364, %if.then363 ]
  %arrayidx372 = getelementptr inbounds %struct.rtx_def** %74, i64 %indvars.iv854
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx372, align 8, !tbaa !3
  %75 = trunc i64 %indvars.iv854 to i32
  %cmp367 = icmp slt i32 %75, %regno_last.0
  br i1 %cmp367, label %for.body369.for.body369_crit_edge, label %if.end376

for.body369.for.body369_crit_edge:                ; preds = %for.body369
  %indvars.iv.next855 = add i64 %indvars.iv854, 1
  %.pre859 = load %struct.rtx_def*** %reg_next_use, align 8, !tbaa !3
  br label %for.body369

if.end376:                                        ; preds = %if.then363, %for.body369, %if.then360
  %y.0 = phi %struct.rtx_def* [ null, %if.then360 ], [ %73, %for.body369 ], [ %73, %if.then363 ]
  %and377 = and i32 %flags, 4
  %tobool378 = icmp ne i32 %and377, 0
  br i1 %tobool378, label %for.cond380.preheader, label %if.end468

for.cond380.preheader:                            ; preds = %if.end376
  %cmp381834 = icmp sgt i32 %regno_first.0, %regno_last.0
  br i1 %cmp381834, label %for.end425, label %for.body383.lr.ph

for.body383.lr.ph:                                ; preds = %for.cond380.preheader
  %76 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !3
  %data = getelementptr inbounds %struct.varray_head_tag* %76, i64 0, i32 4
  %reg385 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %77 = load i64* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 13), align 8, !tbaa !4
  %tobool397 = icmp ne i64 %77, 0
  %78 = sext i32 %regno_first.0 to i64
  br label %for.body383

for.body383:                                      ; preds = %cond.end411, %for.body383.lr.ph
  %indvars.iv852 = phi i64 [ %indvars.iv.next853, %cond.end411 ], [ %78, %for.body383.lr.ph ]
  %arrayidx386 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg385, i64 0, i64 %indvars.iv852
  %79 = load %struct.reg_info_def** %arrayidx386, align 8, !tbaa !3
  %sets = getelementptr inbounds %struct.reg_info_def* %79, i64 0, i32 3
  %80 = load i32* %sets, align 4, !tbaa !0
  %add387 = add nsw i32 %80, 1
  store i32 %add387, i32* %sets, align 4, !tbaa !0
  %refs = getelementptr inbounds %struct.reg_info_def* %79, i64 0, i32 4
  %81 = load i32* %refs, align 4, !tbaa !0
  %add392 = add nsw i32 %81, 1
  store i32 %add392, i32* %refs, align 4, !tbaa !0
  %82 = load i32* @optimize_size, align 4, !tbaa !0
  %tobool393 = icmp eq i32 %82, 0
  br i1 %tobool393, label %lor.lhs.false394, label %cond.end411

lor.lhs.false394:                                 ; preds = %for.body383
  %83 = load i32* @flag_branch_probabilities, align 4, !tbaa !0
  %tobool395 = icmp eq i32 %83, 0
  %or.cond626 = or i1 %tobool395, %tobool397
  br i1 %or.cond626, label %cond.false399, label %cond.end411

cond.false399:                                    ; preds = %lor.lhs.false394
  %84 = load %struct.basic_block_def** %bb, align 8, !tbaa !3
  %frequency = getelementptr inbounds %struct.basic_block_def* %84, i64 0, i32 14
  %85 = load i32* %frequency, align 4, !tbaa !0
  %mul = mul nsw i32 %85, 1000
  %mul.off = add i32 %mul, 9999
  %86 = icmp ugt i32 %mul.off, 19998
  br i1 %86, label %cond.true403, label %cond.end411

cond.true403:                                     ; preds = %cond.false399
  %div401 = sdiv i32 %mul, 10000
  br label %cond.end411

cond.end411:                                      ; preds = %for.body383, %cond.true403, %cond.false399, %lor.lhs.false394
  %cond412 = phi i32 [ 1000, %lor.lhs.false394 ], [ 1000, %for.body383 ], [ %div401, %cond.true403 ], [ 1, %cond.false399 ]
  %freq = getelementptr inbounds %struct.reg_info_def* %79, i64 0, i32 5
  %87 = load i32* %freq, align 4, !tbaa !0
  %add417 = add nsw i32 %87, %cond412
  store i32 %add417, i32* %freq, align 4, !tbaa !0
  %live_length = getelementptr inbounds %struct.reg_info_def* %79, i64 0, i32 7
  %88 = load i32* %live_length, align 4, !tbaa !0
  %add422 = add nsw i32 %88, 1
  store i32 %add422, i32* %live_length, align 4, !tbaa !0
  %indvars.iv.next853 = add i64 %indvars.iv852, 1
  %89 = trunc i64 %indvars.iv852 to i32
  %cmp381 = icmp slt i32 %89, %regno_last.0
  br i1 %cmp381, label %for.body383, label %for.end425

for.end425:                                       ; preds = %cond.end411, %for.cond380.preheader
  %cmp426 = icmp slt i32 %regno_first.0, 53
  br i1 %cmp426, label %for.cond429.preheader, label %if.else438

for.cond429.preheader:                            ; preds = %for.end425
  br i1 %cmp381834, label %if.end468, label %for.body432.lr.ph

for.body432.lr.ph:                                ; preds = %for.cond429.preheader
  %90 = sext i32 %regno_first.0 to i64
  %scevgep = getelementptr [53 x i8]* @regs_ever_live, i64 0, i64 %90
  %91 = sub i32 %regno_last.0, %regno_first.0
  %92 = zext i32 %91 to i64
  %93 = add i64 %92, 1
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 1, i64 %93, i32 1, i1 false)
  br label %if.end468

if.else438:                                       ; preds = %for.end425
  %idxprom439 = sext i32 %regno_first.0 to i64
  %94 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !3
  %data440 = getelementptr inbounds %struct.varray_head_tag* %94, i64 0, i32 4
  %reg441 = bitcast %union.varray_data_tag* %data440 to [1 x %struct.reg_info_def*]*
  %arrayidx442 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg441, i64 0, i64 %idxprom439
  %95 = load %struct.reg_info_def** %arrayidx442, align 8, !tbaa !3
  %basic_block = getelementptr inbounds %struct.reg_info_def* %95, i64 0, i32 9
  %96 = load i32* %basic_block, align 4, !tbaa !0
  %cmp443 = icmp eq i32 %96, -1
  br i1 %cmp443, label %if.then445, label %if.else451

if.then445:                                       ; preds = %if.else438
  store i32 %71, i32* %basic_block, align 4, !tbaa !0
  br label %if.end468

if.else451:                                       ; preds = %if.else438
  %cmp457 = icmp eq i32 %96, %71
  br i1 %cmp457, label %if.end468, label %if.then459

if.then459:                                       ; preds = %if.else451
  store i32 -2, i32* %basic_block, align 4, !tbaa !0
  br label %if.end468

if.end468:                                        ; preds = %for.cond429.preheader, %for.body432.lr.ph, %if.else451, %if.then459, %if.then445, %if.end376
  %tobool469 = icmp eq i32 %some_was_dead.0.lcssa, 0
  br i1 %tobool469, label %if.then470, label %if.else506

if.then470:                                       ; preds = %if.end468
  %and471 = and i32 %flags, 2
  %tobool472 = icmp eq i32 %and471, 0
  %tobool474 = icmp eq %struct.rtx_def* %y.0, null
  %or.cond826 = or i1 %tobool472, %tobool474
  br i1 %or.cond826, label %if.end562, label %land.lhs.true475

land.lhs.true475:                                 ; preds = %if.then470
  %fld476 = getelementptr inbounds %struct.rtx_def* %y.0, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld476 to i32*
  %97 = load i32* %rtint, align 4, !tbaa !0
  %idxprom478 = sext i32 %97 to i64
  %98 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !3
  %data479 = getelementptr inbounds %struct.varray_head_tag* %98, i64 0, i32 4
  %bb480 = bitcast %union.varray_data_tag* %data479 to [1 x %struct.basic_block_def*]*
  %arrayidx481 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb480, i64 0, i64 %idxprom478
  %99 = load %struct.basic_block_def** %arrayidx481, align 8, !tbaa !3
  %index482 = getelementptr inbounds %struct.basic_block_def* %99, i64 0, i32 11
  %100 = load i32* %index482, align 4, !tbaa !0
  %cmp484 = icmp eq i32 %100, %71
  br i1 %cmp484, label %land.lhs.true486, label %if.end562

land.lhs.true486:                                 ; preds = %land.lhs.true475
  %cmp487 = icmp sgt i32 %regno_first.0, 52
  br i1 %cmp487, label %if.then496, label %lor.lhs.false489

lor.lhs.false489:                                 ; preds = %land.lhs.true486
  %arrayidx491 = getelementptr inbounds %struct.rtx_def* %y.0, i64 0, i32 1, i64 3
  %rtx492 = bitcast %union.rtunion_def* %arrayidx491 to %struct.rtx_def**
  %101 = load %struct.rtx_def** %rtx492, align 8, !tbaa !3
  %call493 = tail call i32 @asm_noperands(%struct.rtx_def* %101) #6
  %cmp494 = icmp slt i32 %call493, 0
  br i1 %cmp494, label %if.then496, label %if.end562

if.then496:                                       ; preds = %lor.lhs.false489, %land.lhs.true486
  %arrayidx498 = getelementptr inbounds %struct.rtx_def* %y.0, i64 0, i32 1, i64 5
  %rtx499 = bitcast %union.rtunion_def* %arrayidx498 to %struct.rtx_def**
  %102 = load %struct.rtx_def** %rtx499, align 8, !tbaa !3
  %call500 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %102) #6
  %103 = getelementptr inbounds %union.rtunion_def* %arrayidx498, i64 0, i32 0
  %call500.c = ptrtoint %struct.rtx_def* %call500 to i64
  store i64 %call500.c, i64* %103, align 8, !tbaa !3
  br label %if.end562

if.else506:                                       ; preds = %if.end468
  %tobool507 = icmp eq i64 %not_dead.2, 0
  br i1 %tobool507, label %if.else509, label %if.end562

if.else509:                                       ; preds = %if.else506
  %tobool510 = icmp eq i32 %some_was_live.0.lcssa, 0
  br i1 %tobool510, label %if.then511, label %if.else532

if.then511:                                       ; preds = %if.else509
  br i1 %tobool378, label %if.then514, label %if.end520

if.then514:                                       ; preds = %if.then511
  %idxprom515 = sext i32 %regno_first.0 to i64
  %104 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !3
  %data516 = getelementptr inbounds %struct.varray_head_tag* %104, i64 0, i32 4
  %reg517 = bitcast %union.varray_data_tag* %data516 to [1 x %struct.reg_info_def*]*
  %arrayidx518 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg517, i64 0, i64 %idxprom515
  %105 = load %struct.reg_info_def** %arrayidx518, align 8, !tbaa !3
  %deaths = getelementptr inbounds %struct.reg_info_def* %105, i64 0, i32 6
  %106 = load i32* %deaths, align 4, !tbaa !0
  %add519 = add nsw i32 %106, 1
  store i32 %add519, i32* %deaths, align 4, !tbaa !0
  br label %if.end520

if.end520:                                        ; preds = %if.then514, %if.then511
  %and521 = and i32 %flags, 1
  %tobool522 = icmp eq i32 %and521, 0
  br i1 %tobool522, label %if.end562, label %if.then523

if.then523:                                       ; preds = %if.end520
  %arrayidx525 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %107 = load %struct.rtx_def** %rtx526, align 8, !tbaa !3
  %call527 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 10, %struct.rtx_def* %reg.addr.2, %struct.rtx_def* %107) #6
  %108 = getelementptr inbounds %union.rtunion_def* %arrayidx525, i64 0, i32 0
  %call527.c = ptrtoint %struct.rtx_def* %call527 to i64
  store i64 %call527.c, i64* %108, align 8, !tbaa !3
  br label %if.end562

if.else532:                                       ; preds = %if.else509
  %and533 = and i32 %flags, 1
  %tobool534 = icmp eq i32 %and533, 0
  %cmp537830 = icmp sgt i32 %regno_first.0, %regno_last.0
  %or.cond861 = or i1 %tobool534, %cmp537830
  br i1 %or.cond861, label %if.end562, label %for.body539.lr.ph

for.body539.lr.ph:                                ; preds = %if.else532
  %reg_live540 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %arrayidx548 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx549 = bitcast %union.rtunion_def* %arrayidx548 to %struct.rtx_def**
  %109 = getelementptr inbounds %union.rtunion_def* %arrayidx548, i64 0, i32 0
  %110 = sext i32 %regno_first.0 to i64
  br label %for.body539

for.body539:                                      ; preds = %for.inc555, %for.body539.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc555 ], [ %110, %for.body539.lr.ph ]
  %111 = load %struct.bitmap_head_def** %reg_live540, align 8, !tbaa !3
  %112 = trunc i64 %indvars.iv to i32
  %call541 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %111, i32 %112) #6
  %tobool542 = icmp eq i32 %call541, 0
  br i1 %tobool542, label %if.then543, label %for.inc555

if.then543:                                       ; preds = %for.body539
  %arrayidx545 = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %indvars.iv
  %113 = load i32* %arrayidx545, align 4, !tbaa !6
  %call546 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %113, i32 %112) #6
  %114 = load %struct.rtx_def** %rtx549, align 8, !tbaa !3
  %call550 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 10, %struct.rtx_def* %call546, %struct.rtx_def* %114) #6
  %call550.c = ptrtoint %struct.rtx_def* %call550 to i64
  store i64 %call550.c, i64* %109, align 8, !tbaa !3
  br label %for.inc555

for.inc555:                                       ; preds = %for.body539, %if.then543
  %indvars.iv.next = add i64 %indvars.iv, 1
  %cmp537 = icmp slt i32 %112, %regno_last.0
  br i1 %cmp537, label %for.body539, label %if.end562

if.end562:                                        ; preds = %for.inc555, %if.else532, %if.end520, %if.else506, %if.then470, %for.end357, %land.lhs.true475, %lor.lhs.false489, %if.then496, %if.then523
  %tobool563 = icmp eq i32 %some_was_live.0.lcssa, 0
  %cmp565 = icmp eq i32 %regno_first.0, 7
  %or.cond827 = or i1 %tobool563, %cmp565
  %cmp569828 = icmp sgt i32 %regno_first.0, %regno_last.0
  %or.cond862 = or i1 %or.cond827, %cmp569828
  br i1 %or.cond862, label %if.end614, label %for.body571.lr.ph

for.body571.lr.ph:                                ; preds = %if.end562
  %reg_live576 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  br label %for.body571

for.body571:                                      ; preds = %for.inc578, %for.body571.lr.ph
  %i.6829 = phi i32 [ %regno_first.0, %for.body571.lr.ph ], [ %inc579, %for.inc578 ]
  %sub572 = sub nsw i32 %i.6829, %regno_first.0
  %sh_prom = zext i32 %sub572 to i64
  %shl = shl i64 1, %sh_prom
  %and573 = and i64 %shl, %not_dead.2
  %tobool574 = icmp eq i64 %and573, 0
  br i1 %tobool574, label %if.then575, label %for.inc578

if.then575:                                       ; preds = %for.body571
  %115 = load %struct.bitmap_head_def** %reg_live576, align 8, !tbaa !3
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %115, i32 %i.6829) #6
  br label %for.inc578

for.inc578:                                       ; preds = %for.body571, %if.then575
  %inc579 = add nsw i32 %i.6829, 1
  %cmp569 = icmp slt i32 %i.6829, %regno_last.0
  br i1 %cmp569, label %for.body571, label %if.end614

if.else582:                                       ; preds = %land.lhs.true324
  switch i32 %bf.clear304, label %if.end614 [
    i32 61, label %if.then587
    i32 62, label %if.then600
  ]

if.then587:                                       ; preds = %land.lhs.true310, %land.lhs.true317, %if.else582
  %and588 = and i32 %flags, 66
  %tobool589 = icmp eq i32 %and588, 0
  br i1 %tobool589, label %if.end614, label %if.then590

if.then590:                                       ; preds = %if.then587
  %idxprom591 = sext i32 %regno_first.0 to i64
  %reg_next_use592 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 3
  %116 = load %struct.rtx_def*** %reg_next_use592, align 8, !tbaa !3
  %arrayidx593 = getelementptr inbounds %struct.rtx_def** %116, i64 %idxprom591
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx593, align 8, !tbaa !3
  br label %if.end614

if.then600:                                       ; preds = %if.end302, %if.else582
  %and601 = and i32 %flags, 1
  %tobool602 = icmp eq i32 %and601, 0
  br i1 %tobool602, label %if.end614, label %if.then603

if.then603:                                       ; preds = %if.then600
  %arrayidx605 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx606 = bitcast %union.rtunion_def* %arrayidx605 to %struct.rtx_def**
  %117 = load %struct.rtx_def** %rtx606, align 8, !tbaa !3
  %call607 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 10, %struct.rtx_def* %reg.addr.2, %struct.rtx_def* %117) #6
  %118 = getelementptr inbounds %union.rtunion_def* %arrayidx605, i64 0, i32 0
  %call607.c = ptrtoint %struct.rtx_def* %call607 to i64
  store i64 %call607.c, i64* %118, align 8, !tbaa !3
  br label %if.end614

if.end614:                                        ; preds = %if.end302, %sw.bb, %for.cond.backedge, %for.inc578, %if.else582, %if.end562, %if.then587, %if.then600, %if.then590, %if.then603
  ret void
}
