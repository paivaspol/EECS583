define void @delete_noop_moves(%struct.rtx_def* nocapture %f) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !0
  %cmp70 = icmp sgt i32 %0, 0
  br i1 %cmp70, label %for.body, label %for.end48

for.body:                                         ; preds = %for.inc47, %entry
  %1 = phi i32 [ %0, %entry ], [ %19, %for.inc47 ]
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc47 ]
  %2 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !3
  %data = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 4
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb1, i64 0, i64 %indvars.iv
  %3 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !3
  %head = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 0
  %4 = load %struct.rtx_def** %head, align 8, !tbaa !3
  %end = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 1
  %5 = load %struct.rtx_def** %end, align 8, !tbaa !3
  %arrayidx366 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 2
  %rtx67 = bitcast %union.rtunion_def* %arrayidx366 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx67, align 8, !tbaa !3
  %cmp468 = icmp eq %struct.rtx_def* %4, %6
  br i1 %cmp468, label %for.inc47, label %for.body5

for.body5:                                        ; preds = %for.body, %for.cond2.backedge
  %insn.069 = phi %struct.rtx_def* [ %7, %for.cond2.backedge ], [ %4, %for.body ]
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %insn.069, i64 0, i32 1, i64 2
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx8, align 8, !tbaa !3
  %8 = bitcast %struct.rtx_def* %insn.069 to i32*
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom965 = zext i32 %bf.clear to i64
  %arrayidx10 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom965
  %9 = load i8* %arrayidx10, align 1, !tbaa !1
  %cmp11 = icmp eq i8 %9, 105
  br i1 %cmp11, label %land.lhs.true, label %for.cond2.backedge

land.lhs.true:                                    ; preds = %for.body5
  %call = tail call i32 @noop_move_p(%struct.rtx_def* %insn.069) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.cond2.backedge, label %if.then

for.cond2.backedge:                               ; preds = %land.lhs.true, %for.body5, %if.end
  %10 = load %struct.rtx_def** %end, align 8, !tbaa !3
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %cmp4 = icmp eq %struct.rtx_def* %7, %11
  br i1 %cmp4, label %for.cond2.for.inc47_crit_edge, label %for.body5

if.then:                                          ; preds = %land.lhs.true
  %call13 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.069, i32 7, %struct.rtx_def* null) #6
  %tobool14 = icmp eq %struct.rtx_def* %call13, null
  br i1 %tobool14, label %if.end, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %if.then
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %call13, i64 0, i32 1, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx18, align 8, !tbaa !3
  %cmp19 = icmp eq %struct.rtx_def* %12, %insn.069
  br i1 %cmp19, label %if.end, label %if.then21

if.then21:                                        ; preds = %land.lhs.true15
  %call22 = tail call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %insn.069) #6
  %13 = load %struct.rtx_def** %rtx18, align 8, !tbaa !3
  %call26 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %13, i32 6, %struct.rtx_def* null) #6
  %14 = load %struct.rtx_def** %rtx18, align 8, !tbaa !3
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %call22, i64 0, i32 1, i64 6
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx32, align 8, !tbaa !3
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 7, %struct.rtx_def* %14, %struct.rtx_def* %15) #6
  %16 = getelementptr inbounds %union.rtunion_def* %arrayidx31, i64 0, i32 0
  %call33.c = ptrtoint %struct.rtx_def* %call33 to i64
  store i64 %call33.c, i64* %16, align 8, !tbaa !3
  %17 = getelementptr inbounds %struct.rtx_def* %call26, i64 0, i32 1, i64 0, i32 0
  %call22.c = ptrtoint %struct.rtx_def* %call22 to i64
  store i64 %call22.c, i64* %17, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %land.lhs.true15, %if.then, %if.then21
  %bf.load40 = load i32* %8, align 8
  %bf.clear41 = and i32 %bf.load40, -65536
  %bf.set = or i32 %bf.clear41, 37
  store i32 %bf.set, i32* %8, align 8
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %insn.069, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx43 to i32*
  store i32 -99, i32* %rtint, align 4, !tbaa !0
  %18 = getelementptr inbounds %struct.rtx_def* %insn.069, i64 0, i32 1, i64 3, i32 0
  store i64 0, i64* %18, align 8, !tbaa !3
  br label %for.cond2.backedge

for.cond2.for.inc47_crit_edge:                    ; preds = %for.cond2.backedge
  %.pre = load i32* @n_basic_blocks, align 4, !tbaa !0
  br label %for.inc47

for.inc47:                                        ; preds = %for.cond2.for.inc47_crit_edge, %for.body
  %19 = phi i32 [ %.pre, %for.cond2.for.inc47_crit_edge ], [ %1, %for.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %20 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %20, %19
  br i1 %cmp, label %for.body, label %for.end48

for.end48:                                        ; preds = %for.inc47, %entry
  ret void
}
