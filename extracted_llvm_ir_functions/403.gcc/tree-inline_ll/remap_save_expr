define void @remap_save_expr(%union.tree_node** nocapture %tp, i8* %st_, %union.tree_node* %fn, i32* nocapture %walk_subtrees) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %tp}, i64 0, metadata !968), !dbg !1334
  tail call void @llvm.dbg.value(metadata !{i8* %st_}, i64 0, metadata !969), !dbg !1335
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %fn}, i64 0, metadata !970), !dbg !1336
  tail call void @llvm.dbg.value(metadata !{i32* %walk_subtrees}, i64 0, metadata !971), !dbg !1337
  %0 = bitcast i8* %st_ to %struct.splay_tree_s*, !dbg !1338
  tail call void @llvm.dbg.value(metadata !{%struct.splay_tree_s* %0}, i64 0, metadata !972), !dbg !1338
  %1 = load %union.tree_node** %tp, align 8, !dbg !1339, !tbaa !1120
  %2 = ptrtoint %union.tree_node* %1 to i64, !dbg !1339
  %call = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %0, i64 %2) #7, !dbg !1339
  tail call void @llvm.dbg.value(metadata !{%struct.splay_tree_node_s* %call}, i64 0, metadata !973), !dbg !1339
  %tobool = icmp eq %struct.splay_tree_node_s* %call, null, !dbg !1340
  br i1 %tobool, label %if.then, label %if.else, !dbg !1340

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node** %tp, align 8, !dbg !1341, !tbaa !1120
  %call1 = tail call %union.tree_node* @copy_node(%union.tree_node* %3) #7, !dbg !1341
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call1}, i64 0, metadata !974), !dbg !1341
  %operands = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 2, !dbg !1342
  %arrayidx = getelementptr inbounds i32* %operands, i64 2, !dbg !1342
  %4 = bitcast i32* %arrayidx to %union.tree_node**, !dbg !1342
  store %union.tree_node* %fn, %union.tree_node** %4, align 8, !dbg !1342, !tbaa !1120
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 4, !dbg !1343
  %5 = bitcast i32* %arrayidx4 to %struct.rtx_def**, !dbg !1343
  store %struct.rtx_def* null, %struct.rtx_def** %5, align 8, !dbg !1343, !tbaa !1120
  %6 = load %union.tree_node** %tp, align 8, !dbg !1344, !tbaa !1120
  %7 = ptrtoint %union.tree_node* %6 to i64, !dbg !1344
  %8 = ptrtoint %union.tree_node* %call1 to i64, !dbg !1344
  %call5 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %0, i64 %7, i64 %8) #7, !dbg !1344
  tail call void @llvm.dbg.value(metadata !{%struct.splay_tree_node_s* %call5}, i64 0, metadata !973), !dbg !1344
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !1345, !tbaa !1120
  %10 = ptrtoint %union.tree_node* %9 to i64, !dbg !1345
  %call6 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %0, i64 %8, i64 %10) #7, !dbg !1345
  br label %if.end, !dbg !1346

if.else:                                          ; preds = %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !1347, !tbaa !1127
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %n.0 = phi %struct.splay_tree_node_s* [ %call, %if.else ], [ %call5, %if.then ]
  %value = getelementptr inbounds %struct.splay_tree_node_s* %n.0, i64 0, i32 1, !dbg !1348
  %11 = load i64* %value, align 8, !dbg !1348, !tbaa !1130
  %12 = inttoptr i64 %11 to %union.tree_node*, !dbg !1348
  store %union.tree_node* %12, %union.tree_node** %tp, align 8, !dbg !1348, !tbaa !1120
  ret void, !dbg !1349
}
