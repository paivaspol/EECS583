define %struct.rtx_def* @prepare_operand(i32 %icode, %struct.rtx_def* %x, i32 %opnum, i32 %mode, i32 %wider_mode, i32 %unsignedp) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %icode}, i64 0, metadata !2192), !dbg !3857
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !2193), !dbg !3858
  tail call void @llvm.dbg.value(metadata !{i32 %opnum}, i64 0, metadata !2194), !dbg !3859
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !2195), !dbg !3860
  tail call void @llvm.dbg.value(metadata !{i32 %wider_mode}, i64 0, metadata !2196), !dbg !3860
  tail call void @llvm.dbg.value(metadata !{i32 %unsignedp}, i64 0, metadata !2197), !dbg !3861
  %call = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %x, i32 0) #9, !dbg !3862
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !2193), !dbg !3862
  %cmp = icmp eq i32 %mode, %wider_mode, !dbg !3863
  br i1 %cmp, label %if.end, label %if.then, !dbg !3863

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode, i32 %mode, %struct.rtx_def* %call, i32 %unsignedp) #9, !dbg !3864
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call1}, i64 0, metadata !2193), !dbg !3864
  br label %if.end, !dbg !3864

if.end:                                           ; preds = %entry, %if.then
  %x.addr.0 = phi %struct.rtx_def* [ %call1, %if.then ], [ %call, %entry ]
  %idxprom = sext i32 %opnum to i64, !dbg !3865
  %idxprom2 = sext i32 %icode to i64, !dbg !3865
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2, i32 3, !dbg !3865
  %0 = load %struct.insn_operand_data** %operand, align 8, !dbg !3865, !tbaa !2642
  %predicate = getelementptr inbounds %struct.insn_operand_data* %0, i64 %idxprom, i32 0, !dbg !3865
  %1 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !3865, !tbaa !2642
  %mode9 = getelementptr inbounds %struct.insn_operand_data* %0, i64 %idxprom, i32 2, !dbg !3865
  %2 = bitcast [2 x i8]* %mode9 to i16*, !dbg !3865
  %bf.load = load i16* %2, align 8, !dbg !3865
  %bf.cast = zext i16 %bf.load to i32, !dbg !3865
  %call10 = tail call i32 %1(%struct.rtx_def* %x.addr.0, i32 %bf.cast) #9, !dbg !3865
  %tobool = icmp eq i32 %call10, 0, !dbg !3865
  br i1 %tobool, label %if.then11, label %if.end21, !dbg !3865

if.then11:                                        ; preds = %if.end
  %bf.load18 = load i16* %2, align 8, !dbg !3866
  %bf.cast19 = zext i16 %bf.load18 to i32, !dbg !3866
  %call20 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast19, %struct.rtx_def* %x.addr.0) #9, !dbg !3866
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call20}, i64 0, metadata !2193), !dbg !3866
  br label %if.end21, !dbg !3866

if.end21:                                         ; preds = %if.end, %if.then11
  %x.addr.1 = phi %struct.rtx_def* [ %x.addr.0, %if.end ], [ %call20, %if.then11 ]
  ret %struct.rtx_def* %x.addr.1, !dbg !3867
}
