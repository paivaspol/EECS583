define void @expand_fix(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %unsignedp) #0 {
entry:
  %tmp = alloca %struct.realvaluetype, align 8
  %0 = bitcast %struct.rtx_def* %from to i32*
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp576 = icmp eq i32 %bf.clear, 0
  br i1 %cmp576, label %for.end45, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %1 = bitcast %struct.rtx_def* %to to i32*
  %bf.load1 = load i32* %1, align 8
  %bf.lshr2 = lshr i32 %bf.load1, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  %cmp5573 = icmp eq i32 %bf.clear3, 0
  %cmp.i = icmp ne i32 %unsignedp, 0
  %idxprom.i = zext i1 %cmp.i to i64
  %2 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !0
  %tobool = icmp eq i32 %unsignedp, 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc41
  %fmode.0577 = phi i32 [ %bf.clear, %for.body.lr.ph ], [ %conv44, %for.inc41 ]
  %idxprom42521.pre = zext i32 %fmode.0577 to i64
  br i1 %cmp5573, label %for.inc41, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.body
  %insn_code.i = getelementptr inbounds %struct.optab* %2, i64 0, i32 1, i64 %idxprom42521.pre, i32 0
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.inc
  %imode.0574 = phi i32 [ %bf.clear3, %for.body6.lr.ph ], [ %conv, %for.inc ]
  %idxprom1.i565 = zext i32 %imode.0574 to i64
  %arrayidx4.i = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 %idxprom.i
  %3 = load i32* %arrayidx4.i, align 4, !tbaa !6
  %cmp5.i = icmp eq i32 %3, 1317
  br i1 %cmp5.i, label %if.end.i, label %if.then15

if.end.i:                                         ; preds = %for.body6
  %4 = load i32* %insn_code.i, align 4, !tbaa !6
  %cmp17.i = icmp eq i32 %4, 1317
  br i1 %cmp17.i, label %land.lhs.true, label %can_fix_p.exit

can_fix_p.exit:                                   ; preds = %if.end.i
  %arrayidx27.i = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 %idxprom.i
  %5 = load i32* %arrayidx27.i, align 4, !tbaa !6
  %cmp7 = icmp eq i32 %5, 1317
  br i1 %cmp7, label %land.lhs.true, label %if.then15

land.lhs.true:                                    ; preds = %if.end.i, %can_fix_p.exit
  %cmp11 = icmp eq i32 %imode.0574, %bf.clear3
  %or.cond = or i1 %cmp11, %tobool
  br i1 %or.cond, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %arrayidx4.i526 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 0
  %6 = load i32* %arrayidx4.i526, align 8, !tbaa !6
  %cmp5.i527 = icmp eq i32 %6, 1317
  br i1 %cmp5.i527, label %if.end.i530, label %if.then15

if.end.i530:                                      ; preds = %if.then
  br i1 %cmp17.i, label %for.inc, label %if.end

if.end:                                           ; preds = %if.end.i530
  %arrayidx27.i531 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %idxprom42521.pre, i64 %idxprom1.i565, i64 0
  %7 = load i32* %arrayidx27.i531, align 8, !tbaa !6
  %cmp14 = icmp eq i32 %7, 1317
  br i1 %cmp14, label %for.inc, label %if.then15

if.then15:                                        ; preds = %for.body6, %if.then, %can_fix_p.exit, %if.end
  %icode.0552 = phi i32 [ %7, %if.end ], [ %5, %can_fix_p.exit ], [ %6, %if.then ], [ %3, %for.body6 ]
  %doing_unsigned.0551 = phi i32 [ 0, %if.end ], [ %unsignedp, %can_fix_p.exit ], [ 0, %if.then ], [ %unsignedp, %for.body6 ]
  %8 = phi i32 [ 1, %if.end ], [ 1, %can_fix_p.exit ], [ 0, %if.then ], [ 0, %for.body6 ]
  %call16 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #8
  %call17 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #8
  %9 = bitcast %struct.rtx_def* %call17 to i32*
  %bf.load18 = load i32* %9, align 8
  %bf.lshr19 = lshr i32 %bf.load18, 16
  %bf.clear20 = and i32 %bf.lshr19, 255
  %cmp21 = icmp eq i32 %fmode.0577, %bf.clear20
  br i1 %cmp21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.then15
  %call23 = call %struct.rtx_def* @convert_to_mode(i32 %fmode.0577, %struct.rtx_def* %call17, i32 0) #8
  br label %if.end24

if.end24:                                         ; preds = %if.then15, %if.then22
  %from.addr.0 = phi %struct.rtx_def* [ %call23, %if.then22 ], [ %call17, %if.then15 ]
  %tobool25 = icmp eq i32 %8, 0
  br i1 %tobool25, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.end24
  %10 = bitcast %struct.rtx_def* %from.addr.0 to i32*
  %bf.load.i = load i32* %10, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %call.i = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear.i) #8
  %bf.load1.i = load i32* %10, align 8
  %bf.lshr2.i = lshr i32 %bf.load1.i, 16
  %bf.clear3.i = and i32 %bf.lshr2.i, 255
  %11 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !0
  %call4.i = call %struct.rtx_def* @expand_unop(i32 %bf.clear3.i, %struct.optab* %11, %struct.rtx_def* %from.addr.0, %struct.rtx_def* %call.i, i32 0) #8
  br label %if.end28

if.end28:                                         ; preds = %if.end24, %if.then26
  %from.addr.1 = phi %struct.rtx_def* [ %call4.i, %if.then26 ], [ %from.addr.0, %if.end24 ]
  %12 = bitcast %struct.rtx_def* %call16 to i32*
  %bf.load29 = load i32* %12, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %cmp32 = icmp eq i32 %imode.0574, %bf.clear31
  br i1 %cmp32, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.end28
  %call34 = call %struct.rtx_def* @gen_reg_rtx(i32 %imode.0574) #8
  br label %if.end35

if.end35:                                         ; preds = %if.end28, %if.then33
  %target.0 = phi %struct.rtx_def* [ %call34, %if.then33 ], [ %to, %if.end28 ]
  %tobool36 = icmp ne i32 %doing_unsigned.0551, 0
  %cond = select i1 %tobool36, i32 128, i32 126
  call void @emit_unop_insn(i32 %icode.0552, %struct.rtx_def* %target.0, %struct.rtx_def* %from.addr.1, i32 %cond) #7
  %cmp37 = icmp eq %struct.rtx_def* %target.0, %call16
  br i1 %cmp37, label %if.end393, label %if.then38

if.then38:                                        ; preds = %if.end35
  call void @convert_move(%struct.rtx_def* %call16, %struct.rtx_def* %target.0, i32 %unsignedp) #8
  br label %if.end393

for.inc:                                          ; preds = %if.end.i530, %land.lhs.true, %if.end
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom1.i565
  %13 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %13 to i32
  %cmp5 = icmp eq i8 %13, 0
  br i1 %cmp5, label %for.inc41, label %for.body6

for.inc41:                                        ; preds = %for.body, %for.inc
  %arrayidx43 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom42521.pre
  %14 = load i8* %arrayidx43, align 1, !tbaa !1
  %conv44 = zext i8 %14 to i32
  %cmp = icmp eq i8 %14, 0
  br i1 %cmp, label %for.end45, label %for.body

for.end45:                                        ; preds = %for.inc41, %entry
  %tobool46 = icmp ne i32 %unsignedp, 0
  %15 = bitcast %struct.rtx_def* %to to i32*
  %bf.load48 = load i32* %15, align 8
  br i1 %tobool46, label %land.lhs.true47, label %if.end155

land.lhs.true47:                                  ; preds = %for.end45
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %idxprom51516 = zext i32 %bf.clear50 to i64
  %arrayidx52 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom51516
  %16 = load i16* %arrayidx52, align 2, !tbaa !8
  %cmp54.not = icmp ugt i16 %16, 64
  %brmerge = or i1 %cmp54.not, %cmp576
  br i1 %brmerge, label %if.end155, label %for.body63.lr.ph

for.body63.lr.ph:                                 ; preds = %land.lhs.true47
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 17), align 8, !tbaa !0
  br label %for.body63

for.body63:                                       ; preds = %for.body63.lr.ph, %for.inc150
  %fmode.1571 = phi i32 [ %bf.clear, %for.body63.lr.ph ], [ %conv153, %for.inc150 ]
  %idxprom64517 = zext i32 %fmode.1571 to i64
  %arrayidx65 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom64517
  %18 = load i16* %arrayidx65, align 2, !tbaa !8
  %cmp73 = icmp ugt i16 %18, %16
  br i1 %cmp73, label %land.lhs.true75, label %for.inc150

land.lhs.true75:                                  ; preds = %for.body63
  %arrayidx4.i537 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtrunctab, i64 0, i64 %idxprom64517, i64 %idxprom51516, i64 0
  %19 = load i32* %arrayidx4.i537, align 8, !tbaa !6
  %cmp5.i538 = icmp eq i32 %19, 1317
  br i1 %cmp5.i538, label %if.end.i541, label %if.then82

if.end.i541:                                      ; preds = %land.lhs.true75
  %insn_code.i539 = getelementptr inbounds %struct.optab* %17, i64 0, i32 1, i64 %idxprom64517, i32 0
  %20 = load i32* %insn_code.i539, align 4, !tbaa !6
  %cmp17.i540 = icmp eq i32 %20, 1317
  br i1 %cmp17.i540, label %for.inc150, label %can_fix_p.exit545

can_fix_p.exit545:                                ; preds = %if.end.i541
  %arrayidx27.i542 = getelementptr inbounds [59 x [59 x [2 x i32]]]* @fixtab, i64 0, i64 %idxprom64517, i64 %idxprom51516, i64 0
  %21 = load i32* %arrayidx27.i542, align 8, !tbaa !6
  %cmp80 = icmp eq i32 %21, 1317
  br i1 %cmp80, label %for.inc150, label %if.then82

if.then82:                                        ; preds = %land.lhs.true75, %can_fix_p.exit545
  %conv88 = zext i16 %16 to i32
  %sub = add nsw i32 %conv88, -1
  call void @ereal_ldexp(%struct.realvaluetype* sret %tmp, %struct.realvaluetype* byval align 8 @dconst1, i32 %sub) #8
  %call89 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %tmp, i32 %fmode.1571) #8
  %call90 = call %struct.rtx_def* @gen_label_rtx() #8
  %call91 = call %struct.rtx_def* @gen_label_rtx() #8
  call void @emit_queue() #8
  %call92 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #8
  %call93 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #8
  %22 = load i32* @flag_force_mem, align 4, !tbaa !5
  %tobool94 = icmp eq i32 %22, 0
  br i1 %tobool94, label %if.end97, label %if.then95

if.then95:                                        ; preds = %if.then82
  %call96 = call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call93) #8
  br label %if.end97

if.end97:                                         ; preds = %if.then82, %if.then95
  %from.addr.2 = phi %struct.rtx_def* [ %call96, %if.then95 ], [ %call93, %if.then82 ]
  %23 = bitcast %struct.rtx_def* %from.addr.2 to i32*
  %bf.load98 = load i32* %23, align 8
  %bf.lshr99 = lshr i32 %bf.load98, 16
  %bf.clear100 = and i32 %bf.lshr99, 255
  %cmp101 = icmp eq i32 %fmode.1571, %bf.clear100
  br i1 %cmp101, label %if.end105, label %if.then103

if.then103:                                       ; preds = %if.end97
  %call104 = call %struct.rtx_def* @convert_to_mode(i32 %fmode.1571, %struct.rtx_def* %from.addr.2, i32 0) #8
  br label %if.end105

if.end105:                                        ; preds = %if.end97, %if.then103
  %from.addr.3 = phi %struct.rtx_def* [ %call104, %if.then103 ], [ %from.addr.2, %if.end97 ]
  call void @do_pending_stack_adjust() #8
  %24 = bitcast %struct.rtx_def* %from.addr.3 to i32*
  %bf.load106 = load i32* %24, align 8
  %bf.lshr107 = lshr i32 %bf.load106, 16
  %bf.clear108 = and i32 %bf.lshr107, 255
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %from.addr.3, %struct.rtx_def* %call89, i32 104, %struct.rtx_def* null, i32 %bf.clear108, i32 0, %struct.rtx_def* %call90) #7
  call void @expand_fix(%struct.rtx_def* %call92, %struct.rtx_def* %from.addr.3, i32 0) #7
  %call109 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call91) #8
  %call110 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call109) #8
  %call111 = call %struct.rtx_def* @emit_barrier() #8
  %call112 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call90) #8
  %bf.load113 = load i32* %24, align 8
  %bf.lshr114 = lshr i32 %bf.load113, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %25 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %call116 = call %struct.rtx_def* @expand_binop(i32 %bf.clear115, %struct.optab* %25, %struct.rtx_def* %from.addr.3, %struct.rtx_def* %call89, %struct.rtx_def* null, i32 0, i32 3) #7
  call void @expand_fix(%struct.rtx_def* %call92, %struct.rtx_def* %call116, i32 0) #7
  %26 = bitcast %struct.rtx_def* %call92 to i32*
  %bf.load117 = load i32* %26, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 16
  %bf.clear119 = and i32 %bf.lshr118, 255
  %27 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !0
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 1, %sh_prom
  %call124 = call i64 @trunc_int_for_mode(i64 %shl, i32 %bf.clear119) #8
  %call125 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call124) #8
  %call126 = call %struct.rtx_def* @expand_binop(i32 %bf.clear119, %struct.optab* %27, %struct.rtx_def* %call92, %struct.rtx_def* %call125, %struct.rtx_def* %call92, i32 1, i32 3) #7
  %cmp127 = icmp eq %struct.rtx_def* %call126, %call92
  br i1 %cmp127, label %if.end131, label %if.then129

if.then129:                                       ; preds = %if.end105
  %call130 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call92, %struct.rtx_def* %call126) #8
  br label %if.end131

if.end131:                                        ; preds = %if.end105, %if.then129
  %call132 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call91) #8
  %bf.load133 = load i32* %26, align 8
  %bf.lshr134 = lshr i32 %bf.load133, 16
  %bf.clear135 = and i32 %bf.lshr134, 255
  %idxprom136520 = zext i32 %bf.clear135 to i64
  %28 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !0
  %insn_code = getelementptr inbounds %struct.optab* %28, i64 0, i32 1, i64 %idxprom136520, i32 0
  %29 = load i32* %insn_code, align 4, !tbaa !6
  %cmp138 = icmp eq i32 %29, 1317
  br i1 %cmp138, label %if.end393, label %if.then140

if.then140:                                       ; preds = %if.end131
  %call141 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call92, %struct.rtx_def* %call92) #8
  %bf.load142 = load i32* %26, align 8
  %bf.lshr143 = lshr i32 %bf.load142, 16
  %bf.clear144 = and i32 %bf.lshr143, 255
  %call145 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %from.addr.3) #8
  %call146 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 128, i32 %bf.clear144, %struct.rtx_def* %call145) #8
  %call147 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call141, i32 4, %struct.rtx_def* %call146) #8
  br label %if.end393

for.inc150:                                       ; preds = %if.end.i541, %can_fix_p.exit545, %for.body63
  %arrayidx152 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom64517
  %30 = load i8* %arrayidx152, align 1, !tbaa !1
  %conv153 = zext i8 %30 to i32
  %cmp61 = icmp eq i8 %30, 0
  br i1 %cmp61, label %if.end155, label %for.body63

if.end155:                                        ; preds = %land.lhs.true47, %for.end45, %for.inc150
  %bf.lshr157 = lshr i32 %bf.load48, 16
  %bf.clear158 = and i32 %bf.lshr157, 255
  %idxprom159515 = zext i32 %bf.clear158 to i64
  %arrayidx160 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom159515
  %31 = load i8* %arrayidx160, align 1, !tbaa !1
  %32 = load i8* getelementptr inbounds ([59 x i8]* @mode_size, i64 0, i64 4), align 1, !tbaa !1
  %cmp163 = icmp ult i8 %31, %32
  br i1 %cmp163, label %if.end352.thread, label %if.else

if.end352.thread:                                 ; preds = %if.end155
  %call166 = call %struct.rtx_def* @gen_reg_rtx(i32 4) #8
  call void @expand_fix(%struct.rtx_def* %call166, %struct.rtx_def* %from, i32 %unsignedp) #7
  br label %if.end377

if.else:                                          ; preds = %if.end155
  switch i32 %bf.clear, label %if.else347 [
    i32 15, label %if.then172
    i32 16, label %if.then215
    i32 17, label %if.then261
    i32 18, label %if.then307
  ]

if.then172:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else205 [
    i32 4, label %if.then178
    i32 5, label %if.then187
    i32 6, label %if.then199
  ]

if.then178:                                       ; preds = %if.then172
  %33 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 83), align 8, !tbaa !0
  %34 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 71), align 8, !tbaa !0
  %cond180 = select i1 %tobool46, %struct.rtx_def* %33, %struct.rtx_def* %34
  br label %if.end352

if.then187:                                       ; preds = %if.then172
  %35 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 84), align 16, !tbaa !0
  %36 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 72), align 16, !tbaa !0
  %cond192 = select i1 %tobool46, %struct.rtx_def* %35, %struct.rtx_def* %36
  br label %if.end352

if.then199:                                       ; preds = %if.then172
  %37 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 85), align 8, !tbaa !0
  %38 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 73), align 8, !tbaa !0
  %cond204 = select i1 %tobool46, %struct.rtx_def* %37, %struct.rtx_def* %38
  br label %if.end352

if.else205:                                       ; preds = %if.then172
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4506, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.then215:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else251 [
    i32 4, label %if.then221
    i32 5, label %if.then233
    i32 6, label %if.then245
  ]

if.then221:                                       ; preds = %if.then215
  %39 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 86), align 16, !tbaa !0
  %40 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 74), align 16, !tbaa !0
  %cond226 = select i1 %tobool46, %struct.rtx_def* %39, %struct.rtx_def* %40
  br label %if.end352

if.then233:                                       ; preds = %if.then215
  %41 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 87), align 8, !tbaa !0
  %42 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 75), align 8, !tbaa !0
  %cond238 = select i1 %tobool46, %struct.rtx_def* %41, %struct.rtx_def* %42
  br label %if.end352

if.then245:                                       ; preds = %if.then215
  %43 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 88), align 16, !tbaa !0
  %44 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 76), align 16, !tbaa !0
  %cond250 = select i1 %tobool46, %struct.rtx_def* %43, %struct.rtx_def* %44
  br label %if.end352

if.else251:                                       ; preds = %if.then215
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4517, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.then261:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else297 [
    i32 4, label %if.then267
    i32 5, label %if.then279
    i32 6, label %if.then291
  ]

if.then267:                                       ; preds = %if.then261
  %45 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 89), align 8, !tbaa !0
  %46 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 77), align 8, !tbaa !0
  %cond272 = select i1 %tobool46, %struct.rtx_def* %45, %struct.rtx_def* %46
  br label %if.end352

if.then279:                                       ; preds = %if.then261
  %47 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 90), align 16, !tbaa !0
  %48 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 78), align 16, !tbaa !0
  %cond284 = select i1 %tobool46, %struct.rtx_def* %47, %struct.rtx_def* %48
  br label %if.end352

if.then291:                                       ; preds = %if.then261
  %49 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 91), align 8, !tbaa !0
  %50 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 79), align 8, !tbaa !0
  %cond296 = select i1 %tobool46, %struct.rtx_def* %49, %struct.rtx_def* %50
  br label %if.end352

if.else297:                                       ; preds = %if.then261
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4528, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.then307:                                       ; preds = %if.else
  switch i32 %bf.clear158, label %if.else343 [
    i32 4, label %if.then313
    i32 5, label %if.then325
    i32 6, label %if.then337
  ]

if.then313:                                       ; preds = %if.then307
  %51 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 92), align 16, !tbaa !0
  %52 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 80), align 16, !tbaa !0
  %cond318 = select i1 %tobool46, %struct.rtx_def* %51, %struct.rtx_def* %52
  br label %if.end352

if.then325:                                       ; preds = %if.then307
  %53 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 93), align 8, !tbaa !0
  %54 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 81), align 8, !tbaa !0
  %cond330 = select i1 %tobool46, %struct.rtx_def* %53, %struct.rtx_def* %54
  br label %if.end352

if.then337:                                       ; preds = %if.then307
  %55 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 94), align 16, !tbaa !0
  %56 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 82), align 16, !tbaa !0
  %cond342 = select i1 %tobool46, %struct.rtx_def* %55, %struct.rtx_def* %56
  br label %if.end352

if.else343:                                       ; preds = %if.then307
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4539, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.else347:                                       ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4542, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.expand_fix, i64 0, i64 0)) #6
  unreachable

if.end352:                                        ; preds = %if.then187, %if.then199, %if.then178, %if.then279, %if.then291, %if.then267, %if.then313, %if.then337, %if.then325, %if.then221, %if.then245, %if.then233
  %libfcn.0 = phi %struct.rtx_def* [ %cond180, %if.then178 ], [ %cond192, %if.then187 ], [ %cond204, %if.then199 ], [ %cond226, %if.then221 ], [ %cond238, %if.then233 ], [ %cond250, %if.then245 ], [ %cond272, %if.then267 ], [ %cond284, %if.then279 ], [ %cond296, %if.then291 ], [ %cond318, %if.then313 ], [ %cond330, %if.then325 ], [ %cond342, %if.then337 ]
  %tobool353 = icmp eq %struct.rtx_def* %libfcn.0, null
  br i1 %tobool353, label %if.end393, label %if.then354

if.then354:                                       ; preds = %if.end352
  %call357 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %to, i32 1) #8
  %call358 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %from, i32 0) #8
  %57 = load i32* @flag_force_mem, align 4, !tbaa !5
  %tobool359 = icmp eq i32 %57, 0
  br i1 %tobool359, label %if.end362, label %if.then360

if.then360:                                       ; preds = %if.then354
  %call361 = call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call358) #8
  br label %if.end362

if.end362:                                        ; preds = %if.then354, %if.then360
  %from.addr.4 = phi %struct.rtx_def* [ %call361, %if.then360 ], [ %call358, %if.then354 ]
  call void @start_sequence() #8
  %58 = bitcast %struct.rtx_def* %call357 to i32*
  %bf.load363 = load i32* %58, align 8
  %bf.lshr364 = lshr i32 %bf.load363, 16
  %bf.clear365 = and i32 %bf.lshr364, 255
  %59 = bitcast %struct.rtx_def* %from.addr.4 to i32*
  %bf.load366 = load i32* %59, align 8
  %bf.lshr367 = lshr i32 %bf.load366, 16
  %bf.clear368 = and i32 %bf.lshr367, 255
  %call369 = call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %libfcn.0, %struct.rtx_def* null, i32 1, i32 %bf.clear365, i32 1, %struct.rtx_def* %from.addr.4, i32 %bf.clear368) #8
  %call370 = call %struct.rtx_def* @get_insns() #8
  call void @end_sequence() #8
  %cond372 = select i1 %tobool46, i32 128, i32 126
  %bf.load373 = load i32* %58, align 8
  %bf.lshr374 = lshr i32 %bf.load373, 16
  %bf.clear375 = and i32 %bf.lshr374, 255
  %call376 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %cond372, i32 %bf.clear375, %struct.rtx_def* %from.addr.4) #8
  call void @emit_libcall_block(%struct.rtx_def* %call370, %struct.rtx_def* %to, %struct.rtx_def* %call369, %struct.rtx_def* %call376) #7
  br label %if.end377

if.end377:                                        ; preds = %if.end352.thread, %if.end362
  %target.1563 = phi %struct.rtx_def* [ %to, %if.end362 ], [ %call166, %if.end352.thread ]
  %to.addr.0 = phi %struct.rtx_def* [ %call357, %if.end362 ], [ %to, %if.end352.thread ]
  %cmp378 = icmp eq %struct.rtx_def* %target.1563, %to.addr.0
  br i1 %cmp378, label %if.end393, label %if.then380

if.then380:                                       ; preds = %if.end377
  %60 = bitcast %struct.rtx_def* %to.addr.0 to i32*
  %bf.load381 = load i32* %60, align 8
  %61 = bitcast %struct.rtx_def* %target.1563 to i32*
  %bf.load384 = load i32* %61, align 8
  %bf.lshr382523 = xor i32 %bf.load384, %bf.load381
  %62 = and i32 %bf.lshr382523, 16711680
  %cmp387 = icmp eq i32 %62, 0
  br i1 %cmp387, label %if.then389, label %if.else391

if.then389:                                       ; preds = %if.then380
  %call390 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %target.1563) #8
  br label %if.end393

if.else391:                                       ; preds = %if.then380
  call void @convert_move(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %target.1563, i32 0) #8
  br label %if.end393

if.end393:                                        ; preds = %if.end352, %if.end35, %if.end131, %if.end377, %if.then389, %if.else391, %if.then140, %if.then38
  ret void
}
