define i32 @have_sub2_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 3919, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.have_sub2_insn, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %idxprom55 = zext i32 %bf.clear to i64
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %insn_code = getelementptr inbounds %struct.optab* %1, i64 0, i32 1, i64 %idxprom55, i32 0
  %2 = load i32* %insn_code, align 4, !tbaa !6
  %cmp4 = icmp eq i32 %2, 1317
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  %idxprom7 = sext i32 %2 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom7, i32 3
  %3 = load %struct.insn_operand_data** %operand, align 8, !tbaa !0
  %predicate = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !0
  %mode = getelementptr inbounds %struct.insn_operand_data* %3, i64 0, i32 2
  %5 = bitcast [2 x i8]* %mode to i16*
  %bf.load14 = load i16* %5, align 8
  %bf.cast = zext i16 %bf.load14 to i32
  %call = tail call i32 %4(%struct.rtx_def* %x, i32 %bf.cast) #8
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %predicate19 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate19, align 8, !tbaa !0
  %mode24 = getelementptr inbounds %struct.insn_operand_data* %3, i64 1, i32 2
  %7 = bitcast [2 x i8]* %mode24 to i16*
  %bf.load25 = load i16* %7, align 8
  %bf.cast26 = zext i16 %bf.load25 to i32
  %call27 = tail call i32 %6(%struct.rtx_def* %x, i32 %bf.cast26) #8
  %tobool28 = icmp eq i32 %call27, 0
  br i1 %tobool28, label %return, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %predicate34 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 0
  %8 = load i32 (%struct.rtx_def*, i32)** %predicate34, align 8, !tbaa !0
  %mode39 = getelementptr inbounds %struct.insn_operand_data* %3, i64 2, i32 2
  %9 = bitcast [2 x i8]* %mode39 to i16*
  %bf.load40 = load i16* %9, align 8
  %bf.cast41 = zext i16 %bf.load40 to i32
  %call42 = tail call i32 %8(%struct.rtx_def* %y, i32 %bf.cast41) #8
  %not.tobool43 = icmp ne i32 %call42, 0
  %. = zext i1 %not.tobool43 to i32
  ret i32 %.

return:                                           ; preds = %if.end6, %lor.lhs.false, %if.end
  ret i32 0
}
