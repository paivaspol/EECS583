define %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %binoptab, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods) #0 {
entry:
  %cmp1 = icmp eq i32 %methods, 3
  %0 = and i32 %methods, -3
  %1 = icmp eq i32 %0, 1
  %cond = select i1 %1, i32 2, i32 %methods
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp161 = icmp eq i32 %methods, 4
  %arrayidx236 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then336, %entry
  %binoptab.tr = phi %struct.optab* [ %binoptab, %entry ], [ %binoptab.addr.0, %if.then336 ]
  %op0.tr = phi %struct.rtx_def* [ %op0, %entry ], [ %xop0.0, %if.then336 ]
  %op1.tr = phi %struct.rtx_def* [ %op1, %entry ], [ %xop1.0, %if.then336 ]
  %target.tr = phi %struct.rtx_def* [ %target, %entry ], [ null, %if.then336 ]
  %code = getelementptr inbounds %struct.optab* %binoptab.tr, i64 0, i32 0
  %3 = load i32* %code, align 4, !tbaa !4
  %switch.tableidx = add i32 %3, -87
  %4 = icmp ult i32 %switch.tableidx, 5
  %call = tail call %struct.rtx_def* @get_last_insn() #8
  %call14 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0.tr, i32 0) #8
  %call15 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op1.tr, i32 0) #8
  %tobool = icmp eq %struct.rtx_def* %target.tr, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %tailrecurse
  %call16 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target.tr, i32 1) #8
  br label %if.end

if.end:                                           ; preds = %tailrecurse, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %call16, %if.then ], [ null, %tailrecurse ]
  %5 = load i32* @flag_force_mem, align 4, !tbaa !5
  %tobool17 = icmp eq i32 %5, 0
  br i1 %tobool17, label %if.end21, label %if.then18

if.then18:                                        ; preds = %if.end
  %call19 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call14) #8
  %call20 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call15) #8
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then18
  %op1.addr.0 = phi %struct.rtx_def* [ %call20, %if.then18 ], [ %call15, %if.end ]
  %op0.addr.0 = phi %struct.rtx_def* [ %call19, %if.then18 ], [ %call14, %if.end ]
  %6 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %cmp22 = icmp eq %struct.optab* %6, %binoptab.tr
  br i1 %cmp22, label %land.lhs.true, label %if.end26

land.lhs.true:                                    ; preds = %if.end21
  %7 = bitcast %struct.rtx_def* %op1.addr.0 to i32*
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp23 = icmp eq i32 %bf.clear, 54
  br i1 %cmp23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %land.lhs.true
  %call25 = tail call %struct.rtx_def* @negate_rtx(i32 %mode, %struct.rtx_def* %op1.addr.0) #8
  %8 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %land.lhs.true, %if.end21
  %op1.addr.1 = phi %struct.rtx_def* [ %call25, %if.then24 ], [ %op1.addr.0, %land.lhs.true ], [ %op1.addr.0, %if.end21 ]
  %binoptab.addr.0 = phi %struct.optab* [ %8, %if.then24 ], [ %binoptab.tr, %land.lhs.true ], [ %binoptab.tr, %if.end21 ]
  %9 = bitcast %struct.rtx_def* %op0.addr.0 to i32*
  %bf.load27 = load i32* %9, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  switch i32 %bf.clear28, label %if.end67 [
    i32 67, label %land.lhs.true58
    i32 68, label %land.lhs.true58
    i32 54, label %land.lhs.true58
    i32 55, label %land.lhs.true58
    i32 58, label %land.lhs.true58
    i32 134, label %land.lhs.true58
    i32 56, label %land.lhs.true58
    i32 140, label %land.lhs.true58
  ]

land.lhs.true58:                                  ; preds = %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26
  %call59 = tail call i32 @preserve_subexpressions_p() #8
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %if.end67, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %land.lhs.true58
  %code62 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 0
  %10 = load i32* %code62, align 4, !tbaa !4
  %call63 = tail call i32 @rtx_cost(%struct.rtx_def* %op0.addr.0, i32 %10) #8
  %cmp64 = icmp sgt i32 %call63, 4
  br i1 %cmp64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %land.lhs.true61
  %call66 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0.addr.0) #8
  br label %if.end67

if.end67:                                         ; preds = %land.lhs.true61, %land.lhs.true58, %if.end26, %if.then65
  %op0.addr.1 = phi %struct.rtx_def* [ %call66, %if.then65 ], [ %op0.addr.0, %if.end26 ], [ %op0.addr.0, %land.lhs.true58 ], [ %op0.addr.0, %land.lhs.true61 ]
  %11 = bitcast %struct.rtx_def* %op1.addr.1 to i32*
  %bf.load68 = load i32* %11, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  switch i32 %bf.clear69, label %if.end110 [
    i32 67, label %land.lhs.true99
    i32 68, label %land.lhs.true99
    i32 54, label %land.lhs.true99
    i32 55, label %land.lhs.true99
    i32 58, label %land.lhs.true99
    i32 134, label %land.lhs.true99
    i32 56, label %land.lhs.true99
    i32 140, label %land.lhs.true99
  ]

land.lhs.true99:                                  ; preds = %if.end67, %if.end67, %if.end67, %if.end67, %if.end67, %if.end67, %if.end67, %if.end67
  %call100 = tail call i32 @preserve_subexpressions_p() #8
  %tobool101 = icmp eq i32 %call100, 0
  %brmerge = or i1 %tobool101, %4
  br i1 %brmerge, label %if.end110, label %land.lhs.true104

land.lhs.true104:                                 ; preds = %land.lhs.true99
  %code105 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 0
  %12 = load i32* %code105, align 4, !tbaa !4
  %call106 = tail call i32 @rtx_cost(%struct.rtx_def* %op1.addr.1, i32 %12) #8
  %cmp107 = icmp sgt i32 %call106, 4
  br i1 %cmp107, label %if.then108, label %if.end110

if.then108:                                       ; preds = %land.lhs.true104
  %call109 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op1.addr.1) #8
  br label %if.end110

if.end110:                                        ; preds = %land.lhs.true99, %if.end67, %if.then108, %land.lhs.true104
  %op1.addr.2 = phi %struct.rtx_def* [ %call109, %if.then108 ], [ %op1.addr.1, %land.lhs.true104 ], [ %op1.addr.1, %land.lhs.true99 ], [ %op1.addr.1, %if.end67 ]
  %call111 = tail call %struct.rtx_def* @get_last_insn() #8
  %code112 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 0
  %13 = load i32* %code112, align 4, !tbaa !4
  %idxprom113 = sext i32 %13 to i64
  %arrayidx114 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom113
  %14 = load i8* %arrayidx114, align 1, !tbaa !1
  %cmp115 = icmp eq i8 %14, 99
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !0
  %cmp118 = icmp eq %struct.optab* %binoptab.addr.0, %15
  %or.cond = or i1 %cmp115, %cmp118
  %16 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !0
  %cmp121 = icmp eq %struct.optab* %binoptab.addr.0, %16
  %or.cond2661 = or i1 %or.cond, %cmp121
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 6), align 16, !tbaa !0
  %cmp124 = icmp eq %struct.optab* %binoptab.addr.0, %17
  %or.cond2662 = or i1 %or.cond2661, %cmp124
  %18 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 7), align 8, !tbaa !0
  %cmp127 = icmp eq %struct.optab* %binoptab.addr.0, %18
  %or.cond2663 = or i1 %or.cond2662, %cmp127
  br i1 %or.cond2663, label %if.then129, label %if.end160

if.then129:                                       ; preds = %if.end110
  %cmp130 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp130, label %cond.true137, label %lor.lhs.false132

lor.lhs.false132:                                 ; preds = %if.then129
  %19 = bitcast %struct.rtx_def* %target.addr.0 to i32*
  %bf.load133 = load i32* %19, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 61
  br i1 %cmp135, label %cond.true137, label %cond.false150

cond.true137:                                     ; preds = %lor.lhs.false132, %if.then129
  %20 = bitcast %struct.rtx_def* %op1.addr.2 to i32*
  %bf.load138 = load i32* %20, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp eq i32 %bf.clear139, 61
  br i1 %cmp140, label %land.lhs.true142, label %lor.lhs.false147

land.lhs.true142:                                 ; preds = %cond.true137
  %21 = bitcast %struct.rtx_def* %op0.addr.1 to i32*
  %bf.load143 = load i32* %21, align 8
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp ne i32 %bf.clear144, 61
  %cmp148 = icmp eq %struct.rtx_def* %target.addr.0, %op1.addr.2
  %or.cond2664 = or i1 %cmp145, %cmp148
  br i1 %or.cond2664, label %if.then158, label %lor.lhs.false153

lor.lhs.false147:                                 ; preds = %cond.true137
  %cmp148.old = icmp eq %struct.rtx_def* %target.addr.0, %op1.addr.2
  br i1 %cmp148.old, label %if.then158, label %lor.lhs.false153

cond.false150:                                    ; preds = %lor.lhs.false132
  %call151 = tail call i32 @rtx_equal_p(%struct.rtx_def* %op1.addr.2, %struct.rtx_def* %target.addr.0) #8
  %tobool152 = icmp eq i32 %call151, 0
  br i1 %tobool152, label %lor.lhs.false153, label %if.then158

lor.lhs.false153:                                 ; preds = %cond.false150, %lor.lhs.false147, %land.lhs.true142
  %22 = bitcast %struct.rtx_def* %op0.addr.1 to i32*
  %bf.load154 = load i32* %22, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 54
  br i1 %cmp156, label %if.then158, label %if.end160

if.then158:                                       ; preds = %land.lhs.true142, %cond.false150, %lor.lhs.false153, %lor.lhs.false147
  br label %if.end160

if.end160:                                        ; preds = %if.end110, %lor.lhs.false153, %if.then158
  %commutative_op.0 = phi i32 [ 1, %if.then158 ], [ 1, %lor.lhs.false153 ], [ 0, %if.end110 ]
  %op1.addr.3 = phi %struct.rtx_def* [ %op0.addr.1, %if.then158 ], [ %op1.addr.2, %lor.lhs.false153 ], [ %op1.addr.2, %if.end110 ]
  %op0.addr.2 = phi %struct.rtx_def* [ %op1.addr.2, %if.then158 ], [ %op0.addr.1, %lor.lhs.false153 ], [ %op0.addr.1, %if.end110 ]
  br i1 %cmp161, label %if.end342, label %land.lhs.true163

land.lhs.true163:                                 ; preds = %if.end160
  %insn_code = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom, i32 0
  %23 = load i32* %insn_code, align 4, !tbaa !6
  %cmp166 = icmp eq i32 %23, 1317
  br i1 %cmp166, label %if.end342, label %if.then168

if.then168:                                       ; preds = %land.lhs.true163
  %idxprom173 = sext i32 %23 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom173, i32 3
  %24 = load %struct.insn_operand_data** %operand, align 8, !tbaa !0
  %mode176 = getelementptr inbounds %struct.insn_operand_data* %24, i64 1, i32 2
  %25 = bitcast [2 x i8]* %mode176 to i16*
  %bf.load177 = load i16* %25, align 8
  %bf.cast = zext i16 %bf.load177 to i32
  %mode182 = getelementptr inbounds %struct.insn_operand_data* %24, i64 2, i32 2
  %26 = bitcast [2 x i8]* %mode182 to i16*
  %bf.load183 = load i16* %26, align 8
  %bf.cast184 = zext i16 %bf.load183 to i32
  %tobool185 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %tobool185, label %if.else, label %if.end188

if.else:                                          ; preds = %if.then168
  %call187 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end188

if.end188:                                        ; preds = %if.then168, %if.else
  %temp.0 = phi %struct.rtx_def* [ %call187, %if.else ], [ %target.addr.0, %if.then168 ]
  %tobool189 = icmp eq i32 %commutative_op.0, 0
  br i1 %tobool189, label %if.end215, label %if.then190

if.then190:                                       ; preds = %if.end188
  %27 = bitcast %struct.rtx_def* %op0.addr.2 to i32*
  %bf.load191 = load i32* %27, align 8
  %bf.lshr = lshr i32 %bf.load191, 16
  %bf.clear192 = and i32 %bf.lshr, 255
  %cmp193 = icmp eq i32 %bf.clear192, %bf.cast
  br i1 %cmp193, label %if.end215, label %land.lhs.true195

land.lhs.true195:                                 ; preds = %if.then190
  %28 = bitcast %struct.rtx_def* %op1.addr.3 to i32*
  %bf.load196 = load i32* %28, align 8
  %bf.lshr197 = lshr i32 %bf.load196, 16
  %bf.clear198 = and i32 %bf.lshr197, 255
  %cmp199 = icmp ne i32 %bf.clear198, %bf.cast184
  %cmp205 = icmp eq i32 %bf.clear192, %bf.cast184
  %or.cond2665 = and i1 %cmp199, %cmp205
  %cmp211 = icmp eq i32 %bf.clear198, %bf.cast
  %or.cond2666 = and i1 %or.cond2665, %cmp211
  %op0.addr.2.op1.addr.3 = select i1 %or.cond2666, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.3
  %op1.addr.3.op0.addr.2 = select i1 %or.cond2666, %struct.rtx_def* %op1.addr.3, %struct.rtx_def* %op0.addr.2
  br label %if.end215

if.end215:                                        ; preds = %if.end188, %land.lhs.true195, %if.then190
  %xop1.0 = phi %struct.rtx_def* [ %op1.addr.3, %if.then190 ], [ %op0.addr.2.op1.addr.3, %land.lhs.true195 ], [ %op1.addr.3, %if.end188 ]
  %xop0.0 = phi %struct.rtx_def* [ %op0.addr.2, %if.then190 ], [ %op1.addr.3.op0.addr.2, %land.lhs.true195 ], [ %op0.addr.2, %if.end188 ]
  %29 = bitcast %struct.rtx_def* %xop0.0 to i32*
  %bf.load216 = load i32* %29, align 8
  %bf.lshr217 = lshr i32 %bf.load216, 16
  %bf.clear218 = and i32 %bf.lshr217, 255
  %cmp219 = icmp ne i32 %bf.clear218, %bf.cast
  %cmp222 = icmp ne i16 %bf.load177, 0
  %or.cond1778 = and i1 %cmp219, %cmp222
  br i1 %or.cond1778, label %if.then224, label %if.end250

if.then224:                                       ; preds = %if.end215
  %cmp228 = icmp eq i32 %bf.clear218, 0
  br i1 %cmp228, label %cond.false234, label %cond.end247

cond.false234:                                    ; preds = %if.then224
  %30 = load i8* %arrayidx236, align 1, !tbaa !1
  %idxprom238 = zext i16 %bf.load177 to i64
  %arrayidx239 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom238
  %31 = load i8* %arrayidx239, align 1, !tbaa !1
  %cmp241 = icmp ugt i8 %30, %31
  %cond246 = select i1 %cmp241, i32 %mode, i32 %bf.cast
  br label %cond.end247

cond.end247:                                      ; preds = %if.then224, %cond.false234
  %cond248 = phi i32 [ %cond246, %cond.false234 ], [ %bf.clear218, %if.then224 ]
  %call249 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast, i32 %cond248, %struct.rtx_def* %xop0.0, i32 %unsignedp) #8
  br label %if.end250

if.end250:                                        ; preds = %if.end215, %cond.end247
  %xop0.1 = phi %struct.rtx_def* [ %call249, %cond.end247 ], [ %xop0.0, %if.end215 ]
  %32 = bitcast %struct.rtx_def* %xop1.0 to i32*
  %bf.load251 = load i32* %32, align 8
  %bf.lshr252 = lshr i32 %bf.load251, 16
  %bf.clear253 = and i32 %bf.lshr252, 255
  %cmp254 = icmp ne i32 %bf.clear253, %bf.cast184
  %cmp257 = icmp ne i16 %bf.load183, 0
  %or.cond1779 = and i1 %cmp254, %cmp257
  br i1 %or.cond1779, label %if.then259, label %if.end287

if.then259:                                       ; preds = %if.end250
  %cmp263 = icmp eq i32 %bf.clear253, 0
  br i1 %cmp263, label %cond.false269, label %cond.end284

cond.false269:                                    ; preds = %if.then259
  %33 = load i8* %arrayidx236, align 1, !tbaa !1
  %idxprom273 = zext i16 %bf.load183 to i64
  %arrayidx274 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom273
  %34 = load i8* %arrayidx274, align 1, !tbaa !1
  %cmp276.not = icmp ule i8 %33, %34
  %brmerge2667 = or i1 %cmp276.not, %4
  %bf.cast184.mode = select i1 %brmerge2667, i32 %bf.cast184, i32 %mode
  br label %cond.end284

cond.end284:                                      ; preds = %cond.false269, %if.then259
  %cond285 = phi i32 [ %bf.clear253, %if.then259 ], [ %bf.cast184.mode, %cond.false269 ]
  %call286 = tail call %struct.rtx_def* @convert_modes(i32 %bf.cast184, i32 %cond285, %struct.rtx_def* %xop1.0, i32 %unsignedp) #8
  br label %if.end287

if.end287:                                        ; preds = %cond.end284, %if.end250
  %xop1.1 = phi %struct.rtx_def* [ %call286, %cond.end284 ], [ %xop1.0, %if.end250 ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %24, i64 1, i32 0
  %35 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !0
  %call292 = tail call i32 %35(%struct.rtx_def* %xop0.1, i32 %bf.cast) #8
  %tobool293 = icmp eq i32 %call292, 0
  %or.cond1780 = and i1 %tobool293, %cmp222
  br i1 %or.cond1780, label %if.then297, label %if.end299

if.then297:                                       ; preds = %if.end287
  %call298 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.1) #8
  br label %if.end299

if.end299:                                        ; preds = %if.end287, %if.then297
  %xop0.2 = phi %struct.rtx_def* [ %call298, %if.then297 ], [ %xop0.1, %if.end287 ]
  %predicate304 = getelementptr inbounds %struct.insn_operand_data* %24, i64 2, i32 0
  %36 = load i32 (%struct.rtx_def*, i32)** %predicate304, align 8, !tbaa !0
  %call305 = tail call i32 %36(%struct.rtx_def* %xop1.1, i32 %bf.cast184) #8
  %tobool306 = icmp eq i32 %call305, 0
  %or.cond1781 = and i1 %tobool306, %cmp257
  br i1 %or.cond1781, label %if.then310, label %if.end312

if.then310:                                       ; preds = %if.end299
  %call311 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast184, %struct.rtx_def* %xop1.1) #8
  br label %if.end312

if.end312:                                        ; preds = %if.end299, %if.then310
  %xop1.2 = phi %struct.rtx_def* [ %call311, %if.then310 ], [ %xop1.1, %if.end299 ]
  %predicate317 = getelementptr inbounds %struct.insn_operand_data* %24, i64 0, i32 0
  %37 = load i32 (%struct.rtx_def*, i32)** %predicate317, align 8, !tbaa !0
  %call318 = tail call i32 %37(%struct.rtx_def* %temp.0, i32 %mode) #8
  %tobool319 = icmp eq i32 %call318, 0
  br i1 %tobool319, label %if.then320, label %if.end322

if.then320:                                       ; preds = %if.end312
  %call321 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end322

if.end322:                                        ; preds = %if.end312, %if.then320
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end312 ], [ %call321, %if.then320 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom173, i32 2
  %38 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !0
  %call325 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %38(%struct.rtx_def* %temp.1, %struct.rtx_def* %xop0.2, %struct.rtx_def* %xop1.2) #8
  %tobool326 = icmp eq %struct.rtx_def* %call325, null
  br i1 %tobool326, label %if.else340, label %if.then327

if.then327:                                       ; preds = %if.end322
  %39 = bitcast %struct.rtx_def* %call325 to i32*
  %bf.load328 = load i32* %39, align 8
  %bf.clear329 = and i32 %bf.load328, 65535
  %cmp330 = icmp eq i32 %bf.clear329, 24
  br i1 %cmp330, label %land.lhs.true332, label %if.end338

land.lhs.true332:                                 ; preds = %if.then327
  %40 = load i32* %code112, align 4, !tbaa !4
  %call334 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call325, %struct.rtx_def* %temp.1, i32 %40, %struct.rtx_def* %xop0.2, %struct.rtx_def* %xop1.2) #7
  %tobool335 = icmp eq i32 %call334, 0
  br i1 %tobool335, label %if.then336, label %if.end338

if.then336:                                       ; preds = %land.lhs.true332
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  br label %tailrecurse

if.end338:                                        ; preds = %land.lhs.true332, %if.then327
  %call339 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call325) #8
  br label %return

if.else340:                                       ; preds = %if.end322
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  br label %if.end342

if.end342:                                        ; preds = %land.lhs.true163, %if.end160, %if.else340
  %op1.addr.5 = phi %struct.rtx_def* [ %xop1.0, %if.else340 ], [ %op1.addr.3, %if.end160 ], [ %op1.addr.3, %land.lhs.true163 ]
  %op0.addr.4 = phi %struct.rtx_def* [ %xop0.0, %if.else340 ], [ %op0.addr.2, %if.end160 ], [ %op0.addr.2, %land.lhs.true163 ]
  %41 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !0
  %cmp343 = icmp eq %struct.optab* %binoptab.addr.0, %41
  br i1 %cmp343, label %land.lhs.true345, label %if.end388

land.lhs.true345:                                 ; preds = %if.end342
  %arrayidx347 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %42 = load i8* %arrayidx347, align 1, !tbaa !1
  %conv348 = zext i8 %42 to i32
  %cmp349 = icmp eq i8 %42, 0
  br i1 %cmp349, label %if.end388, label %land.lhs.true351

land.lhs.true351:                                 ; preds = %land.lhs.true345
  %idxprom355 = zext i8 %42 to i64
  %tobool356 = icmp ne i32 %unsignedp, 0
  %43 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !0
  %44 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !0
  %cond360 = select i1 %tobool356, %struct.optab* %43, %struct.optab* %44
  %insn_code363 = getelementptr inbounds %struct.optab* %cond360, i64 0, i32 1, i64 %idxprom355, i32 0
  %45 = load i32* %insn_code363, align 4, !tbaa !6
  %cmp364 = icmp eq i32 %45, 1317
  br i1 %cmp364, label %if.end388, label %if.then366

if.then366:                                       ; preds = %land.lhs.true351
  %call375 = tail call %struct.rtx_def* @expand_binop(i32 %conv348, %struct.optab* %cond360, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* null, i32 %unsignedp, i32 0) #7
  %cmp376 = icmp eq %struct.rtx_def* %call375, null
  br i1 %cmp376, label %if.end388, label %if.then378

if.then378:                                       ; preds = %if.then366
  %cmp381 = icmp eq i32 %2, 1
  br i1 %cmp381, label %if.then383, label %if.else385

if.then383:                                       ; preds = %if.then378
  %call384 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call375) #8
  br label %return

if.else385:                                       ; preds = %if.then378
  %call386 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* %call375, i32 %unsignedp) #8
  br label %return

if.end388:                                        ; preds = %if.then366, %land.lhs.true351, %land.lhs.true345, %if.end342
  %cmp389 = icmp eq i32 %2, 1
  %.off = add i32 %2, -1
  %46 = icmp ult i32 %.off, 2
  %cmp395 = icmp eq i32 %2, 6
  %or.cond1783 = or i1 %46, %cmp395
  %47 = icmp ugt i32 %methods, 1
  %or.cond2668 = and i1 %or.cond1783, %47
  br i1 %or.cond2668, label %for.cond.preheader, label %if.end494

for.cond.preheader:                               ; preds = %if.end388
  %wider_mode.0.in.in2851 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.0.in2852 = load i8* %wider_mode.0.in.in2851, align 1
  %cmp4072854 = icmp eq i8 %wider_mode.0.in2852, 0
  br i1 %cmp4072854, label %if.end494, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tobool429 = icmp ne i32 %unsignedp, 0
  %. = zext i1 %cmp389 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %wider_mode.02856.in = phi i8 [ %wider_mode.0.in2852, %for.body.lr.ph ], [ %wider_mode.0.in, %for.cond.backedge ]
  %wider_mode.02856 = zext i8 %wider_mode.02856.in to i32
  %idxprom409 = zext i8 %wider_mode.02856.in to i64
  %insn_code412 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom409, i32 0
  %48 = load i32* %insn_code412, align 4, !tbaa !6
  %cmp413 = icmp eq i32 %48, 1317
  %49 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !0
  br i1 %cmp413, label %lor.lhs.false415, label %if.then439

lor.lhs.false415:                                 ; preds = %for.body
  %cmp416 = icmp eq %struct.optab* %binoptab.addr.0, %49
  br i1 %cmp416, label %land.lhs.true418, label %for.cond.backedge

land.lhs.true418:                                 ; preds = %lor.lhs.false415
  %arrayidx420 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom409
  %50 = load i8* %arrayidx420, align 1, !tbaa !1
  %cmp422 = icmp eq i8 %50, 0
  br i1 %cmp422, label %for.cond.backedge, label %land.lhs.true424

land.lhs.true424:                                 ; preds = %land.lhs.true418
  %idxprom428 = zext i8 %50 to i64
  %51 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !0
  %52 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !0
  %cond433 = select i1 %tobool429, %struct.optab* %51, %struct.optab* %52
  %insn_code436 = getelementptr inbounds %struct.optab* %cond433, i64 0, i32 1, i64 %idxprom428, i32 0
  %53 = load i32* %insn_code436, align 4, !tbaa !6
  %cmp437 = icmp eq i32 %53, 1317
  br i1 %cmp437, label %for.cond.backedge, label %if.then439

for.cond.backedge:                                ; preds = %lor.lhs.false415, %land.lhs.true424, %land.lhs.true418, %if.else488
  %wider_mode.0.in.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom409
  %wider_mode.0.in = load i8* %wider_mode.0.in.in, align 1
  %cmp407 = icmp eq i8 %wider_mode.0.in, 0
  br i1 %cmp407, label %if.end494, label %for.body

if.then439:                                       ; preds = %for.body, %land.lhs.true424
  %54 = phi %struct.optab* [ %binoptab.addr.0, %land.lhs.true424 ], [ %49, %for.body ]
  %55 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !0
  %cmp445 = icmp eq %struct.optab* %binoptab.addr.0, %55
  %56 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16, !tbaa !0
  %cmp448 = icmp eq %struct.optab* %binoptab.addr.0, %56
  %or.cond2669 = or i1 %cmp445, %cmp448
  %57 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !0
  %cmp451 = icmp eq %struct.optab* %binoptab.addr.0, %57
  %or.cond2670 = or i1 %or.cond2669, %cmp451
  %58 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %cmp454 = icmp eq %struct.optab* %binoptab.addr.0, %58
  %or.cond2671 = or i1 %or.cond2670, %cmp454
  %59 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %cmp457 = icmp eq %struct.optab* %binoptab.addr.0, %59
  %or.cond2672 = or i1 %or.cond2671, %cmp457
  %cmp460 = icmp eq %struct.optab* %binoptab.addr.0, %54
  %or.cond2673 = or i1 %or.cond2672, %cmp460
  %60 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cmp463 = icmp eq %struct.optab* %binoptab.addr.0, %60
  %or.cond2674 = or i1 %or.cond2673, %cmp463
  br i1 %or.cond2674, label %if.end469, label %if.end469.thread

if.end469.thread:                                 ; preds = %if.then439
  %call4702776 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.02856, i32 %mode, i32 %unsignedp, i32 0) #7
  br label %land.end

if.end469:                                        ; preds = %if.then439
  %call470 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.02856, i32 %mode, i32 %unsignedp, i32 %.) #7
  br i1 %cmp389, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end469
  %61 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cmp472 = icmp ne %struct.optab* %binoptab.addr.0, %61
  br label %land.end

land.end:                                         ; preds = %if.end469, %if.end469.thread, %land.rhs
  %call4702778 = phi %struct.rtx_def* [ %call470, %if.end469 ], [ %call470, %land.rhs ], [ %call4702776, %if.end469.thread ]
  %62 = phi i1 [ false, %if.end469 ], [ %cmp472, %land.rhs ], [ false, %if.end469.thread ]
  %land.ext = zext i1 %62 to i32
  %call474 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op1.addr.5, i32 %wider_mode.02856, i32 %mode, i32 %unsignedp, i32 %land.ext) #7
  %call475 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.02856, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call4702778, %struct.rtx_def* %call474, %struct.rtx_def* null, i32 %unsignedp, i32 0) #7
  %tobool476 = icmp eq %struct.rtx_def* %call475, null
  br i1 %tobool476, label %if.else488, label %if.then477

if.then477:                                       ; preds = %land.end
  br i1 %cmp389, label %if.else486, label %if.then480

if.then480:                                       ; preds = %if.then477
  %cmp481 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp481, label %if.then483, label %if.end485

if.then483:                                       ; preds = %if.then480
  %call484 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end485

if.end485:                                        ; preds = %if.then483, %if.then480
  %target.addr.1 = phi %struct.rtx_def* [ %call484, %if.then483 ], [ %target.addr.0, %if.then480 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %call475, i32 0) #8
  br label %return

if.else486:                                       ; preds = %if.then477
  %call487 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call475) #8
  br label %return

if.else488:                                       ; preds = %land.end
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  br label %for.cond.backedge

if.end494:                                        ; preds = %for.cond.preheader, %for.cond.backedge, %if.end388
  %63 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16, !tbaa !0
  %cmp495 = icmp eq %struct.optab* %binoptab.addr.0, %63
  %64 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !0
  %cmp498 = icmp eq %struct.optab* %binoptab.addr.0, %64
  %or.cond2675 = or i1 %cmp495, %cmp498
  %65 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !0
  %cmp501 = icmp eq %struct.optab* %binoptab.addr.0, %65
  %or.cond2676 = or i1 %or.cond2675, %cmp501
  %or.cond2676.not = xor i1 %or.cond2676, true
  %cmp389.not = xor i1 %cmp389, true
  %brmerge2677 = or i1 %or.cond2676.not, %cmp389.not
  br i1 %brmerge2677, label %if.end586, label %land.lhs.true506

land.lhs.true506:                                 ; preds = %if.end494
  %66 = load i8* %arrayidx236, align 1, !tbaa !1
  %conv509 = zext i8 %66 to i32
  %67 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %67, 23
  %68 = and i32 %and, 4
  %69 = add i32 %68, 4
  %cmp512 = icmp ugt i32 %conv509, %69
  br i1 %cmp512, label %land.lhs.true514, label %if.end586

land.lhs.true514:                                 ; preds = %land.lhs.true506
  %70 = load i32* @word_mode, align 4, !tbaa !7
  %idxprom515 = sext i32 %70 to i64
  %insn_code518 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom515, i32 0
  %71 = load i32* %insn_code518, align 4, !tbaa !6
  %cmp519 = icmp eq i32 %71, 1317
  br i1 %cmp519, label %if.end586, label %if.then521

if.then521:                                       ; preds = %land.lhs.true514
  %cmp525 = icmp eq %struct.rtx_def* %target.addr.0, null
  %cmp528 = icmp eq %struct.rtx_def* %target.addr.0, %op0.addr.4
  %or.cond2678 = or i1 %cmp525, %cmp528
  %cmp531 = icmp eq %struct.rtx_def* %target.addr.0, %op1.addr.5
  %or.cond2679 = or i1 %or.cond2678, %cmp531
  br i1 %or.cond2679, label %if.then533, label %if.end535

if.then533:                                       ; preds = %if.then521
  %call534 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end535

if.end535:                                        ; preds = %if.then521, %if.then533
  %target.addr.2 = phi %struct.rtx_def* [ %call534, %if.then533 ], [ %target.addr.0, %if.then521 ]
  tail call void @start_sequence() #8
  %arrayidx538 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %72 = load i16* %arrayidx538, align 2, !tbaa !8
  %conv5392844 = zext i16 %72 to i32
  %73 = load i32* @target_flags, align 4, !tbaa !5
  %and5402845 = lshr i32 %73, 20
  %74 = and i32 %and5402845, 32
  %75 = add i32 %74, 32
  %div2846 = sdiv i32 %conv5392844, %75
  %cmp5432847 = icmp sgt i32 %div2846, 0
  br i1 %cmp5432847, label %for.body545, label %for.end562

for.body545:                                      ; preds = %if.end535, %for.inc561
  %i.02848 = phi i32 [ %inc, %for.inc561 ], [ 0, %if.end535 ]
  %call547 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.2, i32 %i.02848, i32 1, i32 %mode) #8
  %76 = load i32* @word_mode, align 4, !tbaa !7
  %call549 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %i.02848, i32 %mode) #8
  %call550 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.5, i32 %i.02848, i32 %mode) #8
  %call551 = tail call %struct.rtx_def* @expand_binop(i32 %76, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call549, %struct.rtx_def* %call550, %struct.rtx_def* %call547, i32 %unsignedp, i32 %cond) #7
  %cmp552 = icmp eq %struct.rtx_def* %call551, null
  br i1 %cmp552, label %for.end562, label %if.end555

if.end555:                                        ; preds = %for.body545
  %cmp556 = icmp eq %struct.rtx_def* %call547, %call551
  br i1 %cmp556, label %for.inc561, label %if.then558

if.then558:                                       ; preds = %if.end555
  %call559 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call547, %struct.rtx_def* %call551) #8
  br label %for.inc561

for.inc561:                                       ; preds = %if.end555, %if.then558
  %inc = add nsw i32 %i.02848, 1
  %77 = load i32* @target_flags, align 4, !tbaa !5
  %and540 = lshr i32 %77, 20
  %78 = and i32 %and540, 32
  %79 = add i32 %78, 32
  %div = sdiv i32 %conv5392844, %79
  %cmp543 = icmp slt i32 %inc, %div
  br i1 %cmp543, label %for.body545, label %for.end562

for.end562:                                       ; preds = %for.inc561, %for.body545, %if.end535
  %i.0.lcssa = phi i32 [ 0, %if.end535 ], [ %i.02848, %for.body545 ], [ %inc, %for.inc561 ]
  %call563 = tail call %struct.rtx_def* @get_insns() #8
  tail call void @end_sequence() #8
  %80 = load i32* @target_flags, align 4, !tbaa !5
  %and567 = lshr i32 %80, 20
  %81 = and i32 %and567, 32
  %82 = add i32 %81, 32
  %div570 = sdiv i32 %conv5392844, %82
  %cmp571 = icmp eq i32 %i.0.lcssa, %div570
  br i1 %cmp571, label %if.then573, label %if.end586

if.then573:                                       ; preds = %for.end562
  %83 = load i32* %code112, align 4, !tbaa !4
  %cmp575 = icmp eq i32 %83, 0
  br i1 %cmp575, label %if.end583, label %if.then577

if.then577:                                       ; preds = %if.then573
  %call579 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.4) #8
  %call580 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1.addr.5) #8
  %call581 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %83, i32 %mode, %struct.rtx_def* %call579, %struct.rtx_def* %call580) #8
  br label %if.end583

if.end583:                                        ; preds = %if.then573, %if.then577
  %equiv_value.0 = phi %struct.rtx_def* [ %call581, %if.then577 ], [ null, %if.then573 ]
  %call584 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call563, %struct.rtx_def* %target.addr.2, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value.0) #7
  br label %return

if.end586:                                        ; preds = %if.end494, %land.lhs.true514, %for.end562, %land.lhs.true506
  %target.addr.3 = phi %struct.rtx_def* [ %target.addr.2, %for.end562 ], [ %target.addr.0, %land.lhs.true514 ], [ %target.addr.0, %land.lhs.true506 ], [ %target.addr.0, %if.end494 ]
  %84 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !0
  %cmp587 = icmp eq %struct.optab* %binoptab.addr.0, %84
  %85 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cmp590 = icmp eq %struct.optab* %binoptab.addr.0, %85
  %or.cond2680 = or i1 %cmp587, %cmp590
  %86 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !0
  %cmp593 = icmp eq %struct.optab* %binoptab.addr.0, %86
  %or.cond2681 = or i1 %or.cond2680, %cmp593
  %or.cond2681.not = xor i1 %or.cond2681, true
  %brmerge2683 = or i1 %or.cond2681.not, %cmp389.not
  br i1 %brmerge2683, label %if.end784, label %land.lhs.true598

land.lhs.true598:                                 ; preds = %if.end586
  %87 = bitcast %struct.rtx_def* %op1.addr.5 to i32*
  %bf.load599 = load i32* %87, align 8
  %bf.clear600 = and i32 %bf.load599, 65535
  %cmp601 = icmp eq i32 %bf.clear600, 54
  br i1 %cmp601, label %land.lhs.true603, label %if.end784

land.lhs.true603:                                 ; preds = %land.lhs.true598
  %88 = load i8* %arrayidx236, align 1, !tbaa !1
  %conv606 = zext i8 %88 to i32
  %89 = load i32* @target_flags, align 4, !tbaa !5
  %90 = lshr i32 %89, 22
  %91 = and i32 %90, 8
  %mul = add i32 %91, 8
  %cmp610 = icmp eq i32 %conv606, %mul
  br i1 %cmp610, label %land.lhs.true612, label %if.end784

land.lhs.true612:                                 ; preds = %land.lhs.true603
  %92 = load i32* @word_mode, align 4, !tbaa !7
  %idxprom613 = sext i32 %92 to i64
  %insn_code616 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom613, i32 0
  %93 = load i32* %insn_code616, align 4, !tbaa !6
  %cmp617 = icmp eq i32 %93, 1317
  br i1 %cmp617, label %if.end784, label %land.lhs.true619

land.lhs.true619:                                 ; preds = %land.lhs.true612
  %insn_code623 = getelementptr inbounds %struct.optab* %85, i64 0, i32 1, i64 %idxprom613, i32 0
  %94 = load i32* %insn_code623, align 4, !tbaa !6
  %cmp624 = icmp eq i32 %94, 1317
  br i1 %cmp624, label %if.end784, label %land.lhs.true626

land.lhs.true626:                                 ; preds = %land.lhs.true619
  %insn_code630 = getelementptr inbounds %struct.optab* %84, i64 0, i32 1, i64 %idxprom613, i32 0
  %95 = load i32* %insn_code630, align 4, !tbaa !6
  %cmp631 = icmp eq i32 %95, 1317
  br i1 %cmp631, label %if.end784, label %if.then633

if.then633:                                       ; preds = %land.lhs.true626
  %cmp646 = icmp eq %struct.rtx_def* %target.addr.3, null
  %cmp649 = icmp eq %struct.rtx_def* %target.addr.3, %op0.addr.4
  %or.cond2684 = or i1 %cmp646, %cmp649
  %cmp652 = icmp eq %struct.rtx_def* %target.addr.3, %op1.addr.5
  %or.cond2685 = or i1 %or.cond2684, %cmp652
  br i1 %or.cond2685, label %if.then654, label %if.end656

if.then654:                                       ; preds = %if.then633
  %call655 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end656

if.end656:                                        ; preds = %if.then633, %if.then654
  %target.addr.4 = phi %struct.rtx_def* [ %call655, %if.then654 ], [ %target.addr.3, %if.then633 ]
  tail call void @start_sequence() #8
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1.addr.5, i64 0, i32 1, i64 0, i32 0
  %96 = load i64* %rtwint, align 8, !tbaa !9
  %conv658 = trunc i64 %96 to i32
  %97 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cmp659 = icmp eq %struct.optab* %binoptab.addr.0, %97
  %conv660 = zext i1 %cmp659 to i32
  %xor = xor i32 %conv660, 1
  %call661 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.4, i32 %xor, i32 1, i32 %mode) #8
  %call662 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.4, i32 %conv660, i32 1, i32 %mode) #8
  %call663 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %xor, i32 %mode) #8
  %call665 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %conv660, i32 %mode) #8
  %98 = load i32* @target_flags, align 4, !tbaa !5
  %and666 = lshr i32 %98, 20
  %99 = and i32 %and666, 32
  %100 = add i32 %99, 32
  %cmp669 = icmp slt i32 %conv658, %100
  br i1 %cmp669, label %if.else716, label %if.then671

if.then671:                                       ; preds = %if.end656
  %101 = load i32* @word_mode, align 4, !tbaa !7
  %sub675 = sub nsw i32 %conv658, %100
  %conv676 = sext i32 %sub675 to i64
  %call677 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv676) #8
  %call678 = tail call %struct.rtx_def* @expand_binop(i32 %101, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call663, %struct.rtx_def* %call677, %struct.rtx_def* %call662, i32 %unsignedp, i32 %cond) #7
  %cmp679 = icmp ne %struct.rtx_def* %call678, null
  %cmp679.not = xor i1 %cmp679, true
  %cmp682 = icmp eq %struct.rtx_def* %call678, %call662
  %or.cond2686 = or i1 %cmp682, %cmp679.not
  br i1 %or.cond2686, label %if.end686, label %if.then684

if.then684:                                       ; preds = %if.then671
  %call685 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call662, %struct.rtx_def* %call678) #8
  br label %if.end686

if.end686:                                        ; preds = %if.then671, %if.then684
  %102 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !0
  %cmp690 = icmp eq %struct.optab* %binoptab.addr.0, %102
  %or.cond2688 = or i1 %cmp690, %cmp679.not
  br i1 %or.cond2688, label %if.else695, label %if.then692

if.then692:                                       ; preds = %if.end686
  %103 = load i32* @word_mode, align 4, !tbaa !7
  %idxprom693 = sext i32 %103 to i64
  %arrayidx694 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom693
  %104 = load %struct.rtx_def** %arrayidx694, align 8, !tbaa !0
  br label %if.end707

if.else695:                                       ; preds = %if.end686
  br i1 %cmp679, label %if.then698, label %if.end769

if.then698:                                       ; preds = %if.else695
  %105 = load i32* @word_mode, align 4, !tbaa !7
  %106 = load i32* @target_flags, align 4, !tbaa !5
  %and699 = lshr i32 %106, 20
  %107 = and i32 %and699, 32
  %sub7022658 = or i32 %107, 31
  %conv7032659 = zext i32 %sub7022658 to i64
  %call704 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv7032659) #8
  %call705 = tail call %struct.rtx_def* @expand_binop(i32 %105, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call663, %struct.rtx_def* %call704, %struct.rtx_def* %call661, i32 %unsignedp, i32 %cond) #7
  br label %if.end707

if.end707:                                        ; preds = %if.then698, %if.then692
  %inter.0 = phi %struct.rtx_def* [ %104, %if.then692 ], [ %call705, %if.then698 ]
  %cmp708 = icmp eq %struct.rtx_def* %inter.0, null
  %cmp711 = icmp eq %struct.rtx_def* %inter.0, %call661
  %or.cond2689 = or i1 %cmp708, %cmp711
  br i1 %or.cond2689, label %if.end769, label %if.then713

if.then713:                                       ; preds = %if.end707
  %call714 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call661, %struct.rtx_def* %inter.0) #8
  br label %if.end769

if.else716:                                       ; preds = %if.end656
  %108 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !0
  %109 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cond724 = select i1 %cmp659, %struct.optab* %108, %struct.optab* %109
  %110 = load i32* @word_mode, align 4, !tbaa !7
  %sub733 = sub nsw i32 %100, %conv658
  %conv734 = sext i32 %sub733 to i64
  %call735 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv734) #8
  %call736 = tail call %struct.rtx_def* @expand_binop(i32 %110, %struct.optab* %cond724, %struct.rtx_def* %call663, %struct.rtx_def* %call735, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #7
  %cmp737 = icmp eq %struct.rtx_def* %call736, null
  br i1 %cmp737, label %if.end769, label %if.end742

if.end742:                                        ; preds = %if.else716
  %cond729 = select i1 %cmp659, %struct.optab* %109, %struct.optab* %108
  %111 = load i32* @word_mode, align 4, !tbaa !7
  %call741 = tail call %struct.rtx_def* @expand_binop(i32 %111, %struct.optab* %cond729, %struct.rtx_def* %call665, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #7
  %cmp743 = icmp eq %struct.rtx_def* %call741, null
  br i1 %cmp743, label %if.end769, label %if.end747

if.end747:                                        ; preds = %if.end742
  %112 = load i32* @word_mode, align 4, !tbaa !7
  %113 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !0
  %call746 = tail call %struct.rtx_def* @expand_binop(i32 %112, %struct.optab* %113, %struct.rtx_def* %call736, %struct.rtx_def* %call741, %struct.rtx_def* %call662, i32 %unsignedp, i32 %cond) #7
  %cmp748 = icmp ne %struct.rtx_def* %call746, null
  %cmp748.not = xor i1 %cmp748, true
  %cmp751 = icmp eq %struct.rtx_def* %call746, %call662
  %or.cond2690 = or i1 %cmp751, %cmp748.not
  br i1 %or.cond2690, label %if.end755, label %if.then753

if.then753:                                       ; preds = %if.end747
  %call754 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call662, %struct.rtx_def* %call746) #8
  br i1 %cmp748, label %if.end760, label %if.end769

if.end755:                                        ; preds = %if.end747
  br i1 %cmp748, label %if.end760, label %if.end769

if.end760:                                        ; preds = %if.end755, %if.then753
  %114 = load i32* @word_mode, align 4, !tbaa !7
  %call759 = tail call %struct.rtx_def* @expand_binop(i32 %114, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call663, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %call661, i32 %unsignedp, i32 %cond) #7
  %cmp761 = icmp eq %struct.rtx_def* %call759, null
  %cmp764 = icmp eq %struct.rtx_def* %call759, %call661
  %or.cond2691 = or i1 %cmp761, %cmp764
  br i1 %or.cond2691, label %if.end769, label %if.then766

if.then766:                                       ; preds = %if.end760
  %call767 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call661, %struct.rtx_def* %call759) #8
  br label %if.end769

if.end769:                                        ; preds = %if.end755, %if.else716, %if.end742, %if.then753, %if.else695, %if.end707, %if.end760, %if.then766, %if.then713
  %inter.4 = phi %struct.rtx_def* [ %inter.0, %if.then713 ], [ %inter.0, %if.end707 ], [ %call759, %if.then766 ], [ %call759, %if.end760 ], [ null, %if.else695 ], [ null, %if.then753 ], [ null, %if.end742 ], [ null, %if.else716 ], [ null, %if.end755 ]
  %call770 = tail call %struct.rtx_def* @get_insns() #8
  tail call void @end_sequence() #8
  %cmp771 = icmp eq %struct.rtx_def* %inter.4, null
  br i1 %cmp771, label %if.end784, label %if.then773

if.then773:                                       ; preds = %if.end769
  %115 = load i32* %code112, align 4, !tbaa !4
  %cmp775 = icmp eq i32 %115, 0
  br i1 %cmp775, label %if.end781, label %if.then777

if.then777:                                       ; preds = %if.then773
  %call779 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %115, i32 %mode, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5) #8
  br label %if.end781

if.end781:                                        ; preds = %if.then773, %if.then777
  %equiv_value638.0 = phi %struct.rtx_def* [ %call779, %if.then777 ], [ null, %if.then773 ]
  %call782 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call770, %struct.rtx_def* %target.addr.4, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value638.0) #7
  br label %return

if.end784:                                        ; preds = %if.end586, %if.end769, %land.lhs.true626, %land.lhs.true619, %land.lhs.true612, %land.lhs.true603, %land.lhs.true598
  %target.addr.5 = phi %struct.rtx_def* [ %target.addr.4, %if.end769 ], [ %target.addr.3, %land.lhs.true626 ], [ %target.addr.3, %land.lhs.true619 ], [ %target.addr.3, %land.lhs.true612 ], [ %target.addr.3, %land.lhs.true603 ], [ %target.addr.3, %land.lhs.true598 ], [ %target.addr.3, %if.end586 ]
  %116 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 24), align 16, !tbaa !0
  %117 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 25), align 8, !tbaa !0
  %notlhs = icmp ne %struct.optab* %binoptab.addr.0, %116
  %notrhs = icmp ne %struct.optab* %binoptab.addr.0, %117
  %or.cond2692.not = and i1 %notrhs, %notlhs
  %brmerge2694 = or i1 %or.cond2692.not, %cmp389.not
  br i1 %brmerge2694, label %if.end1001, label %land.lhs.true793

land.lhs.true793:                                 ; preds = %if.end784
  %118 = bitcast %struct.rtx_def* %op1.addr.5 to i32*
  %bf.load794 = load i32* %118, align 8
  %bf.clear795 = and i32 %bf.load794, 65535
  %cmp796 = icmp eq i32 %bf.clear795, 54
  br i1 %cmp796, label %land.lhs.true798, label %if.end1001

land.lhs.true798:                                 ; preds = %land.lhs.true793
  %119 = load i8* %arrayidx236, align 1, !tbaa !1
  %conv801 = zext i8 %119 to i32
  %120 = load i32* @target_flags, align 4, !tbaa !5
  %121 = lshr i32 %120, 22
  %122 = and i32 %121, 8
  %mul805 = add i32 %122, 8
  %cmp806 = icmp eq i32 %conv801, %mul805
  br i1 %cmp806, label %land.lhs.true808, label %if.end1001

land.lhs.true808:                                 ; preds = %land.lhs.true798
  %123 = load i32* @word_mode, align 4, !tbaa !7
  %idxprom809 = sext i32 %123 to i64
  %124 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %insn_code812 = getelementptr inbounds %struct.optab* %124, i64 0, i32 1, i64 %idxprom809, i32 0
  %125 = load i32* %insn_code812, align 4, !tbaa !6
  %cmp813 = icmp eq i32 %125, 1317
  br i1 %cmp813, label %if.end1001, label %land.lhs.true815

land.lhs.true815:                                 ; preds = %land.lhs.true808
  %126 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !0
  %insn_code819 = getelementptr inbounds %struct.optab* %126, i64 0, i32 1, i64 %idxprom809, i32 0
  %127 = load i32* %insn_code819, align 4, !tbaa !6
  %cmp820 = icmp eq i32 %127, 1317
  br i1 %cmp820, label %if.end1001, label %if.then822

if.then822:                                       ; preds = %land.lhs.true815
  %cmp843 = icmp eq %struct.rtx_def* %target.addr.5, null
  %cmp846 = icmp eq %struct.rtx_def* %target.addr.5, %op0.addr.4
  %or.cond2695 = or i1 %cmp843, %cmp846
  %cmp849 = icmp eq %struct.rtx_def* %target.addr.5, %op1.addr.5
  %or.cond2696 = or i1 %or.cond2695, %cmp849
  br i1 %or.cond2696, label %if.then851, label %if.end853

if.then851:                                       ; preds = %if.then822
  %call852 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end853

if.end853:                                        ; preds = %if.then822, %if.then851
  %target.addr.6 = phi %struct.rtx_def* [ %call852, %if.then851 ], [ %target.addr.5, %if.then822 ]
  tail call void @start_sequence() #8
  %rtwint856 = getelementptr inbounds %struct.rtx_def* %op1.addr.5, i64 0, i32 1, i64 0, i32 0
  %128 = load i64* %rtwint856, align 8, !tbaa !9
  %conv857 = trunc i64 %128 to i32
  %129 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 24), align 16, !tbaa !0
  %cmp858 = icmp eq %struct.optab* %binoptab.addr.0, %129
  %conv859 = zext i1 %cmp858 to i32
  %xor860 = xor i32 %conv859, 1
  %call861 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.6, i32 %xor860, i32 1, i32 %mode) #8
  %call863 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.6, i32 %conv859, i32 1, i32 %mode) #8
  %call864 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %xor860, i32 %mode) #8
  %call866 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 %conv859, i32 %mode) #8
  %130 = load i32* @target_flags, align 4, !tbaa !5
  %and867 = lshr i32 %130, 20
  %131 = and i32 %and867, 32
  %132 = add i32 %131, 32
  %cmp870 = icmp eq i32 %conv857, %132
  br i1 %cmp870, label %if.then872, label %if.else875

if.then872:                                       ; preds = %if.end853
  %call873 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call861, %struct.rtx_def* %call866) #8
  %call874 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call863, %struct.rtx_def* %call864) #8
  %133 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  br label %if.end977

if.else875:                                       ; preds = %if.end853
  %cmp889 = icmp slt i32 %conv857, %132
  %xor8912657 = xor i1 %cmp858, %cmp889
  %134 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !0
  %135 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cond896 = select i1 %xor8912657, %struct.optab* %134, %struct.optab* %135
  %cond907 = select i1 %xor8912657, %struct.optab* %135, %struct.optab* %134
  %cmp911 = icmp sgt i32 %conv857, %132
  br i1 %cmp911, label %if.then913, label %if.else927

if.then913:                                       ; preds = %if.else875
  %sub917 = sub nsw i32 %conv857, %132
  %conv918 = sext i32 %sub917 to i64
  %call919 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv918) #8
  %136 = load i32* @target_flags, align 4, !tbaa !5
  %137 = lshr i32 %136, 19
  %138 = and i32 %137, 64
  %mul923 = sub i32 64, %conv857
  %sub924 = add i32 %mul923, %138
  %conv925 = sext i32 %sub924 to i64
  %call926 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv925) #8
  br label %if.end936

if.else927:                                       ; preds = %if.else875
  %sub931 = sub nsw i32 %132, %conv857
  %conv932 = sext i32 %sub931 to i64
  %call933 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv932) #8
  %sext = shl i64 %128, 32
  %conv934 = ashr exact i64 %sext, 32
  %call935 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv934) #8
  br label %if.end936

if.end936:                                        ; preds = %if.else927, %if.then913
  %second_shift_count.0 = phi %struct.rtx_def* [ %call926, %if.then913 ], [ %call935, %if.else927 ]
  %first_shift_count.0 = phi %struct.rtx_def* [ %call919, %if.then913 ], [ %call933, %if.else927 ]
  %139 = load i32* @word_mode, align 4, !tbaa !7
  %call937 = tail call %struct.rtx_def* @expand_binop(i32 %139, %struct.optab* %cond907, %struct.rtx_def* %call864, %struct.rtx_def* %first_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #7
  %140 = load i32* @word_mode, align 4, !tbaa !7
  %call938 = tail call %struct.rtx_def* @expand_binop(i32 %140, %struct.optab* %cond896, %struct.rtx_def* %call866, %struct.rtx_def* %second_shift_count.0, %struct.rtx_def* %call863, i32 %unsignedp, i32 %cond) #7
  %cmp939 = icmp eq %struct.rtx_def* %call937, null
  %cmp942 = icmp eq %struct.rtx_def* %call938, null
  %or.cond2697 = or i1 %cmp939, %cmp942
  br i1 %or.cond2697, label %if.end955, label %if.end947

if.end947:                                        ; preds = %if.end936
  %141 = load i32* @word_mode, align 4, !tbaa !7
  %142 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !0
  %call945 = tail call %struct.rtx_def* @expand_binop(i32 %141, %struct.optab* %142, %struct.rtx_def* %call937, %struct.rtx_def* %call938, %struct.rtx_def* %call863, i32 %unsignedp, i32 %cond) #7
  %cmp948.not = icmp eq %struct.rtx_def* %call945, null
  %cmp951 = icmp eq %struct.rtx_def* %call945, %call863
  %or.cond2698 = or i1 %cmp948.not, %cmp951
  br i1 %or.cond2698, label %if.end955, label %if.then953

if.then953:                                       ; preds = %if.end947
  %call954 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call863, %struct.rtx_def* %call945) #8
  br label %if.end955

if.end955:                                        ; preds = %if.end936, %if.end947, %if.then953
  %cmp948.not2797 = phi i1 [ %cmp948.not, %if.end947 ], [ false, %if.then953 ], [ true, %if.end936 ]
  %inter836.02796 = phi %struct.rtx_def* [ %call945, %if.end947 ], [ %call945, %if.then953 ], [ null, %if.end936 ]
  %143 = load i32* @word_mode, align 4, !tbaa !7
  %call956 = tail call %struct.rtx_def* @expand_binop(i32 %143, %struct.optab* %cond907, %struct.rtx_def* %call866, %struct.rtx_def* %first_shift_count.0, %struct.rtx_def* null, i32 %unsignedp, i32 %cond) #7
  %144 = load i32* @word_mode, align 4, !tbaa !7
  %call957 = tail call %struct.rtx_def* @expand_binop(i32 %144, %struct.optab* %cond896, %struct.rtx_def* %call864, %struct.rtx_def* %second_shift_count.0, %struct.rtx_def* %call861, i32 %unsignedp, i32 %cond) #7
  %cmp961 = icmp eq %struct.rtx_def* %call956, null
  %or.cond2700 = or i1 %cmp948.not2797, %cmp961
  %cmp964 = icmp eq %struct.rtx_def* %call957, null
  %or.cond2701 = or i1 %or.cond2700, %cmp964
  br i1 %or.cond2701, label %if.end968, label %if.then966

if.then966:                                       ; preds = %if.end955
  %145 = load i32* @word_mode, align 4, !tbaa !7
  %146 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !0
  %call967 = tail call %struct.rtx_def* @expand_binop(i32 %145, %struct.optab* %146, %struct.rtx_def* %call956, %struct.rtx_def* %call957, %struct.rtx_def* %call861, i32 %unsignedp, i32 %cond) #7
  br label %if.end968

if.end968:                                        ; preds = %if.end955, %if.then966
  %inter836.1 = phi %struct.rtx_def* [ %call967, %if.then966 ], [ %inter836.02796, %if.end955 ]
  %cmp969 = icmp eq %struct.rtx_def* %inter836.1, null
  %cmp972 = icmp eq %struct.rtx_def* %inter836.1, %call861
  %or.cond2702 = or i1 %cmp969, %cmp972
  br i1 %or.cond2702, label %if.end977, label %if.then974

if.then974:                                       ; preds = %if.end968
  %call975 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call861, %struct.rtx_def* %inter836.1) #8
  br label %if.end977

if.end977:                                        ; preds = %if.end968, %if.then974, %if.then872
  %inter836.2 = phi %struct.rtx_def* [ %133, %if.then872 ], [ %inter836.1, %if.then974 ], [ %inter836.1, %if.end968 ]
  %call978 = tail call %struct.rtx_def* @get_insns() #8
  tail call void @end_sequence() #8
  %cmp979 = icmp eq %struct.rtx_def* %inter836.2, null
  br i1 %cmp979, label %if.end1001, label %if.then981

if.then981:                                       ; preds = %if.end977
  %147 = load i32* %code112, align 4, !tbaa !4
  %cmp983 = icmp eq i32 %147, 0
  br i1 %cmp983, label %if.end989, label %if.then985

if.then985:                                       ; preds = %if.then981
  %call987 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %147, i32 %mode, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5) #8
  br label %if.end989

if.end989:                                        ; preds = %if.then981, %if.then985
  %equiv_value826.0 = phi %struct.rtx_def* [ %call987, %if.then985 ], [ null, %if.then981 ]
  %148 = load i32* @target_flags, align 4, !tbaa !5
  %and990 = lshr i32 %148, 20
  %149 = and i32 %and990, 32
  %150 = add i32 %149, 32
  %cmp993 = icmp eq i32 %conv857, %150
  br i1 %cmp993, label %if.else997, label %if.then995

if.then995:                                       ; preds = %if.end989
  %call996 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call978, %struct.rtx_def* %target.addr.6, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value826.0) #7
  br label %return

if.else997:                                       ; preds = %if.end989
  %call998 = tail call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call978) #8
  br label %return

if.end1001:                                       ; preds = %if.end784, %if.end977, %land.lhs.true815, %land.lhs.true808, %land.lhs.true798, %land.lhs.true793
  %target.addr.7 = phi %struct.rtx_def* [ %target.addr.6, %if.end977 ], [ %target.addr.5, %land.lhs.true815 ], [ %target.addr.5, %land.lhs.true808 ], [ %target.addr.5, %land.lhs.true798 ], [ %target.addr.5, %land.lhs.true793 ], [ %target.addr.5, %if.end784 ]
  %151 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %152 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %notlhs2833 = icmp ne %struct.optab* %binoptab.addr.0, %151
  %notrhs2834 = icmp ne %struct.optab* %binoptab.addr.0, %152
  %or.cond2703.not = and i1 %notrhs2834, %notlhs2833
  %brmerge2705 = or i1 %or.cond2703.not, %cmp389.not
  br i1 %brmerge2705, label %if.end1166, label %land.lhs.true1010

land.lhs.true1010:                                ; preds = %if.end1001
  %153 = load i8* %arrayidx236, align 1, !tbaa !1
  %conv1013 = zext i8 %153 to i32
  %154 = load i32* @target_flags, align 4, !tbaa !5
  %and1014 = and i32 %154, 33554432
  %155 = lshr exact i32 %and1014, 22
  %mul1017 = add i32 %155, 8
  %cmp1018 = icmp ult i32 %conv1013, %mul1017
  br i1 %cmp1018, label %if.end1166, label %land.lhs.true1020

land.lhs.true1020:                                ; preds = %land.lhs.true1010
  %156 = load i32* @word_mode, align 4, !tbaa !7
  %idxprom1021 = sext i32 %156 to i64
  %insn_code1024 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1021, i32 0
  %157 = load i32* %insn_code1024, align 4, !tbaa !6
  %cmp1025 = icmp eq i32 %157, 1317
  br i1 %cmp1025, label %if.end1166, label %if.then1027

if.then1027:                                      ; preds = %land.lhs.true1020
  %arrayidx1039 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %158 = load i16* %arrayidx1039, align 2, !tbaa !8
  %conv1040 = zext i16 %158 to i32
  %159 = lshr exact i32 %and1014, 20
  %160 = add i32 %159, 32
  %div1044 = sdiv i32 %conv1040, %160
  %call1052 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0.addr.4) #8
  %call1053 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op1.addr.5) #8
  %cmp1054 = icmp eq %struct.rtx_def* %target.addr.7, null
  br i1 %cmp1054, label %if.then1067, label %lor.lhs.false1056

lor.lhs.false1056:                                ; preds = %if.then1027
  %161 = bitcast %struct.rtx_def* %target.addr.7 to i32*
  %bf.load1057 = load i32* %161, align 8
  %bf.clear1058 = and i32 %bf.load1057, 65535
  %cmp1059 = icmp ne i32 %bf.clear1058, 61
  %cmp1062 = icmp eq %struct.rtx_def* %target.addr.7, %call1052
  %or.cond2706 = or i1 %cmp1059, %cmp1062
  %cmp1065 = icmp eq %struct.rtx_def* %target.addr.7, %call1053
  %or.cond2707 = or i1 %or.cond2706, %cmp1065
  br i1 %or.cond2707, label %if.then1067, label %if.end1069

if.then1067:                                      ; preds = %lor.lhs.false1056, %if.then1027
  %call1068 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  %.phi.trans.insert = bitcast %struct.rtx_def* %call1068 to i32*
  %bf.load1070.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end1069

if.end1069:                                       ; preds = %lor.lhs.false1056, %if.then1067
  %bf.load1070 = phi i32 [ %bf.load1070.pre, %if.then1067 ], [ %bf.load1057, %lor.lhs.false1056 ]
  %target.addr.8 = phi %struct.rtx_def* [ %call1068, %if.then1067 ], [ %target.addr.7, %lor.lhs.false1056 ]
  %bf.clear1071 = and i32 %bf.load1070, 65535
  %cmp1072 = icmp eq i32 %bf.clear1071, 61
  br i1 %cmp1072, label %if.then1074, label %for.cond1078.preheader

if.then1074:                                      ; preds = %if.end1069
  %call1075 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target.addr.8) #8
  %call1076 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1075) #8
  br label %for.cond1078.preheader

for.cond1078.preheader:                           ; preds = %if.then1074, %if.end1069
  %cmp10792841 = icmp eq i32 %div1044, 0
  br i1 %cmp10792841, label %for.end1137, label %for.body1081

for.body1081:                                     ; preds = %for.cond1078.preheader, %for.cond1078.backedge
  %i1029.02843 = phi i32 [ %add, %for.cond1078.backedge ], [ 0, %for.cond1078.preheader ]
  %carry_out.02842 = phi %struct.rtx_def* [ %carry_out.0.be, %for.cond1078.backedge ], [ null, %for.cond1078.preheader ]
  %call1085 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.8, i32 %i1029.02843, i32 1, i32 %mode) #8
  %call1087 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call1052, i32 %i1029.02843, i32 %mode) #8
  %call1089 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call1053, i32 %i1029.02843, i32 %mode) #8
  %162 = load i32* @word_mode, align 4, !tbaa !7
  %call1092 = tail call %struct.rtx_def* @expand_binop(i32 %162, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1087, %struct.rtx_def* %call1089, %struct.rtx_def* %call1085, i32 %unsignedp, i32 %cond) #7
  %cmp1093 = icmp eq %struct.rtx_def* %call1092, null
  br i1 %cmp1093, label %for.end1137, label %if.end1096

if.end1096:                                       ; preds = %for.body1081
  %add = add nsw i32 %i1029.02843, 1
  %cmp1097 = icmp ult i32 %add, %div1044
  br i1 %cmp1097, label %if.then1099, label %if.end1105

if.then1099:                                      ; preds = %if.end1096
  %163 = load i32* @word_mode, align 4, !tbaa !7
  %call1100 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %163) #8
  %164 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %cmp1101 = icmp eq %struct.optab* %binoptab.addr.0, %164
  %cond1103 = select i1 %cmp1101, i32 107, i32 105
  %165 = load i32* @word_mode, align 4, !tbaa !7
  %call1104 = tail call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %call1100, i32 %cond1103, %struct.rtx_def* %call1092, %struct.rtx_def* %call1087, i32 %165, i32 1, i32 1) #8
  br label %if.end1105

if.end1105:                                       ; preds = %if.then1099, %if.end1096
  %carry_out.1 = phi %struct.rtx_def* [ %call1104, %if.then1099 ], [ %carry_out.02842, %if.end1096 ]
  %cmp1106 = icmp sgt i32 %i1029.02843, 0
  br i1 %cmp1106, label %if.then1108, label %for.cond1078.backedge

if.then1108:                                      ; preds = %if.end1105
  %166 = load i32* @word_mode, align 4, !tbaa !7
  %call1116 = tail call %struct.rtx_def* @expand_binop(i32 %166, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1092, %struct.rtx_def* %carry_out.02842, %struct.rtx_def* null, i32 1, i32 %cond) #7
  br i1 %cmp1097, label %if.then1120, label %if.end1132

if.then1120:                                      ; preds = %if.then1108
  %167 = load i32* @word_mode, align 4, !tbaa !7
  %call1122 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %167) #8
  %168 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %cmp1123 = icmp eq %struct.optab* %binoptab.addr.0, %168
  %cond1125 = select i1 %cmp1123, i32 107, i32 105
  %169 = load i32* @word_mode, align 4, !tbaa !7
  %call1126 = tail call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %call1122, i32 %cond1125, %struct.rtx_def* %call1116, %struct.rtx_def* %call1092, i32 %169, i32 1, i32 1) #8
  %170 = load i32* @word_mode, align 4, !tbaa !7
  %171 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !0
  %call1127 = tail call %struct.rtx_def* @expand_binop(i32 %170, %struct.optab* %171, %struct.rtx_def* %carry_out.1, %struct.rtx_def* %call1126, %struct.rtx_def* %carry_out.1, i32 0, i32 %cond) #7
  %cmp1128 = icmp eq %struct.rtx_def* %call1127, null
  br i1 %cmp1128, label %for.end1137, label %if.end1132

if.end1132:                                       ; preds = %if.then1120, %if.then1108
  %carry_out.2 = phi %struct.rtx_def* [ %call1127, %if.then1120 ], [ %carry_out.1, %if.then1108 ]
  %call1133 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1085, %struct.rtx_def* %call1116) #8
  br label %for.cond1078.backedge

for.cond1078.backedge:                            ; preds = %if.end1132, %if.end1105
  %carry_out.0.be = phi %struct.rtx_def* [ %carry_out.2, %if.end1132 ], [ %carry_out.1, %if.end1105 ]
  br i1 %cmp1097, label %for.body1081, label %for.end1137

for.end1137:                                      ; preds = %for.cond1078.backedge, %if.then1120, %for.body1081, %for.cond1078.preheader
  %i1029.0.lcssa = phi i32 [ 0, %for.cond1078.preheader ], [ %i1029.02843, %for.body1081 ], [ %i1029.02843, %if.then1120 ], [ %add, %for.cond1078.backedge ]
  %172 = load i32* @target_flags, align 4, !tbaa !5
  %and1141 = lshr i32 %172, 20
  %173 = and i32 %and1141, 32
  %174 = add i32 %173, 32
  %div1144 = sdiv i32 %conv1040, %174
  %cmp1145 = icmp eq i32 %i1029.0.lcssa, %div1144
  br i1 %cmp1145, label %if.then1147, label %if.else1164

if.then1147:                                      ; preds = %for.end1137
  %175 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !0
  %insn_code1151 = getelementptr inbounds %struct.optab* %175, i64 0, i32 1, i64 %idxprom, i32 0
  %176 = load i32* %insn_code1151, align 4, !tbaa !6
  %cmp1152 = icmp eq i32 %176, 1317
  br i1 %cmp1152, label %return, label %if.then1154

if.then1154:                                      ; preds = %if.then1147
  %call1157 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.8, %struct.rtx_def* %target.addr.8) #8
  %177 = load i32* %code112, align 4, !tbaa !4
  %call1159 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1052) #8
  %call1160 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1053) #8
  %call1161 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %177, i32 %mode, %struct.rtx_def* %call1159, %struct.rtx_def* %call1160) #8
  %call1162 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call1157, i32 4, %struct.rtx_def* %call1161) #8
  br label %return

if.else1164:                                      ; preds = %for.end1137
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  br label %if.end1166

if.end1166:                                       ; preds = %land.lhs.true1020, %land.lhs.true1010, %if.end1001, %if.else1164
  %target.addr.9 = phi %struct.rtx_def* [ %target.addr.8, %if.else1164 ], [ %target.addr.7, %if.end1001 ], [ %target.addr.7, %land.lhs.true1010 ], [ %target.addr.7, %land.lhs.true1020 ]
  %178 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !0
  %cmp1167.not = icmp ne %struct.optab* %binoptab.addr.0, %178
  %brmerge2709 = or i1 %cmp1167.not, %cmp389.not
  br i1 %brmerge2709, label %if.end1354, label %land.lhs.true1172

land.lhs.true1172:                                ; preds = %if.end1166
  %179 = load i8* %arrayidx236, align 1, !tbaa !1
  %conv1175 = zext i8 %179 to i32
  %180 = load i32* @target_flags, align 4, !tbaa !5
  %181 = lshr i32 %180, 22
  %182 = and i32 %181, 8
  %mul1179 = add i32 %182, 8
  %cmp1180 = icmp eq i32 %conv1175, %mul1179
  br i1 %cmp1180, label %land.lhs.true1182, label %if.end1354

land.lhs.true1182:                                ; preds = %land.lhs.true1172
  %183 = load i32* @word_mode, align 4, !tbaa !7
  %idxprom1183 = sext i32 %183 to i64
  %insn_code1186 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1183, i32 0
  %184 = load i32* %insn_code1186, align 4, !tbaa !6
  %cmp1187 = icmp eq i32 %184, 1317
  br i1 %cmp1187, label %if.end1354, label %land.lhs.true1189

land.lhs.true1189:                                ; preds = %land.lhs.true1182
  %185 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %insn_code1193 = getelementptr inbounds %struct.optab* %185, i64 0, i32 1, i64 %idxprom1183, i32 0
  %186 = load i32* %insn_code1193, align 4, !tbaa !6
  %cmp1194 = icmp eq i32 %186, 1317
  br i1 %cmp1194, label %if.end1354, label %land.lhs.true1196

land.lhs.true1196:                                ; preds = %land.lhs.true1189
  %187 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !0
  %insn_code1200 = getelementptr inbounds %struct.optab* %187, i64 0, i32 1, i64 %idxprom, i32 0
  %188 = load i32* %insn_code1200, align 4, !tbaa !6
  %cmp1201 = icmp eq i32 %188, 1317
  br i1 %cmp1201, label %lor.lhs.false1203, label %if.then1210

lor.lhs.false1203:                                ; preds = %land.lhs.true1196
  %189 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !0
  %insn_code1207 = getelementptr inbounds %struct.optab* %189, i64 0, i32 1, i64 %idxprom, i32 0
  %190 = load i32* %insn_code1207, align 4, !tbaa !6
  %cmp1208 = icmp eq i32 %190, 1317
  br i1 %cmp1208, label %if.end1354, label %if.then1210

if.then1210:                                      ; preds = %lor.lhs.false1203, %land.lhs.true1196
  %call1214 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 1, i32 %mode) #8
  %call1216 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0.addr.4, i32 0, i32 %mode) #8
  %call1218 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.5, i32 1, i32 %mode) #8
  %call1220 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op1.addr.5, i32 0, i32 %mode) #8
  %cmp1224 = icmp eq %struct.rtx_def* %target.addr.9, %op0.addr.4
  %cmp1227 = icmp eq %struct.rtx_def* %target.addr.9, %op1.addr.5
  %or.cond2710 = or i1 %cmp1224, %cmp1227
  br i1 %or.cond2710, label %if.then1237, label %lor.lhs.false1229

lor.lhs.false1229:                                ; preds = %if.then1210
  %cmp1230 = icmp eq %struct.rtx_def* %target.addr.9, null
  br i1 %cmp1230, label %if.end1238, label %land.lhs.true1232

land.lhs.true1232:                                ; preds = %lor.lhs.false1229
  %191 = bitcast %struct.rtx_def* %target.addr.9 to i32*
  %bf.load1233 = load i32* %191, align 8
  %bf.clear1234 = and i32 %bf.load1233, 65535
  %cmp1235 = icmp eq i32 %bf.clear1234, 61
  br i1 %cmp1235, label %if.end1238, label %if.then1237

if.then1237:                                      ; preds = %land.lhs.true1232, %if.then1210
  br label %if.end1238

if.end1238:                                       ; preds = %land.lhs.true1232, %lor.lhs.false1229, %if.then1237
  %target.addr.10 = phi %struct.rtx_def* [ null, %if.then1237 ], [ %target.addr.9, %land.lhs.true1232 ], [ null, %lor.lhs.false1229 ]
  %192 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !0
  %insn_code1242 = getelementptr inbounds %struct.optab* %192, i64 0, i32 1, i64 %idxprom, i32 0
  %193 = load i32* %insn_code1242, align 4, !tbaa !6
  %cmp1243 = icmp eq i32 %193, 1317
  br i1 %cmp1243, label %land.lhs.true1255, label %if.then1245

if.then1245:                                      ; preds = %if.end1238
  %call1246 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %192, %struct.rtx_def* %call1216, %struct.rtx_def* %call1220, %struct.rtx_def* %target.addr.10, i32 1, i32 0) #7
  %cmp1247 = icmp eq %struct.rtx_def* %call1246, null
  br i1 %cmp1247, label %if.then1249, label %if.end1293

if.then1249:                                      ; preds = %if.then1245
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  br label %land.lhs.true1255

land.lhs.true1255:                                ; preds = %if.then1249, %if.end1238
  %194 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !0
  %insn_code1259 = getelementptr inbounds %struct.optab* %194, i64 0, i32 1, i64 %idxprom, i32 0
  %195 = load i32* %insn_code1259, align 4, !tbaa !6
  %cmp1260 = icmp eq i32 %195, 1317
  br i1 %cmp1260, label %if.end1353, label %if.then1262

if.then1262:                                      ; preds = %land.lhs.true1255
  %196 = load i32* @target_flags, align 4, !tbaa !5
  %and1264 = lshr i32 %196, 20
  %197 = and i32 %and1264, 32
  %sub12672655 = or i32 %197, 31
  %conv12682656 = zext i32 %sub12672655 to i64
  %call1269 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv12682656) #8
  %198 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 16, !tbaa !0
  %call1270 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %198, %struct.rtx_def* %call1216, %struct.rtx_def* %call1220, %struct.rtx_def* %target.addr.10, i32 1, i32 0) #7
  %199 = load i32* @word_mode, align 4, !tbaa !7
  %200 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !0
  %call1271 = tail call %struct.rtx_def* @expand_binop(i32 %199, %struct.optab* %200, %struct.rtx_def* %call1216, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 1, i32 %cond) #7
  %tobool1272 = icmp eq %struct.rtx_def* %call1271, null
  %201 = load i32* @word_mode, align 4, !tbaa !7
  br i1 %tobool1272, label %if.else1275, label %if.then1273

if.then1273:                                      ; preds = %if.then1262
  %202 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %call1274 = tail call %struct.rtx_def* @expand_binop(i32 %201, %struct.optab* %202, %struct.rtx_def* %call1214, %struct.rtx_def* %call1271, %struct.rtx_def* %call1271, i32 0, i32 %cond) #7
  br label %if.end1281

if.else1275:                                      ; preds = %if.then1262
  %203 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !0
  %call1276 = tail call %struct.rtx_def* @expand_binop(i32 %201, %struct.optab* %203, %struct.rtx_def* %call1216, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 0, i32 %cond) #7
  %tobool1277 = icmp eq %struct.rtx_def* %call1276, null
  br i1 %tobool1277, label %if.end1281, label %if.then1278

if.then1278:                                      ; preds = %if.else1275
  %204 = load i32* @word_mode, align 4, !tbaa !7
  %205 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %call1279 = tail call %struct.rtx_def* @expand_binop(i32 %204, %struct.optab* %205, %struct.rtx_def* %call1214, %struct.rtx_def* %call1276, %struct.rtx_def* %call1276, i32 0, i32 %cond) #7
  br label %if.end1281

if.end1281:                                       ; preds = %if.else1275, %if.then1278, %if.then1273
  %op0_xhigh.1 = phi %struct.rtx_def* [ %call1274, %if.then1273 ], [ %call1279, %if.then1278 ], [ null, %if.else1275 ]
  %206 = load i32* @word_mode, align 4, !tbaa !7
  %207 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 16, !tbaa !0
  %call1282 = tail call %struct.rtx_def* @expand_binop(i32 %206, %struct.optab* %207, %struct.rtx_def* %call1220, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 1, i32 %cond) #7
  %tobool1283 = icmp eq %struct.rtx_def* %call1282, null
  %208 = load i32* @word_mode, align 4, !tbaa !7
  br i1 %tobool1283, label %if.else1286, label %if.then1284

if.then1284:                                      ; preds = %if.end1281
  %209 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %call1285 = tail call %struct.rtx_def* @expand_binop(i32 %208, %struct.optab* %209, %struct.rtx_def* %call1218, %struct.rtx_def* %call1282, %struct.rtx_def* %call1282, i32 0, i32 %cond) #7
  br label %if.end1293

if.else1286:                                      ; preds = %if.end1281
  %210 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !0
  %call1287 = tail call %struct.rtx_def* @expand_binop(i32 %208, %struct.optab* %210, %struct.rtx_def* %call1220, %struct.rtx_def* %call1269, %struct.rtx_def* null, i32 0, i32 %cond) #7
  %tobool1288 = icmp eq %struct.rtx_def* %call1287, null
  br i1 %tobool1288, label %if.end1353, label %if.then1289

if.then1289:                                      ; preds = %if.else1286
  %211 = load i32* @word_mode, align 4, !tbaa !7
  %212 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %call1290 = tail call %struct.rtx_def* @expand_binop(i32 %211, %struct.optab* %212, %struct.rtx_def* %call1218, %struct.rtx_def* %call1287, %struct.rtx_def* %call1287, i32 0, i32 %cond) #7
  br label %if.end1293

if.end1293:                                       ; preds = %if.then1245, %if.then1284, %if.then1289
  %product.1 = phi %struct.rtx_def* [ %call1270, %if.then1284 ], [ %call1270, %if.then1289 ], [ %call1246, %if.then1245 ]
  %op0_xhigh.2 = phi %struct.rtx_def* [ %op0_xhigh.1, %if.then1284 ], [ %op0_xhigh.1, %if.then1289 ], [ %call1214, %if.then1245 ]
  %op1_xhigh.1 = phi %struct.rtx_def* [ %call1285, %if.then1284 ], [ %call1290, %if.then1289 ], [ %call1218, %if.then1245 ]
  %tobool1294 = icmp eq %struct.rtx_def* %product.1, null
  %tobool1296 = icmp eq %struct.rtx_def* %op0_xhigh.2, null
  %or.cond2711 = or i1 %tobool1294, %tobool1296
  %tobool1298 = icmp eq %struct.rtx_def* %op1_xhigh.1, null
  %or.cond2712 = or i1 %or.cond2711, %tobool1298
  br i1 %or.cond2712, label %if.end1353, label %if.then1299

if.then1299:                                      ; preds = %if.end1293
  %call1301 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %product.1, i32 1, i32 1, i32 %mode) #8
  %213 = load i32* @word_mode, align 4, !tbaa !7
  %call1304 = tail call %struct.rtx_def* @expand_binop(i32 %213, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1216, %struct.rtx_def* %op1_xhigh.1, %struct.rtx_def* null, i32 0, i32 0) #7
  %cmp1305 = icmp eq %struct.rtx_def* %call1304, null
  br i1 %cmp1305, label %if.end1353, label %if.end1309

if.end1309:                                       ; preds = %if.then1299
  %214 = load i32* @word_mode, align 4, !tbaa !7
  %215 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %call1308 = tail call %struct.rtx_def* @expand_binop(i32 %214, %struct.optab* %215, %struct.rtx_def* %call1304, %struct.rtx_def* %call1301, %struct.rtx_def* %call1301, i32 0, i32 %cond) #7
  %cmp1310 = icmp ne %struct.rtx_def* %call1308, null
  %cmp1310.not = xor i1 %cmp1310, true
  %cmp1313 = icmp eq %struct.rtx_def* %call1308, %call1301
  %or.cond2713 = or i1 %cmp1313, %cmp1310.not
  br i1 %or.cond2713, label %if.end1317, label %if.then1315

if.then1315:                                      ; preds = %if.end1309
  %call1316 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1301, %struct.rtx_def* %call1308) #8
  br i1 %cmp1310, label %if.end1322, label %if.end1353

if.end1317:                                       ; preds = %if.end1309
  br i1 %cmp1310, label %if.end1322, label %if.end1353

if.end1322:                                       ; preds = %if.end1317, %if.then1315
  %216 = load i32* @word_mode, align 4, !tbaa !7
  %call1321 = tail call %struct.rtx_def* @expand_binop(i32 %216, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1220, %struct.rtx_def* %op0_xhigh.2, %struct.rtx_def* null, i32 0, i32 0) #7
  %cmp1323 = icmp eq %struct.rtx_def* %call1321, null
  br i1 %cmp1323, label %if.end1353, label %if.end1327

if.end1327:                                       ; preds = %if.end1322
  %217 = load i32* @word_mode, align 4, !tbaa !7
  %218 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %call1326 = tail call %struct.rtx_def* @expand_binop(i32 %217, %struct.optab* %218, %struct.rtx_def* %call1321, %struct.rtx_def* %call1301, %struct.rtx_def* %call1301, i32 0, i32 %cond) #7
  %cmp1328 = icmp ne %struct.rtx_def* %call1326, null
  %cmp1328.not = xor i1 %cmp1328, true
  %cmp1331 = icmp eq %struct.rtx_def* %call1326, %call1301
  %or.cond2714 = or i1 %cmp1331, %cmp1328.not
  br i1 %or.cond2714, label %if.end1335, label %if.then1333

if.then1333:                                      ; preds = %if.end1327
  %call1334 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1301, %struct.rtx_def* %call1326) #8
  br i1 %cmp1328, label %if.then1338, label %if.end1353

if.end1335:                                       ; preds = %if.end1327
  br i1 %cmp1328, label %if.then1338, label %if.end1353

if.then1338:                                      ; preds = %if.then1333, %if.end1335
  %219 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !0
  %insn_code1342 = getelementptr inbounds %struct.optab* %219, i64 0, i32 1, i64 %idxprom, i32 0
  %220 = load i32* %insn_code1342, align 4, !tbaa !6
  %cmp1343 = icmp eq i32 %220, 1317
  br i1 %cmp1343, label %return, label %if.then1345

if.then1345:                                      ; preds = %if.then1338
  %call1346 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %product.1, %struct.rtx_def* %product.1) #8
  %call1347 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.4) #8
  %call1348 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1.addr.5) #8
  %call1349 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %call1347, %struct.rtx_def* %call1348) #8
  %call1350 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call1346, i32 4, %struct.rtx_def* %call1349) #8
  br label %return

if.end1353:                                       ; preds = %if.end1317, %if.end1322, %if.then1299, %if.then1315, %if.else1286, %land.lhs.true1255, %if.then1333, %if.end1293, %if.end1335
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  br label %if.end1354

if.end1354:                                       ; preds = %if.end1166, %lor.lhs.false1203, %land.lhs.true1189, %land.lhs.true1182, %if.end1353, %land.lhs.true1172
  %target.addr.11 = phi %struct.rtx_def* [ %target.addr.10, %if.end1353 ], [ %target.addr.9, %lor.lhs.false1203 ], [ %target.addr.9, %land.lhs.true1189 ], [ %target.addr.9, %land.lhs.true1182 ], [ %target.addr.9, %land.lhs.true1172 ], [ %target.addr.9, %if.end1166 ]
  %.off2654 = add i32 %2, -5
  %221 = icmp ult i32 %.off2654, 2
  br i1 %221, label %if.then1360, label %if.end1627

if.then1360:                                      ; preds = %if.end1354
  %cmp1358 = icmp eq i32 %2, 5
  %arrayidx1374 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom
  %222 = load i8* %arrayidx1374, align 1, !tbaa !1
  %conv1375 = zext i8 %222 to i32
  %mul1376 = shl nuw nsw i32 %conv1375, 3
  %cond1379 = select i1 %cmp1358, i32 1, i32 2
  %call1380 = tail call i32 @mode_for_size(i32 %mul1376, i32 %cond1379, i32 0) #8
  %cmp1381 = icmp eq i32 %call1380, 51
  br i1 %cmp1381, label %if.then1383, label %if.end1384

if.then1383:                                      ; preds = %if.then1360
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1512, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

if.end1384:                                       ; preds = %if.then1360
  %tobool1385 = icmp eq %struct.rtx_def* %target.addr.11, null
  br i1 %tobool1385, label %if.then1386, label %if.end1388

if.then1386:                                      ; preds = %if.end1384
  %call1387 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end1388

if.end1388:                                       ; preds = %if.end1384, %if.then1386
  %target.addr.12 = phi %struct.rtx_def* [ %target.addr.11, %if.end1384 ], [ %call1387, %if.then1386 ]
  tail call void @start_sequence() #8
  %call1389 = tail call %struct.rtx_def* @gen_realpart(i32 %call1380, %struct.rtx_def* %target.addr.12) #8
  %call1390 = tail call %struct.rtx_def* @gen_imagpart(i32 %call1380, %struct.rtx_def* %target.addr.12) #8
  %223 = bitcast %struct.rtx_def* %op0.addr.4 to i32*
  %bf.load1391 = load i32* %223, align 8
  %bf.lshr1392 = lshr i32 %bf.load1391, 16
  %bf.clear1393 = and i32 %bf.lshr1392, 255
  %cmp1394 = icmp eq i32 %bf.clear1393, %mode
  br i1 %cmp1394, label %if.then1396, label %if.end1400

if.then1396:                                      ; preds = %if.end1388
  %call1397 = tail call %struct.rtx_def* @gen_realpart(i32 %call1380, %struct.rtx_def* %op0.addr.4) #8
  %call1398 = tail call %struct.rtx_def* @gen_imagpart(i32 %call1380, %struct.rtx_def* %op0.addr.4) #8
  br label %if.end1400

if.end1400:                                       ; preds = %if.end1388, %if.then1396
  %real0.0 = phi %struct.rtx_def* [ %call1397, %if.then1396 ], [ %op0.addr.4, %if.end1388 ]
  %imag0.0 = phi %struct.rtx_def* [ %call1398, %if.then1396 ], [ null, %if.end1388 ]
  %224 = bitcast %struct.rtx_def* %op1.addr.5 to i32*
  %bf.load1401 = load i32* %224, align 8
  %bf.lshr1402 = lshr i32 %bf.load1401, 16
  %bf.clear1403 = and i32 %bf.lshr1402, 255
  %cmp1404 = icmp eq i32 %bf.clear1403, %mode
  br i1 %cmp1404, label %if.then1406, label %if.end1410

if.then1406:                                      ; preds = %if.end1400
  %call1407 = tail call %struct.rtx_def* @gen_realpart(i32 %call1380, %struct.rtx_def* %op1.addr.5) #8
  %call1408 = tail call %struct.rtx_def* @gen_imagpart(i32 %call1380, %struct.rtx_def* %op1.addr.5) #8
  br label %if.end1410

if.end1410:                                       ; preds = %if.end1400, %if.then1406
  %real1.0 = phi %struct.rtx_def* [ %call1407, %if.then1406 ], [ %op1.addr.5, %if.end1400 ]
  %imag1.0 = phi %struct.rtx_def* [ %call1408, %if.then1406 ], [ null, %if.end1400 ]
  %cmp1411 = icmp eq %struct.rtx_def* %real0.0, null
  %cmp1414 = icmp eq %struct.rtx_def* %real1.0, null
  %or.cond2715 = or i1 %cmp1411, %cmp1414
  br i1 %or.cond2715, label %if.then1422, label %lor.lhs.false1416

lor.lhs.false1416:                                ; preds = %if.end1410
  %cmp1417 = icmp ne %struct.rtx_def* %imag0.0, null
  %cmp1417.not = xor i1 %cmp1417, true
  %cmp1420 = icmp eq %struct.rtx_def* %imag1.0, null
  %or.cond2716 = and i1 %cmp1420, %cmp1417.not
  br i1 %or.cond2716, label %if.then1422, label %if.end1423

if.then1422:                                      ; preds = %lor.lhs.false1416, %if.end1410
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1539, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

if.end1423:                                       ; preds = %lor.lhs.false1416
  %225 = load i32* %code112, align 4, !tbaa !4
  switch i32 %225, label %sw.default1610 [
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 78, label %sw.bb1470
    i32 79, label %sw.bb1565
  ]

sw.bb:                                            ; preds = %if.end1423, %if.end1423
  %call1425 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real0.0, %struct.rtx_def* %real1.0, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #7
  %cmp1426 = icmp eq %struct.rtx_def* %call1425, null
  br i1 %cmp1426, label %sw.epilog1611, label %if.else1429

if.else1429:                                      ; preds = %sw.bb
  %cmp1430 = icmp eq %struct.rtx_def* %call1425, %call1389
  br i1 %cmp1430, label %if.end1435, label %if.then1432

if.then1432:                                      ; preds = %if.else1429
  %call1433 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %call1425) #8
  br label %if.end1435

if.end1435:                                       ; preds = %if.else1429, %if.then1432
  %or.cond2718 = or i1 %cmp1420, %cmp1417.not
  br i1 %or.cond2718, label %if.else1441, label %if.then1439

if.then1439:                                      ; preds = %if.end1435
  %call1440 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag0.0, %struct.rtx_def* %imag1.0, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #7
  br label %if.end1459

if.else1441:                                      ; preds = %if.end1435
  br i1 %cmp1417, label %if.else1463, label %if.else1444

if.else1444:                                      ; preds = %if.else1441
  %226 = load i32* %code112, align 4, !tbaa !4
  %cmp1446 = icmp eq i32 %226, 76
  br i1 %cmp1446, label %if.then1448, label %if.end1459

if.then1448:                                      ; preds = %if.else1444
  %227 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !0
  %cmp1449 = icmp eq %struct.optab* %binoptab.addr.0, %227
  %228 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), align 8, !tbaa !0
  %229 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 16, !tbaa !0
  %cond1454 = select i1 %cmp1449, %struct.optab* %228, %struct.optab* %229
  %call1455 = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %cond1454, %struct.rtx_def* %imag1.0, %struct.rtx_def* %call1390, i32 %unsignedp) #7
  br label %if.end1459

if.end1459:                                       ; preds = %if.else1444, %if.then1448, %if.then1439
  %res.0 = phi %struct.rtx_def* [ %call1440, %if.then1439 ], [ %call1455, %if.then1448 ], [ %imag1.0, %if.else1444 ]
  %cmp1460 = icmp eq %struct.rtx_def* %res.0, null
  br i1 %cmp1460, label %sw.epilog1611, label %if.else1463

if.else1463:                                      ; preds = %if.else1441, %if.end1459
  %res.02822 = phi %struct.rtx_def* [ %res.0, %if.end1459 ], [ %imag0.0, %if.else1441 ]
  %cmp1464 = icmp eq %struct.rtx_def* %res.02822, %call1390
  br i1 %cmp1464, label %sw.epilog1611, label %if.then1466

if.then1466:                                      ; preds = %if.else1463
  %call1467 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.02822) #8
  br label %sw.epilog1611

sw.bb1470:                                        ; preds = %if.end1423
  %or.cond2720 = or i1 %cmp1420, %cmp1417.not
  %call1534 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real0.0) #8
  %call1535 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #8
  br i1 %or.cond2720, label %if.else1533, label %if.then1474

if.then1474:                                      ; preds = %sw.bb1470
  %call1479 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag0.0) #8
  %call1480 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag1.0) #8
  %call1481 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1534, %struct.rtx_def* %call1535, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #7
  %call1482 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1479, %struct.rtx_def* %call1480, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #7
  %cmp1483 = icmp eq %struct.rtx_def* %call1481, null
  %cmp1486 = icmp eq %struct.rtx_def* %call1482, null
  %or.cond2721 = or i1 %cmp1483, %cmp1486
  br i1 %or.cond2721, label %sw.epilog1611, label %if.end1489

if.end1489:                                       ; preds = %if.then1474
  %230 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), align 8, !tbaa !0
  %cmp1490 = icmp eq %struct.optab* %binoptab.addr.0, %230
  %231 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), align 8, !tbaa !0
  %232 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %cond1495 = select i1 %cmp1490, %struct.optab* %231, %struct.optab* %232
  %call1496 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %cond1495, %struct.rtx_def* %call1481, %struct.rtx_def* %call1482, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #7
  %cmp1497 = icmp eq %struct.rtx_def* %call1496, null
  br i1 %cmp1497, label %sw.epilog1611, label %if.else1500

if.else1500:                                      ; preds = %if.end1489
  %cmp1501 = icmp eq %struct.rtx_def* %call1496, %call1389
  br i1 %cmp1501, label %if.end1506, label %if.then1503

if.then1503:                                      ; preds = %if.else1500
  %call1504 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %call1496) #8
  br label %if.end1506

if.end1506:                                       ; preds = %if.else1500, %if.then1503
  %call1507 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1534, %struct.rtx_def* %call1480, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #7
  %call1508 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1535, %struct.rtx_def* %call1479, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #7
  %cmp1509 = icmp eq %struct.rtx_def* %call1507, null
  %cmp1512 = icmp eq %struct.rtx_def* %call1508, null
  %or.cond2722 = or i1 %cmp1509, %cmp1512
  br i1 %or.cond2722, label %sw.epilog1611, label %if.end1515

if.end1515:                                       ; preds = %if.end1506
  %233 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), align 8, !tbaa !0
  %cmp1516 = icmp eq %struct.optab* %binoptab.addr.0, %233
  %234 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), align 8, !tbaa !0
  %235 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %cond1521 = select i1 %cmp1516, %struct.optab* %234, %struct.optab* %235
  %call1522 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %cond1521, %struct.rtx_def* %call1507, %struct.rtx_def* %call1508, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #7
  %cmp1523 = icmp eq %struct.rtx_def* %call1522, null
  br i1 %cmp1523, label %sw.epilog1611, label %if.else1526

if.else1526:                                      ; preds = %if.end1515
  %cmp1527 = icmp eq %struct.rtx_def* %call1522, %call1390
  br i1 %cmp1527, label %sw.epilog1611, label %if.then1529

if.then1529:                                      ; preds = %if.else1526
  %call1530 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %call1522) #8
  br label %sw.epilog1611

if.else1533:                                      ; preds = %sw.bb1470
  %call1536 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1534, %struct.rtx_def* %call1535, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #7
  %cmp1537 = icmp eq %struct.rtx_def* %call1536, null
  br i1 %cmp1537, label %sw.epilog1611, label %if.else1540

if.else1540:                                      ; preds = %if.else1533
  %cmp1541 = icmp eq %struct.rtx_def* %call1536, %call1389
  br i1 %cmp1541, label %if.end1546, label %if.then1543

if.then1543:                                      ; preds = %if.else1540
  %call1544 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %call1536) #8
  br label %if.end1546

if.end1546:                                       ; preds = %if.else1540, %if.then1543
  br i1 %cmp1417, label %if.then1549, label %if.else1551

if.then1549:                                      ; preds = %if.end1546
  %call1550 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1535, %struct.rtx_def* %imag0.0, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #7
  br label %if.end1553

if.else1551:                                      ; preds = %if.end1546
  %call1552 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1534, %struct.rtx_def* %imag1.0, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #7
  br label %if.end1553

if.end1553:                                       ; preds = %if.else1551, %if.then1549
  %res.1 = phi %struct.rtx_def* [ %call1550, %if.then1549 ], [ %call1552, %if.else1551 ]
  %cmp1554 = icmp eq %struct.rtx_def* %res.1, null
  br i1 %cmp1554, label %sw.epilog1611, label %if.else1557

if.else1557:                                      ; preds = %if.end1553
  %cmp1558 = icmp eq %struct.rtx_def* %res.1, %call1390
  br i1 %cmp1558, label %sw.epilog1611, label %if.then1560

if.then1560:                                      ; preds = %if.else1557
  %call1561 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.1) #8
  br label %sw.epilog1611

sw.bb1565:                                        ; preds = %if.end1423
  br i1 %cmp1420, label %if.then1568, label %if.else1604

if.then1568:                                      ; preds = %sw.bb1565
  %call1569 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #8
  br i1 %cmp395, label %if.then1572, label %if.else1574

if.then1572:                                      ; preds = %if.then1568
  %call1573 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #7
  br label %if.end1576

if.else1574:                                      ; preds = %if.then1568
  %call1575 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1389, i32 %unsignedp) #8
  br label %if.end1576

if.end1576:                                       ; preds = %if.else1574, %if.then1572
  %res.2 = phi %struct.rtx_def* [ %call1573, %if.then1572 ], [ %call1575, %if.else1574 ]
  %cmp1577 = icmp eq %struct.rtx_def* %res.2, null
  br i1 %cmp1577, label %sw.epilog1611, label %if.else1580

if.else1580:                                      ; preds = %if.end1576
  %cmp1581 = icmp eq %struct.rtx_def* %res.2, %call1389
  br i1 %cmp1581, label %if.end1586, label %if.then1583

if.then1583:                                      ; preds = %if.else1580
  %call1584 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.2) #8
  br label %if.end1586

if.end1586:                                       ; preds = %if.else1580, %if.then1583
  br i1 %cmp395, label %if.then1589, label %if.else1591

if.then1589:                                      ; preds = %if.end1586
  %call1590 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #7
  br label %if.end1593

if.else1591:                                      ; preds = %if.end1586
  %call1592 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag0.0, %struct.rtx_def* %call1569, %struct.rtx_def* %call1390, i32 %unsignedp) #8
  br label %if.end1593

if.end1593:                                       ; preds = %if.else1591, %if.then1589
  %res.3 = phi %struct.rtx_def* [ %call1590, %if.then1589 ], [ %call1592, %if.else1591 ]
  %cmp1594 = icmp eq %struct.rtx_def* %res.3, null
  br i1 %cmp1594, label %sw.epilog1611, label %if.else1597

if.else1597:                                      ; preds = %if.end1593
  %cmp1598 = icmp eq %struct.rtx_def* %res.3, %call1390
  br i1 %cmp1598, label %sw.epilog1611, label %if.then1600

if.then1600:                                      ; preds = %if.else1597
  %call1601 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.3) #8
  br label %sw.epilog1611

if.else1604:                                      ; preds = %sw.bb1565
  %236 = load i32* @flag_complex_divide_method, align 4, !tbaa !5
  switch i32 %236, label %sw.default [
    i32 0, label %sw.bb1605
    i32 1, label %sw.bb1607
  ]

sw.bb1605:                                        ; preds = %if.else1604
  %237 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 11), align 8, !tbaa !0
  %cmp.i = icmp eq %struct.optab* %237, %binoptab.addr.0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %sw.bb1605
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %sw.bb1605
  %this_add_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), %sw.bb1605 ]
  %this_sub_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), %sw.bb1605 ]
  %this_neg_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), %sw.bb1605 ]
  %this_mul_optab.0.in.i = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), %if.then.i ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), %sw.bb1605 ]
  %this_mul_optab.0.i = load %struct.optab** %this_mul_optab.0.in.i, align 8
  %this_neg_optab.0.i = load %struct.optab** %this_neg_optab.0.in.i, align 8
  %this_sub_optab.0.i = load %struct.optab** %this_sub_optab.0.in.i, align 8
  %this_add_optab.0.i = load %struct.optab** %this_add_optab.0.in.i, align 8
  %call.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real0.0) #8
  %call1.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #8
  %cmp2.i = icmp eq %struct.rtx_def* %imag0.0, null
  br i1 %cmp2.i, label %if.end5.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %call4.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag0.0) #8
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then3.i, %if.end.i
  %imag0.addr.0.i = phi %struct.rtx_def* [ %call4.i, %if.then3.i ], [ null, %if.end.i ]
  %call6.i = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag1.0) #8
  %call7.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call1.i, %struct.rtx_def* %call1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %call8.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call6.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp9.i = icmp eq %struct.rtx_def* %call7.i, null
  %cmp10.i = icmp eq %struct.rtx_def* %call8.i, null
  %or.cond.i = or i1 %cmp9.i, %cmp10.i
  br i1 %or.cond.i, label %sw.epilog1611, label %if.end12.i

if.end12.i:                                       ; preds = %if.end5.i
  %call13.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i, %struct.rtx_def* %call7.i, %struct.rtx_def* %call8.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp14.i = icmp eq %struct.rtx_def* %call13.i, null
  br i1 %cmp14.i, label %sw.epilog1611, label %if.end16.i

if.end16.i:                                       ; preds = %if.end12.i
  %cmp17.i = icmp eq %struct.rtx_def* %imag0.addr.0.i, null
  %call19.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call.i, %struct.rtx_def* %call1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  br i1 %cmp17.i, label %if.then18.i, label %if.else.i

if.then18.i:                                      ; preds = %if.end16.i
  %call20.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp21.i = icmp eq %struct.rtx_def* %call19.i, null
  %cmp23.i = icmp eq %struct.rtx_def* %call20.i, null
  %or.cond174.i = or i1 %cmp21.i, %cmp23.i
  br i1 %or.cond174.i, label %sw.epilog1611, label %if.end25.i

if.end25.i:                                       ; preds = %if.then18.i
  %call26.i = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %this_neg_optab.0.i, %struct.rtx_def* %call20.i, %struct.rtx_def* null, i32 %unsignedp) #8
  br label %if.end48.i

if.else.i:                                        ; preds = %if.end16.i
  %call28.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %imag0.addr.0.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp29.i = icmp eq %struct.rtx_def* %call19.i, null
  %cmp31.i = icmp eq %struct.rtx_def* %call28.i, null
  %or.cond175.i = or i1 %cmp29.i, %cmp31.i
  br i1 %or.cond175.i, label %sw.epilog1611, label %if.end33.i

if.end33.i:                                       ; preds = %if.else.i
  %call34.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i, %struct.rtx_def* %call19.i, %struct.rtx_def* %call28.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %call35.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %imag0.addr.0.i, %struct.rtx_def* %call1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %call36.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i, %struct.rtx_def* %call.i, %struct.rtx_def* %call6.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp37.i = icmp eq %struct.rtx_def* %call35.i, null
  %cmp39.i = icmp eq %struct.rtx_def* %call36.i, null
  %or.cond176.i = or i1 %cmp37.i, %cmp39.i
  br i1 %or.cond176.i, label %sw.epilog1611, label %if.end41.i

if.end41.i:                                       ; preds = %if.end33.i
  %call42.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_sub_optab.0.i, %struct.rtx_def* %call35.i, %struct.rtx_def* %call36.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp43.i = icmp eq %struct.rtx_def* %call34.i, null
  %cmp45.i = icmp eq %struct.rtx_def* %call42.i, null
  %or.cond177.i = or i1 %cmp43.i, %cmp45.i
  br i1 %or.cond177.i, label %sw.epilog1611, label %if.end48.i

if.end48.i:                                       ; preds = %if.end41.i, %if.end25.i
  %real_t.0.i = phi %struct.rtx_def* [ %call19.i, %if.end25.i ], [ %call34.i, %if.end41.i ]
  %imag_t.0.i = phi %struct.rtx_def* [ %call26.i, %if.end25.i ], [ %call42.i, %if.end41.i ]
  br i1 %cmp395, label %if.then50.i, label %if.else52.i

if.then50.i:                                      ; preds = %if.end48.i
  %call51.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #8
  br label %if.end54.i

if.else52.i:                                      ; preds = %if.end48.i
  %call53.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1389, i32 %unsignedp) #8
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.else52.i, %if.then50.i
  %res.0.i = phi %struct.rtx_def* [ %call51.i, %if.then50.i ], [ %call53.i, %if.else52.i ]
  %cmp55.i = icmp eq %struct.rtx_def* %res.0.i, null
  br i1 %cmp55.i, label %sw.epilog1611, label %if.end57.i

if.end57.i:                                       ; preds = %if.end54.i
  %cmp58.i = icmp eq %struct.rtx_def* %res.0.i, %call1389
  br i1 %cmp58.i, label %if.end61.i, label %if.then59.i

if.then59.i:                                      ; preds = %if.end57.i
  %call60.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.0.i) #8
  br label %if.end61.i

if.end61.i:                                       ; preds = %if.then59.i, %if.end57.i
  br i1 %cmp395, label %if.then63.i, label %if.else65.i

if.then63.i:                                      ; preds = %if.end61.i
  %call64.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #8
  br label %if.end67.i

if.else65.i:                                      ; preds = %if.end61.i
  %call66.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag_t.0.i, %struct.rtx_def* %call13.i, %struct.rtx_def* %call1390, i32 %unsignedp) #8
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.else65.i, %if.then63.i
  %res.1.i = phi %struct.rtx_def* [ %call64.i, %if.then63.i ], [ %call66.i, %if.else65.i ]
  %cmp68.i = icmp eq %struct.rtx_def* %res.1.i, null
  br i1 %cmp68.i, label %sw.epilog1611, label %if.end70.i

if.end70.i:                                       ; preds = %if.end67.i
  %cmp71.i = icmp eq %struct.rtx_def* %res.1.i, %call1390
  br i1 %cmp71.i, label %sw.epilog1611, label %if.then72.i

if.then72.i:                                      ; preds = %if.end70.i
  %call73.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.1.i) #8
  br label %sw.epilog1611

sw.bb1607:                                        ; preds = %if.else1604
  %238 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 11), align 8, !tbaa !0
  %cmp.i2733 = icmp eq %struct.optab* %238, %binoptab.addr.0
  br i1 %cmp.i2733, label %if.then.i2734, label %if.end.i2746

if.then.i2734:                                    ; preds = %sw.bb1607
  br label %if.end.i2746

if.end.i2746:                                     ; preds = %if.then.i2734, %sw.bb1607
  %this_add_optab.0.in.i2735 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 1), %if.then.i2734 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), %sw.bb1607 ]
  %this_sub_optab.0.in.i2736 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 3), %if.then.i2734 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), %sw.bb1607 ]
  %this_neg_optab.0.in.i2737 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), %if.then.i2734 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), %sw.bb1607 ]
  %this_mul_optab.0.in.i2738 = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), %if.then.i2734 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), %sw.bb1607 ]
  %this_mul_optab.0.i2739 = load %struct.optab** %this_mul_optab.0.in.i2738, align 8
  %this_neg_optab.0.i2740 = load %struct.optab** %this_neg_optab.0.in.i2737, align 8
  %this_sub_optab.0.i2741 = load %struct.optab** %this_sub_optab.0.in.i2736, align 8
  %this_add_optab.0.i2742 = load %struct.optab** %this_add_optab.0.in.i2735, align 8
  %call.i2743 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real0.0) #8
  %call1.i2744 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %real1.0) #8
  %cmp2.i2745 = icmp eq %struct.rtx_def* %imag0.0, null
  br i1 %cmp2.i2745, label %if.end5.i2751, label %if.then3.i2748

if.then3.i2748:                                   ; preds = %if.end.i2746
  %call4.i2747 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag0.0) #8
  br label %if.end5.i2751

if.end5.i2751:                                    ; preds = %if.then3.i2748, %if.end.i2746
  %imag0.addr.0.i2749 = phi %struct.rtx_def* [ %call4.i2747, %if.then3.i2748 ], [ null, %if.end.i2746 ]
  %call6.i2750 = tail call %struct.rtx_def* @force_reg(i32 %call1380, %struct.rtx_def* %imag1.0) #8
  %tobool.i = icmp eq i32 %unsignedp, 0
  br i1 %tobool.i, label %if.else.i2753, label %if.end10.i

if.else.i2753:                                    ; preds = %if.end5.i2751
  %call8.i2752 = tail call %struct.rtx_def* @expand_abs(i32 %call1380, %struct.rtx_def* %call1.i2744, %struct.rtx_def* null, i32 0, i32 1) #8
  %call9.i = tail call %struct.rtx_def* @expand_abs(i32 %call1380, %struct.rtx_def* %call6.i2750, %struct.rtx_def* null, i32 0, i32 1) #8
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.else.i2753, %if.end5.i2751
  %temp1.0.i = phi %struct.rtx_def* [ %call8.i2752, %if.else.i2753 ], [ %call1.i2744, %if.end5.i2751 ]
  %temp2.0.i = phi %struct.rtx_def* [ %call9.i, %if.else.i2753 ], [ %call6.i2750, %if.end5.i2751 ]
  %cmp11.i = icmp eq %struct.rtx_def* %temp1.0.i, null
  %cmp12.i = icmp eq %struct.rtx_def* %temp2.0.i, null
  %or.cond.i2754 = or i1 %cmp11.i, %cmp12.i
  br i1 %or.cond.i2754, label %sw.epilog1611, label %if.end14.i

if.end14.i:                                       ; preds = %if.end10.i
  %239 = bitcast %struct.rtx_def* %temp1.0.i to i32*
  %bf.load.i = load i32* %239, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %call15.i = tail call %struct.rtx_def* @gen_label_rtx() #8
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %temp1.0.i, %struct.rtx_def* %temp2.0.i, i32 107, %struct.rtx_def* null, i32 %bf.clear.i, i32 %unsignedp, %struct.rtx_def* %call15.i) #8
  br i1 %cmp395, label %if.then17.i, label %if.else19.i

if.then17.i:                                      ; preds = %if.end14.i
  %call18.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call6.i2750, %struct.rtx_def* %call1.i2744, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  br label %if.end21.i

if.else19.i:                                      ; preds = %if.end14.i
  %call20.i2755 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %call6.i2750, %struct.rtx_def* %call1.i2744, %struct.rtx_def* null, i32 %unsignedp) #8
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.else19.i, %if.then17.i
  %ratio.0.i = phi %struct.rtx_def* [ %call18.i, %if.then17.i ], [ %call20.i2755, %if.else19.i ]
  %cmp22.i = icmp eq %struct.rtx_def* %ratio.0.i, null
  br i1 %cmp22.i, label %sw.epilog1611, label %if.end24.i

if.end24.i:                                       ; preds = %if.end21.i
  %call25.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2739, %struct.rtx_def* %call6.i2750, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp26.i = icmp eq %struct.rtx_def* %call25.i, null
  br i1 %cmp26.i, label %sw.epilog1611, label %if.end28.i

if.end28.i:                                       ; preds = %if.end24.i
  %call29.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2742, %struct.rtx_def* %call25.i, %struct.rtx_def* %call1.i2744, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp30.i = icmp eq %struct.rtx_def* %call29.i, null
  br i1 %cmp30.i, label %sw.epilog1611, label %if.end32.i

if.end32.i:                                       ; preds = %if.end28.i
  %cmp33.i = icmp eq %struct.rtx_def* %imag0.addr.0.i2749, null
  br i1 %cmp33.i, label %if.then34.i, label %if.else45.i

if.then34.i:                                      ; preds = %if.end32.i
  %call35.i2756 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2739, %struct.rtx_def* %call.i2743, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp36.i = icmp eq %struct.rtx_def* %call35.i2756, null
  br i1 %cmp36.i, label %sw.epilog1611, label %if.end38.i

if.end38.i:                                       ; preds = %if.then34.i
  %call39.i = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %this_neg_optab.0.i2740, %struct.rtx_def* %call35.i2756, %struct.rtx_def* null, i32 %unsignedp) #8
  %cmp40.i = icmp eq %struct.rtx_def* %call.i2743, null
  %cmp42.i = icmp eq %struct.rtx_def* %call39.i, null
  %or.cond364.i = or i1 %cmp40.i, %cmp42.i
  br i1 %or.cond364.i, label %sw.epilog1611, label %if.end61.i2762

if.else45.i:                                      ; preds = %if.end32.i
  %call46.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2739, %struct.rtx_def* %imag0.addr.0.i2749, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp47.i = icmp eq %struct.rtx_def* %call46.i, null
  br i1 %cmp47.i, label %sw.epilog1611, label %if.end49.i

if.end49.i:                                       ; preds = %if.else45.i
  %call50.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2742, %struct.rtx_def* %call46.i, %struct.rtx_def* %call.i2743, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %call51.i2757 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2739, %struct.rtx_def* %call.i2743, %struct.rtx_def* %ratio.0.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp52.i = icmp eq %struct.rtx_def* %call51.i2757, null
  br i1 %cmp52.i, label %sw.epilog1611, label %if.end54.i2759

if.end54.i2759:                                   ; preds = %if.end49.i
  %call55.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_sub_optab.0.i2741, %struct.rtx_def* %imag0.addr.0.i2749, %struct.rtx_def* %call51.i2757, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp56.i = icmp eq %struct.rtx_def* %call50.i, null
  %cmp58.i2758 = icmp eq %struct.rtx_def* %call55.i, null
  %or.cond365.i = or i1 %cmp56.i, %cmp58.i2758
  br i1 %or.cond365.i, label %sw.epilog1611, label %if.end61.i2762

if.end61.i2762:                                   ; preds = %if.end54.i2759, %if.end38.i
  %real_t.0.i2760 = phi %struct.rtx_def* [ %call.i2743, %if.end38.i ], [ %call50.i, %if.end54.i2759 ]
  %imag_t.0.i2761 = phi %struct.rtx_def* [ %call39.i, %if.end38.i ], [ %call55.i, %if.end54.i2759 ]
  br i1 %cmp395, label %if.then63.i2764, label %if.else65.i2766

if.then63.i2764:                                  ; preds = %if.end61.i2762
  %call64.i2763 = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real_t.0.i2760, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #8
  br label %if.end67.i2769

if.else65.i2766:                                  ; preds = %if.end61.i2762
  %call66.i2765 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real_t.0.i2760, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1389, i32 %unsignedp) #8
  br label %if.end67.i2769

if.end67.i2769:                                   ; preds = %if.else65.i2766, %if.then63.i2764
  %res.0.i2767 = phi %struct.rtx_def* [ %call64.i2763, %if.then63.i2764 ], [ %call66.i2765, %if.else65.i2766 ]
  %cmp68.i2768 = icmp eq %struct.rtx_def* %res.0.i2767, null
  br i1 %cmp68.i2768, label %sw.epilog1611, label %if.end70.i2771

if.end70.i2771:                                   ; preds = %if.end67.i2769
  %cmp71.i2770 = icmp eq %struct.rtx_def* %res.0.i2767, %call1389
  br i1 %cmp71.i2770, label %if.end74.i, label %if.then72.i2773

if.then72.i2773:                                  ; preds = %if.end70.i2771
  %call73.i2772 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.0.i2767) #8
  br label %if.end74.i

if.end74.i:                                       ; preds = %if.then72.i2773, %if.end70.i2771
  br i1 %cmp395, label %if.then76.i, label %if.else78.i

if.then76.i:                                      ; preds = %if.end74.i
  %call77.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag_t.0.i2761, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #8
  br label %if.end80.i

if.else78.i:                                      ; preds = %if.end74.i
  %call79.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag_t.0.i2761, %struct.rtx_def* %call29.i, %struct.rtx_def* %call1390, i32 %unsignedp) #8
  br label %if.end80.i

if.end80.i:                                       ; preds = %if.else78.i, %if.then76.i
  %res.1.i2774 = phi %struct.rtx_def* [ %call77.i, %if.then76.i ], [ %call79.i, %if.else78.i ]
  %cmp81.i = icmp eq %struct.rtx_def* %res.1.i2774, null
  br i1 %cmp81.i, label %sw.epilog1611, label %if.end83.i

if.end83.i:                                       ; preds = %if.end80.i
  %cmp84.i = icmp eq %struct.rtx_def* %res.1.i2774, %call1390
  br i1 %cmp84.i, label %if.end87.i, label %if.then85.i

if.then85.i:                                      ; preds = %if.end83.i
  %call86.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.1.i2774) #8
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.then85.i, %if.end83.i
  %call88.i = tail call %struct.rtx_def* @gen_label_rtx() #8
  %call89.i = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call88.i) #8
  %call90.i = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call89.i) #8
  %call91.i = tail call %struct.rtx_def* @emit_barrier() #8
  %call92.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call15.i) #8
  br i1 %cmp395, label %if.then94.i, label %if.else96.i

if.then94.i:                                      ; preds = %if.end87.i
  %call95.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call1.i2744, %struct.rtx_def* %call6.i2750, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  br label %if.end98.i

if.else96.i:                                      ; preds = %if.end87.i
  %call97.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %call1.i2744, %struct.rtx_def* %call6.i2750, %struct.rtx_def* null, i32 %unsignedp) #8
  br label %if.end98.i

if.end98.i:                                       ; preds = %if.else96.i, %if.then94.i
  %ratio.1.i = phi %struct.rtx_def* [ %call95.i, %if.then94.i ], [ %call97.i, %if.else96.i ]
  %cmp99.i = icmp eq %struct.rtx_def* %ratio.1.i, null
  br i1 %cmp99.i, label %sw.epilog1611, label %if.end101.i

if.end101.i:                                      ; preds = %if.end98.i
  %call102.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2739, %struct.rtx_def* %call1.i2744, %struct.rtx_def* %ratio.1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp103.i = icmp eq %struct.rtx_def* %call102.i, null
  br i1 %cmp103.i, label %sw.epilog1611, label %if.end105.i

if.end105.i:                                      ; preds = %if.end101.i
  %call106.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2742, %struct.rtx_def* %call102.i, %struct.rtx_def* %call6.i2750, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp107.i = icmp eq %struct.rtx_def* %call106.i, null
  br i1 %cmp107.i, label %sw.epilog1611, label %if.end109.i

if.end109.i:                                      ; preds = %if.end105.i
  %call112.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2739, %struct.rtx_def* %call.i2743, %struct.rtx_def* %ratio.1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  br i1 %cmp33.i, label %if.then111.i, label %if.else119.i

if.then111.i:                                     ; preds = %if.end109.i
  %call113.i = tail call %struct.rtx_def* @expand_unop(i32 %call1380, %struct.optab* %this_neg_optab.0.i2740, %struct.rtx_def* %call.i2743, %struct.rtx_def* null, i32 %unsignedp) #8
  %cmp114.i = icmp eq %struct.rtx_def* %call112.i, null
  %cmp116.i = icmp eq %struct.rtx_def* %call113.i, null
  %or.cond366.i = or i1 %cmp114.i, %cmp116.i
  br i1 %or.cond366.i, label %sw.epilog1611, label %if.end135.i

if.else119.i:                                     ; preds = %if.end109.i
  %cmp121.i = icmp eq %struct.rtx_def* %call112.i, null
  br i1 %cmp121.i, label %sw.epilog1611, label %if.end123.i

if.end123.i:                                      ; preds = %if.else119.i
  %call124.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_add_optab.0.i2742, %struct.rtx_def* %call112.i, %struct.rtx_def* %imag0.addr.0.i2749, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %call125.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_mul_optab.0.i2739, %struct.rtx_def* %imag0.addr.0.i2749, %struct.rtx_def* %ratio.1.i, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp126.i = icmp eq %struct.rtx_def* %call125.i, null
  br i1 %cmp126.i, label %sw.epilog1611, label %if.end128.i

if.end128.i:                                      ; preds = %if.end123.i
  %call129.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %this_sub_optab.0.i2741, %struct.rtx_def* %call125.i, %struct.rtx_def* %call.i2743, %struct.rtx_def* null, i32 %unsignedp, i32 %methods) #8
  %cmp130.i = icmp eq %struct.rtx_def* %call124.i, null
  %cmp132.i = icmp eq %struct.rtx_def* %call129.i, null
  %or.cond367.i = or i1 %cmp130.i, %cmp132.i
  br i1 %or.cond367.i, label %sw.epilog1611, label %if.end135.i

if.end135.i:                                      ; preds = %if.end128.i, %if.then111.i
  %real_t.1.i = phi %struct.rtx_def* [ %call112.i, %if.then111.i ], [ %call124.i, %if.end128.i ]
  %imag_t.1.i = phi %struct.rtx_def* [ %call113.i, %if.then111.i ], [ %call129.i, %if.end128.i ]
  br i1 %cmp395, label %if.then137.i, label %if.else139.i

if.then137.i:                                     ; preds = %if.end135.i
  %call138.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %real_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1389, i32 %unsignedp, i32 %methods) #8
  br label %if.end141.i

if.else139.i:                                     ; preds = %if.end135.i
  %call140.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %real_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1389, i32 %unsignedp) #8
  br label %if.end141.i

if.end141.i:                                      ; preds = %if.else139.i, %if.then137.i
  %res.2.i = phi %struct.rtx_def* [ %call138.i, %if.then137.i ], [ %call140.i, %if.else139.i ]
  %cmp142.i = icmp eq %struct.rtx_def* %res.2.i, null
  br i1 %cmp142.i, label %sw.epilog1611, label %if.end144.i

if.end144.i:                                      ; preds = %if.end141.i
  %cmp145.i = icmp eq %struct.rtx_def* %res.2.i, %call1389
  br i1 %cmp145.i, label %if.end148.i, label %if.then146.i

if.then146.i:                                     ; preds = %if.end144.i
  %call147.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1389, %struct.rtx_def* %res.2.i) #8
  br label %if.end148.i

if.end148.i:                                      ; preds = %if.then146.i, %if.end144.i
  br i1 %cmp395, label %if.then150.i, label %if.else152.i

if.then150.i:                                     ; preds = %if.end148.i
  %call151.i = tail call %struct.rtx_def* @expand_binop(i32 %call1380, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %imag_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1390, i32 %unsignedp, i32 %methods) #8
  br label %if.end154.i

if.else152.i:                                     ; preds = %if.end148.i
  %call153.i = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %call1380, %struct.rtx_def* %imag_t.1.i, %struct.rtx_def* %call106.i, %struct.rtx_def* %call1390, i32 %unsignedp) #8
  br label %if.end154.i

if.end154.i:                                      ; preds = %if.else152.i, %if.then150.i
  %res.3.i = phi %struct.rtx_def* [ %call151.i, %if.then150.i ], [ %call153.i, %if.else152.i ]
  %cmp155.i = icmp eq %struct.rtx_def* %res.3.i, null
  br i1 %cmp155.i, label %sw.epilog1611, label %if.end157.i

if.end157.i:                                      ; preds = %if.end154.i
  %cmp158.i = icmp eq %struct.rtx_def* %res.3.i, %call1390
  br i1 %cmp158.i, label %if.end161.i, label %if.then159.i

if.then159.i:                                     ; preds = %if.end157.i
  %call160.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1390, %struct.rtx_def* %res.3.i) #8
  br label %if.end161.i

if.end161.i:                                      ; preds = %if.then159.i, %if.end157.i
  %call162.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call88.i) #8
  br label %sw.epilog1611

sw.default:                                       ; preds = %if.else1604
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1713, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

sw.default1610:                                   ; preds = %if.end1423
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1719, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_binop, i64 0, i64 0)) #6
  unreachable

sw.epilog1611:                                    ; preds = %if.end161.i, %if.end154.i, %if.end141.i, %if.end128.i, %if.end123.i, %if.else119.i, %if.then111.i, %if.end105.i, %if.end101.i, %if.end98.i, %if.end80.i, %if.end67.i2769, %if.end54.i2759, %if.end49.i, %if.else45.i, %if.end38.i, %if.then34.i, %if.end28.i, %if.end24.i, %if.end21.i, %if.end10.i, %if.then72.i, %if.end70.i, %if.end67.i, %if.end54.i, %if.end41.i, %if.end33.i, %if.else.i, %if.then18.i, %if.end12.i, %if.end5.i, %if.then1600, %if.else1597, %if.then1560, %if.else1557, %if.then1529, %if.else1526, %if.then1466, %if.else1463, %if.end1593, %if.end1576, %if.end1553, %if.else1533, %if.end1515, %if.end1506, %if.end1489, %if.then1474, %if.end1459, %sw.bb
  %ok.0 = phi i1 [ true, %if.end1576 ], [ true, %if.end1593 ], [ true, %if.then1474 ], [ true, %if.end1489 ], [ true, %if.end1506 ], [ true, %if.end1515 ], [ true, %if.else1533 ], [ true, %if.end1553 ], [ true, %sw.bb ], [ true, %if.end1459 ], [ false, %if.else1463 ], [ false, %if.then1466 ], [ false, %if.else1526 ], [ false, %if.then1529 ], [ false, %if.else1557 ], [ false, %if.then1560 ], [ false, %if.else1597 ], [ false, %if.then1600 ], [ true, %if.end5.i ], [ true, %if.end12.i ], [ true, %if.then18.i ], [ true, %if.else.i ], [ true, %if.end33.i ], [ true, %if.end41.i ], [ true, %if.end54.i ], [ true, %if.end67.i ], [ false, %if.end70.i ], [ false, %if.then72.i ], [ false, %if.end161.i ], [ true, %if.end10.i ], [ true, %if.end21.i ], [ true, %if.end24.i ], [ true, %if.end28.i ], [ true, %if.then34.i ], [ true, %if.end38.i ], [ true, %if.else45.i ], [ true, %if.end49.i ], [ true, %if.end54.i2759 ], [ true, %if.end67.i2769 ], [ true, %if.end80.i ], [ true, %if.end98.i ], [ true, %if.end101.i ], [ true, %if.end105.i ], [ true, %if.then111.i ], [ true, %if.else119.i ], [ true, %if.end123.i ], [ true, %if.end128.i ], [ true, %if.end141.i ], [ true, %if.end154.i ]
  %call1612 = tail call %struct.rtx_def* @get_insns() #8
  tail call void @end_sequence() #8
  br i1 %ok.0, label %if.end1627, label %if.then1614

if.then1614:                                      ; preds = %sw.epilog1611
  %240 = load i32* %code112, align 4, !tbaa !4
  %cmp1616 = icmp eq i32 %240, 0
  br i1 %cmp1616, label %if.end1624, label %if.then1618

if.then1618:                                      ; preds = %if.then1614
  %call1620 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.4) #8
  %call1621 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op1.addr.5) #8
  %call1622 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %240, i32 %mode, %struct.rtx_def* %call1620, %struct.rtx_def* %call1621) #8
  br label %if.end1624

if.end1624:                                       ; preds = %if.then1614, %if.then1618
  %equiv_value1370.0 = phi %struct.rtx_def* [ %call1622, %if.then1618 ], [ null, %if.then1614 ]
  %call1625 = tail call %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %call1612, %struct.rtx_def* %target.addr.12, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %op1.addr.5, %struct.rtx_def* %equiv_value1370.0) #7
  br label %return

if.end1627:                                       ; preds = %sw.epilog1611, %if.end1354
  %target.addr.13 = phi %struct.rtx_def* [ %target.addr.12, %sw.epilog1611 ], [ %target.addr.11, %if.end1354 ]
  %libfunc = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom, i32 1
  %241 = load %struct.rtx_def** %libfunc, align 8, !tbaa !0
  %tobool1631 = icmp eq %struct.rtx_def* %241, null
  %.not = xor i1 %1, true
  %brmerge2723 = or i1 %tobool1631, %.not
  br i1 %brmerge2723, label %if.end1671, label %if.then1638

if.then1638:                                      ; preds = %if.end1627
  tail call void @start_sequence() #8
  br i1 %4, label %if.then1645, label %if.end1647

if.then1645:                                      ; preds = %if.then1638
  %242 = load i32* @word_mode, align 4, !tbaa !7
  %call1646 = tail call %struct.rtx_def* @convert_to_mode(i32 %242, %struct.rtx_def* %op1.addr.5, i32 1) #8
  br label %if.end1647

if.end1647:                                       ; preds = %if.then1645, %if.then1638
  %op1x.0 = phi %struct.rtx_def* [ %call1646, %if.then1645 ], [ %op1.addr.5, %if.then1638 ]
  %op1_mode.0 = phi i32 [ %242, %if.then1645 ], [ %mode, %if.then1638 ]
  %243 = bitcast %struct.rtx_def* %op0.addr.4 to i32*
  %bf.load1648 = load i32* %243, align 8
  %bf.lshr1649 = lshr i32 %bf.load1648, 16
  %bf.clear1650 = and i32 %bf.lshr1649, 255
  %cmp1651 = icmp eq i32 %bf.clear1650, 0
  %cmp1657 = icmp eq i32 %bf.clear1650, %mode
  %or.cond2724 = or i1 %cmp1651, %cmp1657
  br i1 %or.cond2724, label %if.end1661, label %if.then1659

if.then1659:                                      ; preds = %if.end1647
  %call1660 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* %op0.addr.4, i32 %unsignedp) #8
  br label %if.end1661

if.end1661:                                       ; preds = %if.end1647, %if.then1659
  %op0.addr.5 = phi %struct.rtx_def* [ %call1660, %if.then1659 ], [ %op0.addr.4, %if.end1647 ]
  %244 = load %struct.rtx_def** %libfunc, align 8, !tbaa !0
  %call1666 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %244, %struct.rtx_def* null, i32 1, i32 %mode, i32 2, %struct.rtx_def* %op0.addr.5, i32 %mode, %struct.rtx_def* %op1x.0, i32 %op1_mode.0) #8
  %call1667 = tail call %struct.rtx_def* @get_insns() #8
  tail call void @end_sequence() #8
  %call1668 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  %245 = load i32* %code112, align 4, !tbaa !4
  %call1670 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %245, i32 %mode, %struct.rtx_def* %op0.addr.5, %struct.rtx_def* %op1.addr.5) #8
  tail call void @emit_libcall_block(%struct.rtx_def* %call1667, %struct.rtx_def* %call1668, %struct.rtx_def* %call1666, %struct.rtx_def* %call1670) #7
  br label %return

if.end1671:                                       ; preds = %if.end1627
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  %246 = and i32 %methods, -2
  %247 = icmp eq i32 %246, 2
  %or.cond1788 = or i1 %247, %cmp161
  br i1 %or.cond1788, label %if.end1681, label %if.then1680

if.then1680:                                      ; preds = %if.end1671
  tail call void @delete_insns_since(%struct.rtx_def* %call) #8
  br label %return

if.end1681:                                       ; preds = %if.end1671
  %cond1684 = zext i1 %cmp1 to i32
  br i1 %or.cond1783, label %for.cond1697.preheader, label %if.end1777

for.cond1697.preheader:                           ; preds = %if.end1681
  %wider_mode.1.in.in2835 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.1.in2836 = load i8* %wider_mode.1.in.in2835, align 1
  %cmp16982838 = icmp eq i8 %wider_mode.1.in2836, 0
  br i1 %cmp16982838, label %if.end1777, label %for.body1700.lr.ph

for.body1700.lr.ph:                               ; preds = %for.cond1697.preheader
  %.2731 = zext i1 %cmp389 to i32
  br label %for.body1700

for.body1700:                                     ; preds = %for.body1700.lr.ph, %for.cond1697.backedge
  %wider_mode.12840.in = phi i8 [ %wider_mode.1.in2836, %for.body1700.lr.ph ], [ %wider_mode.1.in, %for.cond1697.backedge ]
  %wider_mode.12840 = zext i8 %wider_mode.12840.in to i32
  %idxprom1701 = zext i8 %wider_mode.12840.in to i64
  %insn_code1704 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1701, i32 0
  %248 = load i32* %insn_code1704, align 4, !tbaa !6
  %cmp1705 = icmp eq i32 %248, 1317
  br i1 %cmp1705, label %lor.lhs.false1707, label %if.then1716

lor.lhs.false1707:                                ; preds = %for.body1700
  br i1 %cmp1, label %land.lhs.true1710, label %for.cond1697.backedge

land.lhs.true1710:                                ; preds = %lor.lhs.false1707
  %libfunc1714 = getelementptr inbounds %struct.optab* %binoptab.addr.0, i64 0, i32 1, i64 %idxprom1701, i32 1
  %249 = load %struct.rtx_def** %libfunc1714, align 8, !tbaa !0
  %tobool1715 = icmp eq %struct.rtx_def* %249, null
  br i1 %tobool1715, label %for.cond1697.backedge, label %if.then1716

for.cond1697.backedge:                            ; preds = %land.lhs.true1710, %lor.lhs.false1707, %if.else1769
  %wider_mode.1.in.in = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom1701
  %wider_mode.1.in = load i8* %wider_mode.1.in.in, align 1
  %cmp1698 = icmp eq i8 %wider_mode.1.in, 0
  br i1 %cmp1698, label %if.end1777, label %for.body1700

if.then1716:                                      ; preds = %land.lhs.true1710, %for.body1700
  %250 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !0
  %cmp1723 = icmp eq %struct.optab* %binoptab.addr.0, %250
  %251 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 16, !tbaa !0
  %cmp1726 = icmp eq %struct.optab* %binoptab.addr.0, %251
  %or.cond2725 = or i1 %cmp1723, %cmp1726
  %252 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 16, !tbaa !0
  %cmp1729 = icmp eq %struct.optab* %binoptab.addr.0, %252
  %or.cond2726 = or i1 %or.cond2725, %cmp1729
  %253 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %cmp1732 = icmp eq %struct.optab* %binoptab.addr.0, %253
  %or.cond2727 = or i1 %or.cond2726, %cmp1732
  %254 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 16, !tbaa !0
  %cmp1735 = icmp eq %struct.optab* %binoptab.addr.0, %254
  %or.cond2728 = or i1 %or.cond2727, %cmp1735
  %255 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 16, !tbaa !0
  %cmp1738 = icmp eq %struct.optab* %binoptab.addr.0, %255
  %or.cond2729 = or i1 %or.cond2728, %cmp1738
  %256 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cmp1741 = icmp eq %struct.optab* %binoptab.addr.0, %256
  %or.cond2730 = or i1 %or.cond2729, %cmp1741
  br i1 %or.cond2730, label %if.end1747, label %if.end1747.thread

if.end1747.thread:                                ; preds = %if.then1716
  %call17482823 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.12840, i32 %mode, i32 %unsignedp, i32 0) #7
  br label %land.end1753

if.end1747:                                       ; preds = %if.then1716
  %call1748 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op0.addr.4, i32 %wider_mode.12840, i32 %mode, i32 %unsignedp, i32 %.2731) #7
  br i1 %cmp389, label %land.rhs1750, label %land.end1753

land.rhs1750:                                     ; preds = %if.end1747
  %257 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !0
  %cmp1751 = icmp ne %struct.optab* %binoptab.addr.0, %257
  br label %land.end1753

land.end1753:                                     ; preds = %if.end1747, %if.end1747.thread, %land.rhs1750
  %call17482825 = phi %struct.rtx_def* [ %call1748, %if.end1747 ], [ %call1748, %land.rhs1750 ], [ %call17482823, %if.end1747.thread ]
  %258 = phi i1 [ false, %if.end1747 ], [ %cmp1751, %land.rhs1750 ], [ false, %if.end1747.thread ]
  %land.ext1754 = zext i1 %258 to i32
  %call1755 = tail call fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op1.addr.5, i32 %wider_mode.12840, i32 %mode, i32 %unsignedp, i32 %land.ext1754) #7
  %call1756 = tail call %struct.rtx_def* @expand_binop(i32 %wider_mode.12840, %struct.optab* %binoptab.addr.0, %struct.rtx_def* %call17482825, %struct.rtx_def* %call1755, %struct.rtx_def* null, i32 %unsignedp, i32 %cond1684) #7
  %tobool1757 = icmp eq %struct.rtx_def* %call1756, null
  br i1 %tobool1757, label %if.else1769, label %if.then1758

if.then1758:                                      ; preds = %land.end1753
  br i1 %cmp389, label %if.else1767, label %if.then1761

if.then1761:                                      ; preds = %if.then1758
  %cmp1762 = icmp eq %struct.rtx_def* %target.addr.13, null
  br i1 %cmp1762, label %if.then1764, label %if.end1766

if.then1764:                                      ; preds = %if.then1761
  %call1765 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  br label %if.end1766

if.end1766:                                       ; preds = %if.then1764, %if.then1761
  %target.addr.14 = phi %struct.rtx_def* [ %call1765, %if.then1764 ], [ %target.addr.13, %if.then1761 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.14, %struct.rtx_def* %call1756, i32 0) #8
  br label %return

if.else1767:                                      ; preds = %if.then1758
  %call1768 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call1756) #8
  br label %return

if.else1769:                                      ; preds = %land.end1753
  tail call void @delete_insns_since(%struct.rtx_def* %call111) #8
  br label %for.cond1697.backedge

if.end1777:                                       ; preds = %for.cond1697.preheader, %for.cond1697.backedge, %if.end1681
  tail call void @delete_insns_since(%struct.rtx_def* %call) #8
  br label %return

return:                                           ; preds = %if.then1345, %if.then1338, %if.then1154, %if.then1147, %if.then995, %if.else997, %if.end1777, %if.else1767, %if.end1766, %if.then1680, %if.end1661, %if.end1624, %if.end781, %if.end583, %if.else486, %if.end485, %if.else385, %if.then383, %if.end338
  %retval.0 = phi %struct.rtx_def* [ %temp.1, %if.end338 ], [ %call384, %if.then383 ], [ %call386, %if.else385 ], [ %target.addr.1, %if.end485 ], [ %call487, %if.else486 ], [ %target.addr.2, %if.end583 ], [ %target.addr.4, %if.end781 ], [ %target.addr.12, %if.end1624 ], [ %call1668, %if.end1661 ], [ %target.addr.14, %if.end1766 ], [ %call1768, %if.else1767 ], [ null, %if.end1777 ], [ null, %if.then1680 ], [ %target.addr.6, %if.else997 ], [ %target.addr.6, %if.then995 ], [ %target.addr.8, %if.then1147 ], [ %target.addr.8, %if.then1154 ], [ %product.1, %if.then1338 ], [ %product.1, %if.then1345 ]
  ret %struct.rtx_def* %retval.0
}
