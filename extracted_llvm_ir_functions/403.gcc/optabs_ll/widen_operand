define internal fastcc %struct.rtx_def* @widen_operand(%struct.rtx_def* %op, i32 %mode, i32 %oldmode, i32 %unsignedp, i32 %no_extend) #0 {
entry:
  %tobool = icmp eq i32 %no_extend, 0
  br i1 %tobool, label %if.then15, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %0 = bitcast %struct.rtx_def* %op to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %1 = and i32 %bf.load, 268500991
  %2 = icmp eq i32 %1, 268435519
  br i1 %2, label %land.lhs.true10, label %if.end16

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %bf.lshr12 = lshr i32 %bf.load, 26
  %bf.clear13 = and i32 %bf.lshr12, 1
  %cmp14 = icmp eq i32 %bf.clear13, %unsignedp
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %entry, %land.lhs.true10
  %call = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %oldmode, %struct.rtx_def* %op, i32 %unsignedp) #8
  br label %return

if.end16:                                         ; preds = %lor.lhs.false, %land.lhs.true10
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %3 to i32
  %4 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %4, 23
  %5 = and i32 %and, 4
  %6 = add i32 %5, 4
  %cmp18 = icmp ugt i32 %conv, %6
  br i1 %cmp18, label %if.end26, label %if.then20

if.then20:                                        ; preds = %if.end16
  %bf.lshr22 = lshr i32 %bf.load, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %call24 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear23, %struct.rtx_def* %op) #8
  %call25 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %mode, %struct.rtx_def* %call24, i32 0) #8
  br label %return

if.end26:                                         ; preds = %if.end16
  %call27 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8
  %call28 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call27) #8
  %call29 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call28) #8
  %bf.load30 = load i32* %0, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %call33 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear32, %struct.rtx_def* %call27) #8
  %call34 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call33, %struct.rtx_def* %op) #8
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end26, %if.then20, %if.then15
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then15 ], [ %call25, %if.then20 ], [ %call27, %if.end26 ], [ %op, %land.lhs.true ]
  ret %struct.rtx_def* %retval.0
}
