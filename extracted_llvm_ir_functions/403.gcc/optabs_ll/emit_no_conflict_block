define %struct.rtx_def* @emit_no_conflict_block(%struct.rtx_def* %insns, %struct.rtx_def* %target, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %equiv) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %target to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 61
  %1 = load i32* @reload_in_progress, align 4, !tbaa !5
  %tobool = icmp ne i32 %1, 0
  %or.cond = or i1 %cmp, %tobool
  br i1 %or.cond, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %tobool1286 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool1286, label %for.cond11.outer, label %for.body

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @emit_insns(%struct.rtx_def* %insns) #8
  br label %return

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %insn.0287 = phi %struct.rtx_def* [ %3, %for.inc ], [ %insns, %for.cond.preheader ]
  %2 = bitcast %struct.rtx_def* %insn.0287 to i32*
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 32
  br i1 %cmp4, label %lor.lhs.false5, label %if.then8

lor.lhs.false5:                                   ; preds = %for.body
  %call6 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0287, i32 7, %struct.rtx_def* null) #8
  %tobool7 = icmp eq %struct.rtx_def* %call6, null
  br i1 %tobool7, label %for.inc, label %if.then8

if.then8:                                         ; preds = %lor.lhs.false5, %for.body
  %call9 = tail call %struct.rtx_def* @emit_insns(%struct.rtx_def* %insns) #8
  br label %return

for.inc:                                          ; preds = %lor.lhs.false5
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.0287, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %tobool1 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool1, label %for.cond11.outer, label %for.body

for.cond11:                                       ; preds = %for.cond11.outer, %if.end92
  %insn.1 = phi %struct.rtx_def* [ %4, %if.end92 ], [ %insn.1.ph, %for.cond11.outer ]
  %tobool12 = icmp eq %struct.rtx_def* %insn.1, null
  br i1 %tobool12, label %for.end123, label %for.body13

for.body13:                                       ; preds = %for.cond11
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 2
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx16, align 8, !tbaa !0
  %call17 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 7, %struct.rtx_def* null) #8
  %cmp18 = icmp eq %struct.rtx_def* %call17, null
  br i1 %cmp18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %for.body13
  tail call void @remove_note(%struct.rtx_def* %insn.1, %struct.rtx_def* %call17) #8
  br label %if.end20

if.end20:                                         ; preds = %for.body13, %if.then19
  %call21 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1, i32 6, %struct.rtx_def* null) #8
  %cmp22 = icmp eq %struct.rtx_def* %call21, null
  br i1 %cmp22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %if.end20
  tail call void @remove_note(%struct.rtx_def* %insn.1, %struct.rtx_def* %call21) #8
  br label %if.end24

if.end24:                                         ; preds = %if.end20, %if.then23
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 3
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx27, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load28 = load i32* %6, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  switch i32 %bf.clear29, label %if.then91 [
    i32 47, label %if.end89
    i32 48, label %if.end89
    i32 49, label %if.end89
    i32 39, label %for.cond57.preheader
  ]

for.cond57.preheader:                             ; preds = %if.end24
  %arrayidx62272 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtvec273 = bitcast %union.rtunion_def* %arrayidx62272 to %struct.rtvec_def**
  %7 = load %struct.rtvec_def** %rtvec273, align 8, !tbaa !0
  %num_elem274 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 0
  %8 = load i32* %num_elem274, align 4, !tbaa !5
  %cmp63275 = icmp sgt i32 %8, 0
  br i1 %cmp63275, label %for.body64, label %if.then91

for.cond57:                                       ; preds = %for.body64
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp63 = icmp slt i32 %9, %8
  br i1 %cmp63, label %for.body64, label %if.then91

for.body64:                                       ; preds = %for.cond57.preheader, %for.cond57
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond57 ], [ 0, %for.cond57.preheader ]
  %arrayidx71 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv
  %10 = load %struct.rtx_def** %arrayidx71, align 8, !tbaa !0
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load72 = load i32* %11, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 47
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp74, label %if.end89, label %for.cond57

if.end89:                                         ; preds = %for.body64, %if.end24, %if.end24, %if.end24
  %set.0 = phi %struct.rtx_def* [ %5, %if.end24 ], [ %5, %if.end24 ], [ %5, %if.end24 ], [ %10, %for.body64 ]
  %cmp90 = icmp eq %struct.rtx_def* %set.0, null
  br i1 %cmp90, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end24, %if.end89, %for.cond57, %for.cond57.preheader
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2768, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.emit_no_conflict_block, i64 0, i64 0)) #6
  unreachable

if.end92:                                         ; preds = %if.end89
  %arrayidx94 = getelementptr inbounds %struct.rtx_def* %set.0, i64 0, i32 1, i64 0
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx95, align 8, !tbaa !0
  %call96 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %12) #8
  %tobool97 = icmp eq i32 %call96, 0
  br i1 %tobool97, label %if.then98, label %for.cond11

if.then98:                                        ; preds = %if.end92
  %arrayidx100 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 1
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx101, align 8, !tbaa !0
  %tobool102 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool102, label %if.end111, label %if.then103

if.then103:                                       ; preds = %if.then98
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 2, i32 0
  %.c267 = ptrtoint %struct.rtx_def* %4 to i64
  store i64 %.c267, i64* %14, align 8, !tbaa !0
  br label %if.end111

if.end111:                                        ; preds = %if.then98, %if.then103
  %insns.addr.1 = phi %struct.rtx_def* [ %insns.addr.0.ph, %if.then103 ], [ %4, %if.then98 ]
  %tobool112 = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool112, label %if.end120, label %if.then113

if.then113:                                       ; preds = %if.end111
  %15 = load %struct.rtx_def** %rtx101, align 8, !tbaa !0
  %16 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %15 to i64
  store i64 %.c, i64* %16, align 8, !tbaa !0
  br label %if.end120

if.end120:                                        ; preds = %if.end111, %if.then113
  tail call void @add_insn(%struct.rtx_def* %insn.1) #8
  br label %for.cond11.outer

for.cond11.outer:                                 ; preds = %for.cond.preheader, %for.inc, %if.end120
  %insns.addr.0.ph = phi %struct.rtx_def* [ %insns.addr.1, %if.end120 ], [ %insns, %for.inc ], [ null, %for.cond.preheader ]
  %insn.1.ph = phi %struct.rtx_def* [ %4, %if.end120 ], [ %insns, %for.inc ], [ null, %for.cond.preheader ]
  br label %for.cond11

for.end123:                                       ; preds = %for.cond11
  %call124 = tail call %struct.rtx_def* @get_last_insn() #8
  %cmp125 = icmp eq %struct.rtx_def* %target, %op0
  %cmp126 = icmp eq %struct.rtx_def* %target, %op1
  %or.cond268 = or i1 %cmp125, %cmp126
  br i1 %or.cond268, label %for.cond131.preheader, label %if.then127

if.then127:                                       ; preds = %for.end123
  %call128 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target) #8
  %call129 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call128) #8
  br label %for.cond131.preheader

for.cond131.preheader:                            ; preds = %for.end123, %if.then127
  %tobool132270 = icmp eq %struct.rtx_def* %insns.addr.0.ph, null
  br i1 %tobool132270, label %for.end166, label %for.body133.lr.ph

for.body133.lr.ph:                                ; preds = %for.cond131.preheader
  %tobool137 = icmp eq %struct.rtx_def* %op1, null
  %tobool151 = icmp eq %struct.rtx_def* %op0, null
  %17 = bitcast %struct.rtx_def* %op0 to i32*
  %18 = bitcast %struct.rtx_def* %op1 to i32*
  br label %for.body133

for.body133:                                      ; preds = %for.body133.lr.ph, %for.cond131.backedge
  %insn.2271 = phi %struct.rtx_def* [ %insns.addr.0.ph, %for.body133.lr.ph ], [ %19, %for.cond131.backedge ]
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %insn.2271, i64 0, i32 1, i64 2
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx136, align 8, !tbaa !0
  tail call void @add_insn(%struct.rtx_def* %insn.2271) #8
  br i1 %tobool137, label %if.end150, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %for.body133
  %bf.load139 = load i32* %18, align 8
  %bf.clear140 = and i32 %bf.load139, 65535
  %cmp141 = icmp eq i32 %bf.clear140, 61
  br i1 %cmp141, label %if.then142, label %if.end150

if.then142:                                       ; preds = %land.lhs.true138
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %insn.2271, i64 0, i32 1, i64 6
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx145, align 8, !tbaa !0
  %call146 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 9, %struct.rtx_def* %op1, %struct.rtx_def* %20) #8
  %21 = getelementptr inbounds %union.rtunion_def* %arrayidx144, i64 0, i32 0
  %call146.c = ptrtoint %struct.rtx_def* %call146 to i64
  store i64 %call146.c, i64* %21, align 8, !tbaa !0
  br label %if.end150

if.end150:                                        ; preds = %for.body133, %if.then142, %land.lhs.true138
  br i1 %tobool151, label %for.cond131.backedge, label %land.lhs.true152

for.cond131.backedge:                             ; preds = %if.end150, %land.lhs.true152, %if.then156
  %tobool132 = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool132, label %for.end166, label %for.body133

land.lhs.true152:                                 ; preds = %if.end150
  %bf.load153 = load i32* %17, align 8
  %bf.clear154 = and i32 %bf.load153, 65535
  %cmp155 = icmp eq i32 %bf.clear154, 61
  br i1 %cmp155, label %if.then156, label %for.cond131.backedge

if.then156:                                       ; preds = %land.lhs.true152
  %arrayidx158 = getelementptr inbounds %struct.rtx_def* %insn.2271, i64 0, i32 1, i64 6
  %rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx159, align 8, !tbaa !0
  %call160 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 9, %struct.rtx_def* %op0, %struct.rtx_def* %22) #8
  %23 = getelementptr inbounds %union.rtunion_def* %arrayidx158, i64 0, i32 0
  %call160.c = ptrtoint %struct.rtx_def* %call160 to i64
  store i64 %call160.c, i64* %23, align 8, !tbaa !0
  br label %for.cond131.backedge

for.end166:                                       ; preds = %for.cond131.backedge, %for.cond131.preheader
  %bf.load167 = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load167, 16
  %bf.clear168 = and i32 %bf.lshr, 255
  %idxprom169266 = zext i32 %bf.clear168 to i64
  %24 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 30), align 16, !tbaa !0
  %insn_code = getelementptr inbounds %struct.optab* %24, i64 0, i32 1, i64 %idxprom169266, i32 0
  %25 = load i32* %insn_code, align 4, !tbaa !6
  %cmp171 = icmp eq i32 %25, 1317
  br i1 %cmp171, label %if.else178, label %if.then172

if.then172:                                       ; preds = %for.end166
  %call173 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %target) #8
  %tobool174 = icmp eq %struct.rtx_def* %equiv, null
  br i1 %tobool174, label %if.end181, label %if.then175

if.then175:                                       ; preds = %if.then172
  %call176 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call173, i32 4, %struct.rtx_def* %equiv) #8
  br label %if.end181

if.else178:                                       ; preds = %for.end166
  %call179 = tail call %struct.rtx_def* @get_last_insn() #8
  %call180 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %call179, i32 4, %struct.rtx_def* null) #8
  tail call void @remove_note(%struct.rtx_def* %call179, %struct.rtx_def* %call180) #8
  br label %if.end181

if.end181:                                        ; preds = %if.then172, %if.then175, %if.else178
  %last.0 = phi %struct.rtx_def* [ %call173, %if.then175 ], [ %call173, %if.then172 ], [ %call179, %if.else178 ]
  %cmp182 = icmp eq %struct.rtx_def* %call124, null
  br i1 %cmp182, label %if.then183, label %if.else185

if.then183:                                       ; preds = %if.end181
  %call184 = tail call %struct.rtx_def* @get_insns() #8
  br label %if.end189

if.else185:                                       ; preds = %if.end181
  %arrayidx187 = getelementptr inbounds %struct.rtx_def* %call124, i64 0, i32 1, i64 2
  %rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx188, align 8, !tbaa !0
  br label %if.end189

if.end189:                                        ; preds = %if.else185, %if.then183
  %first.0 = phi %struct.rtx_def* [ %call184, %if.then183 ], [ %26, %if.else185 ]
  %arrayidx191 = getelementptr inbounds %struct.rtx_def* %first.0, i64 0, i32 1, i64 6
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx192, align 8, !tbaa !0
  %call193 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 7, %struct.rtx_def* %last.0, %struct.rtx_def* %27) #8
  %28 = getelementptr inbounds %union.rtunion_def* %arrayidx191, i64 0, i32 0
  %call193.c = ptrtoint %struct.rtx_def* %call193 to i64
  store i64 %call193.c, i64* %28, align 8, !tbaa !0
  %arrayidx198 = getelementptr inbounds %struct.rtx_def* %last.0, i64 0, i32 1, i64 6
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx199, align 8, !tbaa !0
  %call200 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 6, %struct.rtx_def* %first.0, %struct.rtx_def* %29) #8
  %30 = getelementptr inbounds %union.rtunion_def* %arrayidx198, i64 0, i32 0
  %call200.c = ptrtoint %struct.rtx_def* %call200 to i64
  store i64 %call200.c, i64* %30, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end189, %if.then8, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call9, %if.then8 ], [ %last.0, %if.end189 ]
  ret %struct.rtx_def* %retval.0
}
