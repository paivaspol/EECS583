define %struct.rtx_def* @expand_complex_abs(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !3
  %call = tail call %struct.rtx_def* @get_last_insn() #8
  %arrayidx2 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx2, align 1, !tbaa !1
  %conv = zext i8 %1 to i32
  %mul = shl nuw nsw i32 %conv, 3
  %cmp = icmp eq i32 %0, 5
  %cond = select i1 %cmp, i32 1, i32 2
  %call4 = tail call i32 @mode_for_size(i32 %mul, i32 %cond, i32 0) #8
  %cmp5 = icmp eq i32 %call4, 51
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2471, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.expand_complex_abs, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  %call7 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0, i32 0) #8
  %2 = load i32* @flag_force_mem, align 4, !tbaa !5
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end
  %call9 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call7) #8
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then8
  %op0.addr.0 = phi %struct.rtx_def* [ %call9, %if.then8 ], [ %call7, %if.end ]
  %call11 = tail call %struct.rtx_def* @get_last_insn() #8
  %tobool12 = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool12, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end10
  %call14 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %target, i32 1) #8
  br label %if.end15

if.end15:                                         ; preds = %if.end10, %if.then13
  %target.addr.0 = phi %struct.rtx_def* [ %call14, %if.then13 ], [ null, %if.end10 ]
  %tobool16 = icmp eq i32 %unsignedp, 0
  %3 = load i32* @flag_trapv, align 4, !tbaa !5
  %tobool17 = icmp ne i32 %3, 0
  %or.cond = and i1 %tobool16, %tobool17
  %cmp21 = icmp eq i32 %0, 1
  %or.cond326 = and i1 %or.cond, %cmp21
  %cond23.in = select i1 %or.cond326, %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 35), %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34)
  %cond23 = load %struct.optab** %cond23.in, align 8
  %insn_code = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom, i32 0
  %4 = load i32* %insn_code, align 4, !tbaa !6
  %cmp26 = icmp eq i32 %4, 1317
  br i1 %cmp26, label %if.end90, label %if.then28

if.then28:                                        ; preds = %if.end15
  %idxprom33 = sext i32 %4 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom33, i32 3
  %5 = load %struct.insn_operand_data** %operand, align 8, !tbaa !0
  %mode36 = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 2
  %6 = bitcast [2 x i8]* %mode36 to i16*
  %bf.load = load i16* %6, align 8
  %bf.cast = zext i16 %bf.load to i32
  %tobool37 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %tobool37, label %if.else, label %if.end40

if.else:                                          ; preds = %if.then28
  %call39 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #8
  br label %if.end40

if.end40:                                         ; preds = %if.then28, %if.else
  %temp.0 = phi %struct.rtx_def* [ %call39, %if.else ], [ %target.addr.0, %if.then28 ]
  %7 = bitcast %struct.rtx_def* %op0.addr.0 to i32*
  %bf.load41 = load i32* %7, align 8
  %bf.lshr = lshr i32 %bf.load41, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp42 = icmp eq i32 %bf.clear, 0
  %cmp48 = icmp eq i32 %bf.clear, %bf.cast
  %or.cond315 = or i1 %cmp42, %cmp48
  br i1 %or.cond315, label %if.end52, label %if.then50

if.then50:                                        ; preds = %if.end40
  %call51 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #8
  br label %if.end52

if.end52:                                         ; preds = %if.end40, %if.then50
  %xop0.0 = phi %struct.rtx_def* [ %call51, %if.then50 ], [ %op0.addr.0, %if.end40 ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 0
  %8 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !0
  %call57 = tail call i32 %8(%struct.rtx_def* %xop0.0, i32 %bf.cast) #8
  %tobool58 = icmp eq i32 %call57, 0
  br i1 %tobool58, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.end52
  %call60 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %xop0.0) #8
  br label %if.end61

if.end61:                                         ; preds = %if.end52, %if.then59
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end52 ], [ %call60, %if.then59 ]
  %predicate66 = getelementptr inbounds %struct.insn_operand_data* %5, i64 0, i32 0
  %9 = load i32 (%struct.rtx_def*, i32)** %predicate66, align 8, !tbaa !0
  %call67 = tail call i32 %9(%struct.rtx_def* %temp.0, i32 %call4) #8
  %tobool68 = icmp eq i32 %call67, 0
  br i1 %tobool68, label %if.then69, label %if.end71

if.then69:                                        ; preds = %if.end61
  %call70 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #8
  br label %if.end71

if.end71:                                         ; preds = %if.end61, %if.then69
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end61 ], [ %call70, %if.then69 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom33, i32 2
  %10 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !0
  %call74 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %10(%struct.rtx_def* %temp.1, %struct.rtx_def* %xop0.1) #8
  %tobool75 = icmp eq %struct.rtx_def* %call74, null
  br i1 %tobool75, label %if.else88, label %if.then76

if.then76:                                        ; preds = %if.end71
  %11 = bitcast %struct.rtx_def* %call74 to i32*
  %bf.load77 = load i32* %11, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 24
  br i1 %cmp79, label %land.lhs.true81, label %if.end86

land.lhs.true81:                                  ; preds = %if.then76
  %code = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 0
  %12 = load i32* %code, align 4, !tbaa !4
  %call82 = tail call fastcc i32 @add_equal_note(%struct.rtx_def* %call74, %struct.rtx_def* %temp.1, i32 %12, %struct.rtx_def* %xop0.1, %struct.rtx_def* null) #7
  %tobool83 = icmp eq i32 %call82, 0
  br i1 %tobool83, label %if.then84, label %if.end86

if.then84:                                        ; preds = %land.lhs.true81
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #8
  %call85 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %cond23, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* null, i32 %unsignedp) #7
  br label %return

if.end86:                                         ; preds = %land.lhs.true81, %if.then76
  %call87 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call74) #8
  br label %return

if.else88:                                        ; preds = %if.end71
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #8
  br label %if.end90

if.end90:                                         ; preds = %if.end15, %if.else88
  %arrayidx92 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %wider_mode.0.in321 = load i8* %arrayidx92, align 1
  %cmp94323 = icmp eq i8 %wider_mode.0.in321, 0
  br i1 %cmp94323, label %for.end, label %for.body

for.body:                                         ; preds = %if.end90, %for.inc
  %wider_mode.0325.in = phi i8 [ %wider_mode.0.in, %for.inc ], [ %wider_mode.0.in321, %if.end90 ]
  %wider_mode.0325 = zext i8 %wider_mode.0325.in to i32
  %idxprom96 = zext i8 %wider_mode.0325.in to i64
  %insn_code99 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom96, i32 0
  %13 = load i32* %insn_code99, align 4, !tbaa !6
  %cmp100 = icmp eq i32 %13, 1317
  br i1 %cmp100, label %for.inc, label %if.then102

if.then102:                                       ; preds = %for.body
  %call104 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.0325, i32 %mode, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #8
  %call105 = tail call %struct.rtx_def* @expand_complex_abs(i32 %wider_mode.0325, %struct.rtx_def* %call104, %struct.rtx_def* null, i32 %unsignedp) #7
  %tobool106 = icmp eq %struct.rtx_def* %call105, null
  br i1 %tobool106, label %if.else118, label %if.then107

if.then107:                                       ; preds = %if.then102
  br i1 %cmp, label %if.else116, label %if.then110

if.then110:                                       ; preds = %if.then107
  %cmp111 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %cmp111, label %if.then113, label %if.end115

if.then113:                                       ; preds = %if.then110
  %call114 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #8
  br label %if.end115

if.end115:                                        ; preds = %if.then113, %if.then110
  %target.addr.1 = phi %struct.rtx_def* [ %call114, %if.then113 ], [ %target.addr.0, %if.then110 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %call105, i32 0) #8
  br label %return

if.else116:                                       ; preds = %if.then107
  %call117 = tail call %struct.rtx_def* @gen_lowpart(i32 %call4, %struct.rtx_def* %call105) #8
  br label %return

if.else118:                                       ; preds = %if.then102
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #8
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else118
  %arrayidx122 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom96
  %wider_mode.0.in = load i8* %arrayidx122, align 1
  %cmp94 = icmp eq i8 %wider_mode.0.in, 0
  br i1 %cmp94, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end90
  %idxprom124 = sext i32 %call4 to i64
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 38), align 16, !tbaa !0
  %insn_code127 = getelementptr inbounds %struct.optab* %14, i64 0, i32 1, i64 %idxprom124, i32 0
  %15 = load i32* %insn_code127, align 4, !tbaa !6
  %cmp128 = icmp eq i32 %15, 1317
  %16 = load i32* @flag_trapv, align 4, !tbaa !5
  %tobool131 = icmp ne i32 %16, 0
  %or.cond202 = or i1 %cmp128, %tobool131
  br i1 %or.cond202, label %if.end144, label %if.then132

if.then132:                                       ; preds = %for.end
  %call133 = tail call %struct.rtx_def* @gen_realpart(i32 %call4, %struct.rtx_def* %op0.addr.0) #8
  %call134 = tail call %struct.rtx_def* @gen_imagpart(i32 %call4, %struct.rtx_def* %op0.addr.0) #8
  %call135 = tail call %struct.rtx_def* @expand_mult(i32 %call4, %struct.rtx_def* %call133, %struct.rtx_def* %call133, %struct.rtx_def* null, i32 0) #8
  %call136 = tail call %struct.rtx_def* @expand_mult(i32 %call4, %struct.rtx_def* %call134, %struct.rtx_def* %call134, %struct.rtx_def* null, i32 0) #8
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16, !tbaa !0
  %call137 = tail call %struct.rtx_def* @expand_binop(i32 %call4, %struct.optab* %17, %struct.rtx_def* %call135, %struct.rtx_def* %call136, %struct.rtx_def* null, i32 0, i32 3) #7
  %18 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 38), align 16, !tbaa !0
  %call138 = tail call %struct.rtx_def* @expand_unop(i32 %call4, %struct.optab* %18, %struct.rtx_def* %call137, %struct.rtx_def* %target.addr.0, i32 0) #7
  %cmp139 = icmp eq %struct.rtx_def* %call138, null
  br i1 %cmp139, label %if.then141, label %return

if.then141:                                       ; preds = %if.then132
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #8
  br label %if.end144

if.end144:                                        ; preds = %for.end, %if.then141
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.0, %for.end ], [ null, %if.then141 ]
  %libfunc = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom, i32 1
  %19 = load %struct.rtx_def** %libfunc, align 8, !tbaa !0
  %tobool148 = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool148, label %for.cond163.preheader, label %if.then149

for.cond163.preheader:                            ; preds = %if.end144
  br i1 %cmp94323, label %for.end201, label %for.body166

if.then149:                                       ; preds = %if.end144
  tail call void @start_sequence() #8
  %20 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34), align 16, !tbaa !0
  %libfunc153 = getelementptr inbounds %struct.optab* %20, i64 0, i32 1, i64 %idxprom, i32 1
  %21 = load %struct.rtx_def** %libfunc153, align 8, !tbaa !0
  %call154 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call_value(%struct.rtx_def* %21, %struct.rtx_def* null, i32 1, i32 %call4, i32 1, %struct.rtx_def* %op0.addr.0, i32 %mode) #8
  %call155 = tail call %struct.rtx_def* @get_insns() #8
  tail call void @end_sequence() #8
  %call156 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #8
  %code157 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 0
  %22 = load i32* %code157, align 4, !tbaa !4
  %call158 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %22, i32 %mode, %struct.rtx_def* %op0.addr.0) #8
  tail call void @emit_libcall_block(%struct.rtx_def* %call155, %struct.rtx_def* %call156, %struct.rtx_def* %call154, %struct.rtx_def* %call158) #7
  br label %return

for.body166:                                      ; preds = %for.cond163.preheader, %for.inc197
  %wider_mode.1320.in = phi i8 [ %wider_mode.1.in, %for.inc197 ], [ %wider_mode.0.in321, %for.cond163.preheader ]
  %wider_mode.1320 = zext i8 %wider_mode.1320.in to i32
  %idxprom167 = zext i8 %wider_mode.1320.in to i64
  %insn_code170 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom167, i32 0
  %23 = load i32* %insn_code170, align 4, !tbaa !6
  %cmp171 = icmp eq i32 %23, 1317
  br i1 %cmp171, label %lor.lhs.false, label %if.then178

lor.lhs.false:                                    ; preds = %for.body166
  %libfunc176 = getelementptr inbounds %struct.optab* %cond23, i64 0, i32 1, i64 %idxprom167, i32 1
  %24 = load %struct.rtx_def** %libfunc176, align 8, !tbaa !0
  %tobool177 = icmp eq %struct.rtx_def* %24, null
  br i1 %tobool177, label %for.inc197, label %if.then178

if.then178:                                       ; preds = %lor.lhs.false, %for.body166
  %call180 = tail call %struct.rtx_def* @convert_modes(i32 %wider_mode.1320, i32 %mode, %struct.rtx_def* %op0.addr.0, i32 %unsignedp) #8
  %call181 = tail call %struct.rtx_def* @expand_complex_abs(i32 %wider_mode.1320, %struct.rtx_def* %call180, %struct.rtx_def* null, i32 %unsignedp) #7
  %tobool182 = icmp eq %struct.rtx_def* %call181, null
  br i1 %tobool182, label %if.else194, label %if.then183

if.then183:                                       ; preds = %if.then178
  br i1 %cmp, label %if.else192, label %if.then186

if.then186:                                       ; preds = %if.then183
  %cmp187 = icmp eq %struct.rtx_def* %target.addr.2, null
  br i1 %cmp187, label %if.then189, label %if.end191

if.then189:                                       ; preds = %if.then186
  %call190 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call4) #8
  br label %if.end191

if.end191:                                        ; preds = %if.then189, %if.then186
  %target.addr.3 = phi %struct.rtx_def* [ %call190, %if.then189 ], [ %target.addr.2, %if.then186 ]
  tail call void @convert_move(%struct.rtx_def* %target.addr.3, %struct.rtx_def* %call181, i32 0) #8
  br label %return

if.else192:                                       ; preds = %if.then183
  %call193 = tail call %struct.rtx_def* @gen_lowpart(i32 %call4, %struct.rtx_def* %call181) #8
  br label %return

if.else194:                                       ; preds = %if.then178
  tail call void @delete_insns_since(%struct.rtx_def* %call11) #8
  br label %for.inc197

for.inc197:                                       ; preds = %lor.lhs.false, %if.else194
  %arrayidx199 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom167
  %wider_mode.1.in = load i8* %arrayidx199, align 1
  %cmp164 = icmp eq i8 %wider_mode.1.in, 0
  br i1 %cmp164, label %for.end201, label %for.body166

for.end201:                                       ; preds = %for.inc197, %for.cond163.preheader
  tail call void @delete_insns_since(%struct.rtx_def* %call) #8
  br label %return

return:                                           ; preds = %if.then132, %for.end201, %if.else192, %if.end191, %if.then149, %if.else116, %if.end115, %if.end86, %if.then84
  %retval.0 = phi %struct.rtx_def* [ %temp.1, %if.end86 ], [ %call85, %if.then84 ], [ %target.addr.1, %if.end115 ], [ %call117, %if.else116 ], [ %call156, %if.then149 ], [ %target.addr.3, %if.end191 ], [ %call193, %if.else192 ], [ null, %for.end201 ], [ %call138, %if.then132 ]
  ret %struct.rtx_def* %retval.0
}
