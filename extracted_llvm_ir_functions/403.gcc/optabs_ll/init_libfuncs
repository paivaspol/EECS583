define internal fastcc void @init_libfuncs(%struct.optab* nocapture %optable, i32 %first_mode, i32 %last_mode, i8* nocapture %opname, i32 %suffix) #0 {
entry:
  %cmp59 = icmp sgt i32 %first_mode, %last_mode
  br i1 %cmp59, label %for.end33, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %call = call i64 @strlen(i8* %opname) #9
  %add4 = add i64 %call, 4
  %conv22 = trunc i32 %suffix to i8
  %0 = sext i32 %first_mode to i64
  br label %for.body

for.body:                                         ; preds = %for.end21, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end21 ], [ %0, %for.body.lr.ph ]
  %arrayidx = getelementptr inbounds [59 x i8*]* @mode_name, i64 0, i64 %indvars.iv
  %1 = load i8** %arrayidx, align 8, !tbaa !0
  %call2 = call i64 @strlen(i8* %1) #9
  %add6 = add i64 %add4, %call2
  %conv7 = and i64 %add6, 4294967295
  %2 = alloca i8, i64 %conv7, align 1
  %incdec.ptr = getelementptr inbounds i8* %2, i64 1
  store i8 95, i8* %2, align 1, !tbaa !1
  %incdec.ptr8 = getelementptr inbounds i8* %2, i64 2
  store i8 95, i8* %incdec.ptr, align 1, !tbaa !1
  %3 = load i8* %opname, align 1, !tbaa !1
  %tobool52 = icmp eq i8 %3, 0
  br i1 %tobool52, label %for.cond13.loopexit, label %for.body10

for.body10:                                       ; preds = %for.body, %for.body10
  %4 = phi i8 [ %5, %for.body10 ], [ %3, %for.body ]
  %q.054 = phi i8* [ %incdec.ptr11, %for.body10 ], [ %opname, %for.body ]
  %p.053 = phi i8* [ %incdec.ptr12, %for.body10 ], [ %incdec.ptr8, %for.body ]
  %incdec.ptr11 = getelementptr inbounds i8* %q.054, i64 1
  %incdec.ptr12 = getelementptr inbounds i8* %p.053, i64 1
  store i8 %4, i8* %p.053, align 1, !tbaa !1
  %5 = load i8* %incdec.ptr11, align 1, !tbaa !1
  %tobool = icmp eq i8 %5, 0
  br i1 %tobool, label %for.cond13.loopexit, label %for.body10

for.cond13.loopexit:                              ; preds = %for.body10, %for.body
  %p.0.lcssa = phi i8* [ %incdec.ptr8, %for.body ], [ %incdec.ptr12, %for.body10 ]
  %6 = load i8* %1, align 1, !tbaa !1
  %tobool1455 = icmp eq i8 %6, 0
  br i1 %tobool1455, label %for.end21, label %for.body15

for.body15:                                       ; preds = %for.cond13.loopexit, %for.body15
  %7 = phi i8 [ %9, %for.body15 ], [ %6, %for.cond13.loopexit ]
  %q.157 = phi i8* [ %incdec.ptr20, %for.body15 ], [ %1, %for.cond13.loopexit ]
  %p.156 = phi i8* [ %incdec.ptr19, %for.body15 ], [ %p.0.lcssa, %for.cond13.loopexit ]
  %idxprom17 = zext i8 %7 to i64
  %arrayidx18 = getelementptr inbounds [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom17
  %8 = load i8* %arrayidx18, align 1, !tbaa !1
  %incdec.ptr19 = getelementptr inbounds i8* %p.156, i64 1
  store i8 %8, i8* %p.156, align 1, !tbaa !1
  %incdec.ptr20 = getelementptr inbounds i8* %q.157, i64 1
  %9 = load i8* %incdec.ptr20, align 1, !tbaa !1
  %tobool14 = icmp eq i8 %9, 0
  br i1 %tobool14, label %for.end21, label %for.body15

for.end21:                                        ; preds = %for.body15, %for.cond13.loopexit
  %p.1.lcssa = phi i8* [ %p.0.lcssa, %for.cond13.loopexit ], [ %incdec.ptr19, %for.body15 ]
  %incdec.ptr23 = getelementptr inbounds i8* %p.1.lcssa, i64 1
  store i8 %conv22, i8* %p.1.lcssa, align 1, !tbaa !1
  store i8 0, i8* %incdec.ptr23, align 1, !tbaa !1
  %10 = load i32* @target_flags, align 4, !tbaa !5
  %and24 = lshr i32 %10, 25
  %11 = and i32 %and24, 1
  %12 = or i32 %11, 4
  %sub.ptr.lhs.cast = ptrtoint i8* %incdec.ptr23 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv26 = trunc i64 %sub.ptr.sub to i32
  %call27 = call i8* @ggc_alloc_string(i8* %2, i32 %conv26) #8
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %12, i8* %call27) #8
  %libfunc = getelementptr inbounds %struct.optab* %optable, i64 0, i32 1, i64 %indvars.iv, i32 1
  store %struct.rtx_def* %call28, %struct.rtx_def** %libfunc, align 8, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %13 = trunc i64 %indvars.iv to i32
  %cmp = icmp slt i32 %13, %last_mode
  br i1 %cmp, label %for.body, label %for.end33

for.end33:                                        ; preds = %for.end21, %entry
  ret void
}
