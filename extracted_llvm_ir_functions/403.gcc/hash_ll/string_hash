define i64 @string_hash(i8* nocapture %k) #4 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %k}, i64 0, metadata !153), !dbg !251
  tail call void @llvm.dbg.value(metadata !{i8* %k}, i64 0, metadata !154), !dbg !252
  tail call void @llvm.dbg.value(metadata !253, i64 0, metadata !158), !dbg !254
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !160), !dbg !255
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !154), !dbg !256
  %0 = load i8* %k, align 1, !dbg !256, !tbaa !189
  tail call void @llvm.dbg.value(metadata !{i8 %0}, i64 0, metadata !159), !dbg !256
  %cmp22 = icmp eq i8 %0, 0, !dbg !256
  br i1 %cmp22, label %while.end, label %while.body, !dbg !256

while.body:                                       ; preds = %entry, %while.body
  %1 = phi i8 [ %2, %while.body ], [ %0, %entry ]
  %len.025 = phi i32 [ %inc, %while.body ], [ 0, %entry ]
  %s.024 = phi i8* [ %incdec.ptr, %while.body ], [ %k, %entry ]
  %hash.023 = phi i64 [ %xor, %while.body ], [ 0, %entry ]
  %conv = zext i8 %1 to i64, !dbg !256
  %incdec.ptr = getelementptr inbounds i8* %s.024, i64 1, !dbg !256
  %add = mul i64 %conv, 131073, !dbg !257
  %add5 = add i64 %add, %hash.023, !dbg !257
  tail call void @llvm.dbg.value(metadata !{i64 %add5}, i64 0, metadata !158), !dbg !257
  %shr = lshr i64 %add5, 2, !dbg !259
  %xor = xor i64 %shr, %add5, !dbg !259
  tail call void @llvm.dbg.value(metadata !{i64 %xor}, i64 0, metadata !158), !dbg !259
  %inc = add i32 %len.025, 1, !dbg !260
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !160), !dbg !260
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !154), !dbg !256
  %2 = load i8* %incdec.ptr, align 1, !dbg !256, !tbaa !189
  tail call void @llvm.dbg.value(metadata !{i8 %1}, i64 0, metadata !159), !dbg !256
  %cmp = icmp eq i8 %2, 0, !dbg !256
  br i1 %cmp, label %while.cond.while.end_crit_edge, label %while.body, !dbg !256

while.cond.while.end_crit_edge:                   ; preds = %while.body
  %phitmp = mul i32 %inc, 131073, !dbg !256
  %phitmp27 = zext i32 %phitmp to i64, !dbg !256
  br label %while.end, !dbg !256

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %entry
  %len.0.lcssa = phi i64 [ %phitmp27, %while.cond.while.end_crit_edge ], [ 0, %entry ]
  %hash.0.lcssa = phi i64 [ %xor, %while.cond.while.end_crit_edge ], [ 0, %entry ]
  %add9 = add i64 %len.0.lcssa, %hash.0.lcssa, !dbg !261
  tail call void @llvm.dbg.value(metadata !{i64 %add9}, i64 0, metadata !158), !dbg !261
  %shr10 = lshr i64 %add9, 2, !dbg !262
  %xor11 = xor i64 %shr10, %add9, !dbg !262
  tail call void @llvm.dbg.value(metadata !{i64 %xor11}, i64 0, metadata !158), !dbg !262
  ret i64 %xor11, !dbg !263
}
