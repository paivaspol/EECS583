define void @hash_table_init_n(%struct.hash_table* %table, %struct.hash_entry* (%struct.hash_entry*, %struct.hash_table*, i8*)* %newfunc, i64 (i8*)* %hash, i1 (i8*, i8*)* %comp, i32 %size) #0 {
entry:
  %mul = shl i32 %size, 3
  %memory = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 5
  %call = tail call i32 @_obstack_begin(%struct.obstack* %memory, i32 %mul, i32 0, i8* (i64)* @xmalloc, void (i8*)* @free) #6
  %chunk_limit = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 5, i32 4
  %0 = load i8** %chunk_limit, align 8, !tbaa !0
  %next_free = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 5, i32 3
  %1 = load i8** %next_free, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv3 = sext i32 %mul to i64
  %cmp = icmp slt i64 %sub.ptr.sub, %conv3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* %memory, i32 %mul) #6
  %.pre = load i8** %next_free, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %1, %entry ]
  %add.ptr = getelementptr inbounds i8* %2, i64 %conv3
  store i8* %add.ptr, i8** %next_free, align 8, !tbaa !0
  %object_base = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 5, i32 2
  %3 = load i8** %object_base, align 8, !tbaa !0
  %cmp7 = icmp eq i8* %add.ptr, %3
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %maybe_empty_object = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 5, i32 10
  %bf.load = load i8* %maybe_empty_object, align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then9
  %sub.ptr.lhs.cast12 = ptrtoint i8* %add.ptr to i64
  %alignment_mask = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 5, i32 6
  %4 = load i32* %alignment_mask, align 4, !tbaa !3
  %conv14 = sext i32 %4 to i64
  %add = add nsw i64 %conv14, %sub.ptr.lhs.cast12
  %neg = xor i32 %4, -1
  %conv16 = sext i32 %neg to i64
  %and = and i64 %add, %conv16
  %add.ptr17 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr17, i8** %next_free, align 8, !tbaa !0
  %chunk = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 5, i32 1
  %5 = load %struct._obstack_chunk** %chunk, align 8, !tbaa !0
  %sub.ptr.lhs.cast20 = ptrtoint i8* %add.ptr17 to i64
  %sub.ptr.rhs.cast21 = ptrtoint %struct._obstack_chunk* %5 to i64
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21
  %6 = load i8** %chunk_limit, align 8, !tbaa !0
  %sub.ptr.lhs.cast25 = ptrtoint i8* %6 to i64
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast21
  %cmp28 = icmp sgt i64 %sub.ptr.sub22, %sub.ptr.sub27
  br i1 %cmp28, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.end10
  store i8* %6, i8** %next_free, align 8, !tbaa !0
  br label %if.end33

if.end33:                                         ; preds = %if.then30, %if.end10
  %7 = phi i8* [ %6, %if.then30 ], [ %add.ptr17, %if.end10 ]
  store i8* %7, i8** %object_base, align 8, !tbaa !0
  %8 = bitcast i8* %3 to %struct.hash_entry**
  %table36 = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 0
  store %struct.hash_entry** %8, %struct.hash_entry*** %table36, align 8, !tbaa !0
  %conv38 = zext i32 %mul to i64
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 %conv38, i32 1, i1 false)
  %size39 = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 1
  store i32 %size, i32* %size39, align 4, !tbaa !3
  %newfunc40 = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 2
  store %struct.hash_entry* (%struct.hash_entry*, %struct.hash_table*, i8*)* %newfunc, %struct.hash_entry* (%struct.hash_entry*, %struct.hash_table*, i8*)** %newfunc40, align 8, !tbaa !0
  %hash41 = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 3
  store i64 (i8*)* %hash, i64 (i8*)** %hash41, align 8, !tbaa !0
  %comp42 = getelementptr inbounds %struct.hash_table* %table, i64 0, i32 4
  store i1 (i8*, i8*)* %comp, i1 (i8*, i8*)** %comp42, align 8, !tbaa !0
  ret void
}
