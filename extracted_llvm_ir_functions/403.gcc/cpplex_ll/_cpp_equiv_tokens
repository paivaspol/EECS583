define i32 @_cpp_equiv_tokens(%struct.cpp_token* nocapture %a, %struct.cpp_token* nocapture %b) #0 {
entry:
  %type = getelementptr inbounds %struct.cpp_token* %a, i64 0, i32 2
  %0 = bitcast i8* %type to i16*
  %bf.load = load i16* %0, align 2
  %1 = trunc i16 %bf.load to i8
  %type1 = getelementptr inbounds %struct.cpp_token* %b, i64 0, i32 2
  %2 = bitcast i8* %type1 to i16*
  %bf.load2 = load i16* %2, align 2
  %3 = trunc i16 %bf.load2 to i8
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %entry
  %4 = lshr i16 %bf.load2, 8
  %5 = lshr i16 %bf.load, 8
  %6 = trunc i16 %4 to i8
  %7 = trunc i16 %5 to i8
  %cmp6 = icmp eq i8 %7, %6
  br i1 %cmp6, label %if.then, label %return

if.then:                                          ; preds = %land.lhs.true
  %.mask = and i16 %bf.load, 255
  %idxprom = zext i16 %.mask to i64
  %category = getelementptr inbounds [68 x %struct.token_spelling]* @token_spellings, i64 0, i64 %idxprom, i32 0
  %8 = load i32* %category, align 16, !tbaa !10
  switch i32 %8, label %return [
    i32 4, label %sw.bb35
    i32 1, label %sw.bb11
    i32 5, label %sw.bb18
    i32 2, label %sw.bb29
    i32 3, label %sw.bb35
  ]

sw.bb11:                                          ; preds = %if.then
  %val = getelementptr inbounds %struct.cpp_token* %a, i64 0, i32 4
  %c = bitcast %union.anon* %val to i8*
  %9 = load i8* %c, align 1, !tbaa !1
  %val13 = getelementptr inbounds %struct.cpp_token* %b, i64 0, i32 4
  %c14 = bitcast %union.anon* %val13 to i8*
  %10 = load i8* %c14, align 1, !tbaa !1
  %cmp16 = icmp eq i8 %9, %10
  %conv17 = zext i1 %cmp16 to i32
  br label %return

sw.bb18:                                          ; preds = %if.then
  %cmp22 = icmp eq i8 %1, 65
  br i1 %cmp22, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %sw.bb18
  %arg_no = getelementptr inbounds %struct.cpp_token* %a, i64 0, i32 4, i32 0, i32 0
  %11 = load i32* %arg_no, align 4, !tbaa !3
  %arg_no26 = getelementptr inbounds %struct.cpp_token* %b, i64 0, i32 4, i32 0, i32 0
  %12 = load i32* %arg_no26, align 4, !tbaa !3
  %cmp27 = icmp eq i32 %11, %12
  br label %lor.end

lor.end:                                          ; preds = %sw.bb18, %lor.rhs
  %13 = phi i1 [ true, %sw.bb18 ], [ %cmp27, %lor.rhs ]
  %lor.ext = zext i1 %13 to i32
  br label %return

sw.bb29:                                          ; preds = %if.then
  %val30 = getelementptr inbounds %struct.cpp_token* %a, i64 0, i32 4
  %node = bitcast %union.anon* %val30 to %struct.cpp_hashnode**
  %14 = load %struct.cpp_hashnode** %node, align 8, !tbaa !0
  %val31 = getelementptr inbounds %struct.cpp_token* %b, i64 0, i32 4
  %node32 = bitcast %union.anon* %val31 to %struct.cpp_hashnode**
  %15 = load %struct.cpp_hashnode** %node32, align 8, !tbaa !0
  %cmp33 = icmp eq %struct.cpp_hashnode* %14, %15
  %conv34 = zext i1 %cmp33 to i32
  br label %return

sw.bb35:                                          ; preds = %if.then, %if.then
  %len = getelementptr inbounds %struct.cpp_token* %a, i64 0, i32 4, i32 0, i32 0
  %16 = load i32* %len, align 4, !tbaa !3
  %len39 = getelementptr inbounds %struct.cpp_token* %b, i64 0, i32 4, i32 0, i32 0
  %17 = load i32* %len39, align 4, !tbaa !3
  %cmp40 = icmp eq i32 %16, %17
  br i1 %cmp40, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb35
  %text = getelementptr inbounds %struct.cpp_token* %a, i64 0, i32 4, i32 0, i32 1
  %18 = load i8** %text, align 8, !tbaa !0
  %text46 = getelementptr inbounds %struct.cpp_token* %b, i64 0, i32 4, i32 0, i32 1
  %19 = load i8** %text46, align 8, !tbaa !0
  %conv50 = zext i32 %16 to i64
  %call = tail call i32 @memcmp(i8* %18, i8* %19, i64 %conv50) #8
  %lnot = icmp eq i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb35
  %20 = phi i1 [ false, %sw.bb35 ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %20 to i32
  br label %return

return:                                           ; preds = %entry, %land.lhs.true, %if.then, %land.end, %sw.bb29, %lor.end, %sw.bb11
  %retval.0 = phi i32 [ %conv34, %sw.bb29 ], [ %lor.ext, %lor.end ], [ %conv17, %sw.bb11 ], [ %land.ext, %land.end ], [ 1, %if.then ], [ 0, %land.lhs.true ], [ 0, %entry ]
  ret i32 %retval.0
}
