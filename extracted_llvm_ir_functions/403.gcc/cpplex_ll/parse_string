define internal fastcc void @parse_string(%struct.cpp_reader* %pfile, %struct.cpp_token* nocapture %token, i32 %terminator) #1 {
entry:
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !tbaa !0
  %u_buff = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 7
  %1 = load %struct._cpp_buff** %u_buff, align 8, !tbaa !0
  %cur = getelementptr inbounds %struct._cpp_buff* %1, i64 0, i32 2
  %2 = load i8** %cur, align 8, !tbaa !0
  %limit3 = getelementptr inbounds %struct._cpp_buff* %1, i64 0, i32 3
  %3 = load i8** %limit3, align 8, !tbaa !0
  %cur14 = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 0
  %angled_headers.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 2
  %rlimit = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 2
  %lang = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  %cmp33 = icmp eq i32 %terminator, 62
  %cmp39 = icmp eq i32 %terminator, 34
  %mls_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 21
  %line = getelementptr inbounds %struct.cpp_token* %token, i64 0, i32 0
  %col = getelementptr inbounds %struct.cpp_token* %token, i64 0, i32 1
  %mls_col = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 22
  br label %for.cond

for.cond:                                         ; preds = %if.end74, %entry
  %limit.0 = phi i8* [ %3, %entry ], [ %limit.1, %if.end74 ]
  %warned_nulls.0 = phi i8 [ 0, %entry ], [ %warned_nulls.1, %if.end74 ]
  %warned_multi.0 = phi i8 [ 0, %entry ], [ %warned_multi.2, %if.end74 ]
  %dest.0 = phi i8* [ %2, %entry ], [ %incdec.ptr76, %if.end74 ]
  %cmp = icmp eq i8* %limit.0, %dest.0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  %sub.ptr.rhs.cast = ptrtoint i8* %limit.0 to i64
  %4 = load %struct._cpp_buff** %u_buff, align 8, !tbaa !0
  %cur5 = getelementptr inbounds %struct._cpp_buff* %4, i64 0, i32 2
  %5 = load i8** %cur5, align 8, !tbaa !0
  %sub.ptr.rhs.cast7 = ptrtoint i8* %5 to i64
  %sub.ptr.sub8 = sub i64 %sub.ptr.rhs.cast, %sub.ptr.rhs.cast7
  %limit.i = getelementptr inbounds %struct._cpp_buff* %4, i64 0, i32 3
  %6 = load i8** %limit.i, align 8, !tbaa !0
  %sub.ptr.lhs.cast.i = ptrtoint i8* %6 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast7
  %mul.i = shl i64 %sub.ptr.sub.i, 1
  %add.i = add i64 %mul.i, 2
  %call.i = tail call %struct._cpp_buff* @_cpp_get_buff(%struct.cpp_reader* %pfile, i64 %add.i) #9
  %base.i = getelementptr inbounds %struct._cpp_buff* %call.i, i64 0, i32 1
  %7 = load i8** %base.i, align 8, !tbaa !0
  %8 = load i8** %cur5, align 8, !tbaa !0
  %9 = load i8** %limit.i, align 8, !tbaa !0
  %sub.ptr.lhs.cast4.i = ptrtoint i8* %9 to i64
  %sub.ptr.rhs.cast5.i = ptrtoint i8* %8 to i64
  %sub.ptr.sub6.i = sub i64 %sub.ptr.lhs.cast4.i, %sub.ptr.rhs.cast5.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 %sub.ptr.sub6.i, i32 1, i1 false) #3
  %next.i = getelementptr inbounds %struct._cpp_buff* %call.i, i64 0, i32 0
  store %struct._cpp_buff* %4, %struct._cpp_buff** %next.i, align 8, !tbaa !0
  store %struct._cpp_buff* %call.i, %struct._cpp_buff** %u_buff, align 8, !tbaa !0
  %cur11 = getelementptr inbounds %struct._cpp_buff* %call.i, i64 0, i32 2
  %10 = load i8** %cur11, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %10, i64 %sub.ptr.sub8
  %limit13 = getelementptr inbounds %struct._cpp_buff* %call.i, i64 0, i32 3
  %11 = load i8** %limit13, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %for.cond
  %limit.1 = phi i8* [ %11, %if.then ], [ %limit.0, %for.cond ]
  %dest.1 = phi i8* [ %add.ptr, %if.then ], [ %dest.0, %for.cond ]
  %12 = load i8** %cur14, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i8* %12, i64 1
  store i8* %incdec.ptr, i8** %cur14, align 8, !tbaa !0
  %13 = load i8* %12, align 1, !tbaa !1
  %conv = zext i8 %13 to i32
  switch i8 %13, label %if.end20 [
    i8 92, label %if.then19
    i8 63, label %if.then19
  ]

if.then19:                                        ; preds = %if.end, %if.end
  %call = tail call fastcc i32 @skip_escaped_newlines(%struct.cpp_reader* %pfile) #10
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then19
  %c.0 = phi i32 [ %call, %if.then19 ], [ %conv, %if.end ]
  %cmp21 = icmp eq i32 %c.0, %terminator
  br i1 %cmp21, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.end20
  %14 = load i8* %angled_headers.i, align 1, !tbaa !1
  %tobool.i = icmp eq i8 %14, 0
  br i1 %tobool.i, label %if.end.i, label %for.end

if.end.i:                                         ; preds = %if.then23
  %15 = load %struct._cpp_buff** %u_buff, align 8, !tbaa !0
  %cur.i136 = getelementptr inbounds %struct._cpp_buff* %15, i64 0, i32 2
  %16 = load i8** %cur.i136, align 8, !tbaa !0
  br label %for.cond.i

for.cond.i:                                       ; preds = %land.rhs.i, %if.end.i
  %temp.0.i = phi i8* [ %dest.1, %if.end.i ], [ %arrayidx.i, %land.rhs.i ]
  %cmp.i = icmp ugt i8* %temp.0.i, %16
  br i1 %cmp.i, label %land.rhs.i, label %unescaped_terminator_p.exit

land.rhs.i:                                       ; preds = %for.cond.i
  %arrayidx.i = getelementptr inbounds i8* %temp.0.i, i64 -1
  %17 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp1.i = icmp eq i8 %17, 92
  br i1 %cmp1.i, label %for.cond.i, label %unescaped_terminator_p.exit

unescaped_terminator_p.exit:                      ; preds = %for.cond.i, %land.rhs.i
  %sub.ptr.lhs.cast.i137 = ptrtoint i8* %dest.1 to i64
  %sub.ptr.rhs.cast.i138 = ptrtoint i8* %temp.0.i to i64
  %sub.ptr.sub.i139 = sub i64 %sub.ptr.lhs.cast.i137, %sub.ptr.rhs.cast.i138
  %and.i = and i64 %sub.ptr.sub.i139, 1
  %tobool = icmp eq i64 %and.i, 0
  br i1 %tobool, label %for.end, label %if.end74

if.else:                                          ; preds = %if.end20
  %and = and i32 %c.0, 255
  %idxprom135 = zext i32 %and to i64
  %arrayidx = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom135
  %18 = load i16* %arrayidx, align 2, !tbaa !4
  %and28 = and i16 %18, 1024
  %tobool29 = icmp eq i16 %and28, 0
  br i1 %tobool29, label %if.else57, label %if.then30

if.then30:                                        ; preds = %if.else
  %19 = load i32* %lang, align 4, !tbaa !9
  %cmp31 = icmp ne i32 %19, 9
  %or.cond = or i1 %cmp31, %cmp33
  br i1 %or.cond, label %if.end38, label %if.then35

if.then35:                                        ; preds = %if.then30
  %20 = load i8** %cur14, align 8, !tbaa !0
  %incdec.ptr37 = getelementptr inbounds i8* %20, i64 -1
  store i8* %incdec.ptr37, i8** %cur14, align 8, !tbaa !0
  br label %for.end

if.end38:                                         ; preds = %if.then30
  br i1 %cmp39, label %lor.lhs.false41, label %if.then44

lor.lhs.false41:                                  ; preds = %if.end38
  %21 = load i8* %angled_headers.i, align 1, !tbaa !1
  %tobool43 = icmp eq i8 %21, 0
  br i1 %tobool43, label %if.end47, label %if.then44

if.then44:                                        ; preds = %lor.lhs.false41, %if.end38
  tail call fastcc void @unterminated(%struct.cpp_reader* %pfile, i32 %terminator) #10
  %22 = load i8** %cur14, align 8, !tbaa !0
  %incdec.ptr46 = getelementptr inbounds i8* %22, i64 -1
  store i8* %incdec.ptr46, i8** %cur14, align 8, !tbaa !0
  br label %for.end

if.end47:                                         ; preds = %lor.lhs.false41
  %23 = and i8 %warned_multi.0, 1
  %tobool48 = icmp eq i8 %23, 0
  br i1 %tobool48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.end47
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([42 x i8]* @.str102, i64 0, i64 0)) #9
  br label %if.end50

if.end50:                                         ; preds = %if.end47, %if.then49
  %warned_multi.1 = phi i8 [ %warned_multi.0, %if.end47 ], [ 1, %if.then49 ]
  %24 = load i32* %mls_line, align 4, !tbaa !3
  %cmp51 = icmp eq i32 %24, 0
  br i1 %cmp51, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end50
  %25 = load i32* %line, align 4, !tbaa !3
  store i32 %25, i32* %mls_line, align 4, !tbaa !3
  %26 = load i16* %col, align 2, !tbaa !4
  %conv55 = zext i16 %26 to i32
  store i32 %conv55, i32* %mls_col, align 4, !tbaa !3
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end50
  tail call fastcc void @handle_newline(%struct.cpp_reader* %pfile) #10
  br label %if.end74

if.else57:                                        ; preds = %if.else
  %cmp58 = icmp eq i32 %c.0, 0
  br i1 %cmp58, label %if.then60, label %if.end74

if.then60:                                        ; preds = %if.else57
  %27 = load i8** %cur14, align 8, !tbaa !0
  %add.ptr62 = getelementptr inbounds i8* %27, i64 -1
  %28 = load i8** %rlimit, align 8, !tbaa !0
  %cmp63 = icmp eq i8* %add.ptr62, %28
  br i1 %cmp63, label %if.then65, label %if.end68

if.then65:                                        ; preds = %if.then60
  tail call fastcc void @unterminated(%struct.cpp_reader* %pfile, i32 %terminator) #10
  %29 = load i8** %cur14, align 8, !tbaa !0
  %incdec.ptr67 = getelementptr inbounds i8* %29, i64 -1
  store i8* %incdec.ptr67, i8** %cur14, align 8, !tbaa !0
  br label %for.end

if.end68:                                         ; preds = %if.then60
  %30 = and i8 %warned_nulls.0, 1
  %tobool69 = icmp eq i8 %30, 0
  br i1 %tobool69, label %if.then70, label %if.end74

if.then70:                                        ; preds = %if.end68
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([39 x i8]* @.str103, i64 0, i64 0)) #9
  br label %if.end74

if.end74:                                         ; preds = %unescaped_terminator_p.exit, %if.end68, %if.end56, %if.then70, %if.else57
  %c.1 = phi i32 [ %terminator, %unescaped_terminator_p.exit ], [ 10, %if.end56 ], [ 0, %if.end68 ], [ 0, %if.then70 ], [ %c.0, %if.else57 ]
  %warned_nulls.1 = phi i8 [ %warned_nulls.0, %unescaped_terminator_p.exit ], [ %warned_nulls.0, %if.end56 ], [ %warned_nulls.0, %if.end68 ], [ 1, %if.then70 ], [ %warned_nulls.0, %if.else57 ]
  %warned_multi.2 = phi i8 [ %warned_multi.0, %unescaped_terminator_p.exit ], [ %warned_multi.1, %if.end56 ], [ %warned_multi.0, %if.end68 ], [ %warned_multi.0, %if.then70 ], [ %warned_multi.0, %if.else57 ]
  %conv75 = trunc i32 %c.1 to i8
  %incdec.ptr76 = getelementptr inbounds i8* %dest.1, i64 1
  store i8 %conv75, i8* %dest.1, align 1, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %unescaped_terminator_p.exit, %if.then23, %if.then65, %if.then44, %if.then35
  store i8 0, i8* %dest.1, align 1, !tbaa !1
  %31 = load %struct._cpp_buff** %u_buff, align 8, !tbaa !0
  %cur78 = getelementptr inbounds %struct._cpp_buff* %31, i64 0, i32 2
  %32 = load i8** %cur78, align 8, !tbaa !0
  %text = getelementptr inbounds %struct.cpp_token* %token, i64 0, i32 4, i32 0, i32 1
  store i8* %32, i8** %text, align 8, !tbaa !0
  %33 = load %struct._cpp_buff** %u_buff, align 8, !tbaa !0
  %cur80 = getelementptr inbounds %struct._cpp_buff* %33, i64 0, i32 2
  %34 = load i8** %cur80, align 8, !tbaa !0
  %sub.ptr.lhs.cast81 = ptrtoint i8* %dest.1 to i64
  %sub.ptr.rhs.cast82 = ptrtoint i8* %34 to i64
  %sub.ptr.sub83 = sub i64 %sub.ptr.lhs.cast81, %sub.ptr.rhs.cast82
  %conv84 = trunc i64 %sub.ptr.sub83 to i32
  %len = getelementptr inbounds %struct.cpp_token* %token, i64 0, i32 4, i32 0, i32 0
  store i32 %conv84, i32* %len, align 4, !tbaa !3
  %add.ptr87 = getelementptr inbounds i8* %dest.1, i64 1
  store i8* %add.ptr87, i8** %cur80, align 8, !tbaa !0
  ret void
}
