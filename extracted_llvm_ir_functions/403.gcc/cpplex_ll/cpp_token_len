define i32 @cpp_token_len(%struct.cpp_token* nocapture %token) #0 {
entry:
  %type = getelementptr inbounds %struct.cpp_token* %token, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %idxprom = zext i8 %bf.load to i64
  %category = getelementptr inbounds [68 x %struct.token_spelling]* @token_spellings, i64 0, i64 %idxprom, i32 0
  %0 = load i32* %category, align 16, !tbaa !10
  switch i32 %0, label %sw.epilog [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 2, label %sw.bb2
  ]

sw.bb:                                            ; preds = %entry, %entry
  %len1 = getelementptr inbounds %struct.cpp_token* %token, i64 0, i32 4, i32 0, i32 0
  %1 = load i32* %len1, align 4, !tbaa !3
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %val3 = getelementptr inbounds %struct.cpp_token* %token, i64 0, i32 4
  %node = bitcast %union.anon* %val3 to %struct.cpp_hashnode**
  %2 = load %struct.cpp_hashnode** %node, align 8, !tbaa !0
  %len4 = getelementptr inbounds %struct.cpp_hashnode* %2, i64 0, i32 0, i32 0
  %3 = load i32* %len4, align 4, !tbaa !3
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb
  %len.0 = phi i32 [ %3, %sw.bb2 ], [ %1, %sw.bb ], [ 0, %entry ]
  %add = add i32 %len.0, 5
  ret i32 %add
}
