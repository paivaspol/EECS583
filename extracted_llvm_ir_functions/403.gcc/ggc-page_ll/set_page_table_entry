define internal fastcc void @set_page_table_entry(i8* %p, %struct.page_entry* %entry1) #0 {
entry:
  %0 = ptrtoint i8* %p to i64
  %and = and i64 %0, -4294967296
  %table.035 = load %struct.page_table_chain** getelementptr inbounds (%struct.globals* @G, i64 0, i32 2), align 8
  %tobool36 = icmp eq %struct.page_table_chain* %table.035, null
  br i1 %tobool36, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.page_table_chain* %table.037, i64 0, i32 0
  %table.0 = load %struct.page_table_chain** %next, align 8
  %tobool = icmp eq %struct.page_table_chain* %table.0, null
  br i1 %tobool, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.cond
  %table.037 = phi %struct.page_table_chain* [ %table.0, %for.cond ], [ %table.035, %entry ]
  %high_bits2 = getelementptr inbounds %struct.page_table_chain* %table.037, i64 0, i32 1
  %1 = load i64* %high_bits2, align 8, !tbaa !4
  %cmp = icmp eq i64 %1, %and
  br i1 %cmp, label %found, label %for.cond

for.end:                                          ; preds = %for.cond, %entry
  %call = tail call noalias i8* @xcalloc(i64 1, i64 2064) #8
  %2 = bitcast i8* %call to %struct.page_table_chain*
  %3 = load %struct.page_table_chain** getelementptr inbounds (%struct.globals* @G, i64 0, i32 2), align 8, !tbaa !0
  %next3 = bitcast i8* %call to %struct.page_table_chain**
  store %struct.page_table_chain* %3, %struct.page_table_chain** %next3, align 8, !tbaa !0
  %high_bits4 = getelementptr inbounds i8* %call, i64 8
  %4 = bitcast i8* %high_bits4 to i64*
  store i64 %and, i64* %4, align 8, !tbaa !4
  store %struct.page_table_chain* %2, %struct.page_table_chain** getelementptr inbounds (%struct.globals* @G, i64 0, i32 2), align 8, !tbaa !0
  br label %found

found:                                            ; preds = %for.body, %for.end
  %table.1 = phi %struct.page_table_chain* [ %2, %for.end ], [ %table.037, %for.body ]
  %shr = lshr i64 %0, 24
  %and6 = and i64 %shr, 255
  %5 = load i64* getelementptr inbounds (%struct.globals* @G, i64 0, i32 4), align 8, !tbaa !4
  %shr7 = lshr i64 %0, %5
  %sub = sub i64 24, %5
  %sh_prom = trunc i64 %sub to i32
  %shl = shl i32 1, %sh_prom
  %sub8 = add nsw i32 %shl, -1
  %conv = sext i32 %sub8 to i64
  %and9 = and i64 %conv, %shr7
  %arrayidx10 = getelementptr inbounds %struct.page_table_chain* %table.1, i64 0, i32 2, i64 %and6
  %6 = load %struct.page_entry*** %arrayidx10, align 8, !tbaa !0
  %cmp11 = icmp eq %struct.page_entry** %6, null
  br i1 %cmp11, label %if.then13, label %if.end18

if.then13:                                        ; preds = %found
  %shl15 = shl i64 1, %sub
  %call16 = tail call noalias i8* @xcalloc(i64 %shl15, i64 8) #8
  %7 = bitcast i8* %call16 to %struct.page_entry**
  store %struct.page_entry** %7, %struct.page_entry*** %arrayidx10, align 8, !tbaa !0
  br label %if.end18

if.end18:                                         ; preds = %if.then13, %found
  %8 = phi %struct.page_entry** [ %7, %if.then13 ], [ %6, %found ]
  %arrayidx20 = getelementptr inbounds %struct.page_entry** %8, i64 %and9
  store %struct.page_entry* %entry1, %struct.page_entry** %arrayidx20, align 8, !tbaa !0
  ret void
}
