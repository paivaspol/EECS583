define void @layout_decl(%union.tree_node* %decl, i32 %known_align) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !0
  %code3 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code3 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 32
  br i1 %cmp, label %if.end383, label %if.else

if.else:                                          ; preds = %entry
  %bf.clear.off = add i32 %bf.clear, -34
  %2 = icmp ugt i32 %bf.clear.off, 1
  %cmp7 = icmp ne i32 %bf.clear, 36
  %or.cond384 = and i1 %2, %cmp7
  %cmp9 = icmp ne i32 %bf.clear, 33
  %or.cond385 = and i1 %or.cond384, %cmp9
  %cmp11 = icmp ne i32 %bf.clear, 37
  %or.cond386 = and i1 %or.cond385, %cmp11
  br i1 %or.cond386, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str, i64 0, i64 0), i32 346, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.layout_decl, i64 0, i64 0)) #8
  unreachable

if.end13:                                         ; preds = %if.else
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp14 = icmp eq %union.tree_node* %0, %3
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !0
  %. = select i1 %cmp14, %union.tree_node* %4, %union.tree_node* %0
  %unsigned_flag = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load18 = load i32* %5, align 8
  %bf.clear19 = and i32 %bf.load18, 8192
  %bf.clear23 = and i32 %bf.load, -8193
  %bf.set = or i32 %bf.clear19, %bf.clear23
  store i32 %bf.set, i32* %1, align 8
  %mode = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %6 = bitcast [8 x i8]* %mode to i64*
  %bf.load25 = load i64* %6, align 8
  %bf.cast = and i64 %bf.load25, 255
  %cmp27 = icmp eq i64 %bf.cast, 0
  br i1 %cmp27, label %if.then28, label %if.end40

if.then28:                                        ; preds = %if.end13
  %type29 = bitcast %union.tree_node* %. to %struct.tree_type*
  %mode30 = getelementptr inbounds %struct.tree_type* %type29, i64 0, i32 6
  %7 = bitcast [4 x i8]* %mode30 to i32*
  %bf.load31 = load i32* %7, align 4
  %bf.lshr32 = lshr i32 %bf.load31, 9
  %8 = zext i32 %bf.lshr32 to i64
  %bf.value37 = and i64 %8, 127
  %bf.clear38 = and i64 %bf.load25, -256
  %bf.set39 = or i64 %bf.value37, %bf.clear38
  store i64 %bf.set39, i64* %6, align 8
  br label %if.end40

if.end40:                                         ; preds = %if.then28, %if.end13
  %size = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4
  %9 = load %union.tree_node** %size, align 8, !tbaa !0
  %cmp42 = icmp eq %union.tree_node* %9, null
  br i1 %cmp42, label %if.then43, label %if.else51

if.then43:                                        ; preds = %if.end40
  %size45 = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 2
  %10 = bitcast i32* %size45 to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !0
  store %union.tree_node* %11, %union.tree_node** %size, align 8, !tbaa !0
  %12 = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 4
  %13 = load %union.tree_node** %12, align 8, !tbaa !0
  %size_unit50 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 7
  store %union.tree_node* %13, %union.tree_node** %size_unit50, align 8, !tbaa !0
  br label %if.end57

if.else51:                                        ; preds = %if.end40
  %14 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !tbaa !0
  %15 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 19), align 8, !tbaa !0
  %call = tail call %union.tree_node* @size_binop(i32 63, %union.tree_node* %9, %union.tree_node* %15) #7
  %call54 = tail call %union.tree_node* @convert(%union.tree_node* %14, %union.tree_node* %call) #7
  %size_unit56 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 7
  store %union.tree_node* %call54, %union.tree_node** %size_unit56, align 8, !tbaa !0
  br label %if.end57

if.end57:                                         ; preds = %if.else51, %if.then43
  %16 = phi %union.tree_node* [ %call54, %if.else51 ], [ %13, %if.then43 ]
  %cmp58 = icmp eq i32 %bf.clear, 37
  br i1 %cmp58, label %land.lhs.true59, label %land.lhs.true65

land.lhs.true59:                                  ; preds = %if.end57
  %bf.load61 = load i64* %6, align 8
  %bf.cast64 = and i64 %bf.load61, 4096
  %tobool = icmp eq i64 %bf.cast64, 0
  br i1 %tobool, label %land.lhs.true65, label %if.then101

land.lhs.true65:                                  ; preds = %land.lhs.true59, %if.end57
  %u1 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %17 = bitcast %union.anon* %u1 to i32*
  %bf.load67 = load i32* %17, align 4
  %bf.clear68 = and i32 %bf.load67, 16777215
  %cmp69 = icmp eq i32 %bf.clear68, 0
  br i1 %cmp69, label %land.lhs.true65.if.then86_crit_edge, label %lor.lhs.false

land.lhs.true65.if.then86_crit_edge:              ; preds = %land.lhs.true65
  %align88.phi.trans.insert = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 7
  %.phi.trans.insert = bitcast %union.tree_node** %align88.phi.trans.insert to i32*
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !3
  br label %if.then86

lor.lhs.false:                                    ; preds = %land.lhs.true65
  br i1 %cmp58, label %land.lhs.true71, label %land.lhs.true78

land.lhs.true71:                                  ; preds = %lor.lhs.false
  %bf.load73 = load i64* %6, align 8
  %bf.cast76 = and i64 %bf.load73, 1024
  %tobool77 = icmp eq i64 %bf.cast76, 0
  br i1 %tobool77, label %land.lhs.true78, label %if.then101

land.lhs.true78:                                  ; preds = %land.lhs.true71, %lor.lhs.false
  %align = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 7
  %18 = bitcast %union.tree_node** %align to i32*
  %19 = load i32* %18, align 4, !tbaa !3
  %cmp85 = icmp ugt i32 %19, %bf.clear68
  br i1 %cmp85, label %if.then86, label %if.end99

if.then86:                                        ; preds = %land.lhs.true78, %land.lhs.true65.if.then86_crit_edge
  %20 = phi i32 [ %.pre, %land.lhs.true65.if.then86_crit_edge ], [ %19, %land.lhs.true78 ]
  %bf.value93 = and i32 %20, 16777215
  %bf.clear94 = and i32 %bf.load67, -16777216
  %bf.set95 = or i32 %bf.clear94, %bf.value93
  store i32 %bf.set95, i32* %17, align 4
  %bf.load97 = load i64* %6, align 8
  %bf.clear98 = and i64 %bf.load97, -34359738369
  store i64 %bf.clear98, i64* %6, align 8
  br label %if.end99

if.end99:                                         ; preds = %if.then86, %land.lhs.true78
  br i1 %cmp58, label %if.end99.if.then101_crit_edge, label %if.end310

if.end99.if.then101_crit_edge:                    ; preds = %if.end99
  %bf.load104.pre = load i64* %6, align 8
  br label %if.then101

if.then101:                                       ; preds = %if.end99.if.then101_crit_edge, %land.lhs.true71, %land.lhs.true59
  %bf.load104 = phi i64 [ %bf.load104.pre, %if.end99.if.then101_crit_edge ], [ %bf.load73, %land.lhs.true71 ], [ %bf.load61, %land.lhs.true59 ]
  %bf.cast107 = and i64 %bf.load104, 4096
  %tobool108 = icmp ne i64 %bf.cast107, 0
  %cond = select i1 %tobool108, %union.tree_node* %., %union.tree_node* null
  %result = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 11
  store %union.tree_node* %cond, %union.tree_node** %result, align 8, !tbaa !0
  %21 = load i32* @maximum_field_alignment, align 4, !tbaa !3
  %cmp110 = icmp eq i32 %21, 0
  br i1 %cmp110, label %if.else134, label %if.then111

if.then111:                                       ; preds = %if.then101
  %u1113 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %22 = bitcast %union.anon* %u1113 to i32*
  %bf.load115 = load i32* %22, align 4
  %bf.clear116 = and i32 %bf.load115, 16777215
  %cmp117 = icmp ult i32 %bf.clear116, %21
  %bf.clear116. = select i1 %cmp117, i32 %bf.load115, i32 %21
  %bf.value131 = and i32 %bf.clear116., 16777215
  %bf.clear132 = and i32 %bf.load115, -16777216
  %bf.set133 = or i32 %bf.value131, %bf.clear132
  store i32 %bf.set133, i32* %22, align 4
  br label %if.end190

if.else134:                                       ; preds = %if.then101
  %bf.cast140 = and i64 %bf.load104, 1024
  %tobool141 = icmp eq i64 %bf.cast140, 0
  br i1 %tobool141, label %if.end190, label %land.lhs.true142

land.lhs.true142:                                 ; preds = %if.else134
  %bf.cast147 = and i64 %bf.load104, 17179869184
  %tobool148 = icmp ne i64 %bf.cast147, 0
  %cmp152 = icmp eq %union.tree_node* %16, null
  %or.cond = or i1 %tobool148, %cmp152
  br i1 %or.cond, label %if.then161, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %land.lhs.true142
  %code157 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast [4 x i8]* %code157 to i32*
  %bf.load158 = load i32* %23, align 8
  %bf.clear159 = and i32 %bf.load158, 255
  %cmp160 = icmp eq i32 %bf.clear159, 25
  br i1 %cmp160, label %if.then161, label %if.end190

if.then161:                                       ; preds = %land.lhs.true142, %lor.lhs.false153
  %u1163 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %24 = bitcast %union.anon* %u1163 to i32*
  %bf.load165 = load i32* %24, align 4
  %bf.clear166 = and i32 %bf.load165, 16777215
  %cmp167 = icmp ult i32 %bf.clear166, 8
  %bf.clear166. = select i1 %cmp167, i32 %bf.clear166, i32 8
  %bf.clear182 = and i32 %bf.load165, -16777216
  %bf.set183 = or i32 %bf.clear166., %bf.clear182
  store i32 %bf.set183, i32* %24, align 4
  %bf.clear187 = and i64 %bf.load104, -34359738369
  store i64 %bf.clear187, i64* %6, align 8
  br label %if.end190

if.end190:                                        ; preds = %if.else134, %if.then111, %if.then161, %lor.lhs.false153
  %bf.load195 = phi i64 [ %bf.load104, %if.else134 ], [ %bf.load104, %if.then111 ], [ %bf.clear187, %if.then161 ], [ %bf.load104, %lor.lhs.false153 ]
  br i1 %cmp58, label %land.lhs.true192, label %if.end310

land.lhs.true192:                                 ; preds = %if.end190
  %bf.cast198 = and i64 %bf.load195, 4096
  %tobool199 = icmp eq i64 %bf.cast198, 0
  br i1 %tobool199, label %land.lhs.true266, label %land.lhs.true200

land.lhs.true200:                                 ; preds = %land.lhs.true192
  %type201 = bitcast %union.tree_node* %. to %struct.tree_type*
  %size202 = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 2
  %25 = bitcast i32* %size202 to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !0
  %cmp203 = icmp eq %union.tree_node* %26, null
  br i1 %cmp203, label %if.end264.land.lhs.true266_crit_edge, label %land.lhs.true204

land.lhs.true204:                                 ; preds = %land.lhs.true200
  %code208 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 0, i32 2
  %27 = bitcast [4 x i8]* %code208 to i32*
  %bf.load209 = load i32* %27, align 8
  %bf.clear210 = and i32 %bf.load209, 255
  %cmp211 = icmp eq i32 %bf.clear210, 25
  br i1 %cmp211, label %land.lhs.true212, label %if.end264.land.lhs.true266_crit_edge

land.lhs.true212:                                 ; preds = %land.lhs.true204
  %mode214 = getelementptr inbounds %struct.tree_type* %type201, i64 0, i32 6
  %28 = bitcast [4 x i8]* %mode214 to i32*
  %bf.load215 = load i32* %28, align 4
  %bf.lshr216 = lshr i32 %bf.load215, 9
  %bf.clear217 = and i32 %bf.lshr216, 127
  %idxprom473 = zext i32 %bf.clear217 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom473
  %29 = load i32* %arrayidx, align 4, !tbaa !7
  %cmp218 = icmp eq i32 %29, 1
  br i1 %cmp218, label %if.then219, label %if.end264.land.lhs.true266_crit_edge

if.then219:                                       ; preds = %land.lhs.true212
  %30 = load %union.tree_node** %size, align 8, !tbaa !0
  %call222 = tail call i32 @mode_for_size_tree(%union.tree_node* %30, i32 1, i32 1) #9
  %cmp223 = icmp eq i32 %call222, 51
  br i1 %cmp223, label %if.end264.land.lhs.true266_crit_edge, label %land.lhs.true224

land.lhs.true224:                                 ; preds = %if.then219
  %call225 = tail call i32 @get_mode_alignment(i32 %call222) #7
  %cmp226 = icmp ugt i32 %call225, %known_align
  br i1 %cmp226, label %if.end264.land.lhs.true266_crit_edge, label %if.then227

if.then227:                                       ; preds = %land.lhs.true224
  %call228 = tail call i32 @get_mode_alignment(i32 %call222) #7
  %u1230 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %31 = bitcast %union.anon* %u1230 to i32*
  %bf.load232 = load i32* %31, align 4
  %bf.clear233 = and i32 %bf.load232, 16777215
  %cmp234 = icmp ugt i32 %call228, %bf.clear233
  br i1 %cmp234, label %cond.true235, label %cond.end243

cond.true235:                                     ; preds = %if.then227
  %call236 = tail call i32 @get_mode_alignment(i32 %call222) #7
  %bf.load248.pre = load i32* %31, align 4
  br label %cond.end243

cond.end243:                                      ; preds = %if.then227, %cond.true235
  %bf.load248 = phi i32 [ %bf.load248.pre, %cond.true235 ], [ %bf.load232, %if.then227 ]
  %cond244 = phi i32 [ %call236, %cond.true235 ], [ %bf.clear233, %if.then227 ]
  %bf.value249 = and i32 %cond244, 16777215
  %bf.clear250 = and i32 %bf.load248, -16777216
  %bf.set251 = or i32 %bf.clear250, %bf.value249
  store i32 %bf.set251, i32* %31, align 4
  %32 = zext i32 %call222 to i64
  %bf.load254 = load i64* %6, align 8
  %bf.value255 = and i64 %32, 255
  %bf.clear256 = and i64 %bf.load254, -4352
  %bf.set257 = or i64 %bf.clear256, %bf.value255
  store i64 %bf.set257, i64* %6, align 8
  br label %if.end264.land.lhs.true266_crit_edge

if.end264.land.lhs.true266_crit_edge:             ; preds = %land.lhs.true204, %land.lhs.true212, %cond.end243, %land.lhs.true200, %if.then219, %land.lhs.true224
  %bf.load269.pre = load i64* %6, align 8
  br label %land.lhs.true266

land.lhs.true266:                                 ; preds = %if.end264.land.lhs.true266_crit_edge, %land.lhs.true192
  %bf.load269 = phi i64 [ %bf.load269.pre, %if.end264.land.lhs.true266_crit_edge ], [ %bf.load195, %land.lhs.true192 ]
  %bf.cast272 = and i64 %bf.load269, 4096
  %tobool273 = icmp eq i64 %bf.cast272, 0
  br i1 %tobool273, label %if.end310, label %land.lhs.true274

land.lhs.true274:                                 ; preds = %land.lhs.true266
  %type275 = bitcast %union.tree_node* %. to %struct.tree_type*
  %mode276 = getelementptr inbounds %struct.tree_type* %type275, i64 0, i32 6
  %33 = bitcast [4 x i8]* %mode276 to i32*
  %bf.load277 = load i32* %33, align 4
  %bf.clear279 = and i32 %bf.load277, 65024
  %cmp280 = icmp eq i32 %bf.clear279, 26112
  br i1 %cmp280, label %land.lhs.true281, label %if.end310

land.lhs.true281:                                 ; preds = %land.lhs.true274
  %bf.cast286 = and i64 %bf.load269, 255
  %cmp287 = icmp eq i64 %bf.cast286, 51
  br i1 %cmp287, label %land.lhs.true288, label %if.end310

land.lhs.true288:                                 ; preds = %land.lhs.true281
  %align290 = getelementptr inbounds %union.tree_node* %., i64 0, i32 0, i32 7
  %34 = bitcast %union.tree_node** %align290 to i32*
  %35 = load i32* %34, align 4, !tbaa !3
  %cmp291 = icmp ugt i32 %35, %known_align
  br i1 %cmp291, label %if.end310, label %land.lhs.true292

land.lhs.true292:                                 ; preds = %land.lhs.true288
  %u1294 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %36 = bitcast %union.anon* %u1294 to i32*
  %bf.load296 = load i32* %36, align 4
  %bf.clear297 = and i32 %bf.load296, 16777215
  %cmp300 = icmp ult i32 %bf.clear297, %35
  br i1 %cmp300, label %if.end310, label %land.lhs.true301

land.lhs.true301:                                 ; preds = %land.lhs.true292
  %size_unit303 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 7
  %37 = load %union.tree_node** %size_unit303, align 8, !tbaa !0
  %cmp304 = icmp eq %union.tree_node* %37, null
  br i1 %cmp304, label %if.end310, label %if.then305

if.then305:                                       ; preds = %land.lhs.true301
  %bf.clear309 = and i64 %bf.load269, -4097
  store i64 %bf.clear309, i64* %6, align 8
  br label %if.end310

if.end310:                                        ; preds = %land.lhs.true301, %land.lhs.true292, %land.lhs.true288, %land.lhs.true281, %land.lhs.true274, %land.lhs.true266, %if.end190, %if.end99, %if.then305
  %38 = load %union.tree_node** %size, align 8, !tbaa !0
  %cmp313 = icmp eq %union.tree_node* %38, null
  br i1 %cmp313, label %if.end328, label %land.lhs.true314

land.lhs.true314:                                 ; preds = %if.end310
  %code318 = getelementptr inbounds %union.tree_node* %38, i64 0, i32 0, i32 0, i32 2
  %39 = bitcast [4 x i8]* %code318 to i32*
  %bf.load319 = load i32* %39, align 8
  %bf.clear320 = and i32 %bf.load319, 255
  %cmp321 = icmp eq i32 %bf.clear320, 25
  br i1 %cmp321, label %if.end328, label %if.then322

if.then322:                                       ; preds = %land.lhs.true314
  %call325 = tail call %union.tree_node* @variable_size(%union.tree_node* %38) #9
  store %union.tree_node* %call325, %union.tree_node** %size, align 8, !tbaa !0
  br label %if.end328

if.end328:                                        ; preds = %land.lhs.true314, %if.end310, %if.then322
  %size_unit330 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 7
  %40 = load %union.tree_node** %size_unit330, align 8, !tbaa !0
  %cmp331 = icmp eq %union.tree_node* %40, null
  br i1 %cmp331, label %if.end346, label %land.lhs.true332

land.lhs.true332:                                 ; preds = %if.end328
  %code336 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast [4 x i8]* %code336 to i32*
  %bf.load337 = load i32* %41, align 8
  %bf.clear338 = and i32 %bf.load337, 255
  %cmp339 = icmp eq i32 %bf.clear338, 25
  br i1 %cmp339, label %if.end346, label %if.then340

if.then340:                                       ; preds = %land.lhs.true332
  %call343 = tail call %union.tree_node* @variable_size(%union.tree_node* %40) #9
  store %union.tree_node* %call343, %union.tree_node** %size_unit330, align 8, !tbaa !0
  br label %if.end346

if.end346:                                        ; preds = %land.lhs.true332, %if.end328, %if.then340
  %42 = phi %union.tree_node* [ %40, %land.lhs.true332 ], [ null, %if.end328 ], [ %call343, %if.then340 ]
  %43 = load i32* @warn_larger_than, align 4, !tbaa !3
  %tobool347 = icmp eq i32 %43, 0
  br i1 %tobool347, label %if.end383, label %land.lhs.true348

land.lhs.true348:                                 ; preds = %if.end346
  %44 = and i32 %bf.load, 254
  %45 = icmp eq i32 %44, 34
  br i1 %45, label %land.lhs.true352, label %if.end383

land.lhs.true352:                                 ; preds = %land.lhs.true348
  %bf.load354 = load i64* %6, align 8
  %bf.cast357 = and i64 %bf.load354, 256
  %tobool358 = icmp ne i64 %bf.cast357, 0
  %cmp363 = icmp eq %union.tree_node* %42, null
  %or.cond480 = or i1 %tobool358, %cmp363
  br i1 %or.cond480, label %if.end383, label %land.lhs.true364

land.lhs.true364:                                 ; preds = %land.lhs.true352
  %code366 = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 2
  %46 = bitcast [4 x i8]* %code366 to i32*
  %bf.load367 = load i32* %46, align 8
  %bf.clear368 = and i32 %bf.load367, 255
  %cmp369 = icmp eq i32 %bf.clear368, 25
  br i1 %cmp369, label %land.lhs.true370, label %if.end383

land.lhs.true370:                                 ; preds = %land.lhs.true364
  %47 = load i64* @larger_than_size, align 8, !tbaa !6
  %call371 = tail call i32 @compare_tree_int(%union.tree_node* %42, i64 %47) #7
  %cmp372 = icmp sgt i32 %call371, 0
  br i1 %cmp372, label %if.then373, label %if.end383

if.then373:                                       ; preds = %land.lhs.true370
  %int_cst374 = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst374 to i64*
  %48 = load i64* %low, align 8, !tbaa !6
  %conv375 = and i64 %48, 4294967295
  %call376 = tail call i32 @compare_tree_int(%union.tree_node* %42, i64 %conv375) #7
  %cmp377 = icmp eq i32 %call376, 0
  br i1 %cmp377, label %if.then379, label %if.else380

if.then379:                                       ; preds = %if.then373
  %conv = trunc i64 %48 to i32
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([25 x i8]* @.str3, i64 0, i64 0), i32 %conv) #7
  br label %if.end383

if.else380:                                       ; preds = %if.then373
  %49 = load i64* @larger_than_size, align 8, !tbaa !6
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([37 x i8]* @.str4, i64 0, i64 0), i64 %49) #7
  br label %if.end383

if.end383:                                        ; preds = %land.lhs.true352, %if.end346, %land.lhs.true364, %land.lhs.true370, %if.else380, %if.then379, %land.lhs.true348, %entry
  ret void
}
