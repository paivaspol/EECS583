define void @pos_from_bit(%union.tree_node** nocapture %poffset, %union.tree_node** nocapture %pbitpos, i32 %off_align, %union.tree_node* %pos) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %poffset}, i64 0, metadata !1015), !dbg !1360
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %pbitpos}, i64 0, metadata !1016), !dbg !1360
  tail call void @llvm.dbg.value(metadata !{i32 %off_align}, i64 0, metadata !1017), !dbg !1361
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %pos}, i64 0, metadata !1018), !dbg !1362
  %0 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !1363, !tbaa !1183
  %conv = zext i32 %off_align to i64, !dbg !1364
  %call = tail call %union.tree_node* @size_int_wide(i64 %conv, i32 3) #8, !dbg !1364
  %call1 = tail call %union.tree_node* @size_binop(i32 64, %union.tree_node* %pos, %union.tree_node* %call) #8, !dbg !1364
  %call2 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call1) #8, !dbg !1364
  %div = lshr i32 %off_align, 3, !dbg !1365
  %conv3 = zext i32 %div to i64, !dbg !1365
  %call4 = tail call %union.tree_node* @size_int_wide(i64 %conv3, i32 0) #8, !dbg !1365
  %call5 = tail call %union.tree_node* @size_binop(i32 61, %union.tree_node* %call2, %union.tree_node* %call4) #8, !dbg !1365
  store %union.tree_node* %call5, %union.tree_node** %poffset, align 8, !dbg !1365, !tbaa !1183
  %call7 = tail call %union.tree_node* @size_int_wide(i64 %conv, i32 3) #8, !dbg !1366
  %call8 = tail call %union.tree_node* @size_binop(i32 68, %union.tree_node* %pos, %union.tree_node* %call7) #8, !dbg !1366
  store %union.tree_node* %call8, %union.tree_node** %pbitpos, align 8, !dbg !1366, !tbaa !1183
  ret void, !dbg !1367
}
