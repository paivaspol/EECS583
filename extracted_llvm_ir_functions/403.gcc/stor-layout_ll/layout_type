define void @layout_type(%union.tree_node* %type) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %type, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str, i64 0, i64 0), i32 1422, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.layout_type, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*
  %size = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 2
  %0 = bitcast i32* %size to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %1, null
  br i1 %tobool, label %if.end3, label %if.end758

if.end3:                                          ; preds = %if.end
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 24, label %sw.bb
    i32 11, label %sw.bb4
    i32 6, label %sw.bb15
    i32 10, label %sw.bb15
    i32 12, label %sw.bb15
    i32 7, label %sw.bb57
    i32 8, label %sw.bb92
    i32 9, label %sw.bb151
    i32 5, label %sw.bb188
    i32 14, label %sw.bb197
    i32 23, label %sw.bb222
    i32 16, label %sw.bb222
    i32 13, label %sw.bb252
    i32 15, label %sw.bb252
    i32 18, label %sw.bb310
    i32 20, label %sw.bb554
    i32 21, label %sw.bb554
    i32 22, label %sw.bb554
    i32 19, label %sw.bb589
    i32 17, label %sw.bb679
  ]

sw.bb:                                            ; preds = %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str, i64 0, i64 0), i32 1433, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.layout_type, i64 0, i64 0)) #8
  unreachable

sw.bb4:                                           ; preds = %if.end3
  %precision = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %3 = bitcast [4 x i8]* %precision to i32*
  %bf.load6 = load i32* %3, align 4
  %bf.clear7 = and i32 %bf.load6, 511
  %cmp8 = icmp eq i32 %bf.clear7, 0
  br i1 %cmp8, label %if.then9, label %sw.bb15

if.then9:                                         ; preds = %sw.bb4
  %bf.clear13 = and i32 %bf.load6, -512
  %bf.set = or i32 %bf.clear13, 1
  store i32 %bf.set, i32* %3, align 4
  br label %sw.bb15

sw.bb15:                                          ; preds = %sw.bb4, %if.then9, %if.end3, %if.end3, %if.end3
  %4 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 12
  %5 = load %union.tree_node** %4, align 8, !tbaa !0
  %code18 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast [4 x i8]* %code18 to i32*
  %bf.load19 = load i32* %6, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 25
  br i1 %cmp21, label %land.lhs.true, label %if.end30

land.lhs.true:                                    ; preds = %sw.bb15
  %call = tail call i32 @tree_int_cst_sgn(%union.tree_node* %5) #7
  %cmp24 = icmp sgt i32 %call, -1
  br i1 %cmp24, label %if.then25, label %if.end30

if.then25:                                        ; preds = %land.lhs.true
  %bf.load27 = load i32* %2, align 8
  %bf.set29 = or i32 %bf.load27, 8192
  store i32 %bf.set29, i32* %2, align 8
  br label %if.end30

if.end30:                                         ; preds = %land.lhs.true, %sw.bb15, %if.then25
  %precision32 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %7 = bitcast [4 x i8]* %precision32 to i32*
  %bf.load33 = load i32* %7, align 4
  %bf.clear34 = and i32 %bf.load33, 511
  %call35 = tail call i32 @smallest_mode_for_size(i32 %bf.clear34, i32 1) #9
  %bf.load37 = load i32* %7, align 4
  %bf.value = shl i32 %call35, 9
  %bf.shl = and i32 %bf.value, 65024
  %bf.clear38 = and i32 %bf.load37, -65025
  %bf.set39 = or i32 %bf.clear38, %bf.shl
  store i32 %bf.set39, i32* %7, align 4
  %bf.clear43 = and i32 %call35, 127
  %idxprom910 = zext i32 %bf.clear43 to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom910
  %8 = load i16* %arrayidx, align 2, !tbaa !4
  %conv = zext i16 %8 to i64
  %call44 = tail call %union.tree_node* @size_int_wide(i64 %conv, i32 3) #7
  store %union.tree_node* %call44, %union.tree_node** %0, align 8, !tbaa !0
  %bf.load49 = load i32* %7, align 4
  %bf.lshr50 = lshr i32 %bf.load49, 9
  %bf.clear51 = and i32 %bf.lshr50, 127
  %idxprom52911 = zext i32 %bf.clear51 to i64
  %arrayidx53 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom52911
  %9 = load i8* %arrayidx53, align 1, !tbaa !1
  %conv54 = zext i8 %9 to i64
  %call55 = tail call %union.tree_node* @size_int_wide(i64 %conv54, i32 0) #7
  %10 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call55, %union.tree_node** %10, align 8, !tbaa !0
  br label %sw.epilog

sw.bb57:                                          ; preds = %if.end3
  %precision59 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %11 = bitcast [4 x i8]* %precision59 to i32*
  %bf.load60 = load i32* %11, align 4
  %bf.clear61 = and i32 %bf.load60, 511
  %12 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 4, !tbaa !5
  %cmp217.i = icmp eq i32 %12, 0
  br i1 %cmp217.i, label %mode_for_size.exit, label %for.body.i

for.body.i:                                       ; preds = %sw.bb57, %for.inc.i
  %mode.018.i = phi i32 [ %conv13.i, %for.inc.i ], [ %12, %sw.bb57 ]
  %idxprom4.i = sext i32 %mode.018.i to i64
  %arrayidx5.i = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom4.i
  %13 = load i16* %arrayidx5.i, align 2, !tbaa !4
  %conv6.i = zext i16 %13 to i32
  %cmp7.i = icmp eq i32 %conv6.i, %bf.clear61
  br i1 %cmp7.i, label %mode_for_size.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %arrayidx12.i = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom4.i
  %14 = load i8* %arrayidx12.i, align 1, !tbaa !1
  %conv13.i = zext i8 %14 to i32
  %cmp2.i = icmp eq i8 %14, 0
  br i1 %cmp2.i, label %mode_for_size.exit, label %for.body.i

mode_for_size.exit:                               ; preds = %for.body.i, %for.inc.i, %sw.bb57
  %retval.0.i = phi i32 [ 51, %sw.bb57 ], [ %mode.018.i, %for.body.i ], [ 51, %for.inc.i ]
  %bf.value66 = shl i32 %retval.0.i, 9
  %bf.shl67 = and i32 %bf.value66, 65024
  %bf.clear68 = and i32 %bf.load60, -65025
  %bf.set69 = or i32 %bf.clear68, %bf.shl67
  store i32 %bf.set69, i32* %11, align 4
  %bf.clear74 = and i32 %retval.0.i, 127
  %idxprom75908 = zext i32 %bf.clear74 to i64
  %arrayidx76 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom75908
  %15 = load i16* %arrayidx76, align 2, !tbaa !4
  %conv77 = zext i16 %15 to i64
  %call78 = tail call %union.tree_node* @size_int_wide(i64 %conv77, i32 3) #7
  store %union.tree_node* %call78, %union.tree_node** %0, align 8, !tbaa !0
  %bf.load83 = load i32* %11, align 4
  %bf.lshr84 = lshr i32 %bf.load83, 9
  %bf.clear85 = and i32 %bf.lshr84, 127
  %idxprom86909 = zext i32 %bf.clear85 to i64
  %arrayidx87 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom86909
  %16 = load i8* %arrayidx87, align 1, !tbaa !1
  %conv88 = zext i8 %16 to i64
  %call89 = tail call %union.tree_node* @size_int_wide(i64 %conv88, i32 0) #7
  %17 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call89, %union.tree_node** %17, align 8, !tbaa !0
  br label %sw.epilog

sw.bb92:                                          ; preds = %if.end3
  %type94 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type94, align 8, !tbaa !0
  %unsigned_flag96 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast [4 x i8]* %unsigned_flag96 to i32*
  %bf.load97 = load i32* %19, align 8
  %bf.clear99 = and i32 %bf.load97, 8192
  %bf.clear105 = and i32 %bf.load, -8193
  %bf.set106 = or i32 %bf.clear99, %bf.clear105
  store i32 %bf.set106, i32* %2, align 8
  %type109 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %precision110 = getelementptr inbounds %struct.tree_type* %type109, i64 0, i32 6
  %20 = bitcast [4 x i8]* %precision110 to i32*
  %bf.load111 = load i32* %20, align 4
  %bf.clear112 = shl i32 %bf.load111, 1
  %mul = and i32 %bf.clear112, 1022
  %bf.load117 = load i32* %19, align 8
  %bf.clear118 = and i32 %bf.load117, 255
  %cmp119 = icmp eq i32 %bf.clear118, 6
  %idxprom.i = select i1 %cmp119, i64 5, i64 6
  %arrayidx.i = getelementptr inbounds [9 x i32]* @class_narrowest_mode, i64 0, i64 %idxprom.i
  %21 = load i32* %arrayidx.i, align 4, !tbaa !5
  %cmp217.i916 = icmp eq i32 %21, 0
  br i1 %cmp217.i916, label %mode_for_size.exit928, label %for.body.i922

for.body.i922:                                    ; preds = %sw.bb92, %for.inc.i926
  %mode.018.i917 = phi i32 [ %conv13.i924, %for.inc.i926 ], [ %21, %sw.bb92 ]
  %idxprom4.i918 = sext i32 %mode.018.i917 to i64
  %arrayidx5.i919 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom4.i918
  %22 = load i16* %arrayidx5.i919, align 2, !tbaa !4
  %conv6.i920 = zext i16 %22 to i32
  %cmp7.i921 = icmp eq i32 %conv6.i920, %mul
  br i1 %cmp7.i921, label %mode_for_size.exit928, label %for.inc.i926

for.inc.i926:                                     ; preds = %for.body.i922
  %arrayidx12.i923 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom4.i918
  %23 = load i8* %arrayidx12.i923, align 1, !tbaa !1
  %conv13.i924 = zext i8 %23 to i32
  %cmp2.i925 = icmp eq i8 %23, 0
  br i1 %cmp2.i925, label %mode_for_size.exit928, label %for.body.i922

mode_for_size.exit928:                            ; preds = %for.body.i922, %for.inc.i926, %sw.bb92
  %retval.0.i927 = phi i32 [ 51, %sw.bb92 ], [ %mode.018.i917, %for.body.i922 ], [ 51, %for.inc.i926 ]
  %mode123 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %24 = bitcast [4 x i8]* %mode123 to i32*
  %bf.load124 = load i32* %24, align 4
  %bf.value125 = shl i32 %retval.0.i927, 9
  %bf.shl126 = and i32 %bf.value125, 65024
  %bf.clear127 = and i32 %bf.load124, -65025
  %bf.set128 = or i32 %bf.clear127, %bf.shl126
  store i32 %bf.set128, i32* %24, align 4
  %bf.clear133 = and i32 %retval.0.i927, 127
  %idxprom134906 = zext i32 %bf.clear133 to i64
  %arrayidx135 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom134906
  %25 = load i16* %arrayidx135, align 2, !tbaa !4
  %conv136 = zext i16 %25 to i64
  %call137 = tail call %union.tree_node* @size_int_wide(i64 %conv136, i32 3) #7
  store %union.tree_node* %call137, %union.tree_node** %0, align 8, !tbaa !0
  %bf.load142 = load i32* %24, align 4
  %bf.lshr143 = lshr i32 %bf.load142, 9
  %bf.clear144 = and i32 %bf.lshr143, 127
  %idxprom145907 = zext i32 %bf.clear144 to i64
  %arrayidx146 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom145907
  %26 = load i8* %arrayidx146, align 1, !tbaa !1
  %conv147 = zext i8 %26 to i64
  %call148 = tail call %union.tree_node* @size_int_wide(i64 %conv147, i32 0) #7
  %27 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call148, %union.tree_node** %27, align 8, !tbaa !0
  br label %sw.epilog

sw.bb151:                                         ; preds = %if.end3
  %type153 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %28 = load %union.tree_node** %type153, align 8, !tbaa !0
  %unsigned_flag155 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 2
  %29 = bitcast [4 x i8]* %unsigned_flag155 to i32*
  %bf.load156 = load i32* %29, align 8
  %bf.clear158 = and i32 %bf.load156, 8192
  %bf.clear164 = and i32 %bf.load, -8193
  %bf.set165 = or i32 %bf.clear158, %bf.clear164
  store i32 %bf.set165, i32* %2, align 8
  %mode167 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %30 = bitcast [4 x i8]* %mode167 to i32*
  %bf.load168 = load i32* %30, align 4
  %bf.lshr169 = lshr i32 %bf.load168, 9
  %bf.clear170 = and i32 %bf.lshr169, 127
  %idxprom171904 = zext i32 %bf.clear170 to i64
  %arrayidx172 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom171904
  %31 = load i16* %arrayidx172, align 2, !tbaa !4
  %conv173 = zext i16 %31 to i64
  %call174 = tail call %union.tree_node* @size_int_wide(i64 %conv173, i32 3) #7
  store %union.tree_node* %call174, %union.tree_node** %0, align 8, !tbaa !0
  %bf.load179 = load i32* %30, align 4
  %bf.lshr180 = lshr i32 %bf.load179, 9
  %bf.clear181 = and i32 %bf.lshr180, 127
  %idxprom182905 = zext i32 %bf.clear181 to i64
  %arrayidx183 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom182905
  %32 = load i8* %arrayidx183, align 1, !tbaa !1
  %conv184 = zext i8 %32 to i64
  %call185 = tail call %union.tree_node* @size_int_wide(i64 %conv184, i32 0) #7
  %33 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call185, %union.tree_node** %33, align 8, !tbaa !0
  br label %sw.epilog

sw.bb188:                                         ; preds = %if.end3
  %align = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %34 = bitcast %union.tree_node** %align to i32*
  store i32 1, i32* %34, align 4, !tbaa !3
  %user_align = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %35 = bitcast [4 x i8]* %user_align to i32*
  %bf.load191 = load i32* %35, align 4
  %bf.clear196 = and i32 %bf.load191, 2147418623
  store i32 %bf.clear196, i32* %35, align 4
  br label %sw.epilog

sw.bb197:                                         ; preds = %if.end3
  %36 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %36, 20
  %37 = and i32 %and, 32
  %38 = add i32 %37, 32
  %conv200903 = zext i32 %38 to i64
  %call201 = tail call %union.tree_node* @size_int_wide(i64 %conv200903, i32 3) #7
  store %union.tree_node* %call201, %union.tree_node** %0, align 8, !tbaa !0
  %39 = load i32* @target_flags, align 4, !tbaa !3
  %and204 = lshr i32 %39, 20
  %40 = and i32 %and204, 32
  %41 = add i32 %40, 32
  %div = sdiv i32 %41, 8
  %conv207 = sext i32 %div to i64
  %call208 = tail call %union.tree_node* @size_int_wide(i64 %conv207, i32 0) #7
  %42 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call208, %union.tree_node** %42, align 8, !tbaa !0
  %43 = load i32* @target_flags, align 4, !tbaa !3
  %and211 = lshr i32 %43, 20
  %44 = and i32 %and211, 32
  %45 = add i32 %44, 32
  %46 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp217.i929 = icmp eq i32 %46, 0
  br i1 %cmp217.i929, label %mode_for_size.exit941, label %for.body.i935

for.body.i935:                                    ; preds = %sw.bb197, %for.inc.i939
  %mode.018.i930 = phi i32 [ %conv13.i937, %for.inc.i939 ], [ %46, %sw.bb197 ]
  %idxprom4.i931 = sext i32 %mode.018.i930 to i64
  %arrayidx5.i932 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom4.i931
  %47 = load i16* %arrayidx5.i932, align 2, !tbaa !4
  %conv6.i933 = zext i16 %47 to i32
  %cmp7.i934 = icmp eq i32 %conv6.i933, %45
  br i1 %cmp7.i934, label %mode_for_size.exit941, label %for.inc.i939

for.inc.i939:                                     ; preds = %for.body.i935
  %arrayidx12.i936 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom4.i931
  %48 = load i8* %arrayidx12.i936, align 1, !tbaa !1
  %conv13.i937 = zext i8 %48 to i32
  %cmp2.i938 = icmp eq i8 %48, 0
  br i1 %cmp2.i938, label %mode_for_size.exit941, label %for.body.i935

mode_for_size.exit941:                            ; preds = %for.body.i935, %for.inc.i939, %sw.bb197
  %retval.0.i940 = phi i32 [ 51, %sw.bb197 ], [ %mode.018.i930, %for.body.i935 ], [ 51, %for.inc.i939 ]
  %mode216 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %49 = bitcast [4 x i8]* %mode216 to i32*
  %bf.load217 = load i32* %49, align 4
  %bf.value218 = shl i32 %retval.0.i940, 9
  %bf.shl219 = and i32 %bf.value218, 65024
  %bf.clear220 = and i32 %bf.load217, -65025
  %bf.set221 = or i32 %bf.clear220, %bf.shl219
  store i32 %bf.set221, i32* %49, align 4
  br label %sw.epilog

sw.bb222:                                         ; preds = %if.end3, %if.end3
  %50 = load i32* @target_flags, align 4, !tbaa !3
  %51 = lshr i32 %50, 19
  %52 = and i32 %51, 64
  %mul226 = add i32 %52, 64
  %53 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !5
  %cmp217.i942 = icmp eq i32 %53, 0
  br i1 %cmp217.i942, label %mode_for_size.exit954, label %for.body.i948

for.body.i948:                                    ; preds = %sw.bb222, %for.inc.i952
  %mode.018.i943 = phi i32 [ %conv13.i950, %for.inc.i952 ], [ %53, %sw.bb222 ]
  %idxprom4.i944 = sext i32 %mode.018.i943 to i64
  %arrayidx5.i945 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom4.i944
  %54 = load i16* %arrayidx5.i945, align 2, !tbaa !4
  %conv6.i946 = zext i16 %54 to i32
  %cmp7.i947 = icmp eq i32 %conv6.i946, %mul226
  br i1 %cmp7.i947, label %mode_for_size.exit954, label %for.inc.i952

for.inc.i952:                                     ; preds = %for.body.i948
  %arrayidx12.i949 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom4.i944
  %55 = load i8* %arrayidx12.i949, align 1, !tbaa !1
  %conv13.i950 = zext i8 %55 to i32
  %cmp2.i951 = icmp eq i8 %55, 0
  br i1 %cmp2.i951, label %mode_for_size.exit954, label %for.body.i948

mode_for_size.exit954:                            ; preds = %for.body.i948, %for.inc.i952, %sw.bb222
  %retval.0.i953 = phi i32 [ 51, %sw.bb222 ], [ %mode.018.i943, %for.body.i948 ], [ 51, %for.inc.i952 ]
  %mode229 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %56 = bitcast [4 x i8]* %mode229 to i32*
  %bf.load230 = load i32* %56, align 4
  %bf.value231 = shl i32 %retval.0.i953, 9
  %bf.shl232 = and i32 %bf.value231, 65024
  %bf.clear233 = and i32 %bf.load230, -65025
  %bf.set234 = or i32 %bf.clear233, %bf.shl232
  store i32 %bf.set234, i32* %56, align 4
  %57 = load i32* @target_flags, align 4, !tbaa !3
  %58 = lshr i32 %57, 19
  %59 = and i32 %58, 64
  %mul238 = add i32 %59, 64
  %conv239902 = zext i32 %mul238 to i64
  %call240 = tail call %union.tree_node* @size_int_wide(i64 %conv239902, i32 3) #7
  store %union.tree_node* %call240, %union.tree_node** %0, align 8, !tbaa !0
  %60 = load i32* @target_flags, align 4, !tbaa !3
  %61 = lshr i32 %60, 19
  %62 = and i32 %61, 64
  %mul246 = add i32 %62, 64
  %div247 = sdiv i32 %mul246, 8
  %conv248 = sext i32 %div247 to i64
  %call249 = tail call %union.tree_node* @size_int_wide(i64 %conv248, i32 0) #7
  %63 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call249, %union.tree_node** %63, align 8, !tbaa !0
  br label %sw.epilog

sw.bb252:                                         ; preds = %if.end3, %if.end3
  %cmp257 = icmp eq i32 %bf.clear, 15
  %.b = load i1* @reference_types_internal, align 1
  %or.cond = and i1 %cmp257, %.b
  %64 = load i32* @target_flags, align 4, !tbaa !3
  %and261 = and i32 %64, 33554432
  br i1 %or.cond, label %cond.end, label %cond.end.thread

cond.end.thread:                                  ; preds = %sw.bb252
  %65 = lshr exact i32 %and261, 20
  %66 = add i32 %65, 32
  br label %cond.true276

cond.end:                                         ; preds = %sw.bb252
  %67 = lshr exact i32 %and261, 25
  %68 = or i32 %67, 4
  %idxprom264901 = zext i32 %68 to i64
  %arrayidx265 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom264901
  %69 = load i16* %arrayidx265, align 2, !tbaa !4
  %conv266 = zext i16 %69 to i32
  %.pre957 = lshr exact i32 %and261, 20
  %.pre958 = add i32 %.pre957, 32
  %cmp274 = icmp eq i32 %conv266, %.pre958
  br i1 %cmp274, label %cond.true276, label %cond.false277

cond.true276:                                     ; preds = %cond.end.thread, %cond.end
  %cond270962 = phi i32 [ %66, %cond.end.thread ], [ %conv266, %cond.end ]
  %70 = load i32* @ptr_mode, align 4, !tbaa !5
  br label %cond.end281

cond.false277:                                    ; preds = %cond.end
  %71 = lshr exact i32 %and261, 25
  %72 = or i32 %71, 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false277, %cond.true276
  %cond270961 = phi i32 [ %cond270962, %cond.true276 ], [ %conv266, %cond.false277 ]
  %cond282 = phi i32 [ %70, %cond.true276 ], [ %72, %cond.false277 ]
  %mode284 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %73 = bitcast [4 x i8]* %mode284 to i32*
  %bf.load285 = load i32* %73, align 4
  %bf.value286 = shl i32 %cond282, 9
  %bf.shl287 = and i32 %bf.value286, 65024
  %bf.clear288 = and i32 %bf.load285, -65025
  %bf.set289 = or i32 %bf.clear288, %bf.shl287
  store i32 %bf.set289, i32* %73, align 4
  %conv290 = sext i32 %cond270961 to i64
  %call291 = tail call %union.tree_node* @size_int_wide(i64 %conv290, i32 3) #7
  store %union.tree_node* %call291, %union.tree_node** %0, align 8, !tbaa !0
  %div294 = sdiv i32 %cond270961, 8
  %conv295 = sext i32 %div294 to i64
  %call296 = tail call %union.tree_node* @size_int_wide(i64 %conv295, i32 0) #7
  %74 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call296, %union.tree_node** %74, align 8, !tbaa !0
  %bf.load301 = load i32* %2, align 8
  %bf.set303 = or i32 %bf.load301, 8192
  store i32 %bf.set303, i32* %2, align 8
  %bf.load306 = load i32* %73, align 4
  %bf.value307 = and i32 %cond270961, 511
  %bf.clear308 = and i32 %bf.load306, -512
  %bf.set309 = or i32 %bf.clear308, %bf.value307
  store i32 %bf.set309, i32* %73, align 4
  br label %sw.epilog

sw.bb310:                                         ; preds = %if.end3
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %75 = load i8** %values, align 8
  %type313 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %76 = load %union.tree_node** %type313, align 8, !tbaa !0
  %call314 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %76) #7
  %tobool315 = icmp eq i8* %75, null
  br i1 %tobool315, label %if.end423, label %land.lhs.true316

land.lhs.true316:                                 ; preds = %sw.bb310
  %maxval = getelementptr inbounds i8* %75, i64 112
  %77 = bitcast i8* %maxval to %union.tree_node**
  %78 = load %union.tree_node** %77, align 8, !tbaa !0
  %tobool318 = icmp eq %union.tree_node* %78, null
  br i1 %tobool318, label %if.end423, label %land.lhs.true319

land.lhs.true319:                                 ; preds = %land.lhs.true316
  %minval321 = getelementptr inbounds i8* %75, i64 104
  %79 = bitcast i8* %minval321 to %union.tree_node**
  %80 = load %union.tree_node** %79, align 8, !tbaa !0
  %tobool322 = icmp eq %union.tree_node* %80, null
  br i1 %tobool322, label %if.end423, label %land.lhs.true323

land.lhs.true323:                                 ; preds = %land.lhs.true319
  %size325 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 2
  %81 = bitcast i32* %size325 to %union.tree_node**
  %82 = load %union.tree_node** %81, align 8, !tbaa !0
  %tobool326 = icmp eq %union.tree_node* %82, null
  br i1 %tobool326, label %if.end423, label %if.then327

if.then327:                                       ; preds = %land.lhs.true323
  %83 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !0
  %84 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !tbaa !0
  %type333 = getelementptr inbounds %union.tree_node* %80, i64 0, i32 0, i32 0, i32 1
  %85 = load %union.tree_node** %type333, align 8, !tbaa !0
  %call334 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %85, %union.tree_node* %78, %union.tree_node* %80) #7
  %call335 = tail call %union.tree_node* @fold(%union.tree_node* %call334) #7
  %call336 = tail call %union.tree_node* @convert(%union.tree_node* %84, %union.tree_node* %call335) #7
  %call337 = tail call %union.tree_node* @size_binop(i32 59, %union.tree_node* %83, %union.tree_node* %call336) #7
  %86 = load %union.tree_node** %81, align 8, !tbaa !0
  %packed_flag = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %87 = bitcast [4 x i8]* %packed_flag to i32*
  %bf.load341 = load i32* %87, align 4
  %bf.clear343 = and i32 %bf.load341, 1048576
  %tobool344 = icmp eq i32 %bf.clear343, 0
  br i1 %tobool344, label %if.end404, label %land.lhs.true345

land.lhs.true345:                                 ; preds = %if.then327
  %code347 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 0, i32 2
  %88 = bitcast [4 x i8]* %code347 to i32*
  %bf.load348 = load i32* %88, align 8
  %bf.clear349 = and i32 %bf.load348, 255
  switch i32 %bf.clear349, label %if.end404 [
    i32 6, label %land.lhs.true372
    i32 10, label %land.lhs.true372
    i32 11, label %land.lhs.true372
    i32 12, label %land.lhs.true372
  ]

land.lhs.true372:                                 ; preds = %land.lhs.true345, %land.lhs.true345, %land.lhs.true345, %land.lhs.true345
  %89 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 13
  %90 = load %union.tree_node** %89, align 8, !tbaa !0
  %call375 = tail call i32 @integer_zerop(%union.tree_node* %90) #7
  %tobool376 = icmp eq i32 %call375, 0
  br i1 %tobool376, label %lor.lhs.false377, label %land.lhs.true382

lor.lhs.false377:                                 ; preds = %land.lhs.true372
  %91 = load %union.tree_node** %89, align 8, !tbaa !0
  %call380 = tail call i32 @integer_onep(%union.tree_node* %91) #7
  %tobool381 = icmp eq i32 %call380, 0
  br i1 %tobool381, label %if.end404, label %land.lhs.true382

land.lhs.true382:                                 ; preds = %lor.lhs.false377, %land.lhs.true372
  %92 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 12
  %93 = load %union.tree_node** %92, align 8, !tbaa !0
  %call385 = tail call i32 @host_integerp(%union.tree_node* %93, i32 1) #7
  %tobool386 = icmp eq i32 %call385, 0
  br i1 %tobool386, label %if.end404, label %if.then387

if.then387:                                       ; preds = %land.lhs.true382
  %94 = load %union.tree_node** %89, align 8, !tbaa !0
  %call390 = tail call i64 @tree_low_cst(%union.tree_node* %94, i32 1) #7
  %95 = load %union.tree_node** %92, align 8, !tbaa !0
  %call393 = tail call i64 @tree_low_cst(%union.tree_node* %95, i32 1) #7
  %sub = sub nsw i64 %call390, %call393
  %cmp394 = icmp eq i64 %sub, 1
  %96 = icmp ult i64 %call390, 2
  %or.cond912 = and i1 %cmp394, %96
  %97 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !0
  %.914 = select i1 %or.cond912, %union.tree_node* %97, %union.tree_node* %86
  br label %if.end404

if.end404:                                        ; preds = %if.then387, %land.lhs.true345, %land.lhs.true382, %lor.lhs.false377, %if.then327
  %element_size.0 = phi %union.tree_node* [ %86, %land.lhs.true382 ], [ %86, %lor.lhs.false377 ], [ %86, %if.then327 ], [ %86, %land.lhs.true345 ], [ %.914, %if.then387 ]
  %98 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 3), align 8, !tbaa !0
  %call405 = tail call %union.tree_node* @convert(%union.tree_node* %98, %union.tree_node* %call337) #7
  %call406 = tail call %union.tree_node* @size_binop(i32 61, %union.tree_node* %element_size.0, %union.tree_node* %call405) #7
  store %union.tree_node* %call406, %union.tree_node** %0, align 8, !tbaa !0
  %99 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 4
  %100 = load %union.tree_node** %99, align 8, !tbaa !0
  %cmp411 = icmp eq %union.tree_node* %100, null
  br i1 %cmp411, label %if.end423, label %land.lhs.true413

land.lhs.true413:                                 ; preds = %if.end404
  %call414 = tail call i32 @integer_onep(%union.tree_node* %element_size.0) #7
  %tobool415 = icmp eq i32 %call414, 0
  br i1 %tobool415, label %if.then416, label %if.end423

if.then416:                                       ; preds = %land.lhs.true413
  %101 = load %union.tree_node** %99, align 8, !tbaa !0
  %call419 = tail call %union.tree_node* @size_binop(i32 61, %union.tree_node* %101, %union.tree_node* %call337) #7
  %102 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call419, %union.tree_node** %102, align 8, !tbaa !0
  br label %if.end423

if.end423:                                        ; preds = %land.lhs.true413, %land.lhs.true323, %land.lhs.true319, %land.lhs.true316, %sw.bb310, %if.end404, %if.then416
  %type424 = bitcast %union.tree_node* %76 to %struct.tree_type*
  %align425 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 7
  %103 = bitcast %union.tree_node** %align425 to i32*
  %104 = load i32* %103, align 4, !tbaa !3
  %cmp426 = icmp ugt i32 %104, 8
  %. = select i1 %cmp426, i32 %104, i32 8
  %align435 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %105 = bitcast %union.tree_node** %align435 to i32*
  store i32 %., i32* %105, align 4, !tbaa !3
  %user_align437 = getelementptr inbounds %struct.tree_type* %type424, i64 0, i32 6
  %106 = bitcast [4 x i8]* %user_align437 to i32*
  %bf.load438 = load i32* %106, align 4
  %bf.lshr439 = and i32 %bf.load438, -2147483648
  %user_align441 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %107 = bitcast [4 x i8]* %user_align441 to i32*
  %bf.load442 = load i32* %107, align 4
  %bf.clear445 = and i32 %bf.load442, 2147418623
  %bf.set446 = or i32 %bf.lshr439, %bf.clear445
  %bf.set451 = or i32 %bf.set446, 26112
  store i32 %bf.set451, i32* %107, align 4
  %108 = load %union.tree_node** %0, align 8, !tbaa !0
  %cmp454 = icmp eq %union.tree_node* %108, null
  br i1 %cmp454, label %sw.epilog, label %land.lhs.true456

land.lhs.true456:                                 ; preds = %if.end423
  %109 = load %union.tree_node** %type313, align 8, !tbaa !0
  %type459 = bitcast %union.tree_node* %109 to %struct.tree_type*
  %mode460 = getelementptr inbounds %struct.tree_type* %type459, i64 0, i32 6
  %110 = bitcast [4 x i8]* %mode460 to i32*
  %bf.load461 = load i32* %110, align 4
  %111 = and i32 %bf.load461, 196096
  %112 = icmp eq i32 %111, 26112
  br i1 %112, label %sw.epilog, label %if.then474

if.then474:                                       ; preds = %land.lhs.true456
  %size480 = getelementptr inbounds %union.tree_node* %109, i64 0, i32 0, i32 2
  %113 = bitcast i32* %size480 to %union.tree_node**
  %114 = load %union.tree_node** %113, align 8, !tbaa !0
  %call481 = tail call i32 @simple_cst_equal(%union.tree_node* %108, %union.tree_node* %114) #7
  %tobool482 = icmp eq i32 %call481, 0
  br i1 %tobool482, label %if.else, label %if.then483

if.then483:                                       ; preds = %if.then474
  %115 = load %union.tree_node** %type313, align 8, !tbaa !0
  %type486 = bitcast %union.tree_node* %115 to %struct.tree_type*
  %mode487 = getelementptr inbounds %struct.tree_type* %type486, i64 0, i32 6
  %116 = bitcast [4 x i8]* %mode487 to i32*
  %bf.load488 = load i32* %116, align 4
  %bf.clear490 = and i32 %bf.load488, 65024
  %bf.load493 = load i32* %107, align 4
  %bf.clear496 = and i32 %bf.load493, -65025
  %bf.set497 = or i32 %bf.clear496, %bf.clear490
  br label %if.end508

if.else:                                          ; preds = %if.then474
  %117 = load %union.tree_node** %0, align 8, !tbaa !0
  %call500 = tail call i32 @mode_for_size_tree(%union.tree_node* %117, i32 1, i32 1) #9
  %bf.load503 = load i32* %107, align 4
  %bf.value504 = shl i32 %call500, 9
  %bf.shl505 = and i32 %bf.value504, 65024
  %bf.clear506 = and i32 %bf.load503, -65025
  %bf.set507 = or i32 %bf.clear506, %bf.shl505
  br label %if.end508

if.end508:                                        ; preds = %if.else, %if.then483
  %storemerge = phi i32 [ %bf.set507, %if.else ], [ %bf.set497, %if.then483 ]
  store i32 %storemerge, i32* %107, align 4
  br label %sw.epilog

sw.bb554:                                         ; preds = %if.end3, %if.end3, %if.end3
  %call.i = tail call noalias i8* @xmalloc(i64 72) #7
  %118 = bitcast i8* %call.i to %struct.record_layout_info_s*
  %t1.i = bitcast i8* %call.i to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %t1.i, align 8, !tbaa !0
  %align.i = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %119 = bitcast %union.tree_node** %align.i to i32*
  %120 = load i32* %119, align 4, !tbaa !3
  %cmp.i = icmp ult i32 %120, 8
  %..i = select i1 %cmp.i, i32 8, i32 %120
  %record_align.i = getelementptr inbounds i8* %call.i, i64 32
  %121 = bitcast i8* %record_align.i to i32*
  store i32 %..i, i32* %121, align 4, !tbaa !3
  %unpadded_align.i = getelementptr inbounds i8* %call.i, i64 40
  %122 = bitcast i8* %unpadded_align.i to i32*
  store i32 %..i, i32* %122, align 4, !tbaa !3
  %unpacked_align.i = getelementptr inbounds i8* %call.i, i64 36
  %123 = bitcast i8* %unpacked_align.i to i32*
  store i32 %..i, i32* %123, align 4, !tbaa !3
  %cmp6.i = icmp ugt i32 %..i, 128
  %cond11.i = select i1 %cmp6.i, i32 %..i, i32 128
  %offset_align.i = getelementptr inbounds i8* %call.i, i64 16
  %124 = bitcast i8* %offset_align.i to i32*
  store i32 %cond11.i, i32* %124, align 4, !tbaa !3
  %125 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !0
  %offset.i = getelementptr inbounds i8* %call.i, i64 8
  %126 = bitcast i8* %offset.i to %union.tree_node**
  store %union.tree_node* %125, %union.tree_node** %126, align 8, !tbaa !0
  %127 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !tbaa !0
  %bitpos.i = getelementptr inbounds i8* %call.i, i64 24
  %128 = bitcast i8* %bitpos.i to %union.tree_node**
  store %union.tree_node* %127, %union.tree_node** %128, align 8, !tbaa !0
  %prev_field.i = getelementptr inbounds i8* %call.i, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* %prev_field.i, i8 0, i64 20, i32 8, i1 false) #6
  %bf.load558 = load i32* %2, align 8
  %bf.clear559 = and i32 %bf.load558, 255
  %cmp560 = icmp eq i32 %bf.clear559, 22
  %values564 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %129 = load i8** %values564, align 8
  br i1 %cmp560, label %if.then562, label %if.end568

if.then562:                                       ; preds = %sw.bb554
  %130 = bitcast i8* %129 to %union.tree_node*
  %call565 = tail call %union.tree_node* @nreverse(%union.tree_node* %130) #7
  %call565.c = bitcast %union.tree_node* %call565 to i8*
  store i8* %call565.c, i8** %values564, align 8, !tbaa !0
  br label %if.end568

if.end568:                                        ; preds = %sw.bb554, %if.then562
  %131 = phi i8* [ %call565.c, %if.then562 ], [ %129, %sw.bb554 ]
  %values570 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %tobool571955 = icmp eq i8* %131, null
  br i1 %tobool571955, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end568
  %132 = bitcast i8* %131 to %union.tree_node*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %field.0956 = phi %union.tree_node* [ %132, %for.body.lr.ph ], [ %133, %for.body ]
  tail call void @place_field(%struct.record_layout_info_s* %118, %union.tree_node* %field.0956) #9
  %chain = getelementptr inbounds %union.tree_node* %field.0956, i64 0, i32 0, i32 0, i32 0
  %133 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool571 = icmp eq %union.tree_node* %133, null
  br i1 %tobool571, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end568
  %bf.load575 = load i32* %2, align 8
  %bf.clear576 = and i32 %bf.load575, 255
  %cmp577 = icmp eq i32 %bf.clear576, 22
  br i1 %cmp577, label %if.then579, label %if.end585

if.then579:                                       ; preds = %for.end
  %134 = load i8** %values570, align 8
  %135 = bitcast i8* %134 to %union.tree_node*
  %call582 = tail call %union.tree_node* @nreverse(%union.tree_node* %135) #7
  %call582.c = bitcast %union.tree_node* %call582 to i8*
  store i8* %call582.c, i8** %values570, align 8, !tbaa !0
  br label %if.end585

if.end585:                                        ; preds = %if.then579, %for.end
  %136 = load void (%struct.record_layout_info_s*)** @lang_adjust_rli, align 8, !tbaa !0
  %tobool586 = icmp eq void (%struct.record_layout_info_s*)* %136, null
  br i1 %tobool586, label %if.end588, label %if.then587

if.then587:                                       ; preds = %if.end585
  tail call void %136(%struct.record_layout_info_s* %118) #7
  br label %if.end588

if.end588:                                        ; preds = %if.end585, %if.then587
  tail call void @finish_record_layout(%struct.record_layout_info_s* %118) #9
  br label %sw.epilog

sw.bb589:                                         ; preds = %if.end3
  %values591 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %137 = load i8** %values591, align 8
  %maxval593 = getelementptr inbounds i8* %137, i64 112
  %138 = bitcast i8* %maxval593 to %union.tree_node**
  %139 = load %union.tree_node** %138, align 8, !tbaa !0
  %code595 = getelementptr inbounds %union.tree_node* %139, i64 0, i32 0, i32 0, i32 2
  %140 = bitcast [4 x i8]* %code595 to i32*
  %bf.load596 = load i32* %140, align 8
  %bf.clear597 = and i32 %bf.load596, 255
  %cmp598 = icmp eq i32 %bf.clear597, 25
  br i1 %cmp598, label %lor.lhs.false600, label %if.then611

lor.lhs.false600:                                 ; preds = %sw.bb589
  %minval604 = getelementptr inbounds i8* %137, i64 104
  %141 = bitcast i8* %minval604 to %union.tree_node**
  %142 = load %union.tree_node** %141, align 8, !tbaa !0
  %code606 = getelementptr inbounds %union.tree_node* %142, i64 0, i32 0, i32 0, i32 2
  %143 = bitcast [4 x i8]* %code606 to i32*
  %bf.load607 = load i32* %143, align 8
  %bf.clear608 = and i32 %bf.load607, 255
  %cmp609 = icmp eq i32 %bf.clear608, 25
  br i1 %cmp609, label %if.else612, label %if.then611

if.then611:                                       ; preds = %lor.lhs.false600, %sw.bb589
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str, i64 0, i64 0), i32 1666, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.layout_type, i64 0, i64 0)) #8
  unreachable

if.else612:                                       ; preds = %lor.lhs.false600
  %144 = load i32* @set_alignment, align 4, !tbaa !3
  %tobool613 = icmp eq i32 %144, 0
  br i1 %tobool613, label %cond.false615, label %cond.end619

cond.false615:                                    ; preds = %if.else612
  %145 = load i32* @target_flags, align 4, !tbaa !3
  %and616 = lshr i32 %145, 20
  %146 = and i32 %and616, 32
  %147 = add i32 %146, 32
  br label %cond.end619

cond.end619:                                      ; preds = %if.else612, %cond.false615
  %cond620 = phi i32 [ %147, %cond.false615 ], [ %144, %if.else612 ]
  %int_cst625 = getelementptr inbounds %union.tree_node* %139, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst625 to i64*
  %148 = load i64* %low, align 8, !tbaa !6
  %int_cst631 = getelementptr inbounds %union.tree_node* %142, i64 0, i32 0, i32 2
  %low632 = bitcast i32* %int_cst631 to i64*
  %149 = load i64* %low632, align 8, !tbaa !6
  %sub633 = add i64 %148, 1
  %add = sub i64 %sub633, %149
  %conv634 = trunc i64 %add to i32
  %add635 = add i32 %cond620, -1
  %sub636 = add i32 %add635, %conv634
  %div637 = urem i32 %sub636, %cond620
  %mul638 = sub i32 %sub636, %div637
  %cmp639 = icmp sgt i32 %mul638, %cond620
  br i1 %cmp639, label %if.then641, label %if.else647

if.then641:                                       ; preds = %cond.end619
  %mode643 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %150 = bitcast [4 x i8]* %mode643 to i32*
  %bf.load644 = load i32* %150, align 4
  %bf.clear645 = and i32 %bf.load644, -65025
  %bf.set646 = or i32 %bf.clear645, 26112
  store i32 %bf.set646, i32* %150, align 4
  br label %if.end656

if.else647:                                       ; preds = %cond.end619
  %call648 = tail call i32 @mode_for_size(i32 %cond620, i32 1, i32 1) #9
  %mode650 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %151 = bitcast [4 x i8]* %mode650 to i32*
  %bf.load651 = load i32* %151, align 4
  %bf.value652 = shl i32 %call648, 9
  %bf.shl653 = and i32 %bf.value652, 65024
  %bf.clear654 = and i32 %bf.load651, -65025
  %bf.set655 = or i32 %bf.clear654, %bf.shl653
  store i32 %bf.set655, i32* %151, align 4
  br label %if.end656

if.end656:                                        ; preds = %if.else647, %if.then641
  %conv657 = sext i32 %mul638 to i64
  %call658 = tail call %union.tree_node* @size_int_wide(i64 %conv657, i32 3) #7
  store %union.tree_node* %call658, %union.tree_node** %0, align 8, !tbaa !0
  %div661 = sdiv i32 %mul638, 8
  %conv662 = sext i32 %div661 to i64
  %call663 = tail call %union.tree_node* @size_int_wide(i64 %conv662, i32 0) #7
  %152 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 4
  store %union.tree_node* %call663, %union.tree_node** %152, align 8, !tbaa !0
  %align667 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %153 = bitcast %union.tree_node** %align667 to i32*
  store i32 %cond620, i32* %153, align 4, !tbaa !3
  %user_align669 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %154 = bitcast [4 x i8]* %user_align669 to i32*
  %bf.load670 = load i32* %154, align 4
  %bf.value675 = and i32 %conv634, 511
  %bf.clear676 = and i32 %bf.load670, 2147483136
  %bf.set677 = or i32 %bf.clear676, %bf.value675
  store i32 %bf.set677, i32* %154, align 4
  br label %sw.epilog

sw.bb679:                                         ; preds = %if.end3
  %align681 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %155 = bitcast %union.tree_node** %align681 to i32*
  store i32 128, i32* %155, align 4, !tbaa !3
  %user_align683 = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %156 = bitcast [4 x i8]* %user_align683 to i32*
  %bf.load684 = load i32* %156, align 4
  %bf.clear689 = and i32 %bf.load684, 2147418623
  %bf.set690 = or i32 %bf.clear689, 26112
  store i32 %bf.set690, i32* %156, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str, i64 0, i64 0), i32 1702, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.layout_type, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %land.lhs.true456, %if.end423, %if.end508, %sw.bb679, %if.end656, %if.end588, %cond.end281, %mode_for_size.exit954, %mode_for_size.exit941, %sw.bb188, %sw.bb151, %mode_for_size.exit928, %mode_for_size.exit, %if.end30
  %bf.load693 = load i32* %2, align 8
  %bf.clear694 = and i32 %bf.load693, 255
  %bf.clear694.off = add i32 %bf.clear694, -20
  %switch = icmp ult i32 %bf.clear694.off, 3
  br i1 %switch, label %if.end712, label %if.then711

if.then711:                                       ; preds = %sw.epilog
  tail call fastcc void @finalize_type_size(%union.tree_node* %type) #9
  br label %if.end712

if.end712:                                        ; preds = %sw.epilog, %if.then711
  %.b900 = load i1* @sizetype_set, align 1
  br i1 %.b900, label %if.end716, label %if.then714

if.then714:                                       ; preds = %if.end712
  %157 = load %union.tree_node** @early_type_list, align 8, !tbaa !0
  %call715 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %type, %union.tree_node* %157) #7
  store %union.tree_node* %call715, %union.tree_node** @early_type_list, align 8, !tbaa !0
  br label %if.end716

if.end716:                                        ; preds = %if.end712, %if.then714
  %bf.load719 = load i32* %2, align 8
  %bf.clear720 = and i32 %bf.load719, 255
  %bf.clear720.off = add i32 %bf.clear720, -18
  %switch915 = icmp ult i32 %bf.clear720.off, 5
  br i1 %switch915, label %land.lhs.true751, label %if.end758

land.lhs.true751:                                 ; preds = %if.end716
  %alias_set = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 18
  %158 = bitcast %struct.rtx_def** %alias_set to i64*
  %159 = load i64* %158, align 8, !tbaa !6
  %cmp753 = icmp eq i64 %159, -1
  br i1 %cmp753, label %if.end758, label %if.then755

if.then755:                                       ; preds = %land.lhs.true751
  store %struct.rtx_def* null, %struct.rtx_def** %alias_set, align 8, !tbaa !6
  br label %if.end758

if.end758:                                        ; preds = %if.end716, %land.lhs.true751, %if.end, %if.then755
  ret void
}
