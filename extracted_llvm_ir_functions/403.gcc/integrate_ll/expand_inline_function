define %struct.rtx_def* @expand_inline_function(%union.tree_node* nocapture %fndecl, %union.tree_node* %parms, %struct.rtx_def* %target, i32 %ignore, %union.tree_node* %type, %struct.rtx_def* %structure_value_addr) #0 {
entry:
  %new_decl_rtl.i = alloca %struct.rtx_def*, align 8
  %stack_save = alloca %struct.rtx_def*, align 8
  %temp = alloca %struct.rtx_def*, align 8
  %unsignedp = alloca i32, align 4
  %f = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 19, i32 0
  %0 = load %struct.function** %f, align 8, !tbaa !0
  %emit = getelementptr inbounds %struct.function* %0, i64 0, i32 3
  %1 = load %struct.emit_status** %emit, align 8, !tbaa !0
  %x_first_insn = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 2
  %2 = load %struct.rtx_def** %x_first_insn, align 8, !tbaa !0
  %inl_last_parm_insn = getelementptr inbounds %struct.function* %0, i64 0, i32 48
  %3 = load %struct.rtx_def** %inl_last_parm_insn, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.rtx_def* [ %4, %cond.true ], [ %2, %entry ]
  %x_first_label_num = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 1
  %5 = load i32* %x_first_label_num, align 4, !tbaa !3
  %inl_max_label_num = getelementptr inbounds %struct.function* %0, i64 0, i32 49
  %6 = load i32* %inl_max_label_num, align 4, !tbaa !3
  store %struct.rtx_def* null, %struct.rtx_def** %stack_save, align 8, !tbaa !0
  %original_arg_vector = getelementptr inbounds %struct.function* %0, i64 0, i32 46
  %7 = load i8** %original_arg_vector, align 8, !tbaa !0
  %8 = bitcast i8* %7 to %struct.rtvec_def*
  %9 = load %struct.emit_status** %emit, align 8, !tbaa !0
  %x_reg_rtx_no = getelementptr inbounds %struct.emit_status* %9, i64 0, i32 0
  %10 = load i32* %x_reg_rtx_no, align 4, !tbaa !3
  %add = add nsw i32 %10, 3
  %cmp = icmp slt i32 %add, 53
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 686, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end:                                           ; preds = %cond.end
  %decl4 = getelementptr inbounds %struct.function* %0, i64 0, i32 6
  %11 = load %union.tree_node** %decl4, align 8, !tbaa !0
  %arguments = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 10
  %12 = load %union.tree_node** %arguments, align 8, !tbaa !0
  %call = call i32 @list_length(%union.tree_node* %12) #7
  %13 = load %struct.function** @cfun, align 8, !tbaa !0
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %13, i64 0, i32 53
  %14 = load i32* %preferred_stack_boundary, align 4, !tbaa !3
  %preferred_stack_boundary6 = getelementptr inbounds %struct.function* %0, i64 0, i32 53
  %15 = load i32* %preferred_stack_boundary6, align 4, !tbaa !3
  %cmp7 = icmp slt i32 %14, %15
  br i1 %cmp7, label %if.then8, label %for.cond.preheader

if.then8:                                         ; preds = %if.end
  store i32 %15, i32* %preferred_stack_boundary, align 4, !tbaa !3
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then8, %if.end
  %formal.01587 = load %union.tree_node** %arguments, align 8
  %tobool141588 = icmp eq %union.tree_node* %formal.01587, null
  br i1 %tobool141588, label %for.cond44.preheader, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %for.body

for.cond44.preheader:                             ; preds = %for.inc, %for.cond.preheader
  %actual.0.lcssa = phi %union.tree_node* [ %parms, %for.cond.preheader ], [ %28, %for.inc ]
  %tobool451584 = icmp eq %union.tree_node* %actual.0.lcssa, null
  br i1 %tobool451584, label %for.end62, label %for.body46

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %formal.01590 = phi %union.tree_node* [ %formal.01587, %for.body.lr.ph ], [ %formal.0, %for.inc ]
  %actual.01589 = phi %union.tree_node* [ %parms, %for.body.lr.ph ], [ %28, %for.inc ]
  %cmp15 = icmp eq %union.tree_node* %actual.01589, null
  br i1 %cmp15, label %return, label %if.end17

if.end17:                                         ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %actual.01589, i64 0, i32 0, i32 2
  %17 = bitcast i32* %value to %union.tree_node**
  %18 = load %union.tree_node** %17, align 8, !tbaa !0
  %initial = getelementptr inbounds %union.tree_node* %formal.01590, i64 0, i32 0, i32 12
  %19 = load %union.tree_node** %initial, align 8, !tbaa !0
  %type19 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %mode20 = getelementptr inbounds %struct.tree_type* %type19, i64 0, i32 6
  %20 = bitcast [4 x i8]* %mode20 to i32*
  %bf.load = load i32* %20, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %cmp21 = icmp eq %union.tree_node* %18, %16
  br i1 %cmp21, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end17
  %type22 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 1
  %21 = load %union.tree_node** %type22, align 8, !tbaa !0
  %type23 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %mode24 = getelementptr inbounds %struct.tree_type* %type23, i64 0, i32 6
  %22 = bitcast [4 x i8]* %mode24 to i32*
  %bf.load25 = load i32* %22, align 4
  %bf.lshr26 = lshr i32 %bf.load25, 9
  %bf.clear27 = and i32 %bf.lshr26, 127
  %cmp28 = icmp eq i32 %bf.clear, %bf.clear27
  br i1 %cmp28, label %lor.lhs.false29, label %return

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %cmp30 = icmp eq i32 %bf.clear, 51
  br i1 %cmp30, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %lor.lhs.false29
  %23 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 15
  %24 = load %union.tree_node** %23, align 8, !tbaa !0
  %type35 = getelementptr inbounds %union.tree_node* %formal.01590, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type35, align 8, !tbaa !0
  %26 = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 15
  %27 = load %union.tree_node** %26, align 8, !tbaa !0
  %cmp38 = icmp eq %union.tree_node* %24, %27
  br i1 %cmp38, label %for.inc, label %return

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false29
  %chain = getelementptr inbounds %union.tree_node* %formal.01590, i64 0, i32 0, i32 0, i32 0
  %chain43 = getelementptr inbounds %union.tree_node* %actual.01589, i64 0, i32 0, i32 0, i32 0
  %28 = load %union.tree_node** %chain43, align 8, !tbaa !0
  %formal.0 = load %union.tree_node** %chain, align 8
  %tobool14 = icmp eq %union.tree_node* %formal.0, null
  br i1 %tobool14, label %for.cond44.preheader, label %for.body

for.body46:                                       ; preds = %for.cond44.preheader, %for.body46
  %actual.11585 = phi %union.tree_node* [ %34, %for.body46 ], [ %actual.0.lcssa, %for.cond44.preheader ]
  %value48 = getelementptr inbounds %union.tree_node* %actual.11585, i64 0, i32 0, i32 2
  %29 = bitcast i32* %value48 to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !0
  %31 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %type52 = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 0, i32 1
  %32 = load %union.tree_node** %type52, align 8, !tbaa !0
  %type53 = bitcast %union.tree_node* %32 to %struct.tree_type*
  %mode54 = getelementptr inbounds %struct.tree_type* %type53, i64 0, i32 6
  %33 = bitcast [4 x i8]* %mode54 to i32*
  %bf.load55 = load i32* %33, align 4
  %bf.lshr56 = lshr i32 %bf.load55, 9
  %bf.clear57 = and i32 %bf.lshr56, 127
  %call58 = call %struct.rtx_def* @expand_expr(%union.tree_node* %30, %struct.rtx_def* %31, i32 %bf.clear57, i32 0) #7
  %chain61 = getelementptr inbounds %union.tree_node* %actual.11585, i64 0, i32 0, i32 0, i32 0
  %34 = load %union.tree_node** %chain61, align 8, !tbaa !0
  %tobool45 = icmp eq %union.tree_node* %34, null
  br i1 %tobool45, label %for.end62, label %for.body46

for.end62:                                        ; preds = %for.body46, %for.cond44.preheader
  %conv = sext i32 %call to i64
  %mul = shl nsw i64 %conv, 3
  %call63 = call noalias i8* @xmalloc(i64 %mul) #7
  %35 = bitcast i8* %call63 to %struct.rtx_def**
  %call66 = call noalias i8* @xmalloc(i64 %mul) #7
  %36 = bitcast i8* %call66 to %union.tree_node**
  %formal.11579 = load %union.tree_node** %arguments, align 8
  %tobool701580 = icmp eq %union.tree_node* %formal.11579, null
  br i1 %tobool701580, label %for.end281, label %for.body71.lr.ph

for.body71.lr.ph:                                 ; preds = %for.end62
  %elem = getelementptr inbounds i8* %7, i64 8
  %37 = bitcast i8* %elem to [1 x %struct.rtx_def*]*
  %cmp192 = icmp ne %struct.rtx_def* %target, null
  br label %for.body71

for.body71:                                       ; preds = %for.body71.lr.ph, %for.inc276
  %indvars.iv1593 = phi i64 [ 0, %for.body71.lr.ph ], [ %indvars.iv.next1594, %for.inc276 ]
  %formal.11583 = phi %union.tree_node* [ %formal.11579, %for.body71.lr.ph ], [ %formal.1, %for.inc276 ]
  %actual.21582 = phi %union.tree_node* [ %parms, %for.body71.lr.ph ], [ %66, %for.inc276 ]
  %type74 = getelementptr inbounds %union.tree_node* %formal.11583, i64 0, i32 0, i32 0, i32 1
  %38 = load %union.tree_node** %type74, align 8, !tbaa !0
  %value76 = getelementptr inbounds %union.tree_node* %actual.21582, i64 0, i32 0, i32 2
  %39 = bitcast i32* %value76 to %union.tree_node**
  %40 = load %union.tree_node** %39, align 8, !tbaa !0
  %call77 = call %union.tree_node* @convert(%union.tree_node* %38, %union.tree_node* %40) #7
  %41 = load %union.tree_node** %type74, align 8, !tbaa !0
  %type81 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %mode82 = getelementptr inbounds %struct.tree_type* %type81, i64 0, i32 6
  %42 = bitcast [4 x i8]* %mode82 to i32*
  %bf.load83 = load i32* %42, align 4
  %bf.lshr84 = lshr i32 %bf.load83, 9
  %bf.clear85 = and i32 %bf.lshr84, 127
  %arrayidx86 = getelementptr inbounds %union.tree_node** %36, i64 %indvars.iv1593
  store %union.tree_node* %call77, %union.tree_node** %arrayidx86, align 8, !tbaa !0
  %arrayidx88 = getelementptr inbounds [1 x %struct.rtx_def*]* %37, i64 0, i64 %indvars.iv1593
  %43 = load %struct.rtx_def** %arrayidx88, align 8, !tbaa !0
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load89 = load i32* %44, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 66
  br i1 %cmp91, label %land.lhs.true93, label %if.then123

land.lhs.true93:                                  ; preds = %for.body71
  %arrayidx95 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx96, align 8, !tbaa !0
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load97 = load i32* %46, align 8
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 61
  br i1 %cmp99, label %land.lhs.true101, label %if.end180.thread

land.lhs.true101:                                 ; preds = %land.lhs.true93
  %arrayidx106 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx106 to i32*
  %47 = load i32* %rtuint, align 4, !tbaa !3
  %cmp107 = icmp ugt i32 %47, 57
  br i1 %cmp107, label %if.then109, label %if.else

if.then109:                                       ; preds = %land.lhs.true101
  %type111 = getelementptr inbounds %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 1
  %48 = load %union.tree_node** %type111, align 8, !tbaa !0
  %call112 = call %struct.rtx_def* @assign_temp(%union.tree_node* %48, i32 1, i32 1, i32 1) #7
  %call113 = call %struct.rtx_def* @store_expr(%union.tree_node* %call77, %struct.rtx_def* %call112, i32 0) #7
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %call112, i64 0, i32 1, i64 0
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx116, align 8, !tbaa !0
  %arrayidx118 = getelementptr inbounds %struct.rtx_def** %35, i64 %indvars.iv1593
  store %struct.rtx_def* %49, %struct.rtx_def** %arrayidx118, align 8, !tbaa !0
  br label %if.end180

if.else:                                          ; preds = %land.lhs.true101
  br i1 %cmp91, label %if.end180.thread, label %if.then123

if.then123:                                       ; preds = %for.body71, %if.else
  %bf.lshr125 = lshr i32 %bf.load89, 16
  %bf.clear126 = and i32 %bf.lshr125, 255
  %type128 = getelementptr inbounds %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 1
  %50 = load %union.tree_node** %type128, align 8, !tbaa !0
  %type129 = bitcast %union.tree_node* %50 to %struct.tree_type*
  %mode130 = getelementptr inbounds %struct.tree_type* %type129, i64 0, i32 6
  %51 = bitcast [4 x i8]* %mode130 to i32*
  %bf.load131 = load i32* %51, align 4
  %bf.lshr132 = lshr i32 %bf.load131, 9
  %bf.clear133 = and i32 %bf.lshr132, 127
  %cmp134 = icmp eq i32 %bf.clear126, %bf.clear133
  br i1 %cmp134, label %if.else171, label %if.then136

if.then136:                                       ; preds = %if.then123
  %unsigned_flag = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 0, i32 2
  %52 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load140 = load i32* %52, align 8
  %bf.lshr141 = lshr i32 %bf.load140, 13
  %bf.clear142 = and i32 %bf.lshr141, 1
  store i32 %bf.clear142, i32* %unsignedp, align 4, !tbaa !3
  %bf.load147 = load i32* %42, align 4
  %bf.lshr148 = lshr i32 %bf.load147, 9
  %bf.clear149 = and i32 %bf.lshr148, 127
  %call152 = call i32 @promote_mode(%union.tree_node* %41, i32 %bf.clear149, i32* %unsignedp, i32 0) #7
  %bf.load153 = load i32* %44, align 8
  %bf.lshr154 = lshr i32 %bf.load153, 16
  %bf.clear155 = and i32 %bf.lshr154, 255
  %cmp156 = icmp eq i32 %bf.clear155, %call152
  br i1 %cmp156, label %if.end159, label %if.then158

if.then158:                                       ; preds = %if.then136
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 775, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end159:                                        ; preds = %if.then136
  %53 = load %union.tree_node** %type128, align 8, !tbaa !0
  %type162 = bitcast %union.tree_node* %53 to %struct.tree_type*
  %mode163 = getelementptr inbounds %struct.tree_type* %type162, i64 0, i32 6
  %54 = bitcast [4 x i8]* %mode163 to i32*
  %bf.load164 = load i32* %54, align 4
  %bf.lshr165 = lshr i32 %bf.load164, 9
  %bf.clear166 = and i32 %bf.lshr165, 127
  %call167 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call77, %struct.rtx_def* null, i32 %bf.clear85, i32 1) #7
  %55 = load i32* %unsignedp, align 4, !tbaa !3
  %call168 = call %struct.rtx_def* @convert_modes(i32 %call152, i32 %bf.clear166, %struct.rtx_def* %call167, i32 %55) #7
  %arrayidx170 = getelementptr inbounds %struct.rtx_def** %35, i64 %indvars.iv1593
  store %struct.rtx_def* %call168, %struct.rtx_def** %arrayidx170, align 8, !tbaa !0
  br label %if.end180

if.else171:                                       ; preds = %if.then123
  %call172 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call77, %struct.rtx_def* null, i32 %bf.clear85, i32 1) #7
  %arrayidx174 = getelementptr inbounds %struct.rtx_def** %35, i64 %indvars.iv1593
  store %struct.rtx_def* %call172, %struct.rtx_def** %arrayidx174, align 8, !tbaa !0
  br label %if.end180

if.end180.thread:                                 ; preds = %if.else, %land.lhs.true93
  %arrayidx178 = getelementptr inbounds %struct.rtx_def** %35, i64 %indvars.iv1593
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx178, align 8, !tbaa !0
  br label %for.inc276

if.end180:                                        ; preds = %if.else171, %if.end159, %if.then109
  %56 = phi %struct.rtx_def* [ %49, %if.then109 ], [ %call168, %if.end159 ], [ %call172, %if.else171 ]
  %invisiref.0 = phi i32 [ 1, %if.then109 ], [ 0, %if.end159 ], [ 0, %if.else171 ]
  %arrayidx182 = getelementptr inbounds %struct.rtx_def** %35, i64 %indvars.iv1593
  %cmp183 = icmp eq %struct.rtx_def* %56, null
  br i1 %cmp183, label %for.inc276, label %land.lhs.true185

land.lhs.true185:                                 ; preds = %if.end180
  %readonly_flag = getelementptr inbounds %union.tree_node* %formal.11583, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load187 = load i32* %57, align 8
  %bf.clear189 = and i32 %bf.load187, 4096
  %tobool190 = icmp eq i32 %bf.clear189, 0
  br i1 %tobool190, label %if.then229, label %lor.lhs.false191

lor.lhs.false191:                                 ; preds = %land.lhs.true185
  %tobool195 = icmp eq i32 %invisiref.0, 0
  %or.cond = and i1 %cmp192, %tobool195
  %58 = bitcast %struct.rtx_def* %56 to i32*
  br i1 %or.cond, label %land.lhs.true196, label %lor.lhs.false222

land.lhs.true196:                                 ; preds = %lor.lhs.false191
  %bf.load199 = load i32* %58, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  switch i32 %bf.clear200, label %lor.lhs.false222 [
    i32 61, label %land.lhs.true217
    i32 63, label %land.lhs.true217
    i32 66, label %land.lhs.true217
  ]

land.lhs.true217:                                 ; preds = %land.lhs.true196, %land.lhs.true196, %land.lhs.true196
  %call220 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %56, %struct.rtx_def* %target) #7
  %tobool221 = icmp eq i32 %call220, 0
  br i1 %tobool221, label %lor.lhs.false222, label %if.then229

lor.lhs.false222:                                 ; preds = %lor.lhs.false191, %land.lhs.true217, %land.lhs.true196
  %bf.load225 = load i32* %58, align 8
  %bf.clear226 = and i32 %bf.load225, 65535
  %cmp227 = icmp eq i32 %bf.clear226, 63
  br i1 %cmp227, label %if.then229, label %if.end238

if.then229:                                       ; preds = %lor.lhs.false222, %land.lhs.true217, %land.lhs.true185
  %bf.load230 = load i32* %44, align 8
  %bf.lshr231 = lshr i32 %bf.load230, 16
  %bf.clear232 = and i32 %bf.lshr231, 255
  %call235 = call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear232, %struct.rtx_def* %56) #7
  store %struct.rtx_def* %call235, %struct.rtx_def** %arrayidx182, align 8, !tbaa !0
  br label %if.end238

if.end238:                                        ; preds = %if.then229, %lor.lhs.false222
  %59 = phi %struct.rtx_def* [ %call235, %if.then229 ], [ %56, %lor.lhs.false222 ]
  %cmp241 = icmp eq %struct.rtx_def* %59, null
  br i1 %cmp241, label %for.inc276, label %land.lhs.true243

land.lhs.true243:                                 ; preds = %if.end238
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load246 = load i32* %60, align 8
  %bf.clear247 = and i32 %bf.load246, 65535
  %cmp248 = icmp eq i32 %bf.clear247, 61
  br i1 %cmp248, label %land.lhs.true250, label %for.inc276

land.lhs.true250:                                 ; preds = %land.lhs.true243
  %61 = load %union.tree_node** %type74, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 0, i32 2
  %62 = bitcast [4 x i8]* %code to i32*
  %bf.load254 = load i32* %62, align 8
  %bf.clear255 = and i32 %bf.load254, 255
  switch i32 %bf.clear255, label %for.inc276 [
    i32 13, label %if.then267
    i32 15, label %if.then267
  ]

if.then267:                                       ; preds = %land.lhs.true250, %land.lhs.true250
  %type273 = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 0, i32 1
  %63 = load %union.tree_node** %type273, align 8, !tbaa !0
  %align = getelementptr inbounds %union.tree_node* %63, i64 0, i32 0, i32 7
  %64 = bitcast %union.tree_node** %align to i32*
  %65 = load i32* %64, align 4, !tbaa !3
  call void @mark_reg_pointer(%struct.rtx_def* %59, i32 %65) #7
  br label %for.inc276

for.inc276:                                       ; preds = %if.end180.thread, %if.end180, %land.lhs.true250, %if.end238, %land.lhs.true243, %if.then267
  %chain278 = getelementptr inbounds %union.tree_node* %formal.11583, i64 0, i32 0, i32 0, i32 0
  %chain280 = getelementptr inbounds %union.tree_node* %actual.21582, i64 0, i32 0, i32 0, i32 0
  %66 = load %union.tree_node** %chain280, align 8, !tbaa !0
  %indvars.iv.next1594 = add i64 %indvars.iv1593, 1
  %formal.1 = load %union.tree_node** %chain278, align 8
  %tobool70 = icmp eq %union.tree_node* %formal.1, null
  br i1 %tobool70, label %for.end281, label %for.body71

for.end281:                                       ; preds = %for.inc276, %for.end62
  %call282 = call noalias i8* @xcalloc(i64 1, i64 648) #7
  %67 = bitcast i8* %call282 to %struct.inline_remap*
  %fndecl283 = getelementptr inbounds i8* %call282, i64 8
  %68 = bitcast i8* %fndecl283 to %union.tree_node**
  store %union.tree_node* %11, %union.tree_node** %68, align 8, !tbaa !0
  %call284 = call %struct.varray_head_tag* @varray_init(i64 10, i64 8, i8* getelementptr inbounds ([10 x i8]* @.str16, i64 0, i64 0)) #7
  %block_map = getelementptr inbounds i8* %call282, i64 24
  %69 = bitcast i8* %block_map to %struct.varray_head_tag**
  store %struct.varray_head_tag* %call284, %struct.varray_head_tag** %69, align 8, !tbaa !0
  %conv285 = sext i32 %add to i64
  %call286 = call noalias i8* @xcalloc(i64 %conv285, i64 8) #7
  %70 = bitcast i8* %call286 to %struct.rtx_def**
  %reg_map = getelementptr inbounds i8* %call282, i64 32
  %71 = bitcast i8* %reg_map to %struct.rtx_def***
  store %struct.rtx_def** %70, %struct.rtx_def*** %71, align 8, !tbaa !0
  %conv287 = sext i32 %6 to i64
  %mul288 = shl nsw i64 %conv287, 3
  %call289 = call noalias i8* @xmalloc(i64 %mul288) #7
  %72 = bitcast i8* %call289 to %struct.rtx_def**
  %label_map = getelementptr inbounds i8* %call282, i64 40
  %73 = bitcast i8* %label_map to %struct.rtx_def***
  store %struct.rtx_def** %72, %struct.rtx_def*** %73, align 8, !tbaa !0
  %local_return_label = getelementptr inbounds i8* %call282, i64 112
  %74 = bitcast i8* %local_return_label to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %74, align 8, !tbaa !0
  %75 = load %struct.emit_status** %emit, align 8, !tbaa !0
  %x_cur_insn_uid = getelementptr inbounds %struct.emit_status* %75, i64 0, i32 6
  %76 = load i32* %x_cur_insn_uid, align 4, !tbaa !3
  %add291 = add nsw i32 %76, 1
  %conv292 = sext i32 %add291 to i64
  %call293 = call noalias i8* @xcalloc(i64 %conv292, i64 8) #7
  %77 = bitcast i8* %call293 to %struct.rtx_def**
  %insn_map = getelementptr inbounds i8* %call282, i64 48
  %78 = bitcast i8* %insn_map to %struct.rtx_def***
  store %struct.rtx_def** %77, %struct.rtx_def*** %78, align 8, !tbaa !0
  %min_insnno = getelementptr inbounds i8* %call282, i64 56
  %79 = bitcast i8* %min_insnno to i32*
  store i32 0, i32* %79, align 4, !tbaa !3
  %max_insnno = getelementptr inbounds i8* %call282, i64 60
  %80 = bitcast i8* %max_insnno to i32*
  store i32 %add291, i32* %80, align 4, !tbaa !3
  %integrating = bitcast i8* %call282 to i32*
  store i32 1, i32* %integrating, align 4, !tbaa !3
  %compare_src = getelementptr inbounds i8* %call282, i64 632
  %81 = bitcast i8* %compare_src to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %81, align 8, !tbaa !0
  %compare_mode = getelementptr inbounds i8* %call282, i64 640
  %82 = bitcast i8* %compare_mode to i32*
  store i32 0, i32* %82, align 4, !tbaa !5
  %call294 = call i32 @max_reg_num() #7
  %mul296 = mul nsw i32 %call, 15
  %add295 = add i32 %10, -40
  %add297 = add i32 %add295, %mul296
  %add298 = add i32 %add297, %call294
  %conv299 = sext i32 %add298 to i64
  %call300 = call %struct.varray_head_tag* @varray_init(i64 %conv299, i64 16, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  %const_equiv_varray = getelementptr inbounds i8* %call282, i64 64
  %83 = bitcast i8* %const_equiv_varray to %struct.varray_head_tag**
  store %struct.varray_head_tag* %call300, %struct.varray_head_tag** %83, align 8, !tbaa !0
  %const_age = getelementptr inbounds i8* %call282, i64 72
  %84 = bitcast i8* %const_age to i32*
  store i32 0, i32* %84, align 4, !tbaa !3
  %call301 = call %struct.rtx_def* @get_last_insn() #7
  %insns_at_start = getelementptr inbounds i8* %call282, i64 16
  %85 = bitcast i8* %insns_at_start to %struct.rtx_def**
  store %struct.rtx_def* %call301, %struct.rtx_def** %85, align 8, !tbaa !0
  %cmp303 = icmp eq %struct.rtx_def* %call301, null
  br i1 %cmp303, label %if.then305, label %if.end308

if.then305:                                       ; preds = %for.end281
  %call306 = call %struct.rtx_def* @emit_note(i8* null, i32 -99) #7
  store %struct.rtx_def* %call306, %struct.rtx_def** %85, align 8, !tbaa !0
  br label %if.end308

if.end308:                                        ; preds = %if.then305, %for.end281
  %86 = load %struct.emit_status** %emit, align 8, !tbaa !0
  %regno_pointer_align = getelementptr inbounds %struct.emit_status* %86, i64 0, i32 10
  %87 = load i8** %regno_pointer_align, align 8, !tbaa !0
  %regno_pointer_align310 = getelementptr inbounds i8* %call282, i64 120
  %88 = bitcast i8* %regno_pointer_align310 to i8**
  store i8* %87, i8** %88, align 8, !tbaa !0
  %89 = load %struct.emit_status** %emit, align 8, !tbaa !0
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %89, i64 0, i32 12
  %90 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !0
  %x_regno_reg_rtx312 = getelementptr inbounds i8* %call282, i64 128
  %91 = bitcast i8* %x_regno_reg_rtx312 to %struct.rtx_def***
  store %struct.rtx_def** %90, %struct.rtx_def*** %91, align 8, !tbaa !0
  %outgoing_args_size = getelementptr inbounds %struct.function* %0, i64 0, i32 11
  %92 = load i32* %outgoing_args_size, align 4, !tbaa !3
  %93 = load %struct.function** @cfun, align 8, !tbaa !0
  %outgoing_args_size313 = getelementptr inbounds %struct.function* %93, i64 0, i32 11
  %94 = load i32* %outgoing_args_size313, align 4, !tbaa !3
  %cmp314 = icmp sgt i32 %92, %94
  br i1 %cmp314, label %if.then316, label %if.end319

if.then316:                                       ; preds = %if.end308
  store i32 %92, i32* %outgoing_args_size313, align 4, !tbaa !3
  br label %if.end319

if.end319:                                        ; preds = %if.then316, %if.end308
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %0, i64 0, i32 56
  %95 = bitcast [4 x i8]* %uses_pic_offset_table to i32*
  %bf.load320 = load i32* %95, align 8
  %bf.clear322 = and i32 %bf.load320, 2097152
  %tobool323 = icmp eq i32 %bf.clear322, 0
  br i1 %tobool323, label %if.end328, label %if.then324

if.then324:                                       ; preds = %if.end319
  %uses_pic_offset_table325 = getelementptr inbounds %struct.function* %93, i64 0, i32 56
  %96 = bitcast [4 x i8]* %uses_pic_offset_table325 to i32*
  %bf.load326 = load i32* %96, align 8
  %bf.set = or i32 %bf.load326, 2097152
  store i32 %bf.set, i32* %96, align 8
  %bf.load329.pre = load i32* %95, align 8
  br label %if.end328

if.end328:                                        ; preds = %if.end319, %if.then324
  %bf.load329 = phi i32 [ %bf.load320, %if.end319 ], [ %bf.load329.pre, %if.then324 ]
  %bf.clear331 = and i32 %bf.load329, 8
  %tobool332 = icmp eq i32 %bf.clear331, 0
  br i1 %tobool332, label %if.end335, label %if.then333

if.then333:                                       ; preds = %if.end328
  %call334 = call %struct.rtx_def* @lookup_static_chain(%union.tree_node* %11) #7
  br label %if.end335

if.end335:                                        ; preds = %if.end328, %if.then333
  %static_chain_value.0 = phi %struct.rtx_def* [ %call334, %if.then333 ], [ null, %if.end328 ]
  %97 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load336 = load i32* %97, align 8
  %bf.clear337 = and i32 %bf.load336, 65535
  %cmp338 = icmp eq i32 %bf.clear337, 37
  br i1 %cmp338, label %land.lhs.true340, label %for.cond359.preheader

land.lhs.true340:                                 ; preds = %if.end335
  %arrayidx342 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx342 to i32*
  %98 = load i32* %rtint, align 4, !tbaa !3
  %cmp343 = icmp sgt i32 %98, 0
  br i1 %cmp343, label %if.then345, label %for.cond359.preheader

if.then345:                                       ; preds = %land.lhs.true340
  %arrayidx347 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx347 to i8**
  %99 = load i8** %rtstr, align 8, !tbaa !0
  %call351 = call %struct.rtx_def* @emit_note(i8* %99, i32 %98) #7
  %tobool352 = icmp eq %struct.rtx_def* %call351, null
  br i1 %tobool352, label %for.cond359.preheader, label %if.then353

if.then353:                                       ; preds = %if.then345
  %100 = bitcast %struct.rtx_def* %call351 to i32*
  %bf.load354 = load i32* %100, align 8
  %bf.set356 = or i32 %bf.load354, 1073741824
  store i32 %bf.set356, i32* %100, align 8
  br label %for.cond359.preheader

for.cond359.preheader:                            ; preds = %if.then345, %if.then353, %land.lhs.true340, %if.end335
  %cmp3601577 = icmp sgt i32 %call, 0
  br i1 %cmp3601577, label %for.body362.lr.ph, label %for.end572

for.body362.lr.ph:                                ; preds = %for.cond359.preheader
  %elem366 = getelementptr inbounds i8* %7, i64 8
  %101 = bitcast i8* %elem366 to [1 x %struct.rtx_def*]*
  %f525 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 19, i32 0
  br label %for.body362

for.body362:                                      ; preds = %for.body362.lr.ph, %for.inc570
  %indvars.iv1591 = phi i64 [ 0, %for.body362.lr.ph ], [ %indvars.iv.next1592, %for.inc570 ]
  %arrayidx364 = getelementptr inbounds %struct.rtx_def** %35, i64 %indvars.iv1591
  %102 = load %struct.rtx_def** %arrayidx364, align 8, !tbaa !0
  %arrayidx367 = getelementptr inbounds [1 x %struct.rtx_def*]* %101, i64 0, i64 %indvars.iv1591
  %103 = load %struct.rtx_def** %arrayidx367, align 8, !tbaa !0
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load368 = load i32* %104, align 8
  %bf.clear369 = and i32 %bf.load368, 65535
  switch i32 %bf.clear369, label %if.else565 [
    i32 66, label %land.lhs.true372
    i32 61, label %if.then536
    i32 65, label %if.then542
  ]

land.lhs.true372:                                 ; preds = %for.body362
  %arrayidx374 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 1, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %105 = load %struct.rtx_def** %rtx375, align 8, !tbaa !0
  %106 = bitcast %struct.rtx_def* %105 to i32*
  %bf.load376 = load i32* %106, align 8
  %bf.clear377 = and i32 %bf.load376, 65535
  %cmp378 = icmp eq i32 %bf.clear377, 61
  br i1 %cmp378, label %land.lhs.true380, label %if.then522

land.lhs.true380:                                 ; preds = %land.lhs.true372
  %arrayidx385 = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 1, i64 0
  %rtuint386 = bitcast %union.rtunion_def* %arrayidx385 to i32*
  %107 = load i32* %rtuint386, align 4, !tbaa !3
  %cmp387 = icmp ugt i32 %107, 57
  br i1 %cmp387, label %if.then389, label %if.else517

if.then389:                                       ; preds = %land.lhs.true380
  %108 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load390 = load i32* %108, align 8
  %bf.clear391 = and i32 %bf.load390, 65535
  %cmp392 = icmp eq i32 %bf.clear391, 61
  br i1 %cmp392, label %if.end507, label %if.then394

if.then394:                                       ; preds = %if.then389
  %call395 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %102) #7
  store %struct.rtx_def* %call395, %struct.rtx_def** %temp, align 8, !tbaa !0
  %bf.load396 = load i32* %108, align 8
  %bf.clear397 = and i32 %bf.load396, 65535
  switch i32 %bf.clear397, label %if.end506 [
    i32 67, label %if.then474
    i32 68, label %if.then474
    i32 54, label %if.then474
    i32 55, label %if.then474
    i32 58, label %if.then474
    i32 134, label %if.then474
    i32 56, label %if.then474
    i32 140, label %if.then474
    i32 75, label %land.lhs.true440
  ]

land.lhs.true440:                                 ; preds = %if.then394
  %arrayidx442 = getelementptr inbounds %struct.rtx_def* %102, i64 0, i32 1, i64 1
  %rtx443 = bitcast %union.rtunion_def* %arrayidx442 to %struct.rtx_def**
  %109 = load %struct.rtx_def** %rtx443, align 8, !tbaa !0
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load444 = load i32* %110, align 8
  %bf.clear445 = and i32 %bf.load444, 65535
  %cmp446 = icmp eq i32 %bf.clear445, 54
  br i1 %cmp446, label %land.lhs.true448, label %if.end506

land.lhs.true448:                                 ; preds = %land.lhs.true440
  %arrayidx450 = getelementptr inbounds %struct.rtx_def* %102, i64 0, i32 1, i64 0
  %rtx451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.rtx_def**
  %111 = load %struct.rtx_def** %rtx451, align 8, !tbaa !0
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load452 = load i32* %112, align 8
  %bf.clear453 = and i32 %bf.load452, 65535
  %cmp454 = icmp eq i32 %bf.clear453, 61
  br i1 %cmp454, label %land.lhs.true456, label %if.end506

land.lhs.true456:                                 ; preds = %land.lhs.true448
  %arrayidx461 = getelementptr inbounds %struct.rtx_def* %111, i64 0, i32 1, i64 0
  %rtuint462 = bitcast %union.rtunion_def* %arrayidx461 to i32*
  %113 = load i32* %rtuint462, align 4, !tbaa !3
  %.off1571 = add i32 %113, -53
  %114 = icmp ult i32 %.off1571, 5
  br i1 %114, label %if.then474, label %if.end506

if.then474:                                       ; preds = %land.lhs.true456, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394
  %arrayidx476 = getelementptr inbounds %struct.rtx_def* %call395, i64 0, i32 1, i64 0
  %rtuint477 = bitcast %union.rtunion_def* %arrayidx476 to i32*
  %115 = load i32* %rtuint477, align 4, !tbaa !3
  %conv478 = zext i32 %115 to i64
  %116 = load %struct.varray_head_tag** %83, align 8, !tbaa !0
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %116, i64 0, i32 0
  %117 = load i64* %num_elements, align 8, !tbaa !6
  %cmp480 = icmp ult i64 %conv478, %117
  br i1 %cmp480, label %if.end498, label %if.then482

if.then482:                                       ; preds = %if.then474
  %118 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !0
  %cmp484 = icmp eq %struct.varray_head_tag* %118, %116
  %add490 = add i32 %115, 1
  %conv491 = zext i32 %add490 to i64
  %call492 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %116, i64 %conv491) #7
  store %struct.varray_head_tag* %call492, %struct.varray_head_tag** %83, align 8, !tbaa !0
  br i1 %cmp484, label %if.then495, label %if.end498

if.then495:                                       ; preds = %if.then482
  store %struct.varray_head_tag* %call492, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !0
  br label %if.end498

if.end498:                                        ; preds = %if.then482, %if.then474, %if.then495
  %119 = phi %struct.varray_head_tag* [ %116, %if.then474 ], [ %call492, %if.then495 ], [ %call492, %if.then482 ]
  %120 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  %arrayidx500 = getelementptr inbounds %struct.rtx_def* %120, i64 0, i32 1, i64 0
  %rtuint501 = bitcast %union.rtunion_def* %arrayidx500 to i32*
  %121 = load i32* %rtuint501, align 4, !tbaa !3
  %idxprom502 = zext i32 %121 to i64
  %rtx505 = getelementptr inbounds %struct.varray_head_tag* %119, i64 0, i32 4, i32 0, i64 %idxprom502, i32 0
  store %struct.rtx_def* %102, %struct.rtx_def** %rtx505, align 8, !tbaa !0
  %age = getelementptr inbounds %struct.varray_head_tag* %119, i64 0, i32 4, i32 0, i64 %idxprom502, i32 1
  store i32 -1, i32* %age, align 4, !tbaa !3
  %.pre1606 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  br label %if.end506

if.end506:                                        ; preds = %if.then394, %if.end498, %land.lhs.true456, %land.lhs.true448, %land.lhs.true440
  %122 = phi %struct.rtx_def* [ %call395, %if.then394 ], [ %.pre1606, %if.end498 ], [ %call395, %land.lhs.true456 ], [ %call395, %land.lhs.true448 ], [ %call395, %land.lhs.true440 ]
  %.pre = load %struct.rtx_def** %rtx375, align 8, !tbaa !0
  %arrayidx512.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 1, i64 0
  %rtuint513.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx512.phi.trans.insert to i32*
  %.pre1605 = load i32* %rtuint513.phi.trans.insert, align 4, !tbaa !3
  br label %if.end507

if.end507:                                        ; preds = %if.then389, %if.end506
  %123 = phi i32 [ %.pre1605, %if.end506 ], [ %107, %if.then389 ]
  %copy.0 = phi %struct.rtx_def* [ %122, %if.end506 ], [ %102, %if.then389 ]
  %idxprom514 = zext i32 %123 to i64
  %124 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %arrayidx516 = getelementptr inbounds %struct.rtx_def** %124, i64 %idxprom514
  store %struct.rtx_def* %copy.0, %struct.rtx_def** %arrayidx516, align 8, !tbaa !0
  br label %for.inc570

if.else517:                                       ; preds = %land.lhs.true380
  switch i32 %bf.clear369, label %if.else565 [
    i32 66, label %if.then522
    i32 61, label %if.then536
    i32 65, label %if.then542
  ]

if.then522:                                       ; preds = %land.lhs.true372, %if.else517
  %125 = load %struct.function** %f525, align 8, !tbaa !0
  %args_size = getelementptr inbounds %struct.function* %125, i64 0, i32 9
  %126 = load i32* %args_size, align 4, !tbaa !3
  %cmp526 = icmp eq i32 %126, 0
  br i1 %cmp526, label %for.inc570, label %if.then528

if.then528:                                       ; preds = %if.then522
  %127 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !0
  %call529 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %127, %struct.inline_remap* %67, i32 0) #8
  br label %for.inc570

if.then536:                                       ; preds = %for.body362, %if.else517
  call fastcc void @process_reg_param(%struct.inline_remap* %67, %struct.rtx_def* %103, %struct.rtx_def* %102) #8
  br label %for.inc570

if.then542:                                       ; preds = %for.body362, %if.else517
  %arrayidx544 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 1, i64 0
  %rtx545 = bitcast %union.rtunion_def* %arrayidx544 to %struct.rtx_def**
  %128 = load %struct.rtx_def** %rtx545, align 8, !tbaa !0
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load546 = load i32* %129, align 8
  %bf.lshr547 = lshr i32 %bf.load546, 16
  %bf.clear548 = and i32 %bf.lshr547, 255
  %call549 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear548, %struct.rtx_def* %103) #7
  %130 = load %struct.rtx_def** %rtx545, align 8, !tbaa !0
  %131 = bitcast %struct.rtx_def* %130 to i32*
  %bf.load553 = load i32* %131, align 8
  %bf.lshr554 = lshr i32 %bf.load553, 16
  %bf.clear555 = and i32 %bf.lshr554, 255
  %call556 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear555, %struct.rtx_def* %103) #7
  %132 = bitcast %struct.rtx_def* %call549 to i32*
  %bf.load557 = load i32* %132, align 8
  %bf.lshr558 = lshr i32 %bf.load557, 16
  %bf.clear559 = and i32 %bf.lshr558, 255
  %call560 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear559, %struct.rtx_def* %102) #7
  %133 = bitcast %struct.rtx_def* %call556 to i32*
  %bf.load561 = load i32* %133, align 8
  %bf.lshr562 = lshr i32 %bf.load561, 16
  %bf.clear563 = and i32 %bf.lshr562, 255
  %call564 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear563, %struct.rtx_def* %102) #7
  call fastcc void @process_reg_param(%struct.inline_remap* %67, %struct.rtx_def* %call549, %struct.rtx_def* %call560) #8
  call fastcc void @process_reg_param(%struct.inline_remap* %67, %struct.rtx_def* %call556, %struct.rtx_def* %call564) #8
  br label %for.inc570

if.else565:                                       ; preds = %for.body362, %if.else517
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 964, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

for.inc570:                                       ; preds = %if.then522, %if.end507, %if.then536, %if.then542, %if.then528
  %indvars.iv.next1592 = add i64 %indvars.iv1591, 1
  %134 = trunc i64 %indvars.iv.next1592 to i32
  %cmp360 = icmp slt i32 %134, %call
  br i1 %cmp360, label %for.body362, label %for.end572

for.end572:                                       ; preds = %for.inc570, %for.cond359.preheader
  %135 = load %struct.function** @inlining, align 8, !tbaa !0
  store %struct.function* %0, %struct.function** @inlining, align 8, !tbaa !0
  %formal.21572 = load %union.tree_node** %arguments, align 8
  %tobool5761573 = icmp eq %union.tree_node* %formal.21572, null
  br i1 %tobool5761573, label %for.end637, label %for.body577.lr.ph

for.body577.lr.ph:                                ; preds = %for.end572
  %elem579 = getelementptr inbounds i8* %7, i64 8
  %136 = bitcast i8* %elem579 to [1 x %struct.rtx_def*]*
  br label %for.body577

for.body577:                                      ; preds = %for.body577.lr.ph, %for.inc633
  %indvars.iv = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next, %for.inc633 ]
  %formal.21575 = phi %union.tree_node* [ %formal.21572, %for.body577.lr.ph ], [ %formal.2, %for.inc633 ]
  %arrayidx580 = getelementptr inbounds [1 x %struct.rtx_def*]* %136, i64 0, i64 %indvars.iv
  %137 = load %struct.rtx_def** %arrayidx580, align 8, !tbaa !0
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load581 = load i32* %138, align 8
  %bf.clear582 = and i32 %bf.load581, 65535
  %cmp583 = icmp eq i32 %bf.clear582, 66
  br i1 %cmp583, label %land.lhs.true585, label %for.inc633

land.lhs.true585:                                 ; preds = %for.body577
  %arrayidx587 = getelementptr inbounds %struct.rtx_def* %137, i64 0, i32 1, i64 0
  %rtx588 = bitcast %union.rtunion_def* %arrayidx587 to %struct.rtx_def**
  %139 = load %struct.rtx_def** %rtx588, align 8, !tbaa !0
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %bf.load589 = load i32* %140, align 8
  %bf.clear590 = and i32 %bf.load589, 65535
  %cmp591 = icmp eq i32 %bf.clear590, 61
  br i1 %cmp591, label %land.lhs.true593, label %if.then602

land.lhs.true593:                                 ; preds = %land.lhs.true585
  %arrayidx598 = getelementptr inbounds %struct.rtx_def* %139, i64 0, i32 1, i64 0
  %rtuint599 = bitcast %union.rtunion_def* %arrayidx598 to i32*
  %141 = load i32* %rtuint599, align 4, !tbaa !3
  %cmp600 = icmp ugt i32 %141, 57
  br i1 %cmp600, label %for.inc633, label %if.then602

if.then602:                                       ; preds = %land.lhs.true593, %land.lhs.true585
  %filename = getelementptr inbounds %union.tree_node* %formal.21575, i64 0, i32 0, i32 1
  %142 = load i8** %filename, align 8, !tbaa !0
  %linenum = getelementptr inbounds %union.tree_node* %formal.21575, i64 0, i32 0, i32 2
  %143 = load i32* %linenum, align 4, !tbaa !3
  %call606 = call %struct.rtx_def* @emit_note(i8* %142, i32 %143) #7
  %tobool607 = icmp eq %struct.rtx_def* %call606, null
  br i1 %tobool607, label %if.end612, label %if.then608

if.then608:                                       ; preds = %if.then602
  %144 = bitcast %struct.rtx_def* %call606 to i32*
  %bf.load609 = load i32* %144, align 8
  %bf.set611 = or i32 %bf.load609, 1073741824
  store i32 %bf.set611, i32* %144, align 8
  br label %if.end612

if.end612:                                        ; preds = %if.then602, %if.then608
  %call613 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %137, %struct.inline_remap* %67, i32 1) #8
  store %struct.rtx_def* %call613, %struct.rtx_def** %temp, align 8, !tbaa !0
  call fastcc void @subst_constants(%struct.rtx_def** %temp, %struct.rtx_def* null, %struct.inline_remap* %67, i32 1) #8
  %call614 = call i32 @apply_change_group() #7
  %145 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  %146 = bitcast %struct.rtx_def* %145 to i32*
  %bf.load615 = load i32* %146, align 8
  %bf.lshr616 = lshr i32 %bf.load615, 16
  %bf.clear617 = and i32 %bf.lshr616, 255
  %arrayidx619 = getelementptr inbounds %struct.rtx_def* %145, i64 0, i32 1, i64 0
  %rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**
  %147 = load %struct.rtx_def** %rtx620, align 8, !tbaa !0
  %call621 = call i32 @memory_address_p(i32 %bf.clear617, %struct.rtx_def* %147) #7
  %tobool622 = icmp eq i32 %call621, 0
  %148 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  br i1 %tobool622, label %if.then623, label %if.end628

if.then623:                                       ; preds = %if.end612
  %arrayidx625 = getelementptr inbounds %struct.rtx_def* %148, i64 0, i32 1, i64 0
  %rtx626 = bitcast %union.rtunion_def* %arrayidx625 to %struct.rtx_def**
  %149 = load %struct.rtx_def** %rtx626, align 8, !tbaa !0
  %call627 = call %struct.rtx_def* @change_address(%struct.rtx_def* %148, i32 0, %struct.rtx_def* %149) #7
  store %struct.rtx_def* %call627, %struct.rtx_def** %temp, align 8, !tbaa !0
  br label %if.end628

if.end628:                                        ; preds = %if.end612, %if.then623
  %150 = phi %struct.rtx_def* [ %call627, %if.then623 ], [ %148, %if.end612 ]
  %arrayidx630 = getelementptr inbounds %union.tree_node** %36, i64 %indvars.iv
  %151 = load %union.tree_node** %arrayidx630, align 8, !tbaa !0
  %call631 = call %struct.rtx_def* @store_expr(%union.tree_node* %151, %struct.rtx_def* %150, i32 0) #7
  br label %for.inc633

for.inc633:                                       ; preds = %for.body577, %land.lhs.true593, %if.end628
  %chain635 = getelementptr inbounds %union.tree_node* %formal.21575, i64 0, i32 0, i32 0, i32 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %formal.2 = load %union.tree_node** %chain635, align 8
  %tobool576 = icmp eq %union.tree_node* %formal.2, null
  br i1 %tobool576, label %for.end637, label %for.body577

for.end637:                                       ; preds = %for.inc633, %for.end572
  %inline_target = getelementptr inbounds i8* %call282, i64 80
  %152 = bitcast i8* %inline_target to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %152, align 8, !tbaa !0
  %result = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 11
  %153 = load %union.tree_node** %result, align 8, !tbaa !0
  %rtl = getelementptr inbounds %union.tree_node* %153, i64 0, i32 0, i32 17
  %154 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  %type665 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode666 = getelementptr inbounds %struct.tree_type* %type665, i64 0, i32 6
  %155 = bitcast [4 x i8]* %mode666 to i32*
  %bf.load667 = load i32* %155, align 4
  %bf.lshr668 = lshr i32 %bf.load667, 9
  %bf.clear669 = and i32 %bf.lshr668, 127
  %cmp670 = icmp eq i32 %bf.clear669, 0
  br i1 %cmp670, label %if.end1088, label %if.else673

if.else673:                                       ; preds = %for.end637
  %156 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load674 = load i32* %156, align 8
  %bf.clear675 = and i32 %bf.load674, 65535
  %cmp676 = icmp eq i32 %bf.clear675, 66
  br i1 %cmp676, label %if.then678, label %if.else844

if.then678:                                       ; preds = %if.else673
  %arrayidx680 = getelementptr inbounds %struct.rtx_def* %154, i64 0, i32 1, i64 0
  %rtx681 = bitcast %union.rtunion_def* %arrayidx680 to %struct.rtx_def**
  %157 = load %struct.rtx_def** %rtx681, align 8, !tbaa !0
  %158 = bitcast %struct.rtx_def* %157 to i32*
  %bf.load682 = load i32* %158, align 8
  %bf.clear683 = and i32 %bf.load682, 65535
  %cmp684 = icmp eq i32 %bf.clear683, 70
  br i1 %cmp684, label %if.then686, label %if.else689

if.then686:                                       ; preds = %if.then678
  %call687 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %154, %struct.inline_remap* %67, i32 1) #8
  store %struct.rtx_def* %call687, %struct.rtx_def** %temp, align 8, !tbaa !0
  call fastcc void @subst_constants(%struct.rtx_def** %temp, %struct.rtx_def* null, %struct.inline_remap* %67, i32 1) #8
  %call688 = call i32 @apply_change_group() #7
  %159 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  br label %if.end1088

if.else689:                                       ; preds = %if.then678
  %tobool690 = icmp eq %struct.rtx_def* %structure_value_addr, null
  br i1 %tobool690, label %if.then696, label %lor.lhs.false691

lor.lhs.false691:                                 ; preds = %if.else689
  %call694 = call i32 @aggregate_value_p(%union.tree_node* %153) #7
  %tobool695 = icmp eq i32 %call694, 0
  br i1 %tobool695, label %if.then696, label %if.end697

if.then696:                                       ; preds = %lor.lhs.false691, %if.else689
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 1027, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end697:                                        ; preds = %lor.lhs.false691
  %160 = load %struct.rtx_def** %rtx681, align 8, !tbaa !0
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load701 = load i32* %161, align 8
  %bf.clear702 = and i32 %bf.load701, 65535
  %cmp703 = icmp eq i32 %bf.clear702, 61
  br i1 %cmp703, label %if.then705, label %if.else838

if.then705:                                       ; preds = %if.end697
  %call706 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %structure_value_addr, %struct.rtx_def* null) #7
  store %struct.rtx_def* %call706, %struct.rtx_def** %temp, align 8, !tbaa !0
  %162 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %162, 25
  %163 = and i32 %and, 1
  %164 = or i32 %163, 4
  %call709 = call %struct.rtx_def* @force_reg(i32 %164, %struct.rtx_def* %call706) #7
  store %struct.rtx_def* %call709, %struct.rtx_def** %temp, align 8, !tbaa !0
  %arrayidx711 = getelementptr inbounds %struct.rtx_def* %call709, i64 0, i32 1, i64 0
  %rtuint712 = bitcast %union.rtunion_def* %arrayidx711 to i32*
  %165 = load i32* %rtuint712, align 4, !tbaa !3
  %.off = add i32 %165, -53
  %166 = icmp ult i32 %.off, 5
  br i1 %166, label %if.then721, label %if.end726

if.then721:                                       ; preds = %if.then705
  %167 = load i32* @target_flags, align 4, !tbaa !3
  %and722 = lshr i32 %167, 25
  %168 = and i32 %and722, 1
  %169 = or i32 %168, 4
  %call725 = call %struct.rtx_def* @copy_to_mode_reg(i32 %169, %struct.rtx_def* %call709) #7
  store %struct.rtx_def* %call725, %struct.rtx_def** %temp, align 8, !tbaa !0
  br label %if.end726

if.end726:                                        ; preds = %if.then721, %if.then705
  %170 = phi %struct.rtx_def* [ %call725, %if.then721 ], [ %call709, %if.then705 ]
  %171 = load %struct.rtx_def** %rtx681, align 8, !tbaa !0
  %arrayidx731 = getelementptr inbounds %struct.rtx_def* %171, i64 0, i32 1, i64 0
  %rtuint732 = bitcast %union.rtunion_def* %arrayidx731 to i32*
  %172 = load i32* %rtuint732, align 4, !tbaa !3
  %idxprom733 = zext i32 %172 to i64
  %173 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %arrayidx735 = getelementptr inbounds %struct.rtx_def** %173, i64 %idxprom733
  store %struct.rtx_def* %170, %struct.rtx_def** %arrayidx735, align 8, !tbaa !0
  %174 = bitcast %struct.rtx_def* %structure_value_addr to i32*
  %bf.load736 = load i32* %174, align 8
  %bf.clear737 = and i32 %bf.load736, 65535
  switch i32 %bf.clear737, label %if.end1088 [
    i32 67, label %if.then799
    i32 68, label %if.then799
    i32 54, label %if.then799
    i32 55, label %if.then799
    i32 58, label %if.then799
    i32 134, label %if.then799
    i32 56, label %if.then799
    i32 140, label %if.then799
    i32 70, label %if.then799
    i32 75, label %land.lhs.true785
  ]

land.lhs.true785:                                 ; preds = %if.end726
  %fld786 = getelementptr inbounds %struct.rtx_def* %structure_value_addr, i64 0, i32 1
  %rtx788 = bitcast [1 x %union.rtunion_def]* %fld786 to %struct.rtx_def**
  %175 = load %struct.rtx_def** %rtx788, align 8, !tbaa !0
  %176 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !0
  %cmp789 = icmp eq %struct.rtx_def* %175, %176
  br i1 %cmp789, label %land.lhs.true791, label %if.end1088

land.lhs.true791:                                 ; preds = %land.lhs.true785
  %arrayidx793 = getelementptr inbounds %struct.rtx_def* %structure_value_addr, i64 0, i32 1, i64 1
  %rtx794 = bitcast %union.rtunion_def* %arrayidx793 to %struct.rtx_def**
  %177 = load %struct.rtx_def** %rtx794, align 8, !tbaa !0
  %178 = bitcast %struct.rtx_def* %177 to i32*
  %bf.load795 = load i32* %178, align 8
  %bf.clear796 = and i32 %bf.load795, 65535
  %cmp797 = icmp eq i32 %bf.clear796, 54
  br i1 %cmp797, label %if.then799, label %if.end1088

if.then799:                                       ; preds = %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %land.lhs.true791
  %179 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  %arrayidx802 = getelementptr inbounds %struct.rtx_def* %179, i64 0, i32 1, i64 0
  %rtuint803 = bitcast %union.rtunion_def* %arrayidx802 to i32*
  %180 = load i32* %rtuint803, align 4, !tbaa !3
  %conv804 = zext i32 %180 to i64
  %181 = load %struct.varray_head_tag** %83, align 8, !tbaa !0
  %num_elements806 = getelementptr inbounds %struct.varray_head_tag* %181, i64 0, i32 0
  %182 = load i64* %num_elements806, align 8, !tbaa !6
  %cmp807 = icmp ult i64 %conv804, %182
  br i1 %cmp807, label %if.end826, label %if.then809

if.then809:                                       ; preds = %if.then799
  %183 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !0
  %cmp812 = icmp eq %struct.varray_head_tag* %183, %181
  %add818 = add i32 %180, 1
  %conv819 = zext i32 %add818 to i64
  %call820 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %181, i64 %conv819) #7
  store %struct.varray_head_tag* %call820, %struct.varray_head_tag** %83, align 8, !tbaa !0
  br i1 %cmp812, label %if.then823, label %if.end826

if.then823:                                       ; preds = %if.then809
  store %struct.varray_head_tag* %call820, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !0
  br label %if.end826

if.end826:                                        ; preds = %if.then809, %if.then799, %if.then823
  %184 = phi %struct.varray_head_tag* [ %181, %if.then799 ], [ %call820, %if.then823 ], [ %call820, %if.then809 ]
  %185 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  %arrayidx828 = getelementptr inbounds %struct.rtx_def* %185, i64 0, i32 1, i64 0
  %rtuint829 = bitcast %union.rtunion_def* %arrayidx828 to i32*
  %186 = load i32* %rtuint829, align 4, !tbaa !3
  %idxprom830 = zext i32 %186 to i64
  %rtx835 = getelementptr inbounds %struct.varray_head_tag* %184, i64 0, i32 4, i32 0, i64 %idxprom830, i32 0
  store %struct.rtx_def* %structure_value_addr, %struct.rtx_def** %rtx835, align 8, !tbaa !0
  %age836 = getelementptr inbounds %struct.varray_head_tag* %184, i64 0, i32 4, i32 0, i64 %idxprom830, i32 1
  store i32 -1, i32* %age836, align 4, !tbaa !3
  br label %if.end1088

if.else838:                                       ; preds = %if.end697
  %call839 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %154, %struct.inline_remap* %67, i32 1) #8
  store %struct.rtx_def* %call839, %struct.rtx_def** %temp, align 8, !tbaa !0
  call fastcc void @subst_constants(%struct.rtx_def** %temp, %struct.rtx_def* null, %struct.inline_remap* %67, i32 0) #8
  %call840 = call i32 @apply_change_group() #7
  %187 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  %call841 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %187, %struct.rtx_def* %structure_value_addr) #7
  br label %if.end1088

if.else844:                                       ; preds = %if.else673
  %tobool845 = icmp eq i32 %ignore, 0
  br i1 %tobool845, label %if.else847, label %if.end1088

if.else847:                                       ; preds = %if.else844
  switch i32 %bf.clear675, label %if.else1083 [
    i32 61, label %if.then852
    i32 65, label %if.then986
  ]

if.then852:                                       ; preds = %if.else847
  %tobool862 = icmp eq %struct.rtx_def* %154, null
  br i1 %tobool862, label %cond.false868, label %cond.end875

cond.false868:                                    ; preds = %if.then852
  call void @make_decl_rtl(%union.tree_node* %153, i8* null) #7
  %188 = load %union.tree_node** %result, align 8, !tbaa !0
  %rtl874 = getelementptr inbounds %union.tree_node* %188, i64 0, i32 0, i32 17
  %189 = load %struct.rtx_def** %rtl874, align 8, !tbaa !0
  %.phi.trans.insert = bitcast %struct.rtx_def* %189 to i32*
  %bf.load877.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end875

cond.end875:                                      ; preds = %if.then852, %cond.false868
  %190 = phi %union.tree_node* [ %188, %cond.false868 ], [ %153, %if.then852 ]
  %bf.load877 = phi i32 [ %bf.load877.pre, %cond.false868 ], [ %bf.load674, %if.then852 ]
  %191 = phi %struct.rtx_def* [ %189, %cond.false868 ], [ %154, %if.then852 ]
  %bf.lshr878 = lshr i32 %bf.load877, 16
  %bf.clear879 = and i32 %bf.lshr878, 255
  %cmp880 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp880, label %if.then893, label %lor.lhs.false882

lor.lhs.false882:                                 ; preds = %cond.end875
  %192 = bitcast %struct.rtx_def* %target to i32*
  %bf.load883 = load i32* %192, align 8
  %bf.clear884 = and i32 %bf.load883, 65535
  %cmp885 = icmp eq i32 %bf.clear884, 61
  br i1 %cmp885, label %lor.lhs.false887, label %if.then893

lor.lhs.false887:                                 ; preds = %lor.lhs.false882
  %bf.lshr889 = lshr i32 %bf.load883, 16
  %bf.clear890 = and i32 %bf.lshr889, 255
  %cmp891 = icmp eq i32 %bf.clear890, %bf.clear669
  br i1 %cmp891, label %if.end947, label %if.then893

if.then893:                                       ; preds = %lor.lhs.false887, %lor.lhs.false882, %cond.end875
  %cmp894 = icmp eq i32 %bf.clear669, 51
  br i1 %cmp894, label %if.then896, label %if.end945

if.then896:                                       ; preds = %if.then893
  %tobool901 = icmp eq %struct.rtx_def* %191, null
  br i1 %tobool901, label %cond.false907, label %cond.end914

cond.false907:                                    ; preds = %if.then896
  call void @make_decl_rtl(%union.tree_node* %190, i8* null) #7
  %193 = load %union.tree_node** %result, align 8, !tbaa !0
  %rtl913 = getelementptr inbounds %union.tree_node* %193, i64 0, i32 0, i32 17
  %194 = load %struct.rtx_def** %rtl913, align 8, !tbaa !0
  %.phi.trans.insert1597 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load916.pre = load i32* %.phi.trans.insert1597, align 8
  br label %cond.end914

cond.end914:                                      ; preds = %if.then896, %cond.false907
  %195 = phi %union.tree_node* [ %193, %cond.false907 ], [ %190, %if.then896 ]
  %bf.load916 = phi i32 [ %bf.load916.pre, %cond.false907 ], [ %bf.load877, %if.then896 ]
  %196 = phi %struct.rtx_def* [ %194, %cond.false907 ], [ %191, %if.then896 ]
  %bf.clear917 = and i32 %bf.load916, 65535
  %cmp918 = icmp eq i32 %bf.clear917, 61
  br i1 %cmp918, label %if.then920, label %if.else943

if.then920:                                       ; preds = %cond.end914
  %tobool925 = icmp eq %struct.rtx_def* %196, null
  br i1 %tobool925, label %cond.false931, label %cond.end938

cond.false931:                                    ; preds = %if.then920
  call void @make_decl_rtl(%union.tree_node* %195, i8* null) #7
  %197 = load %union.tree_node** %result, align 8, !tbaa !0
  %rtl937 = getelementptr inbounds %union.tree_node* %197, i64 0, i32 0, i32 17
  %198 = load %struct.rtx_def** %rtl937, align 8, !tbaa !0
  %.phi.trans.insert1599 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load940.pre = load i32* %.phi.trans.insert1599, align 8
  br label %cond.end938

cond.end938:                                      ; preds = %if.then920, %cond.false931
  %bf.load940 = phi i32 [ %bf.load940.pre, %cond.false931 ], [ %bf.load916, %if.then920 ]
  %bf.lshr941 = lshr i32 %bf.load940, 16
  %bf.clear942 = and i32 %bf.lshr941, 255
  br label %if.end945

if.else943:                                       ; preds = %cond.end914
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 1112, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end945:                                        ; preds = %cond.end938, %if.then893
  %departing_mode.0 = phi i32 [ %bf.clear942, %cond.end938 ], [ %bf.clear669, %if.then893 ]
  %arriving_mode.0 = phi i32 [ %bf.clear942, %cond.end938 ], [ %bf.clear879, %if.then893 ]
  %call946 = call %struct.rtx_def* @gen_reg_rtx(i32 %departing_mode.0) #7
  br label %if.end947

if.end947:                                        ; preds = %lor.lhs.false887, %if.end945
  %target.addr.0 = phi %struct.rtx_def* [ %call946, %if.end945 ], [ %target, %lor.lhs.false887 ]
  %departing_mode.1 = phi i32 [ %departing_mode.0, %if.end945 ], [ %bf.clear669, %lor.lhs.false887 ]
  %arriving_mode.1 = phi i32 [ %arriving_mode.0, %if.end945 ], [ %bf.clear879, %lor.lhs.false887 ]
  %cmp948 = icmp eq i32 %arriving_mode.1, %departing_mode.1
  br i1 %cmp948, label %if.end966, label %if.then950

if.then950:                                       ; preds = %if.end947
  %idxprom951 = sext i32 %arriving_mode.1 to i64
  %arrayidx952 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom951
  %199 = load i16* %arrayidx952, align 2, !tbaa !7
  %conv953 = zext i16 %199 to i32
  %200 = load i32* @target_flags, align 4, !tbaa !3
  %and954 = lshr i32 %200, 20
  %201 = and i32 %and954, 32
  %202 = add i32 %201, 32
  %cmp957 = icmp ugt i32 %conv953, %202
  br i1 %cmp957, label %if.then959, label %if.else962

if.then959:                                       ; preds = %if.then950
  %call960 = call %struct.rtx_def* @gen_reg_rtx(i32 %arriving_mode.1) #7
  %call961 = call %struct.rtx_def* @gen_lowpart(i32 %departing_mode.1, %struct.rtx_def* %call960) #7
  br label %if.end966

if.else962:                                       ; preds = %if.then950
  %call963 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %arriving_mode.1, %struct.rtx_def* %target.addr.0, i32 0) #7
  br label %if.end966

if.end966:                                        ; preds = %if.end947, %if.then959, %if.else962
  %target.addr.1 = phi %struct.rtx_def* [ %call961, %if.then959 ], [ %target.addr.0, %if.else962 ], [ %target.addr.0, %if.end947 ]
  %reg_to_map.0 = phi %struct.rtx_def* [ %call960, %if.then959 ], [ %call963, %if.else962 ], [ %target.addr.0, %if.end947 ]
  %bf.load967 = load i32* %156, align 8
  %bf.clear969 = and i32 %bf.load967, 1073741824
  %tobool970 = icmp eq i32 %bf.clear969, 0
  br i1 %tobool970, label %if.else973, label %if.then971

if.then971:                                       ; preds = %if.end966
  store %struct.rtx_def* %reg_to_map.0, %struct.rtx_def** %152, align 8, !tbaa !0
  br label %if.end1088

if.else973:                                       ; preds = %if.end966
  %arrayidx975 = getelementptr inbounds %struct.rtx_def* %154, i64 0, i32 1, i64 0
  %rtuint976 = bitcast %union.rtunion_def* %arrayidx975 to i32*
  %203 = load i32* %rtuint976, align 4, !tbaa !3
  %idxprom977 = zext i32 %203 to i64
  %204 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %arrayidx979 = getelementptr inbounds %struct.rtx_def** %204, i64 %idxprom977
  store %struct.rtx_def* %reg_to_map.0, %struct.rtx_def** %arrayidx979, align 8, !tbaa !0
  br label %if.end1088

if.then986:                                       ; preds = %if.else847
  %tobool998 = icmp eq %struct.rtx_def* %154, null
  br i1 %tobool998, label %cond.false1004, label %cond.end1011

cond.false1004:                                   ; preds = %if.then986
  call void @make_decl_rtl(%union.tree_node* %153, i8* null) #7
  %205 = load %union.tree_node** %result, align 8, !tbaa !0
  %rtl1010 = getelementptr inbounds %union.tree_node* %205, i64 0, i32 0, i32 17
  %206 = load %struct.rtx_def** %rtl1010, align 8, !tbaa !0
  %.phi.trans.insert1601 = bitcast %struct.rtx_def* %206 to i32*
  %bf.load1013.pre = load i32* %.phi.trans.insert1601, align 8
  br label %cond.end1011

cond.end1011:                                     ; preds = %if.then986, %cond.false1004
  %bf.load1013 = phi i32 [ %bf.load1013.pre, %cond.false1004 ], [ %bf.load674, %if.then986 ]
  %bf.lshr1014 = lshr i32 %bf.load1013, 16
  %bf.clear1015 = and i32 %bf.lshr1014, 255
  %cmp1016 = icmp eq i32 %bf.clear669, %bf.clear1015
  br i1 %cmp1016, label %if.end1019, label %if.then1018

if.then1018:                                      ; preds = %cond.end1011
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 1154, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end1019:                                       ; preds = %cond.end1011
  %fld1020 = getelementptr inbounds %struct.rtx_def* %154, i64 0, i32 1
  %rtx1022 = bitcast [1 x %union.rtunion_def]* %fld1020 to %struct.rtx_def**
  %207 = load %struct.rtx_def** %rtx1022, align 8, !tbaa !0
  %208 = bitcast %struct.rtx_def* %207 to i32*
  %bf.load1023 = load i32* %208, align 8
  %bf.clear1024 = and i32 %bf.load1023, 65535
  %cmp1025 = icmp eq i32 %bf.clear1024, 61
  br i1 %cmp1025, label %lor.lhs.false1027, label %if.then1035

lor.lhs.false1027:                                ; preds = %if.end1019
  %arrayidx1029 = getelementptr inbounds %struct.rtx_def* %154, i64 0, i32 1, i64 1
  %rtx1030 = bitcast %union.rtunion_def* %arrayidx1029 to %struct.rtx_def**
  %209 = load %struct.rtx_def** %rtx1030, align 8, !tbaa !0
  %210 = bitcast %struct.rtx_def* %209 to i32*
  %bf.load1031 = load i32* %210, align 8
  %bf.clear1032 = and i32 %bf.load1031, 65535
  %cmp1033 = icmp eq i32 %bf.clear1032, 61
  br i1 %cmp1033, label %if.end1036, label %if.then1035

if.then1035:                                      ; preds = %lor.lhs.false1027, %if.end1019
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 1157, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end1036:                                       ; preds = %lor.lhs.false1027
  %cmp1037 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp1037, label %if.then1050, label %lor.lhs.false1039

lor.lhs.false1039:                                ; preds = %if.end1036
  %211 = bitcast %struct.rtx_def* %target to i32*
  %bf.load1040 = load i32* %211, align 8
  %bf.clear1041 = and i32 %bf.load1040, 65535
  %cmp1042 = icmp eq i32 %bf.clear1041, 61
  br i1 %cmp1042, label %lor.lhs.false1044, label %if.then1050

lor.lhs.false1044:                                ; preds = %lor.lhs.false1039
  %bf.lshr1046 = lshr i32 %bf.load1040, 16
  %bf.clear1047 = and i32 %bf.lshr1046, 255
  %cmp1048 = icmp eq i32 %bf.clear1047, %bf.clear669
  br i1 %cmp1048, label %if.end1052, label %if.then1050

if.then1050:                                      ; preds = %lor.lhs.false1044, %lor.lhs.false1039, %if.end1036
  %call1051 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear669) #7
  %.phi.trans.insert1603 = bitcast %struct.rtx_def* %call1051 to i32*
  %bf.load1053.pre = load i32* %.phi.trans.insert1603, align 8
  br label %if.end1052

if.end1052:                                       ; preds = %lor.lhs.false1044, %if.then1050
  %bf.load1053 = phi i32 [ %bf.load1053.pre, %if.then1050 ], [ %bf.load1040, %lor.lhs.false1044 ]
  %target.addr.2 = phi %struct.rtx_def* [ %call1051, %if.then1050 ], [ %target, %lor.lhs.false1044 ]
  %bf.clear1054 = and i32 %bf.load1053, 65535
  %cmp1055 = icmp eq i32 %bf.clear1054, 65
  br i1 %cmp1055, label %if.end1058, label %if.then1057

if.then1057:                                      ; preds = %if.end1052
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 1167, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end1058:                                       ; preds = %if.end1052
  %fld1059 = getelementptr inbounds %struct.rtx_def* %target.addr.2, i64 0, i32 1
  %rtx1061 = bitcast [1 x %union.rtunion_def]* %fld1059 to %struct.rtx_def**
  %212 = load %struct.rtx_def** %rtx1061, align 8, !tbaa !0
  %213 = load %struct.rtx_def** %rtx1022, align 8, !tbaa !0
  %arrayidx1066 = getelementptr inbounds %struct.rtx_def* %213, i64 0, i32 1, i64 0
  %rtuint1067 = bitcast %union.rtunion_def* %arrayidx1066 to i32*
  %214 = load i32* %rtuint1067, align 4, !tbaa !3
  %idxprom1068 = zext i32 %214 to i64
  %215 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %arrayidx1070 = getelementptr inbounds %struct.rtx_def** %215, i64 %idxprom1068
  store %struct.rtx_def* %212, %struct.rtx_def** %arrayidx1070, align 8, !tbaa !0
  %arrayidx1072 = getelementptr inbounds %struct.rtx_def* %target.addr.2, i64 0, i32 1, i64 1
  %rtx1073 = bitcast %union.rtunion_def* %arrayidx1072 to %struct.rtx_def**
  %216 = load %struct.rtx_def** %rtx1073, align 8, !tbaa !0
  %217 = load %struct.rtx_def** %rtx1030, align 8, !tbaa !0
  %arrayidx1078 = getelementptr inbounds %struct.rtx_def* %217, i64 0, i32 1, i64 0
  %rtuint1079 = bitcast %union.rtunion_def* %arrayidx1078 to i32*
  %218 = load i32* %rtuint1079, align 4, !tbaa !3
  %idxprom1080 = zext i32 %218 to i64
  %219 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %arrayidx1082 = getelementptr inbounds %struct.rtx_def** %219, i64 %idxprom1080
  store %struct.rtx_def* %216, %struct.rtx_def** %arrayidx1082, align 8, !tbaa !0
  br label %if.end1088

if.else1083:                                      ; preds = %if.else847
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str15, i64 0, i64 0), i32 1173, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #9
  unreachable

if.end1088:                                       ; preds = %if.end726, %if.else844, %if.else838, %if.end826, %land.lhs.true791, %land.lhs.true785, %if.then686, %if.end1058, %if.else973, %if.then971, %for.end637
  %target.addr.3 = phi %struct.rtx_def* [ %target, %for.end637 ], [ %159, %if.then686 ], [ %target, %if.end826 ], [ %target, %land.lhs.true791 ], [ %target, %land.lhs.true785 ], [ %target, %if.else838 ], [ %target, %if.else844 ], [ %target.addr.1, %if.then971 ], [ %target.addr.1, %if.else973 ], [ %target.addr.2, %if.end1058 ], [ %target, %if.end726 ]
  %call1089 = call %struct.rtx_def* @get_exception_pointer(%struct.function* %0) #7
  store %struct.rtx_def* %call1089, %struct.rtx_def** %temp, align 8, !tbaa !0
  %tobool1090 = icmp eq %struct.rtx_def* %call1089, null
  br i1 %tobool1090, label %if.end1099, label %if.then1091

if.then1091:                                      ; preds = %if.end1088
  %220 = load %struct.function** @cfun, align 8, !tbaa !0
  %call1092 = call %struct.rtx_def* @get_exception_pointer(%struct.function* %220) #7
  %221 = load %struct.rtx_def** %temp, align 8, !tbaa !0
  %arrayidx1094 = getelementptr inbounds %struct.rtx_def* %221, i64 0, i32 1, i64 0
  %rtuint1095 = bitcast %union.rtunion_def* %arrayidx1094 to i32*
  %222 = load i32* %rtuint1095, align 4, !tbaa !3
  %idxprom1096 = zext i32 %222 to i64
  %223 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %arrayidx1098 = getelementptr inbounds %struct.rtx_def** %223, i64 %idxprom1096
  store %struct.rtx_def* %call1092, %struct.rtx_def** %arrayidx1098, align 8, !tbaa !0
  br label %if.end1099

if.end1099:                                       ; preds = %if.end1088, %if.then1091
  %idxprom1100 = sext i32 %5 to i64
  %224 = load %struct.rtx_def*** %73, align 8, !tbaa !0
  %arrayidx1102 = getelementptr inbounds %struct.rtx_def** %224, i64 %idxprom1100
  %225 = bitcast %struct.rtx_def** %arrayidx1102 to i8*
  %sub1103 = sub nsw i32 %6, %5
  %conv1104 = sext i32 %sub1103 to i64
  %mul1105 = shl nsw i64 %conv1104, 3
  call void @llvm.memset.p0i8.i64(i8* %225, i8 0, i64 %mul1105, i32 1, i1 false)
  store %union.tree_node* %11, %union.tree_node** @inline_function_decl, align 8, !tbaa !0
  %226 = load %union.tree_node** %arguments, align 8, !tbaa !0
  %227 = bitcast %struct.rtx_def** %new_decl_rtl.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %227) #4
  %tobool9.i = icmp eq %union.tree_node* %226, null
  br i1 %tobool9.i, label %integrate_parm_decls.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end1099, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %if.end1099 ]
  %tail.011.i = phi %union.tree_node* [ %232, %for.body.i ], [ %226, %if.end1099 ]
  %228 = load %union.tree_node** %68, align 8, !tbaa !0
  %229 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %call.i = call %union.tree_node* @copy_decl_for_inlining(%union.tree_node* %tail.011.i, %union.tree_node* %228, %union.tree_node* %229) #7
  %arrayidx.i = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv.i
  %230 = load %struct.rtx_def** %arrayidx.i, align 8, !tbaa !0
  %call1.i = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %230, %struct.inline_remap* %67, i32 1) #7
  store %struct.rtx_def* %call1.i, %struct.rtx_def** %new_decl_rtl.i, align 8, !tbaa !0
  call fastcc void @subst_constants(%struct.rtx_def** %new_decl_rtl.i, %struct.rtx_def* null, %struct.inline_remap* %67, i32 1) #7
  %call2.i = call i32 @apply_change_group() #7
  %231 = load %struct.rtx_def** %new_decl_rtl.i, align 8, !tbaa !0
  %rtl.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 17
  store %struct.rtx_def* %231, %struct.rtx_def** %rtl.i, align 8, !tbaa !0
  %chain.i = getelementptr inbounds %union.tree_node* %tail.011.i, i64 0, i32 0, i32 0, i32 0
  %232 = load %union.tree_node** %chain.i, align 8, !tbaa !0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %tobool.i = icmp eq %union.tree_node* %232, null
  br i1 %tobool.i, label %integrate_parm_decls.exit, label %for.body.i

integrate_parm_decls.exit:                        ; preds = %for.body.i, %if.end1099
  call void @llvm.lifetime.end(i64 8, i8* %227) #4
  %original_decl_initial = getelementptr inbounds %struct.function* %0, i64 0, i32 47
  %233 = load %union.tree_node** %original_decl_initial, align 8, !tbaa !0
  %call1108 = call fastcc %union.tree_node* @integrate_decl_tree(%union.tree_node* %233, %struct.inline_remap* %67) #8
  %abstract_origin = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 13
  %234 = load %union.tree_node** %abstract_origin, align 8, !tbaa !0
  %tobool1110 = icmp eq %union.tree_node* %234, null
  %. = select i1 %tobool1110, %union.tree_node* %11, %union.tree_node* %234
  %235 = getelementptr inbounds %union.tree_node* %call1108, i64 0, i32 0, i32 6, i32 0
  %cond1116.c = ptrtoint %union.tree_node* %. to i64
  store i64 %cond1116.c, i64* %235, align 8, !tbaa !0
  store %union.tree_node* null, %union.tree_node** @inline_function_decl, align 8, !tbaa !0
  call void @expand_start_bindings_and_block(i32 0, %union.tree_node* %call1108) #7
  %236 = load %struct.varray_head_tag** %69, align 8, !tbaa !0
  %data1120 = getelementptr inbounds %struct.varray_head_tag* %236, i64 0, i32 4
  %237 = bitcast %union.varray_data_tag* %data1120 to i8*
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %236, i64 0, i32 1
  %238 = load i64* %elements_used, align 8, !tbaa !6
  %conv1123 = trunc i64 %238 to i32
  call void @specqsort(i8* %237, i32 %conv1123, i32 8, i32 (...)* bitcast (i32 (i8*, i8*)* @compare_blocks to i32 (...)*)) #7
  call void @emit_queue() #7
  call void @do_pending_stack_adjust() #7
  %239 = load %struct.varray_head_tag** %83, align 8, !tbaa !0
  store %struct.varray_head_tag* %239, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !0
  %bf.load1125 = load i32* %95, align 8
  %bf.clear1127 = and i32 %bf.load1125, 64
  %tobool1128 = icmp eq i32 %bf.clear1127, 0
  br i1 %tobool1128, label %if.end1130, label %if.then1129

if.then1129:                                      ; preds = %integrate_parm_decls.exit
  call void @emit_stack_save(i32 0, %struct.rtx_def** %stack_save, %struct.rtx_def* null) #7
  br label %if.end1130

if.end1130:                                       ; preds = %integrate_parm_decls.exit, %if.then1129
  %hard_reg_initial_vals.i = getelementptr inbounds %struct.function* %0, i64 0, i32 17
  %240 = load %struct.initial_value_struct** %hard_reg_initial_vals.i, align 8, !tbaa !0
  %cmp.i = icmp eq %struct.initial_value_struct* %240, null
  br i1 %cmp.i, label %setup_initial_hard_reg_value_integration.exit, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end1130
  %num_entries.i = getelementptr inbounds %struct.initial_value_struct* %240, i64 0, i32 0
  %241 = load i32* %num_entries.i, align 4, !tbaa !3
  %cmp114.i = icmp sgt i32 %241, 0
  br i1 %cmp114.i, label %for.body.lr.ph.i1565, label %setup_initial_hard_reg_value_integration.exit

for.body.lr.ph.i1565:                             ; preds = %for.cond.preheader.i
  %entries.i = getelementptr inbounds %struct.initial_value_struct* %240, i64 0, i32 2
  br label %for.body.i1569

for.body.i1569:                                   ; preds = %for.body.i1569, %for.body.lr.ph.i1565
  %indvars.iv.i1566 = phi i64 [ 0, %for.body.lr.ph.i1565 ], [ %indvars.iv.next.i1568, %for.body.i1569 ]
  %242 = load %struct.function** @cfun, align 8, !tbaa !0
  %243 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !0
  %hard_reg.i = getelementptr inbounds %struct.initial_value_pair* %243, i64 %indvars.iv.i1566, i32 0
  %244 = load %struct.rtx_def** %hard_reg.i, align 8, !tbaa !0
  %call.i1567 = call %struct.rtx_def* @get_func_hard_reg_initial_val(%struct.function* %242, %struct.rtx_def* %244) #7
  %245 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !0
  %pseudo.i = getelementptr inbounds %struct.initial_value_pair* %245, i64 %indvars.iv.i1566, i32 1
  %246 = load %struct.rtx_def** %pseudo.i, align 8, !tbaa !0
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %246, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx5.i to i32*
  %247 = load i32* %rtuint.i, align 4, !tbaa !3
  %idxprom6.i = zext i32 %247 to i64
  %248 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def** %248, i64 %idxprom6.i
  store %struct.rtx_def* %call.i1567, %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !0
  %indvars.iv.next.i1568 = add i64 %indvars.iv.i1566, 1
  %249 = load i32* %num_entries.i, align 4, !tbaa !3
  %250 = trunc i64 %indvars.iv.next.i1568 to i32
  %cmp1.i = icmp slt i32 %250, %249
  br i1 %cmp1.i, label %for.body.i1569, label %setup_initial_hard_reg_value_integration.exit

setup_initial_hard_reg_value_integration.exit:    ; preds = %for.body.i1569, %if.end1130, %for.cond.preheader.i
  call fastcc void @copy_insn_list(%struct.rtx_def* %cond, %struct.inline_remap* %67, %struct.rtx_def* %static_chain_value.0) #8
  %call1131 = call i32 @duplicate_eh_regions(%struct.function* %0, %struct.inline_remap* %67) #7
  call fastcc void @copy_insn_notes(%struct.rtx_def* %cond, %struct.inline_remap* %67, i32 %call1131) #8
  %251 = load %struct.rtx_def** %74, align 8, !tbaa !0
  %tobool1133 = icmp eq %struct.rtx_def* %251, null
  br i1 %tobool1133, label %if.end1137, label %if.then1134

if.then1134:                                      ; preds = %setup_initial_hard_reg_value_integration.exit
  %call1136 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %251) #7
  br label %if.end1137

if.end1137:                                       ; preds = %setup_initial_hard_reg_value_integration.exit, %if.then1134
  %bf.load1139 = load i32* %95, align 8
  %bf.clear1141 = and i32 %bf.load1139, 64
  %tobool1142 = icmp eq i32 %bf.clear1141, 0
  br i1 %tobool1142, label %if.end1144, label %if.then1143

if.then1143:                                      ; preds = %if.end1137
  %252 = load %struct.rtx_def** %stack_save, align 8, !tbaa !0
  call void @emit_stack_restore(i32 0, %struct.rtx_def* %252, %struct.rtx_def* null) #7
  br label %if.end1144

if.end1144:                                       ; preds = %if.end1137, %if.then1143
  %253 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_whole_function_mode_p = getelementptr inbounds %struct.function* %253, i64 0, i32 56
  %254 = bitcast [4 x i8]* %x_whole_function_mode_p to i32*
  %bf.load1145 = load i32* %254, align 8
  %bf.clear1147 = and i32 %bf.load1145, 262144
  %tobool1148 = icmp eq i32 %bf.clear1147, 0
  br i1 %tobool1148, label %if.then1149, label %if.else1150

if.then1149:                                      ; preds = %if.end1144
  call void @insert_block(%union.tree_node* %call1108) #7
  br label %if.end1161

if.else1150:                                      ; preds = %if.end1144
  %255 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %initial1152 = getelementptr inbounds %union.tree_node* %255, i64 0, i32 0, i32 12
  %256 = load %union.tree_node** %initial1152, align 8, !tbaa !0
  %chain1154 = getelementptr inbounds %union.tree_node* %256, i64 0, i32 0, i32 0, i32 0
  %257 = load %union.tree_node** %chain1154, align 8, !tbaa !0
  %chain1156 = getelementptr inbounds %union.tree_node* %call1108, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %257, %union.tree_node** %chain1156, align 8, !tbaa !0
  %258 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %initial1158 = getelementptr inbounds %union.tree_node* %258, i64 0, i32 0, i32 12
  %259 = load %union.tree_node** %initial1158, align 8, !tbaa !0
  %chain1160 = getelementptr inbounds %union.tree_node* %259, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call1108, %union.tree_node** %chain1160, align 8, !tbaa !0
  br label %if.end1161

if.end1161:                                       ; preds = %if.else1150, %if.then1149
  call void @expand_end_bindings(%union.tree_node* null, i32 1, i32 1) #7
  %260 = load i32* @flag_test_coverage, align 4, !tbaa !3
  %tobool1162 = icmp eq i32 %260, 0
  br i1 %tobool1162, label %if.end1165, label %if.then1163

if.then1163:                                      ; preds = %if.end1161
  %call1164 = call %struct.rtx_def* @emit_note(i8* null, i32 -84) #7
  br label %if.end1165

if.end1165:                                       ; preds = %if.end1161, %if.then1163
  %261 = load i8** @input_filename, align 8, !tbaa !0
  %262 = load i32* @lineno, align 4, !tbaa !3
  %call1166 = call %struct.rtx_def* @emit_line_note(i8* %261, i32 %262) #7
  %tobool1167 = icmp eq %struct.rtx_def* %target.addr.3, null
  br i1 %tobool1167, label %if.end1193, label %land.lhs.true1168

land.lhs.true1168:                                ; preds = %if.end1165
  %type1170 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %263 = load %union.tree_node** %type1170, align 8, !tbaa !0
  %type1172 = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 0, i32 1
  %264 = load %union.tree_node** %type1172, align 8, !tbaa !0
  %type1173 = bitcast %union.tree_node* %264 to %struct.tree_type*
  %mode1174 = getelementptr inbounds %struct.tree_type* %type1173, i64 0, i32 6
  %265 = bitcast [4 x i8]* %mode1174 to i32*
  %bf.load1175 = load i32* %265, align 4
  %bf.clear1177 = and i32 %bf.load1175, 65024
  %cmp1178 = icmp eq i32 %bf.clear1177, 26112
  br i1 %cmp1178, label %land.lhs.true1180, label %if.end1193

land.lhs.true1180:                                ; preds = %land.lhs.true1168
  %call1185 = call i32 @aggregate_value_p(%union.tree_node* %264) #7
  %tobool1186 = icmp eq i32 %call1185, 0
  br i1 %tobool1186, label %if.then1187, label %if.end1193

if.then1187:                                      ; preds = %land.lhs.true1180
  %266 = load %union.tree_node** %type1170, align 8, !tbaa !0
  %type1191 = getelementptr inbounds %union.tree_node* %266, i64 0, i32 0, i32 0, i32 1
  %267 = load %union.tree_node** %type1191, align 8, !tbaa !0
  %call1192 = call %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def* null, %struct.rtx_def* %target.addr.3, %union.tree_node* %267) #7
  br label %if.end1193

if.end1193:                                       ; preds = %land.lhs.true1180, %if.end1165, %if.then1187, %land.lhs.true1168
  %target.addr.4 = phi %struct.rtx_def* [ %target.addr.3, %land.lhs.true1180 ], [ %call1192, %if.then1187 ], [ %target.addr.3, %land.lhs.true1168 ], [ null, %if.end1165 ]
  %tobool1194 = icmp eq %struct.rtx_def* %structure_value_addr, null
  br i1 %tobool1194, label %if.end1208, label %if.then1195

if.then1195:                                      ; preds = %if.end1193
  %bf.load1198 = load i32* %155, align 4
  %bf.lshr1199 = lshr i32 %bf.load1198, 9
  %bf.clear1200 = and i32 %bf.lshr1199, 127
  %call1206 = call %struct.rtx_def* @memory_address(i32 %bf.clear1200, %struct.rtx_def* %structure_value_addr) #7
  %call1207 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear1200, %struct.rtx_def* %call1206) #7
  call void @set_mem_attributes(%struct.rtx_def* %call1207, %union.tree_node* %type, i32 1) #7
  br label %if.end1208

if.end1208:                                       ; preds = %if.end1193, %if.then1195
  %target.addr.5 = phi %struct.rtx_def* [ %call1207, %if.then1195 ], [ %target.addr.4, %if.end1193 ]
  %tobool1209 = icmp eq i8* %call289, null
  br i1 %tobool1209, label %do.body, label %if.then1210

if.then1210:                                      ; preds = %if.end1208
  call void @free(i8* %call289) #7
  br label %do.body

do.body:                                          ; preds = %if.end1208, %if.then1210
  %268 = load %struct.varray_head_tag** %83, align 8, !tbaa !0
  %tobool1213 = icmp eq %struct.varray_head_tag* %268, null
  br i1 %tobool1213, label %do.end, label %if.then1214

if.then1214:                                      ; preds = %do.body
  %269 = bitcast %struct.varray_head_tag* %268 to i8*
  call void @free(i8* %269) #7
  store %struct.varray_head_tag* null, %struct.varray_head_tag** %83, align 8, !tbaa !0
  br label %do.end

do.end:                                           ; preds = %do.body, %if.then1214
  %270 = load %struct.rtx_def*** %71, align 8, !tbaa !0
  %271 = bitcast %struct.rtx_def** %270 to i8*
  call void @free(i8* %271) #7
  %272 = load %struct.varray_head_tag** %69, align 8, !tbaa !0
  %tobool1221 = icmp eq %struct.varray_head_tag* %272, null
  br i1 %tobool1221, label %do.end1226, label %if.then1222

if.then1222:                                      ; preds = %do.end
  %273 = bitcast %struct.varray_head_tag* %272 to i8*
  call void @free(i8* %273) #7
  store %struct.varray_head_tag* null, %struct.varray_head_tag** %69, align 8, !tbaa !0
  br label %do.end1226

do.end1226:                                       ; preds = %do.end, %if.then1222
  %274 = load %struct.rtx_def*** %78, align 8, !tbaa !0
  %275 = bitcast %struct.rtx_def** %274 to i8*
  call void @free(i8* %275) #7
  call void @free(i8* %call282) #7
  call void @free(i8* %call63) #7
  call void @free(i8* %call66) #7
  store %struct.function* %135, %struct.function** @inlining, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end17, %lor.lhs.false, %land.lhs.true, %for.body, %do.end1226
  %retval.0 = phi %struct.rtx_def* [ %target.addr.5, %do.end1226 ], [ inttoptr (i64 -1 to %struct.rtx_def*), %for.body ], [ inttoptr (i64 -1 to %struct.rtx_def*), %land.lhs.true ], [ inttoptr (i64 -1 to %struct.rtx_def*), %lor.lhs.false ], [ inttoptr (i64 -1 to %struct.rtx_def*), %if.end17 ]
  ret %struct.rtx_def* %retval.0
}
