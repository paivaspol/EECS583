define void @try_constants(%struct.rtx_def* %insn, %struct.inline_remap* %map) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !1495), !dbg !2840
  tail call void @llvm.dbg.value(metadata !{%struct.inline_remap* %map}, i64 0, metadata !1496), !dbg !2841
  %num_sets = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 18, !dbg !2842
  store i32 0, i32* %num_sets, align 4, !dbg !2842, !tbaa !1874
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !2843
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2843
  tail call fastcc void @subst_constants(%struct.rtx_def** %rtx, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 1) #9, !dbg !2843
  %call = tail call i32 @apply_change_group() #8, !dbg !2844
  tail call fastcc void @subst_constants(%struct.rtx_def** %rtx, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 0) #9, !dbg !2845
  %call4 = tail call i32 @apply_change_group() #8, !dbg !2846
  %0 = load %struct.rtx_def** %rtx, align 8, !dbg !2847, !tbaa !1854
  tail call void @note_stores(%struct.rtx_def* %0, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_stores, i8* null) #8, !dbg !2847
  %last_pc_value = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 20, !dbg !2848
  store %struct.rtx_def* null, %struct.rtx_def** %last_pc_value, align 8, !dbg !2848, !tbaa !1854
  tail call void @llvm.dbg.value(metadata !643, i64 0, metadata !1497), !dbg !2849
  %1 = load i32* %num_sets, align 4, !dbg !2849, !tbaa !1874
  %cmp158 = icmp sgt i32 %1, 0, !dbg !2849
  br i1 %cmp158, label %for.body.lr.ph, label %for.end, !dbg !2849

for.body.lr.ph:                                   ; preds = %entry
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9, !dbg !2850
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10, !dbg !2851
  br label %for.body, !dbg !2849

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %dest = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 0, !dbg !2852
  %2 = load %struct.rtx_def** %dest, align 8, !dbg !2852, !tbaa !1854
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2852
  %bf.load = load i32* %3, align 8, !dbg !2852
  %bf.clear = and i32 %bf.load, 65535, !dbg !2852
  %cmp10 = icmp eq i32 %bf.clear, 61, !dbg !2852
  br i1 %cmp10, label %if.then, label %if.else, !dbg !2852

if.then:                                          ; preds = %for.body
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !2853
  %rtuint = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !2853
  %4 = load i32* %rtuint, align 4, !dbg !2853, !tbaa !1874
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !1498), !dbg !2853
  %conv = sext i32 %4 to i64, !dbg !2850
  %5 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !dbg !2850, !tbaa !1854
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 0, !dbg !2850
  %6 = load i64* %num_elements, align 8, !dbg !2850, !tbaa !2112
  %cmp17 = icmp ult i64 %conv, %6, !dbg !2850
  br i1 %cmp17, label %if.end29, label %if.then19, !dbg !2850

if.then19:                                        ; preds = %if.then
  %7 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !dbg !2854, !tbaa !1854
  %cmp21 = icmp eq %struct.varray_head_tag* %7, %5, !dbg !2854
  %add = add nsw i32 %4, 1, !dbg !2854
  %conv24 = sext i32 %add to i64, !dbg !2854
  %call25 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %5, i64 %conv24) #8, !dbg !2854
  store %struct.varray_head_tag* %call25, %struct.varray_head_tag** %const_equiv_varray, align 8, !dbg !2854, !tbaa !1854
  br i1 %cmp21, label %if.then27, label %if.end29, !dbg !2854

if.then27:                                        ; preds = %if.then19
  store %struct.varray_head_tag* %call25, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !dbg !2854, !tbaa !1854
  %.pre = load %struct.varray_head_tag** %const_equiv_varray, align 8, !dbg !2855, !tbaa !1854
  br label %if.end29, !dbg !2854

if.end29:                                         ; preds = %if.then, %if.then19, %if.then27
  %8 = phi %struct.varray_head_tag* [ %5, %if.then ], [ %call25, %if.then19 ], [ %.pre, %if.then27 ]
  %rtx33 = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 4, i32 0, i64 %conv, i32 0, !dbg !2855
  %9 = load %struct.rtx_def** %rtx33, align 8, !dbg !2855, !tbaa !1854
  %cmp34 = icmp eq %struct.rtx_def* %9, null, !dbg !2855
  br i1 %cmp34, label %if.then47, label %lor.lhs.false, !dbg !2855

lor.lhs.false:                                    ; preds = %if.end29
  %equiv = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 1, !dbg !2856
  %10 = load %struct.rtx_def** %equiv, align 8, !dbg !2856, !tbaa !1854
  %call45 = tail call i32 @rtx_equal_p(%struct.rtx_def* %9, %struct.rtx_def* %10) #8, !dbg !2856
  %tobool46 = icmp eq i32 %call45, 0, !dbg !2856
  br i1 %tobool46, label %lor.lhs.false.if.then47_crit_edge, label %for.inc, !dbg !2856

lor.lhs.false.if.then47_crit_edge:                ; preds = %lor.lhs.false
  %.pre161 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !dbg !2857, !tbaa !1854
  br label %if.then47, !dbg !2856

if.then47:                                        ; preds = %if.end29, %lor.lhs.false.if.then47_crit_edge
  %11 = phi %struct.varray_head_tag* [ %.pre161, %lor.lhs.false.if.then47_crit_edge ], [ %8, %if.end29 ]
  %12 = load %struct.rtx_def** %dest, align 8, !dbg !2857, !tbaa !1854
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, !dbg !2857
  %rtuint54 = bitcast %union.rtunion_def* %arrayidx53 to i32*, !dbg !2857
  %13 = load i32* %rtuint54, align 4, !dbg !2857, !tbaa !1874
  %conv55 = zext i32 %13 to i64, !dbg !2857
  %num_elements57 = getelementptr inbounds %struct.varray_head_tag* %11, i64 0, i32 0, !dbg !2857
  %14 = load i64* %num_elements57, align 8, !dbg !2857, !tbaa !2112
  %cmp58 = icmp ult i64 %conv55, %14, !dbg !2857
  br i1 %cmp58, label %if.end81, label %if.then60, !dbg !2857

if.then60:                                        ; preds = %if.then47
  %15 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !dbg !2858, !tbaa !1854
  %cmp63 = icmp eq %struct.varray_head_tag* %15, %11, !dbg !2858
  %add73 = add i32 %13, 1, !dbg !2858
  %conv74 = zext i32 %add73 to i64, !dbg !2858
  %call75 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %11, i64 %conv74) #8, !dbg !2858
  store %struct.varray_head_tag* %call75, %struct.varray_head_tag** %const_equiv_varray, align 8, !dbg !2858, !tbaa !1854
  br i1 %cmp63, label %if.then78, label %if.end81, !dbg !2858

if.then78:                                        ; preds = %if.then60
  store %struct.varray_head_tag* %call75, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !dbg !2858, !tbaa !1854
  %.pre160 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !dbg !2851, !tbaa !1854
  br label %if.end81, !dbg !2858

if.end81:                                         ; preds = %if.then60, %if.then47, %if.then78
  %16 = phi %struct.varray_head_tag* [ %11, %if.then47 ], [ %.pre160, %if.then78 ], [ %call75, %if.then60 ]
  %17 = load %struct.rtx_def** %dest, align 8, !dbg !2851, !tbaa !1854
  %arrayidx87 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0, !dbg !2851
  %rtuint88 = bitcast %union.rtunion_def* %arrayidx87 to i32*, !dbg !2851
  %18 = load i32* %rtuint88, align 4, !dbg !2851, !tbaa !1874
  %idxprom89 = zext i32 %18 to i64, !dbg !2851
  %equiv97 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 1, !dbg !2851
  %19 = load %struct.rtx_def** %equiv97, align 8, !dbg !2851, !tbaa !1854
  %rtx98 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4, i32 0, i64 %idxprom89, i32 0, !dbg !2851
  store %struct.rtx_def* %19, %struct.rtx_def** %rtx98, align 8, !dbg !2851, !tbaa !1854
  %20 = load i32* %const_age, align 4, !dbg !2851, !tbaa !1874
  %age = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4, i32 0, i64 %idxprom89, i32 1, !dbg !2851
  store i32 %20, i32* %age, align 4, !dbg !2851, !tbaa !1874
  br label %for.inc, !dbg !2851

if.else:                                          ; preds = %for.body
  %21 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !dbg !2859, !tbaa !1854
  %cmp104 = icmp eq %struct.rtx_def* %2, %21, !dbg !2859
  br i1 %cmp104, label %if.then106, label %for.inc, !dbg !2859

if.then106:                                       ; preds = %if.else
  %equiv110 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 1, !dbg !2860
  %22 = load %struct.rtx_def** %equiv110, align 8, !dbg !2860, !tbaa !1854
  store %struct.rtx_def* %22, %struct.rtx_def** %last_pc_value, align 8, !dbg !2860, !tbaa !1854
  br label %for.inc, !dbg !2860

for.inc:                                          ; preds = %lor.lhs.false, %if.end81, %if.then106, %if.else
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !2849
  %23 = load i32* %num_sets, align 4, !dbg !2849, !tbaa !1874
  %24 = trunc i64 %indvars.iv.next to i32, !dbg !2849
  %cmp = icmp slt i32 %24, %23, !dbg !2849
  br i1 %cmp, label %for.body, label %for.end, !dbg !2849

for.end:                                          ; preds = %for.inc, %entry
  ret void, !dbg !2861
}
