define internal fastcc void @copy_insn_notes(%struct.rtx_def* %insns, %struct.inline_remap* %map, i32 %eh_region_offset) #0 {
entry:
  %note = alloca %struct.rtx_def*, align 8
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10
  %0 = load i32* %const_age, align 4, !tbaa !3
  %inc = add i32 %0, 1
  store i32 %inc, i32* %const_age, align 4, !tbaa !3
  %tobool135 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool135, label %for.end110, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %insn_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 6
  %conv49 = sext i32 %eh_region_offset to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc106
  %insn.0136 = phi %struct.rtx_def* [ %insns, %for.body.lr.ph ], [ %24, %for.inc106 ]
  %1 = bitcast %struct.rtx_def* %insn.0136 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom132 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom132
  %2 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %2, 105
  br i1 %cmp, label %if.end, label %for.inc106

if.end:                                           ; preds = %for.body
  %fld = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %3 = load i32* %rtint, align 4, !tbaa !3
  %idxprom3 = sext i32 %3 to i64
  %4 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom3
  %5 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !0
  %tobool5 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool5, label %for.inc106, label %if.end7

if.end7:                                          ; preds = %if.end
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %tobool10 = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool10, label %if.end56, label %if.then11

if.then11:                                        ; preds = %if.end7
  %call = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %6, %struct.inline_remap* %map, i32 0) #8
  store %struct.rtx_def* %call, %struct.rtx_def** %note, align 8, !tbaa !0
  call fastcc void @subst_constants(%struct.rtx_def** %note, %struct.rtx_def* null, %struct.inline_remap* %map, i32 0) #8
  %call15 = call i32 @apply_change_group() #7
  %7 = load %struct.rtx_def** %note, align 8, !tbaa !0
  %8 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 6, i32 0
  %.c = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !0
  %.pr = load %struct.rtx_def** %note, align 8, !tbaa !0
  %tobool20133 = icmp eq %struct.rtx_def* %.pr, null
  br i1 %tobool20133, label %if.end56.loopexit, label %for.body21

for.body21:                                       ; preds = %if.then11, %for.inc
  %9 = phi %struct.rtx_def* [ %10, %for.inc ], [ %.pr, %if.then11 ]
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx24, align 8, !tbaa !0
  %11 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load25 = load i32* %11, align 8
  %bf.lshr = lshr i32 %bf.load25, 16
  %bf.clear26 = and i32 %bf.lshr, 255
  switch i32 %bf.clear26, label %for.inc [
    i32 13, label %if.then29
    i32 23, label %land.lhs.true
  ]

if.then29:                                        ; preds = %for.body21
  call void @remove_note(%struct.rtx_def* %5, %struct.rtx_def* %9) #7
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body21
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx37, align 8, !tbaa !0
  %rtwint = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %13 = load i64* %rtwint, align 8, !tbaa !6
  %cmp40 = icmp sgt i64 %13, 0
  br i1 %cmp40, label %if.then42, label %for.inc

if.then42:                                        ; preds = %land.lhs.true
  %add = add nsw i64 %13, %conv49
  %call50 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add) #7
  %14 = load %struct.rtx_def** %note, align 8, !tbaa !0
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0, i32 0
  %call50.c = ptrtoint %struct.rtx_def* %call50 to i64
  store i64 %call50.c, i64* %15, align 8, !tbaa !0
  br label %for.inc

for.inc:                                          ; preds = %for.body21, %if.then29, %if.then42, %land.lhs.true
  store %struct.rtx_def* %10, %struct.rtx_def** %note, align 8, !tbaa !0
  %tobool20 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool20, label %if.end56.loopexit, label %for.body21

if.end56.loopexit:                                ; preds = %for.inc, %if.then11
  %bf.load57.pre = load i32* %1, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.end56.loopexit, %if.end7
  %bf.load57 = phi i32 [ %bf.load57.pre, %if.end56.loopexit ], [ %bf.load, %if.end7 ]
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 34
  br i1 %cmp59, label %land.lhs.true61, label %if.end84

land.lhs.true61:                                  ; preds = %if.end56
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 3
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx64, align 8, !tbaa !0
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load65 = load i32* %17, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 141
  br i1 %cmp67, label %for.body73, label %if.end84

for.body73:                                       ; preds = %land.lhs.true61, %for.body73.for.body73_crit_edge
  %18 = phi %struct.rtx_def* [ %.pre, %for.body73.for.body73_crit_edge ], [ %16, %land.lhs.true61 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body73.for.body73_crit_edge ], [ 0, %land.lhs.true61 ]
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 %indvars.iv
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx80, align 8, !tbaa !0
  call fastcc void @copy_insn_notes(%struct.rtx_def* %19, %struct.inline_remap* %map, i32 %eh_region_offset) #8
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %if.end84.loopexit, label %for.body73.for.body73_crit_edge

for.body73.for.body73_crit_edge:                  ; preds = %for.body73
  %.pre = load %struct.rtx_def** %rtx64, align 8, !tbaa !0
  br label %for.body73

if.end84.loopexit:                                ; preds = %for.body73
  %bf.load85.pre = load i32* %1, align 8
  br label %if.end84

if.end84:                                         ; preds = %if.end84.loopexit, %land.lhs.true61, %if.end56
  %bf.load85 = phi i32 [ %bf.load85.pre, %if.end84.loopexit ], [ %bf.load57, %land.lhs.true61 ], [ %bf.load57, %if.end56 ]
  %bf.clear86 = and i32 %bf.load85, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 33
  br i1 %cmp87, label %land.lhs.true89, label %for.inc106

land.lhs.true89:                                  ; preds = %if.end84
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 3
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx92, align 8, !tbaa !0
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load93 = load i32* %21, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %cmp95 = icmp eq i32 %bf.clear94, 53
  br i1 %cmp95, label %if.then97, label %for.inc106

if.then97:                                        ; preds = %land.lhs.true89
  %arrayidx99 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 3
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx100, align 8, !tbaa !0
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtint103 = bitcast %union.rtunion_def* %arrayidx102 to i32*
  %23 = load i32* %rtint103, align 4, !tbaa !3
  %add104 = add nsw i32 %23, %eh_region_offset
  store i32 %add104, i32* %rtint103, align 4, !tbaa !3
  br label %for.inc106

for.inc106:                                       ; preds = %if.end, %if.end84, %land.lhs.true89, %if.then97, %for.body
  %arrayidx108 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 2
  %rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx109, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %24, null
  br i1 %tobool, label %for.end110, label %for.body

for.end110:                                       ; preds = %for.inc106, %entry
  ret void
}
