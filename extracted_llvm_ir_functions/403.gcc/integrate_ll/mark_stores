define internal void @mark_stores(%struct.rtx_def* nocapture %dest, %struct.rtx_def* nocapture %x, i8* nocapture %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %dest}, i64 0, metadata !1654), !dbg !2862
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !1655), !dbg !2863
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !1656), !dbg !2864
  tail call void @llvm.dbg.value(metadata !2865, i64 0, metadata !1657), !dbg !2866
  tail call void @llvm.dbg.value(metadata !643, i64 0, metadata !1658), !dbg !2867
  %0 = bitcast %struct.rtx_def* %dest to i32*, !dbg !2868
  %bf.load = load i32* %0, align 8, !dbg !2868
  %bf.clear = and i32 %bf.load, 65535, !dbg !2868
  switch i32 %bf.clear, label %if.end116 [
    i32 61, label %if.then
    i32 63, label %land.lhs.true
  ], !dbg !2868

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 0, !dbg !2869
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2869
  %1 = load i32* %rtuint, align 4, !dbg !2869, !tbaa !1874
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !1657), !dbg !2869
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear2}, i64 0, metadata !1658), !dbg !2869
  br label %if.end45, !dbg !2869

land.lhs.true:                                    ; preds = %entry
  %fld6 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, !dbg !2870
  %rtx = bitcast [1 x %union.rtunion_def]* %fld6 to %struct.rtx_def**, !dbg !2870
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !2870, !tbaa !1854
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2870
  %bf.load8 = load i32* %3, align 8, !dbg !2870
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2870
  %cmp10 = icmp eq i32 %bf.clear9, 61, !dbg !2870
  br i1 %cmp10, label %if.then11, label %if.end116, !dbg !2870

if.then11:                                        ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !2871
  %rtuint17 = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !2871
  %4 = load i32* %rtuint17, align 4, !dbg !2871, !tbaa !1874
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !1657), !dbg !2871
  %cmp18 = icmp slt i32 %4, 53, !dbg !2873
  br i1 %cmp18, label %if.then19, label %cond.end96, !dbg !2873

if.then19:                                        ; preds = %if.then11
  %bf.lshr30 = lshr i32 %bf.load8, 16, !dbg !2874
  %bf.clear31 = and i32 %bf.lshr30, 255, !dbg !2874
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 1, !dbg !2874
  %rtuint34 = bitcast %union.rtunion_def* %arrayidx33 to i32*, !dbg !2874
  %5 = load i32* %rtuint34, align 4, !dbg !2874, !tbaa !1874
  %bf.lshr36 = lshr i32 %bf.load, 16, !dbg !2874
  %bf.clear37 = and i32 %bf.lshr36, 255, !dbg !2874
  %call = tail call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear31, i32 %5, i32 %bf.clear37) #8, !dbg !2874
  %add = add i32 %call, %4, !dbg !2874
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !1657), !dbg !2874
  %.pre = load %struct.rtx_def** %rtx, align 8, !dbg !2875, !tbaa !1854
  %.phi.trans.insert = bitcast %struct.rtx_def* %.pre to i32*
  %bf.load41.pre = load i32* %.phi.trans.insert, align 8, !dbg !2875
  br label %if.end45, !dbg !2874

if.end45:                                         ; preds = %if.then19, %if.then
  %bf.load.sink = phi i32 [ %bf.load, %if.then ], [ %bf.load41.pre, %if.then19 ]
  %regno.1 = phi i32 [ %1, %if.then ], [ %add, %if.then19 ]
  %bf.lshr = lshr i32 %bf.load.sink, 16, !dbg !2869
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !2869
  %cmp46 = icmp sgt i32 %regno.1, -1, !dbg !2876
  br i1 %cmp46, label %if.then47, label %if.end116, !dbg !2876

if.then47:                                        ; preds = %if.end45
  tail call void @llvm.dbg.value(metadata !{i32 %regno.1}, i64 0, metadata !1659), !dbg !2877
  %cmp48 = icmp ugt i32 %regno.1, 52, !dbg !2878
  br i1 %cmp48, label %cond.end96, label %cond.false, !dbg !2878

cond.false:                                       ; preds = %if.then47
  %regno.1.off = add i32 %regno.1, -8, !dbg !2878
  %6 = icmp ult i32 %regno.1.off, 8, !dbg !2878
  %regno.1.off152 = add i32 %regno.1, -21, !dbg !2878
  %7 = icmp ult i32 %regno.1.off152, 8, !dbg !2878
  %or.cond = or i1 %6, %7, !dbg !2878
  %regno.1.off153 = add i32 %regno.1, -45, !dbg !2878
  %8 = icmp ult i32 %regno.1.off153, 8, !dbg !2878
  %or.cond160 = or i1 %or.cond, %8, !dbg !2878
  %regno.1.off154 = add i32 %regno.1, -29, !dbg !2878
  %9 = icmp ult i32 %regno.1.off154, 8, !dbg !2878
  %or.cond162 = or i1 %or.cond160, %9, !dbg !2878
  br i1 %or.cond162, label %cond.true63, label %cond.false69, !dbg !2878

cond.true63:                                      ; preds = %cond.false
  %idxprom157 = zext i32 %bf.clear2 to i64, !dbg !2878
  %arrayidx64 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom157, !dbg !2878
  %10 = load i32* %arrayidx64, align 4, !dbg !2878, !tbaa !2432
  %cmp65 = icmp eq i32 %10, 5, !dbg !2878
  br i1 %cmp65, label %cond.end92, label %lor.rhs, !dbg !2878

lor.rhs:                                          ; preds = %cond.true63
  %cmp68 = icmp eq i32 %10, 6, !dbg !2878
  %phitmp = select i1 %cmp68, i32 2, i32 1, !dbg !2878
  br label %cond.end92, !dbg !2878

cond.false69:                                     ; preds = %cond.false
  switch i32 %bf.clear2, label %cond.false79 [
    i32 18, label %cond.true71
    i32 24, label %cond.true75
  ], !dbg !2878

cond.true71:                                      ; preds = %cond.false69
  %11 = load i32* @target_flags, align 4, !dbg !2878, !tbaa !1874
  %and = lshr i32 %11, 25, !dbg !2878
  %12 = and i32 %and, 1, !dbg !2878
  %13 = xor i32 %12, 3, !dbg !2878
  br label %cond.end92, !dbg !2878

cond.true75:                                      ; preds = %cond.false69
  %14 = load i32* @target_flags, align 4, !dbg !2878, !tbaa !1874
  %and76 = lshr i32 %14, 24, !dbg !2878
  %15 = and i32 %and76, 2, !dbg !2878
  %16 = xor i32 %15, 6, !dbg !2878
  br label %cond.end92, !dbg !2878

cond.false79:                                     ; preds = %cond.false69
  %idxprom80155 = zext i32 %bf.clear2 to i64, !dbg !2878
  %arrayidx81 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom80155, !dbg !2878
  %17 = load i8* %arrayidx81, align 1, !dbg !2878, !tbaa !1855
  %conv = zext i8 %17 to i32, !dbg !2878
  %18 = load i32* @target_flags, align 4, !dbg !2878, !tbaa !1874
  %and82 = lshr i32 %18, 23, !dbg !2878
  %19 = and i32 %and82, 4, !dbg !2878
  %20 = add i32 %19, 4, !dbg !2878
  %add85 = add i32 %conv, -1, !dbg !2878
  %sub = add i32 %add85, %20, !dbg !2878
  %div = sdiv i32 %sub, %20, !dbg !2878
  br label %cond.end92, !dbg !2878

cond.end92:                                       ; preds = %cond.true63, %lor.rhs, %cond.true71, %cond.false79, %cond.true75
  %cond93 = phi i32 [ %13, %cond.true71 ], [ %16, %cond.true75 ], [ %div, %cond.false79 ], [ 2, %cond.true63 ], [ %phitmp, %lor.rhs ], !dbg !2878
  %add94 = add i32 %regno.1, -1, !dbg !2878
  %sub95 = add i32 %add94, %cond93, !dbg !2878
  br label %cond.end96, !dbg !2878

cond.end96:                                       ; preds = %if.then11, %if.then47, %cond.end92
  %regno.1172 = phi i32 [ %regno.1, %cond.end92 ], [ %regno.1, %if.then47 ], [ %4, %if.then11 ]
  %cond97 = phi i32 [ %sub95, %cond.end92 ], [ %regno.1, %if.then47 ], [ %4, %if.then11 ], !dbg !2878
  tail call void @llvm.dbg.value(metadata !{i32 %cond97}, i64 0, metadata !1661), !dbg !2878
  %regno.1.off156 = add i32 %regno.1172, -53, !dbg !2879
  %21 = icmp ult i32 %regno.1.off156, 2, !dbg !2879
  %cmp104165 = icmp ugt i32 %regno.1172, %cond97, !dbg !2880
  %or.cond175 = or i1 %21, %cmp104165, !dbg !2879
  br i1 %or.cond175, label %if.end116, label %for.body, !dbg !2879

for.body:                                         ; preds = %cond.end96, %for.inc
  %i.0166 = phi i32 [ %inc, %for.inc ], [ %regno.1172, %cond.end96 ]
  %conv106 = zext i32 %i.0166 to i64, !dbg !2882
  %22 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !dbg !2882, !tbaa !1854
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %22, i64 0, i32 0, !dbg !2882
  %23 = load i64* %num_elements, align 8, !dbg !2882, !tbaa !2112
  %cmp107 = icmp ult i64 %conv106, %23, !dbg !2882
  br i1 %cmp107, label %if.then109, label %for.inc, !dbg !2882

if.then109:                                       ; preds = %for.body
  %rtx113 = getelementptr inbounds %struct.varray_head_tag* %22, i64 0, i32 4, i32 0, i64 %conv106, i32 0, !dbg !2883
  store %struct.rtx_def* null, %struct.rtx_def** %rtx113, align 8, !dbg !2883, !tbaa !1854
  br label %for.inc, !dbg !2883

for.inc:                                          ; preds = %for.body, %if.then109
  %inc = add i32 %i.0166, 1, !dbg !2880
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !1662), !dbg !2880
  %cmp104 = icmp ugt i32 %inc, %cond97, !dbg !2880
  br i1 %cmp104, label %if.end116, label %for.body, !dbg !2880

if.end116:                                        ; preds = %cond.end96, %for.inc, %entry, %land.lhs.true, %if.end45
  ret void, !dbg !2884
}
