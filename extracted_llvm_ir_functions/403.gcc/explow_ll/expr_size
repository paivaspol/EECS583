define %struct.rtx_def* @expr_size(%union.tree_node* %exp) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %exp}, i64 0, metadata !1721), !dbg !2026
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2, !dbg !2027
  %0 = bitcast [4 x i8]* %code to i32*, !dbg !2027
  %bf.load = load i32* %0, align 8, !dbg !2027
  %bf.clear = and i32 %bf.load, 255, !dbg !2027
  %idxprom29 = zext i32 %bf.clear to i64, !dbg !2027
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom29, !dbg !2027
  %1 = load i8* %arrayidx, align 1, !dbg !2027, !tbaa !1921
  %cmp = icmp eq i8 %1, 100, !dbg !2027
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2027

land.lhs.true:                                    ; preds = %entry
  %size_unit = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 7, !dbg !2027
  %2 = load %union.tree_node** %size_unit, align 8, !dbg !2027, !tbaa !1942
  %cmp2 = icmp eq %union.tree_node* %2, null, !dbg !2027
  br i1 %cmp2, label %if.else, label %if.end, !dbg !2027

if.else:                                          ; preds = %land.lhs.true, %entry
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1, !dbg !2028
  %3 = load %union.tree_node** %type, align 8, !dbg !2028, !tbaa !1942
  %call = tail call %union.tree_node* @size_in_bytes(%union.tree_node* %3) #5, !dbg !2028
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call}, i64 0, metadata !1722), !dbg !2028
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.else
  %size.0 = phi %union.tree_node* [ %call, %if.else ], [ %2, %land.lhs.true ]
  %code8 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 2, !dbg !2029
  %4 = bitcast [4 x i8]* %code8 to i32*, !dbg !2029
  %bf.load9 = load i32* %4, align 8, !dbg !2029
  %bf.clear10 = and i32 %bf.load9, 255, !dbg !2029
  %cmp11 = icmp eq i32 %bf.clear10, 25, !dbg !2029
  br i1 %cmp11, label %if.end17, label %land.lhs.true13, !dbg !2029

land.lhs.true13:                                  ; preds = %if.end
  %call14 = tail call i32 @contains_placeholder_p(%union.tree_node* %size.0) #5, !dbg !2030
  %tobool = icmp eq i32 %call14, 0, !dbg !2030
  br i1 %tobool, label %if.end17, label %if.then15, !dbg !2030

if.then15:                                        ; preds = %land.lhs.true13
  %5 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !dbg !2031, !tbaa !1942
  %call16 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 58, %union.tree_node* %5, %union.tree_node* %size.0, %union.tree_node* %exp) #5, !dbg !2031
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call16}, i64 0, metadata !1722), !dbg !2031
  br label %if.end17, !dbg !2031

if.end17:                                         ; preds = %land.lhs.true13, %if.end, %if.then15
  %size.1 = phi %union.tree_node* [ %call16, %if.then15 ], [ %size.0, %land.lhs.true13 ], [ %size.0, %if.end ]
  %6 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !dbg !2032, !tbaa !1942
  %type18 = bitcast %union.tree_node* %6 to %struct.tree_type*, !dbg !2032
  %mode = getelementptr inbounds %struct.tree_type* %type18, i64 0, i32 6, !dbg !2032
  %7 = bitcast [4 x i8]* %mode to i32*, !dbg !2032
  %bf.load19 = load i32* %7, align 4, !dbg !2032
  %bf.lshr = lshr i32 %bf.load19, 9, !dbg !2032
  %bf.clear20 = and i32 %bf.lshr, 127, !dbg !2032
  %call21 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %size.1, %struct.rtx_def* null, i32 %bf.clear20, i32 0) #5, !dbg !2032
  ret %struct.rtx_def* %call21, !dbg !2032
}
