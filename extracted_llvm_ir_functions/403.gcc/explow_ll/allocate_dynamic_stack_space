define %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %size, %struct.rtx_def* %target, i32 %known_align) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %size}, i64 0, metadata !1848), !dbg !2252
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %target}, i64 0, metadata !1849), !dbg !2253
  tail call void @llvm.dbg.value(metadata !{i32 %known_align}, i64 0, metadata !1850), !dbg !2254
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !2255, !tbaa !1942
  %cmp = icmp eq %struct.rtx_def* %0, %size, !dbg !2255
  br i1 %cmp, label %if.then, label %if.end, !dbg !2255

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !dbg !2256, !tbaa !1942
  br label %return, !dbg !2256

if.end:                                           ; preds = %entry
  %2 = load %struct.function** @cfun, align 8, !dbg !2257, !tbaa !1942
  %calls_alloca = getelementptr inbounds %struct.function* %2, i64 0, i32 56, !dbg !2257
  %3 = bitcast [4 x i8]* %calls_alloca to i32*, !dbg !2257
  %bf.load = load i32* %3, align 8, !dbg !2257
  %bf.set = or i32 %bf.load, 64, !dbg !2257
  store i32 %bf.set, i32* %3, align 8, !dbg !2257
  %4 = bitcast %struct.rtx_def* %size to i32*, !dbg !2258
  %bf.load1 = load i32* %4, align 8, !dbg !2258
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !2258
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !2258
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !2258
  br i1 %cmp3, label %if.end12, label %land.lhs.true, !dbg !2258

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32* @target_flags, align 4, !dbg !2258, !tbaa !2023
  %and = lshr i32 %5, 25, !dbg !2258
  %6 = and i32 %and, 1, !dbg !2258
  %7 = or i32 %6, 4, !dbg !2258
  %cmp7 = icmp eq i32 %bf.clear2, %7, !dbg !2258
  br i1 %cmp7, label %if.end12, label %if.then8, !dbg !2258

if.then8:                                         ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @convert_to_mode(i32 %7, %struct.rtx_def* %size, i32 1) #5, !dbg !2259
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !1848), !dbg !2259
  br label %if.end12, !dbg !2259

if.end12:                                         ; preds = %land.lhs.true, %if.end, %if.then8
  %size.addr.0 = phi %struct.rtx_def* [ %call, %if.then8 ], [ %size, %land.lhs.true ], [ %size, %if.end ]
  %8 = load i32* @ix86_preferred_stack_boundary, align 4, !dbg !2260, !tbaa !2023
  %9 = load %struct.function** @cfun, align 8, !dbg !2260, !tbaa !1942
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %9, i64 0, i32 53, !dbg !2260
  store i32 %8, i32* %preferred_stack_boundary, align 4, !dbg !2260, !tbaa !2023
  %10 = load i32* @ix86_preferred_stack_boundary, align 4, !dbg !2261, !tbaa !2023
  %cmp13 = icmp slt i32 %10, 128, !dbg !2261
  br i1 %cmp13, label %if.end17, label %lor.lhs.false, !dbg !2261

if.end17:                                         ; preds = %if.end12
  %call15 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %size.addr.0, i64 15) #6, !dbg !2262
  %call16 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call15, %struct.rtx_def* null) #5, !dbg !2262
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call16}, i64 0, metadata !1848), !dbg !2262
  %.pr = load i32* @ix86_preferred_stack_boundary, align 4, !dbg !2263, !tbaa !2023
  %cmp18 = icmp slt i32 %.pr, 128, !dbg !2263
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !2263

lor.lhs.false:                                    ; preds = %if.end12, %if.end17
  %size.addr.1151 = phi %struct.rtx_def* [ %call16, %if.end17 ], [ %size.addr.0, %if.end12 ]
  %11 = phi i32 [ %.pr, %if.end17 ], [ %10, %if.end12 ]
  %rem = srem i32 %known_align, %11, !dbg !2263
  %cmp19 = icmp eq i32 %rem, 0, !dbg !2263
  br i1 %cmp19, label %if.end22, label %if.then20, !dbg !2263

if.then20:                                        ; preds = %lor.lhs.false, %if.end17
  %size.addr.1152 = phi %struct.rtx_def* [ %size.addr.1151, %lor.lhs.false ], [ %call16, %if.end17 ]
  %call21 = tail call %struct.rtx_def* @round_push(%struct.rtx_def* %size.addr.1152) #6, !dbg !2264
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call21}, i64 0, metadata !1848), !dbg !2264
  br label %if.end22, !dbg !2264

if.end22:                                         ; preds = %lor.lhs.false, %if.then20
  %size.addr.2 = phi %struct.rtx_def* [ %call21, %if.then20 ], [ %size.addr.1151, %lor.lhs.false ]
  tail call void @do_pending_stack_adjust() #5, !dbg !2265
  %12 = load %struct.function** @cfun, align 8, !dbg !2266, !tbaa !1942
  %expr = getelementptr inbounds %struct.function* %12, i64 0, i32 2, !dbg !2266
  %13 = load %struct.expr_status** %expr, align 8, !dbg !2266, !tbaa !1942
  %x_stack_pointer_delta = getelementptr inbounds %struct.expr_status* %13, i64 0, i32 2, !dbg !2266
  %14 = load i32* %x_stack_pointer_delta, align 4, !dbg !2266, !tbaa !2023
  %15 = load i32* @ix86_preferred_stack_boundary, align 4, !dbg !2266, !tbaa !2023
  %div = sdiv i32 %15, 8, !dbg !2266
  %rem23 = srem i32 %14, %div, !dbg !2266
  %tobool24 = icmp eq i32 %rem23, 0, !dbg !2266
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !2266

if.then25:                                        ; preds = %if.end22
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1306, i8* getelementptr inbounds ([29 x i8]* @__FUNCTION__.allocate_dynamic_stack_space, i64 0, i64 0)) #7, !dbg !2267
  unreachable, !dbg !2267

if.end26:                                         ; preds = %if.end22
  %16 = load i32* @flag_stack_check, align 4, !dbg !2268, !tbaa !2023
  %tobool27 = icmp eq i32 %16, 0, !dbg !2268
  br i1 %tobool27, label %if.end35, label %if.then28, !dbg !2268

if.then28:                                        ; preds = %if.end26
  %17 = load i32* @target_flags, align 4, !dbg !2269, !tbaa !2023
  %and29 = lshr i32 %17, 23, !dbg !2269
  %18 = and i32 %and29, 4, !dbg !2269
  %19 = mul i32 %18, 75, !dbg !2269
  %sub = sub i32 4392, %18, !dbg !2269
  %add = add i32 %sub, %19, !dbg !2269
  %conv = sext i32 %add to i64, !dbg !2269
  tail call void @probe_stack_range(i64 %conv, %struct.rtx_def* %size.addr.2) #6, !dbg !2269
  br label %if.end35, !dbg !2269

if.end35:                                         ; preds = %if.end26, %if.then28
  %cmp36 = icmp eq %struct.rtx_def* %target, null, !dbg !2270
  br i1 %cmp36, label %if.then55, label %lor.lhs.false38, !dbg !2270

lor.lhs.false38:                                  ; preds = %if.end35
  %20 = bitcast %struct.rtx_def* %target to i32*, !dbg !2270
  %bf.load39 = load i32* %20, align 8, !dbg !2270
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !2270
  %cmp41 = icmp eq i32 %bf.clear40, 61, !dbg !2270
  br i1 %cmp41, label %lor.lhs.false43, label %if.then55, !dbg !2270

lor.lhs.false43:                                  ; preds = %lor.lhs.false38
  %arrayidx = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 1, i64 0, !dbg !2270
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2270
  %21 = load i32* %rtuint, align 4, !dbg !2270, !tbaa !2023
  %cmp44 = icmp ult i32 %21, 53, !dbg !2270
  br i1 %cmp44, label %if.then55, label %lor.lhs.false46, !dbg !2270

lor.lhs.false46:                                  ; preds = %lor.lhs.false43
  %bf.lshr48 = lshr i32 %bf.load39, 16, !dbg !2270
  %bf.clear49 = and i32 %bf.lshr48, 255, !dbg !2270
  %22 = load i32* @target_flags, align 4, !dbg !2270, !tbaa !2023
  %and50 = lshr i32 %22, 25, !dbg !2270
  %23 = and i32 %and50, 1, !dbg !2270
  %24 = or i32 %23, 4, !dbg !2270
  %cmp53 = icmp eq i32 %bf.clear49, %24, !dbg !2270
  br i1 %cmp53, label %if.end60, label %if.then55, !dbg !2270

if.then55:                                        ; preds = %lor.lhs.false43, %lor.lhs.false38, %if.end35, %lor.lhs.false46
  %25 = load i32* @target_flags, align 4, !dbg !2271, !tbaa !2023
  %and56 = lshr i32 %25, 25, !dbg !2271
  %26 = and i32 %and56, 1, !dbg !2271
  %27 = or i32 %26, 4, !dbg !2271
  %call59 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %27) #5, !dbg !2271
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call59}, i64 0, metadata !1849), !dbg !2271
  br label %if.end60, !dbg !2271

if.end60:                                         ; preds = %lor.lhs.false46, %if.then55
  %target.addr.0 = phi %struct.rtx_def* [ %call59, %if.then55 ], [ %target, %lor.lhs.false46 ]
  tail call void @mark_reg_pointer(%struct.rtx_def* %target.addr.0, i32 %known_align) #5, !dbg !2272
  %28 = load i32* @target_flags, align 4, !dbg !2273, !tbaa !2023
  %and61 = and i32 %28, 256, !dbg !2273
  %tobool62 = icmp eq i32 %and61, 0, !dbg !2273
  br i1 %tobool62, label %if.else, label %if.then63, !dbg !2273

if.then63:                                        ; preds = %if.end60
  %29 = load i32* @word_mode, align 4, !dbg !2274, !tbaa !2275
  tail call void @llvm.dbg.value(metadata !{i32 %29}, i64 0, metadata !1851), !dbg !2274
  %cmp64 = icmp eq i32 %29, 0, !dbg !2276
  %30 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1234, i32 3), align 8, !dbg !2277, !tbaa !1942
  br i1 %cmp64, label %if.then66, label %if.end70, !dbg !2276

if.then66:                                        ; preds = %if.then63
  %mode68 = getelementptr inbounds %struct.insn_operand_data* %30, i64 1, i32 2, !dbg !2277
  %31 = bitcast [2 x i8]* %mode68 to i16*, !dbg !2277
  %bf.load69 = load i16* %31, align 8, !dbg !2277
  %bf.cast = zext i16 %bf.load69 to i32, !dbg !2277
  tail call void @llvm.dbg.value(metadata !{i32 %bf.cast}, i64 0, metadata !1851), !dbg !2277
  br label %if.end70, !dbg !2277

if.end70:                                         ; preds = %if.then63, %if.then66
  %mode.0 = phi i32 [ %bf.cast, %if.then66 ], [ %29, %if.then63 ]
  %predicate = getelementptr inbounds %struct.insn_operand_data* %30, i64 1, i32 0, !dbg !2278
  %32 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !2278, !tbaa !1942
  tail call void @llvm.dbg.value(metadata !{i32 (%struct.rtx_def*, i32)* %32}, i64 0, metadata !1853), !dbg !2278
  %tobool72 = icmp eq i32 (%struct.rtx_def*, i32)* %32, null, !dbg !2279
  br i1 %tobool72, label %if.end78, label %land.lhs.true73, !dbg !2279

land.lhs.true73:                                  ; preds = %if.end70
  %call74 = tail call i32 %32(%struct.rtx_def* %size.addr.2, i32 %mode.0) #5, !dbg !2279
  %tobool75 = icmp eq i32 %call74, 0, !dbg !2279
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !2279

if.then76:                                        ; preds = %land.lhs.true73
  %call77 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.0, %struct.rtx_def* %size.addr.2) #6, !dbg !2280
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call77}, i64 0, metadata !1848), !dbg !2280
  br label %if.end78, !dbg !2280

if.end78:                                         ; preds = %land.lhs.true73, %if.end70, %if.then76
  %size.addr.3 = phi %struct.rtx_def* [ %size.addr.2, %land.lhs.true73 ], [ %call77, %if.then76 ], [ %size.addr.2, %if.end70 ]
  %call79 = tail call %struct.rtx_def* @gen_allocate_stack(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %size.addr.3) #5, !dbg !2281
  %call80 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call79) #5, !dbg !2281
  br label %if.end100, !dbg !2282

if.else:                                          ; preds = %if.end60
  %33 = load %struct.function** @cfun, align 8, !dbg !2283, !tbaa !1942
  %limit_stack = getelementptr inbounds %struct.function* %33, i64 0, i32 56, !dbg !2283
  %34 = bitcast [4 x i8]* %limit_stack to i32*, !dbg !2283
  %bf.load81 = load i32* %34, align 8, !dbg !2283
  %bf.clear83 = and i32 %bf.load81, 32768, !dbg !2283
  %tobool84 = icmp eq i32 %bf.clear83, 0, !dbg !2283
  br i1 %tobool84, label %if.end98, label %if.then85, !dbg !2283

if.then85:                                        ; preds = %if.else
  %call86 = tail call %struct.rtx_def* @gen_label_rtx() #5, !dbg !2284
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call86}, i64 0, metadata !1861), !dbg !2284
  %35 = load i32* @target_flags, align 4, !dbg !2285, !tbaa !2023
  %and87 = lshr i32 %35, 25, !dbg !2285
  %36 = and i32 %and87, 1, !dbg !2285
  %37 = or i32 %36, 4, !dbg !2285
  %38 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !dbg !2285, !tbaa !1942
  %39 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !dbg !2285, !tbaa !1942
  %40 = load %struct.rtx_def** @stack_limit_rtx, align 8, !dbg !2285, !tbaa !1942
  %call90 = tail call %struct.rtx_def* @expand_binop(i32 %37, %struct.optab* %38, %struct.rtx_def* %39, %struct.rtx_def* %40, %struct.rtx_def* null, i32 1, i32 2) #5, !dbg !2285
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call90}, i64 0, metadata !1858), !dbg !2285
  %41 = load i32* @target_flags, align 4, !dbg !2286, !tbaa !2023
  %and91 = lshr i32 %41, 25, !dbg !2286
  %42 = and i32 %and91, 1, !dbg !2286
  %43 = or i32 %42, 4, !dbg !2286
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call90, %struct.rtx_def* %size.addr.2, i32 108, %struct.rtx_def* null, i32 %43, i32 1, %struct.rtx_def* %call86) #5, !dbg !2286
  %call94 = tail call %struct.rtx_def* @gen_trap() #5, !dbg !2287
  %call95 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call94) #5, !dbg !2287
  %call96 = tail call %struct.rtx_def* @emit_barrier() #5, !dbg !2288
  %call97 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call86) #5, !dbg !2289
  br label %if.end98, !dbg !2290

if.end98:                                         ; preds = %if.else, %if.then85
  tail call void @anti_adjust_stack(%struct.rtx_def* %size.addr.2) #6, !dbg !2291
  %44 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !dbg !2292, !tbaa !1942
  %call99 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %44) #5, !dbg !2292
  br label %if.end100

if.end100:                                        ; preds = %if.end98, %if.end78
  %45 = load i32* @ix86_preferred_stack_boundary, align 4, !dbg !2293, !tbaa !2023
  %cmp101 = icmp slt i32 %45, 128, !dbg !2293
  br i1 %cmp101, label %if.then103, label %if.end119, !dbg !2293

if.then103:                                       ; preds = %if.end100
  %46 = load i32* @target_flags, align 4, !dbg !2294, !tbaa !2023
  %and104 = lshr i32 %46, 25, !dbg !2294
  %47 = and i32 %and104, 1, !dbg !2294
  %48 = or i32 %47, 4, !dbg !2294
  %49 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !dbg !2294, !tbaa !1942
  %call107 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 15) #5, !dbg !2296
  %call108 = tail call %struct.rtx_def* @expand_binop(i32 %48, %struct.optab* %49, %struct.rtx_def* %target.addr.0, %struct.rtx_def* %call107, %struct.rtx_def* null, i32 1, i32 3) #5, !dbg !2296
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call108}, i64 0, metadata !1849), !dbg !2296
  %50 = load i32* @target_flags, align 4, !dbg !2297, !tbaa !2023
  %and109 = lshr i32 %50, 25, !dbg !2297
  %51 = and i32 %and109, 1, !dbg !2297
  %52 = or i32 %51, 4, !dbg !2297
  %call112 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 16) #5, !dbg !2298
  %call113 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %52, %struct.rtx_def* %call108, %struct.rtx_def* %call112, %struct.rtx_def* null, i32 1) #5, !dbg !2298
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call113}, i64 0, metadata !1849), !dbg !2298
  %53 = load i32* @target_flags, align 4, !dbg !2299, !tbaa !2023
  %and114 = lshr i32 %53, 25, !dbg !2299
  %54 = and i32 %and114, 1, !dbg !2299
  %55 = or i32 %54, 4, !dbg !2299
  %call117 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 16) #5, !dbg !2300
  %call118 = tail call %struct.rtx_def* @expand_mult(i32 %55, %struct.rtx_def* %call113, %struct.rtx_def* %call117, %struct.rtx_def* null, i32 1) #5, !dbg !2300
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call118}, i64 0, metadata !1849), !dbg !2300
  br label %if.end119, !dbg !2301

if.end119:                                        ; preds = %if.then103, %if.end100
  %target.addr.1 = phi %struct.rtx_def* [ %call118, %if.then103 ], [ %target.addr.0, %if.end100 ]
  %56 = load %struct.function** @cfun, align 8, !dbg !2302, !tbaa !1942
  %x_nonlocal_goto_handler_slots = getelementptr inbounds %struct.function* %56, i64 0, i32 20, !dbg !2302
  %57 = load %struct.rtx_def** %x_nonlocal_goto_handler_slots, align 8, !dbg !2302, !tbaa !1942
  %cmp120 = icmp eq %struct.rtx_def* %57, null, !dbg !2302
  br i1 %cmp120, label %return, label %if.then122, !dbg !2302

if.then122:                                       ; preds = %if.end119
  %x_nonlocal_goto_stack_level = getelementptr inbounds %struct.function* %56, i64 0, i32 22, !dbg !2303
  tail call void @emit_stack_save(i32 2, %struct.rtx_def** %x_nonlocal_goto_stack_level, %struct.rtx_def* null) #6, !dbg !2303
  br label %return, !dbg !2303

return:                                           ; preds = %if.then122, %if.end119, %if.then
  %retval.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %target.addr.1, %if.end119 ], [ %target.addr.1, %if.then122 ]
  ret %struct.rtx_def* %retval.0, !dbg !2304
}
