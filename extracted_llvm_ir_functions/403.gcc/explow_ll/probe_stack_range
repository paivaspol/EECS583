define void @probe_stack_range(i64 %first, %struct.rtx_def* %size) #1 {
entry:
  %0 = bitcast %struct.rtx_def* %size to i32*
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %cmp4 = icmp eq i32 %bf.clear, %3
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @convert_to_mode(i32 %3, %struct.rtx_def* %size, i32 1) #4
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %size.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %size, %land.lhs.true ], [ %size, %entry ]
  %4 = load %struct.rtx_def** @stack_check_libfunc, align 8, !tbaa !3
  %cmp8 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp8, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end
  %5 = load i32* @target_flags, align 4, !tbaa !5
  %and10 = lshr i32 %5, 25
  %6 = and i32 %and10, 1
  %7 = or i32 %6, 4
  %8 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !3
  %call13 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %size.addr.0, i64 %first) #5
  %call14 = tail call %struct.rtx_def* (i32, i32, ...)* @gen_rtx(i32 76, i32 %7, %struct.rtx_def* %8, %struct.rtx_def* %call13) #4
  %call15 = tail call %struct.rtx_def* @memory_address(i32 2, %struct.rtx_def* %call14) #5
  %9 = load %struct.rtx_def** @stack_check_libfunc, align 8, !tbaa !3
  %10 = load i32* @ptr_mode, align 4, !tbaa !7
  tail call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %9, i32 0, i32 0, i32 1, %struct.rtx_def* %call15, i32 %10) #4
  br label %if.end84

if.else:                                          ; preds = %if.end
  %11 = bitcast %struct.rtx_def* %size.addr.0 to i32*
  %bf.load16 = load i32* %11, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 54
  br i1 %cmp18, label %land.lhs.true19, label %if.else37

land.lhs.true19:                                  ; preds = %if.else
  %rtwint = getelementptr inbounds %struct.rtx_def* %size.addr.0, i64 0, i32 1, i64 0, i32 0
  %12 = load i64* %rtwint, align 8, !tbaa !4
  %cmp20 = icmp slt i64 %12, 40960
  br i1 %cmp20, label %for.cond.preheader, label %if.else37

for.cond.preheader:                               ; preds = %land.lhs.true19
  %offset.0123 = add nsw i64 %first, 4096
  %cmp25124 = icmp slt i64 %offset.0123, %12
  %13 = load i32* @target_flags, align 4, !tbaa !5
  %and26125 = lshr i32 %13, 25
  %14 = and i32 %and26125, 1
  %15 = or i32 %14, 4
  %16 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !3
  br i1 %cmp25124, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %17 = phi %struct.rtx_def* [ %26, %for.body ], [ %16, %for.cond.preheader ]
  %18 = phi i32 [ %25, %for.body ], [ %15, %for.cond.preheader ]
  %offset.0126 = phi i64 [ %offset.0, %for.body ], [ %offset.0123, %for.cond.preheader ]
  %call29 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %offset.0126) #4
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %18, %struct.rtx_def* %17, %struct.rtx_def* %call29) #4
  %19 = load i32* @word_mode, align 4, !tbaa !7
  %call.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %19, %struct.rtx_def* %call30) #4
  %20 = bitcast %struct.rtx_def* %call.i to i32*
  %bf.load.i = load i32* %20, align 8
  %bf.set.i = or i32 %bf.load.i, 134217728
  store i32 %bf.set.i, i32* %20, align 8
  %21 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call1.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call.i, %struct.rtx_def* %21) #4
  %offset.0 = add nsw i64 %offset.0126, 4096
  %22 = load i64* %rtwint, align 8, !tbaa !4
  %cmp25 = icmp slt i64 %offset.0, %22
  %23 = load i32* @target_flags, align 4, !tbaa !5
  %and26 = lshr i32 %23, 25
  %24 = and i32 %and26, 1
  %25 = or i32 %24, 4
  %26 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !3
  br i1 %cmp25, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %.lcssa122 = phi %struct.rtx_def* [ %16, %for.cond.preheader ], [ %26, %for.body ]
  %.lcssa = phi i32 [ %15, %for.cond.preheader ], [ %25, %for.body ]
  %call35 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %size.addr.0, i64 %first) #5
  %call36 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %.lcssa, %struct.rtx_def* %.lcssa122, %struct.rtx_def* %call35) #4
  %27 = load i32* @word_mode, align 4, !tbaa !7
  %call.i110 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %27, %struct.rtx_def* %call36) #4
  %28 = bitcast %struct.rtx_def* %call.i110 to i32*
  %bf.load.i111 = load i32* %28, align 8
  %bf.set.i112 = or i32 %bf.load.i111, 134217728
  store i32 %bf.set.i112, i32* %28, align 8
  %29 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call1.i113 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call.i110, %struct.rtx_def* %29) #4
  br label %if.end84

if.else37:                                        ; preds = %land.lhs.true19, %if.else
  %30 = load i32* @target_flags, align 4, !tbaa !5
  %and38 = lshr i32 %30, 25
  %31 = and i32 %and38, 1
  %32 = or i32 %31, 4
  %33 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !3
  %add41 = add nsw i64 %first, 4096
  %call42 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add41) #4
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %32, %struct.rtx_def* %33, %struct.rtx_def* %call42) #4
  %call44 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call43, %struct.rtx_def* null) #4
  %34 = load i32* @target_flags, align 4, !tbaa !5
  %and45 = lshr i32 %34, 25
  %35 = and i32 %and45, 1
  %36 = or i32 %35, 4
  %37 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !3
  %call48 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %size.addr.0, i64 %first) #5
  %call49 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %36, %struct.rtx_def* %37, %struct.rtx_def* %call48) #4
  %call50 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call49, %struct.rtx_def* null) #4
  %call51 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4096) #4
  %call52 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %call53 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %call54 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %38 = bitcast %struct.rtx_def* %call44 to i32*
  %bf.load55 = load i32* %38, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 61
  br i1 %cmp57, label %lor.lhs.false, label %if.then61

lor.lhs.false:                                    ; preds = %if.else37
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %call44, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx59 to i32*
  %39 = load i32* %rtuint, align 4, !tbaa !5
  %cmp60 = icmp ult i32 %39, 53
  br i1 %cmp60, label %if.then61, label %if.end66

if.then61:                                        ; preds = %if.else37, %lor.lhs.false
  %40 = load i32* @target_flags, align 4, !tbaa !5
  %and62 = lshr i32 %40, 25
  %41 = and i32 %and62, 1
  %42 = or i32 %41, 4
  %call65 = tail call %struct.rtx_def* @force_reg(i32 %42, %struct.rtx_def* %call44) #5
  br label %if.end66

if.end66:                                         ; preds = %if.then61, %lor.lhs.false
  %test_addr.0 = phi %struct.rtx_def* [ %call65, %if.then61 ], [ %call44, %lor.lhs.false ]
  %call67 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -96) #4
  tail call void @emit_jump(%struct.rtx_def* %call53) #4
  %call68 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call52) #4
  %43 = load i32* @word_mode, align 4, !tbaa !7
  %call.i114 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %43, %struct.rtx_def* %test_addr.0) #4
  %44 = bitcast %struct.rtx_def* %call.i114 to i32*
  %bf.load.i115 = load i32* %44, align 8
  %bf.set.i116 = or i32 %bf.load.i115, 134217728
  store i32 %bf.set.i116, i32* %44, align 8
  %45 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call1.i117 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call.i114, %struct.rtx_def* %45) #4
  %call69 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -94) #4
  %46 = load i32* @target_flags, align 4, !tbaa !5
  %and70 = lshr i32 %46, 25
  %47 = and i32 %and70, 1
  %48 = or i32 %47, 4
  %49 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !3
  %call73 = tail call %struct.rtx_def* @expand_binop(i32 %48, %struct.optab* %49, %struct.rtx_def* %test_addr.0, %struct.rtx_def* %call51, %struct.rtx_def* %test_addr.0, i32 1, i32 2) #4
  %cmp74 = icmp eq %struct.rtx_def* %call73, %test_addr.0
  br i1 %cmp74, label %if.end76, label %if.then75

if.then75:                                        ; preds = %if.end66
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 1577, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.probe_stack_range, i64 0, i64 0)) #6
  unreachable

if.end76:                                         ; preds = %if.end66
  %call77 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call53) #4
  %50 = load i32* @target_flags, align 4, !tbaa !5
  %and78 = lshr i32 %50, 25
  %51 = and i32 %and78, 1
  %52 = or i32 %51, 4
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %test_addr.0, %struct.rtx_def* %call50, i32 109, %struct.rtx_def* null, i32 %52, i32 1, %struct.rtx_def* %call52) #4
  tail call void @emit_jump(%struct.rtx_def* %call54) #4
  %call81 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -95) #4
  %call82 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call54) #4
  %53 = load i32* @word_mode, align 4, !tbaa !7
  %call.i118 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %53, %struct.rtx_def* %call50) #4
  %54 = bitcast %struct.rtx_def* %call.i118 to i32*
  %bf.load.i119 = load i32* %54, align 8
  %bf.set.i120 = or i32 %bf.load.i119, 134217728
  store i32 %bf.set.i120, i32* %54, align 8
  %55 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call1.i121 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call.i118, %struct.rtx_def* %55) #4
  br label %if.end84

if.end84:                                         ; preds = %for.end, %if.end76, %if.then9
  ret void
}
