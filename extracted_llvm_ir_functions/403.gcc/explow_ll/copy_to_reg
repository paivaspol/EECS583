define %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %x) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !1762), !dbg !2044
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !2045
  %bf.load = load i32* %0, align 8, !dbg !2045
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2045
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2045
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #5, !dbg !2045
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !1763), !dbg !2045
  %call1 = tail call i32 @general_operand(%struct.rtx_def* %x, i32 0) #5, !dbg !2046
  %tobool = icmp eq i32 %call1, 0, !dbg !2046
  br i1 %tobool, label %if.then, label %if.end, !dbg !2046

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %x, %struct.rtx_def* %call) #5, !dbg !2047
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call2}, i64 0, metadata !1762), !dbg !2047
  br label %if.end, !dbg !2047

if.end:                                           ; preds = %entry, %if.then
  %x.addr.0 = phi %struct.rtx_def* [ %x, %entry ], [ %call2, %if.then ]
  %cmp = icmp eq %struct.rtx_def* %x.addr.0, %call, !dbg !2048
  br i1 %cmp, label %if.end5, label %if.then3, !dbg !2048

if.then3:                                         ; preds = %if.end
  %call4 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %x.addr.0) #5, !dbg !2049
  br label %if.end5, !dbg !2049

if.end5:                                          ; preds = %if.end, %if.then3
  ret %struct.rtx_def* %call, !dbg !2050
}
