define void @conflict_graph_delete(%struct.conflict_graph_def* %graph) #0 {
entry:
  %arc_obstack = getelementptr inbounds %struct.conflict_graph_def* %graph, i64 0, i32 3
  tail call void @obstack_free(%struct.obstack* %arc_obstack, i8* null) #6
  %arc_hash_table = getelementptr inbounds %struct.conflict_graph_def* %graph, i64 0, i32 0
  %0 = load %struct.htab** %arc_hash_table, align 8, !tbaa !3
  tail call void @htab_delete(%struct.htab* %0) #6
  %neighbor_heads = getelementptr inbounds %struct.conflict_graph_def* %graph, i64 0, i32 2
  %1 = load %struct.conflict_graph_arc_def*** %neighbor_heads, align 8, !tbaa !3
  %2 = bitcast %struct.conflict_graph_arc_def** %1 to i8*
  tail call void @free(i8* %2) #6
  %3 = bitcast %struct.conflict_graph_def* %graph to i8*
  tail call void @free(i8* %3) #6
  ret void
}
