define i32 @conflict_graph_conflict_p(%struct.conflict_graph_def* nocapture %graph, i32 %reg1, i32 %reg2) #0 {
entry:
  %arc = alloca %struct.conflict_graph_arc_def, align 8
  call void @llvm.dbg.value(metadata !{%struct.conflict_graph_def* %graph}, i64 0, metadata !394), !dbg !764
  call void @llvm.dbg.value(metadata !{i32 %reg1}, i64 0, metadata !395), !dbg !765
  call void @llvm.dbg.value(metadata !{i32 %reg2}, i64 0, metadata !396), !dbg !766
  call void @llvm.dbg.declare(metadata !{%struct.conflict_graph_arc_def* %arc}, metadata !397), !dbg !767
  %cmp = icmp slt i32 %reg1, %reg2, !dbg !768
  %cond = select i1 %cmp, i32 %reg1, i32 %reg2, !dbg !768
  %smaller = getelementptr inbounds %struct.conflict_graph_arc_def* %arc, i64 0, i32 2, !dbg !768
  store i32 %cond, i32* %smaller, align 8, !dbg !768, !tbaa !718
  %cmp1 = icmp sgt i32 %reg1, %reg2, !dbg !769
  %cond5 = select i1 %cmp1, i32 %reg1, i32 %reg2, !dbg !769
  %larger = getelementptr inbounds %struct.conflict_graph_arc_def* %arc, i64 0, i32 3, !dbg !769
  store i32 %cond5, i32* %larger, align 4, !dbg !769, !tbaa !718
  %arc_hash_table = getelementptr inbounds %struct.conflict_graph_def* %graph, i64 0, i32 0, !dbg !770
  %0 = load %struct.htab** %arc_hash_table, align 8, !dbg !770, !tbaa !722
  %1 = bitcast %struct.conflict_graph_arc_def* %arc to i8*, !dbg !770
  %call = call i8* @htab_find(%struct.htab* %0, i8* %1) #7, !dbg !770
  %cmp6 = icmp ne i8* %call, null, !dbg !770
  %conv = zext i1 %cmp6 to i32, !dbg !770
  ret i32 %conv, !dbg !770
}
