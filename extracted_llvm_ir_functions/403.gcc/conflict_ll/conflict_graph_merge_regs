define void @conflict_graph_merge_regs(%struct.conflict_graph_def* %graph, i32 %target, i32 %src) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.conflict_graph_def* %graph}, i64 0, metadata !415), !dbg !783
  tail call void @llvm.dbg.value(metadata !{i32 %target}, i64 0, metadata !416), !dbg !784
  tail call void @llvm.dbg.value(metadata !{i32 %src}, i64 0, metadata !417), !dbg !785
  %cmp = icmp eq i32 %target, %src, !dbg !786
  br i1 %cmp, label %while.end, label %while.cond.preheader, !dbg !786

while.cond.preheader:                             ; preds = %entry
  %neighbor_heads = getelementptr inbounds %struct.conflict_graph_def* %graph, i64 0, i32 2, !dbg !787
  %0 = load %struct.conflict_graph_arc_def*** %neighbor_heads, align 8, !dbg !787, !tbaa !722
  %idxprom = sext i32 %src to i64, !dbg !787
  %arrayidx = getelementptr inbounds %struct.conflict_graph_arc_def** %0, i64 %idxprom, !dbg !787
  %arc.019 = load %struct.conflict_graph_arc_def** %arrayidx, align 8, !dbg !787
  %cmp120 = icmp eq %struct.conflict_graph_arc_def* %arc.019, null, !dbg !788
  br i1 %cmp120, label %while.end, label %while.body, !dbg !788

while.body:                                       ; preds = %while.cond.preheader, %if.end4
  %arc.021 = phi %struct.conflict_graph_arc_def* [ %arc.0, %if.end4 ], [ %arc.019, %while.cond.preheader ]
  %smaller = getelementptr inbounds %struct.conflict_graph_arc_def* %arc.021, i64 0, i32 2, !dbg !789
  %1 = load i32* %smaller, align 4, !dbg !789, !tbaa !718
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !419), !dbg !789
  %cmp2 = icmp eq i32 %1, %src, !dbg !790
  %larger = getelementptr inbounds %struct.conflict_graph_arc_def* %arc.021, i64 0, i32 3, !dbg !791
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !790

if.then3:                                         ; preds = %while.body
  %2 = load i32* %larger, align 4, !dbg !791, !tbaa !718
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !419), !dbg !791
  br label %if.end4, !dbg !791

if.end4:                                          ; preds = %while.body, %if.then3
  %other.0 = phi i32 [ %2, %if.then3 ], [ %1, %while.body ]
  %call = tail call i32 @conflict_graph_add(%struct.conflict_graph_def* %graph, i32 %target, i32 %other.0) #9, !dbg !792
  %3 = load i32* %larger, align 4, !dbg !793, !tbaa !718
  %cmp6 = icmp sgt i32 %3, %src, !dbg !793
  %smaller_next = getelementptr inbounds %struct.conflict_graph_arc_def* %arc.021, i64 0, i32 0, !dbg !794
  %larger_next = getelementptr inbounds %struct.conflict_graph_arc_def* %arc.021, i64 0, i32 1, !dbg !795
  %arc.0.in.be = select i1 %cmp6, %struct.conflict_graph_arc_def** %smaller_next, %struct.conflict_graph_arc_def** %larger_next, !dbg !793
  %arc.0 = load %struct.conflict_graph_arc_def** %arc.0.in.be, align 8, !dbg !787
  %cmp1 = icmp eq %struct.conflict_graph_arc_def* %arc.0, null, !dbg !788
  br i1 %cmp1, label %while.end, label %while.body, !dbg !788

while.end:                                        ; preds = %while.cond.preheader, %if.end4, %entry
  ret void, !dbg !796
}
