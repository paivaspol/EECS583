define void @dw2_asm_output_encoded_addr_rtx(i32 %encoding, %struct.rtx_def* %addr, i8* %comment, ...) #0 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata !{i32 %encoding}, i64 0, metadata !1057), !dbg !1373
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %addr}, i64 0, metadata !1058), !dbg !1373
  call void @llvm.dbg.value(metadata !{i8* %comment}, i64 0, metadata !1059), !dbg !1373
  call void @llvm.dbg.declare(metadata !{[1 x %struct.__va_list_tag]* %ap}, metadata !1061), !dbg !1374
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !1374
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !1374
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1374
  %call = call i32 @size_of_encoded_value(i32 %encoding) #9, !dbg !1375
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !1060), !dbg !1375
  %cmp = icmp eq i32 %encoding, 80, !dbg !1377
  br i1 %cmp, label %if.then, label %if.end, !dbg !1377

if.then:                                          ; preds = %entry
  %0 = load i32* @target_flags, align 4, !dbg !1378, !tbaa !1165
  %and = lshr i32 %0, 20, !dbg !1378
  %1 = and i32 %and, 32, !dbg !1378
  %2 = add i32 %1, 32, !dbg !1378
  call void @assemble_align(i32 %2) #8, !dbg !1378
  %3 = load i32* @target_flags, align 4, !dbg !1380, !tbaa !1165
  %and2 = lshr i32 %3, 20, !dbg !1380
  %4 = and i32 %and2, 32, !dbg !1380
  %5 = add i32 %4, 32, !dbg !1380
  %call5 = call zeroext i1 @assemble_integer(%struct.rtx_def* %addr, i32 %call, i32 %5, i32 1) #8, !dbg !1380
  br label %return, !dbg !1381

if.end:                                           ; preds = %entry
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !1382, !tbaa !1149
  %cmp6 = icmp eq %struct.rtx_def* %6, %addr, !dbg !1382
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !1382, !tbaa !1149
  %cmp7 = icmp eq %struct.rtx_def* %7, %addr, !dbg !1382
  %or.cond = or i1 %cmp6, %cmp7, !dbg !1382
  br i1 %or.cond, label %if.then8, label %do.body.preheader, !dbg !1382

do.body.preheader:                                ; preds = %if.end
  %cmp10 = icmp eq i32 %call, 4, !dbg !1383
  br label %do.body, !dbg !1383

if.then8:                                         ; preds = %if.end
  %call9 = call zeroext i1 @assemble_integer(%struct.rtx_def* %addr, i32 %call, i32 8, i32 1) #8, !dbg !1386
  br label %if.end35, !dbg !1386

do.body:                                          ; preds = %do.body.preheader, %if.then22
  %addr.addr.0 = phi %struct.rtx_def* [ %call23, %if.then22 ], [ %addr, %do.body.preheader ]
  %encoding.addr.0 = phi i32 [ %and24, %if.then22 ], [ %encoding, %do.body.preheader ]
  br i1 %cmp10, label %land.lhs.true, label %do.end, !dbg !1383

land.lhs.true:                                    ; preds = %do.body
  %and11 = and i32 %encoding.addr.0, 112, !dbg !1383
  %cmp12 = icmp eq i32 %and11, 48, !dbg !1383
  br i1 %cmp12, label %if.then13, label %do.end, !dbg !1383

if.then13:                                        ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1387, !tbaa !1149
  %9 = call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str99, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %8), !dbg !1387
  %10 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1387, !tbaa !1149
  %arrayidx = getelementptr inbounds %struct.rtx_def* %addr.addr.0, i64 0, i32 1, i64 0, !dbg !1387
  %rtstr = bitcast %union.rtunion_def* %arrayidx to i8**, !dbg !1387
  %11 = load i8** %rtstr, align 8, !dbg !1387, !tbaa !1149
  call void @assemble_name(%struct._IO_FILE* %10, i8* %11) #8, !dbg !1387
  %and15 = and i32 %encoding.addr.0, 128, !dbg !1387
  %tobool16 = icmp ne i32 %and15, 0, !dbg !1387
  %cond17 = select i1 %tobool16, i8* getelementptr inbounds ([5 x i8]* @.str100, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str101, i64 0, i64 0), !dbg !1387
  %12 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1387, !tbaa !1149
  %call18 = call i32 @fputs(i8* %cond17, %struct._IO_FILE* %12) #8, !dbg !1387
  br label %if.end35, !dbg !1387

do.end:                                           ; preds = %do.body, %land.lhs.true
  %and20 = and i32 %encoding.addr.0, 128, !dbg !1389
  %tobool21 = icmp eq i32 %and20, 0, !dbg !1389
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !1389

if.then22:                                        ; preds = %do.end
  %call23 = call fastcc %struct.rtx_def* @dw2_force_const_mem(%struct.rtx_def* %addr.addr.0) #9, !dbg !1390
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call23}, i64 0, metadata !1058), !dbg !1390
  %and24 = and i32 %encoding.addr.0, -129, !dbg !1392
  call void @llvm.dbg.value(metadata !{i32 %and24}, i64 0, metadata !1057), !dbg !1392
  br label %do.body, !dbg !1393

if.end25:                                         ; preds = %do.end
  %and26 = and i32 %encoding.addr.0, 240, !dbg !1394
  switch i32 %and26, label %sw.default [
    i32 0, label %sw.bb
    i32 16, label %sw.bb27
  ], !dbg !1394

sw.bb:                                            ; preds = %if.end25
  call void @dw2_assemble_integer(i32 %call, %struct.rtx_def* %addr.addr.0) #9, !dbg !1395
  br label %if.end35, !dbg !1397

sw.bb27:                                          ; preds = %if.end25
  %13 = bitcast %struct.rtx_def* %addr.addr.0 to i32*, !dbg !1398
  %bf.load = load i32* %13, align 8, !dbg !1398
  %bf.clear = and i32 %bf.load, 65535, !dbg !1398
  %cmp28 = icmp eq i32 %bf.clear, 68, !dbg !1398
  br i1 %cmp28, label %if.end30, label %if.then29, !dbg !1398

if.then29:                                        ; preds = %sw.bb27
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str12, i64 0, i64 0), i32 877, i8* getelementptr inbounds ([32 x i8]* @__FUNCTION__.dw2_asm_output_encoded_addr_rtx, i64 0, i64 0)) #11, !dbg !1399
  unreachable, !dbg !1399

if.end30:                                         ; preds = %sw.bb27
  %14 = load i32* @target_flags, align 4, !dbg !1400, !tbaa !1165
  %and31 = lshr i32 %14, 25, !dbg !1400
  %15 = and i32 %and31, 1, !dbg !1400
  %16 = or i32 %15, 4, !dbg !1400
  %17 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !dbg !1400, !tbaa !1149
  %call34 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %16, %struct.rtx_def* %addr.addr.0, %struct.rtx_def* %17) #8, !dbg !1400
  call void @dw2_assemble_integer(i32 %call, %struct.rtx_def* %call34) #9, !dbg !1400
  br label %if.end35, !dbg !1401

sw.default:                                       ; preds = %if.end25
  call void @fancy_abort(i8* getelementptr inbounds ([53 x i8]* @.str12, i64 0, i64 0), i32 888, i8* getelementptr inbounds ([32 x i8]* @__FUNCTION__.dw2_asm_output_encoded_addr_rtx, i64 0, i64 0)) #11, !dbg !1402
  unreachable, !dbg !1402

if.end35:                                         ; preds = %if.then13, %if.end30, %sw.bb, %if.then8
  %18 = load i32* @flag_debug_asm, align 4, !dbg !1403, !tbaa !1165
  %tobool36 = icmp eq i32 %18, 0, !dbg !1403
  %tobool38 = icmp eq i8* %comment, null, !dbg !1403
  %or.cond66 = or i1 %tobool36, %tobool38, !dbg !1403
  br i1 %or.cond66, label %if.end43, label %if.then39, !dbg !1403

if.then39:                                        ; preds = %if.end35
  %19 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1404, !tbaa !1149
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0)) #8, !dbg !1404
  %20 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1406, !tbaa !1149
  %call42 = call i32 @vfprintf(%struct._IO_FILE* %20, i8* %comment, %struct.__va_list_tag* %arraydecay) #8, !dbg !1406
  br label %if.end43, !dbg !1407

if.end43:                                         ; preds = %if.end35, %if.then39
  %21 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1408, !tbaa !1149
  %call44 = call i32 @fputc(i32 10, %struct._IO_FILE* %21) #8, !dbg !1408
  call void @llvm.va_end(i8* %arraydecay1), !dbg !1409
  br label %return, !dbg !1410

return:                                           ; preds = %if.end43, %if.then
  ret void, !dbg !1410
}
