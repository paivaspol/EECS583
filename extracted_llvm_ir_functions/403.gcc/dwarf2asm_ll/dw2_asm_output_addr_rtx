define void @dw2_asm_output_addr_rtx(i32 %size, %struct.rtx_def* %addr, i8* %comment, ...) #0 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !956), !dbg !1221
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %addr}, i64 0, metadata !957), !dbg !1221
  call void @llvm.dbg.value(metadata !{i8* %comment}, i64 0, metadata !958), !dbg !1221
  call void @llvm.dbg.declare(metadata !{[1 x %struct.__va_list_tag]* %ap}, metadata !959), !dbg !1222
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !1222
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1222
  call void @dw2_assemble_integer(i32 %size, %struct.rtx_def* %addr) #9, !dbg !1223
  %0 = load i32* @flag_debug_asm, align 4, !dbg !1225, !tbaa !1165
  %tobool = icmp eq i32 %0, 0, !dbg !1225
  %tobool2 = icmp eq i8* %comment, null, !dbg !1225
  %or.cond = or i1 %tobool, %tobool2, !dbg !1225
  br i1 %or.cond, label %if.end, label %if.then, !dbg !1225

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !1222
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1226, !tbaa !1149
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0)) #8, !dbg !1226
  %2 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1228, !tbaa !1149
  %call4 = call i32 @vfprintf(%struct._IO_FILE* %2, i8* %comment, %struct.__va_list_tag* %arraydecay) #8, !dbg !1228
  br label %if.end, !dbg !1229

if.end:                                           ; preds = %entry, %if.then
  %3 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1230, !tbaa !1149
  %call5 = call i32 @fputc(i32 10, %struct._IO_FILE* %3) #8, !dbg !1230
  call void @llvm.va_end(i8* %arraydecay1), !dbg !1231
  ret void, !dbg !1232
}
