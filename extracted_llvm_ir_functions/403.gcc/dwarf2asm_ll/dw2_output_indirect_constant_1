define internal i32 @dw2_output_indirect_constant_1(%struct.splay_tree_node_s* nocapture %node, i8* nocapture %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.splay_tree_node_s* %node}, i64 0, metadata !1101), !dbg !1365
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !1102), !dbg !1366
  %key = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 0, !dbg !1367
  %0 = load i64* %key, align 8, !dbg !1367, !tbaa !1154
  %1 = inttoptr i64 %0 to i8*, !dbg !1367
  tail call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !1103), !dbg !1367
  %2 = load i32* @target_flags, align 4, !dbg !1368, !tbaa !1165
  %and = lshr i32 %2, 25, !dbg !1368
  %3 = and i32 %and, 1, !dbg !1368
  %4 = or i32 %3, 4, !dbg !1368
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %4, i8* %1) #8, !dbg !1368
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !1104), !dbg !1368
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !1369, !tbaa !1149
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([20 x i8]* @.str103, i64 0, i64 0), i8* %1) #8, !dbg !1369
  %value = getelementptr inbounds %struct.splay_tree_node_s* %node, i64 0, i32 1, !dbg !1370
  %6 = load i64* %value, align 8, !dbg !1370, !tbaa !1154
  %7 = inttoptr i64 %6 to %union.tree_node*, !dbg !1370
  tail call void @assemble_variable(%union.tree_node* %7, i32 1, i32 1, i32 1) #8, !dbg !1370
  %8 = load i32* @target_flags, align 4, !dbg !1371, !tbaa !1165
  %and2 = lshr i32 %8, 20, !dbg !1371
  %9 = and i32 %and2, 32, !dbg !1371
  %10 = add i32 %9, 32, !dbg !1371
  %div = sdiv i32 %10, 8, !dbg !1371
  %call8 = tail call zeroext i1 @assemble_integer(%struct.rtx_def* %call, i32 %div, i32 %10, i32 1) #8, !dbg !1371
  ret i32 0, !dbg !1372
}
