define internal void @add_stored_regs(%struct.rtx_def* nocapture %reg, %struct.rtx_def* nocapture %setter, i8* %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %reg}, i64 0, metadata !587), !dbg !1000
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %setter}, i64 0, metadata !588), !dbg !1001
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !589), !dbg !1002
  %0 = bitcast %struct.rtx_def* %reg to i32*, !dbg !1003
  %bf.load = load i32* %0, align 8, !dbg !1003
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !1003
  %bf.clear = and i32 %bf.lshr, 255, !dbg !1003
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !593), !dbg !1003
  tail call void @llvm.dbg.value(metadata !296, i64 0, metadata !594), !dbg !1004
  %1 = bitcast %struct.rtx_def* %setter to i32*, !dbg !1005
  %bf.load1 = load i32* %1, align 8, !dbg !1005
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !1005
  %cmp = icmp eq i32 %bf.clear2, 49, !dbg !1005
  br i1 %cmp, label %for.end, label %if.end, !dbg !1005

if.end:                                           ; preds = %entry
  %bf.clear4 = and i32 %bf.load, 65535, !dbg !1006
  %cmp5 = icmp eq i32 %bf.clear4, 63, !dbg !1006
  br i1 %cmp5, label %land.lhs.true, label %if.end30, !dbg !1006

land.lhs.true:                                    ; preds = %if.end
  %fld = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, !dbg !1006
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !1006
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !1006, !tbaa !747
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !1006
  %bf.load6 = load i32* %3, align 8, !dbg !1006
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !1006
  %cmp8 = icmp eq i32 %bf.clear7, 61, !dbg !1006
  br i1 %cmp8, label %if.then9, label %if.end30, !dbg !1006

if.then9:                                         ; preds = %land.lhs.true
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !1007
  %rtuint = bitcast %union.rtunion_def* %arrayidx14 to i32*, !dbg !1007
  %4 = load i32* %rtuint, align 4, !dbg !1007, !tbaa !669
  %bf.lshr19 = lshr i32 %bf.load6, 16, !dbg !1007
  %bf.clear20 = and i32 %bf.lshr19, 255, !dbg !1007
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 1, !dbg !1007
  %rtuint23 = bitcast %union.rtunion_def* %arrayidx22 to i32*, !dbg !1007
  %5 = load i32* %rtuint23, align 4, !dbg !1007, !tbaa !669
  %call = tail call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear20, i32 %5, i32 %bf.clear) #5, !dbg !1007
  tail call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !594), !dbg !1007
  %6 = load %struct.rtx_def** %rtx, align 8, !dbg !1009, !tbaa !747
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !587), !dbg !1009
  %.phi.trans.insert = bitcast %struct.rtx_def* %6 to i32*
  %bf.load31.pre = load i32* %.phi.trans.insert, align 8, !dbg !1010
  br label %if.end30, !dbg !1011

if.end30:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  %bf.load31 = phi i32 [ %bf.load31.pre, %if.then9 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %if.end ]
  %reg.addr.0 = phi %struct.rtx_def* [ %6, %if.then9 ], [ %reg, %land.lhs.true ], [ %reg, %if.end ]
  %offset.0 = phi i32 [ %call, %if.then9 ], [ 0, %land.lhs.true ], [ 0, %if.end ]
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !1010
  %cmp33 = icmp eq i32 %bf.clear32, 61, !dbg !1010
  br i1 %cmp33, label %lor.lhs.false, label %for.end, !dbg !1010

lor.lhs.false:                                    ; preds = %if.end30
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 0, !dbg !1010
  %rtuint36 = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !1010
  %7 = load i32* %rtuint36, align 4, !dbg !1010, !tbaa !669
  %cmp37 = icmp ugt i32 %7, 52, !dbg !1010
  br i1 %cmp37, label %for.end, label %if.end39, !dbg !1010

if.end39:                                         ; preds = %lor.lhs.false
  %add = add i32 %7, %offset.0, !dbg !1012
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !590), !dbg !1012
  %add.off = add i32 %add, -8, !dbg !1013
  %8 = icmp ult i32 %add.off, 8, !dbg !1013
  %add.off118 = add i32 %add, -21, !dbg !1013
  %9 = icmp ult i32 %add.off118, 8, !dbg !1013
  %or.cond = or i1 %8, %9, !dbg !1013
  %add.off119 = add i32 %add, -45, !dbg !1013
  %10 = icmp ult i32 %add.off119, 8, !dbg !1013
  %or.cond125 = or i1 %or.cond, %10, !dbg !1013
  %add.off120 = add i32 %add, -29, !dbg !1013
  %11 = icmp ult i32 %add.off120, 8, !dbg !1013
  %or.cond127 = or i1 %or.cond125, %11, !dbg !1013
  br i1 %or.cond127, label %cond.true, label %cond.false, !dbg !1013

cond.true:                                        ; preds = %if.end39
  %idxprom122 = zext i32 %bf.clear to i64, !dbg !1013
  %arrayidx58 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom122, !dbg !1013
  %12 = load i32* %arrayidx58, align 4, !dbg !1013, !tbaa !752
  %cmp59 = icmp eq i32 %12, 5, !dbg !1013
  br i1 %cmp59, label %cond.end85.thread, label %lor.rhs, !dbg !1013

lor.rhs:                                          ; preds = %cond.true
  %cmp62 = icmp eq i32 %12, 6, !dbg !1013
  %phitmp = select i1 %cmp62, i32 2, i32 1, !dbg !1013
  br label %cond.end85.thread, !dbg !1013

cond.false:                                       ; preds = %if.end39
  switch i32 %bf.clear, label %cond.end85 [
    i32 18, label %cond.true64
    i32 24, label %cond.true68
  ], !dbg !1013

cond.true64:                                      ; preds = %cond.false
  %13 = load i32* @target_flags, align 4, !dbg !1013, !tbaa !669
  %and = lshr i32 %13, 25, !dbg !1013
  %14 = and i32 %and, 1, !dbg !1013
  %15 = xor i32 %14, 3, !dbg !1013
  br label %cond.end85.thread, !dbg !1013

cond.true68:                                      ; preds = %cond.false
  %16 = load i32* @target_flags, align 4, !dbg !1013, !tbaa !669
  %and69 = lshr i32 %16, 24, !dbg !1013
  %17 = and i32 %and69, 2, !dbg !1013
  %18 = xor i32 %17, 6, !dbg !1013
  br label %cond.end85.thread, !dbg !1013

cond.end85.thread:                                ; preds = %cond.true64, %cond.true68, %cond.true, %lor.rhs
  %cond86.ph = phi i32 [ %15, %cond.true64 ], [ %18, %cond.true68 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  tail call void @llvm.dbg.value(metadata !{i32 %add87133}, i64 0, metadata !591), !dbg !1013
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !592), !dbg !1014
  br label %for.body.lr.ph, !dbg !1014

cond.end85:                                       ; preds = %cond.false
  %idxprom73121 = zext i32 %bf.clear to i64, !dbg !1013
  %arrayidx74 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom73121, !dbg !1013
  %19 = load i8* %arrayidx74, align 1, !dbg !1013, !tbaa !661
  %conv = zext i8 %19 to i32, !dbg !1013
  %20 = load i32* @target_flags, align 4, !dbg !1013, !tbaa !669
  %and75 = lshr i32 %20, 23, !dbg !1013
  %21 = and i32 %and75, 4, !dbg !1013
  %22 = add i32 %21, 4, !dbg !1013
  %add78 = add i32 %conv, -1, !dbg !1013
  %sub = add i32 %add78, %22, !dbg !1013
  %div = sdiv i32 %sub, %22, !dbg !1013
  tail call void @llvm.dbg.value(metadata !{i32 %add87133}, i64 0, metadata !591), !dbg !1013
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !592), !dbg !1014
  %cmp88128 = icmp sgt i32 %div, 0, !dbg !1014
  br i1 %cmp88128, label %for.body.lr.ph, label %for.end, !dbg !1014

for.body.lr.ph:                                   ; preds = %cond.end85.thread, %cond.end85
  %cond86.ph.pn = phi i32 [ %cond86.ph, %cond.end85.thread ], [ %div, %cond.end85 ]
  %add87133 = add nsw i32 %cond86.ph.pn, %add, !dbg !1013
  %23 = bitcast i8* %data to %struct.bitmap_head_def*, !dbg !1016
  br label %for.body, !dbg !1014

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %i.0129 = phi i32 [ %add, %for.body.lr.ph ], [ %inc, %for.body ]
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %23, i32 %i.0129) #5, !dbg !1016
  %inc = add nsw i32 %i.0129, 1, !dbg !1014
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !592), !dbg !1014
  %cmp88 = icmp slt i32 %inc, %add87133, !dbg !1014
  br i1 %cmp88, label %for.body, label %for.end, !dbg !1014

for.end:                                          ; preds = %cond.end85, %for.body, %if.end30, %lor.lhs.false, %entry
  ret void, !dbg !1017
}
