define internal fastcc %struct.insn_chain* @insert_one_insn(%struct.insn_chain* %chain, i32 %before_p, i32 %code, %struct.rtx_def* %pat) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.insn_chain* %chain}, i64 0, metadata !569), !dbg !954
  tail call void @llvm.dbg.value(metadata !{i32 %before_p}, i64 0, metadata !570), !dbg !955
  tail call void @llvm.dbg.value(metadata !{i32 %code}, i64 0, metadata !571), !dbg !956
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %pat}, i64 0, metadata !572), !dbg !957
  %insn1 = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 4, !dbg !958
  %0 = load %struct.rtx_def** %insn1, align 8, !dbg !958, !tbaa !747
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !573), !dbg !958
  %call = tail call %struct.insn_chain* @new_insn_chain() #5, !dbg !959
  tail call void @llvm.dbg.value(metadata !{%struct.insn_chain* %call}, i64 0, metadata !574), !dbg !959
  %tobool = icmp eq i32 %before_p, 0, !dbg !960
  br i1 %tobool, label %if.else131, label %if.then, !dbg !960

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 1, !dbg !961
  %1 = load %struct.insn_chain** %prev, align 8, !dbg !961, !tbaa !747
  %prev2 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 1, !dbg !961
  store %struct.insn_chain* %1, %struct.insn_chain** %prev2, align 8, !dbg !961, !tbaa !747
  %cmp = icmp eq %struct.insn_chain* %1, null, !dbg !962
  br i1 %cmp, label %if.else, label %if.then4, !dbg !962

if.then4:                                         ; preds = %if.then
  %next = getelementptr inbounds %struct.insn_chain* %1, i64 0, i32 0, !dbg !963
  store %struct.insn_chain* %call, %struct.insn_chain** %next, align 8, !dbg !963, !tbaa !747
  br label %if.end, !dbg !963

if.else:                                          ; preds = %if.then
  store %struct.insn_chain* %call, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !964, !tbaa !747
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  store %struct.insn_chain* %call, %struct.insn_chain** %prev, align 8, !dbg !965, !tbaa !747
  %next7 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 0, !dbg !966
  store %struct.insn_chain* %chain, %struct.insn_chain** %next7, align 8, !dbg !966, !tbaa !747
  %call8 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %pat, %struct.rtx_def* %0) #5, !dbg !967
  %insn9 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 4, !dbg !967
  store %struct.rtx_def* %call8, %struct.rtx_def** %insn9, align 8, !dbg !967, !tbaa !747
  %live_throughout = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 5, !dbg !968
  %live_throughout10 = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 5, !dbg !968
  tail call void @bitmap_copy(%struct.bitmap_head_def* %live_throughout, %struct.bitmap_head_def* %live_throughout10) #5, !dbg !968
  %2 = load %struct.rtx_def** %insn1, align 8, !dbg !969, !tbaa !747
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 6, !dbg !969
  %link.0.in259 = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !969
  %link.0260 = load %struct.rtx_def** %link.0.in259, align 8, !dbg !969
  %tobool12261 = icmp eq %struct.rtx_def* %link.0260, null, !dbg !969
  br i1 %tobool12261, label %for.end116, label %for.body, !dbg !969

for.body:                                         ; preds = %if.end, %for.inc112
  %link.0262 = phi %struct.rtx_def* [ %link.0, %for.inc112 ], [ %link.0260, %if.end ]
  %3 = bitcast %struct.rtx_def* %link.0262 to i32*, !dbg !970
  %bf.load = load i32* %3, align 8, !dbg !970
  %bf.clear = and i32 %bf.load, 16711680, !dbg !970
  %cmp13 = icmp eq i32 %bf.clear, 65536, !dbg !970
  br i1 %cmp13, label %if.then14, label %for.inc112, !dbg !970

if.then14:                                        ; preds = %for.body
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %link.0262, i64 0, i32 1, i64 0, !dbg !971
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !971
  %4 = load %struct.rtx_def** %rtx17, align 8, !dbg !971, !tbaa !747
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %4}, i64 0, metadata !577), !dbg !971
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !972
  %bf.load18 = load i32* %5, align 8, !dbg !972
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !972
  %cmp20 = icmp eq i32 %bf.clear19, 61, !dbg !972
  br i1 %cmp20, label %if.end22, label %if.then21, !dbg !972

if.then21:                                        ; preds = %if.then14
  tail call void @fancy_abort(i8* getelementptr inbounds ([55 x i8]* @.str, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.insert_one_insn, i64 0, i64 0)) #6, !dbg !973
  unreachable, !dbg !973

if.end22:                                         ; preds = %if.then14
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0, !dbg !974
  %rtuint = bitcast %union.rtunion_def* %arrayidx24 to i32*, !dbg !974
  %6 = load i32* %rtuint, align 4, !dbg !974, !tbaa !669
  tail call void @llvm.dbg.value(metadata !{i32 %6}, i64 0, metadata !581), !dbg !974
  %cmp25 = icmp sgt i32 %6, 52, !dbg !975
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !975

if.then26:                                        ; preds = %if.end22
  %idxprom = sext i32 %6 to i64, !dbg !976
  %7 = load i16** @reg_renumber, align 8, !dbg !976, !tbaa !747
  %arrayidx27 = getelementptr inbounds i16* %7, i64 %idxprom, !dbg !976
  %8 = load i16* %arrayidx27, align 2, !dbg !976, !tbaa !750
  %conv = sext i16 %8 to i32, !dbg !976
  tail call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !581), !dbg !976
  br label %if.end28, !dbg !976

if.end28:                                         ; preds = %if.then26, %if.end22
  %regno.0 = phi i32 [ %conv, %if.then26 ], [ %6, %if.end22 ]
  %cmp29 = icmp slt i32 %regno.0, 0, !dbg !977
  br i1 %cmp29, label %for.inc112, label %if.end32, !dbg !977

if.end32:                                         ; preds = %if.end28
  %regno.0.off = add i32 %regno.0, -8, !dbg !978
  %9 = icmp ult i32 %regno.0.off, 8, !dbg !978
  %regno.0.off246 = add i32 %regno.0, -21, !dbg !978
  %10 = icmp ult i32 %regno.0.off246, 8, !dbg !978
  %or.cond = or i1 %9, %10, !dbg !978
  %regno.0.off247 = add i32 %regno.0, -45, !dbg !978
  %11 = icmp ult i32 %regno.0.off247, 8, !dbg !978
  %or.cond253 = or i1 %or.cond, %11, !dbg !978
  %regno.0.off248 = add i32 %regno.0, -29, !dbg !978
  %12 = icmp ult i32 %regno.0.off248, 8, !dbg !978
  %or.cond255 = or i1 %or.cond253, %12, !dbg !978
  %bf.lshr55 = lshr i32 %bf.load18, 16, !dbg !978
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !978
  br i1 %or.cond255, label %cond.true, label %cond.false, !dbg !978

cond.true:                                        ; preds = %if.end32
  %idxprom57250 = zext i32 %bf.clear56 to i64, !dbg !978
  %arrayidx58 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom57250, !dbg !978
  %13 = load i32* %arrayidx58, align 4, !dbg !978, !tbaa !752
  %cmp59 = icmp eq i32 %13, 5, !dbg !978
  br i1 %cmp59, label %for.body108, label %lor.rhs, !dbg !978

lor.rhs:                                          ; preds = %cond.true
  %cmp66 = icmp eq i32 %13, 6, !dbg !978
  %phitmp = select i1 %cmp66, i32 2, i32 1, !dbg !978
  br label %for.body108, !dbg !978

cond.false:                                       ; preds = %if.end32
  switch i32 %bf.clear56, label %for.cond105.preheader [
    i32 18, label %cond.true73
    i32 24, label %cond.true82
  ], !dbg !978

cond.true73:                                      ; preds = %cond.false
  %14 = load i32* @target_flags, align 4, !dbg !978, !tbaa !669
  %and = lshr i32 %14, 25, !dbg !978
  %15 = and i32 %and, 1, !dbg !978
  %16 = xor i32 %15, 3, !dbg !978
  br label %for.body108, !dbg !978

cond.true82:                                      ; preds = %cond.false
  %17 = load i32* @target_flags, align 4, !dbg !978, !tbaa !669
  %and83 = lshr i32 %17, 24, !dbg !978
  %18 = and i32 %and83, 2, !dbg !978
  %19 = xor i32 %18, 6, !dbg !978
  br label %for.body108, !dbg !978

for.cond105.preheader:                            ; preds = %cond.false
  %idxprom90249 = zext i32 %bf.clear56 to i64, !dbg !978
  %arrayidx91 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom90249, !dbg !978
  %20 = load i8* %arrayidx91, align 1, !dbg !978, !tbaa !661
  %conv92 = zext i8 %20 to i32, !dbg !978
  %21 = load i32* @target_flags, align 4, !dbg !978, !tbaa !669
  %and93 = lshr i32 %21, 23, !dbg !978
  %22 = and i32 %and93, 4, !dbg !978
  %23 = add i32 %22, 4, !dbg !978
  %add = add i32 %conv92, -1, !dbg !978
  %sub = add i32 %add, %23, !dbg !978
  %div = sdiv i32 %sub, %23, !dbg !978
  %cmp106257 = icmp sgt i32 %div, 0, !dbg !978
  br i1 %cmp106257, label %for.body108, label %for.inc112, !dbg !978

for.body108:                                      ; preds = %cond.true, %lor.rhs, %cond.true73, %cond.true82, %for.cond105.preheader, %for.body108
  %i.0258.in = phi i32 [ %i.0258, %for.body108 ], [ %div, %for.cond105.preheader ], [ %19, %cond.true82 ], [ %16, %cond.true73 ], [ %phitmp, %lor.rhs ], [ 2, %cond.true ]
  %i.0258 = add nsw i32 %i.0258.in, -1, !dbg !978
  %add110 = add nsw i32 %i.0258, %regno.0, !dbg !980
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %live_throughout, i32 %add110) #5, !dbg !980
  %cmp106 = icmp sgt i32 %i.0258, 0, !dbg !978
  br i1 %cmp106, label %for.body108, label %for.inc112, !dbg !978

for.inc112:                                       ; preds = %for.cond105.preheader, %for.body108, %for.body, %if.end28
  %arrayidx114 = getelementptr inbounds %struct.rtx_def* %link.0262, i64 0, i32 1, i64 1, !dbg !969
  %link.0.in = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !969
  %link.0 = load %struct.rtx_def** %link.0.in, align 8, !dbg !969
  %tobool12 = icmp eq %struct.rtx_def* %link.0, null, !dbg !969
  br i1 %tobool12, label %for.end116, label %for.body, !dbg !969

for.end116:                                       ; preds = %for.inc112, %if.end
  %dead_or_set = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 6, !dbg !981
  tail call void @bitmap_clear(%struct.bitmap_head_def* %dead_or_set) #5, !dbg !981
  %24 = load %struct.rtx_def** %insn1, align 8, !dbg !982, !tbaa !747
  %block = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 3, !dbg !982
  %25 = load i32* %block, align 4, !dbg !982, !tbaa !669
  %idxprom118 = sext i32 %25 to i64, !dbg !982
  %26 = load %struct.varray_head_tag** @basic_block_info, align 8, !dbg !982, !tbaa !747
  %data = getelementptr inbounds %struct.varray_head_tag* %26, i64 0, i32 4, !dbg !982
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*, !dbg !982
  %arrayidx119 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom118, !dbg !982
  %27 = load %struct.basic_block_def** %arrayidx119, align 8, !dbg !982, !tbaa !747
  %head = getelementptr inbounds %struct.basic_block_def* %27, i64 0, i32 0, !dbg !982
  %28 = load %struct.rtx_def** %head, align 8, !dbg !982, !tbaa !747
  %cmp120 = icmp eq %struct.rtx_def* %24, %28, !dbg !982
  br i1 %cmp120, label %if.then122, label %if.end170, !dbg !982

if.then122:                                       ; preds = %for.end116
  %29 = load %struct.rtx_def** %insn9, align 8, !dbg !983, !tbaa !747
  store %struct.rtx_def* %29, %struct.rtx_def** %head, align 8, !dbg !983, !tbaa !747
  br label %if.end170, !dbg !983

if.else131:                                       ; preds = %entry
  %next132 = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 0, !dbg !984
  %30 = load %struct.insn_chain** %next132, align 8, !dbg !984, !tbaa !747
  %next133 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 0, !dbg !984
  store %struct.insn_chain* %30, %struct.insn_chain** %next133, align 8, !dbg !984, !tbaa !747
  %cmp135 = icmp eq %struct.insn_chain* %30, null, !dbg !986
  br i1 %cmp135, label %if.end140, label %if.then137, !dbg !986

if.then137:                                       ; preds = %if.else131
  %prev139 = getelementptr inbounds %struct.insn_chain* %30, i64 0, i32 1, !dbg !987
  store %struct.insn_chain* %call, %struct.insn_chain** %prev139, align 8, !dbg !987, !tbaa !747
  br label %if.end140, !dbg !987

if.end140:                                        ; preds = %if.else131, %if.then137
  store %struct.insn_chain* %call, %struct.insn_chain** %next132, align 8, !dbg !988, !tbaa !747
  %prev142 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 1, !dbg !989
  store %struct.insn_chain* %chain, %struct.insn_chain** %prev142, align 8, !dbg !989, !tbaa !747
  %call143 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %pat, %struct.rtx_def* %0) #5, !dbg !990
  %insn144 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 4, !dbg !990
  store %struct.rtx_def* %call143, %struct.rtx_def** %insn144, align 8, !dbg !990, !tbaa !747
  %live_throughout145 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 5, !dbg !991
  %live_throughout146 = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 5, !dbg !991
  tail call void @bitmap_copy(%struct.bitmap_head_def* %live_throughout145, %struct.bitmap_head_def* %live_throughout146) #5, !dbg !991
  %31 = load %struct.rtx_def** %insn1, align 8, !dbg !992, !tbaa !747
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 3, !dbg !992
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**, !dbg !992
  %32 = load %struct.rtx_def** %rtx150, align 8, !dbg !992, !tbaa !747
  %33 = bitcast %struct.bitmap_head_def* %live_throughout145 to i8*, !dbg !992
  tail call void @note_stores(%struct.rtx_def* %32, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @add_stored_regs, i8* %33) #5, !dbg !992
  %dead_or_set152 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 6, !dbg !993
  tail call void @bitmap_clear(%struct.bitmap_head_def* %dead_or_set152) #5, !dbg !993
  %34 = load %struct.rtx_def** %insn1, align 8, !dbg !994, !tbaa !747
  %block154 = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 3, !dbg !994
  %35 = load i32* %block154, align 4, !dbg !994, !tbaa !669
  %idxprom155 = sext i32 %35 to i64, !dbg !994
  %36 = load %struct.varray_head_tag** @basic_block_info, align 8, !dbg !994, !tbaa !747
  %data156 = getelementptr inbounds %struct.varray_head_tag* %36, i64 0, i32 4, !dbg !994
  %bb157 = bitcast %union.varray_data_tag* %data156 to [1 x %struct.basic_block_def*]*, !dbg !994
  %arrayidx158 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb157, i64 0, i64 %idxprom155, !dbg !994
  %37 = load %struct.basic_block_def** %arrayidx158, align 8, !dbg !994, !tbaa !747
  %end = getelementptr inbounds %struct.basic_block_def* %37, i64 0, i32 1, !dbg !994
  %38 = load %struct.rtx_def** %end, align 8, !dbg !994, !tbaa !747
  %cmp159 = icmp eq %struct.rtx_def* %34, %38, !dbg !994
  br i1 %cmp159, label %if.then161, label %if.end170, !dbg !994

if.then161:                                       ; preds = %if.end140
  %39 = load %struct.rtx_def** %insn144, align 8, !dbg !995, !tbaa !747
  store %struct.rtx_def* %39, %struct.rtx_def** %end, align 8, !dbg !995, !tbaa !747
  br label %if.end170, !dbg !995

if.end170:                                        ; preds = %if.end140, %if.then161, %for.end116, %if.then122
  %40 = phi i32 [ %35, %if.end140 ], [ %35, %if.then161 ], [ %25, %for.end116 ], [ %25, %if.then122 ]
  %block172 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 3, !dbg !996
  store i32 %40, i32* %block172, align 4, !dbg !996, !tbaa !669
  %is_caller_save_insn = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 11, !dbg !997
  %bf.load173 = load i8* %is_caller_save_insn, align 2, !dbg !997
  %bf.set = or i8 %bf.load173, 8, !dbg !997
  store i8 %bf.set, i8* %is_caller_save_insn, align 2, !dbg !997
  %insn175 = getelementptr inbounds %struct.insn_chain* %call, i64 0, i32 4, !dbg !998
  %41 = load %struct.rtx_def** %insn175, align 8, !dbg !998, !tbaa !747
  %arrayidx177 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 4, !dbg !998
  %rtint = bitcast %union.rtunion_def* %arrayidx177 to i32*, !dbg !998
  store i32 %code, i32* %rtint, align 4, !dbg !998, !tbaa !669
  ret %struct.insn_chain* %call, !dbg !999
}
