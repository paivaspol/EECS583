define internal fastcc void @store_split_bit_field(%struct.rtx_def* %op0, i64 %bitsize, i64 %bitpos, %struct.rtx_def* %value) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %op0}, i64 0, metadata !2218), !dbg !4066
  tail call void @llvm.dbg.value(metadata !{i64 %bitsize}, i64 0, metadata !2219), !dbg !4067
  tail call void @llvm.dbg.value(metadata !{i64 %bitpos}, i64 0, metadata !2220), !dbg !4067
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %value}, i64 0, metadata !2221), !dbg !4068
  tail call void @llvm.dbg.value(metadata !1533, i64 0, metadata !2223), !dbg !4069
  %0 = bitcast %struct.rtx_def* %op0 to i32*, !dbg !4070
  %bf.load = load i32* %0, align 8, !dbg !4070
  %bf.clear = and i32 %bf.load, 65535, !dbg !4070
  switch i32 %bf.clear, label %if.else [
    i32 61, label %if.then
    i32 63, label %if.then
  ], !dbg !4070

if.then:                                          ; preds = %entry, %entry
  %1 = load i32* @target_flags, align 4, !dbg !4071, !tbaa !2259
  %and = lshr i32 %1, 20, !dbg !4071
  %2 = and i32 %and, 32, !dbg !4071
  %3 = add i32 %2, 32, !dbg !4071
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !2222), !dbg !4071
  br label %if.end, !dbg !4071

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1, !dbg !4072
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !4072
  %4 = load %struct.mem_attrs** %rtmem, align 8, !dbg !4072, !tbaa !2258
  %cmp4 = icmp eq %struct.mem_attrs* %4, null, !dbg !4072
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !4072

cond.true:                                        ; preds = %if.else
  %align = getelementptr inbounds %struct.mem_attrs* %4, i64 0, i32 4, !dbg !4072
  %5 = load i32* %align, align 4, !dbg !4072, !tbaa !2259
  br label %cond.end, !dbg !4072

cond.end:                                         ; preds = %if.else, %cond.true
  %cond8 = phi i32 [ %5, %cond.true ], [ 8, %if.else ], !dbg !4072
  %6 = load i32* @target_flags, align 4, !dbg !4072, !tbaa !2259
  %and9 = lshr i32 %6, 20, !dbg !4072
  %7 = and i32 %and9, 32, !dbg !4072
  %8 = add i32 %7, 32, !dbg !4072
  %cmp12.not = icmp uge i32 %cond8, %8, !dbg !4072
  %brmerge = or i1 %cmp12.not, %cmp4, !dbg !4072
  %.mux = select i1 %cmp12.not, i32 %8, i32 8, !dbg !4072
  br i1 %brmerge, label %if.end, label %cond.true18, !dbg !4072

cond.true18:                                      ; preds = %cond.end
  %align22 = getelementptr inbounds %struct.mem_attrs* %4, i64 0, i32 4, !dbg !4072
  %9 = load i32* %align22, align 4, !dbg !4072, !tbaa !2259
  br label %if.end, !dbg !4072

if.end:                                           ; preds = %cond.end, %cond.true18, %if.then
  %unit.0 = phi i32 [ %3, %if.then ], [ %9, %cond.true18 ], [ %.mux, %cond.end ]
  %10 = bitcast %struct.rtx_def* %value to i32*, !dbg !4073
  %bf.load32 = load i32* %10, align 8, !dbg !4073
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4073
  switch i32 %bf.clear33, label %while.cond.preheader [
    i32 70, label %if.then89
    i32 55, label %if.then66
    i32 56, label %if.then66
    i32 58, label %if.then66
    i32 67, label %if.then66
    i32 68, label %if.then66
    i32 134, label %if.then66
    i32 140, label %if.then66
  ], !dbg !4073

if.then66:                                        ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %11 = load i32* @word_mode, align 4, !dbg !4074, !tbaa !2251
  %call = tail call %struct.rtx_def* @gen_lowpart_common(i32 %11, %struct.rtx_def* %value) #5, !dbg !4074
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !2224), !dbg !4074
  %tobool67 = icmp eq %struct.rtx_def* %call, null, !dbg !4075
  %cmp69 = icmp eq %struct.rtx_def* %call, %value, !dbg !4075
  %or.cond = or i1 %tobool67, %cmp69, !dbg !4075
  br i1 %or.cond, label %if.else71, label %while.cond.preheader, !dbg !4075

if.else71:                                        ; preds = %if.then66
  %12 = load i32* @word_mode, align 4, !dbg !4076, !tbaa !2251
  %bf.load72 = load i32* %10, align 8, !dbg !4077
  %bf.lshr = lshr i32 %bf.load72, 16, !dbg !4077
  %bf.clear73 = and i32 %bf.lshr, 255, !dbg !4077
  %cmp74 = icmp eq i32 %bf.clear73, 0, !dbg !4077
  %.bf.clear73 = select i1 %cmp74, i32 %12, i32 %bf.clear73, !dbg !4077
  %call82 = tail call %struct.rtx_def* @force_reg(i32 %.bf.clear73, %struct.rtx_def* %value) #5, !dbg !4077
  %call83 = tail call %struct.rtx_def* @gen_lowpart_common(i32 %12, %struct.rtx_def* %call82) #5, !dbg !4077
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call83}, i64 0, metadata !2221), !dbg !4077
  br label %while.cond.preheader

if.then89:                                        ; preds = %if.end
  %call90 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %value) #5, !dbg !4078
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call90}, i64 0, metadata !2221), !dbg !4078
  br label %while.cond.preheader, !dbg !4078

while.cond.preheader:                             ; preds = %if.end, %if.then89, %if.else71, %if.then66
  %value.addr.0.ph = phi %struct.rtx_def* [ %call, %if.then66 ], [ %call83, %if.else71 ], [ %call90, %if.then89 ], [ %value, %if.end ]
  %cmp93239 = icmp eq i64 %bitsize, 0, !dbg !4079
  br i1 %cmp93239, label %while.end, label %while.body.lr.ph, !dbg !4079

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %conv97 = zext i32 %unit.0 to i64, !dbg !4080
  %13 = bitcast %struct.rtx_def* %value.addr.0.ph to i32*, !dbg !4081
  %rtwint = getelementptr inbounds %struct.rtx_def* %value.addr.0.ph, i64 0, i32 1, i64 0, i32 0, !dbg !4083
  %arrayidx148 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1, !dbg !4084
  %rtuint = bitcast %union.rtunion_def* %arrayidx148 to i32*, !dbg !4084
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0, !dbg !4085
  %rtx = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !4085
  br label %while.body, !dbg !4079

while.body:                                       ; preds = %if.end178, %while.body.lr.ph
  %bitsdone.0240 = phi i64 [ 0, %while.body.lr.ph ], [ %phitmp, %if.end178 ]
  %add = add i64 %bitsdone.0240, %bitpos, !dbg !4080
  %div = udiv i64 %add, %conv97, !dbg !4080
  tail call void @llvm.dbg.value(metadata !{i64 %div}, i64 0, metadata !2231), !dbg !4080
  %rem = urem i64 %add, %conv97, !dbg !4086
  tail call void @llvm.dbg.value(metadata !{i64 %rem}, i64 0, metadata !2230), !dbg !4086
  %sub = sub i64 %bitsize, %bitsdone.0240, !dbg !4087
  %14 = load i32* @target_flags, align 4, !dbg !4087, !tbaa !2259
  %and102 = lshr i32 %14, 20, !dbg !4087
  %15 = and i32 %and102, 32, !dbg !4087
  %16 = add i32 %15, 32, !dbg !4087
  %conv105238 = zext i32 %16 to i64, !dbg !4087
  %cmp106 = icmp ult i64 %sub, %conv105238, !dbg !4087
  %sub.conv105238 = select i1 %cmp106, i64 %sub, i64 %conv105238, !dbg !4087
  tail call void @llvm.dbg.value(metadata !{i64 %sub.conv105238}, i64 0, metadata !2226), !dbg !4087
  %sub119 = sub i64 %conv97, %rem, !dbg !4088
  %cmp120 = icmp ult i64 %sub.conv105238, %sub119, !dbg !4088
  %cond127 = select i1 %cmp120, i64 %sub.conv105238, i64 %sub119, !dbg !4088
  tail call void @llvm.dbg.value(metadata !{i64 %cond127}, i64 0, metadata !2226), !dbg !4088
  %bf.load128 = load i32* %13, align 8, !dbg !4081
  %bf.clear129 = and i32 %bf.load128, 65535, !dbg !4081
  %cmp130 = icmp eq i32 %bf.clear129, 54, !dbg !4081
  br i1 %cmp130, label %if.then132, label %if.else138, !dbg !4081

if.then132:                                       ; preds = %while.body
  %17 = load i64* %rtwint, align 8, !dbg !4083, !tbaa !2463
  %shr = lshr i64 %17, %bitsdone.0240, !dbg !4083
  %shl = shl i64 1, %cond127, !dbg !4083
  %sub135 = add nsw i64 %shl, -1, !dbg !4083
  %and136 = and i64 %shr, %sub135, !dbg !4083
  %call137 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and136) #5, !dbg !4083
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call137}, i64 0, metadata !2228), !dbg !4083
  br label %if.end141, !dbg !4083

if.else138:                                       ; preds = %while.body
  %18 = load i32* @word_mode, align 4, !dbg !4089, !tbaa !2251
  %call140 = tail call fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %18, %struct.rtx_def* %value.addr.0.ph, i64 0, i64 %cond127, i64 %bitsdone.0240, %struct.rtx_def* null, i32 1) #7, !dbg !4089
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call140}, i64 0, metadata !2228), !dbg !4089
  br label %if.end141

if.end141:                                        ; preds = %if.else138, %if.then132
  %part.0 = phi %struct.rtx_def* [ %call137, %if.then132 ], [ %call140, %if.else138 ]
  %bf.load142 = load i32* %0, align 8, !dbg !4090
  %bf.clear143 = and i32 %bf.load142, 65535, !dbg !4090
  switch i32 %bf.clear143, label %if.end178 [
    i32 63, label %if.then146
    i32 61, label %if.then170
  ], !dbg !4090

if.then146:                                       ; preds = %if.end141
  %19 = load i32* %rtuint, align 4, !dbg !4084, !tbaa !2259
  %20 = load i32* @target_flags, align 4, !dbg !4084, !tbaa !2259
  %and149 = lshr i32 %20, 23, !dbg !4084
  %21 = and i32 %and149, 4, !dbg !4084
  %22 = add i32 %21, 4, !dbg !4084
  %div152 = udiv i32 %19, %22, !dbg !4084
  %conv153 = zext i32 %div152 to i64, !dbg !4084
  %add154 = add i64 %conv153, %div, !dbg !4084
  %conv155 = trunc i64 %add154 to i32, !dbg !4084
  tail call void @llvm.dbg.value(metadata !{i32 %conv155}, i64 0, metadata !2232), !dbg !4084
  %23 = load %struct.rtx_def** %rtx, align 8, !dbg !4085, !tbaa !2258
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !4085
  %bf.load161 = load i32* %24, align 8, !dbg !4085
  %bf.lshr162 = lshr i32 %bf.load161, 16, !dbg !4085
  %bf.clear163 = and i32 %bf.lshr162, 255, !dbg !4085
  %call164 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %23, i32 %conv155, i32 %bf.clear163) #5, !dbg !4085
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call164}, i64 0, metadata !2229), !dbg !4085
  tail call void @llvm.dbg.value(metadata !2531, i64 0, metadata !2231), !dbg !4091
  br label %if.end178, !dbg !4092

if.then170:                                       ; preds = %if.end141
  %conv171 = trunc i64 %div to i32, !dbg !4093
  %bf.lshr173 = lshr i32 %bf.load142, 16, !dbg !4093
  %bf.clear174 = and i32 %bf.lshr173, 255, !dbg !4093
  %call175 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %conv171, i32 %bf.clear174) #5, !dbg !4093
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call175}, i64 0, metadata !2229), !dbg !4093
  tail call void @llvm.dbg.value(metadata !2531, i64 0, metadata !2231), !dbg !4095
  br label %if.end178, !dbg !4096

if.end178:                                        ; preds = %if.end141, %if.then170, %if.then146
  %word95.0 = phi %struct.rtx_def* [ %call164, %if.then146 ], [ %call175, %if.then170 ], [ %op0, %if.end141 ]
  %offset.0 = phi i64 [ 0, %if.then146 ], [ 0, %if.then170 ], [ %div, %if.end141 ]
  %mul = mul i64 %offset.0, %conv97, !dbg !4097
  %div180 = lshr i64 %mul, 3, !dbg !4097
  tail call fastcc void @store_fixed_bit_field(%struct.rtx_def* %word95.0, i64 %div180, i64 %cond127, i64 %rem, %struct.rtx_def* %part.0) #7, !dbg !4097
  %add182 = add i64 %cond127, %bitsdone.0240, !dbg !4098
  %phitmp = and i64 %add182, 4294967295, !dbg !4099
  %cmp93 = icmp ult i64 %phitmp, %bitsize, !dbg !4079
  br i1 %cmp93, label %while.body, label %while.end, !dbg !4079

while.end:                                        ; preds = %if.end178, %while.cond.preheader
  ret void, !dbg !4100
}
