define %struct.rtx_def* @expand_mult(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %alg = alloca %struct.algorithm, align 4
  %alg2 = alloca %struct.algorithm, align 4
  %0 = bitcast %struct.rtx_def* %op1 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 55
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %idxprom447 = zext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom447
  %1 = load i32* %arrayidx, align 4, !tbaa !6
  %cmp3 = icmp eq i32 %1, 1
  br i1 %cmp3, label %land.lhs.true4, label %if.else

land.lhs.true4:                                   ; preds = %land.lhs.true
  %2 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %2, 20
  %3 = and i32 %and, 32
  %4 = add i32 %3, 32
  %cmp5 = icmp ult i32 %4, 33
  br i1 %cmp5, label %land.lhs.true6, label %if.else

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 2, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !8
  %cmp8 = icmp eq i64 %5, 0
  br i1 %cmp8, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true6
  %rtwint11 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 1, i32 0
  %6 = load i64* %rtwint11, align 8, !tbaa !8
  %call = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %6) #4
  br label %if.end28

if.else:                                          ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  %idxprom12 = sext i32 %mode to i64
  %arrayidx13 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom12
  %7 = load i16* %arrayidx13, align 2, !tbaa !5
  %cmp14 = icmp ugt i16 %7, 32
  %cmp19 = icmp eq i32 %bf.clear, 54
  %or.cond461 = and i1 %cmp14, %cmp19
  br i1 %or.cond461, label %land.lhs.true21, label %if.end28

land.lhs.true21:                                  ; preds = %if.else
  %rtwint24 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint24, align 8, !tbaa !8
  %cmp25 = icmp slt i64 %8, 0
  %.op1 = select i1 %cmp25, %struct.rtx_def* null, %struct.rtx_def* %op1
  br label %if.end28

if.end28:                                         ; preds = %land.lhs.true21, %if.else, %if.then
  %const_op1.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %op1, %if.else ], [ %.op1, %land.lhs.true21 ]
  %tobool29 = icmp eq %struct.rtx_def* %const_op1.0, null
  br i1 %tobool29, label %if.end289, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %if.end28
  %9 = bitcast %struct.rtx_def* %const_op1.0 to i32*
  %bf.load31 = load i32* %9, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 54
  br i1 %cmp33, label %land.lhs.true35, label %if.end289

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %tobool36 = icmp eq i32 %unsignedp, 0
  %10 = load i32* @flag_trapv, align 4, !tbaa !4
  %tobool37 = icmp ne i32 %10, 0
  %or.cond = and i1 %tobool36, %tobool37
  br i1 %or.cond, label %if.end289, label %if.then38

if.then38:                                        ; preds = %land.lhs.true35
  %11 = bitcast %struct.algorithm* %alg to i8*
  call void @llvm.lifetime.start(i64 324, i8* %11) #3
  %12 = bitcast %struct.algorithm* %alg2 to i8*
  call void @llvm.lifetime.start(i64 324, i8* %12) #3
  %rtwint41 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %13 = load i64* %rtwint41, align 8, !tbaa !8
  %call42 = call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0) #4
  %call43 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %call42, %struct.rtx_def* %op1) #4
  %call44 = call i32 @rtx_cost(%struct.rtx_def* %call43, i32 47) #4
  %14 = load i32* @add_cost, align 4, !tbaa !4
  %mul = mul nsw i32 %14, 12
  %cmp45 = icmp slt i32 %mul, %call44
  %mul.call44 = select i1 %cmp45, i32 %mul, i32 %call44
  call fastcc void @synth_mult(%struct.algorithm* %alg, i64 %13, i32 %mul.call44) #6
  %idxprom49 = sext i32 %mode to i64
  %arrayidx50 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom49
  %15 = load i16* %arrayidx50, align 2, !tbaa !5
  %cmp52 = icmp ult i16 %15, 33
  br i1 %cmp52, label %if.then54, label %if.then38.if.end73_crit_edge

if.then38.if.end73_crit_edge:                     ; preds = %if.then38
  %cost75.pre = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 0
  %cost86.pre = getelementptr inbounds %struct.algorithm* %alg2, i64 0, i32 0
  br label %if.end73

if.then54:                                        ; preds = %if.then38
  %sub = sub nsw i64 0, %13
  %cost = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 0
  %16 = load i16* %cost, align 4, !tbaa !5
  %conv55 = sext i16 %16 to i32
  %cmp56 = icmp slt i32 %conv55, %mul.call44
  %conv55.mul.call44 = select i1 %cmp56, i32 %conv55, i32 %mul.call44
  %17 = load i32* @negate_cost, align 4, !tbaa !4
  %sub64 = sub nsw i32 %conv55.mul.call44, %17
  call fastcc void @synth_mult(%struct.algorithm* %alg2, i64 %sub, i32 %sub64) #6
  %cost65 = getelementptr inbounds %struct.algorithm* %alg2, i64 0, i32 0
  %18 = load i16* %cost65, align 4, !tbaa !5
  %conv66 = sext i16 %18 to i32
  %19 = load i32* @negate_cost, align 4, !tbaa !4
  %add = add nsw i32 %conv66, %19
  %cmp69 = icmp slt i32 %add, %conv55
  br i1 %cmp69, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.then54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 324, i32 4, i1 false), !tbaa.struct !9
  br label %if.end73

if.end73:                                         ; preds = %if.then38.if.end73_crit_edge, %if.then54, %if.then71
  %cost86.pre-phi = phi i16* [ %cost86.pre, %if.then38.if.end73_crit_edge ], [ %cost65, %if.then54 ], [ %cost65, %if.then71 ]
  %cost75.pre-phi = phi i16* [ %cost75.pre, %if.then38.if.end73_crit_edge ], [ %cost, %if.then54 ], [ %cost, %if.then71 ]
  %variant.0 = phi i32 [ 0, %if.then38.if.end73_crit_edge ], [ 0, %if.then54 ], [ 1, %if.then71 ]
  %sub74 = add nsw i64 %13, -1
  %20 = bitcast i16* %cost75.pre-phi to i32*
  %21 = load i32* %20, align 4
  %sext = shl i32 %21, 16
  %conv76 = ashr exact i32 %sext, 16
  %cmp77 = icmp slt i32 %conv76, %mul.call44
  %conv76.mul.call44 = select i1 %cmp77, i32 %conv76, i32 %mul.call44
  %22 = load i32* @add_cost, align 4, !tbaa !4
  %sub85 = sub nsw i32 %conv76.mul.call44, %22
  call fastcc void @synth_mult(%struct.algorithm* %alg2, i64 %sub74, i32 %sub85) #6
  %23 = load i16* %cost86.pre-phi, align 4, !tbaa !5
  %conv87 = sext i16 %23 to i32
  %24 = load i32* @add_cost, align 4, !tbaa !4
  %add88 = add nsw i32 %conv87, %24
  %cmp91 = icmp slt i32 %add88, %conv76
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 324, i32 4, i1 false), !tbaa.struct !9
  %25 = load i32* %20, align 4
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end73
  %.in462 = phi i32 [ %25, %if.then93 ], [ %21, %if.end73 ]
  %.in = phi i32 [ %25, %if.then93 ], [ %21, %if.end73 ]
  %variant.1 = phi i32 [ 2, %if.then93 ], [ %variant.0, %if.end73 ]
  %26 = lshr i32 %.in462, 16
  %27 = trunc i32 %26 to i16
  %sext458 = shl i32 %.in, 16
  %conv96 = ashr exact i32 %sext458, 16
  %cmp97 = icmp slt i32 %conv96, %mul.call44
  br i1 %cmp97, label %if.then99, label %if.end289

if.then99:                                        ; preds = %if.end94
  %call100 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call42, i32 0) #4
  %28 = bitcast %struct.rtx_def* %call100 to i32*
  %bf.load101 = load i32* %28, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 66
  br i1 %cmp103, label %if.then105, label %if.end107

if.then105:                                       ; preds = %if.then99
  %call106 = call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %call100) #4
  br label %if.end107

if.end107:                                        ; preds = %if.then105, %if.then99
  %op0.addr.0 = phi %struct.rtx_def* [ %call106, %if.then105 ], [ %call100, %if.then99 ]
  %arrayidx108 = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 2, i64 0
  %29 = load i32* %arrayidx108, align 4, !tbaa !10
  switch i32 %29, label %if.else120 [
    i32 0, label %if.then111
    i32 1, label %if.then118
  ]

if.then111:                                       ; preds = %if.end107
  %30 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call112 = call %struct.rtx_def* @copy_to_mode_reg(i32 %mode, %struct.rtx_def* %30) #4
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then118, %if.then111
  %accum.1.ph = phi %struct.rtx_def* [ %call112, %if.then111 ], [ %call119, %if.then118 ]
  %val_so_far.1.ph = phi i64 [ 0, %if.then111 ], [ 1, %if.then118 ]
  %cmp124453 = icmp sgt i16 %27, 1
  br i1 %cmp124453, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sext459 = shl nuw i32 %26, 16
  %conv137 = ashr exact i32 %sext459, 16
  %sub138 = add nsw i32 %conv137, -1
  %cmp142 = icmp eq %struct.rtx_def* %target, null
  %cmp145 = icmp eq i32 %variant.1, 2
  br label %for.body

if.then118:                                       ; preds = %if.end107
  %call119 = call %struct.rtx_def* @copy_to_mode_reg(i32 %mode, %struct.rtx_def* %op0.addr.0) #4
  br label %for.cond.preheader

if.else120:                                       ; preds = %if.end107
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2446, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #5
  unreachable

for.body:                                         ; preds = %for.body.lr.ph, %if.end264
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %if.end264 ]
  %val_so_far.1456 = phi i64 [ %val_so_far.1.ph, %for.body.lr.ph ], [ %val_so_far.2, %if.end264 ]
  %accum.1455 = phi %struct.rtx_def* [ %accum.1.ph, %for.body.lr.ph ], [ %accum.2, %if.end264 ]
  %arrayidx128 = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 3, i64 %indvars.iv
  %31 = load i8* %arrayidx128, align 1, !tbaa !1
  %conv129 = sext i8 %31 to i32
  %call130 = call i32 @preserve_subexpressions_p() #4
  %tobool131 = icmp ne i32 %call130, 0
  %cond135 = select i1 %tobool131, %struct.rtx_def* null, %struct.rtx_def* %accum.1455
  %32 = trunc i64 %indvars.iv to i32
  %cmp139 = icmp ne i32 %32, %sub138
  %or.cond448 = or i1 %cmp139, %cmp142
  %or.cond449 = or i1 %or.cond448, %cmp145
  br i1 %or.cond449, label %cond.end151, label %land.lhs.true147

land.lhs.true147:                                 ; preds = %for.body
  %. = select i1 %tobool131, %struct.rtx_def* null, %struct.rtx_def* %target
  br label %cond.end151

cond.end151:                                      ; preds = %for.body, %land.lhs.true147
  %cond152 = phi %struct.rtx_def* [ null, %for.body ], [ %., %land.lhs.true147 ]
  %arrayidx160 = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 2, i64 %indvars.iv
  %33 = load i32* %arrayidx160, align 4, !tbaa !10
  switch i32 %33, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb164
    i32 4, label %sw.bb178
    i32 7, label %sw.bb192
    i32 8, label %sw.bb206
    i32 5, label %sw.bb220
    i32 6, label %sw.bb234
  ]

sw.bb:                                            ; preds = %cond.end151
  %conv161 = sext i8 %31 to i64
  %call162 = call %union.tree_node* @build_int_2_wide(i64 %conv161, i64 0) #4
  %call163 = call %struct.rtx_def* @expand_shift(i32 82, i32 %mode, %struct.rtx_def* %accum.1455, %union.tree_node* %call162, %struct.rtx_def* null, i32 0) #6
  %sh_prom = zext i32 %conv129 to i64
  %shl = shl i64 %val_so_far.1456, %sh_prom
  br label %sw.epilog

sw.bb164:                                         ; preds = %cond.end151
  %conv165 = sext i8 %31 to i64
  %call166 = call %union.tree_node* @build_int_2_wide(i64 %conv165, i64 0) #4
  %call167 = call %struct.rtx_def* @expand_shift(i32 82, i32 %mode, %struct.rtx_def* %op0.addr.0, %union.tree_node* %call166, %struct.rtx_def* null, i32 0) #6
  %call168 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %accum.1455, %struct.rtx_def* %call167) #4
  %tobool169 = icmp ne %struct.rtx_def* %cond152, null
  %cond173 = select i1 %tobool169, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call174 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call168, %struct.rtx_def* %cond173) #4
  %sh_prom175 = zext i32 %conv129 to i64
  %shl176 = shl i64 1, %sh_prom175
  %add177 = add nsw i64 %shl176, %val_so_far.1456
  br label %sw.epilog

sw.bb178:                                         ; preds = %cond.end151
  %conv179 = sext i8 %31 to i64
  %call180 = call %union.tree_node* @build_int_2_wide(i64 %conv179, i64 0) #4
  %call181 = call %struct.rtx_def* @expand_shift(i32 82, i32 %mode, %struct.rtx_def* %op0.addr.0, %union.tree_node* %call180, %struct.rtx_def* null, i32 0) #6
  %call182 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %accum.1455, %struct.rtx_def* %call181) #4
  %tobool183 = icmp ne %struct.rtx_def* %cond152, null
  %cond187 = select i1 %tobool183, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call188 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call182, %struct.rtx_def* %cond187) #4
  %sh_prom189 = zext i32 %conv129 to i64
  %shl190 = shl i64 1, %sh_prom189
  %sub191 = sub nsw i64 %val_so_far.1456, %shl190
  br label %sw.epilog

sw.bb192:                                         ; preds = %cond.end151
  %conv193 = sext i8 %31 to i64
  %call194 = call %union.tree_node* @build_int_2_wide(i64 %conv193, i64 0) #4
  %call195 = call %struct.rtx_def* @expand_shift(i32 82, i32 %mode, %struct.rtx_def* %accum.1455, %union.tree_node* %call194, %struct.rtx_def* %cond135, i32 0) #6
  %call196 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %call195, %struct.rtx_def* %op0.addr.0) #4
  %tobool197 = icmp ne %struct.rtx_def* %cond152, null
  %cond201 = select i1 %tobool197, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call202 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call196, %struct.rtx_def* %cond201) #4
  %sh_prom203 = zext i32 %conv129 to i64
  %shl204 = shl i64 %val_so_far.1456, %sh_prom203
  %add205 = add nsw i64 %shl204, 1
  br label %sw.epilog

sw.bb206:                                         ; preds = %cond.end151
  %conv207 = sext i8 %31 to i64
  %call208 = call %union.tree_node* @build_int_2_wide(i64 %conv207, i64 0) #4
  %call209 = call %struct.rtx_def* @expand_shift(i32 82, i32 %mode, %struct.rtx_def* %accum.1455, %union.tree_node* %call208, %struct.rtx_def* %cond135, i32 0) #6
  %call210 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %call209, %struct.rtx_def* %op0.addr.0) #4
  %tobool211 = icmp ne %struct.rtx_def* %cond152, null
  %cond215 = select i1 %tobool211, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call216 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call210, %struct.rtx_def* %cond215) #4
  %sh_prom217 = zext i32 %conv129 to i64
  %shl218 = shl i64 %val_so_far.1456, %sh_prom217
  %sub219 = add nsw i64 %shl218, -1
  br label %sw.epilog

sw.bb220:                                         ; preds = %cond.end151
  %conv221 = sext i8 %31 to i64
  %call222 = call %union.tree_node* @build_int_2_wide(i64 %conv221, i64 0) #4
  %call223 = call %struct.rtx_def* @expand_shift(i32 82, i32 %mode, %struct.rtx_def* %accum.1455, %union.tree_node* %call222, %struct.rtx_def* null, i32 0) #6
  %call224 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %accum.1455, %struct.rtx_def* %call223) #4
  %tobool225 = icmp ne %struct.rtx_def* %cond152, null
  %cond229 = select i1 %tobool225, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call230 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call224, %struct.rtx_def* %cond229) #4
  %sh_prom231 = zext i32 %conv129 to i64
  %shl232 = shl i64 %val_so_far.1456, %sh_prom231
  %add233 = add nsw i64 %shl232, %val_so_far.1456
  br label %sw.epilog

sw.bb234:                                         ; preds = %cond.end151
  %conv235 = sext i8 %31 to i64
  %call236 = call %union.tree_node* @build_int_2_wide(i64 %conv235, i64 0) #4
  %call237 = call %struct.rtx_def* @expand_shift(i32 82, i32 %mode, %struct.rtx_def* %accum.1455, %union.tree_node* %call236, %struct.rtx_def* null, i32 0) #6
  %call238 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %call237, %struct.rtx_def* %accum.1455) #4
  %tobool239 = icmp eq %struct.rtx_def* %cond152, null
  br i1 %tobool239, label %cond.false241, label %cond.end247

cond.false241:                                    ; preds = %sw.bb234
  %cond246 = select i1 %tobool131, %struct.rtx_def* null, %struct.rtx_def* %call237
  br label %cond.end247

cond.end247:                                      ; preds = %sw.bb234, %cond.false241
  %cond248 = phi %struct.rtx_def* [ %cond246, %cond.false241 ], [ %cond152, %sw.bb234 ]
  %call249 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call238, %struct.rtx_def* %cond248) #4
  %sh_prom250 = zext i32 %conv129 to i64
  %shl251 = shl i64 %val_so_far.1456, %sh_prom250
  %sub252 = sub nsw i64 %shl251, %val_so_far.1456
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end151
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2524, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #5
  unreachable

sw.epilog:                                        ; preds = %cond.end247, %sw.bb220, %sw.bb206, %sw.bb192, %sw.bb178, %sw.bb164, %sw.bb
  %accum.2 = phi %struct.rtx_def* [ %call249, %cond.end247 ], [ %call230, %sw.bb220 ], [ %call216, %sw.bb206 ], [ %call202, %sw.bb192 ], [ %call188, %sw.bb178 ], [ %call174, %sw.bb164 ], [ %call163, %sw.bb ]
  %val_so_far.2 = phi i64 [ %sub252, %cond.end247 ], [ %add233, %sw.bb220 ], [ %sub219, %sw.bb206 ], [ %add205, %sw.bb192 ], [ %sub191, %sw.bb178 ], [ %add177, %sw.bb164 ], [ %shl, %sw.bb ]
  %34 = bitcast %struct.rtx_def* %accum.2 to i32*
  %bf.load253 = load i32* %34, align 8
  %bf.clear254 = and i32 %bf.load253, 65535
  %cmp255 = icmp eq i32 %bf.clear254, 63
  br i1 %cmp255, label %if.then257, label %if.end264

if.then257:                                       ; preds = %sw.epilog
  %arrayidx259 = getelementptr inbounds %struct.rtx_def* %accum.2, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load260 = load i32* %36, align 8
  %bf.lshr261 = lshr i32 %bf.load260, 16
  %bf.clear262 = and i32 %bf.lshr261, 255
  %call263 = call %struct.rtx_def* @gen_lowpart(i32 %bf.clear262, %struct.rtx_def* %op0.addr.0) #4
  br label %if.end264

if.end264:                                        ; preds = %if.then257, %sw.epilog
  %tem.0 = phi %struct.rtx_def* [ %call263, %if.then257 ], [ %op0.addr.0, %sw.epilog ]
  %nmode.0 = phi i32 [ %bf.clear262, %if.then257 ], [ %mode, %sw.epilog ]
  %call265 = call %struct.rtx_def* @get_last_insn() #4
  %call266 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %val_so_far.2) #4
  %call267 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %nmode.0, %struct.rtx_def* %tem.0, %struct.rtx_def* %call266) #4
  %call268 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call265, i32 4, %struct.rtx_def* %call267) #4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %37 = trunc i64 %indvars.iv.next to i32
  %cmp124 = icmp slt i32 %37, %conv137
  br i1 %cmp124, label %for.body, label %for.end

for.end:                                          ; preds = %if.end264, %for.cond.preheader
  %val_so_far.1.lcssa = phi i64 [ %val_so_far.1.ph, %for.cond.preheader ], [ %val_so_far.2, %if.end264 ]
  %accum.1.lcssa = phi %struct.rtx_def* [ %accum.1.ph, %for.cond.preheader ], [ %accum.2, %if.end264 ]
  switch i32 %variant.1, label %if.end282 [
    i32 1, label %if.then271
    i32 2, label %if.then277
  ]

if.then271:                                       ; preds = %for.end
  %sub272 = sub nsw i64 0, %val_so_far.1.lcssa
  %38 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !3
  %call273 = call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %38, %struct.rtx_def* %accum.1.lcssa, %struct.rtx_def* %target, i32 0) #4
  br label %if.end282

if.then277:                                       ; preds = %for.end
  %add278 = add nsw i64 %val_so_far.1.lcssa, 1
  %call279 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %accum.1.lcssa, %struct.rtx_def* %op0.addr.0) #4
  %call280 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call279, %struct.rtx_def* %target) #4
  br label %if.end282

if.end282:                                        ; preds = %for.end, %if.then277, %if.then271
  %accum.3 = phi %struct.rtx_def* [ %call273, %if.then271 ], [ %call280, %if.then277 ], [ %accum.1.lcssa, %for.end ]
  %val_so_far.3 = phi i64 [ %sub272, %if.then271 ], [ %add278, %if.then277 ], [ %val_so_far.1.lcssa, %for.end ]
  %cmp283 = icmp eq i64 %13, %val_so_far.3
  br i1 %cmp283, label %return, label %if.then285

if.then285:                                       ; preds = %if.end282
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2558, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #5
  unreachable

if.end289:                                        ; preds = %if.end94, %land.lhs.true30, %if.end28, %land.lhs.true35
  %op0.addr.2 = phi %struct.rtx_def* [ %op0, %land.lhs.true35 ], [ %op0, %if.end28 ], [ %op0, %land.lhs.true30 ], [ %call42, %if.end94 ]
  %tobool290 = icmp eq i32 %unsignedp, 0
  %39 = load i32* @flag_trapv, align 4, !tbaa !4
  %tobool292 = icmp ne i32 %39, 0
  %or.cond307 = and i1 %tobool290, %tobool292
  br i1 %or.cond307, label %land.lhs.true293, label %cond.false299

land.lhs.true293:                                 ; preds = %if.end289
  %idxprom294 = sext i32 %mode to i64
  %arrayidx295 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom294
  %40 = load i32* %arrayidx295, align 4, !tbaa !6
  %cmp296 = icmp eq i32 %40, 1
  br i1 %cmp296, label %cond.end300, label %cond.false299

cond.false299:                                    ; preds = %if.end289, %land.lhs.true293
  br label %cond.end300

cond.end300:                                      ; preds = %land.lhs.true293, %cond.false299
  %cond301.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), %cond.false299 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), %land.lhs.true293 ]
  %cond301 = load %struct.optab** %cond301.in, align 8
  %call302 = call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond301, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 3) #4
  %cmp303 = icmp eq %struct.rtx_def* %call302, null
  br i1 %cmp303, label %if.then305, label %return

if.then305:                                       ; preds = %cond.end300
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2572, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #5
  unreachable

return:                                           ; preds = %if.end282, %cond.end300
  %retval.1 = phi %struct.rtx_def* [ %call302, %cond.end300 ], [ %accum.3, %if.end282 ]
  ret %struct.rtx_def* %retval.1
}
