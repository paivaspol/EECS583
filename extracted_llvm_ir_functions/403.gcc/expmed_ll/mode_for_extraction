define i32 @mode_for_extraction(i32 %pattern, i32 %opno) #0 {
entry:
  switch i32 %pattern, label %sw.default [
    i32 0, label %sw.epilog
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ]

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 259, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.mode_for_extraction, i64 0, i64 0)) #5
  unreachable

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb1
  %data.0 = phi %struct.insn_data* [ getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1113), %sw.bb2 ], [ getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1112), %sw.bb1 ], [ getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1114), %entry ]
  %cmp = icmp eq i32 %opno, -1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %sw.epilog
  %idxprom = sext i32 %opno to i64
  %operand = getelementptr inbounds %struct.insn_data* %data.0, i64 0, i32 3
  %0 = load %struct.insn_operand_data** %operand, align 8, !tbaa !3
  %mode = getelementptr inbounds %struct.insn_operand_data* %0, i64 %idxprom, i32 2
  %1 = bitcast [2 x i8]* %mode to i16*
  %bf.load = load i16* %1, align 8
  %cmp3 = icmp eq i16 %bf.load, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %2 = load i32* @word_mode, align 4, !tbaa !0
  br label %return

if.end5:                                          ; preds = %if.end
  %bf.cast = zext i16 %bf.load to i32
  br label %return

return:                                           ; preds = %sw.epilog, %if.end5, %if.then4
  %retval.0 = phi i32 [ %2, %if.then4 ], [ %bf.cast, %if.end5 ], [ 0, %sw.epilog ]
  ret i32 %retval.0
}
