define internal fastcc void @do_cmp_and_jump(%struct.rtx_def* %arg1, %struct.rtx_def* %arg2, i32 %op, i32 %mode, %struct.rtx_def* %label) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %arg1}, i64 0, metadata !2047), !dbg !3955
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %arg2}, i64 0, metadata !2048), !dbg !3955
  tail call void @llvm.dbg.value(metadata !{i32 %op}, i64 0, metadata !2049), !dbg !3956
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !2050), !dbg !3957
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %label}, i64 0, metadata !2051), !dbg !3955
  %idxprom = sext i32 %mode to i64, !dbg !3958
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom, !dbg !3958
  %0 = load i32* %arrayidx, align 4, !dbg !3958, !tbaa !2363
  %cmp = icmp eq i32 %0, 1, !dbg !3958
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3958

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @can_compare_p(i32 %op, i32 %mode, i32 0) #5, !dbg !3959
  %tobool = icmp eq i32 %call, 0, !dbg !3959
  br i1 %tobool, label %if.then, label %if.else, !dbg !3959

if.then:                                          ; preds = %land.lhs.true
  %call1 = tail call %struct.rtx_def* @gen_label_rtx() #5, !dbg !3960
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call1}, i64 0, metadata !2052), !dbg !3960
  switch i32 %op, label %sw.default [
    i32 111, label %sw.bb
    i32 110, label %sw.bb2
    i32 107, label %sw.bb3
    i32 105, label %sw.bb4
    i32 104, label %sw.bb5
    i32 103, label %sw.bb6
    i32 102, label %sw.bb10
  ], !dbg !3961

sw.bb:                                            ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 1, %struct.rtx_def* %arg2, %struct.rtx_def* %arg1, %struct.rtx_def* %call1, %struct.rtx_def* %label) #5, !dbg !3962
  br label %sw.epilog, !dbg !3964

sw.bb2:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 1, %struct.rtx_def* %arg1, %struct.rtx_def* %arg2, %struct.rtx_def* %label, %struct.rtx_def* %call1) #5, !dbg !3965
  br label %sw.epilog, !dbg !3966

sw.bb3:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 0, %struct.rtx_def* %arg2, %struct.rtx_def* %arg1, %struct.rtx_def* %call1, %struct.rtx_def* %label) #5, !dbg !3967
  br label %sw.epilog, !dbg !3968

sw.bb4:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 0, %struct.rtx_def* %arg1, %struct.rtx_def* %arg2, %struct.rtx_def* %call1, %struct.rtx_def* %label) #5, !dbg !3969
  br label %sw.epilog, !dbg !3970

sw.bb5:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 0, %struct.rtx_def* %arg2, %struct.rtx_def* %arg1, %struct.rtx_def* %label, %struct.rtx_def* %call1) #5, !dbg !3971
  br label %sw.epilog, !dbg !3972

sw.bb6:                                           ; preds = %if.then
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !3973, !tbaa !2258
  %cmp7 = icmp eq %struct.rtx_def* %1, %arg2, !dbg !3973
  br i1 %cmp7, label %lor.lhs.false, label %if.then9, !dbg !3973

lor.lhs.false:                                    ; preds = %sw.bb6
  %2 = bitcast %struct.rtx_def* %arg1 to i32*, !dbg !3973
  %bf.load = load i32* %2, align 8, !dbg !3973
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3973
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3973
  %cmp8 = icmp eq i32 %bf.clear, %mode, !dbg !3973
  br i1 %cmp8, label %if.end, label %if.then9, !dbg !3973

if.then9:                                         ; preds = %lor.lhs.false, %sw.bb6
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4749, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.do_cmp_and_jump, i64 0, i64 0)) #6, !dbg !3974
  unreachable, !dbg !3974

if.end:                                           ; preds = %lor.lhs.false
  tail call void @do_jump_by_parts_equality_rtx(%struct.rtx_def* %arg1, %struct.rtx_def* %call1, %struct.rtx_def* %label) #5, !dbg !3975
  br label %sw.epilog, !dbg !3976

sw.bb10:                                          ; preds = %if.then
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !3977, !tbaa !2258
  %cmp11 = icmp eq %struct.rtx_def* %3, %arg2, !dbg !3977
  br i1 %cmp11, label %lor.lhs.false12, label %if.then17, !dbg !3977

lor.lhs.false12:                                  ; preds = %sw.bb10
  %4 = bitcast %struct.rtx_def* %arg1 to i32*, !dbg !3977
  %bf.load13 = load i32* %4, align 8, !dbg !3977
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !3977
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !3977
  %cmp16 = icmp eq i32 %bf.clear15, %mode, !dbg !3977
  br i1 %cmp16, label %if.end18, label %if.then17, !dbg !3977

if.then17:                                        ; preds = %lor.lhs.false12, %sw.bb10
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4755, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.do_cmp_and_jump, i64 0, i64 0)) #6, !dbg !3978
  unreachable, !dbg !3978

if.end18:                                         ; preds = %lor.lhs.false12
  tail call void @do_jump_by_parts_equality_rtx(%struct.rtx_def* %arg1, %struct.rtx_def* %label, %struct.rtx_def* %call1) #5, !dbg !3979
  br label %sw.epilog, !dbg !3980

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 4760, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.do_cmp_and_jump, i64 0, i64 0)) #6, !dbg !3981
  unreachable, !dbg !3981

sw.epilog:                                        ; preds = %if.end18, %if.end, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  %call19 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1) #5, !dbg !3982
  br label %if.end20, !dbg !3983

if.else:                                          ; preds = %land.lhs.true, %entry
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %arg1, %struct.rtx_def* %arg2, i32 %op, %struct.rtx_def* null, i32 %mode, i32 0, %struct.rtx_def* %label) #5, !dbg !3984
  br label %if.end20

if.end20:                                         ; preds = %if.else, %sw.epilog
  ret void, !dbg !3985
}
