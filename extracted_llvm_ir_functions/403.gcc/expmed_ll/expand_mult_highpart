define %struct.rtx_def* @expand_mult_highpart(i32 %mode, %struct.rtx_def* %op0, i64 %cnst1, %struct.rtx_def* %target, i32 %unsignedp, i32 %max_cost) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %0 to i32
  %arrayidx2 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %1 = load i16* %arrayidx2, align 2, !tbaa !5
  %conv3 = zext i16 %1 to i32
  %cmp = icmp ugt i16 %1, 64
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 2790, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.expand_mult_highpart, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %call = tail call i64 @trunc_int_for_mode(i64 %cnst1, i32 %mode) #4
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #4
  %tobool = icmp ne i32 %unsignedp, 0
  %sub = ashr i64 %cnst1, 63
  %.sub = select i1 %tobool, i64 0, i64 %sub
  %call6 = tail call %struct.rtx_def* @immed_double_const(i64 %cnst1, i64 %.sub, i32 %conv) #4
  %2 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %2, 20
  %3 = and i32 %and, 32
  %4 = add i32 %3, 32
  %cmp9 = icmp ult i32 %conv3, %4
  br i1 %cmp9, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %if.end
  %idxprom11 = zext i8 %0 to i64
  %arrayidx12 = getelementptr inbounds [59 x i32]* @mul_cost, i64 0, i64 %idxprom11
  %5 = load i32* %arrayidx12, align 4, !tbaa !4
  %sub13 = add nsw i32 %conv3, -1
  %idxprom14 = sext i32 %sub13 to i64
  %arrayidx15 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom14
  %6 = load i32* %arrayidx15, align 4, !tbaa !4
  %add = add nsw i32 %6, %5
  %cmp16 = icmp slt i32 %add, %max_cost
  br i1 %cmp16, label %if.then18, label %if.end25

if.then18:                                        ; preds = %land.lhs.true
  %call19 = tail call %struct.rtx_def* @convert_to_mode(i32 %conv, %struct.rtx_def* %op0, i32 %unsignedp) #4
  %call20 = tail call %struct.rtx_def* @expand_mult(i32 %conv, %struct.rtx_def* %call19, %struct.rtx_def* %call6, %struct.rtx_def* null, i32 0) #6
  %conv21 = zext i16 %1 to i64
  %call22 = tail call %union.tree_node* @build_int_2_wide(i64 %conv21, i64 0) #4
  %call23 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %conv, %struct.rtx_def* %call20, %union.tree_node* %call22, %struct.rtx_def* null, i32 1) #6
  %call24 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %conv, %struct.rtx_def* %call23, i32 %unsignedp) #4
  br label %return

if.end25:                                         ; preds = %land.lhs.true, %if.end
  %cmp26 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp26, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.end25
  %call29 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.end25
  %target.addr.0 = phi %struct.rtx_def* [ %call29, %if.then28 ], [ %target, %if.end25 ]
  %arrayidx32 = getelementptr inbounds [59 x i32]* @mul_highpart_cost, i64 0, i64 %idxprom
  %7 = load i32* %arrayidx32, align 4, !tbaa !4
  %cmp33 = icmp slt i32 %7, %max_cost
  br i1 %cmp33, label %if.then35, label %if.end45

if.then35:                                        ; preds = %if.end30
  %8 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 7), align 8, !tbaa !3
  %9 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 6), align 8, !tbaa !3
  %cond40 = select i1 %tobool, %struct.optab* %8, %struct.optab* %9
  %call41 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond40, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %target.addr.0, i32 %unsignedp, i32 0) #4
  %tobool42 = icmp eq %struct.rtx_def* %call41, null
  br i1 %tobool42, label %if.end45, label %return

if.end45:                                         ; preds = %if.then35, %if.end30
  %target.addr.1 = phi %struct.rtx_def* [ %target.addr.0, %if.end30 ], [ null, %if.then35 ]
  %sub46 = add nsw i32 %conv3, -1
  %10 = load i32* @target_flags, align 4, !tbaa !4
  %and47 = lshr i32 %10, 20
  %11 = and i32 %and47, 32
  %12 = add i32 %11, 32
  %cmp50 = icmp ugt i32 %conv3, %12
  br i1 %cmp50, label %if.end74, label %land.lhs.true52

land.lhs.true52:                                  ; preds = %if.end45
  %13 = load i32* %arrayidx32, align 4, !tbaa !4
  %idxprom56 = sext i32 %sub46 to i64
  %arrayidx57 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom56
  %14 = load i32* %arrayidx57, align 4, !tbaa !4
  %mul = shl i32 %14, 1
  %add58 = add nsw i32 %mul, %13
  %15 = load i32* @add_cost, align 4, !tbaa !4
  %mul59 = shl i32 %15, 2
  %add60 = add nsw i32 %add58, %mul59
  %cmp61 = icmp slt i32 %add60, %max_cost
  br i1 %cmp61, label %if.then63, label %if.end74

if.then63:                                        ; preds = %land.lhs.true52
  %16 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 6), align 8, !tbaa !3
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 7), align 8, !tbaa !3
  %cond68 = select i1 %tobool, %struct.optab* %16, %struct.optab* %17
  %call69 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond68, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %target.addr.1, i32 %unsignedp, i32 0) #4
  %tobool70 = icmp eq %struct.rtx_def* %call69, null
  br i1 %tobool70, label %if.end74, label %if.then71

if.then71:                                        ; preds = %if.then63
  %call72 = tail call %struct.rtx_def* @expand_mult_highpart_adjust(i32 %mode, %struct.rtx_def* %call69, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %call69, i32 %unsignedp) #6
  br label %return

if.end74:                                         ; preds = %if.then63, %if.end45, %land.lhs.true52
  %target.addr.2 = phi %struct.rtx_def* [ null, %if.then63 ], [ %target.addr.1, %land.lhs.true52 ], [ %target.addr.1, %if.end45 ]
  %18 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !3
  %19 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 8, !tbaa !3
  %cond79 = select i1 %tobool, %struct.optab* %18, %struct.optab* %19
  %idxprom80 = zext i8 %0 to i64
  %insn_code = getelementptr inbounds %struct.optab* %cond79, i64 0, i32 1, i64 %idxprom80, i32 0
  %20 = load i32* %insn_code, align 4, !tbaa !7
  %cmp82 = icmp eq i32 %20, 1317
  br i1 %cmp82, label %if.end91, label %land.lhs.true84

land.lhs.true84:                                  ; preds = %if.end74
  %arrayidx86 = getelementptr inbounds [59 x i32]* @mul_widen_cost, i64 0, i64 %idxprom80
  %21 = load i32* %arrayidx86, align 4, !tbaa !4
  %cmp87 = icmp slt i32 %21, %max_cost
  br i1 %cmp87, label %if.then89, label %if.end91

if.then89:                                        ; preds = %land.lhs.true84
  %call90 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %call5) #4
  br label %try

if.end91:                                         ; preds = %if.end74, %land.lhs.true84
  %22 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 8, !tbaa !3
  %insn_code95 = getelementptr inbounds %struct.optab* %22, i64 0, i32 1, i64 %idxprom80, i32 0
  %23 = load i32* %insn_code95, align 4, !tbaa !7
  %cmp96 = icmp eq i32 %23, 1317
  br i1 %cmp96, label %if.end115, label %land.lhs.true98

land.lhs.true98:                                  ; preds = %if.end91
  %24 = load i32* @target_flags, align 4, !tbaa !4
  %and100 = lshr i32 %24, 20
  %25 = and i32 %and100, 32
  %26 = add i32 %25, 32
  %cmp103 = icmp ugt i32 %conv3, %26
  br i1 %cmp103, label %if.end115, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %land.lhs.true98
  %arrayidx107 = getelementptr inbounds [59 x i32]* @mul_cost, i64 0, i64 %idxprom80
  %27 = load i32* %arrayidx107, align 4, !tbaa !4
  %idxprom109 = sext i32 %sub46 to i64
  %arrayidx110 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom109
  %28 = load i32* %arrayidx110, align 4, !tbaa !4
  %add111 = add nsw i32 %28, %27
  %cmp112 = icmp slt i32 %add111, %max_cost
  br i1 %cmp112, label %try, label %if.end115

if.end115:                                        ; preds = %land.lhs.true98, %if.end91, %land.lhs.true105
  %cond120 = select i1 %tobool, %struct.optab* %19, %struct.optab* %18
  %insn_code124 = getelementptr inbounds %struct.optab* %cond120, i64 0, i32 1, i64 %idxprom80, i32 0
  %29 = load i32* %insn_code124, align 4, !tbaa !7
  %cmp125 = icmp eq i32 %29, 1317
  br i1 %cmp125, label %return, label %land.lhs.true127

land.lhs.true127:                                 ; preds = %if.end115
  %30 = load i32* @target_flags, align 4, !tbaa !4
  %and129 = lshr i32 %30, 20
  %31 = and i32 %and129, 32
  %32 = add i32 %31, 32
  %cmp132 = icmp ugt i32 %conv3, %32
  br i1 %cmp132, label %return, label %land.lhs.true134

land.lhs.true134:                                 ; preds = %land.lhs.true127
  %arrayidx136 = getelementptr inbounds [59 x i32]* @mul_widen_cost, i64 0, i64 %idxprom80
  %33 = load i32* %arrayidx136, align 4, !tbaa !4
  %idxprom138 = sext i32 %sub46 to i64
  %arrayidx139 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom138
  %34 = load i32* %arrayidx139, align 4, !tbaa !4
  %mul140 = shl i32 %34, 1
  %add141 = add nsw i32 %mul140, %33
  %35 = load i32* @add_cost, align 4, !tbaa !4
  %mul142 = shl i32 %35, 2
  %add143 = add nsw i32 %add141, %mul142
  %cmp144 = icmp slt i32 %add143, %max_cost
  br i1 %cmp144, label %if.then146, label %return

if.then146:                                       ; preds = %land.lhs.true134
  %call147 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %call5) #4
  %36 = zext i1 %tobool to i32
  %lnot.ext = xor i32 %36, 1
  %call149 = tail call %struct.rtx_def* @expand_binop(i32 %conv, %struct.optab* %cond120, %struct.rtx_def* %op0, %struct.rtx_def* %call147, %struct.rtx_def* null, i32 %lnot.ext, i32 2) #4
  %cmp150 = icmp eq %struct.rtx_def* %call149, null
  br i1 %cmp150, label %return, label %if.then152

if.then152:                                       ; preds = %if.then146
  %conv153 = zext i16 %1 to i64
  %call154 = tail call %union.tree_node* @build_int_2_wide(i64 %conv153, i64 0) #4
  %call155 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %conv, %struct.rtx_def* %call149, %union.tree_node* %call154, %struct.rtx_def* null, i32 1) #6
  %call156 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %conv, %struct.rtx_def* %call155, i32 %unsignedp) #4
  %call157 = tail call %struct.rtx_def* @expand_mult_highpart_adjust(i32 %mode, %struct.rtx_def* %call156, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %target.addr.2, i32 %unsignedp) #6
  br label %return

try:                                              ; preds = %land.lhs.true105, %if.then89
  %moptab.0 = phi %struct.optab* [ %cond79, %if.then89 ], [ %22, %land.lhs.true105 ]
  %op1.0 = phi %struct.rtx_def* [ %call90, %if.then89 ], [ %call6, %land.lhs.true105 ]
  %call160 = tail call %struct.rtx_def* @expand_binop(i32 %conv, %struct.optab* %moptab.0, %struct.rtx_def* %op0, %struct.rtx_def* %op1.0, %struct.rtx_def* null, i32 %unsignedp, i32 2) #4
  %cmp161 = icmp eq %struct.rtx_def* %call160, null
  br i1 %cmp161, label %return, label %if.end164

if.end164:                                        ; preds = %try
  %37 = load i32* @word_mode, align 4, !tbaa !0
  %cmp165 = icmp eq i32 %37, %mode
  br i1 %cmp165, label %if.then167, label %if.else

if.then167:                                       ; preds = %if.end164
  %call168 = tail call %struct.rtx_def* @gen_highpart(i32 %mode, %struct.rtx_def* %call160) #4
  br label %return

if.else:                                          ; preds = %if.end164
  %conv169 = zext i16 %1 to i64
  %call170 = tail call %union.tree_node* @build_int_2_wide(i64 %conv169, i64 0) #4
  %call171 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %conv, %struct.rtx_def* %call160, %union.tree_node* %call170, %struct.rtx_def* null, i32 1) #6
  %call172 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %conv, %struct.rtx_def* %call171, i32 %unsignedp) #4
  br label %return

return:                                           ; preds = %try, %land.lhs.true134, %if.end115, %land.lhs.true127, %if.then146, %if.then35, %if.else, %if.then167, %if.then152, %if.then71, %if.then18
  %retval.0 = phi %struct.rtx_def* [ %call24, %if.then18 ], [ %call72, %if.then71 ], [ %call168, %if.then167 ], [ %call172, %if.else ], [ %call157, %if.then152 ], [ %call41, %if.then35 ], [ null, %if.then146 ], [ null, %land.lhs.true127 ], [ null, %if.end115 ], [ null, %land.lhs.true134 ], [ null, %try ]
  ret %struct.rtx_def* %retval.0
}
