define void @visualize_scheduled_insns(i32 %clock) #0 {
entry:
  %str = alloca [2048 x i8], align 16
  call void @llvm.dbg.value(metadata !{i32 %clock}, i64 0, metadata !431), !dbg !595
  %0 = load i32* @n_visual_lines, align 4, !dbg !596, !tbaa !561
  %cmp = icmp sgt i32 %0, 99, !dbg !596
  br i1 %cmp, label %if.then, label %if.end, !dbg !596

if.then:                                          ; preds = %entry
  call void @print_block_visualization(i8* getelementptr inbounds ([13 x i8]* @.str16, i64 0, i64 0)) #7, !dbg !597
  %1 = load i8** @visual_tbl, align 8, !dbg !599, !tbaa !538
  store i8 0, i8* %1, align 1, !dbg !599
  store i32 0, i32* @n_visual_lines, align 4, !dbg !601, !tbaa !561
  store i32 0, i32* @n_vis_no_unit, align 4, !dbg !602, !tbaa !561
  br label %if.end, !dbg !603

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i32 [ 0, %if.then ], [ %0, %entry ]
  %inc = add nsw i32 %2, 1, !dbg !604
  store i32 %inc, i32* @n_visual_lines, align 4, !dbg !604, !tbaa !561
  %3 = load i8** @visual_tbl, align 8, !dbg !605, !tbaa !538
  %call = call i64 @strlen(i8* %3) #8, !dbg !605
  %add.ptr = getelementptr inbounds i8* %3, i64 %call, !dbg !605
  %call1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32 %clock) #6, !dbg !605
  call void @llvm.dbg.value(metadata !269, i64 0, metadata !433), !dbg !606
  %4 = getelementptr inbounds [2048 x i8]* %str, i64 0, i64 0, !dbg !607
  %arrayidx14 = getelementptr inbounds [2048 x i8]* %str, i64 0, i64 30, !dbg !608
  br label %for.body, !dbg !606

for.cond28.preheader:                             ; preds = %for.inc25
  %5 = load i32* @n_vis_no_unit, align 4, !dbg !609, !tbaa !561
  %cmp2957 = icmp sgt i32 %5, 0, !dbg !609
  br i1 %cmp2957, label %for.body30, label %for.end39, !dbg !609

for.body:                                         ; preds = %for.inc25, %if.end
  %indvars.iv64 = phi i64 [ 0, %if.end ], [ %indvars.iv.next65, %for.inc25 ]
  %bitmask = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %indvars.iv64, i32 1, !dbg !611
  %6 = load i32* %bitmask, align 8, !dbg !611, !tbaa !561
  %7 = load i32* @target_units, align 4, !dbg !611, !tbaa !561
  %and = and i32 %7, %6, !dbg !611
  %tobool = icmp eq i32 %and, 0, !dbg !611
  br i1 %tobool, label %for.inc25, label %for.cond4.preheader, !dbg !611

for.cond4.preheader:                              ; preds = %for.body
  %multiplicity = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %indvars.iv64, i32 2, !dbg !612
  %8 = load i32* %multiplicity, align 4, !dbg !612, !tbaa !561
  %cmp759 = icmp sgt i32 %8, 0, !dbg !612
  br i1 %cmp759, label %for.body8, label %for.inc25, !dbg !612

for.body8:                                        ; preds = %for.cond4.preheader, %for.inc
  %i.060 = phi i32 [ %inc23, %for.inc ], [ 0, %for.cond4.preheader ]
  %mul = mul nsw i32 %i.060, 26, !dbg !613
  %9 = trunc i64 %indvars.iv64 to i32, !dbg !613
  %add = add nsw i32 %mul, %9, !dbg !613
  call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !434), !dbg !613
  %call9 = call %struct.rtx_def* @get_unit_last_insn(i32 %add) #6, !dbg !614
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call9}, i64 0, metadata !438), !dbg !614
  %tobool10 = icmp eq %struct.rtx_def* %call9, null, !dbg !615
  br i1 %tobool10, label %if.else, label %land.lhs.true, !dbg !615

land.lhs.true:                                    ; preds = %for.body8
  %call11 = call i32 @actual_hazard_this_instance(i32 %9, i32 %add, %struct.rtx_def* %call9, i32 %clock, i32 0) #6, !dbg !616
  %tobool12 = icmp eq i32 %call11, 0, !dbg !616
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !616

if.then13:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start(i64 2048, i8* %4) #5, !dbg !607
  call void @llvm.dbg.declare(metadata !{[2048 x i8]* %str}, metadata !439), !dbg !607
  call fastcc void @print_insn(i8* %4, %struct.rtx_def* %call9) #7, !dbg !617
  store i8 0, i8* %arrayidx14, align 2, !dbg !608, !tbaa !539
  %10 = load i8** @visual_tbl, align 8, !dbg !618, !tbaa !538
  %call15 = call i64 @strlen(i8* %10) #8, !dbg !618
  %add.ptr16 = getelementptr inbounds i8* %10, i64 %call15, !dbg !618
  %call18 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr16, i8* getelementptr inbounds ([8 x i8]* @.str9, i64 0, i64 0), i8* %4) #6, !dbg !618
  call void @llvm.lifetime.end(i64 2048, i8* %4) #5, !dbg !619
  br label %for.inc, !dbg !619

if.else:                                          ; preds = %land.lhs.true, %for.body8
  %11 = load i8** @visual_tbl, align 8, !dbg !620, !tbaa !538
  %call19 = call i64 @strlen(i8* %11) #8, !dbg !620
  %add.ptr20 = getelementptr inbounds i8* %11, i64 %call19, !dbg !620
  %call21 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr20, i8* getelementptr inbounds ([8 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8]* @.str18, i64 0, i64 0)) #6, !dbg !620
  br label %for.inc

for.inc:                                          ; preds = %if.then13, %if.else
  %inc23 = add nsw i32 %i.060, 1, !dbg !612
  call void @llvm.dbg.value(metadata !{i32 %inc23}, i64 0, metadata !432), !dbg !612
  %cmp7 = icmp slt i32 %inc23, %8, !dbg !612
  br i1 %cmp7, label %for.body8, label %for.inc25, !dbg !612

for.inc25:                                        ; preds = %for.cond4.preheader, %for.inc, %for.body
  %indvars.iv.next65 = add i64 %indvars.iv64, 1, !dbg !606
  %lftr.wideiv = trunc i64 %indvars.iv.next65 to i32, !dbg !606
  %exitcond = icmp eq i32 %lftr.wideiv, 26, !dbg !606
  br i1 %exitcond, label %for.cond28.preheader, label %for.body, !dbg !606

for.body30:                                       ; preds = %for.cond28.preheader, %for.body30
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body30 ], [ 0, %for.cond28.preheader ]
  %12 = load i8** @visual_tbl, align 8, !dbg !621, !tbaa !538
  %call31 = call i64 @strlen(i8* %12) #8, !dbg !621
  %add.ptr32 = getelementptr inbounds i8* %12, i64 %call31, !dbg !621
  %arrayidx34 = getelementptr inbounds [20 x %struct.rtx_def*]* @vis_no_unit, i64 0, i64 %indvars.iv, !dbg !621
  %13 = load %struct.rtx_def** %arrayidx34, align 8, !dbg !621, !tbaa !538
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0, !dbg !621
  %rtint = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !621
  %14 = load i32* %rtint, align 4, !dbg !621, !tbaa !561
  %call36 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr32, i8* getelementptr inbounds ([7 x i8]* @.str19, i64 0, i64 0), i32 %14) #6, !dbg !621
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !609
  %15 = load i32* @n_vis_no_unit, align 4, !dbg !609, !tbaa !561
  %16 = trunc i64 %indvars.iv.next to i32, !dbg !609
  %cmp29 = icmp slt i32 %16, %15, !dbg !609
  br i1 %cmp29, label %for.body30, label %for.end39, !dbg !609

for.end39:                                        ; preds = %for.body30, %for.cond28.preheader
  store i32 0, i32* @n_vis_no_unit, align 4, !dbg !622, !tbaa !561
  %17 = load i8** @visual_tbl, align 8, !dbg !623, !tbaa !538
  %call40 = call i64 @strlen(i8* %17) #8, !dbg !623
  %add.ptr41 = getelementptr inbounds i8* %17, i64 %call40, !dbg !623
  %18 = bitcast i8* %add.ptr41 to i16*, !dbg !623
  store i16 10, i16* %18, align 1, !dbg !623
  ret void, !dbg !624
}
