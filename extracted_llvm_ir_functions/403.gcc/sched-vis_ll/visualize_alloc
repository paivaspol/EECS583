define void @visualize_alloc() #0 {
entry:
  %0 = alloca [36 x i8], align 1
  %1 = getelementptr inbounds [36 x i8]* %0, i64 0, i64 0
  call void @llvm.lifetime.start(i64 36, i8* %1) #4
  %call.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %1, i8* getelementptr inbounds ([7 x i8]* @.str23, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str24, i64 0, i64 0)) #5
  %call1.i = call i64 @strlen(i8* %1) #7
  %conv.i = trunc i64 %call1.i to i32
  %add.i = add i32 %conv.i, 3
  %2 = load i32* @target_units, align 4, !tbaa !3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc10.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.inc10.i ]
  %n.033.i = phi i32 [ %add.i, %entry ], [ %n.2.i, %for.inc10.i ]
  %bitmask.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %indvars.iv.i, i32 1
  %3 = load i32* %bitmask.i, align 8, !tbaa !3
  %and.i = and i32 %3, %2
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %for.inc10.i, label %for.cond3.preheader.i

for.cond3.preheader.i:                            ; preds = %for.body.i
  %multiplicity.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %indvars.iv.i, i32 2
  %4 = load i32* %multiplicity.i, align 4, !tbaa !3
  %cmp630.i = icmp sgt i32 %4, 0
  br i1 %cmp630.i, label %for.body8.lr.ph.i, label %for.inc10.i

for.body8.lr.ph.i:                                ; preds = %for.cond3.preheader.i
  %5 = icmp sgt i32 %4, 1
  %smax.i = select i1 %5, i32 %4, i32 1
  %6 = mul i32 %smax.i, %conv.i
  %7 = add i32 %6, %n.033.i
  br label %for.inc10.i

for.inc10.i:                                      ; preds = %for.body8.lr.ph.i, %for.cond3.preheader.i, %for.body.i
  %n.2.i = phi i32 [ %n.033.i, %for.body.i ], [ %7, %for.body8.lr.ph.i ], [ %n.033.i, %for.cond3.preheader.i ]
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 26
  br i1 %exitcond, label %get_visual_tbl_length.exit, label %for.body.i

get_visual_tbl_length.exit:                       ; preds = %for.inc10.i
  %add15.i = add i32 %n.2.i, %add.i
  store i32 %add15.i, i32* @visual_tbl_line_length, align 4, !tbaa !3
  %mul.i = mul nsw i32 %add15.i, 100
  call void @llvm.lifetime.end(i64 36, i8* %1) #4
  %conv = sext i32 %mul.i to i64
  %call1 = call noalias i8* @xmalloc(i64 %conv) #5
  store i8* %call1, i8** @visual_tbl, align 8, !tbaa !0
  ret void
}
