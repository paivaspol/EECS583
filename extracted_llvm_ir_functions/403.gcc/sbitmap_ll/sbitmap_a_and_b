define i32 @sbitmap_a_and_b(%struct.simple_bitmap_def* nocapture %dst, %struct.simple_bitmap_def* nocapture %a, %struct.simple_bitmap_def* nocapture %b) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %dst}, i64 0, metadata !193), !dbg !635
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %a}, i64 0, metadata !194), !dbg !635
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %b}, i64 0, metadata !195), !dbg !635
  tail call void @llvm.dbg.value(metadata !66, i64 0, metadata !200), !dbg !636
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay}, i64 0, metadata !197), !dbg !637
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay2}, i64 0, metadata !198), !dbg !637
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay4}, i64 0, metadata !199), !dbg !637
  tail call void @llvm.dbg.value(metadata !66, i64 0, metadata !196), !dbg !637
  %size = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 1, !dbg !637
  %0 = load i32* %size, align 4, !dbg !637, !tbaa !559
  %cmp13 = icmp eq i32 %0, 0, !dbg !637
  br i1 %cmp13, label %for.end, label %for.body.lr.ph, !dbg !637

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay4 = getelementptr inbounds %struct.simple_bitmap_def* %b, i64 0, i32 3, i64 0, !dbg !637
  %arraydecay2 = getelementptr inbounds %struct.simple_bitmap_def* %a, i64 0, i32 3, i64 0, !dbg !637
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 3, i64 0, !dbg !637
  br label %for.body, !dbg !637

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.018 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %changed.017 = phi i32 [ 0, %for.body.lr.ph ], [ %changed.1, %for.inc ]
  %bp.016 = phi i64* [ %arraydecay4, %for.body.lr.ph ], [ %incdec.ptr5, %for.inc ]
  %ap.015 = phi i64* [ %arraydecay2, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %dstp.014 = phi i64* [ %arraydecay, %for.body.lr.ph ], [ %incdec.ptr7, %for.inc ]
  %incdec.ptr = getelementptr inbounds i64* %ap.015, i64 1, !dbg !638
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr}, i64 0, metadata !198), !dbg !638
  %1 = load i64* %ap.015, align 8, !dbg !638, !tbaa !596
  %incdec.ptr5 = getelementptr inbounds i64* %bp.016, i64 1, !dbg !638
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr5}, i64 0, metadata !199), !dbg !638
  %2 = load i64* %bp.016, align 8, !dbg !638, !tbaa !596
  %and = and i64 %2, %1, !dbg !638
  tail call void @llvm.dbg.value(metadata !{i64 %and}, i64 0, metadata !201), !dbg !638
  %3 = load i64* %dstp.014, align 8, !dbg !639, !tbaa !596
  %cmp6 = icmp eq i64 %3, %and, !dbg !639
  br i1 %cmp6, label %for.inc, label %if.then, !dbg !639

if.then:                                          ; preds = %for.body
  tail call void @llvm.dbg.value(metadata !618, i64 0, metadata !200), !dbg !640
  store i64 %and, i64* %dstp.014, align 8, !dbg !642, !tbaa !596
  br label %for.inc, !dbg !643

for.inc:                                          ; preds = %for.body, %if.then
  %changed.1 = phi i32 [ 1, %if.then ], [ %changed.017, %for.body ]
  %inc = add i32 %i.018, 1, !dbg !644
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !196), !dbg !644
  %incdec.ptr7 = getelementptr inbounds i64* %dstp.014, i64 1, !dbg !644
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr7}, i64 0, metadata !197), !dbg !644
  %cmp = icmp ult i32 %inc, %0, !dbg !637
  br i1 %cmp, label %for.body, label %for.end, !dbg !637

for.end:                                          ; preds = %for.inc, %entry
  %changed.0.lcssa = phi i32 [ 0, %entry ], [ %changed.1, %for.inc ]
  ret i32 %changed.0.lcssa, !dbg !645
}
