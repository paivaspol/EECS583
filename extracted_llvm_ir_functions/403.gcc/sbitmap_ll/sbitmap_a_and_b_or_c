define i32 @sbitmap_a_and_b_or_c(%struct.simple_bitmap_def* nocapture %dst, %struct.simple_bitmap_def* nocapture %a, %struct.simple_bitmap_def* nocapture %b, %struct.simple_bitmap_def* nocapture %c) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %dst}, i64 0, metadata !254), !dbg !684
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %a}, i64 0, metadata !255), !dbg !684
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %b}, i64 0, metadata !256), !dbg !684
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %c}, i64 0, metadata !257), !dbg !684
  tail call void @llvm.dbg.value(metadata !66, i64 0, metadata !263), !dbg !685
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay}, i64 0, metadata !259), !dbg !686
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay2}, i64 0, metadata !260), !dbg !686
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay4}, i64 0, metadata !261), !dbg !686
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay6}, i64 0, metadata !262), !dbg !686
  tail call void @llvm.dbg.value(metadata !66, i64 0, metadata !258), !dbg !686
  %size = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 1, !dbg !686
  %0 = load i32* %size, align 4, !dbg !686, !tbaa !559
  %cmp16 = icmp eq i32 %0, 0, !dbg !686
  br i1 %cmp16, label %for.end, label %for.body.lr.ph, !dbg !686

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay6 = getelementptr inbounds %struct.simple_bitmap_def* %c, i64 0, i32 3, i64 0, !dbg !686
  %arraydecay4 = getelementptr inbounds %struct.simple_bitmap_def* %b, i64 0, i32 3, i64 0, !dbg !686
  %arraydecay2 = getelementptr inbounds %struct.simple_bitmap_def* %a, i64 0, i32 3, i64 0, !dbg !686
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 3, i64 0, !dbg !686
  br label %for.body, !dbg !686

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.022 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %changed.021 = phi i32 [ 0, %for.body.lr.ph ], [ %changed.1, %for.inc ]
  %cp.020 = phi i64* [ %arraydecay6, %for.body.lr.ph ], [ %incdec.ptr8, %for.inc ]
  %bp.019 = phi i64* [ %arraydecay4, %for.body.lr.ph ], [ %incdec.ptr7, %for.inc ]
  %ap.018 = phi i64* [ %arraydecay2, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %dstp.017 = phi i64* [ %arraydecay, %for.body.lr.ph ], [ %incdec.ptr10, %for.inc ]
  %incdec.ptr = getelementptr inbounds i64* %ap.018, i64 1, !dbg !687
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr}, i64 0, metadata !260), !dbg !687
  %1 = load i64* %ap.018, align 8, !dbg !687, !tbaa !596
  %incdec.ptr7 = getelementptr inbounds i64* %bp.019, i64 1, !dbg !687
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr7}, i64 0, metadata !261), !dbg !687
  %2 = load i64* %bp.019, align 8, !dbg !687, !tbaa !596
  %incdec.ptr8 = getelementptr inbounds i64* %cp.020, i64 1, !dbg !687
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr8}, i64 0, metadata !262), !dbg !687
  %3 = load i64* %cp.020, align 8, !dbg !687, !tbaa !596
  %or = or i64 %3, %2, !dbg !687
  %and = and i64 %or, %1, !dbg !687
  tail call void @llvm.dbg.value(metadata !{i64 %and}, i64 0, metadata !264), !dbg !687
  %4 = load i64* %dstp.017, align 8, !dbg !688, !tbaa !596
  %cmp9 = icmp eq i64 %4, %and, !dbg !688
  br i1 %cmp9, label %for.inc, label %if.then, !dbg !688

if.then:                                          ; preds = %for.body
  tail call void @llvm.dbg.value(metadata !618, i64 0, metadata !263), !dbg !689
  store i64 %and, i64* %dstp.017, align 8, !dbg !691, !tbaa !596
  br label %for.inc, !dbg !692

for.inc:                                          ; preds = %for.body, %if.then
  %changed.1 = phi i32 [ 1, %if.then ], [ %changed.021, %for.body ]
  %inc = add i32 %i.022, 1, !dbg !693
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !258), !dbg !693
  %incdec.ptr10 = getelementptr inbounds i64* %dstp.017, i64 1, !dbg !693
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr10}, i64 0, metadata !259), !dbg !693
  %cmp = icmp ult i32 %inc, %0, !dbg !686
  br i1 %cmp, label %for.body, label %for.end, !dbg !686

for.end:                                          ; preds = %for.inc, %entry
  %changed.0.lcssa = phi i32 [ 0, %entry ], [ %changed.1, %for.inc ]
  ret i32 %changed.0.lcssa, !dbg !694
}
