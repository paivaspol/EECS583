define void @sbitmap_vector_zero(%struct.simple_bitmap_def** nocapture %bmap, i32 %n_vecs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def** %bmap}, i64 0, metadata !144), !dbg !598
  tail call void @llvm.dbg.value(metadata !{i32 %n_vecs}, i64 0, metadata !145), !dbg !599
  tail call void @llvm.dbg.value(metadata !66, i64 0, metadata !146), !dbg !600
  %cmp3 = icmp eq i32 %n_vecs, 0, !dbg !600
  br i1 %cmp3, label %for.end, label %for.body, !dbg !600

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def** %bmap, i64 %indvars.iv, !dbg !602
  %0 = load %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !602, !tbaa !578
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %0}, i64 0, metadata !603) #2, !dbg !604
  %arraydecay.i = getelementptr inbounds %struct.simple_bitmap_def* %0, i64 0, i32 3, i64 0, !dbg !605
  %1 = bitcast i64* %arraydecay.i to i8*, !dbg !605
  %bytes.i = getelementptr inbounds %struct.simple_bitmap_def* %0, i64 0, i32 2, !dbg !605
  %2 = load i32* %bytes.i, align 4, !dbg !605, !tbaa !559
  %conv.i = zext i32 %2 to i64, !dbg !605
  tail call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 %conv.i, i32 1, i1 false) #2, !dbg !605
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !600
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !600
  %exitcond = icmp eq i32 %lftr.wideiv, %n_vecs, !dbg !600
  br i1 %exitcond, label %for.end, label %for.body, !dbg !600

for.end:                                          ; preds = %for.body, %entry
  ret void, !dbg !606
}
