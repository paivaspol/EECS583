define i32 @sbitmap_a_xor_b(%struct.simple_bitmap_def* nocapture %dst, %struct.simple_bitmap_def* nocapture %a, %struct.simple_bitmap_def* nocapture %b) #0 {
entry:
  %size = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 1
  %0 = load i32* %size, align 4, !tbaa !0
  %cmp13 = icmp eq i32 %0, 0
  br i1 %cmp13, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay4 = getelementptr inbounds %struct.simple_bitmap_def* %b, i64 0, i32 3, i64 0
  %arraydecay2 = getelementptr inbounds %struct.simple_bitmap_def* %a, i64 0, i32 3, i64 0
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 3, i64 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.018 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %changed.017 = phi i32 [ 0, %for.body.lr.ph ], [ %changed.1, %for.inc ]
  %bp.016 = phi i64* [ %arraydecay4, %for.body.lr.ph ], [ %incdec.ptr5, %for.inc ]
  %ap.015 = phi i64* [ %arraydecay2, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %dstp.014 = phi i64* [ %arraydecay, %for.body.lr.ph ], [ %incdec.ptr7, %for.inc ]
  %incdec.ptr = getelementptr inbounds i64* %ap.015, i64 1
  %1 = load i64* %ap.015, align 8, !tbaa !4
  %incdec.ptr5 = getelementptr inbounds i64* %bp.016, i64 1
  %2 = load i64* %bp.016, align 8, !tbaa !4
  %xor = xor i64 %2, %1
  %3 = load i64* %dstp.014, align 8, !tbaa !4
  %cmp6 = icmp eq i64 %3, %xor
  br i1 %cmp6, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  store i64 %xor, i64* %dstp.014, align 8, !tbaa !4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %changed.1 = phi i32 [ 1, %if.then ], [ %changed.017, %for.body ]
  %inc = add i32 %i.018, 1
  %incdec.ptr7 = getelementptr inbounds i64* %dstp.014, i64 1
  %cmp = icmp ult i32 %inc, %0
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  %changed.0.lcssa = phi i32 [ 0, %entry ], [ %changed.1, %for.inc ]
  ret i32 %changed.0.lcssa
}
