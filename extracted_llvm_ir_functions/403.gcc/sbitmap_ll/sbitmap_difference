define void @sbitmap_difference(%struct.simple_bitmap_def* nocapture %dst, %struct.simple_bitmap_def* nocapture %a, %struct.simple_bitmap_def* nocapture %b) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %dst}, i64 0, metadata !182), !dbg !630
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %a}, i64 0, metadata !183), !dbg !630
  tail call void @llvm.dbg.value(metadata !{%struct.simple_bitmap_def* %b}, i64 0, metadata !184), !dbg !630
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay}, i64 0, metadata !186), !dbg !631
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay2}, i64 0, metadata !187), !dbg !631
  tail call void @llvm.dbg.value(metadata !{i64* %arraydecay4}, i64 0, metadata !188), !dbg !631
  tail call void @llvm.dbg.value(metadata !66, i64 0, metadata !185), !dbg !631
  %size = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 1, !dbg !631
  %0 = load i32* %size, align 4, !dbg !631, !tbaa !559
  %cmp9 = icmp eq i32 %0, 0, !dbg !631
  br i1 %cmp9, label %for.end, label %for.body.lr.ph, !dbg !631

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay4 = getelementptr inbounds %struct.simple_bitmap_def* %b, i64 0, i32 3, i64 0, !dbg !631
  %arraydecay2 = getelementptr inbounds %struct.simple_bitmap_def* %a, i64 0, i32 3, i64 0, !dbg !631
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 3, i64 0, !dbg !631
  br label %for.body, !dbg !631

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %bp.013 = phi i64* [ %arraydecay4, %for.body.lr.ph ], [ %incdec.ptr5, %for.body ]
  %ap.012 = phi i64* [ %arraydecay2, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %dstp.011 = phi i64* [ %arraydecay, %for.body.lr.ph ], [ %incdec.ptr6, %for.body ]
  %i.010 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %incdec.ptr = getelementptr inbounds i64* %ap.012, i64 1, !dbg !633
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr}, i64 0, metadata !187), !dbg !633
  %1 = load i64* %ap.012, align 8, !dbg !633, !tbaa !596
  %incdec.ptr5 = getelementptr inbounds i64* %bp.013, i64 1, !dbg !633
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr5}, i64 0, metadata !188), !dbg !633
  %2 = load i64* %bp.013, align 8, !dbg !633, !tbaa !596
  %neg = xor i64 %2, -1, !dbg !633
  %and = and i64 %1, %neg, !dbg !633
  %incdec.ptr6 = getelementptr inbounds i64* %dstp.011, i64 1, !dbg !633
  tail call void @llvm.dbg.value(metadata !{i64* %incdec.ptr6}, i64 0, metadata !186), !dbg !633
  store i64 %and, i64* %dstp.011, align 8, !dbg !633, !tbaa !596
  %inc = add i32 %i.010, 1, !dbg !631
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !185), !dbg !631
  %cmp = icmp ult i32 %inc, %0, !dbg !631
  br i1 %cmp, label %for.body, label %for.end, !dbg !631

for.end:                                          ; preds = %for.body, %entry
  ret void, !dbg !634
}
