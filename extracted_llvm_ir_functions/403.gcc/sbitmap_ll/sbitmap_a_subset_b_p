define i32 @sbitmap_a_subset_b_p(%struct.simple_bitmap_def* nocapture %a, %struct.simple_bitmap_def* nocapture %b) #3 {
entry:
  %size = getelementptr inbounds %struct.simple_bitmap_def* %a, i64 0, i32 1
  %0 = load i32* %size, align 4, !tbaa !0
  %cmp10 = icmp eq i32 %0, 0
  br i1 %cmp10, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay2 = getelementptr inbounds %struct.simple_bitmap_def* %b, i64 0, i32 3, i64 0
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def* %a, i64 0, i32 3, i64 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %bp.013 = phi i64* [ %arraydecay2, %for.body.lr.ph ], [ %incdec.ptr4, %for.inc ]
  %ap.012 = phi i64* [ %arraydecay, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %i.011 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %1 = load i64* %ap.012, align 8, !tbaa !4
  %2 = load i64* %bp.013, align 8, !tbaa !4
  %or = or i64 %2, %1
  %cmp3 = icmp eq i64 %or, %2
  br i1 %cmp3, label %for.inc, label %return

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.011, 1
  %incdec.ptr = getelementptr inbounds i64* %ap.012, i64 1
  %incdec.ptr4 = getelementptr inbounds i64* %bp.013, i64 1
  %cmp = icmp ult i32 %inc, %0
  br i1 %cmp, label %for.body, label %return

return:                                           ; preds = %for.inc, %for.body, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %for.body ], [ 1, %for.inc ]
  ret i32 %retval.0
}
