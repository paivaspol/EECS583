define void @sbitmap_not(%struct.simple_bitmap_def* nocapture %dst, %struct.simple_bitmap_def* nocapture %src) #0 {
entry:
  %size = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 1
  %0 = load i32* %size, align 4, !tbaa !0
  %cmp6 = icmp eq i32 %0, 0
  br i1 %cmp6, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay2 = getelementptr inbounds %struct.simple_bitmap_def* %src, i64 0, i32 3, i64 0
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def* %dst, i64 0, i32 3, i64 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %srcp.09 = phi i64* [ %arraydecay2, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %dstp.08 = phi i64* [ %arraydecay, %for.body.lr.ph ], [ %incdec.ptr3, %for.body ]
  %i.07 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %incdec.ptr = getelementptr inbounds i64* %srcp.09, i64 1
  %1 = load i64* %srcp.09, align 8, !tbaa !4
  %neg = xor i64 %1, -1
  %incdec.ptr3 = getelementptr inbounds i64* %dstp.08, i64 1
  store i64 %neg, i64* %dstp.08, align 8, !tbaa !4
  %inc = add i32 %i.07, 1
  %cmp = icmp ult i32 %inc, %0
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  ret void
}
