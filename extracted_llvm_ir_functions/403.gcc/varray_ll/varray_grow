define %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %va, i64 %n) #0 {
entry:
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %va, i64 0, i32 0
  %0 = load i64* %num_elements, align 8, !tbaa !0
  %cmp = icmp eq i64 %0, %n
  br i1 %cmp, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %element_size1 = getelementptr inbounds %struct.varray_head_tag* %va, i64 0, i32 2
  %1 = load i64* %element_size1, align 8, !tbaa !0
  %mul = mul i64 %1, %0
  %mul2 = mul i64 %1, %n
  %2 = bitcast %struct.varray_head_tag* %va to i8*
  %add = add i64 %mul2, 32
  %call = tail call i8* @xrealloc(i8* %2, i64 %add) #3
  %3 = bitcast i8* %call to %struct.varray_head_tag*
  %num_elements3 = bitcast i8* %call to i64*
  store i64 %n, i64* %num_elements3, align 8, !tbaa !0
  %cmp4 = icmp ult i64 %0, %n
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.then
  %data.sum = add i64 %mul, 32
  %arrayidx = getelementptr inbounds i8* %call, i64 %data.sum
  %sub = sub i64 %mul2, %mul
  tail call void @llvm.memset.p0i8.i64(i8* %arrayidx, i8 0, i64 %sub, i32 1, i1 false)
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.then, %if.then5
  %va.addr.0 = phi %struct.varray_head_tag* [ %3, %if.then5 ], [ %3, %if.then ], [ %va, %entry ]
  ret %struct.varray_head_tag* %va.addr.0
}
