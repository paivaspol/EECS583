define void @flow_loops_free(%struct.loops* nocapture %loops) #0 {
entry:
  %array = getelementptr inbounds %struct.loops* %loops, i64 0, i32 2
  %0 = load %struct.loop** %array, align 8, !tbaa !0
  %tobool = icmp eq %struct.loop* %0, null
  br i1 %tobool, label %if.end42, label %if.then

if.then:                                          ; preds = %entry
  %num = getelementptr inbounds %struct.loops* %loops, i64 0, i32 0
  %1 = load i32* %num, align 4, !tbaa !3
  %tobool1 = icmp eq i32 %1, 0
  br i1 %tobool1, label %if.then2, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then
  %cmp65 = icmp sgt i32 %1, 0
  br i1 %cmp65, label %for.body, label %for.end

if.then2:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str17, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.flow_loops_free, i64 0, i64 0)) #7
  unreachable

for.body:                                         ; preds = %for.inc, %for.cond.preheader
  %2 = phi %struct.loop* [ %0, %for.cond.preheader ], [ %.pre67, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ]
  %pre_header_edges = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 4
  %3 = load %struct.edge_def*** %pre_header_edges, align 8, !tbaa !0
  %tobool5 = icmp eq %struct.edge_def** %3, null
  br i1 %tobool5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %for.body
  %4 = bitcast %struct.edge_def** %3 to i8*
  tail call void @free(i8* %4) #5
  br label %if.end8

if.end8:                                          ; preds = %for.body, %if.then6
  %nodes = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 8
  %5 = load %struct.simple_bitmap_def** %nodes, align 8, !tbaa !0
  %tobool9 = icmp eq %struct.simple_bitmap_def* %5, null
  br i1 %tobool9, label %if.end12, label %if.then10

if.then10:                                        ; preds = %if.end8
  %6 = bitcast %struct.simple_bitmap_def* %5 to i8*
  tail call void @free(i8* %6) #5
  br label %if.end12

if.end12:                                         ; preds = %if.end8, %if.then10
  %entry_edges = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 10
  %7 = load %struct.edge_def*** %entry_edges, align 8, !tbaa !0
  %tobool13 = icmp eq %struct.edge_def** %7, null
  br i1 %tobool13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end12
  %8 = bitcast %struct.edge_def** %7 to i8*
  tail call void @free(i8* %8) #5
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.then14
  %exit_edges = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 12
  %9 = load %struct.edge_def*** %exit_edges, align 8, !tbaa !0
  %tobool17 = icmp eq %struct.edge_def** %9, null
  br i1 %tobool17, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %10 = bitcast %struct.edge_def** %9 to i8*
  tail call void @free(i8* %10) #5
  br label %if.end20

if.end20:                                         ; preds = %if.end16, %if.then18
  %exits_doms = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 14
  %11 = load %struct.simple_bitmap_def** %exits_doms, align 8, !tbaa !0
  %tobool21 = icmp eq %struct.simple_bitmap_def* %11, null
  br i1 %tobool21, label %for.inc, label %if.then22

if.then22:                                        ; preds = %if.end20
  %12 = bitcast %struct.simple_bitmap_def* %11 to i8*
  tail call void @free(i8* %12) #5
  br label %for.inc

for.inc:                                          ; preds = %if.end20, %if.then22
  %indvars.iv.next = add i64 %indvars.iv, 1
  %13 = load i32* %num, align 4, !tbaa !3
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %14, %13
  %.pre67 = load %struct.loop** %array, align 8, !tbaa !0
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %15 = phi %struct.loop* [ %0, %for.cond.preheader ], [ %.pre67, %for.inc ]
  %16 = bitcast %struct.loop* %15 to i8*
  tail call void @free(i8* %16) #5
  store %struct.loop* null, %struct.loop** %array, align 8, !tbaa !0
  %dom = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 0
  %17 = load %struct.simple_bitmap_def*** %dom, align 8, !tbaa !0
  %tobool27 = icmp eq %struct.simple_bitmap_def** %17, null
  br i1 %tobool27, label %if.end31, label %if.then28

if.then28:                                        ; preds = %for.end
  %18 = bitcast %struct.simple_bitmap_def** %17 to i8*
  tail call void @free(i8* %18) #5
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then28
  %dfs_order = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 1
  %19 = load i32** %dfs_order, align 8, !tbaa !0
  %tobool33 = icmp eq i32* %19, null
  br i1 %tobool33, label %if.end37, label %if.then34

if.then34:                                        ; preds = %if.end31
  %20 = bitcast i32* %19 to i8*
  tail call void @free(i8* %20) #5
  br label %if.end37

if.end37:                                         ; preds = %if.end31, %if.then34
  %shared_headers = getelementptr inbounds %struct.loops* %loops, i64 0, i32 5
  %21 = load %struct.simple_bitmap_def** %shared_headers, align 8, !tbaa !0
  %tobool38 = icmp eq %struct.simple_bitmap_def* %21, null
  br i1 %tobool38, label %if.end42, label %if.then39

if.then39:                                        ; preds = %if.end37
  %22 = bitcast %struct.simple_bitmap_def* %21 to i8*
  tail call void @free(i8* %22) #5
  br label %if.end42

if.end42:                                         ; preds = %if.end37, %entry, %if.then39
  ret void
}
