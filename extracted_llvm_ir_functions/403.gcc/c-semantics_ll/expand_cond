define %union.tree_node* @expand_cond(%union.tree_node* %t) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %t}, i64 0, metadata !1130), !dbg !1310
  %tobool = icmp eq %union.tree_node* %t, null, !dbg !1311
  br i1 %tobool, label %return, label %land.lhs.true, !dbg !1311

land.lhs.true:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2, !dbg !1311
  %0 = bitcast [4 x i8]* %code to i32*, !dbg !1311
  %bf.load = load i32* %0, align 8, !dbg !1311
  %bf.clear = and i32 %bf.load, 255, !dbg !1311
  %cmp = icmp eq i32 %bf.clear, 2, !dbg !1311
  br i1 %cmp, label %if.then, label %return, !dbg !1311

if.then:                                          ; preds = %land.lhs.true
  %purpose = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 1, !dbg !1312
  %1 = load i8** %purpose, align 8, !dbg !1312
  %2 = bitcast i8* %1 to %union.tree_node*, !dbg !1312
  tail call void @expand_stmt(%union.tree_node* %2) #8, !dbg !1312
  %value = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2, !dbg !1314
  %3 = bitcast i32* %value to %union.tree_node**, !dbg !1314
  %4 = load %union.tree_node** %3, align 8, !dbg !1314, !tbaa !1245
  br label %return, !dbg !1314

return:                                           ; preds = %land.lhs.true, %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %4, %if.then ], [ null, %entry ], [ %t, %land.lhs.true ]
  ret %union.tree_node* %retval.0, !dbg !1315
}
