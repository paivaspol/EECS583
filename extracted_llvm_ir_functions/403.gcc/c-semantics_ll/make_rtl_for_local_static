define void @make_rtl_for_local_static(%union.tree_node* %decl) #0 {
entry:
  %asm_written_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %asm_written_flag to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 16384
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %1 = load %union.tree_node** %assembler_name, align 8, !tbaa !0
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end
  %2 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !0
  tail call void %2(%union.tree_node* %decl) #5
  %.pr = load %union.tree_node** %assembler_name, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.false
  %3 = phi %union.tree_node* [ %1, %if.end ], [ %.pr, %cond.false ]
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %4 = load %union.tree_node** %name, align 8, !tbaa !0
  %cmp5 = icmp eq %union.tree_node* %3, %4
  br i1 %cmp5, label %if.end17, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %5 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  %cmp7 = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %land.lhs.true
  %cmp11 = icmp eq %union.tree_node* %3, null
  br i1 %cmp11, label %cond.false13, label %cond.end14

cond.false13:                                     ; preds = %if.then8
  %6 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !0
  tail call void %6(%union.tree_node* %decl) #5
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !0
  br label %cond.end14

cond.end14:                                       ; preds = %if.then8, %cond.false13
  %7 = phi %union.tree_node* [ %3, %if.then8 ], [ %.pre, %cond.false13 ]
  %id = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds i8** %id, i64 1
  %9 = load i8** %8, align 8, !tbaa !0
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true, %cond.end, %cond.end14
  %asmspec.0 = phi i8* [ null, %land.lhs.true ], [ %9, %cond.end14 ], [ null, %cond.end ]
  tail call void @rest_of_decl_compilation(%union.tree_node* %decl, i8* %asmspec.0, i32 0, i32 0) #5
  br label %return

return:                                           ; preds = %entry, %if.end17
  ret void
}
