define void @genrtl_switch_stmt(%union.tree_node* nocapture %t) #0 {
entry:
  %0 = load i8** @input_filename, align 8, !tbaa !0
  %1 = load i32* @lineno, align 4, !tbaa !4
  %call.i = tail call %struct.rtx_def* @emit_line_note(i8* %0, i32 %1) #5
  tail call void @clear_last_expr() #5
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %call = tail call %union.tree_node* @expand_cond(%union.tree_node* %2) #7
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp = icmp eq %union.tree_node* %call, %3
  %4 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 18), align 8, !tbaa !0
  %.call = select i1 %cmp, %union.tree_node* %4, %union.tree_node* %call
  %5 = load i8** @input_filename, align 8, !tbaa !0
  %6 = load i32* @lineno, align 4, !tbaa !4
  %call1 = tail call %struct.rtx_def* @emit_line_note(i8* %5, i32 %6) #5
  %type = getelementptr inbounds %union.tree_node* %.call, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type, align 8, !tbaa !0
  tail call void @expand_start_case(i32 1, %union.tree_node* %.call, %union.tree_node* %7, i8* getelementptr inbounds ([17 x i8]* @.str3, i64 0, i64 0)) #5
  %arrayidx4 = getelementptr inbounds i32* %operands, i64 2
  %8 = bitcast i32* %arrayidx4 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !0
  tail call void @expand_stmt(%union.tree_node* %9) #7
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 4
  %10 = bitcast i32* %arrayidx7 to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !0
  tail call void @expand_end_case_type(%union.tree_node* %.call, %union.tree_node* %11) #5
  ret void
}
