define void @genrtl_case_label(%union.tree_node* nocapture %case_label) #0 {
entry:
  %duplicate = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* @last_cleanup_this_contour() #5
  %tobool = icmp eq %union.tree_node* %call, null
  br i1 %tobool, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %purpose = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 1
  %0 = load i8** %purpose, align 8
  %1 = bitcast i8* %0 to %union.tree_node*
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %1, i8* getelementptr inbounds ([28 x i8]* @.str4, i64 0, i64 0)) #5
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str5, i64 0, i64 0)) #5
  %.b = load i1* @genrtl_case_label.explained, align 1
  br i1 %.b, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.then
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([88 x i8]* @.str6, i64 0, i64 0)) #5
  store i1 true, i1* @genrtl_case_label.explained, align 1
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.then, %if.then2
  %operands = getelementptr inbounds %union.tree_node* %case_label, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %arrayidx6 = getelementptr inbounds i32* %operands, i64 2
  %3 = bitcast i32* %arrayidx6 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %operands, i64 4
  %5 = bitcast i32* %arrayidx9 to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !0
  %call10 = call i32 @add_case_node(%union.tree_node* %2, %union.tree_node* %4, %union.tree_node* %6, %union.tree_node** %duplicate) #5
  ret void
}
