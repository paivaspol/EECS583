define void @genrtl_asm_stmt(%union.tree_node* %cv_qualifier, %union.tree_node* %string, %union.tree_node* %output_operands, %union.tree_node* %input_operands, %union.tree_node* %clobbers, i32 %asm_input_p) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %cv_qualifier}, i64 0, metadata !1220), !dbg !1591
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %string}, i64 0, metadata !1221), !dbg !1592
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %output_operands}, i64 0, metadata !1222), !dbg !1593
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %input_operands}, i64 0, metadata !1223), !dbg !1594
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %clobbers}, i64 0, metadata !1224), !dbg !1595
  tail call void @llvm.dbg.value(metadata !{i32 %asm_input_p}, i64 0, metadata !1225), !dbg !1596
  %cmp = icmp eq %union.tree_node* %cv_qualifier, null, !dbg !1597
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !1597

land.lhs.true:                                    ; preds = %entry
  %0 = load %union.tree_node*** @ridpointers, align 8, !dbg !1597, !tbaa !1245
  %arrayidx = getelementptr inbounds %union.tree_node** %0, i64 9, !dbg !1597
  %1 = load %union.tree_node** %arrayidx, align 8, !dbg !1597, !tbaa !1245
  %cmp1 = icmp eq %union.tree_node* %1, %cv_qualifier, !dbg !1597
  br i1 %cmp1, label %if.end, label %if.then, !dbg !1597

if.then:                                          ; preds = %land.lhs.true
  %id = getelementptr inbounds %union.tree_node* %cv_qualifier, i64 0, i32 0, i32 1, !dbg !1598
  %2 = getelementptr inbounds i8** %id, i64 1, !dbg !1598
  %3 = load i8** %2, align 8, !dbg !1598, !tbaa !1245
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([28 x i8]* @.str7, i64 0, i64 0), i8* %3) #6, !dbg !1598
  tail call void @llvm.dbg.value(metadata !1600, i64 0, metadata !1220), !dbg !1601
  br label %if.end, !dbg !1602

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %cv_qualifier.addr.0 = phi %union.tree_node* [ null, %if.then ], [ %cv_qualifier, %land.lhs.true ], [ null, %entry ]
  %4 = load i8** @input_filename, align 8, !dbg !1603, !tbaa !1245
  %5 = load i32* @lineno, align 4, !dbg !1603, !tbaa !1276
  %call = tail call %struct.rtx_def* @emit_line_note(i8* %4, i32 %5) #6, !dbg !1603
  %tobool = icmp eq i32 %asm_input_p, 0, !dbg !1604
  br i1 %tobool, label %if.else, label %if.then2, !dbg !1604

if.then2:                                         ; preds = %if.end
  tail call void @expand_asm(%union.tree_node* %string) #6, !dbg !1605
  br label %if.end4, !dbg !1605

if.else:                                          ; preds = %if.end
  %cmp3 = icmp ne %union.tree_node* %cv_qualifier.addr.0, null, !dbg !1606
  %conv = zext i1 %cmp3 to i32, !dbg !1606
  %6 = load i8** @input_filename, align 8, !dbg !1606, !tbaa !1245
  %7 = load i32* @lineno, align 4, !dbg !1606, !tbaa !1276
  tail call void @c_expand_asm_operands(%union.tree_node* %string, %union.tree_node* %output_operands, %union.tree_node* %input_operands, %union.tree_node* %clobbers, i32 %conv, i8* %6, i32 %7) #6, !dbg !1606
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  ret void, !dbg !1607
}
