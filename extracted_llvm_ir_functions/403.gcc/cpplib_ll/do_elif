define internal void @do_elif(%struct.cpp_reader* %pfile) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_reader* %pfile}, i64 0, metadata !967), !dbg !1787
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0, !dbg !1788
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !dbg !1788, !tbaa !1070
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_buffer* %0}, i64 0, metadata !968), !dbg !1788
  %if_stack = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 7, !dbg !1789
  %1 = load %struct.if_stack** %if_stack, align 8, !dbg !1789, !tbaa !1070
  tail call void @llvm.dbg.value(metadata !{%struct.if_stack* %1}, i64 0, metadata !969), !dbg !1789
  %cmp = icmp eq %struct.if_stack* %1, null, !dbg !1790
  br i1 %cmp, label %if.then, label %if.else, !dbg !1790

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([18 x i8]* @.str62, i64 0, i64 0)) #9, !dbg !1791
  br label %if.end19, !dbg !1791

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 5, !dbg !1792
  %2 = load i32* %type, align 4, !dbg !1792, !tbaa !1065
  %cmp2 = icmp eq i32 %2, 5, !dbg !1792
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !1792

if.then3:                                         ; preds = %if.else
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([18 x i8]* @.str63, i64 0, i64 0)) #9, !dbg !1794
  %line = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 1, !dbg !1796
  %3 = load i32* %line, align 4, !dbg !1796, !tbaa !1065
  tail call void (%struct.cpp_reader*, i32, i32, i8*, ...)* @cpp_error_with_line(%struct.cpp_reader* %pfile, i32 %3, i32 0, i8* getelementptr inbounds ([27 x i8]* @.str64, i64 0, i64 0)) #9, !dbg !1796
  br label %if.end, !dbg !1797

if.end:                                           ; preds = %if.then3, %if.else
  store i32 9, i32* %type, align 4, !dbg !1798, !tbaa !1065
  %skip_elses = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 3, !dbg !1799
  %4 = load i8* %skip_elses, align 1, !dbg !1799, !tbaa !1083, !range !1686
  %tobool = icmp eq i8 %4, 0, !dbg !1799
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1, !dbg !1800
  br i1 %tobool, label %if.else6, label %if.then5, !dbg !1799

if.then5:                                         ; preds = %if.end
  store i8 1, i8* %skipping, align 1, !dbg !1800, !tbaa !1061
  br label %if.end18, !dbg !1800

if.else6:                                         ; preds = %if.end
  store i8 0, i8* %skipping, align 1, !dbg !1801, !tbaa !1061
  %call = tail call i32 @_cpp_parse_expr(%struct.cpp_reader* %pfile) #9, !dbg !1803
  %lnot = icmp eq i32 %call, 0, !dbg !1803
  %conv = zext i1 %lnot to i8, !dbg !1803
  store i8 %conv, i8* %skipping, align 1, !dbg !1803, !tbaa !1061
  %frombool = xor i8 %conv, 1, !dbg !1804
  store i8 %frombool, i8* %skip_elses, align 1, !dbg !1804, !tbaa !1083
  br label %if.end18

if.end18:                                         ; preds = %if.else6, %if.then5
  %mi_cmacro = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 2, !dbg !1805
  store %struct.cpp_hashnode* null, %struct.cpp_hashnode** %mi_cmacro, align 8, !dbg !1805, !tbaa !1070
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then
  ret void, !dbg !1806
}
