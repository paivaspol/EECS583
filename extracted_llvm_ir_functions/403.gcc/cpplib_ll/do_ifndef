define internal void @do_ifndef(%struct.cpp_reader* %pfile) #0 {
entry:
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %0 = load i8* %skipping, align 1, !tbaa !0
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.cpp_hashnode* @lex_macro_node(%struct.cpp_reader* %pfile) #9
  %tobool1 = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool1, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.then
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp = icmp eq i8 %bf.load, 1
  %conv = zext i1 %cmp to i32
  tail call fastcc void @check_eol(%struct.cpp_reader* %pfile) #9
  br label %if.end6

if.end6:                                          ; preds = %if.then, %entry, %if.then4
  %skip.1 = phi i32 [ 1, %entry ], [ %conv, %if.then4 ], [ 1, %if.then ]
  %node.0 = phi %struct.cpp_hashnode* [ null, %entry ], [ %call, %if.then4 ], [ null, %if.then ]
  tail call fastcc void @push_conditional(%struct.cpp_reader* %pfile, i32 %skip.1, i32 6, %struct.cpp_hashnode* %node.0) #9
  ret void
}
