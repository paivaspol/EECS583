define internal void @do_ident(%struct.cpp_reader* %pfile) #0 {
entry:
  %call = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #8
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %cmp = icmp eq i8 %bf.load, 61
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([25 x i8]* @.str61, i64 0, i64 0)) #8
  br label %if.end5

if.else:                                          ; preds = %entry
  %ident = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 5
  %0 = load void (%struct.cpp_reader*, i32, %struct.cpp_string*)** %ident, align 8, !tbaa !3
  %tobool = icmp eq void (%struct.cpp_reader*, i32, %struct.cpp_string*)* %0, null
  br i1 %tobool, label %if.end5, label %if.then1

if.then1:                                         ; preds = %if.else
  %directive_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  %1 = load i32* %directive_line, align 4, !tbaa !2
  %str4 = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0
  tail call void %0(%struct.cpp_reader* %pfile, i32 %1, %struct.cpp_string* %str4) #8
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then1, %if.then
  tail call fastcc void @check_eol(%struct.cpp_reader* %pfile) #9
  ret void
}
