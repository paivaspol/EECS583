define internal fastcc %struct.cpp_token* @parse_include(%struct.cpp_reader* %pfile) #0 {
entry:
  %directive = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %0 = load %struct.directive** %directive, align 8, !tbaa !3
  %cmp = icmp eq %struct.directive* %0, bitcast (void (%struct.cpp_reader*)** getelementptr inbounds (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable, i64 0, i32 11, i32 0) to %struct.directive*)
  br i1 %cmp, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %name = getelementptr inbounds %struct.directive* %0, i64 0, i32 1
  %1 = load i8** %name, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %dir.0 = phi i8* [ %1, %if.else ], [ getelementptr inbounds ([18 x i8]* @.str20, i64 0, i64 0), %entry ]
  %call = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #8
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  switch i8 %bf.load, label %if.then12 [
    i8 61, label %if.end18
    i8 63, label %if.end18
    i8 3, label %if.end13
  ]

if.then12:                                        ; preds = %if.end
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str21, i64 0, i64 0), i8* %dir.0) #8
  br label %return

if.end13:                                         ; preds = %if.end
  %call.i = tail call noalias i8* @xmalloc(i64 1024) #8
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end15.i, %if.end13
  %buffer.0.i = phi i8* [ %call.i, %if.end13 ], [ %buffer.1.i, %if.end15.i ]
  %total_len.0.i = phi i64 [ 0, %if.end13 ], [ %sub.ptr.sub.i, %if.end15.i ]
  %capacity.0.i = phi i64 [ 1024, %if.end13 ], [ %capacity.1.i, %if.end15.i ]
  %call1.i = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #8
  %type.i = getelementptr inbounds %struct.cpp_token* %call1.i, i64 0, i32 2
  %bf.load.i = load i8* %type.i, align 2
  switch i8 %bf.load.i, label %if.end.i [
    i8 67, label %glue_header_name.exit.thread
    i8 2, label %glue_header_name.exit
  ]

if.end.i:                                         ; preds = %for.cond.i
  %call6.i = tail call i32 @cpp_token_len(%struct.cpp_token* %call1.i) #8
  %conv.i = zext i32 %call6.i to i64
  %add.i = add i64 %conv.i, %total_len.0.i
  %cmp7.i = icmp ugt i64 %add.i, %capacity.0.i
  br i1 %cmp7.i, label %if.then9.i, label %if.end12.i

if.then9.i:                                       ; preds = %if.end.i
  %add10.i = add i64 %conv.i, %capacity.0.i
  %mul.i = shl i64 %add10.i, 1
  %call11.i = tail call i8* @xrealloc(i8* %buffer.0.i, i64 %mul.i) #8
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then9.i, %if.end.i
  %buffer.1.i = phi i8* [ %call11.i, %if.then9.i ], [ %buffer.0.i, %if.end.i ]
  %capacity.1.i = phi i64 [ %mul.i, %if.then9.i ], [ %capacity.0.i, %if.end.i ]
  %flags.i = getelementptr inbounds %struct.cpp_token* %call1.i, i64 0, i32 3
  %2 = load i8* %flags.i, align 1, !tbaa !0
  %and.i = and i8 %2, 1
  %tobool.i = icmp eq i8 %and.i, 0
  br i1 %tobool.i, label %if.end15.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end12.i
  %inc.i = add i64 %total_len.0.i, 1
  %arrayidx.i = getelementptr inbounds i8* %buffer.1.i, i64 %total_len.0.i
  store i8 32, i8* %arrayidx.i, align 1, !tbaa !0
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then14.i, %if.end12.i
  %total_len.1.i = phi i64 [ %inc.i, %if.then14.i ], [ %total_len.0.i, %if.end12.i ]
  %arrayidx16.i = getelementptr inbounds i8* %buffer.1.i, i64 %total_len.1.i
  %call17.i = tail call i8* @cpp_spell_token(%struct.cpp_reader* %pfile, %struct.cpp_token* %call1.i, i8* %arrayidx16.i) #8
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call17.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %buffer.1.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  br label %for.cond.i

glue_header_name.exit.thread:                     ; preds = %for.cond.i
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([32 x i8]* @.str23, i64 0, i64 0)) #8
  tail call void @free(i8* %buffer.0.i) #8
  br label %return

glue_header_name.exit:                            ; preds = %for.cond.i
  %add24.i = add i64 %total_len.0.i, 1
  %call25.i = tail call i8* @_cpp_unaligned_alloc(%struct.cpp_reader* %pfile, i64 %add24.i) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call25.i, i8* %buffer.0.i, i64 %total_len.0.i, i32 1, i1 false) #4
  %arrayidx26.i = getelementptr inbounds i8* %call25.i, i64 %total_len.0.i
  store i8 0, i8* %arrayidx26.i, align 1, !tbaa !0
  %call27.i = tail call %struct.cpp_token* @_cpp_temp_token(%struct.cpp_reader* %pfile) #8
  %type28.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 2
  store i8 63, i8* %type28.i, align 2
  %flags29.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 3
  store i8 0, i8* %flags29.i, align 1, !tbaa !0
  %conv30.i = trunc i64 %total_len.0.i to i32
  %len31.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 4, i32 0, i32 0
  store i32 %conv30.i, i32* %len31.i, align 4, !tbaa !2
  %text.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 4, i32 0, i32 1
  store i8* %call25.i, i8** %text.i, align 8, !tbaa !3
  tail call void @free(i8* %buffer.0.i) #8
  %cmp15 = icmp eq %struct.cpp_token* %call27.i, null
  br i1 %cmp15, label %return, label %if.end18

if.end18:                                         ; preds = %if.end, %if.end, %glue_header_name.exit
  %header.0 = phi %struct.cpp_token* [ %call27.i, %glue_header_name.exit ], [ %call, %if.end ], [ %call, %if.end ]
  %len = getelementptr inbounds %struct.cpp_token* %header.0, i64 0, i32 4, i32 0, i32 0
  %3 = load i32* %len, align 4, !tbaa !2
  %cmp19 = icmp eq i32 %3, 0
  br i1 %cmp19, label %if.then20, label %return

if.then20:                                        ; preds = %if.end18
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([23 x i8]* @.str22, i64 0, i64 0), i8* %dir.0) #8
  br label %return

return:                                           ; preds = %glue_header_name.exit.thread, %if.end18, %glue_header_name.exit, %if.then20, %if.then12
  %retval.0 = phi %struct.cpp_token* [ null, %if.then12 ], [ null, %if.then20 ], [ null, %glue_header_name.exit ], [ %header.0, %if.end18 ], [ null, %glue_header_name.exit.thread ]
  ret %struct.cpp_token* %retval.0
}
