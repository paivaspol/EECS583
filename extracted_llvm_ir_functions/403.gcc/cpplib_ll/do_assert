define internal void @do_assert(%struct.cpp_reader* %pfile) #0 {
entry:
  %new_answer = alloca %struct.answer*, align 8
  %call = call fastcc %struct.cpp_hashnode* @parse_assertion(%struct.cpp_reader* %pfile, %struct.answer** %new_answer, i32 16) #9
  %tobool = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool, label %if.end11, label %if.then

if.then:                                          ; preds = %entry
  %0 = load %struct.answer** %new_answer, align 8, !tbaa !3
  %next = getelementptr inbounds %struct.answer* %0, i64 0, i32 0
  store %struct.answer* null, %struct.answer** %next, align 8, !tbaa !3
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp = icmp eq i8 %bf.load, 2
  br i1 %cmp, label %if.then1, label %if.end6

if.then1:                                         ; preds = %if.then
  %call2 = call fastcc %struct.answer** @find_answer(%struct.cpp_hashnode* %call, %struct.answer* %0) #9
  %1 = load %struct.answer** %call2, align 8, !tbaa !3
  %tobool3 = icmp eq %struct.answer* %1, null
  br i1 %tobool3, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then1
  %str = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 0, i32 1
  %2 = load i8** %str, align 8, !tbaa !3
  %add.ptr = getelementptr inbounds i8* %2, i64 1
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([17 x i8]* @.str57, i64 0, i64 0), i8* %add.ptr) #8
  br label %if.end11

if.end:                                           ; preds = %if.then1
  %value = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 6
  %answers = bitcast %union.anon* %value to %struct.answer**
  %3 = load %struct.answer** %answers, align 8, !tbaa !3
  store %struct.answer* %3, %struct.answer** %next, align 8, !tbaa !3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  store i8 2, i8* %type, align 4
  %4 = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 6, i32 0
  %.c = bitcast %struct.answer* %0 to %struct.cpp_macro*
  store %struct.cpp_macro* %.c, %struct.cpp_macro** %4, align 8, !tbaa !3
  %count = getelementptr inbounds %struct.answer* %0, i64 0, i32 1
  %5 = load i32* %count, align 4, !tbaa !2
  %sub = add i32 %5, -1
  %conv = zext i32 %sub to i64
  %mul = mul i64 %conv, 24
  %add = add i64 %mul, 40
  %a_buff = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 6
  %6 = load %struct._cpp_buff** %a_buff, align 8, !tbaa !3
  %cur = getelementptr inbounds %struct._cpp_buff* %6, i64 0, i32 2
  %7 = load i8** %cur, align 8, !tbaa !3
  %add.ptr10 = getelementptr inbounds i8* %7, i64 %add
  store i8* %add.ptr10, i8** %cur, align 8, !tbaa !3
  call fastcc void @check_eol(%struct.cpp_reader* %pfile) #9
  br label %if.end11

if.end11:                                         ; preds = %entry, %if.then4, %if.end6
  ret void
}
