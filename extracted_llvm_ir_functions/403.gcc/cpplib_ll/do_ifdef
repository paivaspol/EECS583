define internal void @do_ifdef(%struct.cpp_reader* %pfile) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_reader* %pfile}, i64 0, metadata !1022), !dbg !1697
  tail call void @llvm.dbg.value(metadata !1055, i64 0, metadata !1023), !dbg !1698
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1, !dbg !1699
  %0 = load i8* %skipping, align 1, !dbg !1699, !tbaa !1061
  %tobool = icmp eq i8 %0, 0, !dbg !1699
  br i1 %tobool, label %if.then, label %if.end6, !dbg !1699

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.cpp_hashnode* @lex_macro_node(%struct.cpp_reader* %pfile) #10, !dbg !1700
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_hashnode* %call}, i64 0, metadata !1024), !dbg !1700
  %tobool1 = icmp eq %struct.cpp_hashnode* %call, null, !dbg !1701
  br i1 %tobool1, label %if.end6, label %if.then4, !dbg !1701

if.then4:                                         ; preds = %if.then
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4, !dbg !1702
  %bf.load = load i8* %type, align 4, !dbg !1702
  %cmp = icmp ne i8 %bf.load, 1, !dbg !1702
  %conv = zext i1 %cmp to i32, !dbg !1702
  tail call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !1023), !dbg !1702
  tail call fastcc void @check_eol(%struct.cpp_reader* %pfile) #10, !dbg !1703
  br label %if.end6, !dbg !1703

if.end6:                                          ; preds = %if.then, %entry, %if.then4
  %skip.1 = phi i32 [ 1, %entry ], [ %conv, %if.then4 ], [ 1, %if.then ]
  tail call fastcc void @push_conditional(%struct.cpp_reader* %pfile, i32 %skip.1, i32 3, %struct.cpp_hashnode* null) #10, !dbg !1704
  ret void, !dbg !1705
}
