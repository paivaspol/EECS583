define void @output_func_start_profiler() #0 {
entry:
  %buf = alloca [20 x i8], align 16
  call void @llvm.dbg.declare(metadata !{[20 x i8]* %buf}, metadata !1226), !dbg !2100
  %call = call i32 @mode_for_size(i32 64, i32 1, i32 0) #8, !dbg !2101
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !1232), !dbg !2101
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !1233), !dbg !2102
  call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !1234), !dbg !2103
  call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !1235), !dbg !2104
  call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !1236), !dbg !2105
  %.b = load i1* @need_func_profiler, align 1
  br i1 %.b, label %if.end, label %if.end47, !dbg !2106

if.end:                                           ; preds = %entry
  %0 = load i32* @flag_branch_probabilities, align 4, !dbg !2105, !tbaa !1496
  %1 = load i32* @profile_arc_flag, align 4, !dbg !2104, !tbaa !1496
  %2 = load i32* @flag_test_coverage, align 4, !dbg !2103, !tbaa !1496
  %3 = load i32* @flag_inline_functions, align 4, !dbg !2102, !tbaa !1496
  store i1 false, i1* @need_func_profiler, align 1
  %call1 = call %union.tree_node* @get_file_function_name(i32 73) #8, !dbg !2107
  call void @llvm.dbg.value(metadata !{%union.tree_node* %call1}, i64 0, metadata !1223), !dbg !2107
  %id = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 1, !dbg !2108
  %4 = getelementptr inbounds i8** %id, i64 1, !dbg !2108
  %5 = load i8** %4, align 8, !dbg !2108, !tbaa !1500
  call void @llvm.dbg.value(metadata !{i8* %5}, i64 0, metadata !1230), !dbg !2108
  %call2 = call noalias i8* (i8*, ...)* @concat(i8* %5, i8* getelementptr inbounds ([5 x i8]* @.str26, i64 0, i64 0), i8* null) #8, !dbg !2109
  call void @llvm.dbg.value(metadata !{i8* %call2}, i64 0, metadata !1225), !dbg !2109
  %call3 = call %union.tree_node* @get_identifier(i8* %call2) #8, !dbg !2110
  call void @llvm.dbg.value(metadata !{%union.tree_node* %call3}, i64 0, metadata !1223), !dbg !2110
  call void @free(i8* %call2) #8, !dbg !2111
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !dbg !2112, !tbaa !1500
  %call4 = call %union.tree_node* @build_function_type(%union.tree_node* %6, %union.tree_node* null) #8, !dbg !2112
  %call5 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call3, %union.tree_node* %call4) #8, !dbg !2112
  call void @llvm.dbg.value(metadata !{%union.tree_node* %call5}, i64 0, metadata !1224), !dbg !2112
  %external_flag = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 5, !dbg !2113
  %7 = bitcast [8 x i8]* %external_flag to i64*, !dbg !2113
  %bf.load = load i64* %7, align 8, !dbg !2113
  %bf.clear = and i64 %bf.load, -257, !dbg !2113
  store i64 %bf.clear, i64* %7, align 8, !dbg !2113
  %8 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 14), align 1, !dbg !2114, !tbaa !2115, !range !2116
  %9 = xor i8 %8, 1, !dbg !2114
  %lnot.ext = zext i8 %9 to i32, !dbg !2114
  %public_flag = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 2, !dbg !2114
  %10 = bitcast [4 x i8]* %public_flag to i32*, !dbg !2114
  %bf.load7 = load i32* %10, align 8, !dbg !2114
  %bf.value = shl nuw nsw i32 %lnot.ext, 19, !dbg !2114
  %bf.shl = and i32 %bf.value, 524288, !dbg !2114
  %bf.clear8 = and i32 %bf.load7, -589825, !dbg !2114
  %bf.set = or i32 %bf.clear8, %bf.shl, !dbg !2117
  %bf.set12 = or i32 %bf.set, 65536, !dbg !2117
  store i32 %bf.set12, i32* %10, align 8, !dbg !2117
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !dbg !2118, !tbaa !1500
  %call13 = call %union.tree_node* @build_decl(i32 36, %union.tree_node* null, %union.tree_node* %11) #8, !dbg !2118
  %result = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 11, !dbg !2118
  store %union.tree_node* %call13, %union.tree_node** %result, align 8, !dbg !2118, !tbaa !1500
  %call15 = call %union.tree_node* @pushdecl(%union.tree_node* %call5) #8, !dbg !2119
  call void @llvm.dbg.value(metadata !{%union.tree_node* %call15}, i64 0, metadata !1224), !dbg !2119
  call void @rest_of_decl_compilation(%union.tree_node* %call15, i8* null, i32 1, i32 0) #8, !dbg !2120
  call void @announce_function(%union.tree_node* %call15) #8, !dbg !2121
  store %union.tree_node* %call15, %union.tree_node** @current_function_decl, align 8, !dbg !2122, !tbaa !1500
  %12 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !2123, !tbaa !1500
  %initial = getelementptr inbounds %union.tree_node* %call15, i64 0, i32 0, i32 12, !dbg !2123
  store %union.tree_node* %12, %union.tree_node** %initial, align 8, !dbg !2123, !tbaa !1500
  call void @make_decl_rtl(%union.tree_node* %call15, i8* null) #8, !dbg !2124
  %13 = load i8** @input_filename, align 8, !dbg !2125, !tbaa !1500
  %14 = load i32* @lineno, align 4, !dbg !2125, !tbaa !1496
  call void @init_function_start(%union.tree_node* %call15, i8* %13, i32 %14) #8, !dbg !2125
  call void @pushlevel(i32 0) #8, !dbg !2126
  call void @expand_function_start(%union.tree_node* %call15, i32 0) #8, !dbg !2127
  %arraydecay = getelementptr inbounds [20 x i8]* %buf, i64 0, i64 0, !dbg !2128
  %call17 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i64 0, i64 0), i32 0) #8, !dbg !2128
  %15 = load i32* @target_flags, align 4, !dbg !2130, !tbaa !1496
  %and = lshr i32 %15, 25, !dbg !2130
  %16 = and i32 %and, 1, !dbg !2130
  %17 = or i32 %16, 4, !dbg !2130
  %call23 = call i8* @ggc_alloc_string(i8* %arraydecay, i32 -1) #8, !dbg !2131
  %call24 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %17, i8* %call23) #8, !dbg !2131
  %call25 = call %struct.rtx_def* @force_reg(i32 %17, %struct.rtx_def* %call24) #8, !dbg !2131
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call25}, i64 0, metadata !1231), !dbg !2131
  %18 = load i32* @target_flags, align 4, !dbg !2132, !tbaa !1496
  %and26 = lshr i32 %18, 25, !dbg !2132
  %19 = and i32 %and26, 1, !dbg !2132
  %20 = or i32 %19, 4, !dbg !2132
  %call29 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %20, i8* getelementptr inbounds ([15 x i8]* @.str29, i64 0, i64 0)) #8, !dbg !2132
  %21 = load i32* @target_flags, align 4, !dbg !2132, !tbaa !1496
  %and30 = lshr i32 %21, 25, !dbg !2132
  %22 = and i32 %and30, 1, !dbg !2132
  %23 = or i32 %22, 4, !dbg !2132
  call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %call29, i32 0, i32 %call, i32 1, %struct.rtx_def* %call25, i32 %23) #8, !dbg !2132
  %24 = load i8** @input_filename, align 8, !dbg !2133, !tbaa !1500
  %25 = load i32* @lineno, align 4, !dbg !2133, !tbaa !1496
  call void @expand_function_end(i8* %24, i32 %25, i32 0) #8, !dbg !2133
  %call33 = call %union.tree_node* @poplevel(i32 1, i32 0, i32 1) #8, !dbg !2134
  store i32 0, i32* @flag_inline_functions, align 4, !dbg !2135, !tbaa !1496
  store i32 0, i32* @flag_test_coverage, align 4, !dbg !2136, !tbaa !1496
  store i32 0, i32* @profile_arc_flag, align 4, !dbg !2137, !tbaa !1496
  store i32 0, i32* @flag_branch_probabilities, align 4, !dbg !2138, !tbaa !1496
  call void @rest_of_compilation(%union.tree_node* %call15) #8, !dbg !2139
  store i32 %3, i32* @flag_inline_functions, align 4, !dbg !2140, !tbaa !1496
  store i32 %2, i32* @flag_test_coverage, align 4, !dbg !2141, !tbaa !1496
  store i32 %1, i32* @profile_arc_flag, align 4, !dbg !2142, !tbaa !1496
  store i32 %0, i32* @flag_branch_probabilities, align 4, !dbg !2143, !tbaa !1496
  %26 = load i32* @quiet_flag, align 4, !dbg !2144, !tbaa !1496
  %tobool34 = icmp eq i32 %26, 0, !dbg !2144
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !2144

if.then35:                                        ; preds = %if.end
  %27 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2145, !tbaa !1500
  %call36 = call i32 @fflush(%struct._IO_FILE* %27) #8, !dbg !2145
  br label %if.end37, !dbg !2145

if.end37:                                         ; preds = %if.end, %if.then35
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !dbg !2146, !tbaa !1500
  %28 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 14), align 1, !dbg !2147, !tbaa !2115, !range !2116
  %tobool38 = icmp eq i8 %28, 0, !dbg !2147
  br i1 %tobool38, label %if.end47, label %if.then39, !dbg !2147

if.then39:                                        ; preds = %if.end37
  %29 = load void (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 0, i32 13), align 8, !dbg !2148, !tbaa !1500
  %rtl = getelementptr inbounds %union.tree_node* %call15, i64 0, i32 0, i32 17, !dbg !2148
  %30 = load %struct.rtx_def** %rtl, align 8, !dbg !2148, !tbaa !1500
  %tobool41 = icmp eq %struct.rtx_def* %30, null, !dbg !2148
  br i1 %tobool41, label %cond.false, label %cond.end, !dbg !2148

cond.false:                                       ; preds = %if.then39
  call void @make_decl_rtl(%union.tree_node* %call15, i8* null) #8, !dbg !2148
  %31 = load %struct.rtx_def** %rtl, align 8, !dbg !2148, !tbaa !1500
  br label %cond.end, !dbg !2148

cond.end:                                         ; preds = %if.then39, %cond.false
  %cond46 = phi %struct.rtx_def* [ %31, %cond.false ], [ %30, %if.then39 ], !dbg !2148
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond46, i64 0, i32 1, i64 0, !dbg !2148
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2148
  %32 = load %struct.rtx_def** %rtx, align 8, !dbg !2148, !tbaa !1500
  call void %29(%struct.rtx_def* %32, i32 65535) #8, !dbg !2148
  br label %if.end47, !dbg !2148

if.end47:                                         ; preds = %if.end37, %entry, %cond.end
  ret void, !dbg !2148
}
