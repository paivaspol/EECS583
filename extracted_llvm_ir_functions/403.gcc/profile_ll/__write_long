define internal fastcc void @__write_long(i64 %value, %struct._IO_FILE* nocapture %file) #0 {
entry:
  %c = alloca [10 x i8], align 1
  call void @llvm.dbg.value(metadata !1990, i64 0, metadata !1450), !dbg !1991
  call void @llvm.dbg.declare(metadata !{[10 x i8]* %c}, metadata !1451), !dbg !1992
  tail call void @llvm.dbg.value(metadata !1990, i64 0, metadata !1993), !dbg !1995
  %cmp.i = icmp slt i64 %value, 0, !dbg !1996
  %sub.i = sub nsw i64 0, %value, !dbg !1997
  tail call void @llvm.dbg.value(metadata !{i64 %sub.i}, i64 0, metadata !1998), !dbg !1997
  %sub.value.i = select i1 %cmp.i, i64 %sub.i, i64 %value, !dbg !1999
  tail call void @llvm.dbg.value(metadata !1692, i64 0, metadata !2000), !dbg !2001
  br label %for.body.i, !dbg !2001

for.body.i:                                       ; preds = %for.body.i, %entry
  %i.05.i = phi i64 [ 0, %entry ], [ %inc.i, %for.body.i ]
  %value.addr.14.i = phi i64 [ %sub.value.i, %entry ], [ %div.i, %for.body.i ]
  %cmp10.i = icmp eq i64 %i.05.i, 3, !dbg !2003
  %conv.i = select i1 %cmp10.i, i64 127, i64 255, !dbg !2003
  %and.i = and i64 %conv.i, %value.addr.14.i, !dbg !2003
  %conv12.i = trunc i64 %and.i to i8, !dbg !2003
  %arrayidx.i = getelementptr inbounds [10 x i8]* %c, i64 0, i64 %i.05.i, !dbg !2003
  store i8 %conv12.i, i8* %arrayidx.i, align 1, !dbg !2003, !tbaa !1497
  %div.i = sdiv i64 %value.addr.14.i, 256, !dbg !2005
  tail call void @llvm.dbg.value(metadata !{i64 %div.i}, i64 0, metadata !1998), !dbg !2005
  %inc.i = add i64 %i.05.i, 1, !dbg !2001
  tail call void @llvm.dbg.value(metadata !1990, i64 0, metadata !2000), !dbg !2001
  %exitcond.i = icmp eq i64 %inc.i, 4, !dbg !2001
  br i1 %exitcond.i, label %for.end.i, label %for.body.i, !dbg !2001

for.end.i:                                        ; preds = %for.body.i
  %arraydecay = getelementptr inbounds [10 x i8]* %c, i64 0, i64 0, !dbg !1994
  %cond.i = select i1 %cmp.i, i8 -128, i8 0, !dbg !1996
  switch i64 %div.i, label %return [
    i64 -1, label %if.else
    i64 0, label %if.else
  ], !dbg !2006

if.else:                                          ; preds = %for.end.i, %for.end.i
  %arrayidx26.i = getelementptr inbounds [10 x i8]* %c, i64 0, i64 3, !dbg !2007
  %0 = load i8* %arrayidx26.i, align 1, !dbg !2007, !tbaa !1497
  %or.i = or i8 %0, %cond.i, !dbg !2007
  store i8 %or.i, i8* %arrayidx26.i, align 1, !dbg !2007, !tbaa !1497
  %call2 = call i64 @fwrite(i8* %arraydecay, i64 1, i64 4, %struct._IO_FILE* %file) #8, !dbg !2008
  br label %return, !dbg !2008

return:                                           ; preds = %for.end.i, %if.else
  ret void
}
