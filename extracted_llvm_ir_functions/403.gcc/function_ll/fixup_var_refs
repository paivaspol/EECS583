define internal fastcc void @fixup_var_refs(%struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, %struct.rtx_def* %may_share, %struct.hash_table* %ht) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %var}, i64 0, metadata !2434), !dbg !2780
  tail call void @llvm.dbg.value(metadata !{i32 %promoted_mode}, i64 0, metadata !2435), !dbg !2781
  tail call void @llvm.dbg.value(metadata !{i32 %unsignedp}, i64 0, metadata !2436), !dbg !2782
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %may_share}, i64 0, metadata !2437), !dbg !2783
  tail call void @llvm.dbg.value(metadata !{%struct.hash_table* %ht}, i64 0, metadata !2438), !dbg !2784
  %call = tail call %struct.rtx_def* @get_insns() #11, !dbg !2785
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !2440), !dbg !2785
  %0 = load %struct.function** @cfun, align 8, !dbg !2786, !tbaa !2729
  %emit = getelementptr inbounds %struct.function* %0, i64 0, i32 3, !dbg !2786
  %1 = load %struct.emit_status** %emit, align 8, !dbg !2786, !tbaa !2729
  %sequence_stack = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 5, !dbg !2786
  %2 = load %struct.sequence_stack** %sequence_stack, align 8, !dbg !2786, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%struct.sequence_stack* %2}, i64 0, metadata !2441), !dbg !2786
  %x_rtl_expr_chain = getelementptr inbounds %struct.function* %0, i64 0, i32 27, !dbg !2787
  %3 = load %union.tree_node** %x_rtl_expr_chain, align 8, !dbg !2787, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %3}, i64 0, metadata !2442), !dbg !2787
  %tobool = icmp eq %struct.hash_table* %ht, null, !dbg !2788
  %cmp3 = icmp eq %struct.sequence_stack* %2, null, !dbg !2789
  br i1 %tobool, label %if.end2, label %if.then, !dbg !2788

if.then:                                          ; preds = %entry
  br i1 %cmp3, label %if.end, label %if.then1, !dbg !2790

if.then1:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 1593, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.fixup_var_refs, i64 0, i64 0)) #9, !dbg !2792
  unreachable, !dbg !2792

if.end:                                           ; preds = %if.then
  tail call void @llvm.dbg.value(metadata !{%struct.hash_table* %ht}, i64 0, metadata !2793) #6, !dbg !2795
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %var}, i64 0, metadata !2796) #6, !dbg !2797
  tail call void @llvm.dbg.value(metadata !{i32 %promoted_mode}, i64 0, metadata !2798) #6, !dbg !2799
  tail call void @llvm.dbg.value(metadata !{i32 %unsignedp}, i64 0, metadata !2800) #6, !dbg !2801
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %may_share}, i64 0, metadata !2802) #6, !dbg !2803
  %4 = getelementptr inbounds %struct.rtx_def* %var, i64 0, i32 0, i64 0, !dbg !2804
  %call.i = tail call %struct.hash_entry* @hash_lookup(%struct.hash_table* %ht, i8* %4, i32 0, i8* (%struct.obstack*, i8*)* null) #11, !dbg !2804
  %insns.i = getelementptr inbounds %struct.hash_entry* %call.i, i64 1, !dbg !2805
  %5 = bitcast %struct.hash_entry* %insns.i to %struct.rtx_def**, !dbg !2805
  %insn_list.015.i = load %struct.rtx_def** %5, align 8, !dbg !2805
  %cmp16.i = icmp eq %struct.rtx_def* %insn_list.015.i, null, !dbg !2805
  br i1 %cmp16.i, label %for.end21, label %for.body.i, !dbg !2805

for.body.i:                                       ; preds = %if.end, %for.inc.i
  %insn_list.017.i = phi %struct.rtx_def* [ %insn_list.0.i, %for.inc.i ], [ %insn_list.015.i, %if.end ]
  %fld.i = getelementptr inbounds %struct.rtx_def* %insn_list.017.i, i64 0, i32 1, !dbg !2807
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**, !dbg !2807
  %6 = load %struct.rtx_def** %rtx.i, align 8, !dbg !2807, !tbaa !2729
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2807
  %bf.load.i = load i32* %7, align 8, !dbg !2807
  %bf.clear.i = and i32 %bf.load.i, 65535, !dbg !2807
  %idxprom14.i = zext i32 %bf.clear.i to i64, !dbg !2807
  %arrayidx1.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom14.i, !dbg !2807
  %8 = load i8* %arrayidx1.i, align 1, !dbg !2807, !tbaa !2730
  %cmp2.i = icmp eq i8 %8, 105, !dbg !2807
  br i1 %cmp2.i, label %if.then.i, label %for.inc.i, !dbg !2807

if.then.i:                                        ; preds = %for.body.i
  tail call fastcc void @fixup_var_refs_insn(%struct.rtx_def* %6, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 1, %struct.rtx_def* %may_share) #11, !dbg !2808
  br label %for.inc.i, !dbg !2808

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %insn_list.017.i, i64 0, i32 1, i64 1, !dbg !2805
  %rtx9.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**, !dbg !2805
  %insn_list.0.i = load %struct.rtx_def** %rtx9.i, align 8, !dbg !2805
  %cmp.i = icmp eq %struct.rtx_def* %insn_list.0.i, null, !dbg !2805
  br i1 %cmp.i, label %for.end21, label %for.body.i, !dbg !2805

if.end2:                                          ; preds = %entry
  %conv = zext i1 %cmp3 to i32, !dbg !2789
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %call, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %conv, %struct.rtx_def* %may_share) #10, !dbg !2789
  br i1 %cmp3, label %for.cond11.preheader, label %for.body, !dbg !2809

for.cond11.preheader:                             ; preds = %for.body, %if.end2
  %tobool1248 = icmp eq %union.tree_node* %3, null, !dbg !2811
  br i1 %tobool1248, label %for.end21, label %for.body13, !dbg !2811

for.body:                                         ; preds = %if.end2, %for.body
  %stack.051 = phi %struct.sequence_stack* [ %13, %for.body ], [ %2, %if.end2 ]
  %first = getelementptr inbounds %struct.sequence_stack* %stack.051, i64 0, i32 0, !dbg !2812
  %9 = load %struct.rtx_def** %first, align 8, !dbg !2812, !tbaa !2729
  %last = getelementptr inbounds %struct.sequence_stack* %stack.051, i64 0, i32 1, !dbg !2812
  %10 = load %struct.rtx_def** %last, align 8, !dbg !2812, !tbaa !2729
  tail call void @push_to_full_sequence(%struct.rtx_def* %9, %struct.rtx_def* %10) #11, !dbg !2812
  %11 = load %struct.rtx_def** %first, align 8, !dbg !2814, !tbaa !2729
  %next = getelementptr inbounds %struct.sequence_stack* %stack.051, i64 0, i32 3, !dbg !2814
  %12 = load %struct.sequence_stack** %next, align 8, !dbg !2814, !tbaa !2729
  %cmp6 = icmp ne %struct.sequence_stack* %12, null, !dbg !2814
  %conv7 = zext i1 %cmp6 to i32, !dbg !2814
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %11, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %conv7, %struct.rtx_def* %may_share) #10, !dbg !2814
  %call8 = tail call %struct.rtx_def* @get_last_insn() #11, !dbg !2815
  store %struct.rtx_def* %call8, %struct.rtx_def** %last, align 8, !dbg !2815, !tbaa !2729
  tail call void @end_sequence() #11, !dbg !2816
  %13 = load %struct.sequence_stack** %next, align 8, !dbg !2809, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%struct.sequence_stack* %13}, i64 0, metadata !2441), !dbg !2809
  %tobool4 = icmp eq %struct.sequence_stack* %13, null, !dbg !2809
  br i1 %tobool4, label %for.cond11.preheader, label %for.body, !dbg !2809

for.body13:                                       ; preds = %for.inc20, %for.cond11.preheader
  %pending.049 = phi %union.tree_node* [ %3, %for.cond11.preheader ], [ %19, %for.inc20 ]
  %value = getelementptr inbounds %union.tree_node* %pending.049, i64 0, i32 0, i32 2, !dbg !2817
  %14 = bitcast i32* %value to %union.tree_node**, !dbg !2817
  %15 = load %union.tree_node** %14, align 8, !dbg !2817, !tbaa !2729
  %operands = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2, !dbg !2817
  %16 = bitcast i32* %operands to %struct.rtx_def**, !dbg !2817
  %17 = load %struct.rtx_def** %16, align 8, !dbg !2817, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %17}, i64 0, metadata !2443), !dbg !2817
  %18 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !2818, !tbaa !2729
  %cmp14 = icmp ne %struct.rtx_def* %17, %18, !dbg !2818
  %cmp16 = icmp ne %struct.rtx_def* %17, null, !dbg !2818
  %or.cond = and i1 %cmp14, %cmp16, !dbg !2818
  br i1 %or.cond, label %if.then18, label %for.inc20, !dbg !2818

if.then18:                                        ; preds = %for.body13
  tail call void @push_to_sequence(%struct.rtx_def* %17) #11, !dbg !2819
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %17, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 0, %struct.rtx_def* %may_share) #10, !dbg !2821
  tail call void @end_sequence() #11, !dbg !2822
  br label %for.inc20, !dbg !2823

for.inc20:                                        ; preds = %for.body13, %if.then18
  %chain = getelementptr inbounds %union.tree_node* %pending.049, i64 0, i32 0, i32 0, i32 0, !dbg !2811
  %19 = load %union.tree_node** %chain, align 8, !dbg !2811, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %19}, i64 0, metadata !2439), !dbg !2811
  %tobool12 = icmp eq %union.tree_node* %19, null, !dbg !2811
  br i1 %tobool12, label %for.end21, label %for.body13, !dbg !2811

for.end21:                                        ; preds = %for.inc.i, %for.cond11.preheader, %for.inc20, %if.end
  ret void, !dbg !2824
}
