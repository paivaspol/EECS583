define %struct.rtx_def* @assign_stack_temp_for_type(i32 %mode, i64 %size, i32 %keep, %union.tree_node* %type) #0 {
entry:
  %cmp = icmp eq i64 %size, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 674, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.assign_stack_temp_for_type, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i32 %mode, 51
  br i1 %cmp1, label %if.end3, label %if.else

if.else:                                          ; preds = %if.end
  %call = tail call i32 @get_mode_alignment(i32 %mode) #10
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.else
  %align.0 = phi i32 [ %call, %if.else ], [ 128, %if.end ]
  %tobool = icmp eq %union.tree_node* %type, null
  br i1 %tobool, label %if.end6, label %if.then8

if.end6:                                          ; preds = %if.end3
  %call5 = tail call %union.tree_node* @type_for_mode(i32 %mode, i32 0) #10
  %tobool7 = icmp eq %union.tree_node* %call5, null
  br i1 %tobool7, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end6, %if.end3
  %type.addr.0343 = phi %union.tree_node* [ %call5, %if.end6 ], [ %type, %if.end3 ]
  %call9 = tail call i32 @ix86_local_alignment(%union.tree_node* %type.addr.0343, i32 %align.0) #10
  br label %if.end10

if.end10:                                         ; preds = %if.end6, %if.then8
  %tobool7346 = phi i1 [ true, %if.then8 ], [ false, %if.end6 ]
  %type.addr.0344 = phi %union.tree_node* [ %type.addr.0343, %if.then8 ], [ null, %if.end6 ]
  %align.1 = phi i32 [ %call9, %if.then8 ], [ %align.0, %if.end6 ]
  %0 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_temp_slots = getelementptr inbounds %struct.function* %0, i64 0, i32 39
  %p.0357 = load %struct.temp_slot** %x_temp_slots, align 8
  %tobool11358 = icmp eq %struct.temp_slot* %p.0357, null
  br i1 %tobool11358, label %if.then94, label %for.body

for.body:                                         ; preds = %if.end10, %for.inc
  %p.0360 = phi %struct.temp_slot* [ %p.0, %for.inc ], [ %p.0357, %if.end10 ]
  %best_p.0359 = phi %struct.temp_slot* [ %best_p.1, %for.inc ], [ null, %if.end10 ]
  %align12 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 3
  %1 = load i32* %align12, align 4, !tbaa !4
  %cmp13 = icmp ult i32 %1, %align.1
  br i1 %cmp13, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %size14 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 4
  %2 = load i64* %size14, align 8, !tbaa !5
  %cmp15 = icmp slt i64 %2, %size
  br i1 %cmp15, label %for.inc, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true
  %slot17 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 1
  %3 = load %struct.rtx_def** %slot17, align 8, !tbaa !0
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp18 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp18, label %land.lhs.true19, label %for.inc

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %in_use = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 7
  %5 = load i8* %in_use, align 1, !tbaa !1
  %tobool20 = icmp eq i8 %5, 0
  br i1 %tobool20, label %land.lhs.true21, label %for.inc

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %type22 = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 5
  %6 = load %union.tree_node** %type22, align 8, !tbaa !0
  %call23 = tail call i32 @objects_must_conflict_p(%union.tree_node* %6, %union.tree_node* %type.addr.0344) #10
  %tobool24 = icmp eq i32 %call23, 0
  br i1 %tobool24, label %for.inc, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %land.lhs.true21
  %cmp26 = icmp eq %struct.temp_slot* %best_p.0359, null
  br i1 %cmp26, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true25
  %size27 = getelementptr inbounds %struct.temp_slot* %best_p.0359, i64 0, i32 4
  %7 = load i64* %size27, align 8, !tbaa !5
  %8 = load i64* %size14, align 8, !tbaa !5
  %cmp29 = icmp sgt i64 %7, %8
  br i1 %cmp29, label %if.then38, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %cmp33 = icmp eq i64 %7, %8
  br i1 %cmp33, label %land.lhs.true34, label %for.inc

land.lhs.true34:                                  ; preds = %lor.lhs.false30
  %align35 = getelementptr inbounds %struct.temp_slot* %best_p.0359, i64 0, i32 3
  %9 = load i32* %align35, align 4, !tbaa !4
  %10 = load i32* %align12, align 4, !tbaa !4
  %cmp37 = icmp ugt i32 %9, %10
  br i1 %cmp37, label %if.then38, label %for.inc

if.then38:                                        ; preds = %lor.lhs.false, %land.lhs.true25, %land.lhs.true34
  %11 = load i32* %align12, align 4, !tbaa !4
  %cmp40 = icmp eq i32 %11, %align.1
  br i1 %cmp40, label %land.lhs.true41, label %for.inc

land.lhs.true41:                                  ; preds = %if.then38
  %12 = load i64* %size14, align 8, !tbaa !5
  %cmp43 = icmp eq i64 %12, %size
  br i1 %cmp43, label %if.end91, label %for.inc

for.inc:                                          ; preds = %if.then38, %land.lhs.true41, %land.lhs.true21, %land.lhs.true19, %land.lhs.true, %for.body, %land.lhs.true16, %lor.lhs.false30, %land.lhs.true34
  %best_p.1 = phi %struct.temp_slot* [ %best_p.0359, %land.lhs.true19 ], [ %best_p.0359, %land.lhs.true34 ], [ %best_p.0359, %lor.lhs.false30 ], [ %best_p.0359, %land.lhs.true21 ], [ %best_p.0359, %land.lhs.true16 ], [ %best_p.0359, %land.lhs.true ], [ %best_p.0359, %for.body ], [ %p.0360, %land.lhs.true41 ], [ %p.0360, %if.then38 ]
  %next = getelementptr inbounds %struct.temp_slot* %p.0360, i64 0, i32 0
  %p.0 = load %struct.temp_slot** %next, align 8
  %tobool11 = icmp eq %struct.temp_slot* %p.0, null
  br i1 %tobool11, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %tobool47 = icmp eq %struct.temp_slot* %best_p.1, null
  br i1 %tobool47, label %if.then94, label %if.then48

if.then48:                                        ; preds = %for.end
  %slot49 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 1
  %13 = load %struct.rtx_def** %slot49, align 8, !tbaa !0
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load50 = load i32* %14, align 8
  %bf.clear52 = and i32 %bf.load50, 16711680
  %cmp53 = icmp eq i32 %bf.clear52, 3342336
  br i1 %cmp53, label %if.then54, label %if.end129

if.then54:                                        ; preds = %if.then48
  %align55 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 3
  %15 = load i32* %align55, align 4, !tbaa !4
  %div = lshr i32 %15, 3
  %conv341 = zext i32 %div to i64
  %add = add i64 %size, -1
  %sub = add i64 %add, %conv341
  %neg = sub i32 0, %div
  %conv57 = sext i32 %neg to i64
  %and = and i64 %sub, %conv57
  %size58 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 4
  %16 = load i64* %size58, align 8, !tbaa !5
  %sub59 = sub nsw i64 %16, %and
  %cmp61 = icmp slt i64 %sub59, %conv341
  br i1 %cmp61, label %if.end91, label %if.then63

if.then63:                                        ; preds = %if.then54
  %call64 = tail call i8* @ggc_alloc(i64 88) #10
  %17 = bitcast i8* %call64 to %struct.temp_slot*
  %18 = getelementptr inbounds i8* %call64, i64 57
  store i8 0, i8* %18, align 1, !tbaa !1
  %19 = getelementptr inbounds i8* %call64, i64 56
  store i8 0, i8* %19, align 1, !tbaa !1
  %20 = load i64* %size58, align 8, !tbaa !5
  %sub67 = sub nsw i64 %20, %and
  %size68 = getelementptr inbounds i8* %call64, i64 32
  %21 = bitcast i8* %size68 to i64*
  store i64 %sub67, i64* %21, align 8, !tbaa !5
  %base_offset = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 11
  %22 = load i64* %base_offset, align 8, !tbaa !5
  %add69 = add nsw i64 %22, %and
  %base_offset70 = getelementptr inbounds i8* %call64, i64 72
  %23 = bitcast i8* %base_offset70 to i64*
  store i64 %add69, i64* %23, align 8, !tbaa !5
  %full_size = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 12
  %24 = load i64* %full_size, align 8, !tbaa !5
  %sub71 = sub nsw i64 %24, %and
  %full_size72 = getelementptr inbounds i8* %call64, i64 80
  %25 = bitcast i8* %full_size72 to i64*
  store i64 %sub71, i64* %25, align 8, !tbaa !5
  %26 = load %struct.rtx_def** %slot49, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %call74 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %27, i64 %and) #10
  %call75 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call74) #10
  %slot76 = getelementptr inbounds i8* %call64, i64 8
  %28 = bitcast i8* %slot76 to %struct.rtx_def**
  store %struct.rtx_def* %call75, %struct.rtx_def** %28, align 8, !tbaa !0
  %29 = load i32* %align55, align 4, !tbaa !4
  %align78 = getelementptr inbounds i8* %call64, i64 24
  %30 = bitcast i8* %align78 to i32*
  store i32 %29, i32* %30, align 4, !tbaa !4
  %address = getelementptr inbounds i8* %call64, i64 16
  %31 = bitcast i8* %address to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %31, align 8, !tbaa !0
  %rtl_expr = getelementptr inbounds i8* %call64, i64 48
  %32 = bitcast i8* %rtl_expr to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %32, align 8, !tbaa !0
  %type79 = getelementptr inbounds %struct.temp_slot* %best_p.1, i64 0, i32 5
  %33 = load %union.tree_node** %type79, align 8, !tbaa !0
  %type80 = getelementptr inbounds i8* %call64, i64 40
  %34 = bitcast i8* %type80 to %union.tree_node**
  store %union.tree_node* %33, %union.tree_node** %34, align 8, !tbaa !0
  %35 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_temp_slots81 = getelementptr inbounds %struct.function* %35, i64 0, i32 39
  %36 = load %struct.temp_slot** %x_temp_slots81, align 8, !tbaa !0
  %next82 = bitcast i8* %call64 to %struct.temp_slot**
  store %struct.temp_slot* %36, %struct.temp_slot** %next82, align 8, !tbaa !0
  %37 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_temp_slots83 = getelementptr inbounds %struct.function* %37, i64 0, i32 39
  store %struct.temp_slot* %17, %struct.temp_slot** %x_temp_slots83, align 8, !tbaa !0
  %38 = load %struct.rtx_def** %28, align 8, !tbaa !0
  %39 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_stack_slot_list = getelementptr inbounds %struct.function* %39, i64 0, i32 26
  %40 = load %struct.rtx_def** %x_stack_slot_list, align 8, !tbaa !0
  %call85 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %38, %struct.rtx_def* %40) #10
  %41 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_stack_slot_list86 = getelementptr inbounds %struct.function* %41, i64 0, i32 26
  store %struct.rtx_def* %call85, %struct.rtx_def** %x_stack_slot_list86, align 8, !tbaa !0
  store i64 %and, i64* %size58, align 8, !tbaa !5
  store i64 %and, i64* %full_size, align 8, !tbaa !5
  br label %if.end129

if.end91:                                         ; preds = %land.lhs.true41, %if.then54
  %p.1 = phi %struct.temp_slot* [ %best_p.1, %if.then54 ], [ %p.0360, %land.lhs.true41 ]
  %cmp92 = icmp eq %struct.temp_slot* %p.1, null
  br i1 %cmp92, label %if.then94, label %if.end129

if.then94:                                        ; preds = %if.end10, %if.end91, %for.end
  %42 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_frame_offset = getelementptr inbounds %struct.function* %42, i64 0, i32 32
  %43 = load i64* %x_frame_offset, align 8, !tbaa !5
  %call95 = tail call i8* @ggc_alloc(i64 88) #10
  %44 = bitcast i8* %call95 to %struct.temp_slot*
  %cmp99 = icmp ult i32 %align.1, 128
  %or.cond = and i1 %cmp1, %cmp99
  br i1 %or.cond, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.then94
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 759, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.assign_stack_temp_for_type, i64 0, i64 0)) #8
  unreachable

if.end102:                                        ; preds = %if.then94
  br i1 %cmp1, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end102
  %div105 = lshr i32 %align.1, 3
  %conv106 = zext i32 %div105 to i64
  %add107 = add i64 %size, 4294967295
  %sub108 = add i64 %add107, %conv106
  %neg111 = sub i32 0, %div105
  %conv112 = zext i32 %neg111 to i64
  %and113 = and i64 %sub108, %conv112
  br label %cond.end

cond.end:                                         ; preds = %if.end102, %cond.true
  %cond = phi i64 [ %and113, %cond.true ], [ %size, %if.end102 ]
  %45 = load %struct.function** @cfun, align 8, !tbaa !0
  %call.i = tail call fastcc %struct.rtx_def* @assign_stack_local_1(i32 %mode, i64 %cond, i32 %align.1, %struct.function* %45) #10
  %slot115 = getelementptr inbounds i8* %call95, i64 8
  %46 = bitcast i8* %slot115 to %struct.rtx_def**
  store %struct.rtx_def* %call.i, %struct.rtx_def** %46, align 8, !tbaa !0
  %align116 = getelementptr inbounds i8* %call95, i64 24
  %47 = bitcast i8* %align116 to i32*
  store i32 %align.1, i32* %47, align 4, !tbaa !4
  %48 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_frame_offset117 = getelementptr inbounds %struct.function* %48, i64 0, i32 32
  %49 = load i64* %x_frame_offset117, align 8, !tbaa !5
  %sub118 = sub nsw i64 %43, %49
  %size119 = getelementptr inbounds i8* %call95, i64 32
  %50 = bitcast i8* %size119 to i64*
  store i64 %sub118, i64* %50, align 8, !tbaa !5
  %51 = load i64* %x_frame_offset117, align 8, !tbaa !5
  %base_offset121 = getelementptr inbounds i8* %call95, i64 72
  %52 = bitcast i8* %base_offset121 to i64*
  store i64 %51, i64* %52, align 8, !tbaa !5
  %53 = load i64* %x_frame_offset117, align 8, !tbaa !5
  %sub123 = sub nsw i64 %43, %53
  %full_size124 = getelementptr inbounds i8* %call95, i64 80
  %54 = bitcast i8* %full_size124 to i64*
  store i64 %sub123, i64* %54, align 8, !tbaa !5
  %address125 = getelementptr inbounds i8* %call95, i64 16
  %55 = bitcast i8* %address125 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %55, align 8, !tbaa !0
  %56 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_temp_slots126 = getelementptr inbounds %struct.function* %56, i64 0, i32 39
  %57 = load %struct.temp_slot** %x_temp_slots126, align 8, !tbaa !0
  %next127 = bitcast i8* %call95 to %struct.temp_slot**
  store %struct.temp_slot* %57, %struct.temp_slot** %next127, align 8, !tbaa !0
  %58 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_temp_slots128 = getelementptr inbounds %struct.function* %58, i64 0, i32 39
  store %struct.temp_slot* %44, %struct.temp_slot** %x_temp_slots128, align 8, !tbaa !0
  br label %if.end129

if.end129:                                        ; preds = %if.then48, %if.then63, %cond.end, %if.end91
  %p.2 = phi %struct.temp_slot* [ %44, %cond.end ], [ %p.1, %if.end91 ], [ %best_p.1, %if.then63 ], [ %best_p.1, %if.then48 ]
  %in_use130 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 7
  store i8 1, i8* %in_use130, align 1, !tbaa !1
  %addr_taken131 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 8
  store i8 0, i8* %addr_taken131, align 1, !tbaa !1
  %59 = load %struct.function** @cfun, align 8, !tbaa !0
  %emit = getelementptr inbounds %struct.function* %59, i64 0, i32 3
  %60 = load %struct.emit_status** %emit, align 8, !tbaa !0
  %sequence_rtl_expr = getelementptr inbounds %struct.emit_status* %60, i64 0, i32 4
  %61 = load %union.tree_node** %sequence_rtl_expr, align 8, !tbaa !0
  %rtl_expr132 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 6
  store %union.tree_node* %61, %union.tree_node** %rtl_expr132, align 8, !tbaa !0
  %type133 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 5
  store %union.tree_node* %type.addr.0344, %union.tree_node** %type133, align 8, !tbaa !0
  %cmp134 = icmp eq i32 %keep, 2
  br i1 %cmp134, label %if.then136, label %if.else138

if.then136:                                       ; preds = %if.end129
  %62 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_target_temp_slot_level = getelementptr inbounds %struct.function* %62, i64 0, i32 42
  %63 = load i32* %x_target_temp_slot_level, align 4, !tbaa !4
  %level = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 9
  store i32 %63, i32* %level, align 4, !tbaa !4
  %keep137 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 10
  store i32 0, i32* %keep137, align 4, !tbaa !4
  br label %if.end148

if.else138:                                       ; preds = %if.end129
  %cmp139 = icmp eq i32 %keep, 3
  %64 = load %struct.function** @cfun, align 8, !tbaa !0
  br i1 %cmp139, label %if.then141, label %if.else144

if.then141:                                       ; preds = %if.else138
  %x_var_temp_slot_level = getelementptr inbounds %struct.function* %64, i64 0, i32 41
  %65 = load i32* %x_var_temp_slot_level, align 4, !tbaa !4
  %level142 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 9
  store i32 %65, i32* %level142, align 4, !tbaa !4
  %keep143 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 10
  store i32 0, i32* %keep143, align 4, !tbaa !4
  br label %if.end148

if.else144:                                       ; preds = %if.else138
  %x_temp_slot_level = getelementptr inbounds %struct.function* %64, i64 0, i32 40
  %66 = load i32* %x_temp_slot_level, align 4, !tbaa !4
  %level145 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 9
  store i32 %66, i32* %level145, align 4, !tbaa !4
  %keep146 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 10
  store i32 %keep, i32* %keep146, align 4, !tbaa !4
  br label %if.end148

if.end148:                                        ; preds = %if.then141, %if.else144, %if.then136
  %slot149 = getelementptr inbounds %struct.temp_slot* %p.2, i64 0, i32 1
  %67 = load %struct.rtx_def** %slot149, align 8, !tbaa !0
  %arrayidx151 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 0
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx152, align 8, !tbaa !0
  %call153 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %68) #10
  %69 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_stack_slot_list154 = getelementptr inbounds %struct.function* %69, i64 0, i32 26
  %70 = load %struct.rtx_def** %x_stack_slot_list154, align 8, !tbaa !0
  %call155 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call153, %struct.rtx_def* %70) #10
  %71 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_stack_slot_list156 = getelementptr inbounds %struct.function* %71, i64 0, i32 26
  store %struct.rtx_def* %call155, %struct.rtx_def** %x_stack_slot_list156, align 8, !tbaa !0
  br i1 %tobool7346, label %cond.true158, label %if.end226.critedge

cond.true158:                                     ; preds = %if.end148
  %call159 = tail call i64 @get_alias_set(%union.tree_node* %type.addr.0344) #10
  tail call void @set_mem_alias_set(%struct.rtx_def* %call153, i64 %call159) #10
  tail call void @set_mem_align(%struct.rtx_def* %call153, i32 %align.1) #10
  %readonly_flag = getelementptr inbounds %union.tree_node* %type.addr.0344, i64 0, i32 0, i32 0, i32 2
  %72 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load166 = load i32* %72, align 8
  %73 = bitcast %struct.rtx_def* %call153 to i32*
  %bf.load169 = load i32* %73, align 8
  %74 = shl i32 %bf.load166, 14
  %bf.shl = and i32 %74, 67108864
  %bf.clear170 = and i32 %bf.load169, -67108865
  %bf.set = or i32 %bf.clear170, %bf.shl
  store i32 %bf.set, i32* %73, align 8
  %bf.load172 = load i32* %72, align 8
  %75 = shl i32 %bf.load172, 16
  %bf.shl177 = and i32 %75, 134217728
  %bf.clear178 = and i32 %bf.set, -134217729
  %bf.set179 = or i32 %bf.clear178, %bf.shl177
  store i32 %bf.set179, i32* %73, align 8
  %bf.load181 = load i32* %72, align 8
  %bf.clear182 = and i32 %bf.load181, 255
  %bf.clear182.off = add i32 %bf.clear182, -18
  %switch = icmp ult i32 %bf.clear182.off, 5
  %bf.set216 = and i32 %bf.set179, 1879048191
  br i1 %switch, label %if.then213, label %if.else219

if.then213:                                       ; preds = %cond.true158
  %bf.clear218 = or i32 %bf.set216, 268435456
  store i32 %bf.clear218, i32* %73, align 8
  br label %if.end226

if.else219:                                       ; preds = %cond.true158
  %bf.set224 = or i32 %bf.set216, -2147483648
  store i32 %bf.set224, i32* %73, align 8
  br label %if.end226

if.end226.critedge:                               ; preds = %if.end148
  tail call void @set_mem_alias_set(%struct.rtx_def* %call153, i64 0) #10
  tail call void @set_mem_align(%struct.rtx_def* %call153, i32 %align.1) #10
  br label %if.end226

if.end226:                                        ; preds = %if.end226.critedge, %if.else219, %if.then213
  ret %struct.rtx_def* %call153
}
