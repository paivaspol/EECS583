define %struct.rtx_def* @lookup_static_chain(%union.tree_node* %decl) #0 {
entry:
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #10
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp1 = icmp eq i32 %bf.clear, 30
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %regdecl_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %1 = bitcast [8 x i8]* %regdecl_flag to i64*
  %bf.load3 = load i64* %1, align 8
  %bf.cast = and i64 %bf.load3, 1024
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %2 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %cmp5 = icmp eq %union.tree_node* %call, %2
  %3 = load %union.tree_node** @inline_function_decl, align 8, !tbaa !0
  %cmp7 = icmp eq %union.tree_node* %call, %3
  %or.cond = or i1 %cmp5, %cmp7
  br i1 %or.cond, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !0
  br label %return

if.end9:                                          ; preds = %if.end
  %5 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_context_display = getelementptr inbounds %struct.function* %5, i64 0, i32 33
  %link.024 = load %union.tree_node** %x_context_display, align 8
  %tobool1025 = icmp eq %union.tree_node* %link.024, null
  br i1 %tobool1025, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %link.026, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain, align 8
  %tobool10 = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool10, label %for.end, label %for.body

for.body:                                         ; preds = %if.end9, %for.cond
  %link.026 = phi %union.tree_node* [ %link.0, %for.cond ], [ %link.024, %if.end9 ]
  %purpose = getelementptr inbounds %union.tree_node* %link.026, i64 0, i32 0, i32 1
  %6 = load i8** %purpose, align 8
  %7 = bitcast i8* %6 to %union.tree_node*
  %cmp11 = icmp eq %union.tree_node* %7, %call
  br i1 %cmp11, label %if.then12, label %for.cond

if.then12:                                        ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %link.026, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !0
  %operands = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %10 = bitcast i32* %arrayidx to %struct.rtx_def**
  %11 = load %struct.rtx_def** %10, align 8, !tbaa !0
  br label %return

for.end:                                          ; preds = %for.cond, %if.end9
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 5612, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.lookup_static_chain, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %land.lhs.true, %if.then12, %if.then8
  %retval.0 = phi %struct.rtx_def* [ %4, %if.then8 ], [ %11, %if.then12 ], [ null, %land.lhs.true ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}
