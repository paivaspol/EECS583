define internal fastcc void @fixup_var_refs_insn(%struct.rtx_def* %insn, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %toplevel, %struct.rtx_def* %no_share) #0 {
entry:
  %replacements = alloca %struct.fixup_replacement*, align 8
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !0
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 49
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx9, align 8, !tbaa !0
  %cmp10 = icmp eq %struct.rtx_def* %3, %var
  br i1 %cmp10, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load17 = load i32* %4, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 65
  br i1 %cmp19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %lor.lhs.false
  %fld27 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1
  %rtx29 = bitcast [1 x %union.rtunion_def]* %fld27 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx29, align 8, !tbaa !0
  %cmp30 = icmp eq %struct.rtx_def* %5, %var
  br i1 %cmp30, label %if.then, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true20
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx40, align 8, !tbaa !0
  %cmp41 = icmp eq %struct.rtx_def* %6, %var
  br i1 %cmp41, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false31, %land.lhs.true20, %land.lhs.true
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 7, %struct.rtx_def* null) #10
  %cmp42 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp42, label %if.end, label %if.then43

if.then43:                                        ; preds = %if.then
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx46, align 8, !tbaa !0
  %call50 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %7, i32 6, %struct.rtx_def* null) #10
  call void @remove_note(%struct.rtx_def* %7, %struct.rtx_def* %call50) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then43
  %call51 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #10
  br label %while.cond304.preheader

if.else:                                          ; preds = %lor.lhs.false31, %lor.lhs.false, %entry
  %tobool = icmp eq i32 %toplevel, 0
  br i1 %tobool, label %if.else155, label %land.lhs.true52

land.lhs.true52:                                  ; preds = %if.else
  %8 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load53 = load i32* %8, align 8
  %bf.clear54 = and i32 %bf.load53, 65535
  %idxprom385 = zext i32 %bf.clear54 to i64
  %arrayidx55 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom385
  %9 = load i8* %arrayidx55, align 1, !tbaa !1
  %cmp56 = icmp eq i8 %9, 105
  br i1 %cmp56, label %cond.true, label %if.else155

cond.true:                                        ; preds = %land.lhs.true52
  %cmp63 = icmp eq i32 %bf.clear, 47
  br i1 %cmp63, label %cond.end74, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call72 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %1) #10
  br label %cond.end74

cond.end74:                                       ; preds = %cond.true, %cond.false
  %cond75 = phi %struct.rtx_def* [ %call72, %cond.false ], [ %1, %cond.true ]
  %cmp76 = icmp eq %struct.rtx_def* %cond75, null
  br i1 %cmp76, label %if.else155, label %land.lhs.true78

land.lhs.true78:                                  ; preds = %cond.end74
  %fld79 = getelementptr inbounds %struct.rtx_def* %cond75, i64 0, i32 1
  %rtx81 = bitcast [1 x %union.rtunion_def]* %fld79 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx81, align 8, !tbaa !0
  %cmp82 = icmp eq %struct.rtx_def* %10, %var
  br i1 %cmp82, label %land.lhs.true84, label %if.else155

land.lhs.true84:                                  ; preds = %land.lhs.true78
  %call85 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 6, %struct.rtx_def* null) #10
  %cmp86 = icmp eq %struct.rtx_def* %call85, null
  br i1 %cmp86, label %land.lhs.true88, label %if.else155

land.lhs.true88:                                  ; preds = %land.lhs.true84
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %cond75, i64 0, i32 1, i64 1
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx91, align 8, !tbaa !0
  %call92 = call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %var) #10
  %tobool93 = icmp eq i32 %call92, 0
  br i1 %tobool93, label %lor.lhs.false94, label %if.then153

lor.lhs.false94:                                  ; preds = %land.lhs.true88
  %12 = load %struct.rtx_def** %rtx91, align 8, !tbaa !0
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load98 = load i32* %13, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 61
  br i1 %cmp100, label %land.lhs.true102, label %if.else155

land.lhs.true102:                                 ; preds = %lor.lhs.false94
  %call103 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn) #10
  %cmp104 = icmp eq %struct.rtx_def* %call103, null
  br i1 %cmp104, label %if.else155, label %land.lhs.true106

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %14 = bitcast %struct.rtx_def* %call103 to i32*
  %bf.load107 = load i32* %14, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %idxprom109386 = zext i32 %bf.clear108 to i64
  %arrayidx110 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom109386
  %15 = load i8* %arrayidx110, align 1, !tbaa !1
  %cmp112 = icmp eq i8 %15, 105
  br i1 %cmp112, label %cond.true114, label %if.else155

cond.true114:                                     ; preds = %land.lhs.true106
  %arrayidx116 = getelementptr inbounds %struct.rtx_def* %call103, i64 0, i32 1, i64 3
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx117, align 8, !tbaa !0
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load118 = load i32* %17, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 47
  br i1 %cmp120, label %cond.end134, label %cond.false126

cond.false126:                                    ; preds = %cond.true114
  %call130 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call103, %struct.rtx_def* %16) #10
  br label %cond.end134

cond.end134:                                      ; preds = %cond.true114, %cond.false126
  %cond135 = phi %struct.rtx_def* [ %call130, %cond.false126 ], [ %16, %cond.true114 ]
  %cmp136 = icmp eq %struct.rtx_def* %cond135, null
  br i1 %cmp136, label %if.else155, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %cond.end134
  %fld139 = getelementptr inbounds %struct.rtx_def* %cond135, i64 0, i32 1
  %rtx141 = bitcast [1 x %union.rtunion_def]* %fld139 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx141, align 8, !tbaa !0
  %19 = load %struct.rtx_def** %rtx91, align 8, !tbaa !0
  %cmp145 = icmp eq %struct.rtx_def* %18, %19
  br i1 %cmp145, label %land.lhs.true147, label %if.else155

land.lhs.true147:                                 ; preds = %land.lhs.true138
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %cond135, i64 0, i32 1, i64 1
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx150, align 8, !tbaa !0
  %call151 = call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %var) #10
  %tobool152 = icmp eq i32 %call151, 0
  br i1 %tobool152, label %if.else155, label %if.then153

if.then153:                                       ; preds = %land.lhs.true147, %land.lhs.true88
  %call154 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #10
  br label %while.cond304.preheader

if.else155:                                       ; preds = %land.lhs.true106, %land.lhs.true52, %land.lhs.true147, %cond.end134, %land.lhs.true102, %cond.end74, %if.else, %land.lhs.true138, %lor.lhs.false94, %land.lhs.true84, %land.lhs.true78
  store %struct.fixup_replacement* null, %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx158, align 8, !tbaa !0
  call fastcc void @fixup_var_refs_1(%struct.rtx_def* %var, i32 %promoted_mode, %struct.rtx_def** %rtx3, %struct.rtx_def* %insn, %struct.fixup_replacement** %replacements, %struct.rtx_def* %no_share) #9
  %22 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_last_parm_insn = getelementptr inbounds %struct.function* %22, i64 0, i32 36
  %23 = load %struct.rtx_def** %x_last_parm_insn, align 8, !tbaa !0
  %cmp253 = icmp eq %struct.rtx_def* %23, %insn
  br i1 %cmp253, label %if.then255, label %while.condthread-pre-split

if.then255:                                       ; preds = %if.else155
  %arrayidx257 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 1
  %rtx258 = bitcast %union.rtunion_def* %arrayidx257 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx258, align 8, !tbaa !0
  store %struct.rtx_def* %24, %struct.rtx_def** %x_last_parm_insn, align 8, !tbaa !0
  br label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %if.then255, %if.else155
  %.pr = load %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  %tobool261392 = icmp eq %struct.fixup_replacement* %.pr, null
  br i1 %tobool261392, label %while.cond304.preheader, label %while.body

while.cond304.preheader:                          ; preds = %while.condthread-pre-split, %if.end300, %if.then153, %if.end
  %note.0.ph = phi %struct.rtx_def* [ %call, %if.end ], [ %0, %if.then153 ], [ %0, %if.end300 ], [ %0, %while.condthread-pre-split ]
  %tobool305390 = icmp eq %struct.rtx_def* %note.0.ph, null
  br i1 %tobool305390, label %while.end323, label %while.body306

while.body:                                       ; preds = %while.condthread-pre-split, %if.end300
  %25 = phi %struct.fixup_replacement* [ %42, %if.end300 ], [ %.pr, %while.condthread-pre-split ]
  %new = getelementptr inbounds %struct.fixup_replacement* %25, i64 0, i32 1
  %26 = load %struct.rtx_def** %new, align 8, !tbaa !0
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load262 = load i32* %27, align 8
  %bf.clear263 = and i32 %bf.load262, 65535
  %cmp264 = icmp eq i32 %bf.clear263, 61
  br i1 %cmp264, label %if.then266, label %if.end300

if.then266:                                       ; preds = %while.body
  %old = getelementptr inbounds %struct.fixup_replacement* %25, i64 0, i32 0
  %28 = load %struct.rtx_def** %old, align 8, !tbaa !0
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load267 = load i32* %29, align 8
  %bf.clear268 = and i32 %bf.load267, 65535
  %cmp269 = icmp eq i32 %bf.clear268, 63
  br i1 %cmp269, label %if.then271, label %if.else275

if.then271:                                       ; preds = %if.then266
  %call273 = call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %28, %struct.rtx_def* %insn, i32 0) #9
  %30 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  %old274 = getelementptr inbounds %struct.fixup_replacement* %30, i64 0, i32 0
  store %struct.rtx_def* %call273, %struct.rtx_def** %old274, align 8, !tbaa !0
  br label %if.end279

if.else275:                                       ; preds = %if.then266
  %call277 = call fastcc %struct.rtx_def* @fixup_stack_1(%struct.rtx_def* %28, %struct.rtx_def* %insn) #9
  %31 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  %old278 = getelementptr inbounds %struct.fixup_replacement* %31, i64 0, i32 0
  store %struct.rtx_def* %call277, %struct.rtx_def** %old278, align 8, !tbaa !0
  br label %if.end279

if.end279:                                        ; preds = %if.else275, %if.then271
  %32 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  %new280 = getelementptr inbounds %struct.fixup_replacement* %32, i64 0, i32 1
  %33 = load %struct.rtx_def** %new280, align 8, !tbaa !0
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load281 = load i32* %34, align 8
  %old284 = getelementptr inbounds %struct.fixup_replacement* %32, i64 0, i32 0
  %35 = load %struct.rtx_def** %old284, align 8, !tbaa !0
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load285 = load i32* %36, align 8
  %bf.lshr282387 = xor i32 %bf.load285, %bf.load281
  %37 = and i32 %bf.lshr282387, 16711680
  %cmp288 = icmp eq i32 %37, 0
  br i1 %cmp288, label %if.else294, label %if.then290

if.then290:                                       ; preds = %if.end279
  call void @start_sequence() #10
  %38 = load %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  %new291 = getelementptr inbounds %struct.fixup_replacement* %38, i64 0, i32 1
  %39 = load %struct.rtx_def** %new291, align 8, !tbaa !0
  %old292 = getelementptr inbounds %struct.fixup_replacement* %38, i64 0, i32 0
  %40 = load %struct.rtx_def** %old292, align 8, !tbaa !0
  call void @convert_move(%struct.rtx_def* %39, %struct.rtx_def* %40, i32 %unsignedp) #10
  %call293 = call %struct.rtx_def* @gen_sequence() #10
  call void @end_sequence() #10
  br label %if.end298

if.else294:                                       ; preds = %if.end279
  %call297 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %33, %struct.rtx_def* %35) #10
  br label %if.end298

if.end298:                                        ; preds = %if.else294, %if.then290
  %seq.0 = phi %struct.rtx_def* [ %call293, %if.then290 ], [ %call297, %if.else294 ]
  %call299 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %seq.0, %struct.rtx_def* %insn) #10
  %.pre = load %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  br label %if.end300

if.end300:                                        ; preds = %if.end298, %while.body
  %41 = phi %struct.fixup_replacement* [ %.pre, %if.end298 ], [ %25, %while.body ]
  %next301 = getelementptr inbounds %struct.fixup_replacement* %41, i64 0, i32 2
  %42 = load %struct.fixup_replacement** %next301, align 8, !tbaa !0
  %43 = bitcast %struct.fixup_replacement* %41 to i8*
  call void @free(i8* %43) #10
  store %struct.fixup_replacement* %42, %struct.fixup_replacement** %replacements, align 8, !tbaa !0
  %tobool261 = icmp eq %struct.fixup_replacement* %42, null
  br i1 %tobool261, label %while.cond304.preheader, label %while.body

while.body306:                                    ; preds = %while.cond304.preheader, %if.end319
  %note.0391 = phi %struct.rtx_def* [ %47, %if.end319 ], [ %note.0.ph, %while.cond304.preheader ]
  %44 = bitcast %struct.rtx_def* %note.0391 to i32*
  %bf.load307 = load i32* %44, align 8
  %bf.clear308 = and i32 %bf.load307, 65535
  %cmp309 = icmp eq i32 %bf.clear308, 4
  br i1 %cmp309, label %if.end319, label %if.then311

if.then311:                                       ; preds = %while.body306
  %arrayidx313 = getelementptr inbounds %struct.rtx_def* %note.0391, i64 0, i32 1, i64 0
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx314, align 8, !tbaa !0
  %call315 = call fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %45, %struct.rtx_def* %insn) #9
  %46 = getelementptr inbounds %union.rtunion_def* %arrayidx313, i64 0, i32 0
  %call315.c = ptrtoint %struct.rtx_def* %call315 to i64
  store i64 %call315.c, i64* %46, align 8, !tbaa !0
  br label %if.end319

if.end319:                                        ; preds = %while.body306, %if.then311
  %arrayidx321 = getelementptr inbounds %struct.rtx_def* %note.0391, i64 0, i32 1, i64 1
  %rtx322 = bitcast %union.rtunion_def* %arrayidx321 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx322, align 8, !tbaa !0
  %tobool305 = icmp eq %struct.rtx_def* %47, null
  br i1 %tobool305, label %while.end323, label %while.body306

while.end323:                                     ; preds = %if.end319, %while.cond304.preheader
  ret void
}
