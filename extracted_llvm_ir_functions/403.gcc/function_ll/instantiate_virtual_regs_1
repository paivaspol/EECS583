define internal fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %loc, %struct.rtx_def* %object, i32 %extra_insns) #0 {
entry:
  %offset = alloca i64, align 8
  %src = alloca %struct.rtx_def*, align 8
  store i64 0, i64* %offset, align 8, !tbaa !5
  %0 = load %struct.rtx_def** %loc, align 8, !tbaa !0
  %cmp787 = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp787, label %return, label %if.end.lr.ph

if.end.lr.ph:                                     ; preds = %entry
  %tobool439 = icmp ne %struct.rtx_def* %object, null
  br label %if.end

if.end:                                           ; preds = %if.end.lr.ph, %restart.backedge
  %1 = phi %struct.rtx_def* [ %0, %if.end.lr.ph ], [ %11, %restart.backedge ]
  %loc.addr.0788 = phi %struct.rtx_def** [ %loc, %if.end.lr.ph ], [ %loc.addr.0.be, %restart.backedge ]
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog.loopexit [
    i32 54, label %return
    i32 55, label %return
    i32 56, label %return
    i32 58, label %return
    i32 68, label %return
    i32 36, label %return
    i32 59, label %return
    i32 69, label %return
    i32 40, label %return
    i32 44, label %return
    i32 45, label %return
    i32 51, label %return
    i32 47, label %sw.bb1
    i32 75, label %sw.bb44
    i32 3, label %sw.bb227
    i32 50, label %sw.bb227
    i32 74, label %sw.bb227
    i32 76, label %sw.bb227
    i32 78, label %sw.bb227
    i32 79, label %sw.bb227
    i32 81, label %sw.bb227
    i32 80, label %sw.bb227
    i32 82, label %sw.bb227
    i32 83, label %sw.bb227
    i32 84, label %sw.bb227
    i32 85, label %sw.bb227
    i32 91, label %sw.bb227
    i32 88, label %sw.bb227
    i32 89, label %sw.bb227
    i32 90, label %sw.bb227
    i32 87, label %sw.bb227
    i32 102, label %sw.bb227
    i32 103, label %sw.bb227
    i32 104, label %sw.bb227
    i32 105, label %sw.bb227
    i32 108, label %sw.bb227
    i32 109, label %sw.bb227
    i32 106, label %sw.bb227
    i32 107, label %sw.bb227
    i32 110, label %sw.bb227
    i32 111, label %sw.bb227
    i32 66, label %sw.bb297
    i32 46, label %sw.bb449
    i32 63, label %sw.bb449
    i32 64, label %sw.bb449
    i32 77, label %sw.bb449
    i32 86, label %sw.bb449
    i32 96, label %sw.bb449
    i32 97, label %sw.bb449
    i32 98, label %sw.bb449
    i32 99, label %sw.bb449
    i32 120, label %sw.bb449
    i32 121, label %sw.bb449
    i32 122, label %sw.bb449
    i32 123, label %sw.bb449
    i32 124, label %sw.bb449
    i32 125, label %sw.bb449
    i32 126, label %sw.bb449
    i32 128, label %sw.bb449
    i32 127, label %sw.bb449
    i32 129, label %sw.bb449
    i32 130, label %sw.bb449
    i32 131, label %sw.bb449
    i32 48, label %sw.bb453
    i32 49, label %sw.bb453
    i32 61, label %sw.bb497
    i32 70, label %sw.bb520
  ]

sw.bb1:                                           ; preds = %if.end
  %fld = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %call = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %3, i64* %offset) #9
  %cmp2 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp2, label %if.end36, label %if.then3

if.then3:                                         ; preds = %sw.bb1
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx6, align 8, !tbaa !0
  store %struct.rtx_def* %4, %struct.rtx_def** %src, align 8, !tbaa !0
  %5 = load i64* %offset, align 8, !tbaa !5
  %sub = sub nsw i64 0, %5
  store i64 %sub, i64* %offset, align 8, !tbaa !5
  %call7 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %src, %struct.rtx_def* null, i32 0) #9
  %6 = load %struct.rtx_def** %src, align 8, !tbaa !0
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load8 = load i32* %7, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  switch i32 %bf.clear9, label %if.then14 [
    i32 61, label %if.end15
    i32 75, label %if.end15
  ]

if.then14:                                        ; preds = %if.then3
  call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 3846, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

if.end15:                                         ; preds = %if.then3, %if.then3
  call void @start_sequence() #10
  %8 = load %struct.rtx_def** %src, align 8, !tbaa !0
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load16 = load i32* %9, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 61
  br i1 %cmp18, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end15
  %call20 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %8, %struct.rtx_def* null) #10
  br label %if.end21

if.end21:                                         ; preds = %if.end15, %if.then19
  %temp.0 = phi %struct.rtx_def* [ %call20, %if.then19 ], [ %8, %if.end15 ]
  %call22 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %temp.0, i64 %sub) #10
  %call23 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call22, %struct.rtx_def* null) #10
  %call24 = call %struct.rtx_def* @get_insns() #10
  call void @end_sequence() #10
  %call25 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call24, %struct.rtx_def* %object) #10
  %10 = getelementptr inbounds [1 x %union.rtunion_def]* %fld, i64 0, i64 0, i32 0
  %call.c = ptrtoint %struct.rtx_def* %call to i64
  store i64 %call.c, i64* %10, align 8, !tbaa !0
  %call32 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx6, %struct.rtx_def* %call23, i32 0) #10
  %tobool = icmp eq i32 %call32, 0
  %tobool33 = icmp eq i32 %extra_insns, 0
  %or.cond = or i1 %tobool, %tobool33
  br i1 %or.cond, label %if.then34, label %return

if.then34:                                        ; preds = %if.end21
  call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 3862, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

if.end36:                                         ; preds = %sw.bb1
  %call40 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx, %struct.rtx_def* %object, i32 %extra_insns) #9
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  br label %restart.backedge

restart.backedge:                                 ; preds = %if.then107, %if.end36, %if.end293, %sw.bb449, %if.end486, %if.then143
  %loc.addr.0.be = phi %struct.rtx_def** [ %rtx456, %if.end486 ], [ %rtx452, %sw.bb449 ], [ %rtx296, %if.end293 ], [ %rtx43, %if.end36 ], [ %rtx103, %if.then143 ], [ %rtx103, %if.then107 ]
  %11 = load %struct.rtx_def** %loc.addr.0.be, align 8, !tbaa !0
  %cmp = icmp eq %struct.rtx_def* %11, null
  br i1 %cmp, label %return, label %if.end

sw.bb44:                                          ; preds = %if.end
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx47, align 8, !tbaa !0
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load48 = load i32* %13, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  switch i32 %bf.clear49, label %sw.bb227 [
    i32 67, label %if.then100
    i32 68, label %if.then100
    i32 54, label %if.then100
    i32 55, label %if.then100
    i32 58, label %if.then100
    i32 134, label %if.then100
    i32 56, label %if.then100
    i32 140, label %if.then100
  ]

if.then100:                                       ; preds = %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx103, align 8, !tbaa !0
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load104 = load i32* %15, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 75
  br i1 %cmp106, label %if.then107, label %if.else137

if.then107:                                       ; preds = %if.then100
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0
  %rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx113, align 8, !tbaa !0
  %call114 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %16, i64* %offset) #9
  %tobool115 = icmp eq %struct.rtx_def* %call114, null
  br i1 %tobool115, label %restart.backedge, label %if.then116

if.then116:                                       ; preds = %if.then107
  %17 = load %struct.rtx_def** %rtx103, align 8, !tbaa !0
  %arrayidx121 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 1
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %call123 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx122, %struct.rtx_def* %object, i32 %extra_insns) #9
  %18 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %18, 25
  %19 = and i32 %and, 1
  %20 = or i32 %19, 4
  %21 = load %struct.rtx_def** %rtx103, align 8, !tbaa !0
  %arrayidx129 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 1
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx130, align 8, !tbaa !0
  %call131 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %20, %struct.rtx_def* %call114, %struct.rtx_def* %22) #10
  br label %if.end156

if.else137:                                       ; preds = %if.then100
  %call141 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %14, i64* %offset) #9
  %cmp142 = icmp eq %struct.rtx_def* %call141, null
  br i1 %cmp142, label %if.then143, label %if.end156

if.then143:                                       ; preds = %if.else137
  %23 = load %struct.rtx_def** %rtx103, align 8, !tbaa !0
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load147 = load i32* %24, align 8
  %bf.clear148 = and i32 %bf.load147, 65535
  %cmp149 = icmp eq i32 %bf.clear148, 61
  br i1 %cmp149, label %return, label %restart.backedge

if.end156:                                        ; preds = %if.else137, %if.then116
  %new.0 = phi %struct.rtx_def* [ %call131, %if.then116 ], [ %call141, %if.else137 ]
  %25 = load %struct.rtx_def** %rtx47, align 8, !tbaa !0
  %26 = load i64* %offset, align 8, !tbaa !5
  %call160 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %25, i64 %26) #10
  %27 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %cmp161 = icmp eq %struct.rtx_def* %call160, %27
  br i1 %cmp161, label %land.lhs.true162, label %if.end166

land.lhs.true162:                                 ; preds = %if.end156
  %call163 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0788, %struct.rtx_def* %new.0, i32 0) #10
  %tobool164 = icmp eq i32 %call163, 0
  br i1 %tobool164, label %if.end166, label %return

if.end166:                                        ; preds = %land.lhs.true162, %if.end156
  %28 = load %struct.rtx_def** %rtx103, align 8, !tbaa !0
  %cmp170 = icmp eq i64 %26, 0
  br i1 %cmp170, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end166
  %call174 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx103, %struct.rtx_def* %new.0, i32 0) #10
  %tobool175 = icmp eq i32 %call174, 0
  br i1 %tobool175, label %if.then184, label %return

cond.false:                                       ; preds = %if.end166
  %29 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %new.0.c = ptrtoint %struct.rtx_def* %new.0 to i64
  store i64 %new.0.c, i64* %29, align 8, !tbaa !0
  %call182 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx47, %struct.rtx_def* %call160, i32 0) #10
  %lnot = icmp eq i32 %call182, 0
  br i1 %lnot, label %if.then184, label %return

if.then184:                                       ; preds = %cond.true, %cond.false
  %tobool185 = icmp eq i32 %extra_insns, 0
  br i1 %tobool185, label %if.then186, label %if.end190

if.then186:                                       ; preds = %if.then184
  %30 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %28 to i64
  store i64 %.c, i64* %30, align 8, !tbaa !0
  br label %return

if.end190:                                        ; preds = %if.then184
  %31 = load i32* @target_flags, align 4, !tbaa !4
  %and191 = lshr i32 %31, 25
  %32 = and i32 %and191, 1
  %33 = or i32 %32, 4
  %call194 = call %struct.rtx_def* @gen_reg_rtx(i32 %33) #10
  %34 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %new.0.c745 = ptrtoint %struct.rtx_def* %new.0 to i64
  store i64 %new.0.c745, i64* %34, align 8, !tbaa !0
  %call201 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %rtx47, %struct.rtx_def* %call194, i32 0) #10
  %tobool202 = icmp eq i32 %call201, 0
  br i1 %tobool202, label %if.else206, label %if.then203

if.then203:                                       ; preds = %if.end190
  %call204 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call194, %struct.rtx_def* %call160) #10
  %call205 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call204, %struct.rtx_def* %object) #10
  br label %return

if.else206:                                       ; preds = %if.end190
  %.c746 = ptrtoint %struct.rtx_def* %28 to i64
  store i64 %.c746, i64* %34, align 8, !tbaa !0
  %35 = load i32* @target_flags, align 4, !tbaa !4
  %and210 = lshr i32 %35, 25
  %36 = and i32 %and210, 1
  %37 = or i32 %36, 4
  %call213 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %37, %struct.rtx_def* %new.0, %struct.rtx_def* %call160) #10
  call void @start_sequence() #10
  %call214 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call213, %struct.rtx_def* null) #10
  %call215 = call %struct.rtx_def* @get_insns() #10
  call void @end_sequence() #10
  %call216 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call215, %struct.rtx_def* %object) #10
  %call217 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0788, %struct.rtx_def* %call214, i32 0) #10
  %tobool218 = icmp eq i32 %call217, 0
  br i1 %tobool218, label %land.lhs.true219, label %return

land.lhs.true219:                                 ; preds = %if.else206
  %call220 = call i32 @validate_replace_rtx(%struct.rtx_def* %1, %struct.rtx_def* %call214, %struct.rtx_def* %object) #10
  %tobool221 = icmp eq i32 %call220, 0
  br i1 %tobool221, label %if.then222, label %return

if.then222:                                       ; preds = %land.lhs.true219
  call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 3972, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

sw.bb227:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb44
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx230 = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx230, align 8, !tbaa !0
  %tobool231 = icmp eq %struct.rtx_def* %38, null
  br i1 %tobool231, label %if.end293, label %land.lhs.true232

land.lhs.true232:                                 ; preds = %sw.bb227
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load236 = load i32* %39, align 8
  %bf.clear237 = and i32 %bf.load236, 65535
  switch i32 %bf.clear237, label %if.then288 [
    i32 67, label %if.end293
    i32 68, label %if.end293
    i32 54, label %if.end293
    i32 55, label %if.end293
    i32 58, label %if.end293
    i32 134, label %if.end293
    i32 56, label %if.end293
    i32 140, label %if.end293
  ]

if.then288:                                       ; preds = %land.lhs.true232
  %call292 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx230, %struct.rtx_def* %object, i32 %extra_insns) #9
  br label %if.end293

if.end293:                                        ; preds = %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %land.lhs.true232, %sw.bb227, %if.then288
  %arrayidx295 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**
  br label %restart.backedge

sw.bb297:                                         ; preds = %if.end
  %arrayidx299 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx300, align 8, !tbaa !0
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load301 = load i32* %41, align 8
  %bf.clear302 = and i32 %bf.load301, 65535
  switch i32 %bf.clear302, label %lor.lhs.false320 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 58, label %return
    i32 55, label %return
  ]

lor.lhs.false320:                                 ; preds = %sw.bb297
  %42 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !0
  %cmp321 = icmp eq %struct.rtx_def* %40, %42
  %43 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !0
  %cmp323 = icmp eq %struct.rtx_def* %40, %43
  %or.cond747 = or i1 %cmp321, %cmp323
  %44 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !0
  %cmp325 = icmp eq %struct.rtx_def* %40, %44
  %or.cond748 = or i1 %or.cond747, %cmp325
  br i1 %or.cond748, label %return, label %if.end327

if.end327:                                        ; preds = %lor.lhs.false320
  %cmp330 = icmp eq i32 %bf.clear302, 75
  br i1 %cmp330, label %land.lhs.true331, label %if.end382

land.lhs.true331:                                 ; preds = %if.end327
  %arrayidx333 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 1
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx334, align 8, !tbaa !0
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load335 = load i32* %46, align 8
  %bf.clear336 = and i32 %bf.load335, 65535
  switch i32 %bf.clear336, label %if.end382 [
    i32 67, label %land.lhs.true366
    i32 68, label %land.lhs.true366
    i32 54, label %land.lhs.true366
    i32 58, label %land.lhs.true366
    i32 55, label %land.lhs.true366
  ]

land.lhs.true366:                                 ; preds = %land.lhs.true331, %land.lhs.true331, %land.lhs.true331, %land.lhs.true331, %land.lhs.true331
  %arrayidx368 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0
  %rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx369, align 8, !tbaa !0
  %cmp370 = icmp eq %struct.rtx_def* %47, %44
  %cmp375 = icmp eq %struct.rtx_def* %47, %43
  %or.cond749 = or i1 %cmp370, %cmp375
  %cmp380 = icmp eq %struct.rtx_def* %47, %42
  %or.cond750 = or i1 %or.cond749, %cmp380
  br i1 %or.cond750, label %return, label %if.end382

if.end382:                                        ; preds = %land.lhs.true366, %land.lhs.true331, %if.end327
  %48 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !0
  %cmp383 = icmp eq %struct.rtx_def* %40, %48
  %49 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !0
  %cmp385 = icmp eq %struct.rtx_def* %40, %49
  %or.cond751 = or i1 %cmp383, %cmp385
  br i1 %or.cond751, label %if.then435, label %lor.lhs.false386

lor.lhs.false386:                                 ; preds = %if.end382
  br i1 %cmp330, label %land.lhs.true390, label %sw.bb449

land.lhs.true390:                                 ; preds = %lor.lhs.false386
  %arrayidx392 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 1
  %rtx393 = bitcast %union.rtunion_def* %arrayidx392 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx393, align 8, !tbaa !0
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load394 = load i32* %51, align 8
  %bf.clear395 = and i32 %bf.load394, 65535
  switch i32 %bf.clear395, label %sw.bb449 [
    i32 67, label %land.lhs.true425
    i32 68, label %land.lhs.true425
    i32 54, label %land.lhs.true425
    i32 58, label %land.lhs.true425
    i32 55, label %land.lhs.true425
  ]

land.lhs.true425:                                 ; preds = %land.lhs.true390, %land.lhs.true390, %land.lhs.true390, %land.lhs.true390, %land.lhs.true390
  %arrayidx427 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0
  %rtx428 = bitcast %union.rtunion_def* %arrayidx427 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx428, align 8, !tbaa !0
  %cmp429 = icmp eq %struct.rtx_def* %52, %48
  %cmp434 = icmp eq %struct.rtx_def* %52, %49
  %or.cond752 = or i1 %cmp429, %cmp434
  br i1 %or.cond752, label %if.then435, label %sw.bb449

if.then435:                                       ; preds = %land.lhs.true425, %if.end382
  %cond442 = select i1 %tobool439, %struct.rtx_def* %object, %struct.rtx_def* %1
  %call443 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx300, %struct.rtx_def* %cond442, i32 0) #9
  %tobool444 = icmp eq i32 %call443, 0
  br i1 %tobool444, label %if.end446, label %return

if.end446:                                        ; preds = %if.then435
  %call447 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #10
  store %struct.rtx_def* %call447, %struct.rtx_def** %loc.addr.0788, align 8, !tbaa !0
  br label %sw.bb449

sw.bb449:                                         ; preds = %land.lhs.true425, %land.lhs.true390, %lor.lhs.false386, %if.end446, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %x.0 = phi %struct.rtx_def* [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %1, %if.end ], [ %call447, %if.end446 ], [ %1, %lor.lhs.false386 ], [ %1, %land.lhs.true390 ], [ %1, %land.lhs.true425 ]
  %arrayidx451 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtx452 = bitcast %union.rtunion_def* %arrayidx451 to %struct.rtx_def**
  br label %restart.backedge

sw.bb453:                                         ; preds = %if.end, %if.end
  %arrayidx455 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx456 = bitcast %union.rtunion_def* %arrayidx455 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx456, align 8, !tbaa !0
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load457 = load i32* %54, align 8
  %bf.clear458 = and i32 %bf.load457, 65535
  %cmp459 = icmp eq i32 %bf.clear458, 66
  br i1 %cmp459, label %land.lhs.true460, label %lor.lhs.false472

land.lhs.true460:                                 ; preds = %sw.bb453
  %arrayidx465 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 0
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %call470 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx466, %struct.rtx_def* %53, i32 0) #9
  %tobool471 = icmp eq i32 %call470, 0
  br i1 %tobool471, label %land.lhs.true460.lor.lhs.false472_crit_edge, label %return

land.lhs.true460.lor.lhs.false472_crit_edge:      ; preds = %land.lhs.true460
  %.pre = load %struct.rtx_def** %rtx456, align 8, !tbaa !0
  %.phi.trans.insert = bitcast %struct.rtx_def* %.pre to i32*
  %bf.load476.pre = load i32* %.phi.trans.insert, align 8
  br label %lor.lhs.false472

lor.lhs.false472:                                 ; preds = %land.lhs.true460.lor.lhs.false472_crit_edge, %sw.bb453
  %bf.load476 = phi i32 [ %bf.load476.pre, %land.lhs.true460.lor.lhs.false472_crit_edge ], [ %bf.load457, %sw.bb453 ]
  %55 = phi %struct.rtx_def* [ %.pre, %land.lhs.true460.lor.lhs.false472_crit_edge ], [ %53, %sw.bb453 ]
  %bf.clear477 = and i32 %bf.load476, 65535
  %cmp478 = icmp eq i32 %bf.clear477, 61
  br i1 %cmp478, label %land.lhs.true479, label %if.end486

land.lhs.true479:                                 ; preds = %lor.lhs.false472
  %call483 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx456, %struct.rtx_def* %object, i32 0) #9
  %tobool484 = icmp eq i32 %call483, 0
  br i1 %tobool484, label %land.lhs.true479.if.end486_crit_edge, label %return

land.lhs.true479.if.end486_crit_edge:             ; preds = %land.lhs.true479
  %.pre821 = load %struct.rtx_def** %rtx456, align 8, !tbaa !0
  br label %if.end486

if.end486:                                        ; preds = %land.lhs.true479.if.end486_crit_edge, %lor.lhs.false472
  %56 = phi %struct.rtx_def* [ %.pre821, %land.lhs.true479.if.end486_crit_edge ], [ %55, %lor.lhs.false472 ]
  %call490 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %56) #10
  %57 = getelementptr inbounds %union.rtunion_def* %arrayidx455, i64 0, i32 0
  %call490.c = ptrtoint %struct.rtx_def* %call490 to i64
  store i64 %call490.c, i64* %57, align 8, !tbaa !0
  br label %restart.backedge

sw.bb497:                                         ; preds = %if.end
  %call498 = call fastcc %struct.rtx_def* @instantiate_new_reg(%struct.rtx_def* %1, i64* %offset) #9
  %cmp499 = icmp eq %struct.rtx_def* %call498, null
  br i1 %cmp499, label %return, label %if.then500

if.then500:                                       ; preds = %sw.bb497
  %58 = load i64* %offset, align 8, !tbaa !5
  %call501 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call498, i64 %58) #10
  %call502 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0788, %struct.rtx_def* %call501, i32 0) #10
  %tobool503 = icmp eq i32 %call502, 0
  br i1 %tobool503, label %if.then504, label %return

if.then504:                                       ; preds = %if.then500
  %tobool505 = icmp eq i32 %extra_insns, 0
  br i1 %tobool505, label %return, label %if.end507

if.end507:                                        ; preds = %if.then504
  call void @start_sequence() #10
  %call508 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call501, %struct.rtx_def* null) #10
  %call509 = call %struct.rtx_def* @get_insns() #10
  call void @end_sequence() #10
  %call510 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %call509, %struct.rtx_def* %object) #10
  %call511 = call i32 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc.addr.0788, %struct.rtx_def* %call508, i32 0) #10
  %tobool512 = icmp eq i32 %call511, 0
  br i1 %tobool512, label %land.lhs.true513, label %return

land.lhs.true513:                                 ; preds = %if.end507
  %call514 = call i32 @validate_replace_rtx(%struct.rtx_def* %1, %struct.rtx_def* %call508, %struct.rtx_def* %object) #10
  %tobool515 = icmp eq i32 %call514, 0
  br i1 %tobool515, label %if.then516, label %return

if.then516:                                       ; preds = %land.lhs.true513
  call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 4126, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.instantiate_virtual_regs_1, i64 0, i64 0)) #8
  unreachable

sw.bb520:                                         ; preds = %if.end
  %arrayidx522 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**
  %59 = load %struct.rtx_def** %rtx523, align 8, !tbaa !0
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load524 = load i32* %60, align 8
  %bf.clear525 = and i32 %bf.load524, 65535
  switch i32 %bf.clear525, label %sw.epilog [
    i32 61, label %return
    i32 66, label %if.then535
  ]

if.then535:                                       ; preds = %sw.bb520
  %arrayidx540 = getelementptr inbounds %struct.rtx_def* %59, i64 0, i32 1, i64 0
  %rtx541 = bitcast %union.rtunion_def* %arrayidx540 to %struct.rtx_def**
  %call542 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx541, %struct.rtx_def* null, i32 0) #9
  br label %return

sw.epilog.loopexit:                               ; preds = %if.end
  %phitmp = zext i32 %bf.clear to i64
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb520
  %bf.clear813 = phi i64 [ %phitmp, %sw.epilog.loopexit ], [ 70, %sw.bb520 ]
  %arrayidx547 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %bf.clear813
  %61 = load i8* %arrayidx547, align 1, !tbaa !1
  %cmp548758 = icmp eq i8 %61, 0
  br i1 %cmp548758, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %arrayidx545 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %bf.clear813
  %62 = load i8** %arrayidx545, align 8, !tbaa !0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc586
  %indvars.iv789 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next790, %for.inc586 ]
  %fmt.0760 = phi i8* [ %62, %for.body.lr.ph ], [ %incdec.ptr, %for.inc586 ]
  %63 = load i8* %fmt.0760, align 1, !tbaa !1
  switch i8 %63, label %for.inc586 [
    i8 101, label %if.then553
    i8 69, label %for.cond567.preheader
  ]

for.cond567.preheader:                            ; preds = %for.body
  %arrayidx570 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 %indvars.iv789
  %rtvec = bitcast %union.rtunion_def* %arrayidx570 to %struct.rtvec_def**
  %64 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem753 = getelementptr inbounds %struct.rtvec_def* %64, i64 0, i32 0
  %65 = load i32* %num_elem753, align 4, !tbaa !4
  %cmp571754 = icmp sgt i32 %65, 0
  br i1 %cmp571754, label %for.body573, label %for.inc586

if.then553:                                       ; preds = %for.body
  %arrayidx556 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 %indvars.iv789
  %rtx557 = bitcast %union.rtunion_def* %arrayidx556 to %struct.rtx_def**
  %call558 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %rtx557, %struct.rtx_def* %object, i32 %extra_insns) #9
  %tobool559 = icmp eq i32 %call558, 0
  br i1 %tobool559, label %return, label %for.inc586

for.cond567:                                      ; preds = %for.body573
  %66 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %66, i64 0, i32 0
  %67 = load i32* %num_elem, align 4, !tbaa !4
  %68 = trunc i64 %indvars.iv.next to i32
  %cmp571 = icmp slt i32 %68, %67
  br i1 %cmp571, label %for.body573, label %for.inc586

for.body573:                                      ; preds = %for.cond567.preheader, %for.cond567
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond567 ], [ 0, %for.cond567.preheader ]
  %69 = phi %struct.rtvec_def* [ %66, %for.cond567 ], [ %64, %for.cond567.preheader ]
  %arrayidx579 = getelementptr inbounds %struct.rtvec_def* %69, i64 0, i32 1, i64 %indvars.iv
  %call580 = call fastcc i32 @instantiate_virtual_regs_1(%struct.rtx_def** %arrayidx579, %struct.rtx_def* %object, i32 %extra_insns) #9
  %tobool581 = icmp eq i32 %call580, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %tobool581, label %return, label %for.cond567

for.inc586:                                       ; preds = %for.cond567.preheader, %for.cond567, %for.body, %if.then553
  %indvars.iv.next790 = add i64 %indvars.iv789, 1
  %incdec.ptr = getelementptr inbounds i8* %fmt.0760, i64 1
  %conv = zext i8 %61 to i32
  %70 = trunc i64 %indvars.iv.next790 to i32
  %cmp548 = icmp slt i32 %70, %conv
  br i1 %cmp548, label %for.body, label %return

return:                                           ; preds = %entry, %land.lhs.true479, %land.lhs.true460, %if.then435, %land.lhs.true366, %lor.lhs.false320, %sw.bb297, %sw.bb297, %sw.bb297, %sw.bb297, %sw.bb297, %if.then143, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %restart.backedge, %sw.epilog, %if.then553, %for.inc586, %for.body573, %sw.bb520, %sw.bb497, %if.then500, %if.end507, %land.lhs.true513, %if.then504, %cond.false, %if.then203, %if.else206, %land.lhs.true219, %cond.true, %land.lhs.true162, %if.end21, %if.then535, %if.then186
  %retval.0 = phi i32 [ 1, %if.then535 ], [ 0, %if.then186 ], [ 1, %if.end21 ], [ 1, %land.lhs.true162 ], [ 1, %cond.true ], [ 1, %land.lhs.true219 ], [ 1, %if.else206 ], [ 1, %if.then203 ], [ 1, %cond.false ], [ 0, %if.then504 ], [ 1, %land.lhs.true513 ], [ 1, %if.end507 ], [ 1, %if.then500 ], [ 1, %sw.bb497 ], [ 1, %sw.bb520 ], [ 0, %for.body573 ], [ 1, %sw.epilog ], [ 0, %if.then553 ], [ 1, %for.inc586 ], [ 1, %restart.backedge ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.then143 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %sw.bb297 ], [ 1, %lor.lhs.false320 ], [ 1, %land.lhs.true366 ], [ 1, %if.then435 ], [ 1, %land.lhs.true460 ], [ 1, %land.lhs.true479 ], [ 1, %entry ]
  ret i32 %retval.0
}
