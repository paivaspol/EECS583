define %struct.rtx_def* @gen_mem_addressof(%struct.rtx_def* %reg, %union.tree_node* %decl) #0 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %0, 25
  %1 = and i32 %and, 1
  %2 = or i32 %1, 4
  %3 = bitcast %struct.rtx_def* %reg to i32*
  %bf.load = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #10
  %fld = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1
  %rtuint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !4
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eit(i32 70, i32 %2, %struct.rtx_def* %call, i32 %4, %union.tree_node* %decl) #10
  %tobool2 = icmp ne %union.tree_node* %decl, null
  br i1 %tobool2, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %call3 = tail call i64 @get_alias_set(%union.tree_node* %decl) #10
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond4 = phi i64 [ %call3, %cond.true ], [ 0, %entry ]
  %bf.load5 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load5, 134217728
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load10 = load i32* %6, align 8
  %bf.clear11 = and i32 %bf.load10, -134217729
  %bf.set = or i32 %bf.clear11, %bf.clear7
  store i32 %bf.set, i32* %6, align 8
  %bf.load12 = load i32* %3, align 8
  %bf.clear14 = and i32 %bf.load12, 67108864
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load18 = load i32* %8, align 8
  %bf.clear21 = and i32 %bf.load18, -67108865
  %bf.set22 = or i32 %bf.clear21, %bf.clear14
  store i32 %bf.set22, i32* %8, align 8
  %bf.load23 = load i32* %3, align 8
  %bf.clear24 = and i32 %bf.load23, -65536
  %bf.set25 = or i32 %bf.clear24, 66
  store i32 %bf.set25, i32* %3, align 8
  %9 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 1, i32 0
  store i64 0, i64* %9, align 8, !tbaa !0
  %10 = getelementptr inbounds [1 x %union.rtunion_def]* %fld, i64 0, i64 0, i32 0
  %call1.c = ptrtoint %struct.rtx_def* %call1 to i64
  store i64 %call1.c, i64* %10, align 8, !tbaa !0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %type32 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type32, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast [4 x i8]* %code to i32*
  %bf.load34 = load i32* %12, align 8
  %bf.clear35 = and i32 %bf.load34, 255
  %idxprom188 = zext i32 %bf.clear35 to i64
  %arrayidx36 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom188
  %13 = load i8* %arrayidx36, align 1, !tbaa !1
  %cmp = icmp eq i8 %13, 100
  br i1 %cmp, label %cond.true38, label %cond.false42

cond.true38:                                      ; preds = %if.then
  %mode = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %14 = bitcast [8 x i8]* %mode to i64*
  %bf.load40 = load i64* %14, align 8
  %bf.load40.tr = trunc i64 %bf.load40 to i32
  %bf.cast = and i32 %bf.load40.tr, 255
  br label %cond.end50

cond.false42:                                     ; preds = %if.then
  %type45 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode46 = getelementptr inbounds %struct.tree_type* %type45, i64 0, i32 6
  %15 = bitcast [4 x i8]* %mode46 to i32*
  %bf.load47 = load i32* %15, align 4
  %bf.lshr48 = lshr i32 %bf.load47, 9
  %bf.clear49 = and i32 %bf.lshr48, 127
  br label %cond.end50

cond.end50:                                       ; preds = %cond.false42, %cond.true38
  %cond51 = phi i32 [ %bf.cast, %cond.true38 ], [ %bf.clear49, %cond.false42 ]
  %cmp56 = icmp eq i32 %bf.clear35, 118
  br i1 %cmp56, label %cond.true58, label %cond.false60

cond.true58:                                      ; preds = %cond.end50
  %operands = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx59 = getelementptr inbounds i32* %operands, i64 4
  %16 = bitcast i32* %arrayidx59 to %struct.rtx_def**
  br label %cond.end79

cond.false60:                                     ; preds = %cond.end50
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false60, %cond.true58
  %cond80.in = phi %struct.rtx_def** [ %16, %cond.true58 ], [ %rtl, %cond.false60 ]
  %cond80 = load %struct.rtx_def** %cond80.in, align 8
  %bf.value82 = shl nuw nsw i32 %cond51, 16
  %bf.clear84 = and i32 %bf.set25, -16777150
  %bf.set85 = or i32 %bf.clear84, %bf.value82
  store i32 %bf.set85, i32* %3, align 8
  %bf.load88 = load i32* %12, align 8
  %bf.clear89 = and i32 %bf.load88, 255
  %idxprom90189 = zext i32 %bf.clear89 to i64
  %arrayidx91 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom90189
  %17 = load i8* %arrayidx91, align 1, !tbaa !1
  %cmp93 = icmp eq i8 %17, 100
  %cmp95 = icmp eq %struct.rtx_def* %cond80, %reg
  %or.cond = and i1 %cmp93, %cmp95
  br i1 %or.cond, label %if.then97, label %if.end

if.then97:                                        ; preds = %cond.end79
  %rtl99 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl99, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then97, %cond.end79
  tail call void @set_mem_attributes(%struct.rtx_def* %reg, %union.tree_node* %decl, i32 1) #10
  tail call void @set_mem_alias_set(%struct.rtx_def* %reg, i64 %cond4) #10
  %bf.load102 = load i32* %12, align 8
  %bf.clear103 = and i32 %bf.load102, 255
  %idxprom104190 = zext i32 %bf.clear103 to i64
  %arrayidx105 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom104190
  %18 = load i8* %arrayidx105, align 1, !tbaa !1
  %cmp107 = icmp eq i8 %18, 100
  %or.cond192 = and i1 %cmp107, %cmp95
  br i1 %or.cond192, label %if.then112, label %if.end115

if.then112:                                       ; preds = %if.end
  %rtl114 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* %reg, %struct.rtx_def** %rtl114, align 8, !tbaa !0
  br label %if.end115

if.end115:                                        ; preds = %if.then112, %if.end
  %bf.clear119 = and i32 %bf.load102, 65536
  %tobool120 = icmp eq i32 %bf.clear119, 0
  br i1 %tobool120, label %lor.lhs.false, label %if.then134

lor.lhs.false:                                    ; preds = %if.end115
  %19 = load i8* %arrayidx105, align 1, !tbaa !1
  %cmp128 = icmp eq i8 %19, 100
  br i1 %cmp128, label %land.lhs.true130, label %if.end146

land.lhs.true130:                                 ; preds = %lor.lhs.false
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %20 = load %union.tree_node** %initial, align 8, !tbaa !0
  %cmp132 = icmp eq %union.tree_node* %20, null
  br i1 %cmp132, label %if.end146, label %if.then134

if.then134:                                       ; preds = %land.lhs.true130, %if.end115
  %bf.load135 = load i32* %3, align 8
  %bf.lshr136 = lshr i32 %bf.load135, 16
  %bf.clear137 = and i32 %bf.lshr136, 255
  %unsigned_flag = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load139 = load i32* %21, align 8
  %bf.lshr140 = lshr i32 %bf.load139, 13
  %bf.clear141 = and i32 %bf.lshr140, 1
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %reg, i32 %bf.clear137, i32 %bf.clear141, %struct.rtx_def* %reg, %struct.hash_table* null) #9
  br label %if.end146

if.else:                                          ; preds = %cond.end
  %bf.lshr144 = lshr i32 %bf.load23, 16
  %bf.clear145 = and i32 %bf.lshr144, 255
  tail call fastcc void @fixup_var_refs(%struct.rtx_def* %reg, i32 %bf.clear145, i32 0, %struct.rtx_def* %reg, %struct.hash_table* null) #9
  br label %if.end146

if.end146:                                        ; preds = %land.lhs.true130, %lor.lhs.false, %if.then134, %if.else
  ret %struct.rtx_def* %reg
}
