define void @diddle_return_value(void (%struct.rtx_def*, i8*)* nocapture %doit, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{void (%struct.rtx_def*, i8*)* %doit}, i64 0, metadata !1881), !dbg !4583
  tail call void @llvm.dbg.value(metadata !{i8* %arg}, i64 0, metadata !1882), !dbg !4584
  %0 = load %struct.function** @cfun, align 8, !dbg !4585, !tbaa !2729
  %return_rtx = getelementptr inbounds %struct.function* %0, i64 0, i32 14, !dbg !4585
  %1 = load %struct.rtx_def** %return_rtx, align 8, !dbg !4585, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !1883), !dbg !4585
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !4586
  br i1 %tobool, label %if.end22, label %if.end, !dbg !4586

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !4587
  %bf.load = load i32* %2, align 8, !dbg !4587
  %bf.clear = and i32 %bf.load, 65535, !dbg !4587
  switch i32 %bf.clear, label %if.end22 [
    i32 61, label %if.then1
    i32 39, label %for.cond.preheader
  ], !dbg !4587

for.cond.preheader:                               ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0, !dbg !4588
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !4588
  %3 = load %struct.rtvec_def** %rtvec, align 8, !dbg !4588, !tbaa !2729
  %num_elem34 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0, !dbg !4588
  %4 = load i32* %num_elem34, align 4, !dbg !4588, !tbaa !2768
  %cmp635 = icmp sgt i32 %4, 0, !dbg !4588
  br i1 %cmp635, label %for.body, label %if.end22, !dbg !4588

if.then1:                                         ; preds = %if.end
  tail call void %doit(%struct.rtx_def* %1, i8* %arg) #11, !dbg !4589
  br label %if.end22, !dbg !4589

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %5 = phi %struct.rtvec_def* [ %10, %for.inc ], [ %3, %for.cond.preheader ]
  %arrayidx10 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv, !dbg !4590
  %6 = load %struct.rtx_def** %arrayidx10, align 8, !dbg !4590, !tbaa !2729
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0, !dbg !4590
  %rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !4590
  %7 = load %struct.rtx_def** %rtx, align 8, !dbg !4590, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %7}, i64 0, metadata !1886), !dbg !4590
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !4591
  %bf.load13 = load i32* %8, align 8, !dbg !4591
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4591
  %cmp15 = icmp eq i32 %bf.clear14, 61, !dbg !4591
  br i1 %cmp15, label %land.lhs.true, label %for.inc, !dbg !4591

land.lhs.true:                                    ; preds = %for.body
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0, !dbg !4591
  %rtuint = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !4591
  %9 = load i32* %rtuint, align 4, !dbg !4591, !tbaa !2768
  %cmp18 = icmp ult i32 %9, 53, !dbg !4591
  br i1 %cmp18, label %if.then19, label %for.inc, !dbg !4591

if.then19:                                        ; preds = %land.lhs.true
  tail call void %doit(%struct.rtx_def* %7, i8* %arg) #11, !dbg !4592
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !dbg !4588, !tbaa !2729
  br label %for.inc, !dbg !4592

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then19
  %10 = phi %struct.rtvec_def* [ %5, %for.body ], [ %5, %land.lhs.true ], [ %.pre, %if.then19 ], !dbg !4588
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !4588
  %num_elem = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0, !dbg !4588
  %11 = load i32* %num_elem, align 4, !dbg !4588, !tbaa !2768
  %12 = trunc i64 %indvars.iv.next to i32, !dbg !4588
  %cmp6 = icmp slt i32 %12, %11, !dbg !4588
  br i1 %cmp6, label %for.body, label %if.end22, !dbg !4588

if.end22:                                         ; preds = %for.cond.preheader, %for.inc, %if.end, %entry, %if.then1
  ret void, !dbg !4593
}
