define void @expand_main_function() #0 {
entry:
  %0 = load i32* @ix86_preferred_stack_boundary, align 4, !tbaa !4
  %1 = load i32* @target_flags, align 4, !tbaa !4
  %and = and i32 %1, 33554432
  %2 = lshr exact i32 %and, 20
  %3 = add i32 %2, 32
  %cmp = icmp sgt i32 %0, %3
  %tobool = icmp eq i32 %and, 0
  %or.cond = and i1 %cmp, %tobool
  br i1 %or.cond, label %if.then, label %if.end34

if.then:                                          ; preds = %entry
  tail call void @start_sequence() #10
  %4 = load i32* @target_flags, align 4, !tbaa !4
  %and4 = lshr i32 %4, 25
  %5 = and i32 %and4, 1
  %6 = or i32 %5, 4
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %sub = sdiv i32 %0, -8
  %conv = sext i32 %sub to i64
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #10
  %8 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %call7 = tail call %struct.rtx_def* @expand_simple_binop(i32 %6, i32 83, %struct.rtx_def* %7, %struct.rtx_def* %call, %struct.rtx_def* %8, i32 1, i32 2) #10
  %9 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !0
  %cmp8 = icmp eq %struct.rtx_def* %call7, %9
  br i1 %cmp8, label %if.end, label %if.then10

if.then10:                                        ; preds = %if.then
  %call11 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %9, %struct.rtx_def* %call7) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10
  %10 = load i32* @target_flags, align 4, !tbaa !4
  %and12 = lshr i32 %10, 25
  %11 = and i32 %and12, 1
  %12 = or i32 %11, 4
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call15 = tail call %struct.rtx_def* @force_reg(i32 %12, %struct.rtx_def* %13) #10
  %call16 = tail call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call15, %struct.rtx_def* null, i32 128) #10
  %call17 = tail call %struct.rtx_def* @gen_sequence() #10
  tail call void @end_sequence() #10
  %call18 = tail call %struct.rtx_def* @get_last_insn() #10
  %tobool1945 = icmp eq %struct.rtx_def* %call18, null
  br i1 %tobool1945, label %if.else, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %tmp.046 = phi %struct.rtx_def* [ %16, %for.inc ], [ %call18, %if.end ]
  %14 = bitcast %struct.rtx_def* %tmp.046 to i32*
  %bf.load = load i32* %14, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp20 = icmp eq i32 %bf.clear, 37
  br i1 %cmp20, label %land.lhs.true22, label %for.inc

land.lhs.true22:                                  ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %tmp.046, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %15 = load i32* %rtint, align 4, !tbaa !4
  %cmp23 = icmp eq i32 %15, -87
  br i1 %cmp23, label %if.then30, label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true22
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %tmp.046, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %tobool19 = icmp eq %struct.rtx_def* %16, null
  br i1 %tobool19, label %if.else, label %for.body

if.then30:                                        ; preds = %land.lhs.true22
  %call31 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call17, %struct.rtx_def* %tmp.046) #10
  br label %if.end34

if.else:                                          ; preds = %if.end, %for.inc
  %call32 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call17) #10
  br label %if.end34

if.end34:                                         ; preds = %if.then30, %if.else, %entry
  ret void
}
