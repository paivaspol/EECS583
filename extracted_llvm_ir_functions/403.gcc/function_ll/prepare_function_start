define internal fastcc void @prepare_function_start() #0 {
entry:
  %call = tail call i8* @ggc_alloc_cleared(i64 432) #10
  %0 = bitcast i8* %call to %struct.function*
  store %struct.function* %0, %struct.function** @cfun, align 8, !tbaa !0
  tail call void @init_stmt_for_function() #10
  tail call void @init_eh_for_function() #10
  %1 = load i32* @optimize, align 4, !tbaa !4
  %lnot = icmp eq i32 %1, 0
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* @cse_not_expected, align 4, !tbaa !4
  store i32 0, i32* @caller_save_needed, align 4, !tbaa !4
  %2 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_stack_slot_list = getelementptr inbounds %struct.function* %2, i64 0, i32 26
  store %struct.rtx_def* null, %struct.rtx_def** %x_stack_slot_list, align 8, !tbaa !0
  %3 = load %struct.function** @cfun, align 8, !tbaa !0
  %has_nonlocal_label = getelementptr inbounds %struct.function* %3, i64 0, i32 56
  %4 = bitcast [4 x i8]* %has_nonlocal_label to i32*
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, -257
  store i32 %bf.clear, i32* %4, align 8
  %5 = load %struct.function** @cfun, align 8, !tbaa !0
  %has_nonlocal_goto = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast [4 x i8]* %has_nonlocal_goto to i32*
  %bf.load1 = load i32* %6, align 8
  %bf.clear2 = and i32 %bf.load1, -513
  store i32 %bf.clear2, i32* %6, align 8
  %7 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_goto_handler_slots = getelementptr inbounds %struct.function* %7, i64 0, i32 20
  store %struct.rtx_def* null, %struct.rtx_def** %x_nonlocal_goto_handler_slots, align 8, !tbaa !0
  %8 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_goto_stack_level = getelementptr inbounds %struct.function* %8, i64 0, i32 22
  store %struct.rtx_def* null, %struct.rtx_def** %x_nonlocal_goto_stack_level, align 8, !tbaa !0
  %9 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_labels = getelementptr inbounds %struct.function* %9, i64 0, i32 19
  store %union.tree_node* null, %union.tree_node** %x_nonlocal_labels, align 8, !tbaa !0
  %10 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_nonlocal_goto_handler_labels = getelementptr inbounds %struct.function* %10, i64 0, i32 21
  store %struct.rtx_def* null, %struct.rtx_def** %x_nonlocal_goto_handler_labels, align 8, !tbaa !0
  %11 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_function_call_count = getelementptr inbounds %struct.function* %11, i64 0, i32 18
  store i32 0, i32* %x_function_call_count, align 4, !tbaa !4
  %x_max_parm_reg = getelementptr inbounds %struct.function* %11, i64 0, i32 37
  store i32 58, i32* %x_max_parm_reg, align 4, !tbaa !4
  tail call void @init_emit() #10
  tail call void @init_expr() #10
  store i16* null, i16** @reg_renumber, align 8, !tbaa !0
  %12 = load %struct.function** @cfun, align 8, !tbaa !0
  tail call void @init_varasm_status(%struct.function* %12) #10
  %13 = load %struct.function** @cfun, align 8, !tbaa !0
  %inlinable = getelementptr inbounds %struct.function* %13, i64 0, i32 44
  store i32 0, i32* %inlinable, align 4, !tbaa !4
  %original_decl_initial = getelementptr inbounds %struct.function* %13, i64 0, i32 47
  store %union.tree_node* null, %union.tree_node** %original_decl_initial, align 8, !tbaa !0
  %14 = load %struct.function** @cfun, align 8, !tbaa !0
  %original_arg_vector = getelementptr inbounds %struct.function* %14, i64 0, i32 46
  store i8* null, i8** %original_arg_vector, align 8, !tbaa !0
  %15 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %15, 20
  %16 = and i32 %and, 32
  %17 = add i32 %16, 32
  %18 = load %struct.function** @cfun, align 8, !tbaa !0
  %stack_alignment_needed = getelementptr inbounds %struct.function* %18, i64 0, i32 52
  store i32 %17, i32* %stack_alignment_needed, align 4, !tbaa !4
  %19 = load i32* @target_flags, align 4, !tbaa !4
  %and4 = lshr i32 %19, 20
  %20 = and i32 %and4, 32
  %21 = add i32 %20, 32
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %18, i64 0, i32 53
  store i32 %21, i32* %preferred_stack_boundary, align 4, !tbaa !4
  %calls_setjmp = getelementptr inbounds %struct.function* %18, i64 0, i32 56
  %22 = bitcast [4 x i8]* %calls_setjmp to i32*
  %bf.load7 = load i32* %22, align 8
  %bf.clear8 = and i32 %bf.load7, -17
  store i32 %bf.clear8, i32* %22, align 8
  %23 = load %struct.function** @cfun, align 8, !tbaa !0
  %calls_longjmp = getelementptr inbounds %struct.function* %23, i64 0, i32 56
  %24 = bitcast [4 x i8]* %calls_longjmp to i32*
  %bf.load9 = load i32* %24, align 8
  %bf.clear10 = and i32 %bf.load9, -33
  store i32 %bf.clear10, i32* %24, align 8
  %25 = load %struct.function** @cfun, align 8, !tbaa !0
  %calls_alloca = getelementptr inbounds %struct.function* %25, i64 0, i32 56
  %26 = bitcast [4 x i8]* %calls_alloca to i32*
  %bf.load11 = load i32* %26, align 8
  %bf.clear12 = and i32 %bf.load11, -65
  store i32 %bf.clear12, i32* %26, align 8
  %27 = load %struct.function** @cfun, align 8, !tbaa !0
  %contains_functions = getelementptr inbounds %struct.function* %27, i64 0, i32 56
  %28 = bitcast [4 x i8]* %contains_functions to i32*
  %bf.load13 = load i32* %28, align 8
  %bf.clear14 = and i32 %bf.load13, -1025
  store i32 %bf.clear14, i32* %28, align 8
  store i32 0, i32* @current_function_is_leaf, align 4, !tbaa !4
  store i32 0, i32* @current_function_nothrow, align 4, !tbaa !4
  store i32 0, i32* @current_function_sp_is_unchanging, align 4, !tbaa !4
  store i32 0, i32* @current_function_uses_only_leaf_regs, align 4, !tbaa !4
  %29 = load %struct.function** @cfun, align 8, !tbaa !0
  %has_computed_jump = getelementptr inbounds %struct.function* %29, i64 0, i32 56
  %30 = bitcast [4 x i8]* %has_computed_jump to i32*
  %bf.load15 = load i32* %30, align 8
  %bf.clear16 = and i32 %bf.load15, -2049
  store i32 %bf.clear16, i32* %30, align 8
  %31 = load %struct.function** @cfun, align 8, !tbaa !0
  %is_thunk = getelementptr inbounds %struct.function* %31, i64 0, i32 56
  %32 = bitcast [4 x i8]* %is_thunk to i32*
  %bf.load17 = load i32* %32, align 8
  %bf.clear18 = and i32 %bf.load17, -4097
  store i32 %bf.clear18, i32* %32, align 8
  %33 = load %struct.function** @cfun, align 8, !tbaa !0
  %returns_pcc_struct = getelementptr inbounds %struct.function* %33, i64 0, i32 56
  %34 = bitcast [4 x i8]* %returns_pcc_struct to i32*
  %bf.load19 = load i32* %34, align 8
  %bf.clear20 = and i32 %bf.load19, -3
  store i32 %bf.clear20, i32* %34, align 8
  %35 = load %struct.function** @cfun, align 8, !tbaa !0
  %returns_struct = getelementptr inbounds %struct.function* %35, i64 0, i32 56
  %36 = bitcast [4 x i8]* %returns_struct to i32*
  %bf.load21 = load i32* %36, align 8
  %bf.clear22 = and i32 %bf.load21, -2
  store i32 %bf.clear22, i32* %36, align 8
  %37 = load %struct.function** @cfun, align 8, !tbaa !0
  %epilogue_delay_list = getelementptr inbounds %struct.function* %37, i64 0, i32 55
  store %struct.rtx_def* null, %struct.rtx_def** %epilogue_delay_list, align 8, !tbaa !0
  %38 = load %struct.function** @cfun, align 8, !tbaa !0
  %uses_const_pool = getelementptr inbounds %struct.function* %38, i64 0, i32 56
  %39 = bitcast [4 x i8]* %uses_const_pool to i32*
  %bf.load23 = load i32* %39, align 8
  %bf.clear24 = and i32 %bf.load23, -1048577
  store i32 %bf.clear24, i32* %39, align 8
  %40 = load %struct.function** @cfun, align 8, !tbaa !0
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %40, i64 0, i32 56
  %41 = bitcast [4 x i8]* %uses_pic_offset_table to i32*
  %bf.load25 = load i32* %41, align 8
  %bf.clear26 = and i32 %bf.load25, -2097153
  store i32 %bf.clear26, i32* %41, align 8
  %42 = load %struct.function** @cfun, align 8, !tbaa !0
  %cannot_inline = getelementptr inbounds %struct.function* %42, i64 0, i32 16
  store i8* null, i8** %cannot_inline, align 8, !tbaa !0
  %43 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_tail_recursion_label = getelementptr inbounds %struct.function* %43, i64 0, i32 28
  store %struct.rtx_def* null, %struct.rtx_def** %x_tail_recursion_label, align 8, !tbaa !0
  %44 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_arg_pointer_save_area = getelementptr inbounds %struct.function* %44, i64 0, i32 30
  store %struct.rtx_def* null, %struct.rtx_def** %x_arg_pointer_save_area, align 8, !tbaa !0
  %45 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_frame_offset = getelementptr inbounds %struct.function* %45, i64 0, i32 32
  store i64 0, i64* %x_frame_offset, align 8, !tbaa !5
  %x_save_expr_regs = getelementptr inbounds %struct.function* %45, i64 0, i32 25
  store %struct.rtx_def* null, %struct.rtx_def** %x_save_expr_regs, align 8, !tbaa !0
  %46 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_rtl_expr_chain = getelementptr inbounds %struct.function* %46, i64 0, i32 27
  store %union.tree_node* null, %union.tree_node** %x_rtl_expr_chain, align 8, !tbaa !0
  %47 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_temp_slots.i = getelementptr inbounds %struct.function* %47, i64 0, i32 39
  store %struct.temp_slot* null, %struct.temp_slot** %x_temp_slots.i, align 8, !tbaa !0
  %48 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_temp_slot_level.i = getelementptr inbounds %struct.function* %48, i64 0, i32 40
  store i32 0, i32* %x_temp_slot_level.i, align 4, !tbaa !4
  %x_var_temp_slot_level.i = getelementptr inbounds %struct.function* %48, i64 0, i32 41
  store i32 0, i32* %x_var_temp_slot_level.i, align 4, !tbaa !4
  %x_target_temp_slot_level.i = getelementptr inbounds %struct.function* %48, i64 0, i32 42
  store i32 0, i32* %x_target_temp_slot_level.i, align 4, !tbaa !4
  store i32 1, i32* @rtx_equal_function_value_matters, align 4, !tbaa !4
  store i32 0, i32* @virtuals_instantiated, align 4, !tbaa !4
  store i32 1, i32* @generating_concat_p, align 4, !tbaa !4
  store i32 0, i32* @frame_pointer_needed, align 4, !tbaa !4
  %varargs = getelementptr inbounds %struct.function* %48, i64 0, i32 56
  %49 = bitcast [4 x i8]* %varargs to i32*
  %bf.load27 = load i32* %49, align 8
  %bf.clear28 = and i32 %bf.load27, -65537
  store i32 %bf.clear28, i32* %49, align 8
  %50 = load %struct.function** @cfun, align 8, !tbaa !0
  %stdarg = getelementptr inbounds %struct.function* %50, i64 0, i32 56
  %51 = bitcast [4 x i8]* %stdarg to i32*
  %bf.load29 = load i32* %51, align 8
  %bf.clear30 = and i32 %bf.load29, -131073
  store i32 %bf.clear30, i32* %51, align 8
  %52 = load %struct.function** @cfun, align 8, !tbaa !0
  %x_trampoline_list = getelementptr inbounds %struct.function* %52, i64 0, i32 34
  store %union.tree_node* null, %union.tree_node** %x_trampoline_list, align 8, !tbaa !0
  tail call void @init_pending_stack_adjust() #10
  %53 = load %struct.function** @cfun, align 8, !tbaa !0
  %expr = getelementptr inbounds %struct.function* %53, i64 0, i32 2
  %54 = load %struct.expr_status** %expr, align 8, !tbaa !0
  %x_inhibit_defer_pop = getelementptr inbounds %struct.expr_status* %54, i64 0, i32 1
  store i32 0, i32* %x_inhibit_defer_pop, align 4, !tbaa !4
  %outgoing_args_size = getelementptr inbounds %struct.function* %53, i64 0, i32 11
  store i32 0, i32* %outgoing_args_size, align 4, !tbaa !4
  %55 = load void (%struct.function*)** @init_lang_status, align 8, !tbaa !0
  %tobool31 = icmp eq void (%struct.function*)* %55, null
  br i1 %tobool31, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void %55(%struct.function* %53) #10
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %56 = load void (%struct.function*)** @init_machine_status, align 8, !tbaa !0
  %tobool32 = icmp eq void (%struct.function*)* %56, null
  br i1 %tobool32, label %if.end34, label %if.then33

if.then33:                                        ; preds = %if.end
  %57 = load %struct.function** @cfun, align 8, !tbaa !0
  tail call void %56(%struct.function* %57) #10
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then33
  ret void
}
