define void @setjmp_args_warning() #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %arguments = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 10
  %decl.046 = load %union.tree_node** %arguments, align 8
  %tobool47 = icmp eq %union.tree_node* %decl.046, null
  br i1 %tobool47, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %decl.048 = phi %union.tree_node* [ %decl.0, %for.inc ], [ %decl.046, %entry ]
  %rtl = getelementptr inbounds %union.tree_node* %decl.048, i64 0, i32 0, i32 17
  %1 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  %tobool3 = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool3, label %cond.end, label %cond.end17

cond.end:                                         ; preds = %for.body
  tail call void @make_decl_rtl(%union.tree_node* %decl.048, i8* null) #10
  %2 = load %struct.rtx_def** %rtl, align 8, !tbaa !0
  %cmp = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp, label %for.inc, label %cond.end17

cond.end17:                                       ; preds = %for.body, %cond.end
  %3 = phi %struct.rtx_def* [ %2, %cond.end ], [ %1, %for.body ]
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp19 = icmp eq i32 %bf.clear, 61
  br i1 %cmp19, label %cond.end30, label %for.inc

cond.end30:                                       ; preds = %cond.end17
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !4
  %call = tail call i32 @regno_clobbered_at_setjmp(i32 %5) #10
  %tobool32 = icmp eq i32 %call, 0
  br i1 %tobool32, label %for.inc, label %if.then

if.then:                                          ; preds = %cond.end30
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl.048, i8* getelementptr inbounds ([57 x i8]* @.str5, i64 0, i64 0)) #10
  br label %for.inc

for.inc:                                          ; preds = %cond.end30, %cond.end, %cond.end17, %if.then
  %chain = getelementptr inbounds %union.tree_node* %decl.048, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}
