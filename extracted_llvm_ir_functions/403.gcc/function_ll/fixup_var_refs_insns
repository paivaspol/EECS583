define internal fastcc void @fixup_var_refs_insns(%struct.rtx_def* %insn, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %toplevel, %struct.rtx_def* %may_share) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !2450), !dbg !5271
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %var}, i64 0, metadata !2451), !dbg !5272
  tail call void @llvm.dbg.value(metadata !{i32 %promoted_mode}, i64 0, metadata !2452), !dbg !5273
  tail call void @llvm.dbg.value(metadata !{i32 %unsignedp}, i64 0, metadata !2453), !dbg !5274
  tail call void @llvm.dbg.value(metadata !{i32 %toplevel}, i64 0, metadata !2454), !dbg !5275
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %may_share}, i64 0, metadata !2455), !dbg !5276
  %tobool50 = icmp eq %struct.rtx_def* %insn, null, !dbg !5277
  br i1 %tobool50, label %while.end, label %while.body, !dbg !5277

while.body:                                       ; preds = %entry, %while.cond.backedge
  %insn.addr.051 = phi %struct.rtx_def* [ %0, %while.cond.backedge ], [ %insn, %entry ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.addr.051, i64 0, i32 1, i64 2, !dbg !5278
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5278
  %0 = load %struct.rtx_def** %rtx, align 8, !dbg !5278, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !2456), !dbg !5278
  %1 = bitcast %struct.rtx_def* %insn.addr.051 to i32*, !dbg !5279
  %bf.load = load i32* %1, align 8, !dbg !5279
  %bf.clear = and i32 %bf.load, 65535, !dbg !5279
  %cmp = icmp eq i32 %bf.clear, 34, !dbg !5279
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5279

land.lhs.true:                                    ; preds = %while.body
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.addr.051, i64 0, i32 1, i64 3, !dbg !5279
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**, !dbg !5279
  %2 = load %struct.rtx_def** %rtx3, align 8, !dbg !5279, !tbaa !2729
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5279
  %bf.load4 = load i32* %3, align 8, !dbg !5279
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !5279
  %cmp6 = icmp eq i32 %bf.clear5, 141, !dbg !5279
  br i1 %cmp6, label %for.body, label %if.else, !dbg !5279

for.body:                                         ; preds = %land.lhs.true, %for.inc.for.body_crit_edge
  %4 = phi %struct.rtx_def* [ %.pre, %for.inc.for.body_crit_edge ], [ %2, %land.lhs.true ], !dbg !5280
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.for.body_crit_edge ], [ 0, %land.lhs.true ]
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 %indvars.iv, !dbg !5280
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !5280
  %5 = load %struct.rtx_def** %rtx13, align 8, !dbg !5280, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %5}, i64 0, metadata !2460), !dbg !5280
  %tobool14 = icmp eq %struct.rtx_def* %5, null, !dbg !5281
  br i1 %tobool14, label %for.inc, label %if.then15, !dbg !5281

if.then15:                                        ; preds = %for.body
  tail call void @push_to_sequence(%struct.rtx_def* %5) #11, !dbg !5282
  tail call fastcc void @fixup_var_refs_insns(%struct.rtx_def* %5, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 0, %struct.rtx_def* %may_share) #10, !dbg !5284
  %call = tail call %struct.rtx_def* @get_insns() #11, !dbg !5285
  %6 = load %struct.rtx_def** %rtx3, align 8, !dbg !5285, !tbaa !2729
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 %indvars.iv, i32 0, !dbg !5285
  %call.c = ptrtoint %struct.rtx_def* %call to i64, !dbg !5285
  store i64 %call.c, i64* %7, align 8, !dbg !5285, !tbaa !2729
  tail call void @end_sequence() #11, !dbg !5286
  br label %for.inc, !dbg !5287

for.inc:                                          ; preds = %for.body, %if.then15
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !5288
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !5288
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !5288
  br i1 %exitcond, label %while.cond.backedge, label %for.inc.for.body_crit_edge, !dbg !5288

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %.pre = load %struct.rtx_def** %rtx3, align 8, !dbg !5280, !tbaa !2729
  br label %for.body, !dbg !5288

if.else:                                          ; preds = %land.lhs.true, %while.body
  %idxprom2548 = zext i32 %bf.clear to i64, !dbg !5289
  %arrayidx26 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom2548, !dbg !5289
  %8 = load i8* %arrayidx26, align 1, !dbg !5289, !tbaa !2730
  %cmp27 = icmp eq i8 %8, 105, !dbg !5289
  br i1 %cmp27, label %if.then29, label %while.cond.backedge, !dbg !5289

while.cond.backedge:                              ; preds = %for.inc, %if.else, %if.then29
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5277
  br i1 %tobool, label %while.end, label %while.body, !dbg !5277

if.then29:                                        ; preds = %if.else
  tail call fastcc void @fixup_var_refs_insn(%struct.rtx_def* %insn.addr.051, %struct.rtx_def* %var, i32 %promoted_mode, i32 %unsignedp, i32 %toplevel, %struct.rtx_def* %may_share) #10, !dbg !5290
  br label %while.cond.backedge, !dbg !5290

while.end:                                        ; preds = %while.cond.backedge, %entry
  ret void, !dbg !5291
}
