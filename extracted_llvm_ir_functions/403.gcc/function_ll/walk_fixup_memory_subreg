define internal fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !748, i64 0, metadata !2499), !dbg !5629
  tail call void @llvm.dbg.value(metadata !3036, i64 0, metadata !2500), !dbg !5630
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !5631
  br i1 %cmp, label %return, label %if.end, !dbg !5631

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !5632
  %bf.load = load i32* %0, align 8, !dbg !5632
  %bf.clear = and i32 %bf.load, 65535, !dbg !5632
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !2501), !dbg !5632
  %cmp1 = icmp eq i32 %bf.clear, 63, !dbg !5633
  br i1 %cmp1, label %land.lhs.true, label %if.end6, !dbg !5633

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, !dbg !5633
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5633
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !5633, !tbaa !2729
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5633
  %bf.load2 = load i32* %2, align 8, !dbg !5633
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5633
  %cmp4 = icmp eq i32 %bf.clear3, 66, !dbg !5633
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5633

if.then5:                                         ; preds = %land.lhs.true
  %call = tail call fastcc %struct.rtx_def* @fixup_memory_subreg(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 1) #10, !dbg !5634
  br label %return, !dbg !5634

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %idxprom1 = zext i32 %bf.clear to i64, !dbg !5635
  %arrayidx7 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom1, !dbg !5635
  %3 = load i8** %arrayidx7, align 8, !dbg !5635, !tbaa !2729
  tail call void @llvm.dbg.value(metadata !{i8* %3}, i64 0, metadata !2502), !dbg !5635
  %arrayidx9 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom1, !dbg !5636
  %4 = load i8* %arrayidx9, align 1, !dbg !5636, !tbaa !2730
  %cmp106 = icmp eq i8 %4, 0, !dbg !5636
  br i1 %cmp106, label %return, label %for.body.lr.ph, !dbg !5636

for.body.lr.ph:                                   ; preds = %if.end6
  %5 = zext i8 %4 to i64
  br label %for.body, !dbg !5636

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv8 = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next9, %for.cond.backedge ]
  %indvars.iv.next9 = add i64 %indvars.iv8, -1, !dbg !5636
  %arrayidx13 = getelementptr inbounds i8* %3, i64 %indvars.iv.next9, !dbg !5637
  %6 = load i8* %arrayidx13, align 1, !dbg !5637, !tbaa !2730
  switch i8 %6, label %for.cond.backedge [
    i8 101, label %if.then17
    i8 69, label %for.cond33.preheader
  ], !dbg !5637

for.cond.backedge:                                ; preds = %for.cond33.preheader, %for.body39, %for.body, %if.then17
  %7 = trunc i64 %indvars.iv.next9 to i32, !dbg !5636
  %cmp10 = icmp sgt i32 %7, 0, !dbg !5636
  br i1 %cmp10, label %for.body, label %return, !dbg !5636

for.cond33.preheader:                             ; preds = %for.body
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next9, !dbg !5638
  %rtvec = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !5638
  %8 = load %struct.rtvec_def** %rtvec, align 8, !dbg !5638, !tbaa !2729
  %num_elem2 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0, !dbg !5638
  %9 = load i32* %num_elem2, align 4, !dbg !5638, !tbaa !2768
  %cmp373 = icmp sgt i32 %9, 0, !dbg !5638
  br i1 %cmp373, label %for.body39, label %for.cond.backedge, !dbg !5638

if.then17:                                        ; preds = %for.body
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next9, !dbg !5640
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !5640
  %10 = load %struct.rtx_def** %rtx21, align 8, !dbg !5640, !tbaa !2729
  %call22 = tail call fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %10, %struct.rtx_def* %insn) #10, !dbg !5640
  %11 = getelementptr inbounds %union.rtunion_def* %arrayidx20, i64 0, i32 0, !dbg !5640
  %call22.c = ptrtoint %struct.rtx_def* %call22 to i64, !dbg !5640
  store i64 %call22.c, i64* %11, align 8, !dbg !5640, !tbaa !2729
  br label %for.cond.backedge, !dbg !5640

for.body39:                                       ; preds = %for.cond33.preheader, %for.body39
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body39 ], [ 0, %for.cond33.preheader ]
  %12 = phi %struct.rtvec_def* [ %15, %for.body39 ], [ %8, %for.cond33.preheader ]
  %arrayidx45 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 1, i64 %indvars.iv, !dbg !5641
  %13 = load %struct.rtx_def** %arrayidx45, align 8, !dbg !5641, !tbaa !2729
  %call46 = tail call fastcc %struct.rtx_def* @walk_fixup_memory_subreg(%struct.rtx_def* %13, %struct.rtx_def* %insn) #10, !dbg !5641
  %14 = load %struct.rtvec_def** %rtvec, align 8, !dbg !5641, !tbaa !2729
  %arrayidx53 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv, !dbg !5641
  store %struct.rtx_def* %call46, %struct.rtx_def** %arrayidx53, align 8, !dbg !5641, !tbaa !2729
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !5638
  %15 = load %struct.rtvec_def** %rtvec, align 8, !dbg !5638, !tbaa !2729
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0, !dbg !5638
  %16 = load i32* %num_elem, align 4, !dbg !5638, !tbaa !2768
  %17 = trunc i64 %indvars.iv.next to i32, !dbg !5638
  %cmp37 = icmp slt i32 %17, %16, !dbg !5638
  br i1 %cmp37, label %for.body39, label %for.cond.backedge, !dbg !5638

return:                                           ; preds = %if.end6, %for.cond.backedge, %entry, %if.then5
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then5 ], [ null, %entry ], [ %x, %for.cond.backedge ], [ %x, %if.end6 ]
  ret %struct.rtx_def* %retval.0, !dbg !5642
}
