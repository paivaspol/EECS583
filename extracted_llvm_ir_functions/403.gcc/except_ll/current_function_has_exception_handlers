define zeroext i1 @current_function_has_exception_handlers() #2 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh = getelementptr inbounds %struct.function* %0, i64 0, i32 0
  %1 = load %struct.eh_status** %eh, align 8, !tbaa !3
  %last_region_number = getelementptr inbounds %struct.eh_status* %1, i64 0, i32 8
  %2 = load i32* %last_region_number, align 4, !tbaa !0
  %cmp11 = icmp sgt i32 %2, 0
  br i1 %cmp11, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %entry
  %region_array = getelementptr inbounds %struct.eh_status* %1, i64 0, i32 1
  %3 = load %struct.eh_region*** %region_array, align 8, !tbaa !3
  %4 = sext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ %4, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds %struct.eh_region** %3, i64 %indvars.iv
  %5 = load %struct.eh_region** %arrayidx, align 8, !tbaa !3
  %tobool = icmp eq %struct.eh_region* %5, null
  br i1 %tobool, label %for.inc, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %region_number = getelementptr inbounds %struct.eh_region* %5, i64 0, i32 3
  %6 = load i32* %region_number, align 4, !tbaa !0
  %7 = trunc i64 %indvars.iv to i32
  %cmp2 = icmp eq i32 %6, %7
  br i1 %cmp2, label %if.end, label %for.inc

if.end:                                           ; preds = %lor.lhs.false
  %type = getelementptr inbounds %struct.eh_region* %5, i64 0, i32 5
  %8 = load i32* %type, align 4, !tbaa !5
  %cmp3 = icmp eq i32 %8, 6
  br i1 %cmp3, label %for.inc, label %return

for.inc:                                          ; preds = %if.end, %lor.lhs.false, %for.body
  %indvars.iv.next = add i64 %indvars.iv, -1
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp sgt i32 %9, 0
  br i1 %cmp, label %for.body, label %return

return:                                           ; preds = %for.inc, %if.end, %entry
  %retval.0 = phi i1 [ false, %entry ], [ true, %if.end ], [ false, %for.inc ]
  ret i1 %retval.0
}
