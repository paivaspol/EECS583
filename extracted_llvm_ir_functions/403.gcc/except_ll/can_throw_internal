define zeroext i1 @can_throw_internal(%struct.rtx_def* %insn) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !1641), !dbg !3260
  %0 = bitcast %struct.rtx_def* %insn to i32*, !dbg !3261
  %bf.load = load i32* %0, align 8, !dbg !3261
  %bf.clear = and i32 %bf.load, 65535, !dbg !3261
  %idxprom108 = zext i32 %bf.clear to i64, !dbg !3261
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom108, !dbg !3261
  %1 = load i8* %arrayidx, align 1, !dbg !3261, !tbaa !2221
  %cmp = icmp eq i8 %1, 105, !dbg !3261
  br i1 %cmp, label %if.end, label %return, !dbg !3261

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 32, !dbg !3262
  br i1 %cmp4, label %land.lhs.true, label %if.end18, !dbg !3262

land.lhs.true:                                    ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3, !dbg !3262
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !3262
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !3262, !tbaa !2232
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3262
  %bf.load7 = load i32* %3, align 8, !dbg !3262
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !3262
  %cmp9 = icmp eq i32 %bf.clear8, 24, !dbg !3262
  br i1 %cmp9, label %if.then11, label %if.end18, !dbg !3262

if.then11:                                        ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !3263
  %rtvec = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtvec_def**, !dbg !3263
  %4 = load %struct.rtvec_def** %rtvec, align 8, !dbg !3263, !tbaa !2232
  %arrayidx17 = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 1, i64 0, !dbg !3263
  %5 = load %struct.rtx_def** %arrayidx17, align 8, !dbg !3263, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %5}, i64 0, metadata !1641), !dbg !3263
  %.phi.trans.insert = bitcast %struct.rtx_def* %5 to i32*
  %bf.load19.pre = load i32* %.phi.trans.insert, align 8, !dbg !3264
  br label %if.end18, !dbg !3263

if.end18:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  %bf.load19 = phi i32 [ %bf.load19.pre, %if.then11 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %if.end ]
  %insn.addr.0 = phi %struct.rtx_def* [ %5, %if.then11 ], [ %insn, %land.lhs.true ], [ %insn, %if.end ]
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !3264
  %cmp21 = icmp eq i32 %bf.clear20, 34, !dbg !3264
  br i1 %cmp21, label %land.lhs.true23, label %if.end50, !dbg !3264

land.lhs.true23:                                  ; preds = %if.end18
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i64 3, !dbg !3264
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !3264
  %6 = load %struct.rtx_def** %rtx26, align 8, !dbg !3264, !tbaa !2232
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3264
  %bf.load27 = load i32* %7, align 8, !dbg !3264
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3264
  %cmp29 = icmp eq i32 %bf.clear28, 141, !dbg !3264
  br i1 %cmp29, label %for.body, label %if.end50, !dbg !3264

for.body:                                         ; preds = %land.lhs.true23, %for.inc48.for.body_crit_edge
  %8 = phi %struct.rtx_def* [ %.pre, %for.inc48.for.body_crit_edge ], [ %6, %land.lhs.true23 ], !dbg !3265
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc48.for.body_crit_edge ], [ 0, %land.lhs.true23 ]
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 %indvars.iv, !dbg !3265
  %sub.0.in109 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !3265
  %sub.0110 = load %struct.rtx_def** %sub.0.in109, align 8, !dbg !3265
  %tobool111 = icmp eq %struct.rtx_def* %sub.0110, null, !dbg !3266
  br i1 %tobool111, label %for.inc48, label %for.body42, !dbg !3266

for.cond41:                                       ; preds = %for.body42
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %sub.0112, i64 0, i32 1, i64 2, !dbg !3266
  %sub.0.in = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !3265
  %sub.0 = load %struct.rtx_def** %sub.0.in, align 8, !dbg !3265
  %tobool = icmp eq %struct.rtx_def* %sub.0, null, !dbg !3266
  br i1 %tobool, label %for.inc48, label %for.body42, !dbg !3266

for.body42:                                       ; preds = %for.body, %for.cond41
  %sub.0112 = phi %struct.rtx_def* [ %sub.0, %for.cond41 ], [ %sub.0110, %for.body ]
  %call = tail call zeroext i1 @can_throw_internal(%struct.rtx_def* %sub.0112) #8, !dbg !3268
  br i1 %call, label %return, label %for.cond41, !dbg !3268

for.inc48:                                        ; preds = %for.cond41, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !3269
  %9 = trunc i64 %indvars.iv.next to i32, !dbg !3269
  %cmp32 = icmp slt i32 %9, 3, !dbg !3269
  br i1 %cmp32, label %for.inc48.for.body_crit_edge, label %return, !dbg !3269

for.inc48.for.body_crit_edge:                     ; preds = %for.inc48
  %.pre = load %struct.rtx_def** %rtx26, align 8, !dbg !3265, !tbaa !2232
  br label %for.body, !dbg !3269

if.end50:                                         ; preds = %land.lhs.true23, %if.end18
  %call51 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.addr.0, i32 23, %struct.rtx_def* null) #7, !dbg !3270
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call51}, i64 0, metadata !1644), !dbg !3270
  %tobool52 = icmp eq %struct.rtx_def* %call51, null, !dbg !3271
  br i1 %tobool52, label %return, label %lor.lhs.false, !dbg !3271

lor.lhs.false:                                    ; preds = %if.end50
  %arrayidx54 = getelementptr inbounds %struct.rtx_def* %call51, i64 0, i32 1, i64 0, !dbg !3271
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !3271
  %10 = load %struct.rtx_def** %rtx55, align 8, !dbg !3271, !tbaa !2232
  %rtwint = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0, i32 0, !dbg !3271
  %11 = load i64* %rtwint, align 8, !dbg !3271, !tbaa !2271
  %cmp58 = icmp slt i64 %11, 1, !dbg !3271
  br i1 %cmp58, label %return, label %if.end61, !dbg !3271

if.end61:                                         ; preds = %lor.lhs.false
  %12 = load %struct.function** @cfun, align 8, !dbg !3272, !tbaa !2232
  %eh = getelementptr inbounds %struct.function* %12, i64 0, i32 0, !dbg !3272
  %13 = load %struct.eh_status** %eh, align 8, !dbg !3272, !tbaa !2232
  %region_array = getelementptr inbounds %struct.eh_status* %13, i64 0, i32 1, !dbg !3272
  %14 = load %struct.eh_region*** %region_array, align 8, !dbg !3272, !tbaa !2232
  %arrayidx68 = getelementptr inbounds %struct.eh_region** %14, i64 %11, !dbg !3272
  %15 = load %struct.eh_region** %arrayidx68, align 8, !dbg !3272, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.eh_region* %15}, i64 0, metadata !1642), !dbg !3272
  tail call void @llvm.dbg.value(metadata !3190, i64 0, metadata !1643), !dbg !3273
  %type = getelementptr inbounds %struct.eh_region* %15, i64 0, i32 5, !dbg !3274
  %16 = load i32* %type, align 4, !dbg !3274, !tbaa !2287
  %cmp69 = icmp eq i32 %16, 6, !dbg !3274
  br i1 %cmp69, label %if.then71, label %for.cond74.preheader, !dbg !3274

if.then71:                                        ; preds = %if.end61
  %u = getelementptr inbounds %struct.eh_region* %15, i64 0, i32 6, !dbg !3275
  %type72 = bitcast %union.anon* %u to %union.tree_node**, !dbg !3275
  %17 = load %union.tree_node** %type72, align 8, !dbg !3275, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %17}, i64 0, metadata !1643), !dbg !3275
  %outer = getelementptr inbounds %struct.eh_region* %15, i64 0, i32 0, !dbg !3277
  %18 = load %struct.eh_region** %outer, align 8, !dbg !3277, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.eh_region* %18}, i64 0, metadata !1642), !dbg !3277
  br label %for.cond74.preheader, !dbg !3278

for.cond74.preheader:                             ; preds = %if.then71, %if.end61
  %region.0.ph = phi %struct.eh_region* [ %15, %if.end61 ], [ %18, %if.then71 ]
  %type_thrown.0.ph = phi %union.tree_node* [ null, %if.end61 ], [ %17, %if.then71 ]
  %tobool75116 = icmp eq %struct.eh_region* %region.0.ph, null, !dbg !3279
  br i1 %tobool75116, label %return.loopexit115, label %for.body76, !dbg !3279

for.body76:                                       ; preds = %for.cond74.preheader, %for.inc86
  %region.0117 = phi %struct.eh_region* [ %19, %for.inc86 ], [ %region.0.ph, %for.cond74.preheader ]
  %call77 = tail call fastcc i32 @reachable_next_level(%struct.eh_region* %region.0117, %union.tree_node* %type_thrown.0.ph, %struct.reachable_info* null) #8, !dbg !3280
  tail call void @llvm.dbg.value(metadata !{i32 %call77}, i64 0, metadata !1650), !dbg !3280
  switch i32 %call77, label %return [
    i32 3, label %return.loopexit115
    i32 0, label %for.inc86
  ], !dbg !3281

for.inc86:                                        ; preds = %for.body76
  %outer87 = getelementptr inbounds %struct.eh_region* %region.0117, i64 0, i32 0, !dbg !3279
  %19 = load %struct.eh_region** %outer87, align 8, !dbg !3279, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.eh_region* %19}, i64 0, metadata !1642), !dbg !3279
  %tobool75 = icmp eq %struct.eh_region* %19, null, !dbg !3279
  br i1 %tobool75, label %return.loopexit115, label %for.body76, !dbg !3279

return.loopexit115:                               ; preds = %for.inc86, %for.body76, %for.cond74.preheader
  br label %return

return:                                           ; preds = %for.inc48, %for.body42, %for.body76, %return.loopexit115, %lor.lhs.false, %if.end50, %entry
  %retval.0 = phi i1 [ false, %entry ], [ false, %if.end50 ], [ false, %lor.lhs.false ], [ false, %return.loopexit115 ], [ true, %for.body76 ], [ true, %for.body42 ], [ false, %for.inc48 ]
  ret i1 %retval.0, !dbg !3282
}
