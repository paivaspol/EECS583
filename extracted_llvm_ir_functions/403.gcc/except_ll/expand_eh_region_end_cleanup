define void @expand_eh_region_end_cleanup(%union.tree_node* %handler) #0 {
entry:
  %0 = load i32* @flag_exceptions, align 4, !tbaa !0
  %tobool.i = icmp eq i32 %0, 0
  br i1 %tobool.i, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh.i = getelementptr inbounds %struct.function* %1, i64 0, i32 0
  %2 = load %struct.eh_status** %eh.i, align 8, !tbaa !3
  %cur_region1.i = getelementptr inbounds %struct.eh_status* %2, i64 0, i32 2
  %3 = load %struct.eh_region** %cur_region1.i, align 8, !tbaa !3
  %call.i = tail call %struct.rtx_def* @emit_note(i8* null, i32 -85) #6
  %region_number.i = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 3
  %4 = load i32* %region_number.i, align 4, !tbaa !0
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %call.i, i64 0, i32 1, i64 3
  %rtint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  store i32 %4, i32* %rtint.i, align 4, !tbaa !0
  %outer.i = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 0
  %5 = load %struct.eh_region** %outer.i, align 8, !tbaa !3
  %6 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh2.i = getelementptr inbounds %struct.function* %6, i64 0, i32 0
  %7 = load %struct.eh_status** %eh2.i, align 8, !tbaa !3
  %cur_region3.i = getelementptr inbounds %struct.eh_status* %7, i64 0, i32 2
  store %struct.eh_region* %5, %struct.eh_region** %cur_region3.i, align 8, !tbaa !3
  %type = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 5
  store i32 1, i32* %type, align 4, !tbaa !5
  %call2 = tail call %struct.rtx_def* @gen_label_rtx() #6
  %label = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 7
  store %struct.rtx_def* %call2, %struct.rtx_def** %label, align 8, !tbaa !3
  %8 = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 6, i32 0, i32 0
  %handler.c = bitcast %union.tree_node* %handler to %struct.eh_region*
  store %struct.eh_region* %handler.c, %struct.eh_region** %8, align 8, !tbaa !3
  %call3 = tail call %struct.rtx_def* @gen_label_rtx() #6
  tail call void @emit_jump(%struct.rtx_def* %call3) #6
  %9 = load %struct.rtx_def** %label, align 8, !tbaa !3
  %call5 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %9) #6
  %10 = load %union.tree_node* ()** @lang_protect_cleanup_actions, align 8, !tbaa !3
  %tobool6 = icmp eq %union.tree_node* ()* %10, null
  br i1 %tobool6, label %if.end10, label %cond.end

cond.end:                                         ; preds = %if.end
  %call7 = tail call %union.tree_node* %10() #6
  %tobool8 = icmp eq %union.tree_node* %call7, null
  br i1 %tobool8, label %if.end10, label %if.then9

if.then9:                                         ; preds = %cond.end
  tail call void @expand_eh_region_start() #7
  br label %if.end10

if.end10:                                         ; preds = %cond.end, %if.end, %if.then9
  %tobool851 = phi i1 [ true, %if.then9 ], [ false, %cond.end ], [ false, %if.end ]
  %cond50 = phi %union.tree_node* [ %call7, %if.then9 ], [ null, %cond.end ], [ null, %if.end ]
  %11 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %11, 25
  %12 = and i32 %and, 1
  %13 = or i32 %12, 4
  %call13 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %13) #6
  %14 = load %struct.function** @cfun, align 8, !tbaa !3
  %call15 = tail call %struct.rtx_def* @get_exception_pointer(%struct.function* %14) #7
  %call16 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call13, %struct.rtx_def* %call15) #6
  %15 = load i32* @word_mode, align 4, !tbaa !6
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %15) #6
  %16 = load %struct.function** @cfun, align 8, !tbaa !3
  %call20 = tail call fastcc %struct.rtx_def* @get_exception_filter(%struct.function* %16) #7
  %call21 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call17, %struct.rtx_def* %call20) #6
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call22 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %handler, %struct.rtx_def* %17, i32 0, i32 0) #6
  %18 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh = getelementptr inbounds %struct.function* %18, i64 0, i32 0
  %19 = load %struct.eh_status** %eh, align 8, !tbaa !3
  %exc_ptr = getelementptr inbounds %struct.eh_status* %19, i64 0, i32 6
  %20 = load %struct.rtx_def** %exc_ptr, align 8, !tbaa !3
  %call24 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %20, %struct.rtx_def* %call13) #6
  %21 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh25 = getelementptr inbounds %struct.function* %21, i64 0, i32 0
  %22 = load %struct.eh_status** %eh25, align 8, !tbaa !3
  %filter = getelementptr inbounds %struct.eh_status* %22, i64 0, i32 5
  %23 = load %struct.rtx_def** %filter, align 8, !tbaa !3
  %call27 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %23, %struct.rtx_def* %call17) #6
  br i1 %tobool851, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end10
  tail call void @expand_eh_region_end_must_not_throw(%union.tree_node* %cond50) #7
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.end10
  tail call void @do_pending_stack_adjust() #6
  %24 = load i32* %region_number.i, align 4, !tbaa !0
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_i(i32 53, i32 0, i32 %24) #6
  %call32 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call31) #6
  %resume = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 10
  store %struct.rtx_def* %call32, %struct.rtx_def** %resume, align 8, !tbaa !3
  %call33 = tail call %struct.rtx_def* @emit_barrier() #6
  %call34 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call3) #6
  br label %return

return:                                           ; preds = %entry, %if.end30
  ret void
}
