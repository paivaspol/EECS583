define void @expand_start_catch(%union.tree_node* %type_or_list) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %type_or_list}, i64 0, metadata !1479), !dbg !2487
  tail call void @llvm.dbg.value(metadata !732, i64 0, metadata !2488), !dbg !2490
  %0 = load i32* @flag_exceptions, align 4, !dbg !2491, !tbaa !2220
  %tobool.i = icmp eq i32 %0, 0, !dbg !2491
  br i1 %tobool.i, label %return, label %if.end, !dbg !2491

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %type_or_list}, i64 0, metadata !1483), !dbg !2492
  %tobool1 = icmp eq %union.tree_node* %type_or_list, null, !dbg !2493
  br i1 %tobool1, label %if.end8, label %if.then2, !dbg !2493

if.then2:                                         ; preds = %if.end
  %code = getelementptr inbounds %union.tree_node* %type_or_list, i64 0, i32 0, i32 0, i32 2, !dbg !2494
  %1 = bitcast [4 x i8]* %code to i32*, !dbg !2494
  %bf.load = load i32* %1, align 8, !dbg !2494
  %bf.clear = and i32 %bf.load, 255, !dbg !2494
  %cmp = icmp eq i32 %bf.clear, 2, !dbg !2494
  br i1 %cmp, label %for.body.lr.ph, label %if.end5, !dbg !2494

if.end5:                                          ; preds = %if.then2
  %call4 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %type_or_list, %union.tree_node* null) #7, !dbg !2495
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call4}, i64 0, metadata !1483), !dbg !2495
  %tobool647 = icmp eq %union.tree_node* %call4, null, !dbg !2496
  br i1 %tobool647, label %if.end8, label %for.body.lr.ph, !dbg !2496

for.body.lr.ph:                                   ; preds = %if.then2, %if.end5
  %type_list.050 = phi %union.tree_node* [ %call4, %if.end5 ], [ %type_or_list, %if.then2 ]
  br label %for.body, !dbg !2496

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %type_node.048 = phi %union.tree_node* [ %type_list.050, %for.body.lr.ph ], [ %4, %for.body ]
  %value = getelementptr inbounds %union.tree_node* %type_node.048, i64 0, i32 0, i32 2, !dbg !2498
  %2 = bitcast i32* %value to %union.tree_node**, !dbg !2498
  %3 = load %union.tree_node** %2, align 8, !dbg !2498, !tbaa !2232
  tail call fastcc void @add_type_for_runtime(%union.tree_node* %3) #8, !dbg !2498
  %chain = getelementptr inbounds %union.tree_node* %type_node.048, i64 0, i32 0, i32 0, i32 0, !dbg !2496
  %4 = load %union.tree_node** %chain, align 8, !dbg !2496, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %4}, i64 0, metadata !1484), !dbg !2496
  %tobool6 = icmp eq %union.tree_node* %4, null, !dbg !2496
  br i1 %tobool6, label %if.end8, label %for.body, !dbg !2496

if.end8:                                          ; preds = %if.end5, %for.body, %if.end
  %type_list.1 = phi %union.tree_node* [ null, %if.end ], [ null, %if.end5 ], [ %type_list.050, %for.body ]
  tail call void @expand_eh_region_start() #8, !dbg !2499
  %5 = load %struct.function** @cfun, align 8, !dbg !2500, !tbaa !2232
  %eh = getelementptr inbounds %struct.function* %5, i64 0, i32 0, !dbg !2500
  %6 = load %struct.eh_status** %eh, align 8, !dbg !2500, !tbaa !2232
  %try_region = getelementptr inbounds %struct.eh_status* %6, i64 0, i32 3, !dbg !2500
  %7 = load %struct.eh_region** %try_region, align 8, !dbg !2500, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.eh_region* %7}, i64 0, metadata !1480), !dbg !2500
  %cur_region = getelementptr inbounds %struct.eh_status* %6, i64 0, i32 2, !dbg !2501
  %8 = load %struct.eh_region** %cur_region, align 8, !dbg !2501, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.eh_region* %8}, i64 0, metadata !1481), !dbg !2501
  %type = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 5, !dbg !2502
  store i32 3, i32* %type, align 4, !dbg !2502, !tbaa !2287
  %type_list10 = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 6, i32 0, i32 2, !dbg !2503
  %type_list.1.c = bitcast %union.tree_node* %type_list.1 to %struct.eh_region*, !dbg !2503
  store %struct.eh_region* %type_list.1.c, %struct.eh_region** %type_list10, align 8, !dbg !2503, !tbaa !2232
  %call11 = tail call %struct.rtx_def* @gen_label_rtx() #7, !dbg !2504
  %label = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 7, !dbg !2504
  store %struct.rtx_def* %call11, %struct.rtx_def** %label, align 8, !dbg !2504, !tbaa !2232
  %last_catch = getelementptr inbounds %struct.eh_region* %7, i64 0, i32 6, i32 0, i32 1, !dbg !2505
  %9 = load %struct.eh_region** %last_catch, align 8, !dbg !2505, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.eh_region* %9}, i64 0, metadata !1482), !dbg !2505
  %10 = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 6, i32 0, i32 1, !dbg !2506
  store %struct.eh_region* %9, %struct.eh_region** %10, align 8, !dbg !2506, !tbaa !2232
  %tobool15 = icmp eq %struct.eh_region* %9, null, !dbg !2507
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !2507

if.then16:                                        ; preds = %if.end8
  %next_catch = getelementptr inbounds %struct.eh_region* %9, i64 0, i32 6, i32 0, i32 0, !dbg !2508
  store %struct.eh_region* %8, %struct.eh_region** %next_catch, align 8, !dbg !2508, !tbaa !2232
  br label %if.end22, !dbg !2508

if.else:                                          ; preds = %if.end8
  %catch21 = getelementptr inbounds %struct.eh_region* %7, i64 0, i32 6, i32 0, i32 0, !dbg !2509
  store %struct.eh_region* %8, %struct.eh_region** %catch21, align 8, !dbg !2509, !tbaa !2232
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then16
  store %struct.eh_region* %8, %struct.eh_region** %last_catch, align 8, !dbg !2510, !tbaa !2232
  %11 = load %struct.rtx_def** %label, align 8, !dbg !2511, !tbaa !2232
  %call27 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %11) #7, !dbg !2511
  br label %return, !dbg !2511

return:                                           ; preds = %entry, %if.end22
  ret void, !dbg !2511
}
