define void @expand_start_catch(%union.tree_node* %type_or_list) #0 {
entry:
  %0 = load i32* @flag_exceptions, align 4, !tbaa !0
  %tobool.i = icmp eq i32 %0, 0
  br i1 %tobool.i, label %return, label %if.end

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %union.tree_node* %type_or_list, null
  br i1 %tobool1, label %if.end8, label %if.then2

if.then2:                                         ; preds = %if.end
  %code = getelementptr inbounds %union.tree_node* %type_or_list, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 2
  br i1 %cmp, label %for.body.lr.ph, label %if.end5

if.end5:                                          ; preds = %if.then2
  %call4 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %type_or_list, %union.tree_node* null) #6
  %tobool647 = icmp eq %union.tree_node* %call4, null
  br i1 %tobool647, label %if.end8, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then2, %if.end5
  %type_list.050 = phi %union.tree_node* [ %call4, %if.end5 ], [ %type_or_list, %if.then2 ]
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %type_node.048 = phi %union.tree_node* [ %type_list.050, %for.body.lr.ph ], [ %4, %for.body ]
  %value = getelementptr inbounds %union.tree_node* %type_node.048, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !3
  tail call fastcc void @add_type_for_runtime(%union.tree_node* %3) #7
  %chain = getelementptr inbounds %union.tree_node* %type_node.048, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain, align 8, !tbaa !3
  %tobool6 = icmp eq %union.tree_node* %4, null
  br i1 %tobool6, label %if.end8, label %for.body

if.end8:                                          ; preds = %if.end5, %for.body, %if.end
  %type_list.1 = phi %union.tree_node* [ null, %if.end ], [ null, %if.end5 ], [ %type_list.050, %for.body ]
  tail call void @expand_eh_region_start() #7
  %5 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh = getelementptr inbounds %struct.function* %5, i64 0, i32 0
  %6 = load %struct.eh_status** %eh, align 8, !tbaa !3
  %try_region = getelementptr inbounds %struct.eh_status* %6, i64 0, i32 3
  %7 = load %struct.eh_region** %try_region, align 8, !tbaa !3
  %cur_region = getelementptr inbounds %struct.eh_status* %6, i64 0, i32 2
  %8 = load %struct.eh_region** %cur_region, align 8, !tbaa !3
  %type = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 5
  store i32 3, i32* %type, align 4, !tbaa !5
  %type_list10 = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 6, i32 0, i32 2
  %type_list.1.c = bitcast %union.tree_node* %type_list.1 to %struct.eh_region*
  store %struct.eh_region* %type_list.1.c, %struct.eh_region** %type_list10, align 8, !tbaa !3
  %call11 = tail call %struct.rtx_def* @gen_label_rtx() #6
  %label = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 7
  store %struct.rtx_def* %call11, %struct.rtx_def** %label, align 8, !tbaa !3
  %last_catch = getelementptr inbounds %struct.eh_region* %7, i64 0, i32 6, i32 0, i32 1
  %9 = load %struct.eh_region** %last_catch, align 8, !tbaa !3
  %10 = getelementptr inbounds %struct.eh_region* %8, i64 0, i32 6, i32 0, i32 1
  store %struct.eh_region* %9, %struct.eh_region** %10, align 8, !tbaa !3
  %tobool15 = icmp eq %struct.eh_region* %9, null
  br i1 %tobool15, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end8
  %next_catch = getelementptr inbounds %struct.eh_region* %9, i64 0, i32 6, i32 0, i32 0
  store %struct.eh_region* %8, %struct.eh_region** %next_catch, align 8, !tbaa !3
  br label %if.end22

if.else:                                          ; preds = %if.end8
  %catch21 = getelementptr inbounds %struct.eh_region* %7, i64 0, i32 6, i32 0, i32 0
  store %struct.eh_region* %8, %struct.eh_region** %catch21, align 8, !tbaa !3
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then16
  store %struct.eh_region* %8, %struct.eh_region** %last_catch, align 8, !tbaa !3
  %11 = load %struct.rtx_def** %label, align 8, !tbaa !3
  %call27 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %11) #6
  br label %return

return:                                           ; preds = %entry, %if.end22
  ret void
}
