define void @output_function_exception_table() #0 {
entry:
  %reg_start_lab.i = alloca [32 x i8], align 16
  %reg_end_lab.i = alloca [32 x i8], align 16
  %landing_pad_lab.i = alloca [32 x i8], align 16
  %ttype_label = alloca [32 x i8], align 16
  %cs_after_size_label = alloca [32 x i8], align 16
  %cs_end_label = alloca [32 x i8], align 16
  %ttype_after_disp_label = alloca [32 x i8], align 16
  %0 = load %struct.function** @cfun, align 8, !tbaa !3
  %uses_eh_lsda = getelementptr inbounds %struct.function* %0, i64 0, i32 56
  %1 = bitcast [4 x i8]* %uses_eh_lsda to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 4194304
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %2 = load i32* @current_funcdef_number, align 4, !tbaa !0
  %3 = load void ()** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !3
  call void %3() #6
  %4 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh = getelementptr inbounds %struct.function* %4, i64 0, i32 0
  %5 = load %struct.eh_status** %eh, align 8, !tbaa !3
  %ttype_data = getelementptr inbounds %struct.eh_status* %5, i64 0, i32 9
  %6 = load %struct.varray_head_tag** %ttype_data, align 8, !tbaa !3
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 1
  %7 = load i64* %elements_used, align 8, !tbaa !4
  %cmp = icmp eq i64 %7, 0
  br i1 %cmp, label %lor.end, label %if.else

lor.end:                                          ; preds = %if.end
  %ehspec_data = getelementptr inbounds %struct.eh_status* %5, i64 0, i32 10
  %8 = load %struct.varray_head_tag** %ehspec_data, align 8, !tbaa !3
  %elements_used2 = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 1
  %9 = load i64* %elements_used2, align 8, !tbaa !4
  %cmp3 = icmp eq i64 %9, 0
  br i1 %cmp3, label %do.body9, label %if.else

if.else:                                          ; preds = %lor.end, %if.end
  %10 = load i32* @flag_pic, align 4, !tbaa !0
  %tobool6 = icmp ne i32 %10, 0
  %cond = select i1 %tobool6, i32 155, i32 0
  %arraydecay = getelementptr inbounds [32 x i8]* %ttype_label, i64 0, i64 0
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str5, i64 0, i64 0), i32 %2) #6
  %call7 = call i32 @size_of_encoded_value(i32 %cond) #6
  %mul = shl nsw i32 %call7, 3
  call void @assemble_align(i32 %mul) #6
  br label %do.body9

do.body9:                                         ; preds = %lor.end, %if.else
  %11 = phi i1 [ true, %if.else ], [ false, %lor.end ]
  %tt_format_size.0 = phi i32 [ %call7, %if.else ], [ 0, %lor.end ]
  %tt_format.0 = phi i32 [ %cond, %if.else ], [ 255, %lor.end ]
  %12 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0), i32 %2) #6
  %call12 = call i8* @eh_data_format_name(i32 255) #6
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 255, i8* getelementptr inbounds ([21 x i8]* @.str8, i64 0, i64 0), i8* %call12) #6
  %conv13138 = zext i32 %tt_format.0 to i64
  %call14 = call i8* @eh_data_format_name(i32 %tt_format.0) #6
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv13138, i8* getelementptr inbounds ([19 x i8]* @.str9, i64 0, i64 0), i8* %call14) #6
  br i1 %11, label %do.body17, label %if.end25

do.body17:                                        ; preds = %do.body9
  %arraydecay18 = getelementptr inbounds [32 x i8]* %ttype_after_disp_label, i64 0, i64 0
  %call19 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay18, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str10, i64 0, i64 0), i32 %2) #6
  %arraydecay21 = getelementptr inbounds [32 x i8]* %ttype_label, i64 0, i64 0
  call void (i8*, i8*, i8*, ...)* @dw2_asm_output_delta_uleb128(i8* %arraydecay21, i8* %arraydecay18, i8* getelementptr inbounds ([19 x i8]* @.str11, i64 0, i64 0)) #6
  %13 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  call void @assemble_name(%struct._IO_FILE* %13, i8* %arraydecay18) #6
  %14 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %15 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str12, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %14)
  br label %if.end25

if.end25:                                         ; preds = %do.body17, %do.body9
  %call27 = call i8* @eh_data_format_name(i32 1) #6
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 1, i8* getelementptr inbounds ([22 x i8]* @.str13, i64 0, i64 0), i8* %call27) #6
  %arraydecay29 = getelementptr inbounds [32 x i8]* %cs_after_size_label, i64 0, i64 0
  %call30 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay29, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str14, i64 0, i64 0), i32 %2) #6
  %arraydecay33 = getelementptr inbounds [32 x i8]* %cs_end_label, i64 0, i64 0
  %call34 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay33, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str15, i64 0, i64 0), i32 %2) #6
  call void (i8*, i8*, i8*, ...)* @dw2_asm_output_delta_uleb128(i8* %arraydecay33, i8* %arraydecay29, i8* getelementptr inbounds ([23 x i8]* @.str16, i64 0, i64 0)) #6
  %16 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  call void @assemble_name(%struct._IO_FILE* %16, i8* %arraydecay29) #6
  %17 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %18 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str12, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %17)
  %19 = getelementptr inbounds [32 x i8]* %reg_start_lab.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %19) #4
  %20 = getelementptr inbounds [32 x i8]* %reg_end_lab.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %20) #4
  %21 = getelementptr inbounds [32 x i8]* %landing_pad_lab.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %21) #4
  %22 = load %union.tree_node** @current_function_func_begin_label, align 8, !tbaa !3
  %id.i = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds i8** %id.i, i64 1
  %24 = load i8** %23, align 8, !tbaa !3
  %25 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh.i = getelementptr inbounds %struct.function* %25, i64 0, i32 0
  %26 = load %struct.eh_status** %eh.i, align 8, !tbaa !3
  %call_site_data_used.i = getelementptr inbounds %struct.eh_status* %26, i64 0, i32 13
  %27 = load i32* %call_site_data_used.i, align 4, !tbaa !0
  %cmp32.i = icmp sgt i32 %27, 0
  br i1 %cmp32.i, label %for.body.i, label %dw2_output_call_site_table.exit

for.body.i:                                       ; preds = %if.end25, %if.end20.for.body_crit_edge.i
  %28 = phi %struct.eh_status* [ %.pre34.i, %if.end20.for.body_crit_edge.i ], [ %26, %if.end25 ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end20.for.body_crit_edge.i ], [ 0, %if.end25 ]
  %call_site_data.i = getelementptr inbounds %struct.eh_status* %28, i64 0, i32 12
  %29 = load %struct.call_site_record** %call_site_data.i, align 8, !tbaa !3
  %30 = load i32* @call_site_base, align 4, !tbaa !0
  %31 = trunc i64 %indvars.iv.i to i32
  %add.i = add nsw i32 %30, %31
  %call.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %19, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str19, i64 0, i64 0), i32 %add.i) #6
  %32 = load i32* @call_site_base, align 4, !tbaa !0
  %add4.i = add nsw i32 %32, %31
  %call5.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %20, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str20, i64 0, i64 0), i32 %add4.i) #6
  %landing_pad.i = getelementptr inbounds %struct.call_site_record* %29, i64 %indvars.iv.i, i32 0
  %33 = load %struct.rtx_def** %landing_pad.i, align 8, !tbaa !3
  %tobool.i = icmp eq %struct.rtx_def* %33, null
  br i1 %tobool.i, label %if.end.i, label %do.body7.i

do.body7.i:                                       ; preds = %for.body.i
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 5
  %rtint.i = bitcast %union.rtunion_def* %arrayidx10.i to i32*
  %34 = load i32* %rtint.i, align 4, !tbaa !0
  %call11.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %21, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str21, i64 0, i64 0), i32 %34) #6
  br label %if.end.i

if.end.i:                                         ; preds = %do.body7.i, %for.body.i
  call void (i8*, i8*, i8*, ...)* @dw2_asm_output_delta_uleb128(i8* %19, i8* %24, i8* getelementptr inbounds ([16 x i8]* @.str22, i64 0, i64 0), i32 %31) #6
  call void (i8*, i8*, i8*, ...)* @dw2_asm_output_delta_uleb128(i8* %20, i8* %19, i8* getelementptr inbounds ([7 x i8]* @.str23, i64 0, i64 0)) #6
  %35 = load %struct.rtx_def** %landing_pad.i, align 8, !tbaa !3
  %tobool17.i = icmp eq %struct.rtx_def* %35, null
  br i1 %tobool17.i, label %if.else.i, label %if.then18.i

if.then18.i:                                      ; preds = %if.end.i
  call void (i8*, i8*, i8*, ...)* @dw2_asm_output_delta_uleb128(i8* %21, i8* %24, i8* getelementptr inbounds ([12 x i8]* @.str24, i64 0, i64 0)) #6
  br label %if.end20.i

if.else.i:                                        ; preds = %if.end.i
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 0, i8* getelementptr inbounds ([12 x i8]* @.str24, i64 0, i64 0)) #6
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.else.i, %if.then18.i
  %action.i = getelementptr inbounds %struct.call_site_record* %29, i64 %indvars.iv.i, i32 1
  %36 = load i32* %action.i, align 4, !tbaa !0
  %conv.i = sext i32 %36 to i64
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv.i, i8* getelementptr inbounds ([7 x i8]* @.str25, i64 0, i64 0)) #6
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv.i = trunc i64 %indvars.iv.next.i to i32
  %exitcond.i = icmp eq i32 %lftr.wideiv.i, %27
  br i1 %exitcond.i, label %dw2_output_call_site_table.exit, label %if.end20.for.body_crit_edge.i

if.end20.for.body_crit_edge.i:                    ; preds = %if.end20.i
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !3
  %eh1.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 0
  %.pre34.i = load %struct.eh_status** %eh1.phi.trans.insert.i, align 8, !tbaa !3
  br label %for.body.i

dw2_output_call_site_table.exit:                  ; preds = %if.end20.i, %if.end25
  %37 = load i32* @call_site_base, align 4, !tbaa !0
  %add21.i = add nsw i32 %37, %27
  store i32 %add21.i, i32* @call_site_base, align 4, !tbaa !0
  call void @llvm.lifetime.end(i64 32, i8* %19) #4
  call void @llvm.lifetime.end(i64 32, i8* %20) #4
  call void @llvm.lifetime.end(i64 32, i8* %21) #4
  %38 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  call void @assemble_name(%struct._IO_FILE* %38, i8* %arraydecay33) #6
  %39 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %40 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str12, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %39)
  %41 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh42 = getelementptr inbounds %struct.function* %41, i64 0, i32 0
  %42 = load %struct.eh_status** %eh42, align 8, !tbaa !3
  %action_record_data = getelementptr inbounds %struct.eh_status* %42, i64 0, i32 11
  %43 = load %struct.varray_head_tag** %action_record_data, align 8, !tbaa !3
  %elements_used43 = getelementptr inbounds %struct.varray_head_tag* %43, i64 0, i32 1
  %44 = load i64* %elements_used43, align 8, !tbaa !4
  %conv44 = trunc i64 %44 to i32
  %cmp45146 = icmp sgt i32 %conv44, 0
  br i1 %cmp45146, label %for.body, label %for.end

for.body:                                         ; preds = %dw2_output_call_site_table.exit, %for.body.for.body_crit_edge
  %45 = phi %struct.varray_head_tag* [ %.pre161, %for.body.for.body_crit_edge ], [ %43, %dw2_output_call_site_table.exit ]
  %indvars.iv150 = phi i64 [ %indvars.iv.next151, %for.body.for.body_crit_edge ], [ 0, %dw2_output_call_site_table.exit ]
  %data = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 4
  %uc = bitcast %union.varray_data_tag* %data to [1 x i8]*
  %arrayidx = getelementptr inbounds [1 x i8]* %uc, i64 0, i64 %indvars.iv150
  %46 = load i8* %arrayidx, align 1, !tbaa !1
  %conv49 = zext i8 %46 to i64
  %47 = trunc i64 %indvars.iv150 to i32
  %tobool50 = icmp ne i32 %47, 0
  %cond51 = select i1 %tobool50, i8* null, i8* getelementptr inbounds ([20 x i8]* @.str17, i64 0, i64 0)
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv49, i8* %cond51) #6
  %indvars.iv.next151 = add i64 %indvars.iv150, 1
  %lftr.wideiv152 = trunc i64 %indvars.iv.next151 to i32
  %exitcond153 = icmp eq i32 %lftr.wideiv152, %conv44
  br i1 %exitcond153, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  %.pre159 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh47.phi.trans.insert = getelementptr inbounds %struct.function* %.pre159, i64 0, i32 0
  %.pre160 = load %struct.eh_status** %eh47.phi.trans.insert, align 8, !tbaa !3
  %action_record_data48.phi.trans.insert = getelementptr inbounds %struct.eh_status* %.pre160, i64 0, i32 11
  %.pre161 = load %struct.varray_head_tag** %action_record_data48.phi.trans.insert, align 8, !tbaa !3
  br label %for.body

for.end:                                          ; preds = %for.body, %dw2_output_call_site_table.exit
  br i1 %11, label %if.then53, label %if.end55

if.then53:                                        ; preds = %for.end
  %mul54 = shl nsw i32 %tt_format_size.0, 3
  call void @assemble_align(i32 %mul54) #6
  br label %if.end55

if.end55:                                         ; preds = %for.end, %if.then53
  %48 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh56 = getelementptr inbounds %struct.function* %48, i64 0, i32 0
  %49 = load %struct.eh_status** %eh56, align 8, !tbaa !3
  %ttype_data57 = getelementptr inbounds %struct.eh_status* %49, i64 0, i32 9
  %50 = load %struct.varray_head_tag** %ttype_data57, align 8, !tbaa !3
  %elements_used58 = getelementptr inbounds %struct.varray_head_tag* %50, i64 0, i32 1
  %51 = load i64* %elements_used58, align 8, !tbaa !4
  %conv59 = trunc i64 %51 to i32
  %cmp60144 = icmp sgt i32 %conv59, 0
  br i1 %cmp60144, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %if.end55
  %cmp74 = icmp eq i32 %tt_format.0, 0
  %mul79 = shl nsw i32 %tt_format_size.0, 3
  %sext = shl i64 %51, 32
  %52 = ashr exact i64 %sext, 32
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.body.lr.ph
  %53 = phi %struct.varray_head_tag* [ %50, %while.body.lr.ph ], [ %.pre158, %while.cond.backedge.while.body_crit_edge ]
  %indvars.iv148 = phi i64 [ %52, %while.body.lr.ph ], [ %indvars.iv.next149, %while.cond.backedge.while.body_crit_edge ]
  %indvars.iv.next149 = add i64 %indvars.iv148, -1
  %data65 = getelementptr inbounds %struct.varray_head_tag* %53, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data65 to [1 x %union.tree_node*]*
  %arrayidx66 = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %indvars.iv.next149
  %54 = load %union.tree_node** %arrayidx66, align 8, !tbaa !3
  %cmp67 = icmp eq %union.tree_node* %54, null
  br i1 %cmp67, label %if.end72, label %if.else70

if.else70:                                        ; preds = %while.body
  %55 = load %struct.htab** @type_to_runtime_map, align 8, !tbaa !3
  %56 = bitcast %union.tree_node* %54 to i8*
  %57 = ptrtoint %union.tree_node* %54 to i64
  %.tr.i = trunc i64 %57 to i32
  %conv.i139 = and i32 %.tr.i, 262143
  %call.i140 = call i8** @htab_find_slot_with_hash(%struct.htab* %55, i8* %56, i32 %conv.i139, i32 0) #6
  %58 = load i8** %call.i140, align 8
  %value.i = getelementptr inbounds i8* %58, i64 32
  %59 = bitcast i8* %value.i to %union.tree_node**
  br label %if.end72

if.end72:                                         ; preds = %while.body, %if.else70
  %type.0.in = phi %union.tree_node** [ %59, %if.else70 ], [ getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), %while.body ]
  %type.0 = load %union.tree_node** %type.0.in, align 8
  %call73 = call %struct.rtx_def* @expand_expr(%union.tree_node* %type.0, %struct.rtx_def* null, i32 0, i32 3) #6
  br i1 %cmp74, label %if.then78, label %if.else81

if.then78:                                        ; preds = %if.end72
  %call80 = call zeroext i1 @assemble_integer(%struct.rtx_def* %call73, i32 %tt_format_size.0, i32 %mul79, i32 1) #6
  br label %while.cond.backedge

if.else81:                                        ; preds = %if.end72
  call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_encoded_addr_rtx(i32 %tt_format.0, %struct.rtx_def* %call73, i8* null) #6
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else81, %if.then78
  %60 = trunc i64 %indvars.iv.next149 to i32
  %cmp60 = icmp sgt i32 %60, 0
  br i1 %cmp60, label %while.cond.backedge.while.body_crit_edge, label %while.end

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  %.pre156 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh63.phi.trans.insert = getelementptr inbounds %struct.function* %.pre156, i64 0, i32 0
  %.pre157 = load %struct.eh_status** %eh63.phi.trans.insert, align 8, !tbaa !3
  %ttype_data64.phi.trans.insert = getelementptr inbounds %struct.eh_status* %.pre157, i64 0, i32 9
  %.pre158 = load %struct.varray_head_tag** %ttype_data64.phi.trans.insert, align 8, !tbaa !3
  br label %while.body

while.end:                                        ; preds = %while.cond.backedge, %if.end55
  br i1 %11, label %if.then84, label %if.end87

if.then84:                                        ; preds = %while.end
  %61 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %arraydecay85 = getelementptr inbounds [32 x i8]* %ttype_label, i64 0, i64 0
  call void @assemble_name(%struct._IO_FILE* %61, i8* %arraydecay85) #6
  %62 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !3
  %63 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str12, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %62)
  br label %if.end87

if.end87:                                         ; preds = %while.end, %if.then84
  %64 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh88 = getelementptr inbounds %struct.function* %64, i64 0, i32 0
  %65 = load %struct.eh_status** %eh88, align 8, !tbaa !3
  %ehspec_data89 = getelementptr inbounds %struct.eh_status* %65, i64 0, i32 10
  %66 = load %struct.varray_head_tag** %ehspec_data89, align 8, !tbaa !3
  %elements_used90 = getelementptr inbounds %struct.varray_head_tag* %66, i64 0, i32 1
  %67 = load i64* %elements_used90, align 8, !tbaa !4
  %conv91 = trunc i64 %67 to i32
  %cmp93141 = icmp sgt i32 %conv91, 0
  br i1 %cmp93141, label %for.body95, label %for.end107

for.body95:                                       ; preds = %if.end87, %for.body95.for.body95_crit_edge
  %68 = phi %struct.varray_head_tag* [ %.pre155, %for.body95.for.body95_crit_edge ], [ %66, %if.end87 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body95.for.body95_crit_edge ], [ 0, %if.end87 ]
  %data99 = getelementptr inbounds %struct.varray_head_tag* %68, i64 0, i32 4
  %uc100 = bitcast %union.varray_data_tag* %data99 to [1 x i8]*
  %arrayidx101 = getelementptr inbounds [1 x i8]* %uc100, i64 0, i64 %indvars.iv
  %69 = load i8* %arrayidx101, align 1, !tbaa !1
  %conv102 = zext i8 %69 to i64
  %70 = trunc i64 %indvars.iv to i32
  %tobool103 = icmp ne i32 %70, 0
  %cond104 = select i1 %tobool103, i8* null, i8* getelementptr inbounds ([30 x i8]* @.str18, i64 0, i64 0)
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv102, i8* %cond104) #6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %conv91
  br i1 %exitcond, label %for.end107, label %for.body95.for.body95_crit_edge

for.body95.for.body95_crit_edge:                  ; preds = %for.body95
  %.pre = load %struct.function** @cfun, align 8, !tbaa !3
  %eh97.phi.trans.insert = getelementptr inbounds %struct.function* %.pre, i64 0, i32 0
  %.pre154 = load %struct.eh_status** %eh97.phi.trans.insert, align 8, !tbaa !3
  %ehspec_data98.phi.trans.insert = getelementptr inbounds %struct.eh_status* %.pre154, i64 0, i32 10
  %.pre155 = load %struct.varray_head_tag** %ehspec_data98.phi.trans.insert, align 8, !tbaa !3
  br label %for.body95

for.end107:                                       ; preds = %for.body95, %if.end87
  %71 = load %union.tree_node** @current_function_decl, align 8, !tbaa !3
  call void @function_section(%union.tree_node* %71) #6
  br label %return

return:                                           ; preds = %entry, %for.end107
  ret void
}
