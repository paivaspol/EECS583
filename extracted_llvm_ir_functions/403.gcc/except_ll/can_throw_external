define zeroext i1 @can_throw_external(%struct.rtx_def* %insn) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom117 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom117
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 32
  br i1 %cmp4, label %land.lhs.true, label %if.end18

land.lhs.true:                                    ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load7 = load i32* %3, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 24
  br i1 %cmp9, label %if.then11, label %if.end18

if.then11:                                        ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtvec_def**
  %4 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  %arrayidx17 = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 1, i64 0
  %5 = load %struct.rtx_def** %arrayidx17, align 8, !tbaa !3
  %.phi.trans.insert = bitcast %struct.rtx_def* %5 to i32*
  %bf.load19.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end18

if.end18:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  %bf.load19 = phi i32 [ %bf.load19.pre, %if.then11 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %if.end ]
  %insn.addr.0 = phi %struct.rtx_def* [ %5, %if.then11 ], [ %insn, %land.lhs.true ], [ %insn, %if.end ]
  %6 = bitcast %struct.rtx_def* %insn.addr.0 to i32*
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 34
  br i1 %cmp21, label %land.lhs.true23, label %if.end50

land.lhs.true23:                                  ; preds = %if.end18
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i64 3
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx26, align 8, !tbaa !3
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load27 = load i32* %8, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 141
  br i1 %cmp29, label %for.body, label %if.end50

for.body:                                         ; preds = %land.lhs.true23, %for.inc48.for.body_crit_edge
  %9 = phi %struct.rtx_def* [ %.pre, %for.inc48.for.body_crit_edge ], [ %7, %land.lhs.true23 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc48.for.body_crit_edge ], [ 0, %land.lhs.true23 ]
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 %indvars.iv
  %sub.0.in118 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %sub.0119 = load %struct.rtx_def** %sub.0.in118, align 8
  %tobool120 = icmp eq %struct.rtx_def* %sub.0119, null
  br i1 %tobool120, label %for.inc48, label %for.body42

for.cond41:                                       ; preds = %for.body42
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %sub.0121, i64 0, i32 1, i64 2
  %sub.0.in = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %sub.0 = load %struct.rtx_def** %sub.0.in, align 8
  %tobool = icmp eq %struct.rtx_def* %sub.0, null
  br i1 %tobool, label %for.inc48, label %for.body42

for.body42:                                       ; preds = %for.body, %for.cond41
  %sub.0121 = phi %struct.rtx_def* [ %sub.0, %for.cond41 ], [ %sub.0119, %for.body ]
  %call = tail call zeroext i1 @can_throw_external(%struct.rtx_def* %sub.0121) #7
  br i1 %call, label %return, label %for.cond41

for.inc48:                                        ; preds = %for.cond41, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp32 = icmp slt i32 %10, 3
  br i1 %cmp32, label %for.inc48.for.body_crit_edge, label %return

for.inc48.for.body_crit_edge:                     ; preds = %for.inc48
  %.pre = load %struct.rtx_def** %rtx26, align 8, !tbaa !3
  br label %for.body

if.end50:                                         ; preds = %land.lhs.true23, %if.end18
  %call51 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.addr.0, i32 23, %struct.rtx_def* null) #6
  %tobool52 = icmp eq %struct.rtx_def* %call51, null
  br i1 %tobool52, label %if.then53, label %if.end64

if.then53:                                        ; preds = %if.end50
  %bf.load54 = load i32* %6, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 34
  br i1 %cmp56, label %return, label %lor.rhs

lor.rhs:                                          ; preds = %if.then53
  %11 = load i32* @flag_non_call_exceptions, align 4, !tbaa !0
  %tobool58 = icmp eq i32 %11, 0
  br i1 %tobool58, label %return, label %land.rhs

land.rhs:                                         ; preds = %lor.rhs
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i64 3
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx61, align 8, !tbaa !3
  %call62 = tail call i32 @may_trap_p(%struct.rtx_def* %12) #6
  %tobool63 = icmp ne i32 %call62, 0
  br label %return

if.end64:                                         ; preds = %if.end50
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %call51, i64 0, i32 1, i64 0
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx67, align 8, !tbaa !3
  %rtwint = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0, i32 0
  %14 = load i64* %rtwint, align 8, !tbaa !4
  %cmp70 = icmp slt i64 %14, 1
  br i1 %cmp70, label %return, label %if.end73

if.end73:                                         ; preds = %if.end64
  %15 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh = getelementptr inbounds %struct.function* %15, i64 0, i32 0
  %16 = load %struct.eh_status** %eh, align 8, !tbaa !3
  %region_array = getelementptr inbounds %struct.eh_status* %16, i64 0, i32 1
  %17 = load %struct.eh_region*** %region_array, align 8, !tbaa !3
  %arrayidx80 = getelementptr inbounds %struct.eh_region** %17, i64 %14
  %18 = load %struct.eh_region** %arrayidx80, align 8, !tbaa !3
  %type = getelementptr inbounds %struct.eh_region* %18, i64 0, i32 5
  %19 = load i32* %type, align 4, !tbaa !5
  %cmp81 = icmp eq i32 %19, 6
  br i1 %cmp81, label %if.then83, label %for.cond86.preheader

if.then83:                                        ; preds = %if.end73
  %u = getelementptr inbounds %struct.eh_region* %18, i64 0, i32 6
  %type84 = bitcast %union.anon* %u to %union.tree_node**
  %20 = load %union.tree_node** %type84, align 8, !tbaa !3
  %outer = getelementptr inbounds %struct.eh_region* %18, i64 0, i32 0
  %21 = load %struct.eh_region** %outer, align 8, !tbaa !3
  br label %for.cond86.preheader

for.cond86.preheader:                             ; preds = %if.then83, %if.end73
  %region.0.ph = phi %struct.eh_region* [ %18, %if.end73 ], [ %21, %if.then83 ]
  %type_thrown.0.ph = phi %union.tree_node* [ null, %if.end73 ], [ %20, %if.then83 ]
  %tobool87125 = icmp eq %struct.eh_region* %region.0.ph, null
  br i1 %tobool87125, label %return, label %for.body88

for.body88:                                       ; preds = %for.cond86.preheader, %for.inc94
  %region.0126 = phi %struct.eh_region* [ %22, %for.inc94 ], [ %region.0.ph, %for.cond86.preheader ]
  %call89 = tail call fastcc i32 @reachable_next_level(%struct.eh_region* %region.0126, %union.tree_node* %type_thrown.0.ph, %struct.reachable_info* null) #7
  %cmp90 = icmp ugt i32 %call89, 1
  br i1 %cmp90, label %return, label %for.inc94

for.inc94:                                        ; preds = %for.body88
  %outer95 = getelementptr inbounds %struct.eh_region* %region.0126, i64 0, i32 0
  %22 = load %struct.eh_region** %outer95, align 8, !tbaa !3
  %tobool87 = icmp eq %struct.eh_region* %22, null
  br i1 %tobool87, label %return, label %for.body88

return:                                           ; preds = %for.cond86.preheader, %for.body88, %for.inc94, %for.inc48, %for.body42, %if.end64, %if.then53, %land.rhs, %lor.rhs, %entry
  %retval.0 = phi i1 [ false, %entry ], [ true, %if.then53 ], [ false, %lor.rhs ], [ %tobool63, %land.rhs ], [ false, %if.end64 ], [ true, %for.body42 ], [ false, %for.inc48 ], [ true, %for.cond86.preheader ], [ false, %for.body88 ], [ true, %for.inc94 ]
  ret i1 %retval.0
}
