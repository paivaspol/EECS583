define internal fastcc void @push_sleb128(%struct.varray_head_tag** nocapture %data_area, i32 %value) #0 {
entry:
  br label %do.body

do.body:                                          ; preds = %if.end19, %entry
  %value.addr.0 = phi i32 [ %value, %entry ], [ %shr, %if.end19 ]
  %value.addr.0.tr = trunc i32 %value.addr.0 to i8
  %conv = and i8 %value.addr.0.tr, 127
  %shr = ashr i32 %value.addr.0, 7
  switch i32 %shr, label %lor.end [
    i32 0, label %land.lhs.true
    i32 -1, label %land.rhs
  ]

land.lhs.true:                                    ; preds = %do.body
  %and3 = and i8 %value.addr.0.tr, 64
  %not.cmp4 = icmp ne i8 %and3, 0
  br label %lor.end

land.rhs:                                         ; preds = %do.body
  %and9 = and i32 %value.addr.0, 64
  %phitmp = icmp eq i32 %and9, 0
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %do.body, %land.rhs
  %0 = phi i1 [ %phitmp, %land.rhs ], [ true, %do.body ], [ %not.cmp4, %land.lhs.true ]
  %or = or i8 %value.addr.0.tr, -128
  %or.conv = select i1 %0, i8 %or, i8 %conv
  %1 = load %struct.varray_head_tag** %data_area, align 8, !tbaa !3
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 1
  %2 = load i64* %elements_used, align 8, !tbaa !4
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 0
  %3 = load i64* %num_elements, align 8, !tbaa !4
  %cmp15 = icmp ult i64 %2, %3
  br i1 %cmp15, label %if.end19, label %if.then17

if.then17:                                        ; preds = %lor.end
  %mul = shl i64 %3, 1
  %call = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %1, i64 %mul) #6
  store %struct.varray_head_tag* %call, %struct.varray_head_tag** %data_area, align 8, !tbaa !3
  %elements_used20.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call, i64 0, i32 1
  %.pre = load i64* %elements_used20.phi.trans.insert, align 8, !tbaa !4
  br label %if.end19

if.end19:                                         ; preds = %lor.end, %if.then17
  %4 = phi i64 [ %2, %lor.end ], [ %.pre, %if.then17 ]
  %5 = phi %struct.varray_head_tag* [ %1, %lor.end ], [ %call, %if.then17 ]
  %elements_used20 = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 1
  %inc = add i64 %4, 1
  store i64 %inc, i64* %elements_used20, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4
  %uc = bitcast %union.varray_data_tag* %data to [1 x i8]*
  %arrayidx = getelementptr inbounds [1 x i8]* %uc, i64 0, i64 %4
  store i8 %or.conv, i8* %arrayidx, align 1, !tbaa !1
  br i1 %0, label %do.body, label %do.end22

do.end22:                                         ; preds = %if.end19
  ret void
}
