define void @expand_eh_region_end_allowed(%union.tree_node* %allowed, %union.tree_node* %failure) #0 {
entry:
  %0 = load i32* @flag_exceptions, align 4, !tbaa !0
  %tobool.i = icmp eq i32 %0, 0
  br i1 %tobool.i, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh.i = getelementptr inbounds %struct.function* %1, i64 0, i32 0
  %2 = load %struct.eh_status** %eh.i, align 8, !tbaa !3
  %cur_region1.i = getelementptr inbounds %struct.eh_status* %2, i64 0, i32 2
  %3 = load %struct.eh_region** %cur_region1.i, align 8, !tbaa !3
  %call.i = tail call %struct.rtx_def* @emit_note(i8* null, i32 -85) #6
  %region_number.i = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 3
  %4 = load i32* %region_number.i, align 4, !tbaa !0
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %call.i, i64 0, i32 1, i64 3
  %rtint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  store i32 %4, i32* %rtint.i, align 4, !tbaa !0
  %outer.i = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 0
  %5 = load %struct.eh_region** %outer.i, align 8, !tbaa !3
  %6 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh2.i = getelementptr inbounds %struct.function* %6, i64 0, i32 0
  %7 = load %struct.eh_status** %eh2.i, align 8, !tbaa !3
  %cur_region3.i = getelementptr inbounds %struct.eh_status* %7, i64 0, i32 2
  store %struct.eh_region* %5, %struct.eh_region** %cur_region3.i, align 8, !tbaa !3
  %type = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 5
  store i32 4, i32* %type, align 4, !tbaa !5
  %8 = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 6, i32 0, i32 0
  %allowed.c = bitcast %union.tree_node* %allowed to %struct.eh_region*
  store %struct.eh_region* %allowed.c, %struct.eh_region** %8, align 8, !tbaa !3
  %call3 = tail call %struct.rtx_def* @gen_label_rtx() #6
  %label = getelementptr inbounds %struct.eh_region* %3, i64 0, i32 7
  store %struct.rtx_def* %call3, %struct.rtx_def** %label, align 8, !tbaa !3
  %tobool420 = icmp eq %union.tree_node* %allowed, null
  br i1 %tobool420, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.body
  %allowed.addr.021 = phi %union.tree_node* [ %11, %for.body ], [ %allowed, %if.end ]
  %value = getelementptr inbounds %union.tree_node* %allowed.addr.021, i64 0, i32 0, i32 2
  %9 = bitcast i32* %value to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !3
  tail call fastcc void @add_type_for_runtime(%union.tree_node* %10) #7
  %chain = getelementptr inbounds %union.tree_node* %allowed.addr.021, i64 0, i32 0, i32 0, i32 0
  %11 = load %union.tree_node** %chain, align 8, !tbaa !3
  %tobool4 = icmp eq %union.tree_node* %11, null
  br i1 %tobool4, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %call5 = tail call %struct.rtx_def* @gen_label_rtx() #6
  tail call void @emit_jump(%struct.rtx_def* %call5) #6
  %12 = load %struct.rtx_def** %label, align 8, !tbaa !3
  %call7 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %12) #6
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %call8 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %failure, %struct.rtx_def* %13, i32 0, i32 0) #6
  tail call void @do_pending_stack_adjust() #6
  %call9 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call5) #6
  br label %return

return:                                           ; preds = %entry, %for.end
  ret void
}
