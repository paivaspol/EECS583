define internal fastcc i32 @add_call_site(%struct.rtx_def* %landing_pad, i32 %action) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %landing_pad}, i64 0, metadata !1785), !dbg !3467
  tail call void @llvm.dbg.value(metadata !{i32 %action}, i64 0, metadata !1786), !dbg !3468
  %0 = load %struct.function** @cfun, align 8, !dbg !3469, !tbaa !2232
  %eh = getelementptr inbounds %struct.function* %0, i64 0, i32 0, !dbg !3469
  %1 = load %struct.eh_status** %eh, align 8, !dbg !3469, !tbaa !2232
  %call_site_data = getelementptr inbounds %struct.eh_status* %1, i64 0, i32 12, !dbg !3469
  %2 = load %struct.call_site_record** %call_site_data, align 8, !dbg !3469, !tbaa !2232
  tail call void @llvm.dbg.value(metadata !{%struct.call_site_record* %2}, i64 0, metadata !1787), !dbg !3469
  %call_site_data_used = getelementptr inbounds %struct.eh_status* %1, i64 0, i32 13, !dbg !3470
  %3 = load i32* %call_site_data_used, align 4, !dbg !3470, !tbaa !2220
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !1788), !dbg !3470
  %call_site_data_size = getelementptr inbounds %struct.eh_status* %1, i64 0, i32 14, !dbg !3471
  %4 = load i32* %call_site_data_size, align 4, !dbg !3471, !tbaa !2220
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !1789), !dbg !3471
  %cmp = icmp slt i32 %3, %4, !dbg !3472
  br i1 %cmp, label %if.end, label %if.then, !dbg !3472

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %4, 0, !dbg !3473
  %mul = shl nsw i32 %4, 1, !dbg !3473
  %.mul = select i1 %tobool, i32 64, i32 %mul, !dbg !3473
  tail call void @llvm.dbg.value(metadata !{i32 %.mul}, i64 0, metadata !1789), !dbg !3473
  %5 = bitcast %struct.call_site_record* %2 to i8*, !dbg !3475
  %conv = sext i32 %.mul to i64, !dbg !3475
  %mul3 = shl nsw i64 %conv, 4, !dbg !3475
  %call = tail call i8* @xrealloc(i8* %5, i64 %mul3) #7, !dbg !3475
  %6 = bitcast i8* %call to %struct.call_site_record*, !dbg !3475
  tail call void @llvm.dbg.value(metadata !{%struct.call_site_record* %6}, i64 0, metadata !1787), !dbg !3475
  %7 = load %struct.function** @cfun, align 8, !dbg !3476, !tbaa !2232
  %eh4 = getelementptr inbounds %struct.function* %7, i64 0, i32 0, !dbg !3476
  %8 = load %struct.eh_status** %eh4, align 8, !dbg !3476, !tbaa !2232
  %call_site_data5 = getelementptr inbounds %struct.eh_status* %8, i64 0, i32 12, !dbg !3476
  store %struct.call_site_record* %6, %struct.call_site_record** %call_site_data5, align 8, !dbg !3476, !tbaa !2232
  %9 = load %struct.function** @cfun, align 8, !dbg !3477, !tbaa !2232
  %eh6 = getelementptr inbounds %struct.function* %9, i64 0, i32 0, !dbg !3477
  %10 = load %struct.eh_status** %eh6, align 8, !dbg !3477, !tbaa !2232
  %call_site_data_size7 = getelementptr inbounds %struct.eh_status* %10, i64 0, i32 14, !dbg !3477
  store i32 %.mul, i32* %call_site_data_size7, align 4, !dbg !3477, !tbaa !2220
  br label %if.end, !dbg !3478

if.end:                                           ; preds = %entry, %if.then
  %data.0 = phi %struct.call_site_record* [ %6, %if.then ], [ %2, %entry ]
  %idxprom = sext i32 %3 to i64, !dbg !3479
  %landing_pad8 = getelementptr inbounds %struct.call_site_record* %data.0, i64 %idxprom, i32 0, !dbg !3479
  store %struct.rtx_def* %landing_pad, %struct.rtx_def** %landing_pad8, align 8, !dbg !3479, !tbaa !2232
  %action11 = getelementptr inbounds %struct.call_site_record* %data.0, i64 %idxprom, i32 1, !dbg !3480
  store i32 %action, i32* %action11, align 4, !dbg !3480, !tbaa !2220
  %add = add nsw i32 %3, 1, !dbg !3481
  %11 = load %struct.function** @cfun, align 8, !dbg !3481, !tbaa !2232
  %eh12 = getelementptr inbounds %struct.function* %11, i64 0, i32 0, !dbg !3481
  %12 = load %struct.eh_status** %eh12, align 8, !dbg !3481, !tbaa !2232
  %call_site_data_used13 = getelementptr inbounds %struct.eh_status* %12, i64 0, i32 13, !dbg !3481
  store i32 %add, i32* %call_site_data_used13, align 4, !dbg !3481, !tbaa !2220
  %13 = load i32* @call_site_base, align 4, !dbg !3482, !tbaa !2220
  %add14 = add nsw i32 %13, %3, !dbg !3482
  ret i32 %add14, !dbg !3482
}
