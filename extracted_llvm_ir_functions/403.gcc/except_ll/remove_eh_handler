define internal fastcc void @remove_eh_handler(%struct.eh_region* %region) #0 {
entry:
  %tmp.i = alloca %struct.ehl_map_entry, align 8
  %outer1 = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 0
  %0 = load %struct.eh_region** %outer1, align 8, !tbaa !3
  %region_number = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 3
  %1 = load i32* %region_number, align 4, !tbaa !0
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh = getelementptr inbounds %struct.function* %2, i64 0, i32 0
  %3 = load %struct.eh_status** %eh, align 8, !tbaa !3
  %region_array = getelementptr inbounds %struct.eh_status* %3, i64 0, i32 1
  %4 = load %struct.eh_region*** %region_array, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.eh_region** %4, i64 %idxprom
  store %struct.eh_region* %0, %struct.eh_region** %arrayidx, align 8, !tbaa !3
  %aka = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 4
  %5 = load %struct.bitmap_head_def** %aka, align 8, !tbaa !3
  %tobool = icmp eq %struct.bitmap_head_def* %5, null
  br i1 %tobool, label %if.end40, label %do.body

do.body:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.bitmap_head_def* %5, i64 0, i32 0
  %ptr_.1205 = load %struct.bitmap_element_def** %first, align 8
  %cmp8206 = icmp eq %struct.bitmap_element_def* %ptr_.1205, null
  br i1 %cmp8206, label %if.end40, label %for.cond9.preheader

for.cond9.preheader:                              ; preds = %do.body, %for.end36
  %ptr_.1207 = phi %struct.bitmap_element_def* [ %ptr_.1, %for.end36 ], [ %ptr_.1205, %do.body ]
  %indx22 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1207, i64 0, i32 2
  br label %for.body11

for.body11:                                       ; preds = %if.end33, %for.cond9.preheader
  %indvars.iv211 = phi i64 [ 0, %for.cond9.preheader ], [ %indvars.iv.next212, %if.end33 ]
  %arrayidx13 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1207, i64 0, i32 3, i64 %indvars.iv211
  %6 = load i64* %arrayidx13, align 8, !tbaa !4
  %cmp14 = icmp eq i64 %6, 0
  br i1 %cmp14, label %if.end33, label %for.cond16.preheader

for.cond16.preheader:                             ; preds = %for.body11
  %7 = shl i64 %indvars.iv211, 6
  br label %for.body18

for.body18:                                       ; preds = %for.cond16.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond16.preheader ], [ %indvars.iv.next, %for.inc ]
  %word_.0203 = phi i64 [ %6, %for.cond16.preheader ], [ %word_.1, %for.inc ]
  %shl = shl i64 1, %indvars.iv
  %and = and i64 %shl, %word_.0203
  %cmp19 = icmp eq i64 %and, 0
  br i1 %cmp19, label %for.inc, label %if.then20

if.then20:                                        ; preds = %for.body18
  %neg = xor i64 %shl, -1
  %and21 = and i64 %word_.0203, %neg
  %8 = load i32* %indx22, align 4, !tbaa !0
  %mul = shl i32 %8, 7
  %9 = add i64 %indvars.iv, %7
  %10 = trunc i64 %9 to i32
  %add24 = add i32 %10, %mul
  %idxprom25 = sext i32 %add24 to i64
  %11 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh26 = getelementptr inbounds %struct.function* %11, i64 0, i32 0
  %12 = load %struct.eh_status** %eh26, align 8, !tbaa !3
  %region_array27 = getelementptr inbounds %struct.eh_status* %12, i64 0, i32 1
  %13 = load %struct.eh_region*** %region_array27, align 8, !tbaa !3
  %arrayidx28 = getelementptr inbounds %struct.eh_region** %13, i64 %idxprom25
  store %struct.eh_region* %0, %struct.eh_region** %arrayidx28, align 8, !tbaa !3
  %cmp29 = icmp eq i64 %and21, 0
  br i1 %cmp29, label %if.end33, label %for.inc

for.inc:                                          ; preds = %for.body18, %if.then20
  %word_.1 = phi i64 [ %and21, %if.then20 ], [ %word_.0203, %for.body18 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp17 = icmp ult i32 %14, 64
  br i1 %cmp17, label %for.body18, label %if.end33

if.end33:                                         ; preds = %for.inc, %if.then20, %for.body11
  %indvars.iv.next212 = add i64 %indvars.iv211, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next212 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 2
  br i1 %exitcond, label %for.end36, label %for.body11

for.end36:                                        ; preds = %if.end33
  %next38 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1207, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next38, align 8
  %cmp8 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp8, label %if.end40, label %for.cond9.preheader

if.end40:                                         ; preds = %do.body, %for.end36, %entry
  %tobool41 = icmp ne %struct.eh_region* %0, null
  br i1 %tobool41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %aka43 = getelementptr inbounds %struct.eh_region* %0, i64 0, i32 4
  %15 = load %struct.bitmap_head_def** %aka43, align 8, !tbaa !3
  %tobool44 = icmp eq %struct.bitmap_head_def* %15, null
  br i1 %tobool44, label %if.then45, label %if.end48

if.then45:                                        ; preds = %if.then42
  %call = call noalias i8* @xmalloc(i64 24) #6
  %16 = bitcast i8* %call to %struct.bitmap_head_def*
  %call46 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %16) #6
  store %struct.bitmap_head_def* %call46, %struct.bitmap_head_def** %aka43, align 8, !tbaa !3
  br label %if.end48

if.end48:                                         ; preds = %if.then42, %if.then45
  %17 = phi %struct.bitmap_head_def* [ %call46, %if.then45 ], [ %15, %if.then42 ]
  %18 = load %struct.bitmap_head_def** %aka, align 8, !tbaa !3
  %tobool50 = icmp eq %struct.bitmap_head_def* %18, null
  br i1 %tobool50, label %if.end56, label %if.then51

if.then51:                                        ; preds = %if.end48
  %call55 = call i32 @bitmap_operation(%struct.bitmap_head_def* %17, %struct.bitmap_head_def* %17, %struct.bitmap_head_def* %18, i32 2) #6
  %.pre = load %struct.bitmap_head_def** %aka43, align 8, !tbaa !3
  br label %if.end56

if.end56:                                         ; preds = %if.end48, %if.then51
  %19 = phi %struct.bitmap_head_def* [ %.pre, %if.then51 ], [ %17, %if.end48 ]
  %20 = load i32* %region_number, align 4, !tbaa !0
  call void @bitmap_set_bit(%struct.bitmap_head_def* %19, i32 %20) #6
  br label %if.end59

if.end59:                                         ; preds = %if.end56, %if.end40
  %21 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh60 = getelementptr inbounds %struct.function* %21, i64 0, i32 0
  %22 = load %struct.eh_status** %eh60, align 8, !tbaa !3
  %built_landing_pads = getelementptr inbounds %struct.eh_status* %22, i64 0, i32 7
  %23 = load i32* %built_landing_pads, align 4, !tbaa !0
  %tobool61 = icmp eq i32 %23, 0
  %landing_pad = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 8
  %label = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 7
  %lab.0.in = select i1 %tobool61, %struct.rtx_def** %label, %struct.rtx_def** %landing_pad
  %lab.0 = load %struct.rtx_def** %lab.0.in, align 8
  %tobool64 = icmp eq %struct.rtx_def* %lab.0, null
  br i1 %tobool64, label %if.end66, label %if.then65

if.then65:                                        ; preds = %if.end59
  %24 = bitcast %struct.ehl_map_entry* %tmp.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %24) #4
  %25 = load %struct.htab** @exception_handler_label_map, align 8, !tbaa !3
  %cmp.i = icmp eq %struct.htab* %25, null
  br i1 %cmp.i, label %if.end66, label %if.end.i

if.end.i:                                         ; preds = %if.then65
  %label1.i = getelementptr inbounds %struct.ehl_map_entry* %tmp.i, i64 0, i32 0
  store %struct.rtx_def* %lab.0, %struct.rtx_def** %label1.i, align 8, !tbaa !3
  %call.i = call i8** @htab_find_slot(%struct.htab* %25, i8* %24, i32 0) #6
  %tobool.i = icmp eq i8** %call.i, null
  br i1 %tobool.i, label %if.then2.i, label %if.end3.i

if.then2.i:                                       ; preds = %if.end.i
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str26, i64 0, i64 0), i32 2625, i8* getelementptr inbounds ([31 x i8]* @__FUNCTION__.remove_exception_handler_label, i64 0, i64 0)) #8
  unreachable

if.end3.i:                                        ; preds = %if.end.i
  %26 = load %struct.htab** @exception_handler_label_map, align 8, !tbaa !3
  call void @htab_clear_slot(%struct.htab* %26, i8** %call.i) #6
  br label %if.end66

if.end66:                                         ; preds = %if.end3.i, %if.then65, %if.end59
  br i1 %tobool41, label %if.then68, label %if.else70

if.then68:                                        ; preds = %if.end66
  %inner69 = getelementptr inbounds %struct.eh_region* %0, i64 0, i32 1
  br label %if.end72

if.else70:                                        ; preds = %if.end66
  %27 = load %struct.function** @cfun, align 8, !tbaa !3
  %eh71 = getelementptr inbounds %struct.function* %27, i64 0, i32 0
  %28 = load %struct.eh_status** %eh71, align 8, !tbaa !3
  %region_tree = getelementptr inbounds %struct.eh_status* %28, i64 0, i32 0
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %if.then68
  %pp_start.0 = phi %struct.eh_region** [ %inner69, %if.then68 ], [ %region_tree, %if.else70 ]
  br label %for.cond73

for.cond73:                                       ; preds = %for.cond73, %if.end72
  %p.0.in = phi %struct.eh_region** [ %pp_start.0, %if.end72 ], [ %next_peer, %for.cond73 ]
  %p.0 = load %struct.eh_region** %p.0.in, align 8
  %cmp74 = icmp eq %struct.eh_region* %p.0, %region
  %next_peer = getelementptr inbounds %struct.eh_region* %p.0, i64 0, i32 2
  br i1 %cmp74, label %for.end77, label %for.cond73

for.end77:                                        ; preds = %for.cond73
  %next_peer78 = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 2
  %29 = load %struct.eh_region** %next_peer78, align 8, !tbaa !3
  store %struct.eh_region* %29, %struct.eh_region** %p.0.in, align 8, !tbaa !3
  %inner79 = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 1
  %30 = load %struct.eh_region** %inner79, align 8, !tbaa !3
  %tobool80 = icmp eq %struct.eh_region* %30, null
  br i1 %tobool80, label %if.end92, label %for.cond82.preheader

for.cond82.preheader:                             ; preds = %for.end77
  %next_peer83198 = getelementptr inbounds %struct.eh_region* %30, i64 0, i32 2
  %31 = load %struct.eh_region** %next_peer83198, align 8, !tbaa !3
  %tobool84199 = icmp eq %struct.eh_region* %31, null
  %outer86200 = getelementptr inbounds %struct.eh_region* %30, i64 0, i32 0
  store %struct.eh_region* %0, %struct.eh_region** %outer86200, align 8, !tbaa !3
  br i1 %tobool84199, label %for.end89, label %for.inc87

for.inc87:                                        ; preds = %for.cond82.preheader, %for.inc87
  %32 = phi %struct.eh_region* [ %33, %for.inc87 ], [ %31, %for.cond82.preheader ]
  %next_peer83 = getelementptr inbounds %struct.eh_region* %32, i64 0, i32 2
  %33 = load %struct.eh_region** %next_peer83, align 8, !tbaa !3
  %tobool84 = icmp eq %struct.eh_region* %33, null
  %outer86 = getelementptr inbounds %struct.eh_region* %32, i64 0, i32 0
  store %struct.eh_region* %0, %struct.eh_region** %outer86, align 8, !tbaa !3
  br i1 %tobool84, label %for.end89, label %for.inc87

for.end89:                                        ; preds = %for.inc87, %for.cond82.preheader
  %next_peer83.lcssa = phi %struct.eh_region** [ %next_peer83198, %for.cond82.preheader ], [ %next_peer83, %for.inc87 ]
  %34 = load %struct.eh_region** %pp_start.0, align 8, !tbaa !3
  store %struct.eh_region* %34, %struct.eh_region** %next_peer83.lcssa, align 8, !tbaa !3
  store %struct.eh_region* %30, %struct.eh_region** %pp_start.0, align 8, !tbaa !3
  br label %if.end92

if.end92:                                         ; preds = %for.end77, %for.end89
  %type = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 5
  %35 = load i32* %type, align 4, !tbaa !5
  %cmp93 = icmp eq i32 %35, 3
  br i1 %cmp93, label %for.cond97, label %if.end132

for.cond97:                                       ; preds = %if.end92, %for.inc101
  %try.0.in = phi %struct.eh_region** [ %next_peer102, %for.inc101 ], [ %next_peer78, %if.end92 ]
  %try.0 = load %struct.eh_region** %try.0.in, align 8
  %type98 = getelementptr inbounds %struct.eh_region* %try.0, i64 0, i32 5
  %36 = load i32* %type98, align 4, !tbaa !5
  switch i32 %36, label %if.then106 [
    i32 3, label %for.inc101
    i32 2, label %if.end107
  ]

for.inc101:                                       ; preds = %for.cond97
  %next_peer102 = getelementptr inbounds %struct.eh_region* %try.0, i64 0, i32 2
  br label %for.cond97

if.then106:                                       ; preds = %for.cond97
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str26, i64 0, i64 0), i32 2698, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.remove_eh_handler, i64 0, i64 0)) #8
  unreachable

if.end107:                                        ; preds = %for.cond97
  %next_catch = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 6, i32 0, i32 0
  %37 = load %struct.eh_region** %next_catch, align 8, !tbaa !3
  %38 = getelementptr inbounds %struct.eh_region* %region, i64 0, i32 6, i32 0, i32 1
  %39 = load %struct.eh_region** %38, align 8, !tbaa !3
  %tobool110 = icmp ne %struct.eh_region* %37, null
  br i1 %tobool110, label %if.then111, label %if.else115

if.then111:                                       ; preds = %if.end107
  %40 = getelementptr inbounds %struct.eh_region* %37, i64 0, i32 6, i32 0, i32 1
  store %struct.eh_region* %39, %struct.eh_region** %40, align 8, !tbaa !3
  br label %if.end118

if.else115:                                       ; preds = %if.end107
  %last_catch = getelementptr inbounds %struct.eh_region* %try.0, i64 0, i32 6, i32 0, i32 1
  store %struct.eh_region* %39, %struct.eh_region** %last_catch, align 8, !tbaa !3
  br label %if.end118

if.end118:                                        ; preds = %if.else115, %if.then111
  %tobool119 = icmp eq %struct.eh_region* %39, null
  br i1 %tobool119, label %if.else124, label %if.then120

if.then120:                                       ; preds = %if.end118
  %next_catch123 = getelementptr inbounds %struct.eh_region* %39, i64 0, i32 6, i32 0, i32 0
  store %struct.eh_region* %37, %struct.eh_region** %next_catch123, align 8, !tbaa !3
  br label %if.end132

if.else124:                                       ; preds = %if.end118
  %catch127 = getelementptr inbounds %struct.eh_region* %try.0, i64 0, i32 6, i32 0, i32 0
  store %struct.eh_region* %37, %struct.eh_region** %catch127, align 8, !tbaa !3
  br i1 %tobool110, label %if.end132, label %if.then129

if.then129:                                       ; preds = %if.else124
  call fastcc void @remove_eh_handler(%struct.eh_region* %try.0) #7
  br label %if.end132

if.end132:                                        ; preds = %if.then120, %if.then129, %if.else124, %if.end92
  %41 = bitcast %struct.eh_region* %region to i8*
  call void @free(i8* %41) #6
  ret void
}
