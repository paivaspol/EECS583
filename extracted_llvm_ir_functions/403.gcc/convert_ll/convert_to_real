define %union.tree_node* @convert_to_real(%union.tree_node* %type, %union.tree_node* %expr) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %expr.tr.be, %tailrecurse.backedge ]
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %type}, i64 0, metadata !582), !dbg !638
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %expr.tr}, i64 0, metadata !583), !dbg !638
  %type1 = getelementptr inbounds %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 1, !dbg !639
  %0 = load %union.tree_node** %type1, align 8, !dbg !639, !tbaa !624
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !639
  %1 = bitcast [4 x i8]* %code to i32*, !dbg !639
  %bf.load = load i32* %1, align 8, !dbg !639
  %bf.clear = and i32 %bf.load, 255, !dbg !639
  switch i32 %bf.clear, label %sw.default [
    i32 7, label %sw.bb
    i32 6, label %sw.bb3
    i32 10, label %sw.bb3
    i32 11, label %sw.bb3
    i32 12, label %sw.bb3
    i32 8, label %sw.bb5
    i32 13, label %sw.bb13
    i32 15, label %sw.bb13
  ], !dbg !639

sw.bb:                                            ; preds = %tailrecurse
  %2 = load i32* @flag_float_store, align 4, !dbg !640, !tbaa !632
  %tobool = icmp ne i32 %2, 0, !dbg !640
  %cond = select i1 %tobool, i32 114, i32 115, !dbg !640
  %call = tail call %union.tree_node* @build1(i32 %cond, %union.tree_node* %type, %union.tree_node* %expr.tr) #3, !dbg !640
  br label %return, !dbg !640

sw.bb3:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %call4 = tail call %union.tree_node* @build1(i32 76, %union.tree_node* %type, %union.tree_node* %expr.tr) #3, !dbg !642
  br label %return, !dbg !642

sw.bb5:                                           ; preds = %tailrecurse
  %type9 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1, !dbg !643
  %3 = load %union.tree_node** %type9, align 8, !dbg !643, !tbaa !624
  %call10 = tail call %union.tree_node* @build1(i32 127, %union.tree_node* %3, %union.tree_node* %expr.tr) #3, !dbg !643
  %call11 = tail call %union.tree_node* @fold(%union.tree_node* %call10) #3, !dbg !643
  %call12 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call11) #3, !dbg !643
  br label %return, !dbg !643

sw.bb13:                                          ; preds = %tailrecurse, %tailrecurse
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([61 x i8]* @.str1, i64 0, i64 0)) #3, !dbg !644
  br label %tailrecurse.backedge, !dbg !645

tailrecurse.backedge:                             ; preds = %sw.bb13, %sw.default
  %expr.tr.be = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !dbg !645
  br label %tailrecurse

sw.default:                                       ; preds = %tailrecurse
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str2, i64 0, i64 0)) #3, !dbg !646
  br label %tailrecurse.backedge, !dbg !647

return:                                           ; preds = %sw.bb5, %sw.bb3, %sw.bb
  %retval.0 = phi %union.tree_node* [ %call12, %sw.bb5 ], [ %call4, %sw.bb3 ], [ %call, %sw.bb ]
  ret %union.tree_node* %retval.0, !dbg !648
}
