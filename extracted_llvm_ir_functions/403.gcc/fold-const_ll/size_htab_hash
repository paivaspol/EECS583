define internal i32 @size_htab_hash(i8* nocapture %x) #5 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %x}, i64 0, metadata !1655), !dbg !2383
  %int_cst1 = getelementptr inbounds i8* %x, i64 32, !dbg !2384
  %high = getelementptr inbounds i8* %x, i64 40, !dbg !2384
  %0 = bitcast i8* %high to i64*, !dbg !2384
  %1 = load i64* %0, align 8, !dbg !2384, !tbaa !1700
  %low = bitcast i8* %int_cst1 to i64*, !dbg !2384
  %2 = load i64* %low, align 8, !dbg !2384, !tbaa !1700
  %xor = xor i64 %2, %1, !dbg !2384
  %type = getelementptr inbounds i8* %x, i64 8, !dbg !2384
  %3 = bitcast i8* %type to %union.tree_node**, !dbg !2384
  %4 = load %union.tree_node** %3, align 8, !dbg !2384, !tbaa !1705
  %5 = ptrtoint %union.tree_node* %4 to i64, !dbg !2384
  %shr13 = lshr i64 %5, 3, !dbg !2384
  %xor5 = xor i64 %xor, %shr13, !dbg !2384
  %public_flag = getelementptr inbounds i8* %x, i64 16, !dbg !2384
  %6 = bitcast i8* %public_flag to i32*, !dbg !2384
  %bf.load = load i32* %6, align 8, !dbg !2384
  %7 = shl i32 %bf.load, 1, !dbg !2384
  %shl = and i32 %7, 1048576, !dbg !2384
  %conv714 = zext i32 %shl to i64, !dbg !2384
  %xor8 = xor i64 %xor5, %conv714, !dbg !2384
  %conv9 = trunc i64 %xor8 to i32, !dbg !2384
  ret i32 %conv9, !dbg !2384
}
