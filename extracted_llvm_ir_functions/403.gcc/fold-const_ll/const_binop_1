define internal void @const_binop_1(i8* %data) #0 {
entry:
  %value = alloca %struct.realvaluetype, align 8
  %agg.tmp = alloca %struct.realvaluetype, align 8
  call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !1539), !dbg !4992
  call void @llvm.dbg.declare(metadata !{%struct.realvaluetype* %value}, metadata !1542), !dbg !4993
  %code = bitcast i8* %data to i32*, !dbg !4994
  %0 = load i32* %code, align 4, !dbg !4994, !tbaa !4066
  %d1 = getelementptr inbounds i8* %data, i64 16, !dbg !4994
  %1 = bitcast i8* %d1 to %struct.realvaluetype*, !dbg !4994
  %d2 = getelementptr inbounds i8* %data, i64 40, !dbg !4994
  %2 = bitcast i8* %d2 to %struct.realvaluetype*, !dbg !4994
  call void @earith(%struct.realvaluetype* %value, i32 %0, %struct.realvaluetype* %1, %struct.realvaluetype* %2) #9, !dbg !4994
  %type = getelementptr inbounds i8* %data, i64 8, !dbg !4995
  %3 = bitcast i8* %type to %union.tree_node**, !dbg !4995
  %4 = load %union.tree_node** %3, align 8, !dbg !4995, !tbaa !1705
  %type2 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !4996
  %mode = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6, !dbg !4996
  %5 = bitcast [4 x i8]* %mode to i32*, !dbg !4996
  %bf.load = load i32* %5, align 4, !dbg !4996
  %bf.lshr = lshr i32 %bf.load, 9, !dbg !4996
  %bf.clear = and i32 %bf.lshr, 127, !dbg !4996
  call void @real_value_truncate(%struct.realvaluetype* sret %agg.tmp, i32 %bf.clear, %struct.realvaluetype* byval align 8 %value) #9, !dbg !4996
  %call = call %union.tree_node* @build_real(%union.tree_node* %4, %struct.realvaluetype* byval align 8 %agg.tmp) #9, !dbg !4996
  %t = getelementptr inbounds i8* %data, i64 64, !dbg !4996
  %6 = bitcast i8* %t to %union.tree_node**, !dbg !4996
  store %union.tree_node* %call, %union.tree_node** %6, align 8, !dbg !4996, !tbaa !1705
  ret void, !dbg !4997
}
