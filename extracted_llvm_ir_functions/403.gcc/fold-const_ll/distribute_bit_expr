define internal fastcc %union.tree_node* @distribute_bit_expr(i32 %code, %union.tree_node* %type, %union.tree_node* nocapture %arg0, %union.tree_node* nocapture %arg1) #0 {
entry:
  %code2 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code2 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %code4 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code4 to i32*
  %bf.load5 = load i32* %1, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp = icmp ne i32 %bf.clear, %bf.clear6
  %cmp11 = icmp eq i32 %bf.clear, %code
  %or.cond = or i1 %cmp, %cmp11
  br i1 %or.cond, label %return, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %entry
  switch i32 %bf.clear, label %return [
    i32 88, label %if.end
    i32 86, label %if.end
  ]

if.end:                                           ; preds = %lor.lhs.false12, %lor.lhs.false12
  %operands = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %operands24 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 2
  %arrayidx25 = bitcast i32* %operands24 to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx25, align 8, !tbaa !3
  %call = tail call i32 @operand_equal_p(%union.tree_node* %2, %union.tree_node* %3, i32 0) #7
  %tobool = icmp eq i32 %call, 0
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  br i1 %tobool, label %if.else, label %if.then26

if.then26:                                        ; preds = %if.end
  %arrayidx32 = getelementptr inbounds i32* %operands, i64 2
  %5 = bitcast i32* %arrayidx32 to %union.tree_node**
  %arrayidx35 = getelementptr inbounds i32* %operands24, i64 2
  %6 = bitcast i32* %arrayidx35 to %union.tree_node**
  br label %if.end96

if.else:                                          ; preds = %if.end
  %arrayidx41 = getelementptr inbounds i32* %operands24, i64 2
  %7 = bitcast i32* %arrayidx41 to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !3
  %call42 = tail call i32 @operand_equal_p(%union.tree_node* %4, %union.tree_node* %8, i32 0) #7
  %tobool43 = icmp eq i32 %call42, 0
  br i1 %tobool43, label %if.else54, label %if.then44

if.then44:                                        ; preds = %if.else
  %9 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %arrayidx50 = getelementptr inbounds i32* %operands, i64 2
  %10 = bitcast i32* %arrayidx50 to %union.tree_node**
  br label %if.end96

if.else54:                                        ; preds = %if.else
  %arrayidx57 = getelementptr inbounds i32* %operands, i64 2
  %11 = bitcast i32* %arrayidx57 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !3
  %13 = load %union.tree_node** %arrayidx25, align 8, !tbaa !3
  %call61 = tail call i32 @operand_equal_p(%union.tree_node* %12, %union.tree_node* %13, i32 0) #7
  %tobool62 = icmp eq i32 %call61, 0
  %14 = load %union.tree_node** %11, align 8, !tbaa !3
  br i1 %tobool62, label %if.else73, label %if.end96

if.else73:                                        ; preds = %if.else54
  %15 = load %union.tree_node** %7, align 8, !tbaa !3
  %call80 = tail call i32 @operand_equal_p(%union.tree_node* %14, %union.tree_node* %15, i32 0) #7
  %tobool81 = icmp eq i32 %call80, 0
  br i1 %tobool81, label %return, label %if.then82

if.then82:                                        ; preds = %if.else73
  %16 = load %union.tree_node** %11, align 8, !tbaa !3
  br label %if.end96

if.end96:                                         ; preds = %if.else54, %if.then44, %if.then82, %if.then26
  %common.0 = phi %union.tree_node* [ %4, %if.then26 ], [ %9, %if.then44 ], [ %16, %if.then82 ], [ %14, %if.else54 ]
  %left.0.in = phi %union.tree_node** [ %5, %if.then26 ], [ %10, %if.then44 ], [ %arrayidx, %if.then82 ], [ %arrayidx, %if.else54 ]
  %right.0.in = phi %union.tree_node** [ %6, %if.then26 ], [ %arrayidx25, %if.then44 ], [ %arrayidx25, %if.then82 ], [ %7, %if.else54 ]
  %right.0 = load %union.tree_node** %right.0.in, align 8
  %left.0 = load %union.tree_node** %left.0.in, align 8
  %bf.load99 = load i32* %0, align 8
  %bf.clear100 = and i32 %bf.load99, 255
  %call101 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %type, %union.tree_node* %left.0, %union.tree_node* %right.0) #9
  %call102 = tail call %union.tree_node* @fold(%union.tree_node* %call101) #7
  %call103 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %bf.clear100, %union.tree_node* %type, %union.tree_node* %common.0, %union.tree_node* %call102) #9
  %call104 = tail call %union.tree_node* @fold(%union.tree_node* %call103) #7
  br label %return

return:                                           ; preds = %if.else73, %entry, %lor.lhs.false12, %if.end96
  %retval.0 = phi %union.tree_node* [ %call104, %if.end96 ], [ null, %lor.lhs.false12 ], [ null, %entry ], [ null, %if.else73 ]
  ret %union.tree_node* %retval.0
}
