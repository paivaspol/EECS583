define internal fastcc %union.tree_node* @range_binop(i32 %code, %union.tree_node* %type, %union.tree_node* %arg0, i32 %upper0_p, %union.tree_node* %arg1, i32 %upper1_p) #0 {
entry:
  %cmp = icmp ne %union.tree_node* %arg0, null
  %cmp.not = xor i1 %cmp, true
  %cmp1 = icmp eq %union.tree_node* %arg1, null
  %or.cond = or i1 %cmp1, %cmp.not
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cmp2 = icmp eq %union.tree_node* %type, null
  %type3 = getelementptr inbounds %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type3, align 8, !tbaa !3
  %.type = select i1 %cmp2, %union.tree_node* %0, %union.tree_node* %type
  %call = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %arg1) #9
  %call6 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 %code, %union.tree_node* %.type, %union.tree_node* %arg0, %union.tree_node* %call) #9
  %call7 = tail call %union.tree_node* @fold(%union.tree_node* %call6) #7
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %if.then
  %tem.0 = phi %union.tree_node* [ %call7, %if.then ], [ %3, %land.rhs ]
  %code9 = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code9 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true22, label %while.end

land.lhs.true22:                                  ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %cmp23 = icmp eq %union.tree_node* %3, %1
  br i1 %cmp23, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true22
  %type25 = getelementptr inbounds %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type25, align 8, !tbaa !3
  %type26 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type26, i64 0, i32 6
  %5 = bitcast [4 x i8]* %mode to i32*
  %bf.load27 = load i32* %5, align 4
  %type33 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type33, align 8, !tbaa !3
  %type34 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode35 = getelementptr inbounds %struct.tree_type* %type34, i64 0, i32 6
  %7 = bitcast [4 x i8]* %mode35 to i32*
  %bf.load36 = load i32* %7, align 4
  %bf.lshr122 = xor i32 %bf.load36, %bf.load27
  %8 = and i32 %bf.lshr122, 65024
  %cmp39 = icmp eq i32 %8, 0
  br i1 %cmp39, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true22, %land.rhs
  %cmp47 = icmp eq i32 %bf.clear, 25
  %cond51 = select i1 %cmp47, %union.tree_node* %tem.0, %union.tree_node* null
  br label %return

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %code to i64
  %arrayidx52 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom
  %9 = load i8* %arrayidx52, align 1, !tbaa !1
  %cmp53 = icmp eq i8 %9, 60
  br i1 %cmp53, label %if.end56, label %return

if.end56:                                         ; preds = %if.end
  br i1 %cmp, label %cond.end62, label %cond.false60

cond.false60:                                     ; preds = %if.end56
  %tobool = icmp ne i32 %upper0_p, 0
  %cond61 = select i1 %tobool, i32 1, i32 -1
  br label %cond.end62

cond.end62:                                       ; preds = %if.end56, %cond.false60
  %cond63 = phi i32 [ %cond61, %cond.false60 ], [ 0, %if.end56 ]
  br i1 %cmp1, label %cond.false67, label %cond.end70

cond.false67:                                     ; preds = %cond.end62
  %tobool68 = icmp ne i32 %upper1_p, 0
  %cond69 = select i1 %tobool68, i32 1, i32 -1
  br label %cond.end70

cond.end70:                                       ; preds = %cond.end62, %cond.false67
  %cond71 = phi i32 [ %cond69, %cond.false67 ], [ 0, %cond.end62 ]
  switch i32 %code, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb74
    i32 97, label %sw.bb77
    i32 98, label %sw.bb80
    i32 99, label %sw.bb83
    i32 100, label %sw.bb86
  ]

sw.bb:                                            ; preds = %cond.end70
  %cmp72 = icmp eq i32 %cond63, %cond71
  %conv73 = zext i1 %cmp72 to i32
  br label %sw.epilog

sw.bb74:                                          ; preds = %cond.end70
  %cmp75 = icmp ne i32 %cond63, %cond71
  %conv76 = zext i1 %cmp75 to i32
  br label %sw.epilog

sw.bb77:                                          ; preds = %cond.end70
  %cmp78 = icmp slt i32 %cond63, %cond71
  %conv79 = zext i1 %cmp78 to i32
  br label %sw.epilog

sw.bb80:                                          ; preds = %cond.end70
  %cmp81 = icmp sle i32 %cond63, %cond71
  %conv82 = zext i1 %cmp81 to i32
  br label %sw.epilog

sw.bb83:                                          ; preds = %cond.end70
  %cmp84 = icmp sgt i32 %cond63, %cond71
  %conv85 = zext i1 %cmp84 to i32
  br label %sw.epilog

sw.bb86:                                          ; preds = %cond.end70
  %cmp87 = icmp sge i32 %cond63, %cond71
  %conv88 = zext i1 %cmp87 to i32
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([54 x i8]* @.str, i64 0, i64 0), i32 3411, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.range_binop, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %sw.bb86, %sw.bb83, %sw.bb80, %sw.bb77, %sw.bb74, %sw.bb
  %result.0 = phi i32 [ %conv88, %sw.bb86 ], [ %conv85, %sw.bb83 ], [ %conv82, %sw.bb80 ], [ %conv79, %sw.bb77 ], [ %conv76, %sw.bb74 ], [ %conv73, %sw.bb ]
  %tobool89 = icmp ne i32 %result.0, 0
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !3
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !3
  %cond93 = select i1 %tobool89, %union.tree_node* %10, %union.tree_node* %11
  %call94 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %cond93) #9
  br label %return

return:                                           ; preds = %if.end, %sw.epilog, %while.end
  %retval.0 = phi %union.tree_node* [ %cond51, %while.end ], [ %call94, %sw.epilog ], [ null, %if.end ]
  ret %union.tree_node* %retval.0
}
