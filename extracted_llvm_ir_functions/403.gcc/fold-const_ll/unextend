define internal fastcc %union.tree_node* @unextend(%union.tree_node* %c, i32 %p, i32 %unsignedp, %union.tree_node* %mask) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %c, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !3
  %type2 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6
  %1 = bitcast [4 x i8]* %mode to i32*
  %bf.load = load i32* %1, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %idxprom65 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom65
  %2 = load i16* %arrayidx, align 2, !tbaa !5
  %conv = zext i16 %2 to i32
  %cmp = icmp ne i32 %conv, %p
  %tobool = icmp eq i32 %unsignedp, 0
  %or.cond = and i1 %cmp, %tobool
  br i1 %or.cond, label %if.end, label %return

if.end:                                           ; preds = %entry
  %sub = add nsw i32 %p, -1
  %conv4 = sext i32 %sub to i64
  %3 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !3
  %call.i = tail call %union.tree_node* @size_int_type_wide(i64 %conv4, %union.tree_node* %3) #9
  %call5 = tail call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %c, %union.tree_node* %call.i) #7
  %4 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !3
  %call.i66 = tail call %union.tree_node* @size_int_type_wide(i64 1, %union.tree_node* %4) #9
  %call7 = tail call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call5, %union.tree_node* %call.i66) #7
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load9 = load i32* %5, align 8
  %bf.clear11 = and i32 %bf.load9, 8192
  %tobool12 = icmp eq i32 %bf.clear11, 0
  br i1 %tobool12, label %if.end16, label %if.then13

if.then13:                                        ; preds = %if.end
  %call14 = tail call %union.tree_node* @signed_type(%union.tree_node* %0) #9
  %call15 = tail call %union.tree_node* @convert(%union.tree_node* %call14, %union.tree_node* %call7) #9
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then13
  %temp.0 = phi %union.tree_node* [ %call15, %if.then13 ], [ %call7, %if.end ]
  %sub17 = add nsw i32 %conv, -1
  %conv18 = sext i32 %sub17 to i64
  %6 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !3
  %call.i67 = tail call %union.tree_node* @size_int_type_wide(i64 %conv18, %union.tree_node* %6) #9
  %call20 = tail call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %temp.0, %union.tree_node* %call.i67) #7
  %sub21 = xor i32 %p, -1
  %sub22 = add i32 %conv, %sub21
  %conv23 = sext i32 %sub22 to i64
  %7 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !3
  %call.i68 = tail call %union.tree_node* @size_int_type_wide(i64 %conv23, %union.tree_node* %7) #9
  %call25 = tail call fastcc %union.tree_node* @const_binop(i32 83, %union.tree_node* %call20, %union.tree_node* %call.i68) #7
  %cmp26 = icmp eq %union.tree_node* %mask, null
  br i1 %cmp26, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end16
  %8 = load %union.tree_node** %type1, align 8, !tbaa !3
  %call31 = tail call %union.tree_node* @convert(%union.tree_node* %8, %union.tree_node* %mask) #9
  %call32 = tail call fastcc %union.tree_node* @const_binop(i32 88, %union.tree_node* %call25, %union.tree_node* %call31) #7
  br label %if.end33

if.end33:                                         ; preds = %if.end16, %if.then28
  %temp.1 = phi %union.tree_node* [ %call32, %if.then28 ], [ %call25, %if.end16 ]
  %bf.load36 = load i32* %5, align 8
  %bf.clear38 = and i32 %bf.load36, 8192
  %tobool39 = icmp eq i32 %bf.clear38, 0
  br i1 %tobool39, label %if.end42, label %if.then40

if.then40:                                        ; preds = %if.end33
  %call41 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %temp.1) #9
  br label %if.end42

if.end42:                                         ; preds = %if.end33, %if.then40
  %temp.2 = phi %union.tree_node* [ %call41, %if.then40 ], [ %temp.1, %if.end33 ]
  %call43 = tail call fastcc %union.tree_node* @const_binop(i32 87, %union.tree_node* %c, %union.tree_node* %temp.2) #7
  %call44 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call43) #9
  br label %return

return:                                           ; preds = %entry, %if.end42
  %retval.0 = phi %union.tree_node* [ %call44, %if.end42 ], [ %c, %entry ]
  ret %union.tree_node* %retval.0
}
