define internal fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %top, %union.tree_node* %bottom) #0 {
entry:
  %call161 = tail call i32 @operand_equal_p(%union.tree_node* %top, %union.tree_node* %bottom, i32 0) #7
  %tobool162 = icmp eq i32 %call161, 0
  br i1 %tobool162, label %if.end.lr.ph, label %return

if.end.lr.ph:                                     ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %type76 = bitcast %union.tree_node* %type to %struct.tree_type*
  %precision77 = getelementptr inbounds %struct.tree_type* %type76, i64 0, i32 6
  %1 = bitcast [4 x i8]* %precision77 to i32*
  br label %if.end

if.end:                                           ; preds = %if.end.lr.ph, %tailrecurse.backedge
  %top.tr163 = phi %union.tree_node* [ %top, %if.end.lr.ph ], [ %top.tr.be, %tailrecurse.backedge ]
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %if.end2, label %return

if.end2:                                          ; preds = %if.end
  %code4 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code4 to i32*
  %bf.load5 = load i32* %2, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  switch i32 %bf.clear6, label %return [
    i32 61, label %sw.bb
    i32 59, label %sw.bb14
    i32 60, label %sw.bb14
    i32 82, label %sw.bb25
    i32 115, label %sw.bb64
    i32 118, label %if.end2.sw.bb93_crit_edge
    i32 25, label %sw.bb98
  ]

if.end2.sw.bb93_crit_edge:                        ; preds = %if.end2
  %operands95.phi.trans.insert = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx96.phi.trans.insert = bitcast i32* %operands95.phi.trans.insert to %union.tree_node**
  %.pre = load %union.tree_node** %arrayidx96.phi.trans.insert, align 8, !tbaa !3
  br label %tailrecurse.backedge

sw.bb:                                            ; preds = %if.end2
  %operands = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %3 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %call7 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %3, %union.tree_node* %bottom) #7
  %tobool8 = icmp eq i32 %call7, 0
  br i1 %tobool8, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %sw.bb
  %arrayidx11 = getelementptr inbounds i32* %operands, i64 2
  %4 = bitcast i32* %arrayidx11 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !3
  %call12 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %5, %union.tree_node* %bottom) #7
  %tobool13 = icmp ne i32 %call12, 0
  br label %lor.end

lor.end:                                          ; preds = %sw.bb, %lor.rhs
  %6 = phi i1 [ true, %sw.bb ], [ %tobool13, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32
  br label %return

sw.bb14:                                          ; preds = %if.end2, %if.end2
  %operands16 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx17 = bitcast i32* %operands16 to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx17, align 8, !tbaa !3
  %call18 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %7, %union.tree_node* %bottom) #7
  %tobool19 = icmp eq i32 %call18, 0
  br i1 %tobool19, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %sw.bb14
  %arrayidx22 = getelementptr inbounds i32* %operands16, i64 2
  %8 = bitcast i32* %arrayidx22 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !3
  %call23 = tail call fastcc i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %9, %union.tree_node* %bottom) #7
  %tobool24 = icmp ne i32 %call23, 0
  br label %land.end

land.end:                                         ; preds = %sw.bb14, %land.rhs
  %10 = phi i1 [ false, %sw.bb14 ], [ %tobool24, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  br label %return

sw.bb25:                                          ; preds = %if.end2
  %operands27 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds i32* %operands27, i64 2
  %11 = bitcast i32* %arrayidx28 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !3
  %code30 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast [4 x i8]* %code30 to i32*
  %bf.load31 = load i32* %13, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 25
  br i1 %cmp33, label %if.then34, label %return

if.then34:                                        ; preds = %sw.bb25
  %14 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !3
  %type39 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type39, align 8, !tbaa !3
  %type40 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type40, i64 0, i32 6
  %16 = bitcast [4 x i8]* %precision to i32*
  %bf.load41 = load i32* %16, align 4
  %bf.clear42 = and i32 %bf.load41, 511
  %conv = zext i32 %bf.clear42 to i64
  %int_cst43 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst43 to i64*
  %17 = load i64* %low, align 8, !tbaa !0
  %cmp44 = icmp ugt i64 %conv, %17
  br i1 %cmp44, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %if.then34
  %high = getelementptr inbounds i32* %int_cst43, i64 2
  %18 = bitcast i32* %high to i64*
  %19 = load i64* %18, align 8, !tbaa !0
  %cmp48 = icmp eq i64 %19, 0
  br i1 %cmp48, label %land.lhs.true50, label %return

land.lhs.true50:                                  ; preds = %land.lhs.true
  %call51 = tail call fastcc %union.tree_node* @const_binop(i32 82, %union.tree_node* %14, %union.tree_node* %12) #7
  %call52 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call51) #9
  %cmp53 = icmp eq %union.tree_node* %call52, null
  br i1 %cmp53, label %return, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %public_flag = getelementptr inbounds %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load57 = load i32* %20, align 8
  %bf.clear58 = and i32 %bf.load57, 524288
  %tobool59 = icmp eq i32 %bf.clear58, 0
  br i1 %tobool59, label %tailrecurse.backedge, label %return

sw.bb64:                                          ; preds = %if.end2
  %operands66 = getelementptr inbounds %union.tree_node* %top.tr163, i64 0, i32 0, i32 2
  %arrayidx67 = bitcast i32* %operands66 to %union.tree_node**
  %21 = load %union.tree_node** %arrayidx67, align 8, !tbaa !3
  %type69 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type69, align 8, !tbaa !3
  %code71 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast [4 x i8]* %code71 to i32*
  %bf.load72 = load i32* %23, align 8
  %bf.clear73 = and i32 %bf.load72, 255
  %cmp74 = icmp eq i32 %bf.clear73, 6
  br i1 %cmp74, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %sw.bb64
  %bf.load78 = load i32* %1, align 4
  %bf.clear79 = and i32 %bf.load78, 511
  %type85 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %precision86 = getelementptr inbounds %struct.tree_type* %type85, i64 0, i32 6
  %24 = bitcast [4 x i8]* %precision86 to i32*
  %bf.load87 = load i32* %24, align 4
  %bf.clear88 = and i32 %bf.load87, 511
  %cmp89 = icmp ult i32 %bf.clear79, %bf.clear88
  br i1 %cmp89, label %return, label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %lor.lhs.false, %if.end2.sw.bb93_crit_edge, %land.lhs.true55
  %top.tr.be = phi %union.tree_node* [ %call52, %land.lhs.true55 ], [ %.pre, %if.end2.sw.bb93_crit_edge ], [ %21, %lor.lhs.false ]
  %call = tail call i32 @operand_equal_p(%union.tree_node* %top.tr.be, %union.tree_node* %bottom, i32 0) #7
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

sw.bb98:                                          ; preds = %if.end2
  %code100 = getelementptr inbounds %union.tree_node* %bottom, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast [4 x i8]* %code100 to i32*
  %bf.load101 = load i32* %25, align 8
  %bf.clear102 = and i32 %bf.load101, 255
  %cmp103 = icmp eq i32 %bf.clear102, 25
  br i1 %cmp103, label %lor.lhs.false105, label %return

lor.lhs.false105:                                 ; preds = %sw.bb98
  %bf.clear109 = and i32 %bf.load, 8192
  %tobool110 = icmp eq i32 %bf.clear109, 0
  br i1 %tobool110, label %if.end120, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %lor.lhs.false105
  %call112 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %top.tr163) #9
  %cmp113 = icmp slt i32 %call112, 0
  br i1 %cmp113, label %return, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %land.lhs.true111
  %call116 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %bottom) #9
  %cmp117 = icmp slt i32 %call116, 0
  br i1 %cmp117, label %return, label %if.end120

if.end120:                                        ; preds = %lor.lhs.false105, %lor.lhs.false115
  %call121 = tail call fastcc %union.tree_node* @const_binop(i32 66, %union.tree_node* %top.tr163, %union.tree_node* %bottom) #7
  %call122 = tail call i32 @integer_zerop(%union.tree_node* %call121) #9
  br label %return

return:                                           ; preds = %entry, %if.end2, %lor.lhs.false, %sw.bb64, %sw.bb25, %land.lhs.true, %if.then34, %land.lhs.true50, %land.lhs.true55, %if.end, %tailrecurse.backedge, %land.lhs.true111, %lor.lhs.false115, %sw.bb98, %if.end120, %land.end, %lor.end
  %retval.0 = phi i32 [ %call122, %if.end120 ], [ %land.ext, %land.end ], [ %lor.ext, %lor.end ], [ 0, %sw.bb98 ], [ 0, %lor.lhs.false115 ], [ 0, %land.lhs.true111 ], [ 1, %entry ], [ 0, %if.end2 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb64 ], [ 0, %sw.bb25 ], [ 0, %land.lhs.true ], [ 0, %if.then34 ], [ 0, %land.lhs.true50 ], [ 0, %land.lhs.true55 ], [ 0, %if.end ], [ 1, %tailrecurse.backedge ]
  ret i32 %retval.0
}
