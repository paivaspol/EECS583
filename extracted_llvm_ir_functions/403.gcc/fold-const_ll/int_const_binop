define internal fastcc %union.tree_node* @int_const_binop(i32 %code, %union.tree_node* nocapture %arg1, %union.tree_node* nocapture %arg2) #0 {
entry:
  %low = alloca i64, align 8
  %hi = alloca i64, align 8
  %garbagel = alloca i64, align 8
  %garbageh = alloca i64, align 8
  call void @llvm.dbg.value(metadata !403, i64 0, metadata !1625), !dbg !2404
  call void @llvm.dbg.declare(metadata !{i64* %low}, metadata !1630), !dbg !2405
  call void @llvm.dbg.declare(metadata !{i64* %hi}, metadata !1631), !dbg !2406
  call void @llvm.dbg.declare(metadata !{i64* %garbagel}, metadata !1632), !dbg !2407
  call void @llvm.dbg.declare(metadata !{i64* %garbageh}, metadata !1633), !dbg !2408
  %type1 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 1, !dbg !2409
  %0 = load %union.tree_node** %type1, align 8, !dbg !2409, !tbaa !1705
  call void @llvm.dbg.value(metadata !{%union.tree_node* %0}, i64 0, metadata !1635), !dbg !2409
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !2410
  %1 = bitcast [4 x i8]* %unsigned_flag to i32*, !dbg !2410
  %bf.load = load i32* %1, align 8, !dbg !2410
  %bf.lshr = lshr i32 %bf.load, 13, !dbg !2410
  %bf.clear = and i32 %bf.lshr, 1, !dbg !2410
  call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !1636), !dbg !2410
  %bf.clear6 = and i32 %bf.load, 255, !dbg !2411
  %cmp = icmp eq i32 %bf.clear6, 6, !dbg !2411
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2411

land.rhs:                                         ; preds = %entry
  %type7 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !2411
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type7, i64 0, i32 6, !dbg !2411
  %2 = bitcast [4 x i8]* %no_force_blk_flag to i32*, !dbg !2411
  %bf.load8 = load i32* %2, align 4, !dbg !2411
  %bf.clear10 = and i32 %bf.load8, 131072, !dbg !2411
  %tobool = icmp ne i32 %bf.clear10, 0, !dbg !2411
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ]
  call void @llvm.dbg.value(metadata !403, i64 0, metadata !1638), !dbg !2412
  call void @llvm.dbg.value(metadata !403, i64 0, metadata !1639), !dbg !2413
  %int_cst11 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 2, !dbg !2414
  %low12 = bitcast i32* %int_cst11 to i64*, !dbg !2414
  %4 = load i64* %low12, align 8, !dbg !2414, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %4}, i64 0, metadata !1626), !dbg !2414
  %high = getelementptr inbounds i32* %int_cst11, i64 2, !dbg !2415
  %5 = bitcast i32* %high to i64*, !dbg !2415
  %6 = load i64* %5, align 8, !dbg !2415, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %6}, i64 0, metadata !1628), !dbg !2415
  %int_cst16 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 2, !dbg !2416
  %low17 = bitcast i32* %int_cst16 to i64*, !dbg !2416
  %7 = load i64* %low17, align 8, !dbg !2416, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %7}, i64 0, metadata !1627), !dbg !2416
  %high20 = getelementptr inbounds i32* %int_cst16, i64 2, !dbg !2417
  %8 = bitcast i32* %high20 to i64*, !dbg !2417
  %9 = load i64* %8, align 8, !dbg !2417, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %9}, i64 0, metadata !1629), !dbg !2417
  switch i32 %code, label %sw.default [
    i32 86, label %sw.bb
    i32 87, label %sw.bb22
    i32 88, label %sw.bb24
    i32 89, label %sw.bb26
    i32 83, label %sw.bb30
    i32 82, label %sw.bb31
    i32 85, label %sw.bb36
    i32 84, label %sw.bb38
    i32 59, label %sw.bb43
    i32 60, label %sw.bb44
    i32 61, label %sw.bb52
    i32 62, label %sw.bb54
    i32 64, label %sw.bb54
    i32 63, label %sw.bb54
    i32 71, label %sw.bb54
    i32 65, label %sw.bb83
    i32 66, label %sw.bb105
    i32 68, label %sw.bb105
    i32 67, label %sw.bb105
    i32 69, label %sw.bb139
    i32 78, label %sw.bb141
    i32 79, label %sw.bb141
  ], !dbg !2418

sw.bb:                                            ; preds = %land.end
  %or = or i64 %7, %4, !dbg !2419
  call void @llvm.dbg.value(metadata !{i64 %or}, i64 0, metadata !1630), !dbg !2419
  store i64 %or, i64* %low, align 8, !dbg !2419, !tbaa !1700
  %or21 = or i64 %9, %6, !dbg !2419
  call void @llvm.dbg.value(metadata !{i64 %or21}, i64 0, metadata !1631), !dbg !2419
  store i64 %or21, i64* %hi, align 8, !dbg !2419, !tbaa !1700
  br label %sw.epilog, !dbg !2421

sw.bb22:                                          ; preds = %land.end
  %xor = xor i64 %7, %4, !dbg !2422
  call void @llvm.dbg.value(metadata !{i64 %xor}, i64 0, metadata !1630), !dbg !2422
  store i64 %xor, i64* %low, align 8, !dbg !2422, !tbaa !1700
  %xor23 = xor i64 %9, %6, !dbg !2422
  call void @llvm.dbg.value(metadata !{i64 %xor23}, i64 0, metadata !1631), !dbg !2422
  store i64 %xor23, i64* %hi, align 8, !dbg !2422, !tbaa !1700
  br label %sw.epilog, !dbg !2423

sw.bb24:                                          ; preds = %land.end
  %and = and i64 %7, %4, !dbg !2424
  call void @llvm.dbg.value(metadata !{i64 %and}, i64 0, metadata !1630), !dbg !2424
  store i64 %and, i64* %low, align 8, !dbg !2424, !tbaa !1700
  %and25 = and i64 %9, %6, !dbg !2424
  call void @llvm.dbg.value(metadata !{i64 %and25}, i64 0, metadata !1631), !dbg !2424
  store i64 %and25, i64* %hi, align 8, !dbg !2424, !tbaa !1700
  br label %sw.epilog, !dbg !2425

sw.bb26:                                          ; preds = %land.end
  %neg = xor i64 %7, -1, !dbg !2426
  %and27 = and i64 %4, %neg, !dbg !2426
  call void @llvm.dbg.value(metadata !{i64 %and27}, i64 0, metadata !1630), !dbg !2426
  store i64 %and27, i64* %low, align 8, !dbg !2426, !tbaa !1700
  %neg28 = xor i64 %9, -1, !dbg !2426
  %and29 = and i64 %6, %neg28, !dbg !2426
  call void @llvm.dbg.value(metadata !{i64 %and29}, i64 0, metadata !1631), !dbg !2426
  store i64 %and29, i64* %hi, align 8, !dbg !2426, !tbaa !1700
  br label %sw.epilog, !dbg !2427

sw.bb30:                                          ; preds = %land.end
  %sub = sub i64 0, %7, !dbg !2428
  call void @llvm.dbg.value(metadata !{i64 %sub}, i64 0, metadata !1627), !dbg !2428
  br label %sw.bb31, !dbg !2428

sw.bb31:                                          ; preds = %land.end, %sw.bb30
  %int2l.0 = phi i64 [ %sub, %sw.bb30 ], [ %7, %land.end ]
  %type32 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !2429
  %precision = getelementptr inbounds %struct.tree_type* %type32, i64 0, i32 6, !dbg !2429
  %10 = bitcast [4 x i8]* %precision to i32*, !dbg !2429
  %bf.load33 = load i32* %10, align 4, !dbg !2429
  %bf.clear34 = and i32 %bf.load33, 511, !dbg !2429
  %11 = xor i32 %bf.clear, 1, !dbg !2429
  call void @lshift_double(i64 %4, i64 %6, i64 %int2l.0, i32 %bf.clear34, i64* %low, i64* %hi, i32 %11) #7, !dbg !2429
  call void @llvm.dbg.value(metadata !2035, i64 0, metadata !1639), !dbg !2430
  br label %sw.epilog, !dbg !2431

sw.bb36:                                          ; preds = %land.end
  %sub37 = sub i64 0, %7, !dbg !2432
  call void @llvm.dbg.value(metadata !{i64 %sub37}, i64 0, metadata !1627), !dbg !2432
  br label %sw.bb38, !dbg !2432

sw.bb38:                                          ; preds = %land.end, %sw.bb36
  %int2l.1 = phi i64 [ %sub37, %sw.bb36 ], [ %7, %land.end ]
  %type39 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !2433
  %precision40 = getelementptr inbounds %struct.tree_type* %type39, i64 0, i32 6, !dbg !2433
  %12 = bitcast [4 x i8]* %precision40 to i32*, !dbg !2433
  %bf.load41 = load i32* %12, align 4, !dbg !2433
  %bf.clear42 = and i32 %bf.load41, 511, !dbg !2433
  call void @lrotate_double(i64 %4, i64 %6, i64 %int2l.1, i32 %bf.clear42, i64* %low, i64* %hi) #7, !dbg !2433
  br label %sw.epilog, !dbg !2434

sw.bb43:                                          ; preds = %land.end
  call void @llvm.dbg.value(metadata !{i64 %4}, i64 0, metadata !2435) #2, !dbg !2437
  call void @llvm.dbg.value(metadata !{i64 %6}, i64 0, metadata !2438) #2, !dbg !2439
  call void @llvm.dbg.value(metadata !{i64 %7}, i64 0, metadata !2440) #2, !dbg !2437
  call void @llvm.dbg.value(metadata !{i64 %9}, i64 0, metadata !2441) #2, !dbg !2439
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !2442) #2, !dbg !2443
  call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !2444) #2, !dbg !2445
  %uadd.i = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 %7) #2, !dbg !2446
  %13 = extractvalue { i64, i1 } %uadd.i, 0, !dbg !2446
  call void @llvm.dbg.value(metadata !{i64 %13}, i64 0, metadata !2447) #2, !dbg !2446
  %add1.i = add nsw i64 %9, %6, !dbg !2448
  %cmp.i = extractvalue { i64, i1 } %uadd.i, 1, !dbg !2448
  %conv2.i = zext i1 %cmp.i to i64, !dbg !2448
  %add3.i = add nsw i64 %add1.i, %conv2.i, !dbg !2448
  call void @llvm.dbg.value(metadata !{i64 %add3.i}, i64 0, metadata !2449) #2, !dbg !2448
  call void @llvm.dbg.value(metadata !{i64 %13}, i64 0, metadata !1630), !dbg !2450
  store i64 %13, i64* %low, align 8, !dbg !2450, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %add3.i}, i64 0, metadata !1631), !dbg !2451
  store i64 %add3.i, i64* %hi, align 8, !dbg !2451, !tbaa !1700
  %xor.i = xor i64 %6, -9223372036854775808, !dbg !2452
  %neg.i = xor i64 %xor.i, %9, !dbg !2452
  %xor4.i = xor i64 %add3.i, %6, !dbg !2452
  %and.i = and i64 %xor4.i, %neg.i, !dbg !2452
  %and.lobit.i = lshr i64 %and.i, 63, !dbg !2452
  %14 = trunc i64 %and.lobit.i to i32, !dbg !2452
  call void @llvm.dbg.value(metadata !{i32 %14}, i64 0, metadata !1638), !dbg !2436
  br label %sw.epilog, !dbg !2453

sw.bb44:                                          ; preds = %land.end
  tail call void @llvm.dbg.value(metadata !{i64 %7}, i64 0, metadata !2454), !dbg !2456
  tail call void @llvm.dbg.value(metadata !{i64 %9}, i64 0, metadata !2457), !dbg !2458
  tail call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !2459), !dbg !2460
  tail call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !2461), !dbg !2462
  %cmp.i22 = icmp eq i64 %7, 0, !dbg !2463
  br i1 %cmp.i22, label %if.then.i, label %if.else.i, !dbg !2463

if.then.i:                                        ; preds = %sw.bb44
  call void @llvm.dbg.value(metadata !1829, i64 0, metadata !1630), !dbg !2464
  store i64 0, i64* %low, align 8, !dbg !2464, !tbaa !1700
  %sub.i = sub nsw i64 0, %9, !dbg !2465
  call void @llvm.dbg.value(metadata !{i64 %sub.i}, i64 0, metadata !1631), !dbg !2465
  br label %neg_double.exit, !dbg !2466

if.else.i:                                        ; preds = %sw.bb44
  %sub2.i = sub i64 0, %7, !dbg !2467
  call void @llvm.dbg.value(metadata !{i64 %sub2.i}, i64 0, metadata !1630), !dbg !2467
  store i64 %sub2.i, i64* %low, align 8, !dbg !2467, !tbaa !1700
  %neg.i25 = xor i64 %9, -1, !dbg !2468
  call void @llvm.dbg.value(metadata !{i64 %neg.i25}, i64 0, metadata !1631), !dbg !2468
  br label %neg_double.exit, !dbg !2469

neg_double.exit:                                  ; preds = %if.then.i, %if.else.i
  %15 = phi i64 [ %sub2.i, %if.else.i ], [ 0, %if.then.i ]
  %storemerge = phi i64 [ %neg.i25, %if.else.i ], [ %sub.i, %if.then.i ]
  call void @llvm.dbg.value(metadata !{i64 %storemerge}, i64 0, metadata !1631), !dbg !2465
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2470
  call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !1631), !dbg !2470
  call void @llvm.dbg.value(metadata !{i64 %4}, i64 0, metadata !2471) #2, !dbg !2472
  call void @llvm.dbg.value(metadata !{i64 %6}, i64 0, metadata !2473) #2, !dbg !2474
  call void @llvm.dbg.value(metadata !{i64 %15}, i64 0, metadata !2475) #2, !dbg !2472
  call void @llvm.dbg.value(metadata !{i64 %storemerge}, i64 0, metadata !2476) #2, !dbg !2474
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !2477) #2, !dbg !2478
  call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !2479) #2, !dbg !2480
  %uadd.i26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 %15) #2, !dbg !2481
  %16 = extractvalue { i64, i1 } %uadd.i26, 0, !dbg !2481
  call void @llvm.dbg.value(metadata !{i64 %16}, i64 0, metadata !2482) #2, !dbg !2481
  %add1.i27 = add nsw i64 %storemerge, %6, !dbg !2483
  %cmp.i28 = extractvalue { i64, i1 } %uadd.i26, 1, !dbg !2483
  %conv2.i29 = zext i1 %cmp.i28 to i64, !dbg !2483
  %add3.i30 = add nsw i64 %add1.i27, %conv2.i29, !dbg !2483
  call void @llvm.dbg.value(metadata !{i64 %add3.i30}, i64 0, metadata !2484) #2, !dbg !2483
  call void @llvm.dbg.value(metadata !{i64 %16}, i64 0, metadata !1630), !dbg !2485
  store i64 %16, i64* %low, align 8, !dbg !2485, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %add3.i30}, i64 0, metadata !1631), !dbg !2486
  store i64 %add3.i30, i64* %hi, align 8, !dbg !2486, !tbaa !1700
  %xor4.i33 = xor i64 %add3.i30, %6, !dbg !2487
  call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !1631), !dbg !2488
  %xor47 = xor i64 %9, -9223372036854775808, !dbg !2488
  %neg48 = xor i64 %xor47, %add3.i30, !dbg !2488
  %and50 = and i64 %xor4.i33, %neg48, !dbg !2488
  %and50.lobit = lshr i64 %and50, 63, !dbg !2488
  %17 = trunc i64 %and50.lobit to i32, !dbg !2488
  call void @llvm.dbg.value(metadata !{i32 %17}, i64 0, metadata !1638), !dbg !2488
  br label %sw.epilog, !dbg !2489

sw.bb52:                                          ; preds = %land.end
  %call53 = call i32 @mul_double(i64 %4, i64 %6, i64 %7, i64 %9, i64* %low, i64* %hi) #7, !dbg !2490
  call void @llvm.dbg.value(metadata !{i32 %call53}, i64 0, metadata !1638), !dbg !2490
  br label %sw.epilog, !dbg !2491

sw.bb54:                                          ; preds = %land.end, %land.end, %land.end, %land.end
  %cmp55 = icmp eq i64 %9, 0, !dbg !2492
  %cmp57 = icmp sgt i64 %7, 0, !dbg !2492
  %or.cond = and i1 %cmp55, %cmp57, !dbg !2492
  br i1 %or.cond, label %land.lhs.true59, label %sw.bb83, !dbg !2492

land.lhs.true59:                                  ; preds = %sw.bb54
  %static_flag = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2, !dbg !2492
  %18 = bitcast [4 x i8]* %static_flag to i32*, !dbg !2492
  %bf.load61 = load i32* %18, align 8, !dbg !2492
  %bf.clear63 = and i32 %bf.load61, 262144, !dbg !2492
  %tobool64 = icmp eq i32 %bf.clear63, 0, !dbg !2492
  br i1 %tobool64, label %land.lhs.true65, label %sw.bb83, !dbg !2492

land.lhs.true65:                                  ; preds = %land.lhs.true59
  %static_flag67 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2, !dbg !2492
  %19 = bitcast [4 x i8]* %static_flag67 to i32*, !dbg !2492
  %bf.load68 = load i32* %19, align 8, !dbg !2492
  %bf.clear70 = and i32 %bf.load68, 262144, !dbg !2492
  %tobool71 = icmp eq i32 %bf.clear70, 0, !dbg !2492
  %cmp73 = icmp eq i64 %6, 0, !dbg !2492
  %or.cond12 = and i1 %tobool71, %cmp73, !dbg !2492
  %cmp76 = icmp sgt i64 %4, -1, !dbg !2492
  %or.cond13 = and i1 %or.cond12, %cmp76, !dbg !2492
  br i1 %or.cond13, label %if.then, label %sw.bb83, !dbg !2492

if.then:                                          ; preds = %land.lhs.true65
  %cmp78 = icmp eq i32 %code, 63, !dbg !2493
  br i1 %cmp78, label %if.then80, label %if.end, !dbg !2493

if.then80:                                        ; preds = %if.then
  %sub81 = add i64 %4, -1, !dbg !2495
  %add = add i64 %sub81, %7, !dbg !2495
  call void @llvm.dbg.value(metadata !{i64 %add}, i64 0, metadata !1626), !dbg !2495
  br label %if.end, !dbg !2495

if.end:                                           ; preds = %if.then80, %if.then
  %int1l.0 = phi i64 [ %add, %if.then80 ], [ %4, %if.then ]
  %div = udiv i64 %int1l.0, %7, !dbg !2496
  call void @llvm.dbg.value(metadata !{i64 %div}, i64 0, metadata !1630), !dbg !2496
  store i64 %div, i64* %low, align 8, !dbg !2496, !tbaa !1700
  call void @llvm.dbg.value(metadata !1829, i64 0, metadata !1631), !dbg !2496
  store i64 0, i64* %hi, align 8, !dbg !2496, !tbaa !1700
  br label %sw.epilog, !dbg !2497

sw.bb83:                                          ; preds = %land.lhs.true65, %land.lhs.true59, %sw.bb54, %land.end
  %cmp84 = icmp eq i64 %9, 0, !dbg !2498
  %cmp87 = icmp eq i64 %7, 1, !dbg !2498
  %or.cond14 = and i1 %cmp84, %cmp87, !dbg !2498
  br i1 %or.cond14, label %if.then89, label %if.end90, !dbg !2498

if.then89:                                        ; preds = %sw.bb83
  call void @llvm.dbg.value(metadata !{i64 %4}, i64 0, metadata !1630), !dbg !2499
  store i64 %4, i64* %low, align 8, !dbg !2499, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %6}, i64 0, metadata !1631), !dbg !2499
  store i64 %6, i64* %hi, align 8, !dbg !2499, !tbaa !1700
  br label %sw.epilog, !dbg !2501

if.end90:                                         ; preds = %sw.bb83
  %notlhs = icmp ne i64 %4, %7, !dbg !2502
  %notrhs = icmp ne i64 %6, %9, !dbg !2502
  %or.cond15.not = or i1 %notrhs, %notlhs, !dbg !2502
  %20 = or i64 %6, %4, !dbg !2502
  %21 = icmp eq i64 %20, 0, !dbg !2502
  %or.cond38 = or i1 %or.cond15.not, %21, !dbg !2502
  br i1 %or.cond38, label %if.end103, label %if.then102, !dbg !2502

if.then102:                                       ; preds = %if.end90
  call void @llvm.dbg.value(metadata !2037, i64 0, metadata !1630), !dbg !2503
  store i64 1, i64* %low, align 8, !dbg !2503, !tbaa !1700
  call void @llvm.dbg.value(metadata !1829, i64 0, metadata !1631), !dbg !2503
  store i64 0, i64* %hi, align 8, !dbg !2503, !tbaa !1700
  br label %sw.epilog, !dbg !2505

if.end103:                                        ; preds = %if.end90
  %call104 = call i32 @div_and_round_double(i32 %code, i32 %bf.clear, i64 %4, i64 %6, i64 %7, i64 %9, i64* %low, i64* %hi, i64* %garbagel, i64* %garbageh) #7, !dbg !2506
  call void @llvm.dbg.value(metadata !{i32 %call104}, i64 0, metadata !1638), !dbg !2506
  br label %sw.epilog, !dbg !2507

sw.bb105:                                         ; preds = %land.end, %land.end, %land.end
  %cmp106 = icmp eq i64 %9, 0, !dbg !2508
  %cmp109 = icmp sgt i64 %7, 0, !dbg !2508
  %or.cond17 = and i1 %cmp106, %cmp109, !dbg !2508
  br i1 %or.cond17, label %land.lhs.true111, label %sw.bb139, !dbg !2508

land.lhs.true111:                                 ; preds = %sw.bb105
  %static_flag113 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2, !dbg !2508
  %22 = bitcast [4 x i8]* %static_flag113 to i32*, !dbg !2508
  %bf.load114 = load i32* %22, align 8, !dbg !2508
  %bf.clear116 = and i32 %bf.load114, 262144, !dbg !2508
  %tobool117 = icmp eq i32 %bf.clear116, 0, !dbg !2508
  br i1 %tobool117, label %land.lhs.true118, label %sw.bb139, !dbg !2508

land.lhs.true118:                                 ; preds = %land.lhs.true111
  %static_flag120 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2, !dbg !2508
  %23 = bitcast [4 x i8]* %static_flag120 to i32*, !dbg !2508
  %bf.load121 = load i32* %23, align 8, !dbg !2508
  %bf.clear123 = and i32 %bf.load121, 262144, !dbg !2508
  %tobool124 = icmp eq i32 %bf.clear123, 0, !dbg !2508
  %cmp126 = icmp eq i64 %6, 0, !dbg !2508
  %or.cond18 = and i1 %tobool124, %cmp126, !dbg !2508
  %cmp129 = icmp sgt i64 %4, -1, !dbg !2508
  %or.cond19 = and i1 %or.cond18, %cmp129, !dbg !2508
  br i1 %or.cond19, label %if.then131, label %sw.bb139, !dbg !2508

if.then131:                                       ; preds = %land.lhs.true118
  %cmp132 = icmp eq i32 %code, 67, !dbg !2509
  br i1 %cmp132, label %if.then134, label %if.end137, !dbg !2509

if.then134:                                       ; preds = %if.then131
  %sub135 = add i64 %4, -1, !dbg !2511
  %add136 = add i64 %sub135, %7, !dbg !2511
  call void @llvm.dbg.value(metadata !{i64 %add136}, i64 0, metadata !1626), !dbg !2511
  br label %if.end137, !dbg !2511

if.end137:                                        ; preds = %if.then134, %if.then131
  %int1l.1 = phi i64 [ %add136, %if.then134 ], [ %4, %if.then131 ]
  %rem = urem i64 %int1l.1, %7, !dbg !2512
  call void @llvm.dbg.value(metadata !{i64 %rem}, i64 0, metadata !1630), !dbg !2512
  store i64 %rem, i64* %low, align 8, !dbg !2512, !tbaa !1700
  call void @llvm.dbg.value(metadata !1829, i64 0, metadata !1631), !dbg !2512
  store i64 0, i64* %hi, align 8, !dbg !2512, !tbaa !1700
  br label %sw.epilog, !dbg !2513

sw.bb139:                                         ; preds = %land.lhs.true118, %land.lhs.true111, %sw.bb105, %land.end
  %call140 = call i32 @div_and_round_double(i32 %code, i32 %bf.clear, i64 %4, i64 %6, i64 %7, i64 %9, i64* %garbagel, i64* %garbageh, i64* %low, i64* %hi) #7, !dbg !2514
  call void @llvm.dbg.value(metadata !{i32 %call140}, i64 0, metadata !1638), !dbg !2514
  br label %sw.epilog, !dbg !2515

sw.bb141:                                         ; preds = %land.end, %land.end
  %tobool142 = icmp eq i32 %bf.clear, 0, !dbg !2516
  br i1 %tobool142, label %if.else, label %if.then143, !dbg !2516

if.then143:                                       ; preds = %sw.bb141
  %cmp144 = icmp ult i64 %6, %9, !dbg !2517
  br i1 %cmp144, label %if.end167.thr_comm, label %lor.rhs, !dbg !2517

lor.rhs:                                          ; preds = %if.then143
  %cmp146 = icmp eq i64 %6, %9, !dbg !2517
  %cmp149 = icmp ult i64 %4, %7, !dbg !2517
  %cmp149. = and i1 %cmp146, %cmp149, !dbg !2517
  br label %if.end167, !dbg !2517

if.else:                                          ; preds = %sw.bb141
  %cmp154 = icmp slt i64 %6, %9, !dbg !2518
  br i1 %cmp154, label %if.end167.thr_comm, label %lor.rhs156, !dbg !2518

lor.rhs156:                                       ; preds = %if.else
  %cmp157 = icmp eq i64 %6, %9, !dbg !2518
  %cmp160 = icmp ult i64 %4, %7, !dbg !2518
  %cmp160. = and i1 %cmp157, %cmp160, !dbg !2518
  br label %if.end167, !dbg !2518

if.end167.thr_comm:                               ; preds = %if.then143, %if.else
  call void @llvm.dbg.value(metadata !{i64 %conv153}, i64 0, metadata !1630), !dbg !2405
  call void @llvm.dbg.value(metadata !2037, i64 0, metadata !1630), !dbg !2405
  store i64 1, i64* %low, align 8, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2519
  %cmp171tmp41 = icmp eq i32 %code, 78, !dbg !2519
  br i1 %cmp171tmp41, label %if.then173, label %if.else174, !dbg !2519

if.end167:                                        ; preds = %lor.rhs156, %lor.rhs
  %.sink20 = phi i1 [ %cmp160., %lor.rhs156 ], [ %cmp149., %lor.rhs ]
  %conv153 = zext i1 %.sink20 to i64
  call void @llvm.dbg.value(metadata !{i64 %conv153}, i64 0, metadata !1630), !dbg !2405
  store i64 %conv153, i64* %low, align 8, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2519
  %cmp168 = icmp eq i32 %code, 78, !dbg !2519
  %cmp171tmp = xor i1 %.sink20, %cmp168, !dbg !2519
  br i1 %cmp171tmp, label %if.else174, label %if.then173, !dbg !2519

if.then173:                                       ; preds = %if.end167.thr_comm, %if.end167
  call void @llvm.dbg.value(metadata !{i64 %4}, i64 0, metadata !1630), !dbg !2520
  store i64 %4, i64* %low, align 8, !dbg !2520, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %6}, i64 0, metadata !1631), !dbg !2520
  store i64 %6, i64* %hi, align 8, !dbg !2520, !tbaa !1700
  br label %sw.epilog, !dbg !2520

if.else174:                                       ; preds = %if.end167.thr_comm, %if.end167
  call void @llvm.dbg.value(metadata !{i64 %7}, i64 0, metadata !1630), !dbg !2521
  store i64 %7, i64* %low, align 8, !dbg !2521, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64 %9}, i64 0, metadata !1631), !dbg !2521
  store i64 %9, i64* %hi, align 8, !dbg !2521, !tbaa !1700
  br label %sw.epilog

sw.default:                                       ; preds = %land.end
  call void @fancy_abort(i8* getelementptr inbounds ([54 x i8]* @.str, i64 0, i64 0), i32 1671, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.int_const_binop, i64 0, i64 0)) #8, !dbg !2522
  unreachable, !dbg !2522

sw.epilog:                                        ; preds = %if.then173, %if.else174, %sw.bb139, %if.end137, %if.end103, %if.then102, %if.then89, %if.end, %sw.bb52, %neg_double.exit, %sw.bb43, %sw.bb38, %sw.bb31, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb
  %overflow.0 = phi i32 [ 0, %if.then173 ], [ 0, %if.else174 ], [ %call140, %sw.bb139 ], [ 0, %if.end137 ], [ 0, %if.then89 ], [ %call104, %if.end103 ], [ 0, %if.then102 ], [ 0, %if.end ], [ %call53, %sw.bb52 ], [ %17, %neg_double.exit ], [ %14, %sw.bb43 ], [ 0, %sw.bb38 ], [ 0, %sw.bb31 ], [ 0, %sw.bb26 ], [ 0, %sw.bb24 ], [ 0, %sw.bb22 ], [ 0, %sw.bb ]
  %no_overflow.0 = phi i32 [ 0, %if.then173 ], [ 0, %if.else174 ], [ 0, %sw.bb139 ], [ 0, %if.end137 ], [ 0, %if.then89 ], [ 0, %if.end103 ], [ 0, %if.then102 ], [ 0, %if.end ], [ 0, %sw.bb52 ], [ 0, %neg_double.exit ], [ 0, %sw.bb43 ], [ 0, %sw.bb38 ], [ 1, %sw.bb31 ], [ 0, %sw.bb26 ], [ 0, %sw.bb24 ], [ 0, %sw.bb22 ], [ 0, %sw.bb ]
  call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !1631), !dbg !2523
  %24 = load i64* %hi, align 8, !dbg !2523, !tbaa !1700
  br i1 %3, label %land.lhs.true177, label %if.else206, !dbg !2523

land.lhs.true177:                                 ; preds = %sw.epilog
  switch i64 %24, label %if.else206 [
    i64 0, label %land.lhs.true180
    i64 -1, label %land.lhs.true185
  ], !dbg !2523

land.lhs.true180:                                 ; preds = %land.lhs.true177
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2523
  %25 = load i64* %low, align 8, !dbg !2523, !tbaa !1700
  %cmp181 = icmp sgt i64 %25, -1, !dbg !2523
  %cmp189.old = icmp eq i32 %overflow.0, 0, !dbg !2523
  %or.cond43 = and i1 %cmp181, %cmp189.old, !dbg !2523
  br i1 %or.cond43, label %land.lhs.true191, label %if.else206, !dbg !2523

land.lhs.true185:                                 ; preds = %land.lhs.true177
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2523
  %26 = load i64* %low, align 8, !dbg !2523, !tbaa !1700
  %cmp186 = icmp slt i64 %26, 0, !dbg !2523
  %cmp189 = icmp eq i32 %overflow.0, 0, !dbg !2523
  %or.cond21 = and i1 %cmp186, %cmp189, !dbg !2523
  br i1 %or.cond21, label %land.lhs.true191, label %if.else206, !dbg !2523

land.lhs.true191:                                 ; preds = %land.lhs.true180, %land.lhs.true185
  %27 = phi i64 [ %26, %land.lhs.true185 ], [ %25, %land.lhs.true180 ]
  %public_flag = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2, !dbg !2523
  %28 = bitcast [4 x i8]* %public_flag to i32*, !dbg !2523
  %bf.load193 = load i32* %28, align 8, !dbg !2523
  %bf.clear195 = and i32 %bf.load193, 524288, !dbg !2523
  %tobool196 = icmp eq i32 %bf.clear195, 0, !dbg !2523
  br i1 %tobool196, label %land.lhs.true197, label %if.else206, !dbg !2523

land.lhs.true197:                                 ; preds = %land.lhs.true191
  %public_flag199 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2, !dbg !2523
  %29 = bitcast [4 x i8]* %public_flag199 to i32*, !dbg !2523
  %bf.load200 = load i32* %29, align 8, !dbg !2523
  %bf.clear202 = and i32 %bf.load200, 524288, !dbg !2523
  %tobool203 = icmp eq i32 %bf.clear202, 0, !dbg !2523
  br i1 %tobool203, label %if.then204, label %if.else206, !dbg !2523

if.then204:                                       ; preds = %land.lhs.true197
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2524
  %call205 = call %union.tree_node* @size_int_type_wide(i64 %27, %union.tree_node* %0) #7, !dbg !2524
  br label %return, !dbg !2524

if.else206:                                       ; preds = %land.lhs.true177, %sw.epilog, %land.lhs.true180, %land.lhs.true197, %land.lhs.true191, %land.lhs.true185
  %30 = phi i64 [ %24, %land.lhs.true197 ], [ %24, %land.lhs.true191 ], [ -1, %land.lhs.true185 ], [ 0, %land.lhs.true180 ], [ %24, %sw.epilog ], [ %24, %land.lhs.true177 ]
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2525
  %31 = load i64* %low, align 8, !dbg !2525, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !1631), !dbg !2525
  %call207 = call %union.tree_node* @build_int_2_wide(i64 %31, i64 %30) #9, !dbg !2525
  call void @llvm.dbg.value(metadata !{%union.tree_node* %call207}, i64 0, metadata !1634), !dbg !2525
  %32 = load %union.tree_node** %type1, align 8, !dbg !2527, !tbaa !1705
  %type211 = getelementptr inbounds %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 1, !dbg !2527
  store %union.tree_node* %32, %union.tree_node** %type211, align 8, !dbg !2527, !tbaa !1705
  %tobool221 = icmp eq i32 %bf.clear, 0, !dbg !2528
  %brmerge = or i1 %tobool221, %3, !dbg !2528
  %tobool225 = icmp ne i32 %overflow.0, 0, !dbg !2528
  %tobool225. = and i1 %brmerge, %tobool225, !dbg !2528
  %land.ext227 = zext i1 %tobool225. to i32
  %call228 = call i32 @force_fit_type(%union.tree_node* %call207, i32 %land.ext227) #7
  %lnot232 = icmp eq i32 %no_overflow.0, 0
  %not.tobool229 = icmp ne i32 %call228, 0
  %.lnot232 = and i1 %lnot232, %not.tobool229
  %land.ext220 = zext i1 %.lnot232 to i32
  %public_flag237 = getelementptr inbounds %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 2
  %33 = bitcast [4 x i8]* %public_flag237 to i32*
  %bf.load238 = load i32* %33, align 8
  %public_flag243 = getelementptr inbounds %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast [4 x i8]* %public_flag243 to i32*
  %bf.load244 = load i32* %34, align 8
  %public_flag249 = getelementptr inbounds %union.tree_node* %call207, i64 0, i32 0, i32 0, i32 2
  %35 = bitcast [4 x i8]* %public_flag249 to i32*
  %bf.load250 = load i32* %35, align 8
  %or2419 = shl nuw nsw i32 %land.ext220, 19
  %bf.lshr23910 = or i32 %bf.load244, %bf.load238
  %bf.lshr23910.masked = and i32 %bf.lshr23910, 524288
  %bf.shl = or i32 %bf.lshr23910.masked, %or2419
  %bf.clear251 = and i32 %bf.load250, -524289
  %bf.set = or i32 %bf.shl, %bf.clear251
  store i32 %bf.set, i32* %35, align 8
  %tobool259 = icmp eq i32 %bf.shl, 0, !dbg !2529
  %or.cond36 = and i1 %3, %tobool259, !dbg !2529
  br i1 %or.cond36, label %land.lhs.true260, label %if.end278, !dbg !2529

land.lhs.true260:                                 ; preds = %if.else206
  %int_cst262 = getelementptr inbounds %union.tree_node* %call207, i64 0, i32 0, i32 2, !dbg !2529
  %high263 = getelementptr inbounds i32* %int_cst262, i64 2, !dbg !2529
  %36 = bitcast i32* %high263 to i64*, !dbg !2529
  %37 = load i64* %36, align 8, !dbg !2529, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64* %hi}, i64 0, metadata !1631), !dbg !2529
  %38 = load i64* %hi, align 8, !dbg !2529, !tbaa !1700
  %cmp264 = icmp eq i64 %37, %38, !dbg !2529
  br i1 %cmp264, label %lor.lhs.false266, label %if.then272, !dbg !2529

lor.lhs.false266:                                 ; preds = %land.lhs.true260
  %low269 = bitcast i32* %int_cst262 to i64*, !dbg !2529
  %39 = load i64* %low269, align 8, !dbg !2529, !tbaa !1700
  call void @llvm.dbg.value(metadata !{i64* %low}, i64 0, metadata !1630), !dbg !2529
  %40 = load i64* %low, align 8, !dbg !2529, !tbaa !1700
  %cmp270 = icmp eq i64 %39, %40, !dbg !2529
  br i1 %cmp270, label %if.end278, label %if.then272, !dbg !2529

if.then272:                                       ; preds = %lor.lhs.false266, %land.lhs.true260
  %bf.set277 = or i32 %bf.load250, 524288, !dbg !2530
  store i32 %bf.set277, i32* %35, align 8, !dbg !2530
  br label %if.end278, !dbg !2530

if.end278:                                        ; preds = %lor.lhs.false266, %if.then272, %if.else206
  %bf.load281 = phi i32 [ %bf.set, %lor.lhs.false266 ], [ %bf.set277, %if.then272 ], [ %bf.set, %if.else206 ]
  %bf.load286 = load i32* %33, align 8, !dbg !2531
  %bf.load292 = load i32* %34, align 8, !dbg !2531
  %41 = lshr i32 %bf.load281, 1, !dbg !2531
  %bf.lshr2876 = or i32 %41, %bf.load286, !dbg !2531
  %bf.lshr2934 = or i32 %bf.lshr2876, %bf.load292, !dbg !2531
  %bf.shl300 = and i32 %bf.lshr2934, 262144, !dbg !2531
  %bf.clear301 = and i32 %bf.load281, -262145, !dbg !2531
  %bf.set302 = or i32 %bf.shl300, %bf.clear301, !dbg !2531
  store i32 %bf.set302, i32* %35, align 8, !dbg !2531
  br label %return, !dbg !2532

return:                                           ; preds = %if.end278, %if.then204
  %retval.0 = phi %union.tree_node* [ %call207, %if.end278 ], [ %call205, %if.then204 ]
  ret %union.tree_node* %retval.0, !dbg !2533
}
