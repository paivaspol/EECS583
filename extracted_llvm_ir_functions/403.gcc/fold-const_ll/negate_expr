define internal fastcc %union.tree_node* @negate_expr(%union.tree_node* %t) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %t, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !3
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %if.end
  %2 = phi %union.tree_node* [ %0, %if.end ], [ %6, %land.rhs ]
  %t.addr.0 = phi %union.tree_node* [ %t, %if.end ], [ %4, %land.rhs ]
  %code = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 2
  %3 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !3
  %cmp15 = icmp eq %union.tree_node* %4, %1
  br i1 %cmp15, label %while.end, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true
  %type19 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type19, i64 0, i32 6
  %5 = bitcast [4 x i8]* %mode to i32*
  %bf.load20 = load i32* %5, align 4
  %type26 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type26, align 8, !tbaa !3
  %type27 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode28 = getelementptr inbounds %struct.tree_type* %type27, i64 0, i32 6
  %7 = bitcast [4 x i8]* %mode28 to i32*
  %bf.load29 = load i32* %7, align 4
  %bf.lshr143 = xor i32 %bf.load29, %bf.load20
  %8 = and i32 %bf.lshr143, 65024
  %cmp32 = icmp eq i32 %8, 0
  br i1 %cmp32, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %land.lhs.true16
  %unsigned_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load36 = load i32* %9, align 8
  %unsigned_flag45 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast [4 x i8]* %unsigned_flag45 to i32*
  %bf.load46 = load i32* %10, align 8
  %bf.lshr37144 = xor i32 %bf.load46, %bf.load36
  %11 = and i32 %bf.lshr37144, 8192
  %cmp49 = icmp eq i32 %11, 0
  br i1 %cmp49, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond, %land.lhs.true, %land.lhs.true16, %land.rhs
  switch i32 %bf.clear, label %sw.epilog [
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 77, label %sw.bb73
    i32 60, label %sw.bb78
  ]

sw.bb:                                            ; preds = %while.end, %while.end
  %unsigned_flag58 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast [4 x i8]* %unsigned_flag58 to i32*
  %bf.load59 = load i32* %12, align 8
  %bf.clear61 = and i32 %bf.load59, 8192
  %tobool = icmp eq i32 %bf.clear61, 0
  br i1 %tobool, label %land.lhs.true62, label %sw.epilog

land.lhs.true62:                                  ; preds = %sw.bb
  %call = tail call %union.tree_node* @build1(i32 77, %union.tree_node* %0, %union.tree_node* %t.addr.0) #9
  %call63 = tail call %union.tree_node* @fold(%union.tree_node* %call) #7
  %cmp64 = icmp eq %union.tree_node* %call63, null
  br i1 %cmp64, label %sw.epilog, label %land.lhs.true65

land.lhs.true65:                                  ; preds = %land.lhs.true62
  %public_flag = getelementptr inbounds %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load67 = load i32* %13, align 8
  %bf.clear69 = and i32 %bf.load67, 524288
  %tobool70 = icmp eq i32 %bf.clear69, 0
  br i1 %tobool70, label %return, label %sw.epilog

sw.bb73:                                          ; preds = %while.end
  %operands75 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 2
  %arrayidx76 = bitcast i32* %operands75 to %union.tree_node**
  %14 = load %union.tree_node** %arrayidx76, align 8, !tbaa !3
  %call77 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %14) #9
  br label %return

sw.bb78:                                          ; preds = %while.end
  %code80 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast [4 x i8]* %code80 to i32*
  %bf.load81 = load i32* %15, align 8
  %bf.clear82 = and i32 %bf.load81, 255
  switch i32 %bf.clear82, label %if.then100 [
    i32 7, label %lor.lhs.false98
    i32 8, label %land.lhs.true90
  ]

land.lhs.true90:                                  ; preds = %sw.bb78
  %type92 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load %union.tree_node** %type92, align 8, !tbaa !3
  %code94 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 2
  %17 = bitcast [4 x i8]* %code94 to i32*
  %bf.load95 = load i32* %17, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %cmp97 = icmp ne i32 %bf.clear96, 7
  %18 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !4
  %tobool99 = icmp ne i32 %18, 0
  %or.cond = or i1 %cmp97, %tobool99
  br i1 %or.cond, label %if.then100, label %sw.epilog

lor.lhs.false98:                                  ; preds = %sw.bb78
  %.old = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !4
  %tobool99.old = icmp eq i32 %.old, 0
  br i1 %tobool99.old, label %sw.epilog, label %if.then100

if.then100:                                       ; preds = %lor.lhs.false98, %land.lhs.true90, %sw.bb78
  %type102 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 1
  %19 = load %union.tree_node** %type102, align 8, !tbaa !3
  %operands104 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 2
  %arrayidx105 = getelementptr inbounds i32* %operands104, i64 2
  %20 = bitcast i32* %arrayidx105 to %union.tree_node**
  %21 = load %union.tree_node** %20, align 8, !tbaa !3
  %arrayidx108 = bitcast i32* %operands104 to %union.tree_node**
  %22 = load %union.tree_node** %arrayidx108, align 8, !tbaa !3
  %call109 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %19, %union.tree_node* %21, %union.tree_node* %22) #9
  %call110 = tail call %union.tree_node* @fold(%union.tree_node* %call109) #7
  %call111 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call110) #9
  br label %return

sw.epilog:                                        ; preds = %land.lhs.true65, %land.lhs.true62, %sw.bb, %lor.lhs.false98, %while.end, %land.lhs.true90
  %type114 = getelementptr inbounds %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type114, align 8, !tbaa !3
  %call115 = tail call %union.tree_node* @build1(i32 77, %union.tree_node* %23, %union.tree_node* %t.addr.0) #9
  %call116 = tail call %union.tree_node* @fold(%union.tree_node* %call115) #7
  %call117 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call116) #9
  br label %return

return:                                           ; preds = %land.lhs.true65, %entry, %sw.epilog, %if.then100, %sw.bb73
  %retval.0 = phi %union.tree_node* [ %call117, %sw.epilog ], [ %call111, %if.then100 ], [ %call77, %sw.bb73 ], [ null, %entry ], [ %call63, %land.lhs.true65 ]
  ret %union.tree_node* %retval.0
}
