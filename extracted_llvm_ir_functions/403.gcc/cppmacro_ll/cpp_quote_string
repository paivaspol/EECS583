define i8* @cpp_quote_string(i8* %dest, i8* nocapture %src, i32 %len) #0 {
entry:
  %tobool27 = icmp eq i32 %len, 0
  br i1 %tobool27, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.cond.backedge
  %dec30.in = phi i32 [ %dec30, %while.cond.backedge ], [ %len, %entry ]
  %dest.addr.029 = phi i8* [ %dest.addr.0.be, %while.cond.backedge ], [ %dest, %entry ]
  %src.addr.028 = phi i8* [ %incdec.ptr, %while.cond.backedge ], [ %src, %entry ]
  %dec30 = add i32 %dec30.in, -1
  %incdec.ptr = getelementptr inbounds i8* %src.addr.028, i64 1
  %0 = load i8* %src.addr.028, align 1, !tbaa !0
  %conv = zext i8 %0 to i32
  switch i8 %0, label %if.else [
    i8 92, label %if.then
    i8 34, label %if.then
  ]

if.then:                                          ; preds = %while.body, %while.body
  %incdec.ptr5 = getelementptr inbounds i8* %dest.addr.029, i64 1
  store i8 92, i8* %dest.addr.029, align 1, !tbaa !0
  %incdec.ptr6 = getelementptr inbounds i8* %dest.addr.029, i64 2
  store i8 %0, i8* %incdec.ptr5, align 1, !tbaa !0
  br label %while.cond.backedge

if.else:                                          ; preds = %while.body
  %idxprom = zext i8 %0 to i64
  %arrayidx = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom
  %1 = load i16* %arrayidx, align 2, !tbaa !2
  %and9 = and i16 %1, 16
  %tobool10 = icmp eq i16 %and9, 0
  br i1 %tobool10, label %if.else13, label %if.then11

if.then11:                                        ; preds = %if.else
  %incdec.ptr12 = getelementptr inbounds i8* %dest.addr.029, i64 1
  store i8 %0, i8* %dest.addr.029, align 1, !tbaa !0
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then11, %if.else13, %if.then
  %dest.addr.0.be = phi i8* [ %incdec.ptr6, %if.then ], [ %incdec.ptr12, %if.then11 ], [ %add.ptr, %if.else13 ]
  %tobool = icmp eq i32 %dec30, 0
  br i1 %tobool, label %while.end, label %while.body

if.else13:                                        ; preds = %if.else
  %call = tail call i32 (i8*, i8*, ...)* @sprintf(i8* %dest.addr.029, i8* getelementptr inbounds ([6 x i8]* @.str, i64 0, i64 0), i32 %conv) #7
  %add.ptr = getelementptr inbounds i8* %dest.addr.029, i64 4
  br label %while.cond.backedge

while.end:                                        ; preds = %while.cond.backedge, %entry
  %dest.addr.0.lcssa = phi i8* [ %dest, %entry ], [ %dest.addr.0.be, %while.cond.backedge ]
  ret i8* %dest.addr.0.lcssa
}
