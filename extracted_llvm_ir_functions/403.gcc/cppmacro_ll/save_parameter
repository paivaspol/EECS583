define internal fastcc i32 @save_parameter(%struct.cpp_reader* %pfile, %struct.cpp_macro* nocapture %macro, %struct.cpp_hashnode* %node) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_reader* %pfile}, i64 0, metadata !659), !dbg !1627
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_macro* %macro}, i64 0, metadata !660), !dbg !1628
  tail call void @llvm.dbg.value(metadata !{%struct.cpp_hashnode* %node}, i64 0, metadata !661), !dbg !1629
  %arg_index = getelementptr inbounds %struct.cpp_hashnode* %node, i64 0, i32 1, !dbg !1630
  %0 = load i16* %arg_index, align 2, !dbg !1630, !tbaa !886
  %tobool = icmp eq i16 %0, 0, !dbg !1630
  br i1 %tobool, label %if.end, label %if.then, !dbg !1630

if.then:                                          ; preds = %entry
  %str = getelementptr inbounds %struct.cpp_hashnode* %node, i64 0, i32 0, i32 1, !dbg !1631
  %1 = load i8** %str, align 8, !dbg !1631, !tbaa !894
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([31 x i8]* @.str15, i64 0, i64 0), i8* %1) #8, !dbg !1631
  br label %return, !dbg !1633

if.end:                                           ; preds = %entry
  %a_buff = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 6, !dbg !1634
  %2 = load %struct._cpp_buff** %a_buff, align 8, !dbg !1634, !tbaa !894
  %limit = getelementptr inbounds %struct._cpp_buff* %2, i64 0, i32 3, !dbg !1634
  %3 = load i8** %limit, align 8, !dbg !1634, !tbaa !894
  %cur = getelementptr inbounds %struct._cpp_buff* %2, i64 0, i32 2, !dbg !1634
  %4 = load i8** %cur, align 8, !dbg !1634, !tbaa !894
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !1634
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !1634
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1634
  %paramc = getelementptr inbounds %struct.cpp_macro* %macro, i64 0, i32 4, !dbg !1634
  %5 = load i16* %paramc, align 2, !dbg !1634, !tbaa !886
  %conv = zext i16 %5 to i64, !dbg !1634
  %add = shl nuw nsw i64 %conv, 3, !dbg !1634
  %mul = add i64 %add, 8, !dbg !1634
  %cmp = icmp ult i64 %sub.ptr.sub, %mul, !dbg !1634
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !1634

if.then4:                                         ; preds = %if.end
  tail call void @_cpp_extend_buff(%struct.cpp_reader* %pfile, %struct._cpp_buff** %a_buff, i64 8) #8, !dbg !1635
  %.pre = load i16* %paramc, align 2, !dbg !1636, !tbaa !886
  %.pre22 = load %struct._cpp_buff** %a_buff, align 8, !dbg !1636, !tbaa !894
  %cur9.phi.trans.insert = getelementptr inbounds %struct._cpp_buff* %.pre22, i64 0, i32 2
  %.pre23 = load i8** %cur9.phi.trans.insert, align 8, !dbg !1636, !tbaa !894
  br label %if.end6, !dbg !1635

if.end6:                                          ; preds = %if.then4, %if.end
  %6 = phi i8* [ %.pre23, %if.then4 ], [ %4, %if.end ]
  %7 = phi i16 [ %.pre, %if.then4 ], [ %5, %if.end ]
  %inc = add i16 %7, 1, !dbg !1636
  store i16 %inc, i16* %paramc, align 2, !dbg !1636, !tbaa !886
  %idxprom = zext i16 %7 to i64, !dbg !1636
  %8 = bitcast i8* %6 to %struct.cpp_hashnode**, !dbg !1636
  %arrayidx = getelementptr inbounds %struct.cpp_hashnode** %8, i64 %idxprom, !dbg !1636
  store %struct.cpp_hashnode* %node, %struct.cpp_hashnode** %arrayidx, align 8, !dbg !1636, !tbaa !894
  store i16 %inc, i16* %arg_index, align 2, !dbg !1637, !tbaa !886
  br label %return, !dbg !1638

return:                                           ; preds = %if.end6, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.end6 ]
  ret i32 %retval.0, !dbg !1638
}
