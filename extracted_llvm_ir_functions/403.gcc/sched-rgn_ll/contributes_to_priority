define internal i32 @contributes_to_priority(%struct.rtx_def* nocapture %next, %struct.rtx_def* nocapture %insn) #5 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %next, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtint, align 4, !tbaa !3
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx1 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %2 = load %struct.basic_block_def** %arrayidx1, align 8, !tbaa !0
  %index = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !3
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint4 = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %4 = load i32* %rtint4, align 4, !tbaa !3
  %idxprom5 = sext i32 %4 to i64
  %arrayidx8 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom5
  %5 = load %struct.basic_block_def** %arrayidx8, align 8, !tbaa !0
  %index9 = getelementptr inbounds %struct.basic_block_def* %5, i64 0, i32 11
  %6 = load i32* %index9, align 4, !tbaa !3
  %cmp = icmp eq i32 %3, %6
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}
