define internal fastcc i32 @may_trap_exp(%struct.rtx_def* %x, i32 %is_store) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %tobool = icmp eq i32 %is_store, 0
  %cmp2 = icmp eq i32 %bf.clear, 66
  br i1 %tobool, label %if.end5, label %if.then1

if.then1:                                         ; preds = %if.end
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then1
  %call = tail call i32 @may_trap_p(%struct.rtx_def* %x) #7
  %tobool3 = icmp eq i32 %call, 0
  br i1 %tobool3, label %if.else, label %return

if.else:                                          ; preds = %land.lhs.true, %if.then1
  br label %return

if.end5:                                          ; preds = %if.end
  br i1 %cmp2, label %if.then7, label %if.else202

if.then7:                                         ; preds = %if.end5
  %bf.clear9 = and i32 %bf.load, 134217728
  %tobool10 = icmp eq i32 %bf.clear9, 0
  br i1 %tobool10, label %if.end12, label %return

if.end12:                                         ; preds = %if.then7
  %call13 = tail call i32 @may_trap_p(%struct.rtx_def* %x) #7
  %tobool14 = icmp eq i32 %call13, 0
  br i1 %tobool14, label %return, label %if.end16

if.end16:                                         ; preds = %if.end12
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load17 = load i32* %2, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  switch i32 %bf.clear18, label %if.end201 [
    i32 61, label %return
    i32 75, label %land.lhs.true40
    i32 76, label %land.lhs.true40
    i32 135, label %land.lhs.true40
  ]

land.lhs.true40:                                  ; preds = %if.end16, %if.end16, %if.end16
  %fld44 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx46 = bitcast [1 x %union.rtunion_def]* %fld44 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx46, align 8, !tbaa !0
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load47 = load i32* %4, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  switch i32 %bf.clear48, label %lor.lhs.false120 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

lor.lhs.false120:                                 ; preds = %land.lhs.true40
  %arrayidx125 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx126, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load127 = load i32* %6, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  switch i32 %bf.clear128, label %if.end201 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

if.end201:                                        ; preds = %lor.lhs.false120, %if.end16
  br label %return

if.else202:                                       ; preds = %if.end5
  %call203 = tail call i32 @may_trap_p(%struct.rtx_def* %x) #7
  %tobool204 = icmp eq i32 %call203, 0
  br i1 %tobool204, label %if.end206, label %return

if.end206:                                        ; preds = %if.else202
  %idxprom322 = zext i32 %bf.clear to i64
  %arrayidx207 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom322
  %7 = load i8** %arrayidx207, align 8, !tbaa !0
  %arrayidx209 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom322
  %8 = load i8* %arrayidx209, align 1, !tbaa !1
  %9 = zext i8 %8 to i64
  br label %for.cond

for.cond:                                         ; preds = %if.end261, %if.end206
  %indvars.iv328 = phi i64 [ %indvars.iv.next329, %if.end261 ], [ %9, %if.end206 ]
  %insn_class.0 = phi i32 [ %insn_class.2, %if.end261 ], [ 0, %if.end206 ]
  %indvars.iv.next329 = add i64 %indvars.iv328, -1
  %10 = trunc i64 %indvars.iv328 to i32
  %cmp210 = icmp sgt i32 %10, 0
  br i1 %cmp210, label %for.body, label %return

for.body:                                         ; preds = %for.cond
  %arrayidx213 = getelementptr inbounds i8* %7, i64 %indvars.iv.next329
  %11 = load i8* %arrayidx213, align 1, !tbaa !1
  switch i8 %11, label %if.end261 [
    i8 101, label %if.then217
    i8 69, label %for.cond232.preheader
  ]

for.cond232.preheader:                            ; preds = %for.body
  %arrayidx235 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next329
  %rtvec = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem323 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem323, align 4, !tbaa !3
  %cmp236324 = icmp sgt i32 %13, 0
  br i1 %cmp236324, label %for.body238, label %if.end261

if.then217:                                       ; preds = %for.body
  %arrayidx220 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next329
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx221, align 8, !tbaa !0
  %call222 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %14, i32 0) #9
  %cmp223 = icmp sgt i32 %insn_class.0, %call222
  %cond = select i1 %cmp223, i32 %insn_class.0, i32 %call222
  br label %if.end261

for.cond232:                                      ; preds = %for.body238
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem, align 4, !tbaa !3
  %17 = trunc i64 %indvars.iv.next to i32
  %cmp236 = icmp slt i32 %17, %16
  br i1 %cmp236, label %for.body238, label %if.end261

for.body238:                                      ; preds = %for.cond232.preheader, %for.cond232
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond232 ], [ 0, %for.cond232.preheader ]
  %18 = phi %struct.rtvec_def* [ %15, %for.cond232 ], [ %12, %for.cond232.preheader ]
  %insn_class.1325 = phi i32 [ %cond252, %for.cond232 ], [ %insn_class.0, %for.cond232.preheader ]
  %arrayidx245 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 1, i64 %indvars.iv
  %19 = load %struct.rtx_def** %arrayidx245, align 8, !tbaa !0
  %call246 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %19, i32 0) #9
  %cmp247 = icmp sgt i32 %insn_class.1325, %call246
  %cond252 = select i1 %cmp247, i32 %insn_class.1325, i32 %call246
  %20 = and i32 %cond252, -2
  %21 = icmp eq i32 %20, 4
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %21, label %if.end261, label %for.cond232

if.end261:                                        ; preds = %for.cond232.preheader, %for.body238, %for.cond232, %for.body, %if.then217
  %insn_class.2 = phi i32 [ %cond, %if.then217 ], [ %insn_class.0, %for.body ], [ %insn_class.0, %for.cond232.preheader ], [ %cond252, %for.body238 ], [ %cond252, %for.cond232 ]
  %22 = and i32 %insn_class.2, -2
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %return, label %for.cond

return:                                           ; preds = %for.cond, %if.end261, %if.else202, %if.end16, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %land.lhs.true40, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %lor.lhs.false120, %if.end12, %if.then7, %land.lhs.true, %entry, %if.end201, %if.else
  %retval.0 = phi i32 [ 0, %if.else ], [ 3, %if.end201 ], [ 0, %entry ], [ 5, %land.lhs.true ], [ 4, %if.then7 ], [ 1, %if.end12 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %lor.lhs.false120 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %land.lhs.true40 ], [ 2, %if.end16 ], [ 5, %if.else202 ], [ %insn_class.0, %for.cond ], [ %insn_class.2, %if.end261 ]
  ret i32 %retval.0
}
