define internal fastcc void @update_live_1(i32 %src, %struct.rtx_def* nocapture %x) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.end164, label %while.cond

while.cond:                                       ; preds = %entry, %while.body
  %reg.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %0, %entry ]
  %1 = bitcast %struct.rtx_def* %reg.0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end164 [
    i32 63, label %while.body
    i32 133, label %while.body
    i32 132, label %while.body
    i32 64, label %while.body
    i32 39, label %if.then18
    i32 61, label %if.end47
  ]

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx14, align 8, !tbaa !0
  br label %while.cond

if.then18:                                        ; preds = %while.cond
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 0
  %4 = load i32* %num_elem, align 4, !tbaa !3
  %cmp22219 = icmp sgt i32 %4, 0
  br i1 %cmp22219, label %for.body.lr.ph, label %if.end164

for.body.lr.ph:                                   ; preds = %if.then18
  %5 = sext i32 %4 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %6 = phi %struct.rtvec_def* [ %3, %for.body.lr.ph ], [ %.pre245, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx26 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next
  %7 = load %struct.rtx_def** %arrayidx26, align 8, !tbaa !0
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx29, align 8, !tbaa !0
  %cmp30 = icmp eq %struct.rtx_def* %8, null
  br i1 %cmp30, label %for.cond.backedge, label %if.then31

for.cond.backedge:                                ; preds = %for.body, %if.then31
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp22 = icmp sgt i32 %9, 0
  br i1 %cmp22, label %for.cond.backedge.for.body_crit_edge, label %if.end164

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %.pre245 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  br label %for.body

if.then31:                                        ; preds = %for.body
  tail call fastcc void @update_live_1(i32 %src, %struct.rtx_def* %8) #9
  br label %for.cond.backedge

if.end47:                                         ; preds = %while.cond
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx49 to i32*
  %10 = load i32* %rtuint, align 4, !tbaa !3
  %cmp50 = icmp sgt i32 %10, 52
  br i1 %cmp50, label %for.cond140.preheader, label %lor.lhs.false51

for.cond140.preheader:                            ; preds = %if.end47
  %idxprom141 = sext i32 %src to i64
  %11 = load %struct.candidate** @candidate_table, align 8, !tbaa !0
  %nr_members144222 = getelementptr inbounds %struct.candidate* %11, i64 %idxprom141, i32 4, i32 1
  %12 = load i32* %nr_members144222, align 4, !tbaa !3
  %cmp145223 = icmp sgt i32 %12, 0
  br i1 %cmp145223, label %for.body147, label %if.end164

lor.lhs.false51:                                  ; preds = %if.end47
  %idxprom52 = sext i32 %10 to i64
  %arrayidx53 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom52
  %13 = load i8* %arrayidx53, align 1, !tbaa !1
  %tobool = icmp eq i8 %13, 0
  br i1 %tobool, label %if.then56, label %if.end164

if.then56:                                        ; preds = %lor.lhs.false51
  %.off = add i32 %10, -8
  %14 = icmp ult i32 %.off, 8
  %.off207 = add i32 %10, -21
  %15 = icmp ult i32 %.off207, 8
  %or.cond = or i1 %14, %15
  %.off208 = add i32 %10, -45
  %16 = icmp ult i32 %.off208, 8
  %or.cond214 = or i1 %or.cond, %16
  %.off209 = add i32 %10, -29
  %17 = icmp ult i32 %.off209, 8
  %or.cond216 = or i1 %or.cond214, %17
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear72 = and i32 %bf.lshr, 255
  br i1 %or.cond216, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then56
  %idxprom73211 = zext i32 %bf.clear72 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom73211
  %18 = load i32* %arrayidx74, align 4, !tbaa !11
  %cmp75 = icmp eq i32 %18, 5
  br i1 %cmp75, label %for.cond123.preheader.lr.ph, label %lor.rhs76

lor.rhs76:                                        ; preds = %cond.true
  %cmp82 = icmp eq i32 %18, 6
  %phitmp = select i1 %cmp82, i32 2, i32 1
  br label %for.cond123.preheader.lr.ph

cond.false:                                       ; preds = %if.then56
  switch i32 %bf.clear72, label %while.cond118.preheader [
    i32 18, label %cond.true88
    i32 24, label %cond.true96
  ]

cond.true88:                                      ; preds = %cond.false
  %19 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %19, 25
  %20 = and i32 %and, 1
  %21 = xor i32 %20, 3
  br label %for.cond123.preheader.lr.ph

cond.true96:                                      ; preds = %cond.false
  %22 = load i32* @target_flags, align 4, !tbaa !3
  %and97 = lshr i32 %22, 24
  %23 = and i32 %and97, 2
  %24 = xor i32 %23, 6
  br label %for.cond123.preheader.lr.ph

while.cond118.preheader:                          ; preds = %cond.false
  %idxprom104210 = zext i32 %bf.clear72 to i64
  %arrayidx105 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom104210
  %25 = load i8* %arrayidx105, align 1, !tbaa !1
  %conv = zext i8 %25 to i32
  %26 = load i32* @target_flags, align 4, !tbaa !3
  %and106 = lshr i32 %26, 23
  %27 = and i32 %and106, 4
  %28 = add i32 %27, 4
  %add = add i32 %conv, -1
  %sub109 = add i32 %add, %28
  %div = sdiv i32 %sub109, %28
  %cmp120230 = icmp sgt i32 %div, 0
  br i1 %cmp120230, label %for.cond123.preheader.lr.ph, label %if.end164

for.cond123.preheader.lr.ph:                      ; preds = %cond.true, %lor.rhs76, %cond.true88, %cond.true96, %while.cond118.preheader
  %j.0.ph247 = phi i32 [ %div, %while.cond118.preheader ], [ %24, %cond.true96 ], [ %21, %cond.true88 ], [ %phitmp, %lor.rhs76 ], [ 2, %cond.true ]
  %idxprom124 = sext i32 %src to i64
  %.pre = load %struct.candidate** @candidate_table, align 8, !tbaa !0
  br label %for.cond123.preheader

while.cond118.loopexit:                           ; preds = %for.body128, %for.cond123.preheader
  %29 = phi %struct.candidate* [ %30, %for.cond123.preheader ], [ %38, %for.body128 ]
  %cmp120 = icmp sgt i32 %dec119231, 0
  br i1 %cmp120, label %for.cond123.preheader, label %if.end164

for.cond123.preheader:                            ; preds = %for.cond123.preheader.lr.ph, %while.cond118.loopexit
  %30 = phi %struct.candidate* [ %.pre, %for.cond123.preheader.lr.ph ], [ %29, %while.cond118.loopexit ]
  %dec119231.in = phi i32 [ %j.0.ph247, %for.cond123.preheader.lr.ph ], [ %dec119231, %while.cond118.loopexit ]
  %dec119231 = add nsw i32 %dec119231.in, -1
  %nr_members225 = getelementptr inbounds %struct.candidate* %30, i64 %idxprom124, i32 4, i32 1
  %31 = load i32* %nr_members225, align 4, !tbaa !3
  %cmp126226 = icmp sgt i32 %31, 0
  br i1 %cmp126226, label %for.body128.lr.ph, label %while.cond118.loopexit

for.body128.lr.ph:                                ; preds = %for.cond123.preheader
  %add136 = add nsw i32 %dec119231, %10
  br label %for.body128

for.body128:                                      ; preds = %for.body128.lr.ph, %for.body128
  %indvars.iv239 = phi i64 [ 0, %for.body128.lr.ph ], [ %indvars.iv.next240, %for.body128 ]
  %32 = phi %struct.candidate* [ %30, %for.body128.lr.ph ], [ %38, %for.body128 ]
  %first_member = getelementptr inbounds %struct.candidate* %32, i64 %idxprom124, i32 4, i32 0
  %33 = load i32** %first_member, align 8, !tbaa !0
  %arrayidx133 = getelementptr inbounds i32* %33, i64 %indvars.iv239
  %34 = load i32* %arrayidx133, align 4, !tbaa !3
  %idxprom134 = sext i32 %34 to i64
  %35 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.varray_head_tag* %35, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx135 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom134
  %36 = load %struct.basic_block_def** %arrayidx135, align 8, !tbaa !0
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %36, i64 0, i32 8
  %37 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !0
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %37, i32 %add136) #7
  %indvars.iv.next240 = add i64 %indvars.iv239, 1
  %38 = load %struct.candidate** @candidate_table, align 8, !tbaa !0
  %nr_members = getelementptr inbounds %struct.candidate* %38, i64 %idxprom124, i32 4, i32 1
  %39 = load i32* %nr_members, align 4, !tbaa !3
  %40 = trunc i64 %indvars.iv.next240 to i32
  %cmp126 = icmp slt i32 %40, %39
  br i1 %cmp126, label %for.body128, label %while.cond118.loopexit

for.body147:                                      ; preds = %for.cond140.preheader, %for.body147
  %indvars.iv237 = phi i64 [ %indvars.iv.next238, %for.body147 ], [ 0, %for.cond140.preheader ]
  %41 = phi %struct.candidate* [ %47, %for.body147 ], [ %11, %for.cond140.preheader ]
  %first_member153 = getelementptr inbounds %struct.candidate* %41, i64 %idxprom141, i32 4, i32 0
  %42 = load i32** %first_member153, align 8, !tbaa !0
  %arrayidx154 = getelementptr inbounds i32* %42, i64 %indvars.iv237
  %43 = load i32* %arrayidx154, align 4, !tbaa !3
  %idxprom155 = sext i32 %43 to i64
  %44 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data156 = getelementptr inbounds %struct.varray_head_tag* %44, i64 0, i32 4
  %bb157 = bitcast %union.varray_data_tag* %data156 to [1 x %struct.basic_block_def*]*
  %arrayidx158 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb157, i64 0, i64 %idxprom155
  %45 = load %struct.basic_block_def** %arrayidx158, align 8, !tbaa !0
  %global_live_at_start159 = getelementptr inbounds %struct.basic_block_def* %45, i64 0, i32 8
  %46 = load %struct.bitmap_head_def** %global_live_at_start159, align 8, !tbaa !0
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %46, i32 %10) #7
  %indvars.iv.next238 = add i64 %indvars.iv237, 1
  %47 = load %struct.candidate** @candidate_table, align 8, !tbaa !0
  %nr_members144 = getelementptr inbounds %struct.candidate* %47, i64 %idxprom141, i32 4, i32 1
  %48 = load i32* %nr_members144, align 4, !tbaa !3
  %49 = trunc i64 %indvars.iv.next238 to i32
  %cmp145 = icmp slt i32 %49, %48
  br i1 %cmp145, label %for.body147, label %if.end164

if.end164:                                        ; preds = %while.cond, %while.cond118.preheader, %while.cond118.loopexit, %for.cond140.preheader, %for.body147, %if.then18, %for.cond.backedge, %lor.lhs.false51, %entry
  ret void
}
