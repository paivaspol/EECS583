define internal void @init_ready_list(%struct.ready_list* %ready) #0 {
entry:
  %tail = alloca %struct.rtx_def*, align 8
  %head = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata !{%struct.ready_list* %ready}, i64 0, metadata !955), !dbg !2007
  %0 = load %struct.sched_info** @current_sched_info, align 8, !dbg !2008, !tbaa !1208
  %prev_head1 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 8, !dbg !2008
  %1 = load %struct.rtx_def** %prev_head1, align 8, !dbg !2008, !tbaa !1208
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !956), !dbg !2008
  %next_tail2 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 9, !dbg !2009
  %2 = load %struct.rtx_def** %next_tail2, align 8, !dbg !2009, !tbaa !1208
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %2}, i64 0, metadata !957), !dbg !2009
  store i32 0, i32* @target_n_insns, align 4, !dbg !2010, !tbaa !1213
  store i32 0, i32* @sched_target_n_insns, align 4, !dbg !2011, !tbaa !1213
  store i32 0, i32* @sched_n_insns, align 4, !dbg !2012, !tbaa !1213
  store i1 false, i1* @last_was_jump, align 1
  %3 = load i32* @sched_verbose, align 4, !dbg !2013, !tbaa !1213
  %cmp = icmp sgt i32 %3, 4, !dbg !2013
  br i1 %cmp, label %if.then, label %if.end, !dbg !2013

if.then:                                          ; preds = %entry
  call void @debug_dependencies() #10, !dbg !2014
  br label %if.end, !dbg !2014

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32* @current_nr_blocks, align 4, !dbg !2015, !tbaa !1213
  %cmp3 = icmp sgt i32 %4, 1, !dbg !2015
  br i1 %cmp3, label %if.then4, label %for.cond.preheader, !dbg !2015

if.then4:                                         ; preds = %if.end
  %conv = sext i32 %4 to i64, !dbg !2016
  %mul = mul i64 %conv, 40, !dbg !2016
  %call = call noalias i8* @xmalloc(i64 %mul) #8, !dbg !2016
  %5 = bitcast i8* %call to %struct.candidate*, !dbg !2016
  store %struct.candidate* %5, %struct.candidate** @candidate_table, align 8, !dbg !2016, !tbaa !1208
  store i32 0, i32* @bblst_last, align 4, !dbg !2018, !tbaa !1213
  %6 = load i32* @current_nr_blocks, align 4, !dbg !2019, !tbaa !1213
  %7 = load i32* @target_bb, align 4, !dbg !2019, !tbaa !1213
  %sub = sub nsw i32 %6, %7, !dbg !2019
  %8 = load i32* @rgn_nr_edges, align 4, !dbg !2019, !tbaa !1213
  %mul5 = mul nsw i32 %sub, %8, !dbg !2019
  store i32 %mul5, i32* @bblst_size, align 4, !dbg !2019, !tbaa !1213
  %conv6 = sext i32 %mul5 to i64, !dbg !2020
  %mul7 = shl nsw i64 %conv6, 2, !dbg !2020
  %call8 = call noalias i8* @xmalloc(i64 %mul7) #8, !dbg !2020
  %9 = bitcast i8* %call8 to i32*, !dbg !2020
  store i32* %9, i32** @bblst_table, align 8, !dbg !2020, !tbaa !1208
  store i32 0, i32* @bitlst_table_last, align 4, !dbg !2021, !tbaa !1213
  %10 = load i32* @rgn_nr_edges, align 4, !dbg !2022, !tbaa !1213
  %conv9 = sext i32 %10 to i64, !dbg !2022
  %mul10 = shl nsw i64 %conv9, 2, !dbg !2022
  %call11 = call noalias i8* @xmalloc(i64 %mul10) #8, !dbg !2022
  %11 = bitcast i8* %call11 to i32*, !dbg !2022
  store i32* %11, i32** @bitlst_table, align 8, !dbg !2022, !tbaa !1208
  %12 = load i32* @target_bb, align 4, !dbg !2023, !tbaa !1213
  call fastcc void @compute_trg_info(i32 %12) #10, !dbg !2023
  br label %for.cond.preheader, !dbg !2024

for.cond.preheader:                               ; preds = %if.then4, %if.end
  %insn.0.in.in183 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2, !dbg !2025
  %insn.0.in184 = bitcast %union.rtunion_def* %insn.0.in.in183 to %struct.rtx_def**, !dbg !2025
  %insn.0185 = load %struct.rtx_def** %insn.0.in184, align 8, !dbg !2025
  %cmp13186 = icmp eq %struct.rtx_def* %insn.0185, %2, !dbg !2025
  br i1 %cmp13186, label %for.end, label %for.body, !dbg !2025

for.body:                                         ; preds = %for.cond.preheader, %for.cond.backedge
  %insn.0187 = phi %struct.rtx_def* [ %insn.0, %for.cond.backedge ], [ %insn.0185, %for.cond.preheader ]
  %13 = bitcast %struct.rtx_def* %insn.0187 to i32*, !dbg !2026
  %bf.load = load i32* %13, align 8, !dbg !2026
  %bf.clear = and i32 %bf.load, 65535, !dbg !2026
  %idxprom175 = zext i32 %bf.clear to i64, !dbg !2026
  %arrayidx15 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom175, !dbg !2026
  %14 = load i8* %arrayidx15, align 1, !dbg !2026, !tbaa !1209
  %cmp17 = icmp eq i8 %14, 105, !dbg !2026
  br i1 %cmp17, label %if.end20, label %for.cond.backedge, !dbg !2026

if.end20:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %18}, i64 0, metadata !960), !dbg !2027
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %insn.0187, i64 0, i32 1, i64 0, !dbg !2028
  %rtint = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !2028
  %15 = load i32* %rtint, align 4, !dbg !2028, !tbaa !1213
  %idxprom26 = sext i32 %15 to i64, !dbg !2028
  %16 = load %struct.haifa_insn_data** @h_i_d, align 8, !dbg !2028, !tbaa !1208
  %dep_count = getelementptr inbounds %struct.haifa_insn_data* %16, i64 %idxprom26, i32 4, !dbg !2028
  %17 = load i32* %dep_count, align 4, !dbg !2028, !tbaa !1213
  %cmp28 = icmp eq i32 %17, 0, !dbg !2028
  br i1 %cmp28, label %land.lhs.true, label %if.end42, !dbg !2028

land.lhs.true:                                    ; preds = %if.end20
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %insn.0187, i64 0, i32 1, i64 2, !dbg !2027
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !2027
  %18 = load %struct.rtx_def** %rtx23, align 8, !dbg !2027, !tbaa !1208
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !2028
  %bf.load30 = load i32* %19, align 8, !dbg !2028
  %bf.clear31 = and i32 %bf.load30, 268435456, !dbg !2028
  %cmp32 = icmp eq i32 %bf.clear31, 0, !dbg !2028
  br i1 %cmp32, label %if.then41, label %lor.lhs.false, !dbg !2028

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.clear35 = and i32 %bf.load30, 65535, !dbg !2028
  %idxprom36176 = zext i32 %bf.clear35 to i64, !dbg !2028
  %arrayidx37 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom36176, !dbg !2028
  %20 = load i8* %arrayidx37, align 1, !dbg !2028, !tbaa !1209
  %cmp39 = icmp eq i8 %20, 105, !dbg !2028
  br i1 %cmp39, label %if.end42, label %if.then41, !dbg !2028

if.then41:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @ready_add(%struct.ready_list* %ready, %struct.rtx_def* %insn.0187) #8, !dbg !2029
  %bf.load43.pre = load i32* %13, align 8, !dbg !2030
  br label %if.end42, !dbg !2029

if.end42:                                         ; preds = %if.then41, %lor.lhs.false, %if.end20
  %bf.load43 = phi i32 [ %bf.load43.pre, %if.then41 ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %if.end20 ]
  %bf.clear45 = and i32 %bf.load43, 268435456, !dbg !2030
  %tobool = icmp eq i32 %bf.clear45, 0, !dbg !2030
  br i1 %tobool, label %if.then46, label %for.cond.backedge, !dbg !2030

for.cond.backedge:                                ; preds = %if.end42, %for.body, %if.then46
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.0187, i64 0, i32 1, i64 2, !dbg !2025
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !2025
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8, !dbg !2025
  %cmp13 = icmp eq %struct.rtx_def* %insn.0, %2, !dbg !2025
  br i1 %cmp13, label %for.end, label %for.body, !dbg !2025

if.then46:                                        ; preds = %if.end42
  %21 = load i32* @target_n_insns, align 4, !dbg !2031, !tbaa !1213
  %inc = add nsw i32 %21, 1, !dbg !2031
  store i32 %inc, i32* @target_n_insns, align 4, !dbg !2031, !tbaa !1213
  br label %for.cond.backedge, !dbg !2031

for.end:                                          ; preds = %for.cond.backedge, %for.cond.preheader
  %22 = load i32* @target_bb, align 4, !dbg !2032, !tbaa !1213
  %bb_src.0180 = add i32 %22, 1, !dbg !2032
  %23 = load i32* @current_nr_blocks, align 4, !dbg !2032, !tbaa !1213
  %cmp52181 = icmp slt i32 %bb_src.0180, %23, !dbg !2032
  br i1 %cmp52181, label %for.body54.lr.ph, label %for.end146, !dbg !2032

for.body54.lr.ph:                                 ; preds = %for.end
  %24 = sext i32 %bb_src.0180 to i64
  br label %for.body54, !dbg !2032

for.cond51.loopexit:                              ; preds = %for.inc138, %if.then58
  %.pre = load i32* @current_nr_blocks, align 4, !dbg !2032, !tbaa !1213
  br label %for.cond51.backedge

for.body54:                                       ; preds = %for.cond51.backedge.for.body54_crit_edge, %for.body54.lr.ph
  %25 = phi i32 [ %23, %for.body54.lr.ph ], [ %28, %for.cond51.backedge.for.body54_crit_edge ]
  %indvars.iv = phi i64 [ %24, %for.body54.lr.ph ], [ %indvars.iv.next, %for.cond51.backedge.for.body54_crit_edge ]
  %bb_src.0182 = phi i32 [ %bb_src.0180, %for.body54.lr.ph ], [ %bb_src.0, %for.cond51.backedge.for.body54_crit_edge ]
  %26 = load %struct.candidate** @candidate_table, align 8, !dbg !2033, !tbaa !1208
  %is_valid = getelementptr inbounds %struct.candidate* %26, i64 %indvars.iv, i32 0, !dbg !2033
  %27 = load i8* %is_valid, align 1, !dbg !2033, !tbaa !1209
  %tobool57 = icmp eq i8 %27, 0, !dbg !2033
  br i1 %tobool57, label %for.cond51.backedge, label %if.then58, !dbg !2033

for.cond51.backedge:                              ; preds = %for.body54, %for.cond51.loopexit
  %28 = phi i32 [ %25, %for.body54 ], [ %.pre, %for.cond51.loopexit ], !dbg !2032
  %bb_src.0 = add nsw i32 %bb_src.0182, 1, !dbg !2032
  %cmp52 = icmp slt i32 %bb_src.0, %28, !dbg !2032
  br i1 %cmp52, label %for.cond51.backedge.for.body54_crit_edge, label %for.end146, !dbg !2032

for.cond51.backedge.for.body54_crit_edge:         ; preds = %for.cond51.backedge
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !2032
  br label %for.body54, !dbg !2032

if.then58:                                        ; preds = %for.body54
  call void @llvm.dbg.declare(metadata !{%struct.rtx_def** %tail}, metadata !967), !dbg !2034
  call void @llvm.dbg.declare(metadata !{%struct.rtx_def** %head}, metadata !968), !dbg !2034
  %29 = load i32* @current_blocks, align 4, !dbg !2035, !tbaa !1213
  %30 = trunc i64 %indvars.iv to i32, !dbg !2035
  %add59 = add nsw i32 %29, %30, !dbg !2035
  %idxprom60 = sext i32 %add59 to i64, !dbg !2035
  %31 = load i32** @rgn_bb_table, align 8, !dbg !2035, !tbaa !1208
  %arrayidx61 = getelementptr inbounds i32* %31, i64 %idxprom60, !dbg !2035
  %32 = load i32* %arrayidx61, align 4, !dbg !2035, !tbaa !1213
  call void @get_block_head_tail(i32 %32, %struct.rtx_def** %head, %struct.rtx_def** %tail) #8, !dbg !2035
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %tail}, i64 0, metadata !967), !dbg !2036
  %33 = load %struct.rtx_def** %tail, align 8, !dbg !2036, !tbaa !1208
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 2, !dbg !2036
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !2036
  %34 = load %struct.rtx_def** %rtx64, align 8, !dbg !2036, !tbaa !1208
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %34}, i64 0, metadata !966), !dbg !2036
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %head}, i64 0, metadata !968), !dbg !2037
  %insn.1177 = load %struct.rtx_def** %head, align 8, !dbg !2037
  %cmp66178 = icmp eq %struct.rtx_def* %insn.1177, %34, !dbg !2038
  br i1 %cmp66178, label %for.cond51.loopexit, label %for.body68, !dbg !2038

for.body68:                                       ; preds = %if.then58, %for.inc138
  %insn.1179 = phi %struct.rtx_def* [ %insn.1, %for.inc138 ], [ %insn.1177, %if.then58 ]
  %35 = bitcast %struct.rtx_def* %insn.1179 to i32*, !dbg !2039
  %bf.load69 = load i32* %35, align 8, !dbg !2039
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !2039
  %idxprom71173 = zext i32 %bf.clear70 to i64, !dbg !2039
  %arrayidx72 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom71173, !dbg !2039
  %36 = load i8* %arrayidx72, align 1, !dbg !2039, !tbaa !1209
  %cmp74 = icmp eq i8 %36, 105, !dbg !2039
  br i1 %cmp74, label %if.end77, label %for.inc138, !dbg !2039

if.end77:                                         ; preds = %for.body68
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %insn.1179, i64 0, i32 1, i64 0, !dbg !2040
  %rtint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*, !dbg !2040
  %37 = load i32* %rtint80, align 4, !dbg !2040, !tbaa !1213
  %idxprom81 = sext i32 %37 to i64, !dbg !2040
  %38 = load %struct.haifa_insn_data** @h_i_d, align 8, !dbg !2040, !tbaa !1208
  %cant_move = getelementptr inbounds %struct.haifa_insn_data* %38, i64 %idxprom81, i32 11, !dbg !2040
  %bf.load83 = load i8* %cant_move, align 2, !dbg !2040
  %bf.clear84 = and i8 %bf.load83, 1, !dbg !2040
  %tobool85 = icmp eq i8 %bf.clear84, 0, !dbg !2040
  br i1 %tobool85, label %land.lhs.true86, label %for.inc138, !dbg !2040

land.lhs.true86:                                  ; preds = %if.end77
  %39 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !dbg !2040, !tbaa !1208
  %data = getelementptr inbounds %struct.varray_head_tag* %39, i64 0, i32 4, !dbg !2040
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*, !dbg !2040
  %arrayidx91 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom81, !dbg !2040
  %40 = load %struct.basic_block_def** %arrayidx91, align 8, !dbg !2040, !tbaa !1208
  %index = getelementptr inbounds %struct.basic_block_def* %40, i64 0, i32 11, !dbg !2040
  %41 = load i32* %index, align 4, !dbg !2040, !tbaa !1213
  %idxprom93 = sext i32 %41 to i64, !dbg !2040
  %42 = load i32** @block_to_bb, align 8, !dbg !2040, !tbaa !1208
  %arrayidx94 = getelementptr inbounds i32* %42, i64 %idxprom93, !dbg !2040
  %43 = load i32* %arrayidx94, align 4, !dbg !2040, !tbaa !1213
  %idxprom95 = sext i32 %43 to i64, !dbg !2040
  %44 = load %struct.candidate** @candidate_table, align 8, !dbg !2040, !tbaa !1208
  %is_speculative = getelementptr inbounds %struct.candidate* %44, i64 %idxprom95, i32 1, !dbg !2040
  %45 = load i8* %is_speculative, align 1, !dbg !2040, !tbaa !1209
  %tobool97 = icmp eq i8 %45, 0, !dbg !2040
  br i1 %tobool97, label %if.then108, label %lor.lhs.false98, !dbg !2040

lor.lhs.false98:                                  ; preds = %land.lhs.true86
  %call99 = call i32 @insn_issue_delay(%struct.rtx_def* %insn.1179) #8, !dbg !2041
  %cmp100 = icmp slt i32 %call99, 4, !dbg !2041
  br i1 %cmp100, label %land.lhs.true102, label %for.inc138, !dbg !2041

land.lhs.true102:                                 ; preds = %lor.lhs.false98
  %call103 = call fastcc i32 @check_live(%struct.rtx_def* %insn.1179, i32 %30) #10, !dbg !2042
  %tobool104 = icmp eq i32 %call103, 0, !dbg !2042
  br i1 %tobool104, label %for.inc138, label %land.lhs.true105, !dbg !2042

land.lhs.true105:                                 ; preds = %land.lhs.true102
  %46 = load i32* @target_bb, align 4, !dbg !2043, !tbaa !1213
  %call106 = call fastcc i32 @is_exception_free(%struct.rtx_def* %insn.1179, i32 %30, i32 %46) #10, !dbg !2043
  %tobool107 = icmp eq i32 %call106, 0, !dbg !2043
  br i1 %tobool107, label %for.inc138, label %if.then108, !dbg !2043

if.then108:                                       ; preds = %land.lhs.true105, %land.lhs.true86
  %call110 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.1179) #8, !dbg !2044
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call110}, i64 0, metadata !969), !dbg !2044
  %47 = load i32* %rtint80, align 4, !dbg !2045, !tbaa !1213
  %idxprom114 = sext i32 %47 to i64, !dbg !2045
  %48 = load %struct.haifa_insn_data** @h_i_d, align 8, !dbg !2045, !tbaa !1208
  %dep_count116 = getelementptr inbounds %struct.haifa_insn_data* %48, i64 %idxprom114, i32 4, !dbg !2045
  %49 = load i32* %dep_count116, align 4, !dbg !2045, !tbaa !1213
  %cmp117 = icmp eq i32 %49, 0, !dbg !2045
  br i1 %cmp117, label %land.lhs.true119, label %for.inc138, !dbg !2045

land.lhs.true119:                                 ; preds = %if.then108
  %tobool120 = icmp eq %struct.rtx_def* %call110, null, !dbg !2045
  br i1 %tobool120, label %if.then135, label %lor.lhs.false121, !dbg !2045

lor.lhs.false121:                                 ; preds = %land.lhs.true119
  %50 = bitcast %struct.rtx_def* %call110 to i32*, !dbg !2045
  %bf.load122 = load i32* %50, align 8, !dbg !2045
  %bf.clear124 = and i32 %bf.load122, 268435456, !dbg !2045
  %cmp125 = icmp eq i32 %bf.clear124, 0, !dbg !2045
  br i1 %cmp125, label %if.then135, label %lor.lhs.false127, !dbg !2045

lor.lhs.false127:                                 ; preds = %lor.lhs.false121
  %bf.clear129 = and i32 %bf.load122, 65535, !dbg !2045
  %idxprom130174 = zext i32 %bf.clear129 to i64, !dbg !2045
  %arrayidx131 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom130174, !dbg !2045
  %51 = load i8* %arrayidx131, align 1, !dbg !2045, !tbaa !1209
  %cmp133 = icmp eq i8 %51, 105, !dbg !2045
  br i1 %cmp133, label %for.inc138, label %if.then135, !dbg !2045

if.then135:                                       ; preds = %land.lhs.true119, %lor.lhs.false127, %lor.lhs.false121
  call void @ready_add(%struct.ready_list* %ready, %struct.rtx_def* %insn.1179) #8, !dbg !2046
  br label %for.inc138, !dbg !2046

for.inc138:                                       ; preds = %land.lhs.true105, %land.lhs.true102, %if.end77, %lor.lhs.false98, %if.then135, %lor.lhs.false127, %if.then108, %for.body68
  %arrayidx140 = getelementptr inbounds %struct.rtx_def* %insn.1179, i64 0, i32 1, i64 2, !dbg !2038
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**, !dbg !2038
  %insn.1 = load %struct.rtx_def** %rtx141, align 8, !dbg !2037
  %cmp66 = icmp eq %struct.rtx_def* %insn.1, %34, !dbg !2038
  br i1 %cmp66, label %for.cond51.loopexit, label %for.body68, !dbg !2038

for.end146:                                       ; preds = %for.cond51.backedge, %for.end
  ret void, !dbg !2047
}
