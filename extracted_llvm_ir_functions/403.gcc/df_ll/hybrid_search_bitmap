define internal fastcc void @hybrid_search_bitmap(%struct.basic_block_def* nocapture %block, %struct.bitmap_head_def** %in, %struct.bitmap_head_def** %out, %struct.bitmap_head_def** %gen, %struct.bitmap_head_def** %kill, i32 %dir, i32 %conf_op, void (i32, i32*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*)* %transfun, %struct.simple_bitmap_def* %visited, %struct.simple_bitmap_def* %pending, i8* %data) #0 {
entry:
  %changed = alloca i32, align 4
  %index = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 11
  %0 = load i32* %index, align 4, !tbaa !4
  %rem = and i32 %0, 63
  %sh_prom = zext i32 %rem to i64
  %shl = shl i64 1, %sh_prom
  %div = lshr i32 %0, 6
  %idxprom = zext i32 %div to i64
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def* %visited, i64 0, i32 3, i64 %idxprom
  %1 = load i64* %arrayidx, align 8, !tbaa !5
  %or = or i64 %shl, %1
  store i64 %or, i64* %arrayidx, align 8, !tbaa !5
  %arrayidx7 = getelementptr inbounds %struct.simple_bitmap_def* %pending, i64 0, i32 3, i64 %idxprom
  %2 = load i64* %arrayidx7, align 8, !tbaa !5
  %and314 = and i64 %shl, %2
  %tobool = icmp eq i64 %and314, 0
  br i1 %tobool, label %if.end143, label %if.then

if.then:                                          ; preds = %entry
  %cmp = icmp eq i32 %dir, 0
  %idxprom12 = sext i32 %0 to i64
  br i1 %cmp, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def** %in, i64 %idxprom12
  %3 = load %struct.bitmap_head_def** %arrayidx13, align 8, !tbaa !3
  call void @bitmap_clear(%struct.bitmap_head_def* %3) #8
  %pred = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 4
  %e.0331 = load %struct.edge_def** %pred, align 8
  %cmp14332 = icmp eq %struct.edge_def* %e.0331, null
  br i1 %cmp14332, label %if.end66.loopexit, label %for.body

for.body:                                         ; preds = %if.then11, %for.inc
  %e.0333 = phi %struct.edge_def* [ %e.0, %for.inc ], [ %e.0331, %if.then11 ]
  %src = getelementptr inbounds %struct.edge_def* %e.0333, i64 0, i32 2
  %4 = load %struct.basic_block_def** %src, align 8, !tbaa !3
  %cmp15 = icmp eq %struct.basic_block_def* %4, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp15, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  switch i32 %conf_op, label %for.inc [
    i32 0, label %sw.bb
    i32 1, label %sw.bb25
  ]

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.bitmap_head_def** %arrayidx13, align 8, !tbaa !3
  %index22 = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 11
  %6 = load i32* %index22, align 4, !tbaa !4
  %idxprom23 = sext i32 %6 to i64
  %arrayidx24 = getelementptr inbounds %struct.bitmap_head_def** %out, i64 %idxprom23
  %7 = load %struct.bitmap_head_def** %arrayidx24, align 8, !tbaa !3
  %call = call i32 @bitmap_operation(%struct.bitmap_head_def* %5, %struct.bitmap_head_def* %5, %struct.bitmap_head_def* %7, i32 2) #8
  br label %for.inc

sw.bb25:                                          ; preds = %if.end
  %8 = load %struct.bitmap_head_def** %arrayidx13, align 8, !tbaa !3
  %index31 = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 11
  %9 = load i32* %index31, align 4, !tbaa !4
  %idxprom32 = sext i32 %9 to i64
  %arrayidx33 = getelementptr inbounds %struct.bitmap_head_def** %out, i64 %idxprom32
  %10 = load %struct.bitmap_head_def** %arrayidx33, align 8, !tbaa !3
  %call34 = call i32 @bitmap_operation(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* %10, i32 0) #8
  br label %for.inc

for.inc:                                          ; preds = %sw.bb, %sw.bb25, %if.end, %for.body
  %pred_next = getelementptr inbounds %struct.edge_def* %e.0333, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %cmp14 = icmp eq %struct.edge_def* %e.0, null
  br i1 %cmp14, label %if.end66.loopexit, label %for.body

if.else:                                          ; preds = %if.then
  %arrayidx36 = getelementptr inbounds %struct.bitmap_head_def** %out, i64 %idxprom12
  %11 = load %struct.bitmap_head_def** %arrayidx36, align 8, !tbaa !3
  call void @bitmap_clear(%struct.bitmap_head_def* %11) #8
  %succ = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 5
  %e.1335 = load %struct.edge_def** %succ, align 8
  %cmp38336 = icmp eq %struct.edge_def* %e.1335, null
  br i1 %cmp38336, label %if.end66.loopexit334, label %for.body39

for.body39:                                       ; preds = %if.else, %for.inc64
  %e.1337 = phi %struct.edge_def* [ %e.1, %for.inc64 ], [ %e.1335, %if.else ]
  %dest = getelementptr inbounds %struct.edge_def* %e.1337, i64 0, i32 3
  %12 = load %struct.basic_block_def** %dest, align 8, !tbaa !3
  %cmp40 = icmp eq %struct.basic_block_def* %12, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp40, label %for.inc64, label %if.end42

if.end42:                                         ; preds = %for.body39
  switch i32 %conf_op, label %for.inc64 [
    i32 0, label %sw.bb43
    i32 1, label %sw.bb53
  ]

sw.bb43:                                          ; preds = %if.end42
  %13 = load %struct.bitmap_head_def** %arrayidx36, align 8, !tbaa !3
  %index49 = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 11
  %14 = load i32* %index49, align 4, !tbaa !4
  %idxprom50 = sext i32 %14 to i64
  %arrayidx51 = getelementptr inbounds %struct.bitmap_head_def** %in, i64 %idxprom50
  %15 = load %struct.bitmap_head_def** %arrayidx51, align 8, !tbaa !3
  %call52 = call i32 @bitmap_operation(%struct.bitmap_head_def* %13, %struct.bitmap_head_def* %13, %struct.bitmap_head_def* %15, i32 2) #8
  br label %for.inc64

sw.bb53:                                          ; preds = %if.end42
  %16 = load %struct.bitmap_head_def** %arrayidx36, align 8, !tbaa !3
  %index59 = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 11
  %17 = load i32* %index59, align 4, !tbaa !4
  %idxprom60 = sext i32 %17 to i64
  %arrayidx61 = getelementptr inbounds %struct.bitmap_head_def** %in, i64 %idxprom60
  %18 = load %struct.bitmap_head_def** %arrayidx61, align 8, !tbaa !3
  %call62 = call i32 @bitmap_operation(%struct.bitmap_head_def* %16, %struct.bitmap_head_def* %16, %struct.bitmap_head_def* %18, i32 0) #8
  br label %for.inc64

for.inc64:                                        ; preds = %sw.bb43, %sw.bb53, %if.end42, %for.body39
  %succ_next = getelementptr inbounds %struct.edge_def* %e.1337, i64 0, i32 1
  %e.1 = load %struct.edge_def** %succ_next, align 8
  %cmp38 = icmp eq %struct.edge_def* %e.1, null
  br i1 %cmp38, label %if.end66.loopexit334, label %for.body39

if.end66.loopexit:                                ; preds = %for.inc, %if.then11
  %arrayidx70.pre = getelementptr inbounds %struct.bitmap_head_def** %out, i64 %idxprom12
  br label %if.end66

if.end66.loopexit334:                             ; preds = %for.inc64, %if.else
  %arrayidx68.pre = getelementptr inbounds %struct.bitmap_head_def** %in, i64 %idxprom12
  br label %if.end66

if.end66:                                         ; preds = %if.end66.loopexit334, %if.end66.loopexit
  %arrayidx70.pre-phi = phi %struct.bitmap_head_def** [ %arrayidx36, %if.end66.loopexit334 ], [ %arrayidx70.pre, %if.end66.loopexit ]
  %arrayidx68.pre-phi = phi %struct.bitmap_head_def** [ %arrayidx68.pre, %if.end66.loopexit334 ], [ %arrayidx13, %if.end66.loopexit ]
  %19 = load %struct.bitmap_head_def** %arrayidx68.pre-phi, align 8, !tbaa !3
  %20 = load %struct.bitmap_head_def** %arrayidx70.pre-phi, align 8, !tbaa !3
  %arrayidx72 = getelementptr inbounds %struct.bitmap_head_def** %gen, i64 %idxprom12
  %21 = load %struct.bitmap_head_def** %arrayidx72, align 8, !tbaa !3
  %arrayidx74 = getelementptr inbounds %struct.bitmap_head_def** %kill, i64 %idxprom12
  %22 = load %struct.bitmap_head_def** %arrayidx74, align 8, !tbaa !3
  call void %transfun(i32 %0, i32* %changed, %struct.bitmap_head_def* %19, %struct.bitmap_head_def* %20, %struct.bitmap_head_def* %21, %struct.bitmap_head_def* %22, i8* %data) #8
  %neg = xor i64 %shl, -1
  %23 = load i64* %arrayidx7, align 8, !tbaa !5
  %and82 = and i64 %23, %neg
  store i64 %and82, i64* %arrayidx7, align 8, !tbaa !5
  %24 = load i32* %changed, align 4, !tbaa !4
  %tobool83 = icmp eq i32 %24, 0
  br i1 %tobool83, label %if.end143, label %if.then84

if.then84:                                        ; preds = %if.end66
  br i1 %cmp, label %if.then86, label %if.else113

if.then86:                                        ; preds = %if.then84
  %succ87 = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 5
  %e.2324 = load %struct.edge_def** %succ87, align 8
  %cmp89325 = icmp eq %struct.edge_def* %e.2324, null
  br i1 %cmp89325, label %if.then145, label %for.body90

for.body90:                                       ; preds = %if.then86, %for.inc110
  %e.2326 = phi %struct.edge_def* [ %e.2, %for.inc110 ], [ %e.2324, %if.then86 ]
  %dest91 = getelementptr inbounds %struct.edge_def* %e.2326, i64 0, i32 3
  %25 = load %struct.basic_block_def** %dest91, align 8, !tbaa !3
  %cmp92 = icmp eq %struct.basic_block_def* %25, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp92, label %for.inc110, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body90
  %index94 = getelementptr inbounds %struct.basic_block_def* %25, i64 0, i32 11
  %26 = load i32* %index94, align 4, !tbaa !4
  %cmp95 = icmp eq i32 %26, %0
  br i1 %cmp95, label %for.inc110, label %if.end97

if.end97:                                         ; preds = %lor.lhs.false
  %rem100 = and i32 %26, 63
  %sh_prom101 = zext i32 %rem100 to i64
  %shl102 = shl i64 1, %sh_prom101
  %div105 = lshr i32 %26, 6
  %idxprom106 = zext i32 %div105 to i64
  %arrayidx108 = getelementptr inbounds %struct.simple_bitmap_def* %pending, i64 0, i32 3, i64 %idxprom106
  %27 = load i64* %arrayidx108, align 8, !tbaa !5
  %or109 = or i64 %27, %shl102
  store i64 %or109, i64* %arrayidx108, align 8, !tbaa !5
  br label %for.inc110

for.inc110:                                       ; preds = %for.body90, %lor.lhs.false, %if.end97
  %succ_next111 = getelementptr inbounds %struct.edge_def* %e.2326, i64 0, i32 1
  %e.2 = load %struct.edge_def** %succ_next111, align 8
  %cmp89 = icmp eq %struct.edge_def* %e.2, null
  br i1 %cmp89, label %if.end143, label %for.body90

if.else113:                                       ; preds = %if.then84
  %pred114 = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 4
  %e.3328 = load %struct.edge_def** %pred114, align 8
  %cmp116329 = icmp eq %struct.edge_def* %e.3328, null
  br i1 %cmp116329, label %if.end143, label %for.body117

for.body117:                                      ; preds = %if.else113, %for.inc138
  %e.3330 = phi %struct.edge_def* [ %e.3, %for.inc138 ], [ %e.3328, %if.else113 ]
  %src118 = getelementptr inbounds %struct.edge_def* %e.3330, i64 0, i32 2
  %28 = load %struct.basic_block_def** %src118, align 8, !tbaa !3
  %cmp119 = icmp eq %struct.basic_block_def* %28, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp119, label %for.inc138, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %for.body117
  %dest121 = getelementptr inbounds %struct.edge_def* %e.3330, i64 0, i32 3
  %29 = load %struct.basic_block_def** %dest121, align 8, !tbaa !3
  %index122 = getelementptr inbounds %struct.basic_block_def* %29, i64 0, i32 11
  %30 = load i32* %index122, align 4, !tbaa !4
  %cmp123 = icmp eq i32 %30, %0
  br i1 %cmp123, label %for.inc138, label %if.end125

if.end125:                                        ; preds = %lor.lhs.false120
  %index127 = getelementptr inbounds %struct.basic_block_def* %28, i64 0, i32 11
  %31 = load i32* %index127, align 4, !tbaa !4
  %rem128 = and i32 %31, 63
  %sh_prom129 = zext i32 %rem128 to i64
  %shl130 = shl i64 1, %sh_prom129
  %div133 = lshr i32 %31, 6
  %idxprom134 = zext i32 %div133 to i64
  %arrayidx136 = getelementptr inbounds %struct.simple_bitmap_def* %pending, i64 0, i32 3, i64 %idxprom134
  %32 = load i64* %arrayidx136, align 8, !tbaa !5
  %or137 = or i64 %shl130, %32
  store i64 %or137, i64* %arrayidx136, align 8, !tbaa !5
  br label %for.inc138

for.inc138:                                       ; preds = %for.body117, %lor.lhs.false120, %if.end125
  %pred_next139 = getelementptr inbounds %struct.edge_def* %e.3330, i64 0, i32 0
  %e.3 = load %struct.edge_def** %pred_next139, align 8
  %cmp116 = icmp eq %struct.edge_def* %e.3, null
  br i1 %cmp116, label %if.end143, label %for.body117

if.end143:                                        ; preds = %if.else113, %for.inc138, %for.inc110, %if.end66, %entry
  %cmp144 = icmp eq i32 %dir, 0
  br i1 %cmp144, label %if.then145, label %if.else177

if.then145:                                       ; preds = %if.then86, %if.end143
  %succ146 = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 5
  %e.4317 = load %struct.edge_def** %succ146, align 8
  %cmp148318 = icmp eq %struct.edge_def* %e.4317, null
  br i1 %cmp148318, label %if.end209, label %for.body149

for.body149:                                      ; preds = %if.then145, %for.inc174
  %e.4319 = phi %struct.edge_def* [ %e.4, %for.inc174 ], [ %e.4317, %if.then145 ]
  %dest150 = getelementptr inbounds %struct.edge_def* %e.4319, i64 0, i32 3
  %33 = load %struct.basic_block_def** %dest150, align 8, !tbaa !3
  %cmp151 = icmp eq %struct.basic_block_def* %33, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp151, label %for.inc174, label %lor.lhs.false152

lor.lhs.false152:                                 ; preds = %for.body149
  %index154 = getelementptr inbounds %struct.basic_block_def* %33, i64 0, i32 11
  %34 = load i32* %index154, align 4, !tbaa !4
  %cmp155 = icmp eq i32 %34, %0
  br i1 %cmp155, label %for.inc174, label %if.end157

if.end157:                                        ; preds = %lor.lhs.false152
  %div160 = lshr i32 %34, 6
  %idxprom161 = zext i32 %div160 to i64
  %arrayidx163 = getelementptr inbounds %struct.simple_bitmap_def* %visited, i64 0, i32 3, i64 %idxprom161
  %35 = load i64* %arrayidx163, align 8, !tbaa !5
  %rem166 = and i32 %34, 63
  %sh_prom167 = zext i32 %rem166 to i64
  %36 = shl i64 1, %sh_prom167
  %and169316 = and i64 %35, %36
  %tobool170 = icmp eq i64 %and169316, 0
  br i1 %tobool170, label %if.then171, label %for.inc174

if.then171:                                       ; preds = %if.end157
  call fastcc void @hybrid_search_bitmap(%struct.basic_block_def* %33, %struct.bitmap_head_def** %in, %struct.bitmap_head_def** %out, %struct.bitmap_head_def** %gen, %struct.bitmap_head_def** %kill, i32 0, i32 %conf_op, void (i32, i32*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*)* %transfun, %struct.simple_bitmap_def* %visited, %struct.simple_bitmap_def* %pending, i8* %data) #6
  br label %for.inc174

for.inc174:                                       ; preds = %if.end157, %if.then171, %for.body149, %lor.lhs.false152
  %succ_next175 = getelementptr inbounds %struct.edge_def* %e.4319, i64 0, i32 1
  %e.4 = load %struct.edge_def** %succ_next175, align 8
  %cmp148 = icmp eq %struct.edge_def* %e.4, null
  br i1 %cmp148, label %if.end209, label %for.body149

if.else177:                                       ; preds = %if.end143
  %pred178 = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 4
  %e.5321 = load %struct.edge_def** %pred178, align 8
  %cmp180322 = icmp eq %struct.edge_def* %e.5321, null
  br i1 %cmp180322, label %if.end209, label %for.body181

for.body181:                                      ; preds = %if.else177, %for.inc206
  %e.5323 = phi %struct.edge_def* [ %e.5, %for.inc206 ], [ %e.5321, %if.else177 ]
  %src182 = getelementptr inbounds %struct.edge_def* %e.5323, i64 0, i32 2
  %37 = load %struct.basic_block_def** %src182, align 8, !tbaa !3
  %cmp183 = icmp eq %struct.basic_block_def* %37, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp183, label %for.inc206, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %for.body181
  %index186 = getelementptr inbounds %struct.basic_block_def* %37, i64 0, i32 11
  %38 = load i32* %index186, align 4, !tbaa !4
  %cmp187 = icmp eq i32 %38, %0
  br i1 %cmp187, label %for.inc206, label %if.end189

if.end189:                                        ; preds = %lor.lhs.false184
  %div192 = lshr i32 %38, 6
  %idxprom193 = zext i32 %div192 to i64
  %arrayidx195 = getelementptr inbounds %struct.simple_bitmap_def* %visited, i64 0, i32 3, i64 %idxprom193
  %39 = load i64* %arrayidx195, align 8, !tbaa !5
  %rem198 = and i32 %38, 63
  %sh_prom199 = zext i32 %rem198 to i64
  %40 = shl i64 1, %sh_prom199
  %and201315 = and i64 %39, %40
  %tobool202 = icmp eq i64 %and201315, 0
  br i1 %tobool202, label %if.then203, label %for.inc206

if.then203:                                       ; preds = %if.end189
  call fastcc void @hybrid_search_bitmap(%struct.basic_block_def* %37, %struct.bitmap_head_def** %in, %struct.bitmap_head_def** %out, %struct.bitmap_head_def** %gen, %struct.bitmap_head_def** %kill, i32 %dir, i32 %conf_op, void (i32, i32*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*)* %transfun, %struct.simple_bitmap_def* %visited, %struct.simple_bitmap_def* %pending, i8* %data) #6
  br label %for.inc206

for.inc206:                                       ; preds = %if.end189, %if.then203, %for.body181, %lor.lhs.false184
  %pred_next207 = getelementptr inbounds %struct.edge_def* %e.5323, i64 0, i32 0
  %e.5 = load %struct.edge_def** %pred_next207, align 8
  %cmp180 = icmp eq %struct.edge_def* %e.5, null
  br i1 %cmp180, label %if.end209, label %for.body181

if.end209:                                        ; preds = %if.else177, %for.inc206, %if.then145, %for.inc174
  ret void
}
