define internal fastcc void @df_free(%struct.df* nocapture %df) #0 {
entry:
  tail call fastcc void @df_bitmaps_free(%struct.df* %df, i32 255) #6
  %bbs = getelementptr inbounds %struct.df* %df, i64 0, i32 1
  %0 = load %struct.bb_info** %bbs, align 8, !tbaa !3
  %tobool = icmp eq %struct.bb_info* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.bb_info* %0 to i8*
  tail call void @free(i8* %1) #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  store %struct.bb_info* null, %struct.bb_info** %bbs, align 8, !tbaa !3
  %insns = getelementptr inbounds %struct.df* %df, i64 0, i32 7
  %2 = load %struct.insn_info** %insns, align 8, !tbaa !3
  %tobool3 = icmp eq %struct.insn_info* %2, null
  br i1 %tobool3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %3 = bitcast %struct.insn_info* %2 to i8*
  tail call void @free(i8* %3) #8
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then4
  store %struct.insn_info* null, %struct.insn_info** %insns, align 8, !tbaa !3
  %insn_size = getelementptr inbounds %struct.df* %df, i64 0, i32 8
  store i32 0, i32* %insn_size, align 4, !tbaa !4
  %defs = getelementptr inbounds %struct.df* %df, i64 0, i32 2
  %4 = load %struct.ref*** %defs, align 8, !tbaa !3
  %tobool8 = icmp eq %struct.ref** %4, null
  br i1 %tobool8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end6
  %5 = bitcast %struct.ref** %4 to i8*
  tail call void @free(i8* %5) #8
  br label %if.end11

if.end11:                                         ; preds = %if.end6, %if.then9
  store %struct.ref** null, %struct.ref*** %defs, align 8, !tbaa !3
  %def_size = getelementptr inbounds %struct.df* %df, i64 0, i32 10
  store i32 0, i32* %def_size, align 4, !tbaa !4
  %def_id = getelementptr inbounds %struct.df* %df, i64 0, i32 9
  store i32 0, i32* %def_id, align 4, !tbaa !4
  %uses = getelementptr inbounds %struct.df* %df, i64 0, i32 3
  %6 = load %struct.ref*** %uses, align 8, !tbaa !3
  %tobool13 = icmp eq %struct.ref** %6, null
  br i1 %tobool13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end11
  %7 = bitcast %struct.ref** %6 to i8*
  tail call void @free(i8* %7) #8
  br label %if.end16

if.end16:                                         ; preds = %if.end11, %if.then14
  store %struct.ref** null, %struct.ref*** %uses, align 8, !tbaa !3
  %use_size = getelementptr inbounds %struct.df* %df, i64 0, i32 13
  store i32 0, i32* %use_size, align 4, !tbaa !4
  %use_id = getelementptr inbounds %struct.df* %df, i64 0, i32 12
  store i32 0, i32* %use_id, align 4, !tbaa !4
  %regs = getelementptr inbounds %struct.df* %df, i64 0, i32 5
  %8 = load %struct.reg_info** %regs, align 8, !tbaa !3
  %tobool18 = icmp eq %struct.reg_info* %8, null
  br i1 %tobool18, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end16
  %9 = bitcast %struct.reg_info* %8 to i8*
  tail call void @free(i8* %9) #8
  br label %if.end21

if.end21:                                         ; preds = %if.end16, %if.then19
  store %struct.reg_info* null, %struct.reg_info** %regs, align 8, !tbaa !3
  %reg_size = getelementptr inbounds %struct.df* %df, i64 0, i32 6
  store i32 0, i32* %reg_size, align 4, !tbaa !4
  %bbs_modified = getelementptr inbounds %struct.df* %df, i64 0, i32 20
  %10 = load %struct.bitmap_head_def** %bbs_modified, align 8, !tbaa !3
  %tobool23 = icmp eq %struct.bitmap_head_def* %10, null
  br i1 %tobool23, label %if.end32, label %if.then27

if.then27:                                        ; preds = %if.end21
  tail call void @bitmap_clear(%struct.bitmap_head_def* %10) #8
  %11 = load %struct.bitmap_head_def** %bbs_modified, align 8, !tbaa !3
  %12 = bitcast %struct.bitmap_head_def* %11 to i8*
  tail call void @free(i8* %12) #8
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %bbs_modified, align 8, !tbaa !3
  br label %if.end32

if.end32:                                         ; preds = %if.end21, %if.then27
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %bbs_modified, align 8, !tbaa !3
  %insns_modified = getelementptr inbounds %struct.df* %df, i64 0, i32 19
  %13 = load %struct.bitmap_head_def** %insns_modified, align 8, !tbaa !3
  %tobool34 = icmp eq %struct.bitmap_head_def* %13, null
  br i1 %tobool34, label %if.end45, label %if.then39

if.then39:                                        ; preds = %if.end32
  tail call void @bitmap_clear(%struct.bitmap_head_def* %13) #8
  %14 = load %struct.bitmap_head_def** %insns_modified, align 8, !tbaa !3
  %15 = bitcast %struct.bitmap_head_def* %14 to i8*
  tail call void @free(i8* %15) #8
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %insns_modified, align 8, !tbaa !3
  br label %if.end45

if.end45:                                         ; preds = %if.end32, %if.then39
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %insns_modified, align 8, !tbaa !3
  %all_blocks = getelementptr inbounds %struct.df* %df, i64 0, i32 21
  %16 = load %struct.bitmap_head_def** %all_blocks, align 8, !tbaa !3
  %tobool48 = icmp eq %struct.bitmap_head_def* %16, null
  br i1 %tobool48, label %do.end54, label %if.then49

if.then49:                                        ; preds = %if.end45
  tail call void @bitmap_clear(%struct.bitmap_head_def* %16) #8
  %17 = load %struct.bitmap_head_def** %all_blocks, align 8, !tbaa !3
  %18 = bitcast %struct.bitmap_head_def* %17 to i8*
  tail call void @free(i8* %18) #8
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %all_blocks, align 8, !tbaa !3
  br label %do.end54

do.end54:                                         ; preds = %if.end45, %if.then49
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %all_blocks, align 8, !tbaa !3
  tail call void @obstack_free(%struct.obstack* @df_ref_obstack, i8* null) #8
  ret void
}
