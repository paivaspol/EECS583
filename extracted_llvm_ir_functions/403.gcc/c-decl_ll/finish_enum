define %union.tree_node* @finish_enum(%union.tree_node* %enumtype, %union.tree_node* %values, %union.tree_node* %attributes) #0 {
entry:
  %enumtype.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %enumtype, %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %0 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %cmp = icmp eq %struct.binding_level* %0, %1
  %conv = zext i1 %cmp to i32
  %parm_flag.i = getelementptr inbounds %struct.binding_level* %1, i64 0, i32 6
  %2 = load i8* %parm_flag.i, align 1, !tbaa !1
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([26 x i8]* @.str221, i64 0, i64 0)) #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call1 = call %union.tree_node* @decl_attributes(%union.tree_node** %enumtype.addr, %union.tree_node* %attributes, i32 8) #8
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp2 = icmp eq %union.tree_node* %3, %values
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !0
  br label %if.end19

if.else:                                          ; preds = %if.end
  %value = getelementptr inbounds %union.tree_node* %values, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !0
  %pair.0.in288 = getelementptr inbounds %union.tree_node* %values, i64 0, i32 0, i32 0, i32 0
  %pair.0289 = load %union.tree_node** %pair.0.in288, align 8
  %tobool5290 = icmp eq %union.tree_node* %pair.0289, null
  br i1 %tobool5290, label %if.end19, label %for.body

for.body:                                         ; preds = %if.else, %for.body
  %pair.0293 = phi %union.tree_node* [ %pair.0, %for.body ], [ %pair.0289, %if.else ]
  %minnode.0292 = phi %union.tree_node* [ %minnode.1, %for.body ], [ %6, %if.else ]
  %maxnode.0291 = phi %union.tree_node* [ %maxnode.0., %for.body ], [ %6, %if.else ]
  %value8 = getelementptr inbounds %union.tree_node* %pair.0293, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value8 to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !0
  %call9 = call i32 @tree_int_cst_lt(%union.tree_node* %maxnode.0291, %union.tree_node* %8) #8
  %tobool10 = icmp eq i32 %call9, 0
  %maxnode.0. = select i1 %tobool10, %union.tree_node* %maxnode.0291, %union.tree_node* %8
  %call13 = call i32 @tree_int_cst_lt(%union.tree_node* %8, %union.tree_node* %minnode.0292) #8
  %tobool14 = icmp eq i32 %call13, 0
  %minnode.1 = select i1 %tobool14, %union.tree_node* %minnode.0292, %union.tree_node* %8
  %pair.0.in = getelementptr inbounds %union.tree_node* %pair.0293, i64 0, i32 0, i32 0, i32 0
  %pair.0 = load %union.tree_node** %pair.0.in, align 8
  %tobool5 = icmp eq %union.tree_node* %pair.0, null
  br i1 %tobool5, label %if.end19, label %for.body

if.end19:                                         ; preds = %if.else, %for.body, %if.then4
  %maxnode.2 = phi %union.tree_node* [ %4, %if.then4 ], [ %6, %if.else ], [ %maxnode.0., %for.body ]
  %minnode.2 = phi %union.tree_node* [ %4, %if.then4 ], [ %6, %if.else ], [ %minnode.1, %for.body ]
  %call20 = call i32 @tree_int_cst_sgn(%union.tree_node* %minnode.2) #8
  %call20.lobit = lshr i32 %call20, 31
  %call20.lobit.not = xor i32 %call20.lobit, 1
  %call23 = call i32 @min_precision(%union.tree_node* %minnode.2, i32 %call20.lobit.not) #8
  %call24 = call i32 @min_precision(%union.tree_node* %maxnode.2, i32 %call20.lobit.not) #8
  %cmp25 = icmp ugt i32 %call23, %call24
  br i1 %cmp25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end19
  %call27 = call i32 @min_precision(%union.tree_node* %minnode.2, i32 %call20.lobit.not) #8
  br label %cond.end

cond.false:                                       ; preds = %if.end19
  %call28 = call i32 @min_precision(%union.tree_node* %maxnode.2, i32 %call20.lobit.not) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call27, %cond.true ], [ %call28, %cond.false ]
  %9 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %type = bitcast %union.tree_node* %9 to %struct.tree_type*
  %packed_flag = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %10 = bitcast [4 x i8]* %packed_flag to i32*
  %bf.load = load i32* %10, align 4
  %bf.clear = and i32 %bf.load, 1048576
  %tobool29 = icmp eq i32 %bf.clear, 0
  br i1 %tobool29, label %lor.lhs.false, label %if.then36

lor.lhs.false:                                    ; preds = %cond.end
  %11 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %type30 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %precision31 = getelementptr inbounds %struct.tree_type* %type30, i64 0, i32 6
  %12 = bitcast [4 x i8]* %precision31 to i32*
  %bf.load32 = load i32* %12, align 4
  %bf.clear33 = and i32 %bf.load32, 511
  %cmp34 = icmp sgt i32 %cond, %bf.clear33
  br i1 %cmp34, label %if.then36, label %if.end51

if.then36:                                        ; preds = %cond.end, %lor.lhs.false
  %call37 = call %union.tree_node* @type_for_size(i32 %cond, i32 %call20.lobit.not) #8
  %cmp38 = icmp eq %union.tree_node* %call37, null
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %if.then36
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([51 x i8]* @.str222, i64 0, i64 0)) #8
  %13 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !0
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.then36
  %narrowest.0 = phi %union.tree_node* [ %13, %if.then40 ], [ %call37, %if.then36 ]
  %type42 = bitcast %union.tree_node* %narrowest.0 to %struct.tree_type*
  %precision43 = getelementptr inbounds %struct.tree_type* %type42, i64 0, i32 6
  %14 = bitcast [4 x i8]* %precision43 to i32*
  %bf.load44 = load i32* %14, align 4
  %bf.clear45 = and i32 %bf.load44, 511
  %.pre = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %type52.phi.trans.insert = bitcast %union.tree_node* %.pre to %struct.tree_type*
  %precision53.phi.trans.insert = getelementptr inbounds %struct.tree_type* %type52.phi.trans.insert, i64 0, i32 6
  %.phi.trans.insert = bitcast [4 x i8]* %precision53.phi.trans.insert to i32*
  %bf.load54.pre = load i32* %.phi.trans.insert, align 4
  br label %if.end51

if.end51:                                         ; preds = %lor.lhs.false, %if.end41
  %bf.load54 = phi i32 [ %bf.load54.pre, %if.end41 ], [ %bf.load32, %lor.lhs.false ]
  %precision.0 = phi i32 [ %bf.clear45, %if.end41 ], [ %bf.clear33, %lor.lhs.false ]
  %bf.clear55 = and i32 %bf.load54, 511
  %cmp56 = icmp eq i32 %precision.0, %bf.clear55
  br i1 %cmp56, label %if.then58, label %if.else60

if.then58:                                        ; preds = %if.end51
  %call59 = call %union.tree_node* @type_for_size(i32 %precision.0, i32 0) #8
  %.pre298 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  br label %if.end61

if.else60:                                        ; preds = %if.end51
  %15 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then58
  %16 = phi %union.tree_node* [ %.pre298, %if.then58 ], [ %15, %if.else60 ]
  %enum_value_type.0 = phi %union.tree_node* [ %call59, %if.then58 ], [ %15, %if.else60 ]
  %17 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 12
  store %union.tree_node* %minnode.2, %union.tree_node** %17, align 8, !tbaa !0
  %18 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %19 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 13
  store %union.tree_node* %maxnode.2, %union.tree_node** %19, align 8, !tbaa !0
  %20 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %type64 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %precision65 = getelementptr inbounds %struct.tree_type* %type64, i64 0, i32 6
  %21 = bitcast [4 x i8]* %precision65 to i32*
  %bf.load66 = load i32* %21, align 4
  %bf.clear67 = and i32 %bf.load66, -512
  %bf.set = or i32 %bf.clear67, %precision.0
  store i32 %bf.set, i32* %21, align 4
  %22 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %unsigned_flag = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load69 = load i32* %23, align 8
  %bf.shl = shl nuw nsw i32 %call20.lobit.not, 13
  %bf.clear71 = and i32 %bf.load69, -8193
  %bf.set72 = or i32 %bf.clear71, %bf.shl
  store i32 %bf.set72, i32* %23, align 8
  %24 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %size = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 2
  %25 = bitcast i32* %size to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %25, align 8, !tbaa !0
  %26 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  call void @layout_type(%union.tree_node* %26) #8
  %27 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp74 = icmp eq %union.tree_node* %27, %values
  br i1 %cmp74, label %if.end145, label %for.cond77.preheader

for.cond77.preheader:                             ; preds = %if.end61
  %tobool78286 = icmp eq %union.tree_node* %values, null
  br i1 %tobool78286, label %for.end142, label %for.body79

for.body79:                                       ; preds = %for.cond77.preheader, %if.end131
  %pair.1287 = phi %union.tree_node* [ %59, %if.end131 ], [ %values, %for.cond77.preheader ]
  %purpose = getelementptr inbounds %union.tree_node* %pair.1287, i64 0, i32 0, i32 1
  %28 = load i8** %purpose, align 8
  %29 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %type82 = getelementptr inbounds i8* %28, i64 8
  %30 = bitcast i8* %type82 to %union.tree_node**
  store %union.tree_node* %29, %union.tree_node** %30, align 8, !tbaa !0
  %31 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %size84 = getelementptr inbounds %union.tree_node* %31, i64 0, i32 0, i32 2
  %32 = bitcast i32* %size84 to %union.tree_node**
  %33 = load %union.tree_node** %32, align 8, !tbaa !0
  %size85 = getelementptr inbounds i8* %28, i64 40
  %34 = bitcast i8* %size85 to %union.tree_node**
  store %union.tree_node* %33, %union.tree_node** %34, align 8, !tbaa !0
  %35 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %36 = getelementptr inbounds %union.tree_node* %35, i64 0, i32 0, i32 4
  %37 = load %union.tree_node** %36, align 8, !tbaa !0
  %size_unit88 = getelementptr inbounds i8* %28, i64 64
  %38 = bitcast i8* %size_unit88 to %union.tree_node**
  store %union.tree_node* %37, %union.tree_node** %38, align 8, !tbaa !0
  %39 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %align = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 7
  %40 = bitcast %union.tree_node** %align to i32*
  %41 = load i32* %40, align 4, !tbaa !3
  %u1 = getelementptr inbounds i8* %28, i64 56
  %42 = bitcast i8* %u1 to i32*
  %bf.load91 = load i32* %42, align 4
  %bf.value92 = and i32 %41, 16777215
  %bf.clear93 = and i32 %bf.load91, -16777216
  %bf.set94 = or i32 %bf.clear93, %bf.value92
  store i32 %bf.set94, i32* %42, align 4
  %43 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %type95 = bitcast %union.tree_node* %43 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type* %type95, i64 0, i32 6
  %44 = bitcast [4 x i8]* %user_align to i32*
  %bf.load96 = load i32* %44, align 4
  %bf.lshr97 = lshr i32 %bf.load96, 31
  %user_align99 = getelementptr inbounds i8* %28, i64 48
  %45 = bitcast i8* %user_align99 to i64*
  %46 = zext i32 %bf.lshr97 to i64
  %bf.load100 = load i64* %45, align 8
  %bf.shl102 = shl nuw nsw i64 %46, 35
  %bf.clear103 = and i64 %bf.load100, -34359738369
  %bf.set104 = or i64 %bf.shl102, %bf.clear103
  store i64 %bf.set104, i64* %45, align 8
  %47 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %type105 = bitcast %union.tree_node* %47 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type105, i64 0, i32 6
  %48 = bitcast [4 x i8]* %mode to i32*
  %bf.load106 = load i32* %48, align 4
  %bf.lshr107 = lshr i32 %bf.load106, 9
  %49 = zext i32 %bf.lshr107 to i64
  %bf.value112 = and i64 %49, 127
  %bf.clear113 = and i64 %bf.set104, -256
  %bf.set114 = or i64 %bf.value112, %bf.clear113
  store i64 %bf.set114, i64* %45, align 8
  %initial = getelementptr inbounds i8* %28, i64 104
  %50 = bitcast i8* %initial to %union.tree_node**
  %51 = load %union.tree_node** %50, align 8, !tbaa !0
  %call117 = call i32 @int_fits_type_p(%union.tree_node* %51, %union.tree_node* %enum_value_type.0) #8
  %tobool118 = icmp eq i32 %call117, 0
  br i1 %tobool118, label %if.else125, label %if.then119

if.then119:                                       ; preds = %for.body79
  %52 = load %union.tree_node** %50, align 8, !tbaa !0
  %call122 = call %union.tree_node* @convert(%union.tree_node* %enum_value_type.0, %union.tree_node* %52) #8
  br label %if.end131

if.else125:                                       ; preds = %for.body79
  %53 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %54 = load %union.tree_node** %50, align 8, !tbaa !0
  %call128 = call %union.tree_node* @convert(%union.tree_node* %53, %union.tree_node* %54) #8
  br label %if.end131

if.end131:                                        ; preds = %if.else125, %if.then119
  %storemerge = phi %union.tree_node* [ %call128, %if.else125 ], [ %call122, %if.then119 ]
  store %union.tree_node* %storemerge, %union.tree_node** %50, align 8, !tbaa !0
  %name = getelementptr inbounds i8* %28, i64 72
  %55 = bitcast i8* %name to %union.tree_node**
  %56 = load %union.tree_node** %55, align 8, !tbaa !0
  %.c = bitcast %union.tree_node* %56 to i8*
  store i8* %.c, i8** %purpose, align 8, !tbaa !0
  %57 = load %union.tree_node** %50, align 8, !tbaa !0
  %value138 = getelementptr inbounds %union.tree_node* %pair.1287, i64 0, i32 0, i32 2
  %58 = bitcast i32* %value138 to %union.tree_node**
  store %union.tree_node* %57, %union.tree_node** %58, align 8, !tbaa !0
  %chain141 = getelementptr inbounds %union.tree_node* %pair.1287, i64 0, i32 0, i32 0, i32 0
  %59 = load %union.tree_node** %chain141, align 8, !tbaa !0
  %tobool78 = icmp eq %union.tree_node* %59, null
  br i1 %tobool78, label %for.end142, label %for.body79

for.end142:                                       ; preds = %if.end131, %for.cond77.preheader
  %60 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %values144 = getelementptr inbounds %union.tree_node* %60, i64 0, i32 0, i32 1
  %values.c = bitcast %union.tree_node* %values to i8*
  store i8* %values.c, i8** %values144, align 8, !tbaa !0
  br label %if.end145

if.end145:                                        ; preds = %if.end61, %for.end142
  %61 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %62 = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 15
  %tem.0283 = load %union.tree_node** %62, align 8
  %tobool148284 = icmp eq %union.tree_node* %tem.0283, null
  br i1 %tobool148284, label %for.end225, label %for.body149

for.body149:                                      ; preds = %if.end145, %for.inc223
  %63 = phi %union.tree_node* [ %94, %for.inc223 ], [ %61, %if.end145 ]
  %tem.0285 = phi %union.tree_node* [ %tem.0, %for.inc223 ], [ %tem.0283, %if.end145 ]
  %cmp150 = icmp eq %union.tree_node* %tem.0285, %63
  br i1 %cmp150, label %for.inc223, label %if.end153

if.end153:                                        ; preds = %for.body149
  %values155 = getelementptr inbounds %union.tree_node* %63, i64 0, i32 0, i32 1
  %64 = load i8** %values155, align 8
  %type156 = bitcast %union.tree_node* %tem.0285 to %struct.tree_type*
  %values157 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 1
  store i8* %64, i8** %values157, align 8, !tbaa !0
  %65 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %66 = getelementptr inbounds %union.tree_node* %65, i64 0, i32 0, i32 12
  %67 = load %union.tree_node** %66, align 8, !tbaa !0
  %68 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 12
  store %union.tree_node* %67, %union.tree_node** %68, align 8, !tbaa !0
  %69 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %70 = getelementptr inbounds %union.tree_node* %69, i64 0, i32 0, i32 13
  %71 = load %union.tree_node** %70, align 8, !tbaa !0
  %72 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 13
  store %union.tree_node* %71, %union.tree_node** %72, align 8, !tbaa !0
  %73 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %size167 = getelementptr inbounds %union.tree_node* %73, i64 0, i32 0, i32 2
  %74 = bitcast i32* %size167 to %union.tree_node**
  %75 = load %union.tree_node** %74, align 8, !tbaa !0
  %size169 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 2
  %76 = bitcast i32* %size169 to %union.tree_node**
  store %union.tree_node* %75, %union.tree_node** %76, align 8, !tbaa !0
  %77 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %78 = getelementptr inbounds %union.tree_node* %77, i64 0, i32 0, i32 4
  %79 = load %union.tree_node** %78, align 8, !tbaa !0
  %80 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 4
  store %union.tree_node* %79, %union.tree_node** %80, align 8, !tbaa !0
  %81 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %type174 = bitcast %union.tree_node* %81 to %struct.tree_type*
  %mode175 = getelementptr inbounds %struct.tree_type* %type174, i64 0, i32 6
  %82 = bitcast [4 x i8]* %mode175 to i32*
  %bf.load176 = load i32* %82, align 4
  %bf.clear178 = and i32 %bf.load176, 65024
  %mode180 = getelementptr inbounds %struct.tree_type* %type156, i64 0, i32 6
  %83 = bitcast [4 x i8]* %mode180 to i32*
  %bf.load181 = load i32* %83, align 4
  %bf.clear184 = and i32 %bf.load181, -65025
  %bf.set185 = or i32 %bf.clear184, %bf.clear178
  store i32 %bf.set185, i32* %83, align 4
  %84 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %type186 = bitcast %union.tree_node* %84 to %struct.tree_type*
  %precision187 = getelementptr inbounds %struct.tree_type* %type186, i64 0, i32 6
  %85 = bitcast [4 x i8]* %precision187 to i32*
  %bf.load188 = load i32* %85, align 4
  %bf.clear189 = and i32 %bf.load188, 511
  %bf.clear194 = and i32 %bf.set185, -512
  %bf.set195 = or i32 %bf.clear194, %bf.clear189
  store i32 %bf.set195, i32* %83, align 4
  %86 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %align197 = getelementptr inbounds %union.tree_node* %86, i64 0, i32 0, i32 7
  %87 = bitcast %union.tree_node** %align197 to i32*
  %88 = load i32* %87, align 4, !tbaa !3
  %align199 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 7
  %89 = bitcast %union.tree_node** %align199 to i32*
  store i32 %88, i32* %89, align 4, !tbaa !3
  %type200 = bitcast %union.tree_node* %86 to %struct.tree_type*
  %user_align201 = getelementptr inbounds %struct.tree_type* %type200, i64 0, i32 6
  %90 = bitcast [4 x i8]* %user_align201 to i32*
  %bf.load202 = load i32* %90, align 4
  %bf.lshr203 = and i32 %bf.load202, -2147483648
  %bf.clear209 = and i32 %bf.set195, 2147483647
  %bf.set210 = or i32 %bf.clear209, %bf.lshr203
  store i32 %bf.set210, i32* %83, align 4
  %91 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  %unsigned_flag212 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 0, i32 2
  %92 = bitcast [4 x i8]* %unsigned_flag212 to i32*
  %bf.load213 = load i32* %92, align 8
  %bf.clear215 = and i32 %bf.load213, 8192
  %unsigned_flag217 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 0, i32 2
  %93 = bitcast [4 x i8]* %unsigned_flag217 to i32*
  %bf.load218 = load i32* %93, align 8
  %bf.clear221 = and i32 %bf.load218, -8193
  %bf.set222 = or i32 %bf.clear221, %bf.clear215
  store i32 %bf.set222, i32* %93, align 8
  %.pre299 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  br label %for.inc223

for.inc223:                                       ; preds = %for.body149, %if.end153
  %94 = phi %union.tree_node* [ %63, %for.body149 ], [ %.pre299, %if.end153 ]
  %95 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 14
  %tem.0 = load %union.tree_node** %95, align 8
  %tobool148 = icmp eq %union.tree_node* %tem.0, null
  br i1 %tobool148, label %for.end225, label %for.body149

for.end225:                                       ; preds = %for.inc223, %if.end145
  %.lcssa = phi %union.tree_node* [ %61, %if.end145 ], [ %94, %for.inc223 ]
  call void @rest_of_type_compilation(%union.tree_node* %.lcssa, i32 %conv) #8
  %96 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !0
  ret %union.tree_node* %96
}
