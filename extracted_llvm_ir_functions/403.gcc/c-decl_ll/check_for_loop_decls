define void @check_for_loop_decls() #0 {
entry:
  %0 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([53 x i8]* @.str252, i64 0, i64 0)) #8
  br label %for.end56

if.end:                                           ; preds = %entry
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %tags.i = getelementptr inbounds %struct.binding_level* %1, i64 0, i32 1
  %t.075 = load %union.tree_node** %tags.i, align 8
  %tobool176 = icmp eq %union.tree_node* %t.075, null
  br i1 %tobool176, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %t.077 = phi %union.tree_node* [ %t.0, %for.inc ], [ %t.075, %if.end ]
  %purpose = getelementptr inbounds %union.tree_node* %t.077, i64 0, i32 0, i32 1
  %2 = load i8** %purpose, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %for.inc, label %if.then2

if.then2:                                         ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %t.077, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !0
  %code4 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %code4 to i32*
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp5 = icmp eq i32 %bf.clear, 20
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then2
  %str = getelementptr inbounds i8* %2, i64 32
  %6 = bitcast i8* %str to i8**
  %7 = load i8** %6, align 8, !tbaa !0
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([55 x i8]* @.str253, i64 0, i64 0), i8* %7) #8
  br label %for.inc

if.else:                                          ; preds = %if.then2
  %cmp9 = icmp eq i32 %bf.clear, 21
  %str15 = getelementptr inbounds i8* %2, i64 32
  %8 = bitcast i8* %str15 to i8**
  %9 = load i8** %8, align 8, !tbaa !0
  br i1 %cmp9, label %if.then10, label %if.else16

if.then10:                                        ; preds = %if.else
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([54 x i8]* @.str254, i64 0, i64 0), i8* %9) #8
  br label %for.inc

if.else16:                                        ; preds = %if.else
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([53 x i8]* @.str255, i64 0, i64 0), i8* %9) #8
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then10, %if.else16, %if.then6
  %chain = getelementptr inbounds %union.tree_node* %t.077, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain, align 8
  %tobool1 = icmp eq %union.tree_node* %t.0, null
  br i1 %tobool1, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.inc
  %.pre = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end
  %10 = phi %struct.binding_level* [ %.pre, %for.cond.for.end_crit_edge ], [ %1, %if.end ]
  %names.i = getelementptr inbounds %struct.binding_level* %10, i64 0, i32 0
  %t.171 = load %union.tree_node** %names.i, align 8
  %tobool2872 = icmp eq %union.tree_node* %t.171, null
  br i1 %tobool2872, label %for.end56, label %for.body29

for.body29:                                       ; preds = %for.end, %for.inc53
  %t.173 = phi %union.tree_node* [ %t.1, %for.inc53 ], [ %t.171, %for.end ]
  %code31 = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast [4 x i8]* %code31 to i32*
  %bf.load32 = load i32* %11, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 34
  br i1 %cmp34, label %if.else37, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body29
  %name = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 8
  %12 = load %union.tree_node** %name, align 8, !tbaa !0
  %tobool35 = icmp eq %union.tree_node* %12, null
  br i1 %tobool35, label %if.else37, label %if.then36

if.then36:                                        ; preds = %land.lhs.true
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.173, i8* getelementptr inbounds ([67 x i8]* @.str256, i64 0, i64 0)) #8
  br label %for.inc53

if.else37:                                        ; preds = %land.lhs.true, %for.body29
  %bf.clear40 = and i32 %bf.load32, 262144
  %tobool41 = icmp eq i32 %bf.clear40, 0
  br i1 %tobool41, label %if.else43, label %if.then42

if.then42:                                        ; preds = %if.else37
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.173, i8* getelementptr inbounds ([70 x i8]* @.str257, i64 0, i64 0)) #8
  br label %for.inc53

if.else43:                                        ; preds = %if.else37
  %external_flag = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 5
  %13 = bitcast [8 x i8]* %external_flag to i64*
  %bf.load45 = load i64* %13, align 8
  %bf.cast = and i64 %bf.load45, 256
  %tobool48 = icmp eq i64 %bf.cast, 0
  br i1 %tobool48, label %for.inc53, label %if.then49

if.then49:                                        ; preds = %if.else43
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.173, i8* getelementptr inbounds ([72 x i8]* @.str258, i64 0, i64 0)) #8
  br label %for.inc53

for.inc53:                                        ; preds = %if.else43, %if.then36, %if.then49, %if.then42
  %chain55 = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 0, i32 0
  %t.1 = load %union.tree_node** %chain55, align 8
  %tobool28 = icmp eq %union.tree_node* %t.1, null
  br i1 %tobool28, label %for.end56, label %for.body29

for.end56:                                        ; preds = %for.end, %for.inc53, %if.then
  ret void
}
