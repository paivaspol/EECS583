define %union.tree_node* @grokfield(i8* nocapture %filename, i32 %line, %union.tree_node* %declarator, %union.tree_node* %declspecs, %union.tree_node* %width) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %filename}, i64 0, metadata !1618), !dbg !4523
  tail call void @llvm.dbg.value(metadata !{i32 %line}, i64 0, metadata !1619), !dbg !4524
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %declarator}, i64 0, metadata !1620), !dbg !4525
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %declspecs}, i64 0, metadata !1621), !dbg !4525
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %width}, i64 0, metadata !1622), !dbg !4525
  %cmp = icmp eq %union.tree_node* %declarator, null, !dbg !4526
  %cmp1 = icmp eq %union.tree_node* %width, null, !dbg !4526
  %or.cond = and i1 %cmp, %cmp1, !dbg !4526
  br i1 %or.cond, label %if.then, label %if.end20, !dbg !4526

if.then:                                          ; preds = %entry
  %value2 = getelementptr inbounds %union.tree_node* %declspecs, i64 0, i32 0, i32 2, !dbg !4527
  %0 = bitcast i32* %value2 to %union.tree_node**, !dbg !4527
  %1 = load %union.tree_node** %0, align 8, !dbg !4527, !tbaa !2183
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %1}, i64 0, metadata !1624), !dbg !4527
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2, !dbg !4528
  %2 = bitcast [4 x i8]* %code to i32*, !dbg !4528
  %bf.load = load i32* %2, align 8, !dbg !4528
  %bf.clear = and i32 %bf.load, 255, !dbg !4528
  %cmp3 = icmp eq i32 %bf.clear, 33, !dbg !4528
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !4528

if.then4:                                         ; preds = %if.then
  %type6 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1, !dbg !4529
  %3 = load %union.tree_node** %type6, align 8, !dbg !4529, !tbaa !2183
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %3}, i64 0, metadata !1624), !dbg !4529
  %code8.phi.trans.insert = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %.phi.trans.insert = bitcast [4 x i8]* %code8.phi.trans.insert to i32*
  %bf.load9.pre = load i32* %.phi.trans.insert, align 8, !dbg !4530
  br label %if.end, !dbg !4529

if.end:                                           ; preds = %if.then4, %if.then
  %bf.load9 = phi i32 [ %bf.load9.pre, %if.then4 ], [ %bf.load, %if.then ]
  %bf.clear10 = and i32 %bf.load9, 255, !dbg !4530
  %bf.clear10.off = add i32 %bf.clear10, -20, !dbg !4530
  %switch = icmp ult i32 %bf.clear10.off, 2, !dbg !4530
  br i1 %switch, label %if.end20, label %if.then18, !dbg !4530

if.then18:                                        ; preds = %if.end
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([66 x i8]* @.str199, i64 0, i64 0)) #9, !dbg !4531
  br label %return, !dbg !4533

if.end20:                                         ; preds = %if.end, %entry
  %tobool = icmp ne %union.tree_node* %width, null, !dbg !4534
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !4534
  %call = tail call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 %cond, i32 0) #11, !dbg !4534
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call}, i64 0, metadata !1623), !dbg !4534
  tail call void @finish_decl(%union.tree_node* %call, %union.tree_node* null, %union.tree_node* null) #11, !dbg !4535
  %initial = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 12, !dbg !4536
  store %union.tree_node* %width, %union.tree_node** %initial, align 8, !dbg !4536, !tbaa !2183
  tail call void @maybe_objc_check_decl(%union.tree_node* %call) #9, !dbg !4537
  br label %return, !dbg !4538

return:                                           ; preds = %if.end20, %if.then18
  %retval.0 = phi %union.tree_node* [ null, %if.then18 ], [ %call, %if.end20 ]
  ret %union.tree_node* %retval.0, !dbg !4539
}
