define %union.tree_node* @grokfield(i8* nocapture %filename, i32 %line, %union.tree_node* %declarator, %union.tree_node* %declspecs, %union.tree_node* %width) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %declarator, null
  %cmp1 = icmp eq %union.tree_node* %width, null
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end20

if.then:                                          ; preds = %entry
  %value2 = getelementptr inbounds %union.tree_node* %declspecs, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value2 to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %2 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp3 = icmp eq i32 %bf.clear, 33
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %type6 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type6, align 8, !tbaa !0
  %code8.phi.trans.insert = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %.phi.trans.insert = bitcast [4 x i8]* %code8.phi.trans.insert to i32*
  %bf.load9.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %bf.load9 = phi i32 [ %bf.load9.pre, %if.then4 ], [ %bf.load, %if.then ]
  %bf.clear10 = and i32 %bf.load9, 255
  %bf.clear10.off = add i32 %bf.clear10, -20
  %switch = icmp ult i32 %bf.clear10.off, 2
  br i1 %switch, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([66 x i8]* @.str199, i64 0, i64 0)) #8
  br label %return

if.end20:                                         ; preds = %if.end, %entry
  %tobool = icmp ne %union.tree_node* %width, null
  %cond = select i1 %tobool, i32 4, i32 3
  %call = tail call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 %cond, i32 0) #10
  tail call void @finish_decl(%union.tree_node* %call, %union.tree_node* null, %union.tree_node* null) #10
  %initial = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 12
  store %union.tree_node* %width, %union.tree_node** %initial, align 8, !tbaa !0
  tail call void @maybe_objc_check_decl(%union.tree_node* %call) #8
  br label %return

return:                                           ; preds = %if.end20, %if.then18
  %retval.0 = phi %union.tree_node* [ null, %if.then18 ], [ %call, %if.end20 ]
  ret %union.tree_node* %retval.0
}
