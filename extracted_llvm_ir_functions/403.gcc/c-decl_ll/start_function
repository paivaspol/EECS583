define i32 @start_function(%union.tree_node* %declspecs, %union.tree_node* %declarator, %union.tree_node* %attributes) #0 {
entry:
  %decl1 = alloca %union.tree_node*, align 8
  %0 = load i32* @immediate_size_expand, align 4, !tbaa !3
  store i32 0, i32* @current_function_returns_value, align 4, !tbaa !3
  store i32 0, i32* @current_function_returns_null, align 4, !tbaa !3
  store i32 0, i32* @current_function_returns_abnormally, align 4, !tbaa !3
  store i32 0, i32* @warn_about_return_type, align 4, !tbaa !3
  store i32 0, i32* @current_extern_inline, align 4, !tbaa !3
  store i1 false, i1* @c_function_varargs, align 1
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8, !tbaa !0
  store %union.tree_node* null, %union.tree_node** @shadowed_labels, align 8, !tbaa !0
  store i32 0, i32* @immediate_size_expand, align 4, !tbaa !3
  %call = call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 1, i32 1) #10
  store %union.tree_node* %call, %union.tree_node** %decl1, align 8, !tbaa !0
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 %0, i32* @immediate_size_expand, align 4, !tbaa !3
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1, %union.tree_node* %attributes, i32 0) #8
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %2 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp2 = icmp eq %struct.binding_level* %1, %2
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %3 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void @maybe_apply_pragma_weak(%union.tree_node* %3) #8
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %lang_specific = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 24
  %5 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !0
  %6 = getelementptr inbounds %struct.lang_decl* %5, i64 0, i32 0, i32 0
  %bf.load = load i8* %6, align 4
  %bf.clear = and i8 %bf.load, 1
  %tobool = icmp eq i8 %bf.clear, 0
  br i1 %tobool, label %if.end16, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end4
  %uninlinable = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 5
  %7 = bitcast [8 x i8]* %uninlinable to i64*
  %bf.load6 = load i64* %7, align 8
  %bf.cast8 = and i64 %bf.load6, 68719476736
  %tobool9 = icmp eq i64 %bf.cast8, 0
  br i1 %tobool9, label %if.end16, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %land.lhs.true
  %attributes12 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 16
  %8 = load %union.tree_node** %attributes12, align 8, !tbaa !0
  %call13 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8]* @.str177, i64 0, i64 0), %union.tree_node* %8) #8
  %tobool14 = icmp eq %union.tree_node* %call13, null
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %land.lhs.true10
  %9 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %9, i8* getelementptr inbounds ([46 x i8]* @.str178, i64 0, i64 0)) #8
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.end4, %if.then15
  %10 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void @announce_function(%union.tree_node* %10) #8
  %11 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %type = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type, align 8, !tbaa !0
  %type18 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type18, align 8, !tbaa !0
  %size = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 2
  %14 = bitcast i32* %size to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !0
  %cmp20 = icmp eq %union.tree_node* %15, null
  br i1 %cmp20, label %lor.lhs.false, label %if.end36

lor.lhs.false:                                    ; preds = %if.end16
  %code = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast [4 x i8]* %code to i32*
  %bf.load26 = load i32* %16, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 5
  br i1 %cmp28, label %if.end36, label %if.then29

if.then29:                                        ; preds = %lor.lhs.false
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str226, i64 0, i64 0)) #8
  %17 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !0
  %18 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %type31 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 1
  %19 = load %union.tree_node** %type31, align 8, !tbaa !0
  %values = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 1
  %20 = load i8** %values, align 8
  %21 = bitcast i8* %20 to %union.tree_node*
  %call33 = call %union.tree_node* @build_function_type(%union.tree_node* %17, %union.tree_node* %21) #8
  %22 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %type35 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call33, %union.tree_node** %type35, align 8, !tbaa !0
  br label %if.end36

if.end36:                                         ; preds = %if.end16, %if.then29, %lor.lhs.false
  %23 = load i32* @warn_about_return_type, align 4, !tbaa !3
  %tobool37 = icmp eq i32 %23, 0
  br i1 %tobool37, label %if.end39, label %if.then38

if.then38:                                        ; preds = %if.end36
  call void (i8*, ...)* @pedwarn_c99(i8* getelementptr inbounds ([30 x i8]* @.str227, i64 0, i64 0)) #8
  br label %if.end39

if.end39:                                         ; preds = %if.end36, %if.then38
  %24 = load %union.tree_node** @last_function_parms, align 8, !tbaa !0
  store %union.tree_node* %24, %union.tree_node** @current_function_parms, align 8, !tbaa !0
  %25 = load %union.tree_node** @last_function_parm_tags, align 8, !tbaa !0
  store %union.tree_node* %25, %union.tree_node** @current_function_parm_tags, align 8, !tbaa !0
  %26 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %27 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %initial = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 12
  store %union.tree_node* %26, %union.tree_node** %initial, align 8, !tbaa !0
  %28 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %name = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 8
  %29 = load %union.tree_node** %name, align 8, !tbaa !0
  %call42 = call %union.tree_node* @lookup_name_current_level(%union.tree_node* %29) #10
  %cond = icmp eq %union.tree_node* %call42, null
  br i1 %cond, label %if.then87, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %if.end39
  %type46 = getelementptr inbounds %union.tree_node* %call42, i64 0, i32 0, i32 0, i32 1
  %30 = load %union.tree_node** %type46, align 8, !tbaa !0
  %code48 = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast [4 x i8]* %code48 to i32*
  %bf.load49 = load i32* %31, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 23
  br i1 %cmp51, label %land.lhs.true52, label %if.end90

land.lhs.true52:                                  ; preds = %land.lhs.true44
  %built_in_class = getelementptr inbounds %union.tree_node* %call42, i64 0, i32 0, i32 5
  %32 = bitcast [8 x i8]* %built_in_class to i64*
  %bf.load54 = load i64* %32, align 8
  %bf.cast57 = and i64 %bf.load54, 1610612736
  %cmp58 = icmp eq i64 %bf.cast57, 0
  br i1 %cmp58, label %land.lhs.true59, label %if.end90

land.lhs.true59:                                  ; preds = %land.lhs.true52
  %type61 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type61, align 8, !tbaa !0
  %type63 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 1
  %34 = load %union.tree_node** %type63, align 8, !tbaa !0
  %35 = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 15
  %36 = load %union.tree_node** %35, align 8, !tbaa !0
  %type68 = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 0, i32 1
  %37 = load %union.tree_node** %type68, align 8, !tbaa !0
  %38 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 15
  %39 = load %union.tree_node** %38, align 8, !tbaa !0
  %cmp71 = icmp eq %union.tree_node* %36, %39
  br i1 %cmp71, label %land.lhs.true72, label %if.end90

land.lhs.true72:                                  ; preds = %land.lhs.true59
  %values76 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 1
  %40 = load i8** %values76, align 8
  %cmp77 = icmp eq i8* %40, null
  br i1 %cmp77, label %if.then78, label %if.end90

if.then78:                                        ; preds = %land.lhs.true72
  store %union.tree_node* %30, %union.tree_node** %type61, align 8, !tbaa !0
  %filename = getelementptr inbounds %union.tree_node* %call42, i64 0, i32 0, i32 1
  %41 = load i8** %filename, align 8, !tbaa !0
  store i8* %41, i8** @current_function_prototype_file, align 8, !tbaa !0
  %linenum = getelementptr inbounds %union.tree_node* %call42, i64 0, i32 0, i32 2
  %42 = load i32* %linenum, align 4, !tbaa !3
  store i32 %42, i32* @current_function_prototype_line, align 4, !tbaa !3
  br label %if.end90

if.then87:                                        ; preds = %if.end39
  %43 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 9
  %44 = load %union.tree_node** %43, align 8, !tbaa !0
  br label %if.end90

if.end90:                                         ; preds = %land.lhs.true59, %land.lhs.true72, %if.then78, %land.lhs.true52, %land.lhs.true44, %if.then87
  %old_decl.0 = phi %union.tree_node* [ %44, %if.then87 ], [ %call42, %land.lhs.true44 ], [ %call42, %land.lhs.true52 ], [ %call42, %if.then78 ], [ %call42, %land.lhs.true72 ], [ %call42, %land.lhs.true59 ]
  %45 = load i32* @warn_strict_prototypes, align 4, !tbaa !3
  %tobool91 = icmp eq i32 %45, 0
  br i1 %tobool91, label %if.else, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %if.end90
  %46 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %type94 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 1
  %47 = load %union.tree_node** %type94, align 8, !tbaa !0
  %values96 = getelementptr inbounds %union.tree_node* %47, i64 0, i32 0, i32 1
  %48 = load i8** %values96, align 8
  %cmp97 = icmp eq i8* %48, null
  br i1 %cmp97, label %land.lhs.true98, label %if.else

land.lhs.true98:                                  ; preds = %land.lhs.true92
  %cmp99 = icmp eq %union.tree_node* %old_decl.0, null
  br i1 %cmp99, label %if.then121, label %land.lhs.true100

land.lhs.true100:                                 ; preds = %land.lhs.true98
  %type102 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 1
  %49 = load %union.tree_node** %type102, align 8, !tbaa !0
  %values104 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 1
  %50 = load i8** %values104, align 8
  %cmp105 = icmp eq i8* %50, null
  br i1 %cmp105, label %lor.lhs.false106, label %if.else

lor.lhs.false106:                                 ; preds = %land.lhs.true100
  %built_in_class108 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 5
  %51 = bitcast [8 x i8]* %built_in_class108 to i64*
  %bf.load109 = load i64* %51, align 8
  %bf.cast112 = and i64 %bf.load109, 1610612736
  %cmp113 = icmp ne i64 %bf.cast112, 0
  %bf.cast119 = and i64 %bf.load109, 1099511627776
  %tobool120 = icmp eq i64 %bf.cast119, 0
  %or.cond = and i1 %cmp113, %tobool120
  br i1 %or.cond, label %if.else, label %if.then121

if.then121:                                       ; preds = %lor.lhs.false106, %land.lhs.true98
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str228, i64 0, i64 0)) #8
  br label %if.end212

if.else:                                          ; preds = %lor.lhs.false106, %land.lhs.true100, %if.end90, %land.lhs.true92
  %52 = load i32* @warn_missing_prototypes, align 4, !tbaa !3
  %tobool122 = icmp eq i32 %52, 0
  br i1 %tobool122, label %if.else158.thread, label %land.lhs.true123

if.else158.thread:                                ; preds = %if.else
  %cmp161427 = icmp eq %union.tree_node* %old_decl.0, null
  br label %if.else175

land.lhs.true123:                                 ; preds = %if.else
  %53 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %public_flag = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 0, i32 2
  %54 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load125 = load i32* %54, align 8
  %bf.clear127 = and i32 %bf.load125, 524288
  %tobool128 = icmp eq i32 %bf.clear127, 0
  br i1 %tobool128, label %if.else158, label %land.lhs.true129

land.lhs.true129:                                 ; preds = %land.lhs.true123
  %cmp130 = icmp eq %union.tree_node* %old_decl.0, null
  br i1 %cmp130, label %land.lhs.true153, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %land.lhs.true129
  %type133 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 1
  %55 = load %union.tree_node** %type133, align 8, !tbaa !0
  %values135 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 1
  %56 = load i8** %values135, align 8
  %cmp136 = icmp eq i8* %56, null
  br i1 %cmp136, label %lor.lhs.false137, label %if.else158

lor.lhs.false137:                                 ; preds = %land.lhs.true131
  %built_in_class139 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 5
  %57 = bitcast [8 x i8]* %built_in_class139 to i64*
  %bf.load140 = load i64* %57, align 8
  %bf.cast143 = and i64 %bf.load140, 1610612736
  %cmp144 = icmp ne i64 %bf.cast143, 0
  %bf.cast151 = and i64 %bf.load140, 1099511627776
  %tobool152 = icmp eq i64 %bf.cast151, 0
  %or.cond410 = and i1 %cmp144, %tobool152
  br i1 %or.cond410, label %if.else158, label %land.lhs.true153

land.lhs.true153:                                 ; preds = %lor.lhs.false137, %land.lhs.true129
  %name155 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 8
  %58 = load %union.tree_node** %name155, align 8, !tbaa !0
  %59 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !0
  %cmp156 = icmp eq %union.tree_node* %58, %59
  br i1 %cmp156, label %if.else158, label %if.then157

if.then157:                                       ; preds = %land.lhs.true153
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %53, i8* getelementptr inbounds ([31 x i8]* @.str229, i64 0, i64 0)) #8
  br label %if.end212

if.else158:                                       ; preds = %lor.lhs.false137, %land.lhs.true131, %land.lhs.true123, %land.lhs.true153
  %cmp161 = icmp eq %union.tree_node* %old_decl.0, null
  %or.cond411 = or i1 %tobool122, %cmp161
  br i1 %or.cond411, label %if.else175, label %land.lhs.true162

land.lhs.true162:                                 ; preds = %if.else158
  %used_flag = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 2
  %60 = bitcast [4 x i8]* %used_flag to i32*
  %bf.load164 = load i32* %60, align 8
  %bf.clear166 = and i32 %bf.load164, 65536
  %tobool167 = icmp eq i32 %bf.clear166, 0
  br i1 %tobool167, label %if.else175, label %land.lhs.true168

land.lhs.true168:                                 ; preds = %land.lhs.true162
  %type170 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 1
  %61 = load %union.tree_node** %type170, align 8, !tbaa !0
  %values172 = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 1
  %62 = load i8** %values172, align 8
  %cmp173 = icmp eq i8* %62, null
  br i1 %cmp173, label %if.then174, label %if.else175

if.then174:                                       ; preds = %land.lhs.true168
  %63 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %63, i8* getelementptr inbounds ([54 x i8]* @.str230, i64 0, i64 0)) #8
  br label %if.end212

if.else175:                                       ; preds = %if.else158.thread, %land.lhs.true162, %if.else158, %land.lhs.true168
  %cmp161429 = phi i1 [ %cmp161427, %if.else158.thread ], [ %cmp161, %land.lhs.true162 ], [ %cmp161, %if.else158 ], [ %cmp161, %land.lhs.true168 ]
  %64 = load i32* @warn_missing_declarations, align 4, !tbaa !3
  %tobool176 = icmp eq i32 %64, 0
  br i1 %tobool176, label %if.end212, label %land.lhs.true177

land.lhs.true177:                                 ; preds = %if.else175
  %65 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %public_flag179 = getelementptr inbounds %union.tree_node* %65, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast [4 x i8]* %public_flag179 to i32*
  %bf.load180 = load i32* %66, align 8
  %bf.clear182 = and i32 %bf.load180, 524288
  %tobool183 = icmp ne i32 %bf.clear182, 0
  %or.cond412 = and i1 %tobool183, %cmp161429
  br i1 %or.cond412, label %land.lhs.true186, label %if.else191

land.lhs.true186:                                 ; preds = %land.lhs.true177
  %name188 = getelementptr inbounds %union.tree_node* %65, i64 0, i32 0, i32 8
  %67 = load %union.tree_node** %name188, align 8, !tbaa !0
  %68 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !0
  %cmp189 = icmp eq %union.tree_node* %67, %68
  br i1 %cmp189, label %if.else191, label %if.then190

if.then190:                                       ; preds = %land.lhs.true186
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %65, i8* getelementptr inbounds ([33 x i8]* @.str231, i64 0, i64 0)) #8
  br label %if.end212

if.else191:                                       ; preds = %land.lhs.true177, %land.lhs.true186
  %or.cond413 = or i1 %tobool176, %cmp161429
  br i1 %or.cond413, label %if.end212, label %land.lhs.true195

land.lhs.true195:                                 ; preds = %if.else191
  %used_flag197 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 2
  %69 = bitcast [4 x i8]* %used_flag197 to i32*
  %bf.load198 = load i32* %69, align 8
  %bf.clear200 = and i32 %bf.load198, 65536
  %tobool201 = icmp eq i32 %bf.clear200, 0
  br i1 %tobool201, label %if.end212, label %land.lhs.true202

land.lhs.true202:                                 ; preds = %land.lhs.true195
  %70 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %name204 = getelementptr inbounds %union.tree_node* %70, i64 0, i32 0, i32 8
  %71 = load %union.tree_node** %name204, align 8, !tbaa !0
  %72 = getelementptr inbounds %union.tree_node* %71, i64 0, i32 0, i32 9
  %73 = load %union.tree_node** %72, align 8, !tbaa !0
  %cmp206 = icmp eq %union.tree_node* %old_decl.0, %73
  br i1 %cmp206, label %if.then207, label %if.end212

if.then207:                                       ; preds = %land.lhs.true202
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %70, i8* getelementptr inbounds ([56 x i8]* @.str232, i64 0, i64 0)) #8
  br label %if.end212

if.end212:                                        ; preds = %if.else175, %land.lhs.true195, %if.else191, %if.then157, %if.then190, %if.then207, %land.lhs.true202, %if.then174, %if.then121
  %74 = load i32* @current_extern_inline, align 4, !tbaa !3
  %75 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %external_flag = getelementptr inbounds %union.tree_node* %75, i64 0, i32 0, i32 5
  %76 = bitcast [8 x i8]* %external_flag to i64*
  %77 = zext i32 %74 to i64
  %bf.load214 = load i64* %76, align 8
  %bf.value = shl nuw nsw i64 %77, 8
  %bf.shl = and i64 %bf.value, 256
  %bf.clear215 = and i64 %bf.load214, -257
  %bf.set = or i64 %bf.clear215, %bf.shl
  store i64 %bf.set, i64* %76, align 8
  %78 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %static_flag = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 2
  %79 = bitcast [4 x i8]* %static_flag to i32*
  %bf.load217 = load i32* %79, align 8
  %bf.set219 = or i32 %bf.load217, 262144
  store i32 %bf.set219, i32* %79, align 8
  %80 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %cmp220 = icmp eq %union.tree_node* %80, null
  br i1 %cmp220, label %if.end226, label %if.then221

if.then221:                                       ; preds = %if.end212
  %81 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %public_flag223 = getelementptr inbounds %union.tree_node* %81, i64 0, i32 0, i32 0, i32 2
  %82 = bitcast [4 x i8]* %public_flag223 to i32*
  %bf.load224 = load i32* %82, align 8
  %bf.clear225 = and i32 %bf.load224, -524289
  store i32 %bf.clear225, i32* %82, align 8
  br label %if.end226

if.end226:                                        ; preds = %if.end212, %if.then221
  %83 = load i32* @warn_main, align 4, !tbaa !3
  %cmp227 = icmp sgt i32 %83, 0
  br i1 %cmp227, label %land.lhs.true228, label %if.end321

land.lhs.true228:                                 ; preds = %if.end226
  %84 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %name230 = getelementptr inbounds %union.tree_node* %84, i64 0, i32 0, i32 8
  %85 = load %union.tree_node** %name230, align 8, !tbaa !0
  %86 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !0
  %cmp231 = icmp eq %union.tree_node* %85, %86
  br i1 %cmp231, label %if.then232, label %if.end321

if.then232:                                       ; preds = %land.lhs.true228
  %type234 = getelementptr inbounds %union.tree_node* %84, i64 0, i32 0, i32 0, i32 1
  %87 = load %union.tree_node** %type234, align 8, !tbaa !0
  %type236 = getelementptr inbounds %union.tree_node* %87, i64 0, i32 0, i32 0, i32 1
  %88 = load %union.tree_node** %type236, align 8, !tbaa !0
  %89 = getelementptr inbounds %union.tree_node* %88, i64 0, i32 0, i32 15
  %90 = load %union.tree_node** %89, align 8, !tbaa !0
  %91 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp239 = icmp eq %union.tree_node* %90, %91
  br i1 %cmp239, label %if.end241, label %if.then240

if.then240:                                       ; preds = %if.then232
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %84, i8* getelementptr inbounds ([33 x i8]* @.str233, i64 0, i64 0)) #8
  %.pre = load %union.tree_node** %decl1, align 8, !tbaa !0
  %type243.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre, i64 0, i32 0, i32 0, i32 1
  %.pre421 = load %union.tree_node** %type243.phi.trans.insert, align 8, !tbaa !0
  br label %if.end241

if.end241:                                        ; preds = %if.then232, %if.then240
  %92 = phi %union.tree_node* [ %87, %if.then232 ], [ %.pre421, %if.then240 ]
  %values245 = getelementptr inbounds %union.tree_node* %92, i64 0, i32 0, i32 1
  %93 = load i8** %values245, align 8
  %tobool246417 = icmp eq i8* %93, null
  br i1 %tobool246417, label %if.end312, label %cond.true.lr.ph

cond.true.lr.ph:                                  ; preds = %if.end241
  %94 = bitcast i8* %93 to %union.tree_node*
  br label %cond.true

cond.true:                                        ; preds = %for.inc, %cond.true.lr.ph
  %argct.0419 = phi i32 [ 0, %cond.true.lr.ph ], [ %inc, %for.inc ]
  %args.0418 = phi %union.tree_node* [ %94, %cond.true.lr.ph ], [ %118, %for.inc ]
  %value = getelementptr inbounds %union.tree_node* %args.0418, i64 0, i32 0, i32 2
  %95 = bitcast i32* %value to %union.tree_node**
  %96 = load %union.tree_node** %95, align 8, !tbaa !0
  %97 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !0
  %cmp249 = icmp eq %union.tree_node* %96, %97
  br i1 %cmp249, label %for.end, label %if.end251

if.end251:                                        ; preds = %cond.true
  %inc = add nsw i32 %argct.0419, 1
  switch i32 %argct.0419, label %for.inc [
    i32 0, label %sw.bb
    i32 1, label %sw.bb257
    i32 2, label %sw.bb281
  ]

sw.bb:                                            ; preds = %if.end251
  %98 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 15
  %99 = load %union.tree_node** %98, align 8, !tbaa !0
  %100 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp254 = icmp eq %union.tree_node* %99, %100
  br i1 %cmp254, label %for.inc, label %if.then255

if.then255:                                       ; preds = %sw.bb
  %101 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %101, i8* getelementptr inbounds ([39 x i8]* @.str234, i64 0, i64 0)) #8
  br label %for.inc

sw.bb257:                                         ; preds = %if.end251
  %code259 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 0, i32 2
  %102 = bitcast [4 x i8]* %code259 to i32*
  %bf.load260 = load i32* %102, align 8
  %bf.clear261 = and i32 %bf.load260, 255
  %cmp262 = icmp eq i32 %bf.clear261, 13
  br i1 %cmp262, label %lor.lhs.false263, label %if.then279

lor.lhs.false263:                                 ; preds = %sw.bb257
  %type265 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 0, i32 1
  %103 = load %union.tree_node** %type265, align 8, !tbaa !0
  %code267 = getelementptr inbounds %union.tree_node* %103, i64 0, i32 0, i32 0, i32 2
  %104 = bitcast [4 x i8]* %code267 to i32*
  %bf.load268 = load i32* %104, align 8
  %bf.clear269 = and i32 %bf.load268, 255
  %cmp270 = icmp eq i32 %bf.clear269, 13
  br i1 %cmp270, label %lor.lhs.false271, label %if.then279

lor.lhs.false271:                                 ; preds = %lor.lhs.false263
  %type275 = getelementptr inbounds %union.tree_node* %103, i64 0, i32 0, i32 0, i32 1
  %105 = load %union.tree_node** %type275, align 8, !tbaa !0
  %106 = getelementptr inbounds %union.tree_node* %105, i64 0, i32 0, i32 15
  %107 = load %union.tree_node** %106, align 8, !tbaa !0
  %108 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !0
  %cmp278 = icmp eq %union.tree_node* %107, %108
  br i1 %cmp278, label %for.inc, label %if.then279

if.then279:                                       ; preds = %lor.lhs.false271, %lor.lhs.false263, %sw.bb257
  %109 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %109, i8* getelementptr inbounds ([44 x i8]* @.str235, i64 0, i64 0)) #8
  br label %for.inc

sw.bb281:                                         ; preds = %if.end251
  %code283 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 0, i32 2
  %110 = bitcast [4 x i8]* %code283 to i32*
  %bf.load284 = load i32* %110, align 8
  %bf.clear285 = and i32 %bf.load284, 255
  %cmp286 = icmp eq i32 %bf.clear285, 13
  br i1 %cmp286, label %lor.lhs.false287, label %if.then303

lor.lhs.false287:                                 ; preds = %sw.bb281
  %type289 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 0, i32 1
  %111 = load %union.tree_node** %type289, align 8, !tbaa !0
  %code291 = getelementptr inbounds %union.tree_node* %111, i64 0, i32 0, i32 0, i32 2
  %112 = bitcast [4 x i8]* %code291 to i32*
  %bf.load292 = load i32* %112, align 8
  %bf.clear293 = and i32 %bf.load292, 255
  %cmp294 = icmp eq i32 %bf.clear293, 13
  br i1 %cmp294, label %lor.lhs.false295, label %if.then303

lor.lhs.false295:                                 ; preds = %lor.lhs.false287
  %type299 = getelementptr inbounds %union.tree_node* %111, i64 0, i32 0, i32 0, i32 1
  %113 = load %union.tree_node** %type299, align 8, !tbaa !0
  %114 = getelementptr inbounds %union.tree_node* %113, i64 0, i32 0, i32 15
  %115 = load %union.tree_node** %114, align 8, !tbaa !0
  %116 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !0
  %cmp302 = icmp eq %union.tree_node* %115, %116
  br i1 %cmp302, label %for.inc, label %if.then303

if.then303:                                       ; preds = %lor.lhs.false295, %lor.lhs.false287, %sw.bb281
  %117 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %117, i8* getelementptr inbounds ([52 x i8]* @.str236, i64 0, i64 0)) #8
  br label %for.inc

for.inc:                                          ; preds = %sw.bb, %lor.lhs.false271, %lor.lhs.false295, %if.end251, %if.then255, %if.then279, %if.then303
  %chain = getelementptr inbounds %union.tree_node* %args.0418, i64 0, i32 0, i32 0, i32 0
  %118 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool246 = icmp eq %union.tree_node* %118, null
  br i1 %tobool246, label %for.end, label %cond.true

for.end:                                          ; preds = %for.inc, %cond.true
  %argct.0.lcssa = phi i32 [ %argct.0419, %cond.true ], [ %inc, %for.inc ]
  %cmp306 = icmp sgt i32 %argct.0.lcssa, 0
  %argct.0.off = add i32 %argct.0.lcssa, -2
  %119 = icmp ugt i32 %argct.0.off, 1
  %or.cond415 = and i1 %cmp306, %119
  br i1 %or.cond415, label %if.then311, label %if.end312

if.then311:                                       ; preds = %for.end
  %120 = load %union.tree_node** %decl1, align 8, !tbaa !0
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %120, i8* getelementptr inbounds ([38 x i8]* @.str237, i64 0, i64 0)) #8
  br label %if.end312

if.end312:                                        ; preds = %if.end241, %for.end, %if.then311
  %121 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %public_flag314 = getelementptr inbounds %union.tree_node* %121, i64 0, i32 0, i32 0, i32 2
  %122 = bitcast [4 x i8]* %public_flag314 to i32*
  %bf.load315 = load i32* %122, align 8
  %bf.clear317 = and i32 %bf.load315, 524288
  %tobool318 = icmp eq i32 %bf.clear317, 0
  br i1 %tobool318, label %if.then319, label %if.end321

if.then319:                                       ; preds = %if.end312
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %121, i8* getelementptr inbounds ([39 x i8]* @.str238, i64 0, i64 0)) #8
  br label %if.end321

if.end321:                                        ; preds = %if.end226, %if.end312, %if.then319, %land.lhs.true228
  %123 = load %union.tree_node** %decl1, align 8, !tbaa !0
  %call322 = call %union.tree_node* @pushdecl(%union.tree_node* %123) #10
  store %union.tree_node* %call322, %union.tree_node** @current_function_decl, align 8, !tbaa !0
  call void @pushlevel(i32 0) #10
  %124 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %parm_flag.i = getelementptr inbounds %struct.binding_level* %124, i64 0, i32 6
  store i8 1, i8* %parm_flag.i, align 1, !tbaa !1
  %125 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %subblocks_tag_transparent = getelementptr inbounds %struct.binding_level* %125, i64 0, i32 8
  store i8 1, i8* %subblocks_tag_transparent, align 1, !tbaa !1
  %126 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  call void @make_decl_rtl(%union.tree_node* %126, i8* null) #8
  %127 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %type324 = getelementptr inbounds %union.tree_node* %127, i64 0, i32 0, i32 0, i32 1
  %128 = load %union.tree_node** %type324, align 8, !tbaa !0
  %type326 = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 0, i32 1
  %129 = load %union.tree_node** %type326, align 8, !tbaa !0
  %call327 = call zeroext i1 @c_promoting_integer_type_p(%union.tree_node* %129) #8
  br i1 %call327, label %if.then328, label %if.end348

if.then328:                                       ; preds = %if.end321
  %unsigned_flag = getelementptr inbounds %union.tree_node* %129, i64 0, i32 0, i32 0, i32 2
  %130 = bitcast [4 x i8]* %unsigned_flag to i32*
  %bf.load330 = load i32* %130, align 8
  %bf.clear332 = and i32 %bf.load330, 8192
  %tobool333 = icmp eq i32 %bf.clear332, 0
  br i1 %tobool333, label %if.then328.if.else346_crit_edge, label %land.lhs.true334

if.then328.if.else346_crit_edge:                  ; preds = %if.then328
  %.pre426 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  br label %if.end348

land.lhs.true334:                                 ; preds = %if.then328
  %131 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool335 = icmp eq i32 %131, 0
  br i1 %tobool335, label %lor.lhs.false336, label %if.then345

lor.lhs.false336:                                 ; preds = %land.lhs.true334
  %type337 = bitcast %union.tree_node* %129 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type337, i64 0, i32 6
  %132 = bitcast [4 x i8]* %precision to i32*
  %bf.load338 = load i32* %132, align 4
  %133 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %type340 = bitcast %union.tree_node* %133 to %struct.tree_type*
  %precision341 = getelementptr inbounds %struct.tree_type* %type340, i64 0, i32 6
  %134 = bitcast [4 x i8]* %precision341 to i32*
  %bf.load342 = load i32* %134, align 4
  %135 = xor i32 %bf.load342, %bf.load338
  %136 = and i32 %135, 511
  %cmp344 = icmp eq i32 %136, 0
  br i1 %cmp344, label %if.then345, label %if.end348

if.then345:                                       ; preds = %land.lhs.true334, %lor.lhs.false336
  %137 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !0
  br label %if.end348

if.end348:                                        ; preds = %lor.lhs.false336, %if.then328.if.else346_crit_edge, %if.then345, %if.end321
  %restype.0 = phi %union.tree_node* [ %137, %if.then345 ], [ %129, %if.end321 ], [ %.pre426, %if.then328.if.else346_crit_edge ], [ %133, %lor.lhs.false336 ]
  %call349 = call %union.tree_node* @build_decl(i32 36, %union.tree_node* null, %union.tree_node* %restype.0) #8
  %138 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %result = getelementptr inbounds %union.tree_node* %138, i64 0, i32 0, i32 11
  store %union.tree_node* %call349, %union.tree_node** %result, align 8, !tbaa !0
  %139 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %assembler_name = getelementptr inbounds %union.tree_node* %139, i64 0, i32 0, i32 14
  %140 = load %union.tree_node** %assembler_name, align 8, !tbaa !0
  %cmp352 = icmp eq %union.tree_node* %140, null
  br i1 %cmp352, label %cond.false354, label %cond.end355

cond.false354:                                    ; preds = %if.end348
  %141 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !0
  call void %141(%union.tree_node* %139) #8
  %.pre422 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %assembler_name357.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre422, i64 0, i32 0, i32 14
  %.pre423 = load %union.tree_node** %assembler_name357.phi.trans.insert, align 8, !tbaa !0
  br label %cond.end355

cond.end355:                                      ; preds = %if.end348, %cond.false354
  %142 = phi %union.tree_node* [ %140, %if.end348 ], [ %.pre423, %cond.false354 ]
  %143 = phi %union.tree_node* [ %139, %if.end348 ], [ %.pre422, %cond.false354 ]
  %addressable_flag = getelementptr inbounds %union.tree_node* %142, i64 0, i32 0, i32 0, i32 2
  %144 = bitcast [4 x i8]* %addressable_flag to i32*
  %bf.load359 = load i32* %144, align 8
  %bf.clear361 = and i32 %bf.load359, 1024
  %tobool362 = icmp eq i32 %bf.clear361, 0
  br i1 %tobool362, label %if.end369, label %if.then363

if.then363:                                       ; preds = %cond.end355
  %addressable_flag365 = getelementptr inbounds %union.tree_node* %143, i64 0, i32 0, i32 0, i32 2
  %145 = bitcast [4 x i8]* %addressable_flag365 to i32*
  %bf.load366 = load i32* %145, align 8
  %bf.set368 = or i32 %bf.load366, 1024
  store i32 %bf.set368, i32* %145, align 8
  br label %if.end369

if.end369:                                        ; preds = %cond.end355, %if.then363
  store i32 %0, i32* @immediate_size_expand, align 4, !tbaa !3
  call void @start_fname_decls() #8
  br label %return

return:                                           ; preds = %if.end369, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end369 ]
  ret i32 %retval.0
}
