define %union.tree_node* @build_compound_literal(%union.tree_node* %type, %union.tree_node* %init) #0 {
entry:
  %call = call %union.tree_node* @build_decl(i32 34, %union.tree_node* null, %union.tree_node* %type) #8
  %external_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 5
  %0 = bitcast [8 x i8]* %external_flag to i64*
  %bf.load = load i64* %0, align 8
  %bf.clear = and i64 %bf.load, -257
  store i64 %bf.clear, i64* %0, align 8
  %public_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load2 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load2, -524289
  store i32 %bf.clear3, i32* %1, align 8
  %2 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %3 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp = icmp eq %struct.binding_level* %2, %3
  %conv = zext i1 %cmp to i32
  %bf.shl = shl nuw nsw i32 %conv, 18
  %bf.clear6 = and i32 %bf.load2, -786433
  %bf.set = or i32 %bf.shl, %bf.clear6
  store i32 %bf.set, i32* %1, align 8
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !0
  %context = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 9
  store %union.tree_node* %4, %union.tree_node** %context, align 8, !tbaa !0
  %bf.set11 = or i32 %bf.set, 65536
  store i32 %bf.set11, i32* %1, align 8
  %type13 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type13, align 8, !tbaa !0
  %readonly_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load15 = load i32* %5, align 8
  %bf.clear16 = and i32 %bf.load15, 4096
  %bf.clear22 = and i32 %bf.set11, -528385
  %bf.set23 = or i32 %bf.clear22, %bf.clear16
  store i32 %bf.set23, i32* %1, align 8
  call void @store_init_value(%union.tree_node* %call, %union.tree_node* %init) #8
  %bf.load25 = load i32* %5, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 18
  br i1 %cmp27, label %land.lhs.true, label %if.end35

land.lhs.true:                                    ; preds = %entry
  %size = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 2
  %6 = bitcast i32* %size to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !0
  %cmp30 = icmp eq %union.tree_node* %7, null
  br i1 %cmp30, label %if.then, label %if.end35

if.then:                                          ; preds = %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 12
  %8 = load %union.tree_node** %initial, align 8, !tbaa !0
  %call33 = call i32 @complete_array_type(%union.tree_node* %type, %union.tree_node* %8, i32 1) #10
  %tobool = icmp eq i32 %call33, 0
  br i1 %tobool, label %if.end35, label %if.then34

if.then34:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str185, i64 0, i64 0), i32 3921, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.build_compound_literal, i64 0, i64 0)) #11
  unreachable

if.end35:                                         ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %union.tree_node** %type13, align 8, !tbaa !0
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp38 = icmp eq %union.tree_node* %9, %10
  br i1 %cmp38, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end35
  %size41 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 2
  %11 = bitcast i32* %size41 to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !0
  %cmp42 = icmp eq %union.tree_node* %12, null
  br i1 %cmp42, label %return, label %if.end45

if.end45:                                         ; preds = %lor.lhs.false
  %call46 = call %union.tree_node* (i32, ...)* @build_stmt(i32 154, %union.tree_node* %call) #8
  %13 = load %union.tree_node** %type13, align 8, !tbaa !0
  %call49 = call %union.tree_node* @build1(i32 170, %union.tree_node* %13, %union.tree_node* %call46) #8
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast [4 x i8]* %side_effects_flag to i32*
  %bf.load51 = load i32* %14, align 8
  %bf.set53 = or i32 %bf.load51, 256
  store i32 %bf.set53, i32* %14, align 8
  call void @layout_decl(%union.tree_node* %call, i32 0) #8
  %bf.load56 = load i32* %1, align 8
  %bf.clear58 = and i32 %bf.load56, 262144
  %tobool59 = icmp eq i32 %bf.clear58, 0
  br i1 %tobool59, label %return, label %if.then60

if.then60:                                        ; preds = %if.end45
  %15 = alloca [28 x i8], align 1
  %.sub = getelementptr inbounds [28 x i8]* %15, i64 0, i64 0
  %16 = load i32* @var_labelno, align 4, !tbaa !3
  %call61 = call i32 (i8*, i8*, ...)* @sprintf(i8* %.sub, i8* getelementptr inbounds ([6 x i8]* @.str186, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8]* @.str187, i64 0, i64 0), i32 %16) #8
  %17 = load i32* @var_labelno, align 4, !tbaa !3
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* @var_labelno, align 4, !tbaa !3
  %call62 = call %union.tree_node* @get_identifier(i8* %.sub) #8
  %name64 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 8
  store %union.tree_node* %call62, %union.tree_node** %name64, align 8, !tbaa !0
  %bf.load66 = load i64* %0, align 8
  %bf.set76 = or i64 %bf.load66, 71565312
  store i64 %bf.set76, i64* %0, align 8
  %call77 = call %union.tree_node* @pushdecl(%union.tree_node* %call) #10
  call void @rest_of_decl_compilation(%union.tree_node* %call, i8* null, i32 1, i32 0) #8
  br label %return

return:                                           ; preds = %if.end35, %lor.lhs.false, %if.then60, %if.end45
  %retval.0 = phi %union.tree_node* [ %call49, %if.end45 ], [ %call49, %if.then60 ], [ %10, %lor.lhs.false ], [ %10, %if.end35 ]
  ret %union.tree_node* %retval.0
}
