define internal fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 %decl_context, i32 %initialized) #0 {
entry:
  %type = alloca %union.tree_node*, align 8
  %decl1200 = alloca %union.tree_node*, align 8
  %decl1326 = alloca %union.tree_node*, align 8
  %new_ptr_quals = alloca %union.tree_node*, align 8
  %new_ptr_attrs = alloca %union.tree_node*, align 8
  store %union.tree_node* null, %union.tree_node** %type, align 8, !tbaa !0
  %cmp = icmp eq i32 %decl_context, 4
  %.decl_context = select i1 %cmp, i32 3, i32 %decl_context
  %cmp1 = icmp eq i32 %.decl_context, 1
  %decl_context.addr.1 = select i1 %cmp1, i32 0, i32 %.decl_context
  %tobool226922752287 = icmp eq %union.tree_node* %declarator, null
  br i1 %tobool226922752287, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry, %sw.bb
  %decl.0.ph22622277 = phi %union.tree_node* [ %1, %sw.bb ], [ %declarator, %entry ]
  %innermost_code.0.ph22612276 = phi i32 [ %bf.clear, %sw.bb ], [ 0, %entry ]
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %sw.bb8
  %decl.02270 = phi %union.tree_node* [ %decl.0.ph22622277, %while.body.lr.ph ], [ %3, %sw.bb8 ]
  %code = getelementptr inbounds %union.tree_node* %decl.02270, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 43, label %sw.bb
    i32 41, label %sw.bb
    i32 53, label %sw.bb
    i32 2, label %sw.bb8
    i32 1, label %while.cond.outer.while.end.loopexit.loopexit_crit_edge
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %operands = getelementptr inbounds %union.tree_node* %decl.02270, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %tobool2269 = icmp eq %union.tree_node* %1, null
  br i1 %tobool2269, label %while.end, label %while.body.lr.ph

sw.bb8:                                           ; preds = %while.body
  %value = getelementptr inbounds %union.tree_node* %decl.02270, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !0
  %tobool = icmp eq %union.tree_node* %3, null
  br i1 %tobool, label %while.end, label %while.body

sw.default:                                       ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str185, i64 0, i64 0), i32 4116, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.grokdeclarator, i64 0, i64 0)) #11
  unreachable

while.cond.outer.while.end.loopexit.loopexit_crit_edge: ; preds = %while.body
  %id = getelementptr inbounds %union.tree_node* %decl.02270, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds i8** %id, i64 1
  %5 = load i8** %4, align 8, !tbaa !0
  br label %while.end

while.end:                                        ; preds = %sw.bb, %while.cond.outer.while.end.loopexit.loopexit_crit_edge, %entry, %sw.bb8
  %name.0.ph2282 = phi i8* [ null, %sw.bb8 ], [ null, %sw.bb ], [ %5, %while.cond.outer.while.end.loopexit.loopexit_crit_edge ], [ null, %entry ]
  %innermost_code.0.ph22612274 = phi i32 [ %innermost_code.0.ph22612276, %sw.bb8 ], [ %bf.clear, %sw.bb ], [ %innermost_code.0.ph22612276, %while.cond.outer.while.end.loopexit.loopexit_crit_edge ], [ 0, %entry ]
  %cmp10 = icmp eq i8* %name.0.ph2282, null
  %.name.0 = select i1 %cmp10, i8* getelementptr inbounds ([10 x i8]* @.str262, i64 0, i64 0), i8* %name.0.ph2282
  %tobool13.not = xor i1 %cmp1, true
  %cmp14 = icmp eq i32 %innermost_code.0.ph22612274, 53
  %or.cond2135 = or i1 %cmp14, %tobool13.not
  br i1 %or.cond2135, label %if.end16, label %return

if.end16:                                         ; preds = %while.end
  %cmp17.not = icmp ne i32 %decl_context.addr.1, 0
  %brmerge = or i1 %cmp17.not, %cmp1
  br i1 %brmerge, label %if.end23, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %if.end16
  %6 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %parm_flag = getelementptr inbounds %struct.binding_level* %6, i64 0, i32 6
  %7 = load i8* %parm_flag, align 1, !tbaa !1
  %tobool21 = icmp eq i8 %7, 0
  %decl_context.addr.1. = select i1 %tobool21, i32 0, i32 2
  br label %if.end23

if.end23:                                         ; preds = %land.lhs.true20, %if.end16
  %decl_context.addr.2 = phi i32 [ %decl_context.addr.1, %if.end16 ], [ %decl_context.addr.1., %land.lhs.true20 ]
  %tobool242246 = icmp eq %union.tree_node* %declspecs, null
  br i1 %tobool242246, label %land.lhs.true172.thread, label %for.body

land.lhs.true172.thread:                          ; preds = %if.end23
  %.old2385 = load i32* @in_system_header, align 4, !tbaa !3
  br label %land.lhs.true177

for.body:                                         ; preds = %if.end23, %for.inc
  %specbits.02253 = phi i32 [ %specbits.1, %for.inc ], [ 0, %if.end23 ]
  %spec.02252 = phi %union.tree_node* [ %39, %for.inc ], [ %declspecs, %if.end23 ]
  %longlong.02251 = phi i32 [ %longlong.2, %for.inc ], [ 0, %if.end23 ]
  %explicit_int.02250 = phi i32 [ %.explicit_int.0, %for.inc ], [ 0, %if.end23 ]
  %explicit_char.02249 = phi i32 [ %explicit_char.1, %for.inc ], [ 0, %if.end23 ]
  %decl_attr.02248 = phi %union.tree_node* [ %decl_attr.1, %for.inc ], [ null, %if.end23 ]
  %typedef_decl.02247 = phi %union.tree_node* [ %typedef_decl.1, %for.inc ], [ null, %if.end23 ]
  %value27 = getelementptr inbounds %union.tree_node* %spec.02252, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value27 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !0
  %tobool28 = icmp eq %union.tree_node* %9, null
  br i1 %tobool28, label %if.end39, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %for.body
  %deprecated_flag = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast [4 x i8]* %deprecated_flag to i32*
  %bf.load31 = load i32* %10, align 8
  %bf.clear32 = and i32 %bf.load31, 8388608
  %tobool33 = icmp ne i32 %bf.clear32, 0
  %.b = load i1* @deprecated_state, align 1
  %cmp35 = xor i1 %.b, true
  %or.cond1831 = and i1 %tobool33, %cmp35
  br i1 %or.cond1831, label %if.then37, label %if.end39

if.then37:                                        ; preds = %land.lhs.true29
  call void @warn_deprecated_use(%union.tree_node* %9) #8
  br label %if.end39

if.end39:                                         ; preds = %land.lhs.true29, %for.body, %if.then37
  %.pre-phi = phi i32* [ %10, %if.then37 ], [ inttoptr (i64 16 to i32*), %for.body ], [ %10, %land.lhs.true29 ]
  %11 = load %union.tree_node*** @ridpointers, align 8, !tbaa !0
  %arrayidx40 = getelementptr inbounds %union.tree_node** %11, i64 27
  %12 = load %union.tree_node** %arrayidx40, align 8, !tbaa !0
  %cmp41 = icmp eq %union.tree_node* %9, %12
  %.explicit_int.0 = select i1 %cmp41, i32 1, i32 %explicit_int.02250
  %arrayidx45 = getelementptr inbounds %union.tree_node** %11, i64 28
  %13 = load %union.tree_node** %arrayidx45, align 8, !tbaa !0
  %cmp46 = icmp eq %union.tree_node* %9, %13
  %explicit_char.1 = select i1 %cmp46, i32 1, i32 %explicit_char.02249
  %bf.load52 = load i32* %.pre-phi, align 8
  %14 = and i32 %bf.load52, 16777471
  %15 = icmp eq i32 %14, 16777217
  br i1 %15, label %if.then62, label %if.end96

if.then62:                                        ; preds = %if.end39
  %node = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 1
  %16 = bitcast i8** %node to %struct.cpp_hashnode*
  %rid_code = getelementptr inbounds %struct.cpp_hashnode* %16, i64 0, i32 3
  %17 = load i8* %rid_code, align 1, !tbaa !1
  %conv63 = zext i8 %17 to i32
  %cmp64 = icmp ult i8 %17, 27
  br i1 %cmp64, label %if.then66, label %if.end96

if.then66:                                        ; preds = %if.then62
  %cmp67 = icmp eq i8 %17, 2
  %shl = shl i32 1, %conv63
  %and = and i32 %shl, %specbits.02253
  %tobool70 = icmp eq i32 %and, 0
  br i1 %cmp67, label %land.lhs.true69, label %if.else84

land.lhs.true69:                                  ; preds = %if.then66
  br i1 %tobool70, label %if.end93, label %if.then71

if.then71:                                        ; preds = %land.lhs.true69
  %tobool72 = icmp eq i32 %longlong.02251, 0
  br i1 %tobool72, label %if.else, label %if.then73

if.then73:                                        ; preds = %if.then71
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str263, i64 0, i64 0)) #8
  br label %if.end93

if.else:                                          ; preds = %if.then71
  %18 = load i32* @pedantic, align 4, !tbaa !3
  %tobool74 = icmp eq i32 %18, 0
  %19 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool76 = icmp ne i32 %19, 0
  %or.cond = or i1 %tobool74, %tobool76
  %20 = load i32* @in_system_header, align 4, !tbaa !3
  %tobool78 = icmp ne i32 %20, 0
  %or.cond1785 = or i1 %or.cond, %tobool78
  %or.cond1785.not = xor i1 %or.cond1785, true
  %21 = load i32* @warn_long_long, align 4, !tbaa !3
  %tobool80 = icmp ne i32 %21, 0
  %or.cond1786 = and i1 %tobool80, %or.cond1785.not
  br i1 %or.cond1786, label %if.then81, label %if.end93

if.then81:                                        ; preds = %if.else
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([37 x i8]* @.str264, i64 0, i64 0)) #8
  br label %if.end93

if.else84:                                        ; preds = %if.then66
  br i1 %tobool70, label %if.end93, label %if.then88

if.then88:                                        ; preds = %if.else84
  %22 = getelementptr inbounds i8** %node, i64 1
  %23 = load i8** %22, align 8, !tbaa !0
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([15 x i8]* @.str265, i64 0, i64 0), i8* %23) #8
  br label %if.end93

if.end93:                                         ; preds = %land.lhs.true69, %if.then81, %if.else, %if.else84, %if.then88, %if.then73
  %longlong.1 = phi i32 [ %longlong.02251, %if.then73 ], [ %longlong.02251, %if.then88 ], [ %longlong.02251, %if.else84 ], [ 1, %if.else ], [ 1, %if.then81 ], [ %longlong.02251, %land.lhs.true69 ]
  %shl94 = shl i32 1, %conv63
  %or = or i32 %shl94, %specbits.02253
  br label %for.inc

if.end96:                                         ; preds = %if.then62, %if.end39
  %24 = load %union.tree_node** %type, align 8, !tbaa !0
  %tobool97 = icmp eq %union.tree_node* %24, null
  br i1 %tobool97, label %if.else99, label %if.then98

if.then98:                                        ; preds = %if.end96
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([46 x i8]* @.str266, i64 0, i64 0), i8* %.name.0) #8
  br label %for.inc

if.else99:                                        ; preds = %if.end96
  %bf.clear103 = and i32 %bf.load52, 255
  switch i32 %bf.clear103, label %if.then154 [
    i32 33, label %if.then106
    i32 1, label %if.then124
    i32 0, label %for.inc
  ]

if.then106:                                       ; preds = %if.else99
  %type108 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type108, align 8, !tbaa !0
  %26 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp109 = icmp eq %union.tree_node* %25, %26
  br i1 %cmp109, label %for.inc, label %if.else112

if.else112:                                       ; preds = %if.then106
  store %union.tree_node* %25, %union.tree_node** %type, align 8, !tbaa !0
  %attributes = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 16
  %27 = load %union.tree_node** %attributes, align 8, !tbaa !0
  br label %for.inc

if.then124:                                       ; preds = %if.else99
  %28 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %29 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp.i = icmp eq %struct.binding_level* %28, %29
  br i1 %cmp.i, label %if.else.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then124
  %30 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 7
  %31 = load %union.tree_node** %30, align 8, !tbaa !0
  %tobool.i = icmp eq %union.tree_node* %31, null
  br i1 %tobool.i, label %if.else.i, label %lookup_name.exit

if.else.i:                                        ; preds = %land.lhs.true.i, %if.then124
  %global_value.i = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 6
  %32 = bitcast %union.anon* %global_value.i to %union.tree_node**
  %33 = load %union.tree_node** %32, align 8, !tbaa !0
  br label %lookup_name.exit

lookup_name.exit:                                 ; preds = %land.lhs.true.i, %if.else.i
  %val.0.i = phi %union.tree_node* [ %33, %if.else.i ], [ %31, %land.lhs.true.i ]
  %type126 = getelementptr inbounds %union.tree_node* %val.0.i, i64 0, i32 0, i32 0, i32 1
  %34 = load %union.tree_node** %type126, align 8, !tbaa !0
  %35 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp127 = icmp eq %union.tree_node* %34, %35
  br i1 %cmp127, label %for.inc, label %if.else130

if.else130:                                       ; preds = %lookup_name.exit
  %tobool131 = icmp eq %union.tree_node* %val.0.i, null
  br i1 %tobool131, label %if.then138, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else130
  %code133 = getelementptr inbounds %union.tree_node* %val.0.i, i64 0, i32 0, i32 0, i32 2
  %36 = bitcast [4 x i8]* %code133 to i32*
  %bf.load134 = load i32* %36, align 8
  %bf.clear135 = and i32 %bf.load134, 255
  %cmp136 = icmp eq i32 %bf.clear135, 33
  br i1 %cmp136, label %if.else142, label %if.then138

if.then138:                                       ; preds = %lor.lhs.false, %if.else130
  %id140 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds i8** %id140, i64 1
  %38 = load i8** %37, align 8, !tbaa !0
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str267, i64 0, i64 0), i8* %38) #8
  br label %for.inc

if.else142:                                       ; preds = %lor.lhs.false
  store %union.tree_node* %34, %union.tree_node** %type, align 8, !tbaa !0
  br label %for.inc

if.then154:                                       ; preds = %if.else99
  store %union.tree_node* %9, %union.tree_node** %type, align 8, !tbaa !0
  br label %for.inc

for.inc:                                          ; preds = %if.else99, %if.end93, %if.then106, %if.else112, %if.then154, %lookup_name.exit, %if.else142, %if.then138, %if.then98
  %typedef_decl.1 = phi %union.tree_node* [ %typedef_decl.02247, %if.end93 ], [ %typedef_decl.02247, %if.then98 ], [ %typedef_decl.02247, %if.then106 ], [ %9, %if.else112 ], [ %typedef_decl.02247, %lookup_name.exit ], [ %typedef_decl.02247, %if.then138 ], [ %val.0.i, %if.else142 ], [ %typedef_decl.02247, %if.then154 ], [ %typedef_decl.02247, %if.else99 ]
  %decl_attr.1 = phi %union.tree_node* [ %decl_attr.02248, %if.end93 ], [ %decl_attr.02248, %if.then98 ], [ %decl_attr.02248, %if.then106 ], [ %27, %if.else112 ], [ %decl_attr.02248, %lookup_name.exit ], [ %decl_attr.02248, %if.then138 ], [ %decl_attr.02248, %if.else142 ], [ %decl_attr.02248, %if.then154 ], [ %decl_attr.02248, %if.else99 ]
  %longlong.2 = phi i32 [ %longlong.1, %if.end93 ], [ %longlong.02251, %if.then98 ], [ %longlong.02251, %if.then106 ], [ %longlong.02251, %if.else112 ], [ %longlong.02251, %lookup_name.exit ], [ %longlong.02251, %if.then138 ], [ %longlong.02251, %if.else142 ], [ %longlong.02251, %if.then154 ], [ %longlong.02251, %if.else99 ]
  %specbits.1 = phi i32 [ %or, %if.end93 ], [ %specbits.02253, %if.then98 ], [ %specbits.02253, %if.then106 ], [ %specbits.02253, %if.else112 ], [ %specbits.02253, %lookup_name.exit ], [ %specbits.02253, %if.then138 ], [ %specbits.02253, %if.else142 ], [ %specbits.02253, %if.then154 ], [ %specbits.02253, %if.else99 ]
  %chain = getelementptr inbounds %union.tree_node* %spec.02252, i64 0, i32 0, i32 0, i32 0
  %39 = load %union.tree_node** %chain, align 8, !tbaa !0
  %tobool24 = icmp eq %union.tree_node* %39, null
  br i1 %tobool24, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %.pre = load %union.tree_node** %type, align 8, !tbaa !0
  %tobool160 = icmp eq %union.tree_node* %.pre, null
  br i1 %tobool160, label %if.then169, label %if.end166

if.end166:                                        ; preds = %for.end
  %type162 = bitcast %union.tree_node* %.pre to %struct.tree_type*
  %lang_flag_1 = getelementptr inbounds %struct.tree_type* %type162, i64 0, i32 6
  %40 = bitcast [4 x i8]* %lang_flag_1 to i32*
  %bf.load163 = load i32* %40, align 4
  %bf.lshr164 = lshr i32 %bf.load163, 25
  %bf.clear165 = and i32 %bf.lshr164, 1
  br label %if.end196

if.then169:                                       ; preds = %for.end
  %and170 = and i32 %specbits.1, 33926
  %tobool171 = icmp eq i32 %and170, 0
  br i1 %tobool171, label %land.lhs.true172, label %if.end195

land.lhs.true172:                                 ; preds = %if.then169
  %and173 = and i32 %specbits.1, 64
  %tobool174 = icmp eq i32 %and173, 0
  %.old = load i32* @in_system_header, align 4, !tbaa !3
  br i1 %tobool174, label %land.lhs.true177, label %land.lhs.true175

land.lhs.true175:                                 ; preds = %land.lhs.true172
  %41 = or i32 %.old, %initialized
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %if.then179, label %if.end195

land.lhs.true177:                                 ; preds = %land.lhs.true172.thread, %land.lhs.true172
  %.old2402 = phi i32 [ %.old2385, %land.lhs.true172.thread ], [ %.old, %land.lhs.true172 ]
  %typedef_decl.0.lcssa235923702399 = phi %union.tree_node* [ null, %land.lhs.true172.thread ], [ %typedef_decl.1, %land.lhs.true172 ]
  %decl_attr.0.lcssa235723722397 = phi %union.tree_node* [ null, %land.lhs.true172.thread ], [ %decl_attr.1, %land.lhs.true172 ]
  %explicit_char.0.lcssa235523742395 = phi i32 [ 0, %land.lhs.true172.thread ], [ %explicit_char.1, %land.lhs.true172 ]
  %explicit_int.0.lcssa235123762393 = phi i32 [ 0, %land.lhs.true172.thread ], [ %.explicit_int.0, %land.lhs.true172 ]
  %longlong.0.lcssa234923782391 = phi i32 [ 0, %land.lhs.true172.thread ], [ %longlong.2, %land.lhs.true172 ]
  %specbits.0.lcssa234723802389 = phi i32 [ 0, %land.lhs.true172.thread ], [ %specbits.1, %land.lhs.true172 ]
  %tobool178.old = icmp eq i32 %.old2402, 0
  br i1 %tobool178.old, label %if.then179, label %if.end195

if.then179:                                       ; preds = %land.lhs.true177, %land.lhs.true175
  %typedef_decl.0.lcssa235923702398 = phi %union.tree_node* [ %typedef_decl.1, %land.lhs.true175 ], [ %typedef_decl.0.lcssa235923702399, %land.lhs.true177 ]
  %decl_attr.0.lcssa235723722396 = phi %union.tree_node* [ %decl_attr.1, %land.lhs.true175 ], [ %decl_attr.0.lcssa235723722397, %land.lhs.true177 ]
  %explicit_char.0.lcssa235523742394 = phi i32 [ %explicit_char.1, %land.lhs.true175 ], [ %explicit_char.0.lcssa235523742395, %land.lhs.true177 ]
  %explicit_int.0.lcssa235123762392 = phi i32 [ %.explicit_int.0, %land.lhs.true175 ], [ %explicit_int.0.lcssa235123762393, %land.lhs.true177 ]
  %longlong.0.lcssa234923782390 = phi i32 [ %longlong.2, %land.lhs.true175 ], [ %longlong.0.lcssa234923782391, %land.lhs.true177 ]
  %specbits.0.lcssa234723802388 = phi i32 [ %specbits.1, %land.lhs.true175 ], [ %specbits.0.lcssa234723802389, %land.lhs.true177 ]
  %43 = load i32* @warn_implicit_int, align 4, !tbaa !3
  %44 = load i32* @warn_return_type, align 4, !tbaa !3
  %45 = or i32 %44, %43
  %46 = load i32* @flag_isoc99, align 4, !tbaa !3
  %47 = or i32 %45, %46
  %48 = icmp eq i32 %47, 0
  %brmerge2139 = or i1 %48, %tobool13.not
  br i1 %brmerge2139, label %if.else188, label %if.then187

if.then187:                                       ; preds = %if.then179
  store i32 1, i32* @warn_about_return_type, align 4, !tbaa !3
  br label %if.end195

if.else188:                                       ; preds = %if.then179
  %49 = or i32 %46, %43
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %if.end195, label %if.then192

if.then192:                                       ; preds = %if.else188
  call void (i8*, ...)* @pedwarn_c99(i8* getelementptr inbounds ([46 x i8]* @.str268, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end195

if.end195:                                        ; preds = %land.lhs.true175, %if.else188, %land.lhs.true177, %if.then169, %if.then187, %if.then192
  %specbits.0.lcssa23472379 = phi i32 [ %specbits.1, %land.lhs.true175 ], [ %specbits.0.lcssa234723802388, %if.else188 ], [ %specbits.0.lcssa234723802389, %land.lhs.true177 ], [ %specbits.1, %if.then169 ], [ %specbits.0.lcssa234723802388, %if.then187 ], [ %specbits.0.lcssa234723802388, %if.then192 ]
  %longlong.0.lcssa23492377 = phi i32 [ %longlong.2, %land.lhs.true175 ], [ %longlong.0.lcssa234923782390, %if.else188 ], [ %longlong.0.lcssa234923782391, %land.lhs.true177 ], [ %longlong.2, %if.then169 ], [ %longlong.0.lcssa234923782390, %if.then187 ], [ %longlong.0.lcssa234923782390, %if.then192 ]
  %explicit_int.0.lcssa23512375 = phi i32 [ %.explicit_int.0, %land.lhs.true175 ], [ %explicit_int.0.lcssa235123762392, %if.else188 ], [ %explicit_int.0.lcssa235123762393, %land.lhs.true177 ], [ %.explicit_int.0, %if.then169 ], [ %explicit_int.0.lcssa235123762392, %if.then187 ], [ %explicit_int.0.lcssa235123762392, %if.then192 ]
  %explicit_char.0.lcssa23552373 = phi i32 [ %explicit_char.1, %land.lhs.true175 ], [ %explicit_char.0.lcssa235523742394, %if.else188 ], [ %explicit_char.0.lcssa235523742395, %land.lhs.true177 ], [ %explicit_char.1, %if.then169 ], [ %explicit_char.0.lcssa235523742394, %if.then187 ], [ %explicit_char.0.lcssa235523742394, %if.then192 ]
  %decl_attr.0.lcssa23572371 = phi %union.tree_node* [ %decl_attr.1, %land.lhs.true175 ], [ %decl_attr.0.lcssa235723722396, %if.else188 ], [ %decl_attr.0.lcssa235723722397, %land.lhs.true177 ], [ %decl_attr.1, %if.then169 ], [ %decl_attr.0.lcssa235723722396, %if.then187 ], [ %decl_attr.0.lcssa235723722396, %if.then192 ]
  %typedef_decl.0.lcssa23592369 = phi %union.tree_node* [ %typedef_decl.1, %land.lhs.true175 ], [ %typedef_decl.0.lcssa235923702398, %if.else188 ], [ %typedef_decl.0.lcssa235923702399, %land.lhs.true177 ], [ %typedef_decl.1, %if.then169 ], [ %typedef_decl.0.lcssa235923702398, %if.then187 ], [ %typedef_decl.0.lcssa235923702398, %if.then192 ]
  %51 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  store %union.tree_node* %51, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end196

if.end196:                                        ; preds = %if.end166, %if.end195
  %tobool1602363 = phi i1 [ true, %if.end195 ], [ false, %if.end166 ]
  %typedef_decl.0.lcssa2358 = phi %union.tree_node* [ %typedef_decl.0.lcssa23592369, %if.end195 ], [ %typedef_decl.1, %if.end166 ]
  %decl_attr.0.lcssa2356 = phi %union.tree_node* [ %decl_attr.0.lcssa23572371, %if.end195 ], [ %decl_attr.1, %if.end166 ]
  %explicit_char.0.lcssa2354 = phi i32 [ %explicit_char.0.lcssa23552373, %if.end195 ], [ %explicit_char.1, %if.end166 ]
  %explicit_int.0.lcssa2350 = phi i32 [ %explicit_int.0.lcssa23512375, %if.end195 ], [ %.explicit_int.0, %if.end166 ]
  %longlong.0.lcssa2348 = phi i32 [ %longlong.0.lcssa23492377, %if.end195 ], [ %longlong.2, %if.end166 ]
  %specbits.0.lcssa2346 = phi i32 [ %specbits.0.lcssa23472379, %if.end195 ], [ %specbits.1, %if.end166 ]
  %.pr2344 = phi %union.tree_node* [ null, %if.end195 ], [ %.pre, %if.end166 ]
  %52 = phi %union.tree_node* [ %51, %if.end195 ], [ %.pre, %if.end166 ]
  %size_varies.02187 = phi i32 [ 0, %if.end195 ], [ %bf.clear165, %if.end166 ]
  %defaulted_int.0 = phi i32 [ 1, %if.end195 ], [ 0, %if.end166 ]
  %and197 = and i32 %specbits.0.lcssa2346, 4
  %tobool198 = icmp ne i32 %and197, 0
  %tobool200 = icmp eq i32 %longlong.0.lcssa2348, 0
  %or.cond2140 = and i1 %tobool198, %tobool200
  br i1 %or.cond2140, label %land.lhs.true201, label %if.end207

land.lhs.true201:                                 ; preds = %if.end196
  %53 = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 15
  %54 = load %union.tree_node** %53, align 8, !tbaa !0
  %55 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !0
  %cmp203 = icmp eq %union.tree_node* %54, %55
  br i1 %cmp203, label %if.then205, label %if.end207

if.then205:                                       ; preds = %land.lhs.true201
  %and206 = and i32 %specbits.0.lcssa2346, -5
  %56 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 8, !tbaa !0
  store %union.tree_node* %56, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end207

if.end207:                                        ; preds = %if.end196, %if.then205, %land.lhs.true201
  %57 = phi %union.tree_node* [ %56, %if.then205 ], [ %52, %land.lhs.true201 ], [ %52, %if.end196 ]
  %specbits.2 = phi i32 [ %and206, %if.then205 ], [ %specbits.0.lcssa2346, %land.lhs.true201 ], [ %specbits.0.lcssa2346, %if.end196 ]
  %and208 = and i32 %specbits.2, 1158
  %tobool209 = icmp eq i32 %and208, 0
  br i1 %tobool209, label %if.end282, label %if.then210

if.then210:                                       ; preds = %if.end207
  %58 = and i32 %specbits.2, 132
  %59 = icmp eq i32 %58, 132
  br i1 %59, label %if.then216, label %if.else217

if.then216:                                       ; preds = %if.then210
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str269, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end277

if.else217:                                       ; preds = %if.then210
  %60 = icmp eq i32 %58, 0
  %tobool224 = icmp eq i32 %explicit_char.0.lcssa2354, 0
  %or.cond2146 = or i1 %60, %tobool224
  br i1 %or.cond2146, label %if.else226, label %if.then225

if.then225:                                       ; preds = %if.else217
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([43 x i8]* @.str270, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end277

if.else226:                                       ; preds = %if.else217
  br i1 %60, label %if.else245, label %land.lhs.true232

land.lhs.true232:                                 ; preds = %if.else226
  %code234 = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 0, i32 2
  %61 = bitcast [4 x i8]* %code234 to i32*
  %bf.load235 = load i32* %61, align 8
  %bf.clear236 = and i32 %bf.load235, 255
  %cmp237 = icmp eq i32 %bf.clear236, 7
  br i1 %cmp237, label %if.then239, label %if.else245

if.then239:                                       ; preds = %land.lhs.true232
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([52 x i8]* @.str271, i64 0, i64 0), i8* %.name.0) #8
  %.b2132 = load i1* @grokdeclarator.already, align 1
  %62 = load i32* @pedantic, align 4, !tbaa !3
  %tobool242 = icmp ne i32 %62, 0
  %or.cond1795 = or i1 %.b2132, %tobool242
  br i1 %or.cond1795, label %if.end277, label %if.then243

if.then243:                                       ; preds = %if.then239
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str272, i64 0, i64 0)) #8
  store i1 true, i1* @grokdeclarator.already, align 1
  br label %if.end277

if.else245:                                       ; preds = %if.else226, %land.lhs.true232
  %63 = and i32 %specbits.2, 1026
  %64 = icmp eq i32 %63, 1026
  br i1 %64, label %if.then251, label %if.else252

if.then251:                                       ; preds = %if.else245
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str273, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end277

if.else252:                                       ; preds = %if.else245
  %code254 = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 0, i32 2
  %65 = bitcast [4 x i8]* %code254 to i32*
  %bf.load255 = load i32* %65, align 8
  %bf.clear256 = and i32 %bf.load255, 255
  %cmp257 = icmp eq i32 %bf.clear256, 6
  br i1 %cmp257, label %if.else260, label %if.then259

if.then259:                                       ; preds = %if.else252
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str274, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end277

if.else260:                                       ; preds = %if.else252
  %66 = or i32 %defaulted_int.0, %explicit_int.0.lcssa2350
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %land.lhs.true264, label %if.end277

land.lhs.true264:                                 ; preds = %if.else260
  %68 = load i32* @pedantic, align 4, !tbaa !3
  %tobool267 = icmp ne i32 %68, 0
  %or.cond1797 = and i1 %tobool224, %tobool267
  br i1 %or.cond1797, label %if.then268, label %if.end277

if.then268:                                       ; preds = %land.lhs.true264
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([56 x i8]* @.str275, i64 0, i64 0), i8* %.name.0) #8
  %69 = load i32* @flag_pedantic_errors, align 4, !tbaa !3
  %tobool269 = icmp eq i32 %69, 0
  br label %if.end277

if.end277:                                        ; preds = %if.then268, %if.else260, %if.then225, %if.then251, %land.lhs.true264, %if.then259, %if.then239, %if.then243, %if.then216
  %ok.0 = phi i1 [ false, %if.then216 ], [ false, %if.then225 ], [ false, %if.then239 ], [ false, %if.then243 ], [ false, %if.then251 ], [ false, %if.then259 ], [ true, %if.else260 ], [ true, %land.lhs.true264 ], [ %tobool269, %if.then268 ]
  %and280 = and i32 %specbits.2, -1159
  %longlong.0. = select i1 %ok.0, i32 %longlong.0.lcssa2348, i32 0
  %specbits.2.and280 = select i1 %ok.0, i32 %specbits.2, i32 %and280
  br label %if.end282

if.end282:                                        ; preds = %if.end277, %if.end207
  %longlong.3 = phi i32 [ %longlong.0.lcssa2348, %if.end207 ], [ %longlong.0., %if.end277 ]
  %specbits.3 = phi i32 [ %specbits.2, %if.end207 ], [ %specbits.2.and280, %if.end277 ]
  %and283 = and i32 %specbits.3, 32768
  %tobool284 = icmp eq i32 %and283, 0
  br i1 %tobool284, label %if.end301, label %land.lhs.true285

land.lhs.true285:                                 ; preds = %if.end282
  %70 = load %union.tree_node** %type, align 8, !tbaa !0
  %code287 = getelementptr inbounds %union.tree_node* %70, i64 0, i32 0, i32 0, i32 2
  %71 = bitcast [4 x i8]* %code287 to i32*
  %bf.load288 = load i32* %71, align 8
  %bf.clear289 = and i32 %bf.load288, 255
  %bf.clear289.off = add i32 %bf.clear289, -6
  %switch = icmp ult i32 %bf.clear289.off, 2
  br i1 %switch, label %if.end301, label %if.then299

if.then299:                                       ; preds = %land.lhs.true285
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([25 x i8]* @.str276, i64 0, i64 0), i8* %.name.0) #8
  %and300 = and i32 %specbits.3, -32769
  br label %if.end301

if.end301:                                        ; preds = %land.lhs.true285, %if.end282, %if.then299
  %specbits.4 = phi i32 [ %and300, %if.then299 ], [ %specbits.3, %if.end282 ], [ %specbits.3, %land.lhs.true285 ]
  %and302 = and i32 %specbits.4, 2
  %tobool303 = icmp eq i32 %and302, 0
  br i1 %tobool303, label %lor.lhs.false304, label %if.then342

lor.lhs.false304:                                 ; preds = %if.end301
  %72 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool307 = icmp ne i32 %72, 0
  %or.cond1799 = and i1 %cmp, %tobool307
  br i1 %or.cond1799, label %land.lhs.true308, label %lor.lhs.false304.lor.lhs.false312_crit_edge

lor.lhs.false304.lor.lhs.false312_crit_edge:      ; preds = %lor.lhs.false304
  %.pre2331 = load i32* @flag_signed_bitfields, align 4, !tbaa !3
  br label %lor.lhs.false312

land.lhs.true308:                                 ; preds = %lor.lhs.false304
  %73 = load i32* @explicit_flag_signed_bitfields, align 4, !tbaa !3
  %tobool309 = icmp ne i32 %73, 0
  %74 = load i32* @flag_signed_bitfields, align 4, !tbaa !3
  %tobool311 = icmp ne i32 %74, 0
  %or.cond1801 = and i1 %tobool309, %tobool311
  br i1 %or.cond1801, label %lor.lhs.false312, label %if.then342

lor.lhs.false312:                                 ; preds = %lor.lhs.false304.lor.lhs.false312_crit_edge, %land.lhs.true308
  %75 = phi i32 [ %.pre2331, %lor.lhs.false304.lor.lhs.false312_crit_edge ], [ %74, %land.lhs.true308 ]
  %tobool313 = xor i1 %cmp, true
  %tobool315 = icmp ne i32 %75, 0
  %or.cond1803 = or i1 %tobool315, %tobool313
  br i1 %or.cond1803, label %if.else367, label %land.lhs.true316

land.lhs.true316:                                 ; preds = %lor.lhs.false312
  %76 = or i32 %explicit_int.0.lcssa2350, %explicit_char.0.lcssa2354
  %77 = or i32 %76, %defaulted_int.0
  %or.cond2155.not = icmp ne i32 %77, 0
  %cmp323 = icmp eq %union.tree_node* %typedef_decl.0.lcssa2358, null
  %or.cond2156 = or i1 %or.cond2155.not, %cmp323
  br i1 %or.cond2156, label %land.lhs.true332, label %land.lhs.true325

land.lhs.true325:                                 ; preds = %land.lhs.true316
  %lang_flag_1327 = getelementptr inbounds %union.tree_node* %typedef_decl.0.lcssa2358, i64 0, i32 0, i32 5
  %78 = bitcast [8 x i8]* %lang_flag_1327 to i64*
  %bf.load328 = load i64* %78, align 8
  %bf.cast = and i64 %bf.load328, 274877906944
  %tobool331 = icmp eq i64 %bf.cast, 0
  br i1 %tobool331, label %land.lhs.true332, label %if.else367

land.lhs.true332:                                 ; preds = %land.lhs.true325, %land.lhs.true316
  %79 = load %union.tree_node** %type, align 8, !tbaa !0
  %code334 = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 0, i32 2
  %80 = bitcast [4 x i8]* %code334 to i32*
  %bf.load335 = load i32* %80, align 8
  %bf.clear336 = and i32 %bf.load335, 255
  %cmp337 = icmp eq i32 %bf.clear336, 10
  br i1 %cmp337, label %if.else367, label %land.lhs.true339

land.lhs.true339:                                 ; preds = %land.lhs.true332
  %and340 = and i32 %specbits.4, 1024
  %tobool341 = icmp eq i32 %and340, 0
  br i1 %tobool341, label %if.then342, label %if.else367

if.then342:                                       ; preds = %land.lhs.true339, %if.end301, %land.lhs.true308
  %tobool343 = icmp eq i32 %longlong.3, 0
  br i1 %tobool343, label %if.else345, label %if.then344

if.then344:                                       ; preds = %if.then342
  %81 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !0
  store %union.tree_node* %81, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else345:                                       ; preds = %if.then342
  %and346 = and i32 %specbits.4, 4
  %tobool347 = icmp eq i32 %and346, 0
  br i1 %tobool347, label %if.else349, label %if.then348

if.then348:                                       ; preds = %if.else345
  %82 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 8, !tbaa !0
  store %union.tree_node* %82, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else349:                                       ; preds = %if.else345
  %and350 = and i32 %specbits.4, 128
  %tobool351 = icmp eq i32 %and350, 0
  br i1 %tobool351, label %if.else353, label %if.then352

if.then352:                                       ; preds = %if.else349
  %83 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 8, !tbaa !0
  store %union.tree_node* %83, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else353:                                       ; preds = %if.else349
  %84 = load %union.tree_node** %type, align 8, !tbaa !0
  %85 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !0
  %cmp354 = icmp eq %union.tree_node* %84, %85
  br i1 %cmp354, label %if.then356, label %if.else357

if.then356:                                       ; preds = %if.else353
  %86 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 8, !tbaa !0
  store %union.tree_node* %86, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else357:                                       ; preds = %if.else353
  %tobool358 = icmp eq %union.tree_node* %typedef_decl.0.lcssa2358, null
  br i1 %tobool358, label %if.else361, label %if.then359

if.then359:                                       ; preds = %if.else357
  %call360 = call %union.tree_node* @unsigned_type(%union.tree_node* %84) #8
  store %union.tree_node* %call360, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else361:                                       ; preds = %if.else357
  %87 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !0
  store %union.tree_node* %87, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else367:                                       ; preds = %land.lhs.true325, %land.lhs.true339, %land.lhs.true332, %lor.lhs.false312
  %and368 = and i32 %specbits.4, 1024
  %tobool369 = icmp eq i32 %and368, 0
  br i1 %tobool369, label %if.else374, label %land.lhs.true370

land.lhs.true370:                                 ; preds = %if.else367
  %88 = load %union.tree_node** %type, align 8, !tbaa !0
  %89 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !0
  %cmp371 = icmp eq %union.tree_node* %88, %89
  br i1 %cmp371, label %if.then373, label %if.else374

if.then373:                                       ; preds = %land.lhs.true370
  %90 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !tbaa !0
  store %union.tree_node* %90, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else374:                                       ; preds = %if.else367, %land.lhs.true370
  %tobool375 = icmp eq i32 %longlong.3, 0
  br i1 %tobool375, label %if.else377, label %if.then376

if.then376:                                       ; preds = %if.else374
  %91 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !0
  store %union.tree_node* %91, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else377:                                       ; preds = %if.else374
  %and378 = and i32 %specbits.4, 4
  %tobool379 = icmp eq i32 %and378, 0
  br i1 %tobool379, label %if.else381, label %if.then380

if.then380:                                       ; preds = %if.else377
  %92 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !tbaa !0
  store %union.tree_node* %92, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.else381:                                       ; preds = %if.else377
  %and382 = and i32 %specbits.4, 128
  %tobool383 = icmp eq i32 %and382, 0
  br i1 %tobool383, label %if.end389, label %if.then384

if.then384:                                       ; preds = %if.else381
  %93 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !tbaa !0
  store %union.tree_node* %93, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end389

if.end389:                                        ; preds = %if.else381, %if.then373, %if.then380, %if.then384, %if.then376, %if.then344, %if.then352, %if.then359, %if.else361, %if.then356, %if.then348
  %typedef_decl.0.lcssa2361 = phi %union.tree_node* [ %typedef_decl.0.lcssa2358, %if.else381 ], [ %typedef_decl.0.lcssa2358, %if.then373 ], [ %typedef_decl.0.lcssa2358, %if.then380 ], [ %typedef_decl.0.lcssa2358, %if.then384 ], [ %typedef_decl.0.lcssa2358, %if.then376 ], [ %typedef_decl.0.lcssa2358, %if.then344 ], [ %typedef_decl.0.lcssa2358, %if.then352 ], [ %typedef_decl.0.lcssa2358, %if.then359 ], [ null, %if.else361 ], [ %typedef_decl.0.lcssa2358, %if.then356 ], [ %typedef_decl.0.lcssa2358, %if.then348 ]
  %and390 = and i32 %specbits.4, 32768
  %tobool391 = icmp eq i32 %and390, 0
  br i1 %tobool391, label %if.end389.if.end437_crit_edge, label %if.then392

if.end389.if.end437_crit_edge:                    ; preds = %if.end389
  %.pre2332 = load %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end437

if.then392:                                       ; preds = %if.end389
  %94 = load i32* @pedantic, align 4, !tbaa !3
  %tobool393 = icmp eq i32 %94, 0
  %95 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool395 = icmp ne i32 %95, 0
  %or.cond1805 = or i1 %tobool393, %tobool395
  br i1 %or.cond1805, label %if.end397, label %if.then396

if.then396:                                       ; preds = %if.then392
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str277, i64 0, i64 0)) #8
  br label %if.end397

if.end397:                                        ; preds = %if.then392, %if.then396
  %tobool398 = icmp ne i32 %defaulted_int.0, 0
  %tobool400 = icmp eq i32 %longlong.3, 0
  %or.cond2157 = and i1 %tobool398, %tobool400
  br i1 %or.cond2157, label %land.lhs.true401, label %if.else408

land.lhs.true401:                                 ; preds = %if.end397
  %and402 = and i32 %specbits.4, 1158
  %tobool403 = icmp eq i32 %and402, 0
  br i1 %tobool403, label %if.then404, label %if.else408

if.then404:                                       ; preds = %land.lhs.true401
  %96 = load i32* @pedantic, align 4, !tbaa !3
  %tobool405 = icmp eq i32 %96, 0
  br i1 %tobool405, label %if.end407, label %if.then406

if.then406:                                       ; preds = %if.then404
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([64 x i8]* @.str278, i64 0, i64 0)) #8
  br label %if.end407

if.end407:                                        ; preds = %if.then404, %if.then406
  %97 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 22), align 8, !tbaa !0
  store %union.tree_node* %97, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end437

if.else408:                                       ; preds = %land.lhs.true401, %if.end397
  %98 = load %union.tree_node** %type, align 8, !tbaa !0
  %99 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  %cmp409 = icmp eq %union.tree_node* %98, %99
  br i1 %cmp409, label %if.then411, label %if.else415

if.then411:                                       ; preds = %if.else408
  %100 = load i32* @pedantic, align 4, !tbaa !3
  %tobool412 = icmp eq i32 %100, 0
  br i1 %tobool412, label %if.end414, label %if.then413

if.then413:                                       ; preds = %if.then411
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([45 x i8]* @.str279, i64 0, i64 0)) #8
  br label %if.end414

if.end414:                                        ; preds = %if.then411, %if.then413
  %101 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 8, !tbaa !0
  store %union.tree_node* %101, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end437

if.else415:                                       ; preds = %if.else408
  %102 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !0
  %cmp416 = icmp eq %union.tree_node* %98, %102
  br i1 %cmp416, label %if.then418, label %if.else419

if.then418:                                       ; preds = %if.else415
  %103 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 21), align 8, !tbaa !0
  store %union.tree_node* %103, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end437

if.else419:                                       ; preds = %if.else415
  %104 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !0
  %cmp420 = icmp eq %union.tree_node* %98, %104
  br i1 %cmp420, label %if.then422, label %if.else423

if.then422:                                       ; preds = %if.else419
  %105 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 22), align 8, !tbaa !0
  store %union.tree_node* %105, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end437

if.else423:                                       ; preds = %if.else419
  %106 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 8, !tbaa !0
  %cmp424 = icmp eq %union.tree_node* %98, %106
  br i1 %cmp424, label %if.then426, label %if.else427

if.then426:                                       ; preds = %if.else423
  %107 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 23), align 8, !tbaa !0
  store %union.tree_node* %107, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end437

if.else427:                                       ; preds = %if.else423
  %108 = load i32* @pedantic, align 4, !tbaa !3
  %tobool428 = icmp eq i32 %108, 0
  br i1 %tobool428, label %if.end430, label %if.then429

if.then429:                                       ; preds = %if.else427
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([45 x i8]* @.str279, i64 0, i64 0)) #8
  %.pre2330 = load %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end430

if.end430:                                        ; preds = %if.else427, %if.then429
  %109 = phi %union.tree_node* [ %98, %if.else427 ], [ %.pre2330, %if.then429 ]
  %call431 = call %union.tree_node* @build_complex_type(%union.tree_node* %109) #8
  store %union.tree_node* %call431, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end437

if.end437:                                        ; preds = %if.end389.if.end437_crit_edge, %if.end407, %if.then418, %if.then426, %if.end430, %if.then422, %if.end414
  %110 = phi %union.tree_node* [ %.pre2332, %if.end389.if.end437_crit_edge ], [ %97, %if.end407 ], [ %103, %if.then418 ], [ %107, %if.then426 ], [ %call431, %if.end430 ], [ %105, %if.then422 ], [ %101, %if.end414 ]
  %and438 = lshr i32 %specbits.4, 3
  %and438.lobit = and i32 %and438, 1
  %readonly_flag = getelementptr inbounds %union.tree_node* %110, i64 0, i32 0, i32 0, i32 2
  %111 = bitcast [4 x i8]* %readonly_flag to i32*
  %bf.load442 = load i32* %111, align 8
  %bf.lshr443 = lshr i32 %bf.load442, 12
  %bf.clear444 = and i32 %bf.lshr443, 1
  %add = add nsw i32 %bf.clear444, %and438.lobit
  %and445 = lshr i32 %specbits.4, 12
  %and445.lobit = and i32 %and445, 1
  %type451 = bitcast %union.tree_node* %110 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type451, i64 0, i32 6
  %112 = bitcast [4 x i8]* %restrict_flag to i32*
  %bf.load452 = load i32* %112, align 4
  %bf.lshr453 = lshr i32 %bf.load452, 21
  %bf.clear454 = and i32 %bf.lshr453, 1
  %add455 = add nsw i32 %bf.clear454, %and445.lobit
  %and456 = lshr i32 %specbits.4, 9
  %and456.lobit = and i32 %and456, 1
  %bf.lshr464 = lshr i32 %bf.load442, 11
  %bf.clear465 = and i32 %bf.lshr464, 1
  %add466 = add nsw i32 %bf.clear465, %and456.lobit
  %and467 = and i32 %specbits.4, 256
  %tobool468 = icmp ne i32 %and467, 0
  %cmp473 = icmp slt i32 %add, 2
  %113 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool476 = icmp ne i32 %113, 0
  %or.cond1807 = or i1 %cmp473, %tobool476
  br i1 %or.cond1807, label %if.end478, label %if.then477

if.then477:                                       ; preds = %if.end437
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([18 x i8]* @.str280, i64 0, i64 0)) #8
  %.pre2321 = load i32* @flag_isoc99, align 4, !tbaa !3
  br label %if.end478

if.end478:                                        ; preds = %if.end437, %if.then477
  %114 = phi i32 [ %113, %if.end437 ], [ %.pre2321, %if.then477 ]
  %cmp479 = icmp slt i32 %add455, 2
  %tobool482 = icmp ne i32 %114, 0
  %or.cond1809 = or i1 %cmp479, %tobool482
  br i1 %or.cond1809, label %if.end484, label %if.then483

if.then483:                                       ; preds = %if.end478
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str281, i64 0, i64 0)) #8
  %.pre2322 = load i32* @flag_isoc99, align 4, !tbaa !3
  br label %if.end484

if.end484:                                        ; preds = %if.end478, %if.then483
  %115 = phi i32 [ %114, %if.end478 ], [ %.pre2322, %if.then483 ]
  %cmp485 = icmp slt i32 %add466, 2
  %tobool488 = icmp ne i32 %115, 0
  %or.cond1811 = or i1 %cmp485, %tobool488
  br i1 %or.cond1811, label %if.end490, label %if.then489

if.then489:                                       ; preds = %if.end484
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str282, i64 0, i64 0)) #8
  br label %if.end490

if.end490:                                        ; preds = %if.end484, %if.then489
  %116 = load i32* @flag_gen_aux_info, align 4, !tbaa !3
  %tobool491 = icmp eq i32 %116, 0
  br i1 %tobool491, label %land.lhs.true492, label %if.end527

land.lhs.true492:                                 ; preds = %if.end490
  %117 = load %union.tree_node** %type, align 8, !tbaa !0
  %readonly_flag494 = getelementptr inbounds %union.tree_node* %117, i64 0, i32 0, i32 0, i32 2
  %118 = bitcast [4 x i8]* %readonly_flag494 to i32*
  %bf.load495 = load i32* %118, align 8
  %bf.lshr496 = lshr i32 %bf.load495, 12
  %bf.clear497 = and i32 %bf.lshr496, 1
  %119 = lshr i32 %bf.load495, 10
  %mul503 = and i32 %119, 2
  %or504 = or i32 %bf.clear497, %mul503
  %type505 = bitcast %union.tree_node* %117 to %struct.tree_type*
  %restrict_flag506 = getelementptr inbounds %struct.tree_type* %type505, i64 0, i32 6
  %120 = bitcast [4 x i8]* %restrict_flag506 to i32*
  %bf.load507 = load i32* %120, align 4
  %121 = lshr i32 %bf.load507, 19
  %mul510 = and i32 %121, 4
  %or511 = or i32 %or504, %mul510
  %bf.clear515 = and i32 %bf.load495, 255
  %cmp516 = icmp eq i32 %bf.clear515, 20
  br i1 %cmp516, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true492
  %type519 = getelementptr inbounds %union.tree_node* %117, i64 0, i32 0, i32 0, i32 1
  %122 = load %union.tree_node** %type519, align 8, !tbaa !0
  %tobool520 = icmp ne %union.tree_node* %122, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true492
  %123 = phi i1 [ false, %land.lhs.true492 ], [ %tobool520, %land.rhs ]
  %land.ext = zext i1 %123 to i32
  %mul521 = shl nuw nsw i32 %land.ext, 3
  %or522 = or i32 %or511, %mul521
  %tobool523 = icmp eq i32 %or522, 0
  br i1 %tobool523, label %if.end527, label %if.then524

if.then524:                                       ; preds = %land.end
  %124 = getelementptr inbounds %union.tree_node* %117, i64 0, i32 0, i32 15
  %125 = load %union.tree_node** %124, align 8, !tbaa !0
  store %union.tree_node* %125, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end527

if.end527:                                        ; preds = %land.end, %if.end490, %if.then524
  %tobool528 = icmp ne i32 %add, 0
  %cond = zext i1 %tobool528 to i32
  %tobool529 = icmp ne i32 %add455, 0
  %cond530 = select i1 %tobool529, i32 4, i32 0
  %tobool532 = icmp ne i32 %add466, 0
  %cond533 = select i1 %tobool532, i32 2, i32 0
  %or531 = or i32 %cond533, %cond
  %or534 = or i32 %or531, %cond530
  %and535 = and i32 %specbits.4, 2048
  %tobool536 = icmp ne i32 %and535, 0
  %and535.lobit = lshr exact i32 %and535, 11
  %and539 = and i32 %specbits.4, 1
  %nclasses.1 = add nsw i32 %and535.lobit, %and539
  %and544 = and i32 %specbits.4, 16
  %and544.lobit = lshr exact i32 %and544, 4
  %inc547.nclasses.1 = add nsw i32 %nclasses.1, %and544.lobit
  %and549 = and i32 %specbits.4, 32
  %tobool550 = icmp ne i32 %and549, 0
  %and549.lobit = lshr exact i32 %and549, 5
  %nclasses.3 = add nsw i32 %inc547.nclasses.1, %and549.lobit
  %and554 = and i32 %specbits.4, 64
  %tobool555 = icmp eq i32 %and554, 0
  %and554.lobit = lshr exact i32 %and554, 6
  %inc557.nclasses.3 = add nsw i32 %nclasses.3, %and554.lobit
  %cmp559 = icmp sgt i32 %inc557.nclasses.3, 1
  br i1 %cmp559, label %if.then561, label %if.else562

if.then561:                                       ; preds = %if.end527
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str283, i64 0, i64 0), i8* %.name.0) #8
  br label %while.cond641.preheader

if.else562:                                       ; preds = %if.end527
  br i1 %cmp1, label %land.lhs.true564, label %if.else586

land.lhs.true564:                                 ; preds = %if.else562
  %and565 = and i32 %specbits.4, 2144
  %tobool566 = icmp eq i32 %and565, 0
  br i1 %tobool566, label %if.else586, label %if.then567

if.then567:                                       ; preds = %land.lhs.true564
  br i1 %tobool536, label %land.lhs.true570, label %if.end576

land.lhs.true570:                                 ; preds = %if.then567
  %126 = load i32* @pedantic, align 4, !tbaa !3
  %tobool571 = icmp eq i32 %126, 0
  br i1 %tobool571, label %lor.lhs.false572, label %if.then575

lor.lhs.false572:                                 ; preds = %land.lhs.true570
  %127 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %128 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp573 = icmp eq %struct.binding_level* %127, %128
  br i1 %cmp573, label %if.then575, label %if.end576

if.then575:                                       ; preds = %land.lhs.true570, %lor.lhs.false572
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([36 x i8]* @.str284, i64 0, i64 0)) #8
  br label %if.end576

if.end576:                                        ; preds = %if.then575, %lor.lhs.false572, %if.then567
  br i1 %tobool550, label %if.then579, label %if.end580

if.then579:                                       ; preds = %if.end576
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str285, i64 0, i64 0)) #8
  br label %if.end580

if.end580:                                        ; preds = %if.then579, %if.end576
  br i1 %tobool555, label %if.end584, label %if.then583

if.then583:                                       ; preds = %if.end580
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str286, i64 0, i64 0)) #8
  br label %if.end584

if.end584:                                        ; preds = %if.end580, %if.then583
  %and585 = and i32 %specbits.4, -2145
  br label %while.cond641.preheader

if.else586:                                       ; preds = %land.lhs.true564, %if.else562
  %cmp587 = icmp ne i32 %decl_context.addr.2, 0
  %cmp590 = icmp sgt i32 %inc557.nclasses.3, 0
  %or.cond2159 = and i1 %cmp587, %cmp590
  br i1 %or.cond2159, label %if.then592, label %if.else606

if.then592:                                       ; preds = %if.else586
  %cmp593.not = icmp ne i32 %decl_context.addr.2, 2
  %tobool550.not = xor i1 %tobool550, true
  %brmerge2160 = or i1 %cmp593.not, %tobool550.not
  br i1 %brmerge2160, label %if.else599, label %while.cond641.preheader

if.else599:                                       ; preds = %if.then592
  switch i32 %decl_context.addr.2, label %sw.default602 [
    i32 3, label %sw.bb600
    i32 2, label %sw.bb601
  ]

sw.bb600:                                         ; preds = %if.else599
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str287, i64 0, i64 0), i8* %.name.0) #8
  br label %sw.epilog603

sw.bb601:                                         ; preds = %if.else599
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([43 x i8]* @.str288, i64 0, i64 0), i8* %.name.0) #8
  br label %sw.epilog603

sw.default602:                                    ; preds = %if.else599
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str289, i64 0, i64 0)) #8
  br label %sw.epilog603

sw.epilog603:                                     ; preds = %sw.default602, %sw.bb601, %sw.bb600
  %and604 = and i32 %specbits.4, -2162
  br label %while.cond641.preheader

if.else606:                                       ; preds = %if.else586
  %tobool545.not = icmp eq i32 %and544, 0
  %tobool610 = icmp eq i32 %initialized, 0
  %or.cond2161 = or i1 %tobool545.not, %tobool610
  %brmerge2162 = or i1 %or.cond2161, %cmp1
  br i1 %brmerge2162, label %if.else619, label %if.then613

if.then613:                                       ; preds = %if.else606
  %129 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %130 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp614 = icmp eq %struct.binding_level* %129, %130
  br i1 %cmp614, label %if.then616, label %if.else617

if.then616:                                       ; preds = %if.then613
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str290, i64 0, i64 0), i8* %.name.0) #8
  br label %while.cond641.preheader

if.else617:                                       ; preds = %if.then613
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str291, i64 0, i64 0), i8* %.name.0) #8
  br label %while.cond641.preheader

if.else619:                                       ; preds = %if.else606
  %brmerge2165 = or i1 %tobool545.not, %tobool13.not
  %.pre2333 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %.pre2334 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp629 = icmp eq %struct.binding_level* %.pre2333, %.pre2334
  br i1 %brmerge2165, label %if.else628, label %land.lhs.true624

land.lhs.true624:                                 ; preds = %if.else619
  br i1 %cmp629, label %land.lhs.true631, label %if.then627

if.then627:                                       ; preds = %land.lhs.true624
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str292, i64 0, i64 0), i8* %.name.0) #8
  br label %while.cond641.preheader

if.else628:                                       ; preds = %if.else619
  %brmerge2411.demorgan = and i1 %cmp629, %tobool536
  br i1 %brmerge2411.demorgan, label %if.then634, label %while.cond641.preheader

land.lhs.true631:                                 ; preds = %land.lhs.true624
  br i1 %tobool536, label %if.then634, label %while.cond641.preheader

if.then634:                                       ; preds = %if.else628, %land.lhs.true631
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str293, i64 0, i64 0), i8* %.name.0) #8
  br label %while.cond641.preheader

while.cond641.preheader:                          ; preds = %if.else628, %if.end584, %if.else617, %if.then616, %land.lhs.true631, %if.then634, %if.then627, %sw.epilog603, %if.then561, %if.then592
  %specbits.5.ph = phi i32 [ %specbits.4, %if.then592 ], [ %specbits.4, %if.then561 ], [ %and604, %sw.epilog603 ], [ %specbits.4, %if.then627 ], [ %specbits.4, %if.then634 ], [ %specbits.4, %land.lhs.true631 ], [ %specbits.4, %if.else628 ], [ %specbits.4, %if.then616 ], [ %specbits.4, %if.else617 ], [ %and585, %if.end584 ]
  br i1 %tobool226922752287, label %land.end650.thread, label %land.end650.lr.ph

land.end650.lr.ph:                                ; preds = %while.cond641.preheader
  %cmp910 = icmp eq i32 %decl_context.addr.2, 3
  %cmp952 = icmp eq i32 %decl_context.addr.2, 2
  br label %land.end650

land.end650.thread:                               ; preds = %while.cond641.backedge, %while.cond641.preheader
  %type_quals.0.lcssa = phi i32 [ %or534, %while.cond641.preheader ], [ %type_quals.0.be, %while.cond641.backedge ]
  %returned_attrs.0.lcssa = phi %union.tree_node* [ null, %while.cond641.preheader ], [ %returned_attrs.0.be, %while.cond641.backedge ]
  %array_ptr_quals.0.lcssa = phi %union.tree_node* [ null, %while.cond641.preheader ], [ %array_ptr_quals.0.be, %while.cond641.backedge ]
  %size_varies.1.lcssa = phi i32 [ %size_varies.02187, %while.cond641.preheader ], [ %size_varies.1.be, %while.cond641.backedge ]
  %131 = load %union.tree_node** %type, align 8, !tbaa !0
  br label %while.end1174

land.end650:                                      ; preds = %while.cond641.backedge, %land.end650.lr.ph
  %declarator.addr.02236 = phi %union.tree_node* [ %declarator, %land.end650.lr.ph ], [ %declarator.addr.0.be, %while.cond641.backedge ]
  %type_quals.02235 = phi i32 [ %or534, %land.end650.lr.ph ], [ %type_quals.0.be, %while.cond641.backedge ]
  %returned_attrs.02234 = phi %union.tree_node* [ null, %land.end650.lr.ph ], [ %returned_attrs.0.be, %while.cond641.backedge ]
  %array_parm_static.02233 = phi i32 [ 0, %land.end650.lr.ph ], [ %array_parm_static.0.be, %while.cond641.backedge ]
  %array_ptr_quals.02232 = phi %union.tree_node* [ null, %land.end650.lr.ph ], [ %array_ptr_quals.0.be, %while.cond641.backedge ]
  %size_varies.12231 = phi i32 [ %size_varies.02187, %land.end650.lr.ph ], [ %size_varies.1.be, %while.cond641.backedge ]
  %code645 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 0, i32 2
  %132 = bitcast [4 x i8]* %code645 to i32*
  %bf.load646 = load i32* %132, align 8
  %bf.clear647 = and i32 %bf.load646, 255
  %cmp648 = icmp eq i32 %bf.clear647, 1
  %133 = load %union.tree_node** %type, align 8, !tbaa !0
  br i1 %cmp648, label %while.end1174, label %while.body652

while.body652:                                    ; preds = %land.end650
  %134 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp653 = icmp eq %union.tree_node* %133, %134
  br i1 %cmp653, label %if.then655, label %if.end659

if.then655:                                       ; preds = %while.body652
  %operands657 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 2
  %arrayidx658 = bitcast i32* %operands657 to %union.tree_node**
  %135 = load %union.tree_node** %arrayidx658, align 8, !tbaa !0
  br label %while.cond641.backedge

while.cond641.backedge:                           ; preds = %if.end1043, %for.body1050, %if.then655, %if.then901, %if.end766, %if.then968, %if.then959, %if.end1165, %if.end723, %if.end951, %land.lhs.true954
  %size_varies.1.be = phi i32 [ %size_varies.12231, %if.then655 ], [ %size_varies.12231, %if.end723 ], [ %size_varies.12231, %if.end766 ], [ %size_varies.3, %if.then959 ], [ %size_varies.3, %if.end951 ], [ %size_varies.2, %if.then901 ], [ %size_varies.12231, %if.then968 ], [ 0, %if.end1165 ], [ %size_varies.3, %land.lhs.true954 ], [ 0, %for.body1050 ], [ 0, %if.end1043 ]
  %array_ptr_quals.0.be = phi %union.tree_node* [ %array_ptr_quals.02232, %if.then655 ], [ null, %if.end723 ], [ %146, %if.end766 ], [ null, %if.then959 ], [ %146, %if.end951 ], [ %146, %if.then901 ], [ null, %if.then968 ], [ null, %if.end1165 ], [ null, %land.lhs.true954 ], [ null, %for.body1050 ], [ null, %if.end1043 ]
  %array_parm_static.0.be = phi i32 [ %array_parm_static.02233, %if.then655 ], [ 0, %if.end723 ], [ %bf.clear743, %if.end766 ], [ 0, %if.then959 ], [ %bf.clear743, %if.end951 ], [ %bf.clear743, %if.then901 ], [ 0, %if.then968 ], [ 0, %if.end1165 ], [ 0, %land.lhs.true954 ], [ 0, %for.body1050 ], [ 0, %if.end1043 ]
  %returned_attrs.0.be = phi %union.tree_node* [ %returned_attrs.02234, %if.then655 ], [ %call725, %if.end723 ], [ %returned_attrs.02234, %if.end766 ], [ %returned_attrs.02234, %if.then959 ], [ %returned_attrs.02234, %if.end951 ], [ %returned_attrs.02234, %if.then901 ], [ %returned_attrs.02234, %if.then968 ], [ %returned_attrs.02234, %if.end1165 ], [ %returned_attrs.02234, %land.lhs.true954 ], [ %returned_attrs.02234, %for.body1050 ], [ %returned_attrs.02234, %if.end1043 ]
  %type_quals.0.be = phi i32 [ %type_quals.02235, %if.then655 ], [ %type_quals.02235, %if.end723 ], [ %type_quals.02235, %if.end766 ], [ %type_quals.02235, %if.then959 ], [ %type_quals.02235, %if.end951 ], [ %type_quals.02235, %if.then901 ], [ %type_quals.02235, %if.then968 ], [ %type_quals.1, %if.end1165 ], [ %type_quals.02235, %land.lhs.true954 ], [ 0, %for.body1050 ], [ 0, %if.end1043 ]
  %declarator.addr.0.be = phi %union.tree_node* [ %135, %if.then655 ], [ %139, %if.end723 ], [ %147, %if.end766 ], [ %147, %if.then959 ], [ %147, %if.end951 ], [ %147, %if.then901 ], [ %declarator.addr.02236, %if.then968 ], [ %256, %if.end1165 ], [ %147, %land.lhs.true954 ], [ %238, %for.body1050 ], [ %238, %if.end1043 ]
  %tobool642 = icmp eq %union.tree_node* %declarator.addr.0.be, null
  br i1 %tobool642, label %land.end650.thread, label %land.end650

if.end659:                                        ; preds = %while.body652
  %cmp660 = icmp eq %union.tree_node* %array_ptr_quals.02232, null
  %tobool663 = icmp eq i32 %array_parm_static.02233, 0
  %or.cond2166 = and i1 %cmp660, %tobool663
  br i1 %or.cond2166, label %if.end665, label %if.then664

if.then664:                                       ; preds = %if.end659
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str294, i64 0, i64 0)) #8
  %bf.load668.pre = load i32* %132, align 8
  br label %if.end665

if.end665:                                        ; preds = %if.end659, %if.then664
  %bf.load668 = phi i32 [ %bf.load646, %if.end659 ], [ %bf.load668.pre, %if.then664 ]
  %bf.clear669 = and i32 %bf.load668, 255
  switch i32 %bf.clear669, label %if.else1169 [
    i32 2, label %if.then672
    i32 43, label %if.then733
    i32 53, label %if.then968
    i32 41, label %if.then1065
  ]

if.then672:                                       ; preds = %if.end665
  %purpose = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 1
  %136 = load i8** %purpose, align 8
  %137 = bitcast i8* %136 to %union.tree_node*
  %value675 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 2
  %138 = bitcast i32* %value675 to %union.tree_node**
  %139 = load %union.tree_node** %138, align 8, !tbaa !0
  %cond21822212 = icmp eq %union.tree_node* %139, null
  br i1 %cond21822212, label %if.end723, label %land.rhs679

land.rhs679:                                      ; preds = %if.then672, %while.body688
  %inner_decl.02213 = phi %union.tree_node* [ %142, %while.body688 ], [ %139, %if.then672 ]
  %code681 = getelementptr inbounds %union.tree_node* %inner_decl.02213, i64 0, i32 0, i32 0, i32 2
  %140 = bitcast [4 x i8]* %code681 to i32*
  %bf.load682 = load i32* %140, align 8
  %bf.clear683 = and i32 %bf.load682, 255
  switch i32 %bf.clear683, label %if.else712 [
    i32 2, label %while.body688
    i32 1, label %if.end723
    i32 53, label %if.then710
  ]

while.body688:                                    ; preds = %land.rhs679
  %value690 = getelementptr inbounds %union.tree_node* %inner_decl.02213, i64 0, i32 0, i32 2
  %141 = bitcast i32* %value690 to %union.tree_node**
  %142 = load %union.tree_node** %141, align 8, !tbaa !0
  %cond2182 = icmp eq %union.tree_node* %142, null
  br i1 %cond2182, label %if.end723, label %land.rhs679

if.then710:                                       ; preds = %land.rhs679
  br label %if.end723

if.else712:                                       ; preds = %land.rhs679
  %cmp717 = icmp eq i32 %bf.clear683, 43
  %.2167 = select i1 %cmp717, i32 4, i32 0
  br label %if.end723

if.end723:                                        ; preds = %land.rhs679, %if.then672, %while.body688, %if.else712, %if.then710
  %attr_flags.0 = phi i32 [ 2, %if.then710 ], [ %.2167, %if.else712 ], [ 1, %while.body688 ], [ 1, %if.then672 ], [ 1, %land.rhs679 ]
  %call724 = call %union.tree_node* @chainon(%union.tree_node* %returned_attrs.02234, %union.tree_node* %137) #8
  %call725 = call %union.tree_node* @decl_attributes(%union.tree_node** %type, %union.tree_node* %call724, i32 %attr_flags.0) #8
  br label %while.cond641.backedge

if.then733:                                       ; preds = %if.end665
  %operands735 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 2
  %arrayidx736 = getelementptr inbounds i32* %operands735, i64 2
  %143 = bitcast i32* %arrayidx736 to %union.tree_node**
  %144 = load %union.tree_node** %143, align 8, !tbaa !0
  %145 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %call737 = call %union.tree_node* @signed_type(%union.tree_node* %145) #8
  %type739 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 0, i32 1
  %146 = load %union.tree_node** %type739, align 8, !tbaa !0
  %bf.load741 = load i32* %132, align 8
  %bf.lshr742 = lshr i32 %bf.load741, 18
  %bf.clear743 = and i32 %bf.lshr742, 1
  %arrayidx746 = bitcast i32* %operands735 to %union.tree_node**
  %147 = load %union.tree_node** %arrayidx746, align 8, !tbaa !0
  %148 = load %union.tree_node** %type, align 8, !tbaa !0
  %code748 = getelementptr inbounds %union.tree_node* %148, i64 0, i32 0, i32 0, i32 2
  %149 = bitcast [4 x i8]* %code748 to i32*
  %bf.load749 = load i32* %149, align 8
  %bf.clear750 = and i32 %bf.load749, 255
  %cmp751 = icmp eq i32 %bf.clear750, 5
  br i1 %cmp751, label %if.then753, label %if.end754

if.then753:                                       ; preds = %if.then733
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str295, i64 0, i64 0), i8* %.name.0) #8
  %150 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  store %union.tree_node* %150, %union.tree_node** %type, align 8, !tbaa !0
  %code756.phi.trans.insert = getelementptr inbounds %union.tree_node* %150, i64 0, i32 0, i32 0, i32 2
  %.phi.trans.insert = bitcast [4 x i8]* %code756.phi.trans.insert to i32*
  %bf.load757.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end754

if.end754:                                        ; preds = %if.then753, %if.then733
  %bf.load757 = phi i32 [ %bf.load757.pre, %if.then753 ], [ %bf.load749, %if.then733 ]
  %151 = phi %union.tree_node* [ %150, %if.then753 ], [ %148, %if.then733 ]
  %bf.clear758 = and i32 %bf.load757, 255
  %cmp759 = icmp eq i32 %bf.clear758, 23
  br i1 %cmp759, label %if.then761, label %if.end754.if.end762_crit_edge

if.end754.if.end762_crit_edge:                    ; preds = %if.end754
  %.pre2337 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  br label %if.end762

if.then761:                                       ; preds = %if.end754
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str296, i64 0, i64 0), i8* %.name.0) #8
  %152 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  store %union.tree_node* %152, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end762

if.end762:                                        ; preds = %if.end754.if.end762_crit_edge, %if.then761
  %153 = phi %union.tree_node* [ %152, %if.then761 ], [ %.pre2337, %if.end754.if.end762_crit_edge ]
  %154 = phi %union.tree_node* [ %152, %if.then761 ], [ %151, %if.end754.if.end762_crit_edge ]
  %cmp763 = icmp eq %union.tree_node* %144, %153
  br i1 %cmp763, label %if.then765, label %if.end766

if.then765:                                       ; preds = %if.end762
  store %union.tree_node* %144, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end766

if.end766:                                        ; preds = %if.then765, %if.end762
  %155 = phi %union.tree_node* [ %144, %if.then765 ], [ %154, %if.end762 ]
  %cmp767 = icmp eq %union.tree_node* %155, %153
  br i1 %cmp767, label %while.cond641.backedge, label %if.end770

if.end770:                                        ; preds = %if.end766
  %tobool771 = icmp eq %union.tree_node* %144, null
  br i1 %tobool771, label %if.else909, label %while.cond773

while.cond773:                                    ; preds = %if.end770, %land.rhs800
  %size.0 = phi %union.tree_node* [ %157, %land.rhs800 ], [ %144, %if.end770 ]
  %code775 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 2
  %156 = bitcast [4 x i8]* %code775 to i32*
  %bf.load776 = load i32* %156, align 8
  %bf.clear777 = and i32 %bf.load776, 255
  %bf.clear777.off = add i32 %bf.clear777, -114
  %switch2183 = icmp ult i32 %bf.clear777.off, 3
  br i1 %switch2183, label %land.lhs.true794, label %while.end816

land.lhs.true794:                                 ; preds = %while.cond773
  %operands796 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 2
  %arrayidx797 = bitcast i32* %operands796 to %union.tree_node**
  %157 = load %union.tree_node** %arrayidx797, align 8, !tbaa !0
  %cmp798 = icmp eq %union.tree_node* %157, %153
  br i1 %cmp798, label %while.end816, label %land.rhs800

land.rhs800:                                      ; preds = %land.lhs.true794
  %type802 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 1
  %158 = load %union.tree_node** %type802, align 8, !tbaa !0
  %type807 = getelementptr inbounds %union.tree_node* %157, i64 0, i32 0, i32 0, i32 1
  %159 = load %union.tree_node** %type807, align 8, !tbaa !0
  %cmp808 = icmp eq %union.tree_node* %158, %159
  br i1 %cmp808, label %while.cond773, label %while.end816

while.end816:                                     ; preds = %land.lhs.true794, %while.cond773, %land.rhs800
  %type818 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 1
  %160 = load %union.tree_node** %type818, align 8, !tbaa !0
  %code820 = getelementptr inbounds %union.tree_node* %160, i64 0, i32 0, i32 0, i32 2
  %161 = bitcast [4 x i8]* %code820 to i32*
  %bf.load821 = load i32* %161, align 8
  %bf.clear822 = and i32 %bf.load821, 255
  switch i32 %bf.clear822, label %if.then852 [
    i32 6, label %if.end853
    i32 10, label %if.end853
    i32 11, label %if.end853
    i32 12, label %if.end853
  ]

if.then852:                                       ; preds = %while.end816
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str297, i64 0, i64 0), i8* %.name.0) #8
  %162 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !0
  br label %if.end853

if.end853:                                        ; preds = %while.end816, %while.end816, %while.end816, %while.end816, %if.then852
  %size.1 = phi %union.tree_node* [ %size.0, %while.end816 ], [ %162, %if.then852 ], [ %size.0, %while.end816 ], [ %size.0, %while.end816 ], [ %size.0, %while.end816 ]
  %163 = load i32* @pedantic, align 4, !tbaa !3
  %tobool854 = icmp eq i32 %163, 0
  br i1 %tobool854, label %if.end859, label %land.lhs.true855

land.lhs.true855:                                 ; preds = %if.end853
  %call856 = call i32 @integer_zerop(%union.tree_node* %size.1) #8
  %tobool857 = icmp eq i32 %call856, 0
  br i1 %tobool857, label %if.end859, label %if.then858

if.then858:                                       ; preds = %land.lhs.true855
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([35 x i8]* @.str298, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end859

if.end859:                                        ; preds = %land.lhs.true855, %if.end853, %if.then858
  %code861 = getelementptr inbounds %union.tree_node* %size.1, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast [4 x i8]* %code861 to i32*
  %bf.load862 = load i32* %164, align 8
  %bf.clear863 = and i32 %bf.load862, 255
  %cmp864 = icmp eq i32 %bf.clear863, 25
  br i1 %cmp864, label %if.then866, label %if.else872

if.then866:                                       ; preds = %if.end859
  call void @constant_expression_warning(%union.tree_node* %size.1) #8
  %call867 = call i32 @tree_int_cst_sgn(%union.tree_node* %size.1) #8
  %cmp868 = icmp slt i32 %call867, 0
  br i1 %cmp868, label %if.then870, label %if.end886

if.then870:                                       ; preds = %if.then866
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str299, i64 0, i64 0), i8* %.name.0) #8
  %165 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !0
  br label %if.end886

if.else872:                                       ; preds = %if.end859
  %166 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool873 = icmp eq i32 %166, 0
  %167 = load i32* @pedantic, align 4, !tbaa !3
  %tobool875 = icmp ne i32 %167, 0
  %or.cond1813 = and i1 %tobool873, %tobool875
  br i1 %or.cond1813, label %if.then876, label %if.end886

if.then876:                                       ; preds = %if.else872
  %bf.clear880 = and i32 %bf.load862, 512
  %tobool881 = icmp eq i32 %bf.clear880, 0
  br i1 %tobool881, label %if.else883, label %if.then882

if.then882:                                       ; preds = %if.then876
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([57 x i8]* @.str300, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end886

if.else883:                                       ; preds = %if.then876
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([41 x i8]* @.str301, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end886

if.end886:                                        ; preds = %if.else872, %if.else883, %if.then882, %if.then866, %if.then870
  %size_varies.2 = phi i32 [ %size_varies.12231, %if.then870 ], [ %size_varies.12231, %if.then866 ], [ 1, %if.then882 ], [ 1, %if.else883 ], [ 1, %if.else872 ]
  %size.2 = phi %union.tree_node* [ %165, %if.then870 ], [ %size.1, %if.then866 ], [ %size.1, %if.then882 ], [ %size.1, %if.else883 ], [ %size.1, %if.else872 ]
  %call887 = call i32 @integer_zerop(%union.tree_node* %size.2) #8
  %tobool888 = icmp eq i32 %call887, 0
  br i1 %tobool888, label %if.else891, label %if.then889

if.then889:                                       ; preds = %if.end886
  %168 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %call890 = call %union.tree_node* @build_range_type(%union.tree_node* %168, %union.tree_node* %size.2, %union.tree_node* null) #8
  br label %if.end922

if.else891:                                       ; preds = %if.end886
  %call892 = call %union.tree_node* @convert(%union.tree_node* %call737, %union.tree_node* %size.2) #8
  %169 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !0
  %call893 = call %union.tree_node* @convert(%union.tree_node* %call737, %union.tree_node* %169) #8
  %call894 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %call737, %union.tree_node* %call892, %union.tree_node* %call893) #8
  %call895 = call %union.tree_node* @fold(%union.tree_node* %call894) #8
  %public_flag = getelementptr inbounds %union.tree_node* %call895, i64 0, i32 0, i32 0, i32 2
  %170 = bitcast [4 x i8]* %public_flag to i32*
  %bf.load897 = load i32* %170, align 8
  %bf.clear899 = and i32 %bf.load897, 524288
  %tobool900 = icmp eq i32 %bf.clear899, 0
  br i1 %tobool900, label %if.end902, label %if.then901

if.then901:                                       ; preds = %if.else891
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str302, i64 0, i64 0), i8* %.name.0) #8
  %171 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  store %union.tree_node* %171, %union.tree_node** %type, align 8, !tbaa !0
  br label %while.cond641.backedge

if.end902:                                        ; preds = %if.else891
  %tobool903 = icmp eq i32 %size_varies.2, 0
  br i1 %tobool903, label %if.end906, label %if.then904

if.then904:                                       ; preds = %if.end902
  %call905 = call %union.tree_node* @variable_size(%union.tree_node* %call895) #8
  br label %if.end906

if.end906:                                        ; preds = %if.end902, %if.then904
  %itype.0 = phi %union.tree_node* [ %call905, %if.then904 ], [ %call895, %if.end902 ]
  %call907 = call %union.tree_node* @build_index_type(%union.tree_node* %itype.0) #8
  br label %if.end922

if.else909:                                       ; preds = %if.end770
  br i1 %cmp910, label %if.then912, label %if.end922

if.then912:                                       ; preds = %if.else909
  %172 = load i32* @pedantic, align 4, !tbaa !3
  %tobool913 = icmp eq i32 %172, 0
  %173 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool915 = icmp ne i32 %173, 0
  %or.cond1815 = or i1 %tobool913, %tobool915
  %174 = load i32* @in_system_header, align 4, !tbaa !3
  %tobool917 = icmp ne i32 %174, 0
  %or.cond1817 = or i1 %or.cond1815, %tobool917
  br i1 %or.cond1817, label %if.end919, label %if.then918

if.then918:                                       ; preds = %if.then912
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([48 x i8]* @.str303, i64 0, i64 0)) #8
  br label %if.end919

if.end919:                                        ; preds = %if.then912, %if.then918
  %175 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !0
  %176 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !0
  %call920 = call %union.tree_node* @build_range_type(%union.tree_node* %175, %union.tree_node* %176, %union.tree_node* null) #8
  br label %if.end922

if.end922:                                        ; preds = %if.else909, %if.end919, %if.then889, %if.end906
  %size_varies.3 = phi i32 [ %size_varies.2, %if.then889 ], [ %size_varies.2, %if.end906 ], [ %size_varies.12231, %if.end919 ], [ %size_varies.12231, %if.else909 ]
  %itype.1 = phi %union.tree_node* [ %call890, %if.then889 ], [ %call907, %if.end906 ], [ %call920, %if.end919 ], [ null, %if.else909 ]
  %size.3 = phi %union.tree_node* [ %size.2, %if.then889 ], [ %size.2, %if.end906 ], [ null, %if.end919 ], [ null, %if.else909 ]
  %177 = load i32* @pedantic, align 4, !tbaa !3
  %tobool923 = icmp eq i32 %177, 0
  br i1 %tobool923, label %if.end930, label %land.lhs.true924

land.lhs.true924:                                 ; preds = %if.end922
  %178 = load %union.tree_node** %type, align 8, !tbaa !0
  %size926 = getelementptr inbounds %union.tree_node* %178, i64 0, i32 0, i32 2
  %179 = bitcast i32* %size926 to %union.tree_node**
  %180 = load %union.tree_node** %179, align 8, !tbaa !0
  %cmp927 = icmp eq %union.tree_node* %180, null
  br i1 %cmp927, label %if.then929, label %if.end930

if.then929:                                       ; preds = %land.lhs.true924
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str304, i64 0, i64 0)) #8
  br label %if.end930

if.end930:                                        ; preds = %if.end922, %land.lhs.true924, %if.then929
  %181 = load %union.tree_node** %type, align 8, !tbaa !0
  %call931 = call %union.tree_node* @build_array_type(%union.tree_node* %181, %union.tree_node* %itype.1) #8
  store %union.tree_node* %call931, %union.tree_node** %type, align 8, !tbaa !0
  %tobool932 = icmp eq i32 %type_quals.02235, 0
  br i1 %tobool932, label %if.end935, label %if.then933

if.then933:                                       ; preds = %if.end930
  %call934 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call931, i32 %type_quals.02235) #8
  store %union.tree_node* %call934, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end935

if.end935:                                        ; preds = %if.end930, %if.then933
  %182 = phi %union.tree_node* [ %call931, %if.end930 ], [ %call934, %if.then933 ]
  %tobool936 = icmp eq i32 %size_varies.3, 0
  br i1 %tobool936, label %if.end942, label %if.then937

if.then937:                                       ; preds = %if.end935
  %type938 = bitcast %union.tree_node* %182 to %struct.tree_type*
  %lang_flag_1939 = getelementptr inbounds %struct.tree_type* %type938, i64 0, i32 6
  %183 = bitcast [4 x i8]* %lang_flag_1939 to i32*
  %bf.load940 = load i32* %183, align 4
  %bf.set = or i32 %bf.load940, 33554432
  store i32 %bf.set, i32* %183, align 4
  br label %if.end942

if.end942:                                        ; preds = %if.end935, %if.then937
  %tobool943 = icmp eq %union.tree_node* %size.3, null
  br i1 %tobool943, label %if.end951, label %land.lhs.true944

land.lhs.true944:                                 ; preds = %if.end942
  %call945 = call i32 @integer_zerop(%union.tree_node* %size.3) #8
  %tobool946 = icmp eq i32 %call945, 0
  br i1 %tobool946, label %if.end951, label %if.then947

if.then947:                                       ; preds = %land.lhs.true944
  %184 = load %union.tree_node** %type, align 8, !tbaa !0
  call void @layout_type(%union.tree_node* %184) #8
  %185 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !tbaa !0
  %186 = load %union.tree_node** %type, align 8, !tbaa !0
  %size949 = getelementptr inbounds %union.tree_node* %186, i64 0, i32 0, i32 2
  %187 = bitcast i32* %size949 to %union.tree_node**
  store %union.tree_node* %185, %union.tree_node** %187, align 8, !tbaa !0
  %188 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !0
  %189 = load %union.tree_node** %type, align 8, !tbaa !0
  %190 = getelementptr inbounds %union.tree_node* %189, i64 0, i32 0, i32 4
  store %union.tree_node* %188, %union.tree_node** %190, align 8, !tbaa !0
  br label %if.end951

if.end951:                                        ; preds = %land.lhs.true944, %if.end942, %if.then947
  br i1 %cmp952, label %while.cond641.backedge, label %land.lhs.true954

land.lhs.true954:                                 ; preds = %if.end951
  %cmp955 = icmp eq %union.tree_node* %146, null
  %tobool958 = icmp eq i32 %bf.clear743, 0
  %or.cond2169 = and i1 %cmp955, %tobool958
  br i1 %or.cond2169, label %while.cond641.backedge, label %if.then959

if.then959:                                       ; preds = %land.lhs.true954
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str294, i64 0, i64 0)) #8
  br label %while.cond641.backedge

if.then968:                                       ; preds = %if.end665
  %191 = load %union.tree_node** %type, align 8, !tbaa !0
  %192 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp969 = icmp eq %union.tree_node* %191, %192
  br i1 %cmp969, label %while.cond641.backedge, label %if.end972

if.end972:                                        ; preds = %if.then968
  %code974 = getelementptr inbounds %union.tree_node* %191, i64 0, i32 0, i32 0, i32 2
  %193 = bitcast [4 x i8]* %code974 to i32*
  %bf.load975 = load i32* %193, align 8
  %bf.clear976 = and i32 %bf.load975, 255
  %cmp977 = icmp eq i32 %bf.clear976, 23
  br i1 %cmp977, label %if.then979, label %if.end980

if.then979:                                       ; preds = %if.end972
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str305, i64 0, i64 0), i8* %.name.0) #8
  %194 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  store %union.tree_node* %194, %union.tree_node** %type, align 8, !tbaa !0
  %code982.phi.trans.insert = getelementptr inbounds %union.tree_node* %194, i64 0, i32 0, i32 0, i32 2
  %.phi.trans.insert2326 = bitcast [4 x i8]* %code982.phi.trans.insert to i32*
  %bf.load983.pre = load i32* %.phi.trans.insert2326, align 8
  br label %if.end980

if.end980:                                        ; preds = %if.then979, %if.end972
  %bf.load983 = phi i32 [ %bf.load983.pre, %if.then979 ], [ %bf.load975, %if.end972 ]
  %195 = phi %union.tree_node* [ %194, %if.then979 ], [ %191, %if.end972 ]
  %bf.clear984 = and i32 %bf.load983, 255
  %cmp985 = icmp eq i32 %bf.clear984, 18
  br i1 %cmp985, label %if.then987, label %if.end988

if.then987:                                       ; preds = %if.end980
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str306, i64 0, i64 0), i8* %.name.0) #8
  %196 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  store %union.tree_node* %196, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end988

if.end988:                                        ; preds = %if.end980, %if.then987
  %197 = phi %union.tree_node* [ %196, %if.then987 ], [ %195, %if.end980 ]
  %198 = load i32* @flag_traditional, align 4, !tbaa !3
  %tobool989 = icmp eq i32 %198, 0
  br i1 %tobool989, label %if.end996, label %land.lhs.true990

land.lhs.true990:                                 ; preds = %if.end988
  %199 = getelementptr inbounds %union.tree_node* %197, i64 0, i32 0, i32 15
  %200 = load %union.tree_node** %199, align 8, !tbaa !0
  %201 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !0
  %cmp993 = icmp eq %union.tree_node* %200, %201
  br i1 %cmp993, label %if.then995, label %if.end996

if.then995:                                       ; preds = %land.lhs.true990
  %202 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !0
  store %union.tree_node* %202, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end996

if.end996:                                        ; preds = %if.end988, %if.then995, %land.lhs.true990
  %operands998 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 2
  %arrayidx999 = getelementptr inbounds i32* %operands998, i64 2
  %203 = bitcast i32* %arrayidx999 to %union.tree_node**
  %204 = load %union.tree_node** %203, align 8, !tbaa !0
  br i1 %cmp1, label %land.rhs1001, label %land.end1011

land.rhs1001:                                     ; preds = %if.end996
  %arrayidx1004 = bitcast i32* %operands998 to %union.tree_node**
  %205 = load %union.tree_node** %arrayidx1004, align 8, !tbaa !0
  %code1006 = getelementptr inbounds %union.tree_node* %205, i64 0, i32 0, i32 0, i32 2
  %206 = bitcast [4 x i8]* %code1006 to i32*
  %bf.load1007 = load i32* %206, align 8
  %bf.clear1008 = and i32 %bf.load1007, 255
  %cmp1009 = icmp eq i32 %bf.clear1008, 1
  br label %land.end1011

land.end1011:                                     ; preds = %land.rhs1001, %if.end996
  %207 = phi i1 [ false, %if.end996 ], [ %cmp1009, %land.rhs1001 ]
  %chain.i = getelementptr inbounds %union.tree_node* %204, i64 0, i32 0, i32 0, i32 0
  %208 = load %union.tree_node** %chain.i, align 8, !tbaa !0
  %purpose.i = getelementptr inbounds %union.tree_node* %204, i64 0, i32 0, i32 1
  %209 = load i8** %purpose.i, align 8
  %210 = bitcast i8* %209 to %union.tree_node*
  store %union.tree_node* %210, %union.tree_node** @last_function_parms, align 8, !tbaa !0
  %value.i = getelementptr inbounds %union.tree_node* %204, i64 0, i32 0, i32 2
  %211 = bitcast i32* %value.i to %union.tree_node**
  %212 = load %union.tree_node** %211, align 8, !tbaa !0
  store %union.tree_node* %212, %union.tree_node** @last_function_parm_tags, align 8, !tbaa !0
  %213 = load i32* @warn_strict_prototypes, align 4, !tbaa !3
  %tobool.i2184 = icmp ne i32 %213, 0
  %cmp.i2185 = icmp eq %union.tree_node* %208, null
  %or.cond.i = and i1 %tobool.i2184, %cmp.i2185
  br i1 %or.cond.i, label %land.lhs.true2.i, label %if.end.i

land.lhs.true2.i:                                 ; preds = %land.end1011
  %land.ext1012 = zext i1 %207 to i32
  %214 = load i32* @in_system_header, align 4, !tbaa !3
  %215 = or i32 %214, %land.ext1012
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str228, i64 0, i64 0)) #8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.lhs.true2.i, %land.end1011
  br i1 %cmp.i2185, label %for.cond.preheader.i, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %if.end.i
  %value9.i = getelementptr inbounds %union.tree_node* %208, i64 0, i32 0, i32 2
  %217 = bitcast i32* %value9.i to %union.tree_node**
  %218 = load %union.tree_node** %217, align 8, !tbaa !0
  %code.i = getelementptr inbounds %union.tree_node* %218, i64 0, i32 0, i32 0, i32 2
  %219 = bitcast [4 x i8]* %code.i to i32*
  %bf.load.i = load i32* %219, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp11.i = icmp eq i32 %bf.clear.i, 1
  br i1 %cmp11.i, label %if.then12.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %land.lhs.true7.i, %if.end.i
  %typelt.0.ph.i = phi %union.tree_node* [ null, %if.end.i ], [ %208, %land.lhs.true7.i ]
  %parm.071.i = load %union.tree_node** @last_function_parms, align 8
  %tobool1672.i = icmp eq %union.tree_node* %parm.071.i, null
  br i1 %tobool1672.i, label %grokparms.exit, label %for.body.i

if.then12.i:                                      ; preds = %land.lhs.true7.i
  br i1 %207, label %if.end15.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.then12.i
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([56 x i8]* @.str321, i64 0, i64 0)) #8
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then12.i, %if.then14.i
  store %union.tree_node* %208, %union.tree_node** @last_function_parms, align 8, !tbaa !0
  br label %grokparms.exit

for.body.i:                                       ; preds = %for.cond.preheader.i, %for.inc.i
  %parm.074.i = phi %union.tree_node* [ %parm.0.i, %for.inc.i ], [ %parm.071.i, %for.cond.preheader.i ]
  %typelt.073.i = phi %union.tree_node* [ %typelt.1.i, %for.inc.i ], [ %typelt.0.ph.i, %for.cond.preheader.i ]
  %code18.i = getelementptr inbounds %union.tree_node* %parm.074.i, i64 0, i32 0, i32 0, i32 2
  %220 = bitcast [4 x i8]* %code18.i to i32*
  %bf.load19.i = load i32* %220, align 8
  %bf.clear20.i = and i32 %bf.load19.i, 255
  %cmp21.i = icmp eq i32 %bf.clear20.i, 35
  br i1 %cmp21.i, label %if.then22.i, label %for.inc.i

if.then22.i:                                      ; preds = %for.body.i
  %value24.i = getelementptr inbounds %union.tree_node* %typelt.073.i, i64 0, i32 0, i32 2
  %221 = bitcast i32* %value24.i to %union.tree_node**
  %222 = load %union.tree_node** %221, align 8, !tbaa !0
  %223 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp25.i = icmp eq %union.tree_node* %222, %223
  br i1 %cmp25.i, label %for.inc.i, label %if.end27.i

if.end27.i:                                       ; preds = %if.then22.i
  %size.i = getelementptr inbounds %union.tree_node* %222, i64 0, i32 0, i32 2
  %224 = bitcast i32* %size.i to %union.tree_node**
  %225 = load %union.tree_node** %224, align 8, !tbaa !0
  %cmp29.i = icmp eq %union.tree_node* %225, null
  br i1 %cmp29.i, label %if.then30.i, label %if.end46.i

if.then30.i:                                      ; preds = %if.end27.i
  br i1 %207, label %land.lhs.true32.i, label %if.end38.i

land.lhs.true32.i:                                ; preds = %if.then30.i
  %name.i = getelementptr inbounds %union.tree_node* %parm.074.i, i64 0, i32 0, i32 8
  %226 = load %union.tree_node** %name.i, align 8, !tbaa !0
  %cmp33.i = icmp eq %union.tree_node* %226, null
  br i1 %cmp33.i, label %if.end38.thread70.i, label %if.end38.thread.i

if.end38.thread70.i:                              ; preds = %land.lhs.true32.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str322, i64 0, i64 0)) #8
  br label %if.then40.i

if.end38.thread.i:                                ; preds = %land.lhs.true32.i
  %id.i = getelementptr inbounds %union.tree_node* %226, i64 0, i32 0, i32 1
  %227 = getelementptr inbounds i8** %id.i, i64 1
  %228 = load i8** %227, align 8, !tbaa !0
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str245, i64 0, i64 0), i8* %228) #8
  br label %if.then40.i

if.end38.i:                                       ; preds = %if.then30.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str322, i64 0, i64 0)) #8
  br label %if.end46.i

if.then40.i:                                      ; preds = %if.end38.thread.i, %if.end38.thread70.i
  %229 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  store %union.tree_node* %229, %union.tree_node** %221, align 8, !tbaa !0
  %230 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %type44.i = getelementptr inbounds %union.tree_node* %parm.074.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %230, %union.tree_node** %type44.i, align 8, !tbaa !0
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.then40.i, %if.end38.i, %if.end27.i
  %chain48.i = getelementptr inbounds %union.tree_node* %typelt.073.i, i64 0, i32 0, i32 0, i32 0
  %231 = load %union.tree_node** %chain48.i, align 8, !tbaa !0
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end46.i, %if.then22.i, %for.body.i
  %typelt.1.i = phi %union.tree_node* [ %typelt.073.i, %if.then22.i ], [ %231, %if.end46.i ], [ %typelt.073.i, %for.body.i ]
  %chain51.i = getelementptr inbounds %union.tree_node* %parm.074.i, i64 0, i32 0, i32 0, i32 0
  %parm.0.i = load %union.tree_node** %chain51.i, align 8
  %tobool16.i = icmp eq %union.tree_node* %parm.0.i, null
  br i1 %tobool16.i, label %grokparms.exit, label %for.body.i

grokparms.exit:                                   ; preds = %for.inc.i, %for.cond.preheader.i, %if.end15.i
  %retval.0.i = phi %union.tree_node* [ null, %if.end15.i ], [ %208, %for.cond.preheader.i ], [ %208, %for.inc.i ]
  %tobool1014 = icmp eq i32 %type_quals.02235, 0
  %.pre2338 = load %union.tree_node** %type, align 8, !tbaa !0
  br i1 %tobool1014, label %if.end1043, label %if.then1015

if.then1015:                                      ; preds = %grokparms.exit
  %code1017 = getelementptr inbounds %union.tree_node* %.pre2338, i64 0, i32 0, i32 0, i32 2
  %232 = bitcast [4 x i8]* %code1017 to i32*
  %bf.load1018 = load i32* %232, align 8
  %bf.clear1019 = and i32 %bf.load1018, 255
  %cmp1020 = icmp eq i32 %bf.clear1019, 5
  %233 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1023 = icmp ne i32 %233, 0
  %or.cond1819 = and i1 %cmp1020, %tobool1023
  %or.cond1819.not = xor i1 %or.cond1819, true
  %234 = load i32* @in_system_header, align 4, !tbaa !3
  %tobool1025 = icmp ne i32 %234, 0
  %or.cond1821 = or i1 %tobool1025, %or.cond1819.not
  br i1 %or.cond1821, label %if.else1027, label %if.then1026

if.then1026:                                      ; preds = %if.then1015
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([50 x i8]* @.str307, i64 0, i64 0)) #8
  br label %if.end1041

if.else1027:                                      ; preds = %if.then1015
  %235 = load i32* @extra_warnings, align 4, !tbaa !3
  %tobool1028 = icmp eq i32 %235, 0
  br i1 %tobool1028, label %if.end1041, label %land.lhs.true1029

land.lhs.true1029:                                ; preds = %if.else1027
  %cmp1037 = icmp eq i32 %type_quals.02235, 2
  %or.cond2170 = and i1 %cmp1020, %cmp1037
  br i1 %or.cond2170, label %if.end1041, label %if.then1039

if.then1039:                                      ; preds = %land.lhs.true1029
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([48 x i8]* @.str308, i64 0, i64 0)) #8
  br label %if.end1041

if.end1041:                                       ; preds = %land.lhs.true1029, %if.else1027, %if.then1039, %if.then1026
  %236 = load %union.tree_node** %type, align 8, !tbaa !0
  %call1042 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %236, i32 %type_quals.02235) #8
  store %union.tree_node* %call1042, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1043

if.end1043:                                       ; preds = %grokparms.exit, %if.end1041
  %237 = phi %union.tree_node* [ %call1042, %if.end1041 ], [ %.pre2338, %grokparms.exit ]
  %call1044 = call %union.tree_node* @build_function_type(%union.tree_node* %237, %union.tree_node* %retval.0.i) #8
  store %union.tree_node* %call1044, %union.tree_node** %type, align 8, !tbaa !0
  %arrayidx1047 = bitcast i32* %operands998 to %union.tree_node**
  %238 = load %union.tree_node** %arrayidx1047, align 8, !tbaa !0
  %link.02208 = load %union.tree_node** @last_function_parm_tags, align 8
  %tobool10492209 = icmp eq %union.tree_node* %link.02208, null
  br i1 %tobool10492209, label %while.cond641.backedge, label %for.body1050

for.body1050:                                     ; preds = %if.end1043, %for.body1050.for.body1050_crit_edge
  %239 = phi %union.tree_node* [ %.pre2339, %for.body1050.for.body1050_crit_edge ], [ %call1044, %if.end1043 ]
  %link.02210 = phi %union.tree_node* [ %link.0, %for.body1050.for.body1050_crit_edge ], [ %link.02208, %if.end1043 ]
  %value1052 = getelementptr inbounds %union.tree_node* %link.02210, i64 0, i32 0, i32 2
  %240 = bitcast i32* %value1052 to %union.tree_node**
  %241 = load %union.tree_node** %240, align 8, !tbaa !0
  %context = getelementptr inbounds %union.tree_node* %241, i64 0, i32 0, i32 17
  %.c = bitcast %union.tree_node* %239 to %struct.rtx_def*
  store %struct.rtx_def* %.c, %struct.rtx_def** %context, align 8, !tbaa !0
  %chain1056 = getelementptr inbounds %union.tree_node* %link.02210, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain1056, align 8
  %tobool1049 = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool1049, label %while.cond641.backedge, label %for.body1050.for.body1050_crit_edge

for.body1050.for.body1050_crit_edge:              ; preds = %for.body1050
  %.pre2339 = load %union.tree_node** %type, align 8, !tbaa !0
  br label %for.body1050

if.then1065:                                      ; preds = %if.end665
  %242 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1066 = icmp eq i32 %242, 0
  br i1 %tobool1066, label %if.end1077, label %land.lhs.true1067

land.lhs.true1067:                                ; preds = %if.then1065
  %243 = load %union.tree_node** %type, align 8, !tbaa !0
  %code1069 = getelementptr inbounds %union.tree_node* %243, i64 0, i32 0, i32 0, i32 2
  %244 = bitcast [4 x i8]* %code1069 to i32*
  %bf.load1070 = load i32* %244, align 8
  %bf.clear1071 = and i32 %bf.load1070, 255
  %cmp1072 = icmp ne i32 %bf.clear1071, 23
  %tobool1075 = icmp eq i32 %type_quals.02235, 0
  %or.cond2171 = or i1 %cmp1072, %tobool1075
  br i1 %or.cond2171, label %if.end1077, label %if.then1076

if.then1076:                                      ; preds = %land.lhs.true1067
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #8
  br label %if.end1077

if.end1077:                                       ; preds = %land.lhs.true1067, %if.then1065, %if.then1076
  %tobool1078 = icmp eq i32 %type_quals.02235, 0
  %.pre2340 = load %union.tree_node** %type, align 8, !tbaa !0
  br i1 %tobool1078, label %if.end1081, label %if.then1079

if.then1079:                                      ; preds = %if.end1077
  %call1080 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %.pre2340, i32 %type_quals.02235) #8
  store %union.tree_node* %call1080, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1081

if.end1081:                                       ; preds = %if.end1077, %if.then1079
  %245 = phi %union.tree_node* [ %call1080, %if.then1079 ], [ %.pre2340, %if.end1077 ]
  %call1082 = call %union.tree_node* @build_pointer_type(%union.tree_node* %245) #8
  store %union.tree_node* %call1082, %union.tree_node** %type, align 8, !tbaa !0
  %type1084 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 0, i32 1
  %246 = load %union.tree_node** %type1084, align 8, !tbaa !0
  %tobool1085 = icmp eq %union.tree_node* %246, null
  br i1 %tobool1085, label %if.end1165, label %for.body1091

for.body1091:                                     ; preds = %if.end1081, %for.inc1132
  %erred.02203 = phi i32 [ %erred.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %typemodlist.02202 = phi %union.tree_node* [ %252, %for.inc1132 ], [ %246, %if.end1081 ]
  %constp.02201 = phi i32 [ %constp.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %restrictp.02200 = phi i32 [ %restrictp.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %volatilep.02199 = phi i32 [ %volatilep.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %value1093 = getelementptr inbounds %union.tree_node* %typemodlist.02202, i64 0, i32 0, i32 2
  %247 = bitcast i32* %value1093 to %union.tree_node**
  %248 = load %union.tree_node** %247, align 8, !tbaa !0
  %lang_flag_01095 = getelementptr inbounds %union.tree_node* %248, i64 0, i32 0, i32 0, i32 2
  %249 = bitcast [4 x i8]* %lang_flag_01095 to i32*
  %bf.load1096 = load i32* %249, align 8
  %bf.clear1098 = and i32 %bf.load1096, 16777216
  %tobool1099 = icmp eq i32 %bf.clear1098, 0
  br i1 %tobool1099, label %if.else1129, label %if.then1100

if.then1100:                                      ; preds = %for.body1091
  %node1101 = getelementptr inbounds %union.tree_node* %248, i64 0, i32 0, i32 1
  %250 = bitcast i8** %node1101 to %struct.cpp_hashnode*
  %rid_code1102 = getelementptr inbounds %struct.cpp_hashnode* %250, i64 0, i32 3
  %251 = load i8* %rid_code1102, align 1, !tbaa !1
  switch i8 %251, label %if.else1124 [
    i8 3, label %if.then1106
    i8 9, label %if.then1114
    i8 12, label %if.then1122
  ]

if.then1106:                                      ; preds = %if.then1100
  %inc1107 = add nsw i32 %constp.02201, 1
  br label %for.inc1132

if.then1114:                                      ; preds = %if.then1100
  %inc1115 = add nsw i32 %volatilep.02199, 1
  br label %for.inc1132

if.then1122:                                      ; preds = %if.then1100
  %inc1123 = add nsw i32 %restrictp.02200, 1
  br label %for.inc1132

if.else1124:                                      ; preds = %if.then1100
  %inc1125 = add nsw i32 %erred.02203, 1
  br label %for.inc1132

if.else1129:                                      ; preds = %for.body1091
  %inc1130 = add nsw i32 %erred.02203, 1
  br label %for.inc1132

for.inc1132:                                      ; preds = %if.else1129, %if.then1114, %if.else1124, %if.then1122, %if.then1106
  %volatilep.1 = phi i32 [ %volatilep.02199, %if.then1106 ], [ %inc1115, %if.then1114 ], [ %volatilep.02199, %if.then1122 ], [ %volatilep.02199, %if.else1124 ], [ %volatilep.02199, %if.else1129 ]
  %restrictp.1 = phi i32 [ %restrictp.02200, %if.then1106 ], [ %restrictp.02200, %if.then1114 ], [ %inc1123, %if.then1122 ], [ %restrictp.02200, %if.else1124 ], [ %restrictp.02200, %if.else1129 ]
  %constp.1 = phi i32 [ %inc1107, %if.then1106 ], [ %constp.02201, %if.then1114 ], [ %constp.02201, %if.then1122 ], [ %constp.02201, %if.else1124 ], [ %constp.02201, %if.else1129 ]
  %erred.1 = phi i32 [ %erred.02203, %if.then1106 ], [ %erred.02203, %if.then1114 ], [ %erred.02203, %if.then1122 ], [ %inc1125, %if.else1124 ], [ %inc1130, %if.else1129 ]
  %chain1134 = getelementptr inbounds %union.tree_node* %typemodlist.02202, i64 0, i32 0, i32 0, i32 0
  %252 = load %union.tree_node** %chain1134, align 8, !tbaa !0
  %tobool1090 = icmp eq %union.tree_node* %252, null
  br i1 %tobool1090, label %for.end1135, label %for.body1091

for.end1135:                                      ; preds = %for.inc1132
  %tobool1136 = icmp eq i32 %erred.1, 0
  br i1 %tobool1136, label %if.end1138, label %if.then1137

if.then1137:                                      ; preds = %for.end1135
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str310, i64 0, i64 0)) #8
  br label %if.end1138

if.end1138:                                       ; preds = %for.end1135, %if.then1137
  %cmp1139 = icmp slt i32 %constp.1, 2
  %253 = load i32* @flag_isoc99, align 4, !tbaa !3
  %tobool1142 = icmp ne i32 %253, 0
  %or.cond1823 = or i1 %cmp1139, %tobool1142
  br i1 %or.cond1823, label %if.end1144, label %if.then1143

if.then1143:                                      ; preds = %if.end1138
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([18 x i8]* @.str280, i64 0, i64 0)) #8
  %.pre2328 = load i32* @flag_isoc99, align 4, !tbaa !3
  br label %if.end1144

if.end1144:                                       ; preds = %if.end1138, %if.then1143
  %254 = phi i32 [ %253, %if.end1138 ], [ %.pre2328, %if.then1143 ]
  %cmp1145 = icmp slt i32 %volatilep.1, 2
  %tobool1148 = icmp ne i32 %254, 0
  %or.cond1825 = or i1 %cmp1145, %tobool1148
  br i1 %or.cond1825, label %if.end1150, label %if.then1149

if.then1149:                                      ; preds = %if.end1144
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str282, i64 0, i64 0)) #8
  %.pre2329 = load i32* @flag_isoc99, align 4, !tbaa !3
  br label %if.end1150

if.end1150:                                       ; preds = %if.end1144, %if.then1149
  %255 = phi i32 [ %254, %if.end1144 ], [ %.pre2329, %if.then1149 ]
  %cmp1151 = icmp slt i32 %restrictp.1, 2
  %tobool1154 = icmp ne i32 %255, 0
  %or.cond1827 = or i1 %cmp1151, %tobool1154
  br i1 %or.cond1827, label %if.end1156, label %if.then1155

if.then1155:                                      ; preds = %if.end1150
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str281, i64 0, i64 0)) #8
  br label %if.end1156

if.end1156:                                       ; preds = %if.end1150, %if.then1155
  %tobool1157 = icmp ne i32 %constp.1, 0
  %cond1158 = zext i1 %tobool1157 to i32
  %tobool1159 = icmp ne i32 %restrictp.1, 0
  %cond1160 = select i1 %tobool1159, i32 4, i32 0
  %tobool1162 = icmp ne i32 %volatilep.1, 0
  %cond1163 = select i1 %tobool1162, i32 2, i32 0
  %or1161 = or i32 %cond1160, %cond1163
  %or1164 = or i32 %or1161, %cond1158
  br label %if.end1165

if.end1165:                                       ; preds = %if.end1081, %if.end1156
  %type_quals.1 = phi i32 [ %or1164, %if.end1156 ], [ 0, %if.end1081 ]
  %operands1167 = getelementptr inbounds %union.tree_node* %declarator.addr.02236, i64 0, i32 0, i32 2
  %arrayidx1168 = bitcast i32* %operands1167 to %union.tree_node**
  %256 = load %union.tree_node** %arrayidx1168, align 8, !tbaa !0
  br label %while.cond641.backedge

if.else1169:                                      ; preds = %if.end665
  call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str185, i64 0, i64 0), i32 4868, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.grokdeclarator, i64 0, i64 0)) #11
  unreachable

while.end1174:                                    ; preds = %land.end650, %land.end650.thread
  %257 = phi %union.tree_node* [ %131, %land.end650.thread ], [ %133, %land.end650 ]
  %declarator.addr.02228 = phi %union.tree_node* [ null, %land.end650.thread ], [ %declarator.addr.02236, %land.end650 ]
  %type_quals.02225 = phi i32 [ %type_quals.0.lcssa, %land.end650.thread ], [ %type_quals.02235, %land.end650 ]
  %returned_attrs.02222 = phi %union.tree_node* [ %returned_attrs.0.lcssa, %land.end650.thread ], [ %returned_attrs.02234, %land.end650 ]
  %array_ptr_quals.02219 = phi %union.tree_node* [ %array_ptr_quals.0.lcssa, %land.end650.thread ], [ %array_ptr_quals.02232, %land.end650 ]
  %size_varies.12216 = phi i32 [ %size_varies.1.lcssa, %land.end650.thread ], [ %size_varies.12231, %land.end650 ]
  %code1176 = getelementptr inbounds %union.tree_node* %257, i64 0, i32 0, i32 0, i32 2
  %258 = bitcast [4 x i8]* %code1176 to i32*
  %bf.load1177 = load i32* %258, align 8
  %bf.clear1178 = and i32 %bf.load1177, 255
  %cmp1179 = icmp eq i32 %bf.clear1178, 18
  br i1 %cmp1179, label %land.lhs.true1181, label %if.end1196

land.lhs.true1181:                                ; preds = %while.end1174
  %size1183 = getelementptr inbounds %union.tree_node* %257, i64 0, i32 0, i32 2
  %259 = bitcast i32* %size1183 to %union.tree_node**
  %260 = load %union.tree_node** %259, align 8, !tbaa !0
  %cmp1184 = icmp eq %union.tree_node* %260, null
  br i1 %cmp1184, label %if.end1196, label %land.lhs.true1186

land.lhs.true1186:                                ; preds = %land.lhs.true1181
  %public_flag1190 = getelementptr inbounds %union.tree_node* %260, i64 0, i32 0, i32 0, i32 2
  %261 = bitcast [4 x i8]* %public_flag1190 to i32*
  %bf.load1191 = load i32* %261, align 8
  %bf.clear1193 = and i32 %bf.load1191, 524288
  %tobool1194 = icmp eq i32 %bf.clear1193, 0
  br i1 %tobool1194, label %if.end1196, label %if.then1195

if.then1195:                                      ; preds = %land.lhs.true1186
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str302, i64 0, i64 0), i8* %.name.0) #8
  %262 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  store %union.tree_node* %262, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1196

if.end1196:                                       ; preds = %land.lhs.true1186, %land.lhs.true1181, %if.then1195, %while.end1174
  %263 = phi %union.tree_node* [ %257, %land.lhs.true1186 ], [ %257, %land.lhs.true1181 ], [ %262, %if.then1195 ], [ %257, %while.end1174 ]
  %and1197 = and i32 %specbits.5.ph, 64
  %tobool1198 = icmp eq i32 %and1197, 0
  br i1 %tobool1198, label %if.end1238, label %if.then1199

if.then1199:                                      ; preds = %if.end1196
  %264 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1201 = icmp eq i32 %264, 0
  br i1 %tobool1201, label %if.end1212, label %land.lhs.true1202

land.lhs.true1202:                                ; preds = %if.then1199
  %code1204 = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 0, i32 2
  %265 = bitcast [4 x i8]* %code1204 to i32*
  %bf.load1205 = load i32* %265, align 8
  %bf.clear1206 = and i32 %bf.load1205, 255
  %cmp1207 = icmp ne i32 %bf.clear1206, 23
  %tobool1210 = icmp eq i32 %type_quals.02225, 0
  %or.cond2172 = or i1 %cmp1207, %tobool1210
  br i1 %or.cond2172, label %if.end1212, label %if.then1211

if.then1211:                                      ; preds = %land.lhs.true1202
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #8
  br label %if.end1212

if.end1212:                                       ; preds = %land.lhs.true1202, %if.then1199, %if.then1211
  %tobool1213 = icmp eq i32 %type_quals.02225, 0
  %.pre2336 = load %union.tree_node** %type, align 8, !tbaa !0
  br i1 %tobool1213, label %if.end1216, label %if.then1214

if.then1214:                                      ; preds = %if.end1212
  %call1215 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %.pre2336, i32 %type_quals.02225) #8
  store %union.tree_node* %call1215, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1216

if.end1216:                                       ; preds = %if.end1212, %if.then1214
  %266 = phi %union.tree_node* [ %call1215, %if.then1214 ], [ %.pre2336, %if.end1212 ]
  %call1217 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %declarator.addr.02228, %union.tree_node* %266) #8
  store %union.tree_node* %call1217, %union.tree_node** %decl1200, align 8, !tbaa !0
  %and1218 = and i32 %specbits.5.ph, 1024
  %tobool1219 = icmp eq i32 %and1218, 0
  br i1 %tobool1219, label %lor.lhs.false1220, label %if.then1230

lor.lhs.false1220:                                ; preds = %if.end1216
  %tobool1221 = icmp eq %union.tree_node* %typedef_decl.0.lcssa2361, null
  br i1 %tobool1221, label %if.end1236, label %land.lhs.true1222

land.lhs.true1222:                                ; preds = %lor.lhs.false1220
  %lang_flag_11224 = getelementptr inbounds %union.tree_node* %typedef_decl.0.lcssa2361, i64 0, i32 0, i32 5
  %267 = bitcast [8 x i8]* %lang_flag_11224 to i64*
  %bf.load1225 = load i64* %267, align 8
  %bf.cast1228 = and i64 %bf.load1225, 274877906944
  %tobool1229 = icmp eq i64 %bf.cast1228, 0
  br i1 %tobool1229, label %if.end1236, label %if.then1230

if.then1230:                                      ; preds = %land.lhs.true1222, %if.end1216
  %lang_flag_11232 = getelementptr inbounds %union.tree_node* %call1217, i64 0, i32 0, i32 5
  %268 = bitcast [8 x i8]* %lang_flag_11232 to i64*
  %bf.load1233 = load i64* %268, align 8
  %bf.set1235 = or i64 %bf.load1233, 274877906944
  store i64 %bf.set1235, i64* %268, align 8
  br label %if.end1236

if.end1236:                                       ; preds = %land.lhs.true1222, %lor.lhs.false1220, %if.then1230
  %call1237 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1200, %union.tree_node* %returned_attrs.02222, i32 0) #8
  %269 = load %union.tree_node** %decl1200, align 8, !tbaa !0
  br label %return

if.end1238:                                       ; preds = %if.end1196
  %cmp1239 = icmp eq %union.tree_node* %263, null
  %brmerge2173 = or i1 %cmp1239, %tobool1602363
  br i1 %brmerge2173, label %if.end1274, label %land.lhs.true1244

land.lhs.true1244:                                ; preds = %if.end1238
  %code1246 = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 0, i32 2
  %270 = bitcast [4 x i8]* %code1246 to i32*
  %bf.load1247 = load i32* %270, align 8
  %bf.clear1248 = and i32 %bf.load1247, 255
  %cmp1249 = icmp eq i32 %bf.clear1248, 18
  br i1 %cmp1249, label %land.lhs.true1251, label %if.end1274

land.lhs.true1251:                                ; preds = %land.lhs.true1244
  %values = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 1
  %271 = load i8** %values, align 8
  %cmp1253 = icmp eq i8* %271, null
  br i1 %cmp1253, label %land.lhs.true1255, label %if.end1274

land.lhs.true1255:                                ; preds = %land.lhs.true1251
  %272 = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 15
  %273 = load %union.tree_node** %272, align 8, !tbaa !0
  %274 = getelementptr inbounds %union.tree_node* %.pr2344, i64 0, i32 0, i32 15
  %275 = load %union.tree_node** %274, align 8, !tbaa !0
  %cmp1260 = icmp eq %union.tree_node* %273, %275
  br i1 %cmp1260, label %if.then1262, label %if.end1274

if.then1262:                                      ; preds = %land.lhs.true1255
  %type1264 = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 0, i32 1
  %276 = load %union.tree_node** %type1264, align 8, !tbaa !0
  %call1265 = call %union.tree_node* @build_array_type(%union.tree_node* %276, %union.tree_node* null) #8
  store %union.tree_node* %call1265, %union.tree_node** %type, align 8, !tbaa !0
  %tobool1266 = icmp eq i32 %size_varies.12216, 0
  br i1 %tobool1266, label %if.end1274, label %if.then1267

if.then1267:                                      ; preds = %if.then1262
  %type1268 = bitcast %union.tree_node* %call1265 to %struct.tree_type*
  %lang_flag_11269 = getelementptr inbounds %struct.tree_type* %type1268, i64 0, i32 6
  %277 = bitcast [4 x i8]* %lang_flag_11269 to i32*
  %bf.load1270 = load i32* %277, align 4
  %bf.set1272 = or i32 %bf.load1270, 33554432
  store i32 %bf.set1272, i32* %277, align 4
  br label %if.end1274

if.end1274:                                       ; preds = %if.end1238, %if.then1262, %if.then1267, %land.lhs.true1255, %land.lhs.true1251, %land.lhs.true1244
  %cmp1275 = icmp eq i32 %decl_context.addr.2, 5
  br i1 %cmp1275, label %if.then1277, label %if.end1295

if.then1277:                                      ; preds = %if.end1274
  %278 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1278 = icmp eq i32 %278, 0
  br i1 %tobool1278, label %if.end1289, label %land.lhs.true1279

land.lhs.true1279:                                ; preds = %if.then1277
  %279 = load %union.tree_node** %type, align 8, !tbaa !0
  %code1281 = getelementptr inbounds %union.tree_node* %279, i64 0, i32 0, i32 0, i32 2
  %280 = bitcast [4 x i8]* %code1281 to i32*
  %bf.load1282 = load i32* %280, align 8
  %bf.clear1283 = and i32 %bf.load1282, 255
  %cmp1284 = icmp ne i32 %bf.clear1283, 23
  %tobool1287 = icmp eq i32 %type_quals.02225, 0
  %or.cond2174 = or i1 %cmp1284, %tobool1287
  br i1 %or.cond2174, label %if.end1289, label %if.then1288

if.then1288:                                      ; preds = %land.lhs.true1279
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([47 x i8]* @.str311, i64 0, i64 0)) #8
  br label %if.end1289

if.end1289:                                       ; preds = %land.lhs.true1279, %if.then1277, %if.then1288
  %tobool1290 = icmp eq i32 %type_quals.02225, 0
  br i1 %tobool1290, label %if.end1293, label %if.then1291

if.then1291:                                      ; preds = %if.end1289
  %281 = load %union.tree_node** %type, align 8, !tbaa !0
  %call1292 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %281, i32 %type_quals.02225) #8
  store %union.tree_node* %call1292, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1293

if.end1293:                                       ; preds = %if.end1289, %if.then1291
  %call1294 = call %union.tree_node* @decl_attributes(%union.tree_node** %type, %union.tree_node* %returned_attrs.02222, i32 0) #8
  %282 = load %union.tree_node** %type, align 8, !tbaa !0
  br label %return

if.end1295:                                       ; preds = %if.end1274
  %283 = load %union.tree_node** %type, align 8, !tbaa !0
  %code1297 = getelementptr inbounds %union.tree_node* %283, i64 0, i32 0, i32 0, i32 2
  %284 = bitcast [4 x i8]* %code1297 to i32*
  %bf.load1298 = load i32* %284, align 8
  %bf.clear1299 = and i32 %bf.load1298, 255
  %cmp1300 = icmp ne i32 %bf.clear1299, 5
  %cmp1303 = icmp eq i32 %decl_context.addr.2, 2
  %or.cond2175 = or i1 %cmp1300, %cmp1303
  br i1 %or.cond2175, label %if.end1325, label %land.lhs.true1305

land.lhs.true1305:                                ; preds = %if.end1295
  %cmp1306 = icmp eq i32 %decl_context.addr.2, 3
  br i1 %cmp1306, label %if.then1324, label %land.lhs.true1315

land.lhs.true1315:                                ; preds = %land.lhs.true1305
  %and1316 = and i32 %specbits.5.ph, 16
  %tobool1317 = icmp eq i32 %and1316, 0
  br i1 %tobool1317, label %lor.lhs.false1318, label %if.end1325

lor.lhs.false1318:                                ; preds = %land.lhs.true1315
  %285 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %286 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp1319 = icmp eq %struct.binding_level* %285, %286
  br i1 %cmp1319, label %land.lhs.true1321, label %if.then1324

land.lhs.true1321:                                ; preds = %lor.lhs.false1318
  %and1322 = and i32 %specbits.5.ph, 33
  %tobool1323 = icmp eq i32 %and1322, 0
  br i1 %tobool1323, label %if.end1325, label %if.then1324

if.then1324:                                      ; preds = %land.lhs.true1321, %land.lhs.true1305, %lor.lhs.false1318
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str312, i64 0, i64 0), i8* %.name.0) #8
  %287 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !0
  store %union.tree_node* %287, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1325

if.end1325:                                       ; preds = %if.end1295, %land.lhs.true1321, %land.lhs.true1315, %if.then1324
  %288 = phi %union.tree_node* [ %283, %if.end1295 ], [ %283, %land.lhs.true1321 ], [ %283, %land.lhs.true1315 ], [ %287, %if.then1324 ]
  br i1 %cmp1303, label %if.then1329, label %if.else1456

if.then1329:                                      ; preds = %if.end1325
  %code1331 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 2
  %289 = bitcast [4 x i8]* %code1331 to i32*
  %bf.load1332 = load i32* %289, align 8
  %bf.clear1333 = and i32 %bf.load1332, 255
  switch i32 %bf.clear1333, label %if.else1429 [
    i32 18, label %if.then1336
    i32 23, label %if.then1418
  ]

if.then1336:                                      ; preds = %if.then1329
  %type1338 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 1
  %290 = load %union.tree_node** %type1338, align 8, !tbaa !0
  store %union.tree_node* %290, %union.tree_node** %type, align 8, !tbaa !0
  %tobool1339 = icmp eq i32 %type_quals.02225, 0
  br i1 %tobool1339, label %if.end1342, label %if.then1340

if.then1340:                                      ; preds = %if.then1336
  %call1341 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %290, i32 %type_quals.02225) #8
  store %union.tree_node* %call1341, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1342

if.end1342:                                       ; preds = %if.then1336, %if.then1340
  %291 = phi %union.tree_node* [ %290, %if.then1336 ], [ %call1341, %if.then1340 ]
  %call1343 = call %union.tree_node* @build_pointer_type(%union.tree_node* %291) #8
  store %union.tree_node* %call1343, %union.tree_node** %type, align 8, !tbaa !0
  %tobool1344 = icmp eq %union.tree_node* %array_ptr_quals.02219, null
  br i1 %tobool1344, label %if.end1435.thread, label %if.then1345

if.then1345:                                      ; preds = %if.end1342
  call void @split_specs_attrs(%union.tree_node* %array_ptr_quals.02219, %union.tree_node** %new_ptr_quals, %union.tree_node** %new_ptr_attrs) #8
  %292 = load %union.tree_node** %new_ptr_attrs, align 8, !tbaa !0
  %cmp1347 = icmp eq %union.tree_node* %292, null
  br i1 %cmp1347, label %for.cond1351thread-pre-split, label %if.then1349

if.then1349:                                      ; preds = %if.then1345
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([49 x i8]* @.str313, i64 0, i64 0)) #8
  br label %for.cond1351thread-pre-split

for.cond1351thread-pre-split:                     ; preds = %if.then1345, %if.then1349
  %.pr2189 = load %union.tree_node** %new_ptr_quals, align 8, !tbaa !0
  %tobool13522190 = icmp eq %union.tree_node* %.pr2189, null
  br i1 %tobool13522190, label %if.end1401, label %for.body1353

for.body1353:                                     ; preds = %for.cond1351thread-pre-split, %for.inc1395
  %erred1346.02194 = phi i32 [ %erred1346.1, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %constp.22193 = phi i32 [ %constp.3, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %restrictp.22192 = phi i32 [ %restrictp.3, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %volatilep.22191 = phi i32 [ %volatilep.3, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %293 = phi %union.tree_node* [ %299, %for.inc1395 ], [ %.pr2189, %for.cond1351thread-pre-split ]
  %value1356 = getelementptr inbounds %union.tree_node* %293, i64 0, i32 0, i32 2
  %294 = bitcast i32* %value1356 to %union.tree_node**
  %295 = load %union.tree_node** %294, align 8, !tbaa !0
  %lang_flag_01358 = getelementptr inbounds %union.tree_node* %295, i64 0, i32 0, i32 0, i32 2
  %296 = bitcast [4 x i8]* %lang_flag_01358 to i32*
  %bf.load1359 = load i32* %296, align 8
  %bf.clear1361 = and i32 %bf.load1359, 16777216
  %tobool1362 = icmp eq i32 %bf.clear1361, 0
  br i1 %tobool1362, label %if.else1392, label %if.then1363

if.then1363:                                      ; preds = %for.body1353
  %node1364 = getelementptr inbounds %union.tree_node* %295, i64 0, i32 0, i32 1
  %297 = bitcast i8** %node1364 to %struct.cpp_hashnode*
  %rid_code1365 = getelementptr inbounds %struct.cpp_hashnode* %297, i64 0, i32 3
  %298 = load i8* %rid_code1365, align 1, !tbaa !1
  switch i8 %298, label %if.else1387 [
    i8 3, label %if.then1369
    i8 9, label %if.then1377
    i8 12, label %if.then1385
  ]

if.then1369:                                      ; preds = %if.then1363
  %inc1370 = add nsw i32 %constp.22193, 1
  br label %for.inc1395

if.then1377:                                      ; preds = %if.then1363
  %inc1378 = add nsw i32 %volatilep.22191, 1
  br label %for.inc1395

if.then1385:                                      ; preds = %if.then1363
  %inc1386 = add nsw i32 %restrictp.22192, 1
  br label %for.inc1395

if.else1387:                                      ; preds = %if.then1363
  %inc1388 = add nsw i32 %erred1346.02194, 1
  br label %for.inc1395

if.else1392:                                      ; preds = %for.body1353
  %inc1393 = add nsw i32 %erred1346.02194, 1
  br label %for.inc1395

for.inc1395:                                      ; preds = %if.else1392, %if.then1377, %if.else1387, %if.then1385, %if.then1369
  %volatilep.3 = phi i32 [ %volatilep.22191, %if.then1369 ], [ %inc1378, %if.then1377 ], [ %volatilep.22191, %if.then1385 ], [ %volatilep.22191, %if.else1387 ], [ %volatilep.22191, %if.else1392 ]
  %restrictp.3 = phi i32 [ %restrictp.22192, %if.then1369 ], [ %restrictp.22192, %if.then1377 ], [ %inc1386, %if.then1385 ], [ %restrictp.22192, %if.else1387 ], [ %restrictp.22192, %if.else1392 ]
  %constp.3 = phi i32 [ %inc1370, %if.then1369 ], [ %constp.22193, %if.then1377 ], [ %constp.22193, %if.then1385 ], [ %constp.22193, %if.else1387 ], [ %constp.22193, %if.else1392 ]
  %erred1346.1 = phi i32 [ %erred1346.02194, %if.then1369 ], [ %erred1346.02194, %if.then1377 ], [ %erred1346.02194, %if.then1385 ], [ %inc1388, %if.else1387 ], [ %inc1393, %if.else1392 ]
  %chain1397 = getelementptr inbounds %union.tree_node* %293, i64 0, i32 0, i32 0, i32 0
  %299 = load %union.tree_node** %chain1397, align 8, !tbaa !0
  store %union.tree_node* %299, %union.tree_node** %new_ptr_quals, align 8, !tbaa !0
  %tobool1352 = icmp eq %union.tree_node* %299, null
  br i1 %tobool1352, label %for.end1398, label %for.body1353

for.end1398:                                      ; preds = %for.inc1395
  %tobool1399 = icmp eq i32 %erred1346.1, 0
  br i1 %tobool1399, label %if.end1401, label %if.then1400

if.then1400:                                      ; preds = %for.end1398
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([46 x i8]* @.str314, i64 0, i64 0)) #8
  br label %if.end1401

if.end1401:                                       ; preds = %for.cond1351thread-pre-split, %for.end1398, %if.then1400
  %volatilep.2.lcssa2407 = phi i32 [ %volatilep.3, %for.end1398 ], [ %volatilep.3, %if.then1400 ], [ 0, %for.cond1351thread-pre-split ]
  %restrictp.2.lcssa2406 = phi i32 [ %restrictp.3, %for.end1398 ], [ %restrictp.3, %if.then1400 ], [ 0, %for.cond1351thread-pre-split ]
  %constp.2.lcssa2405 = phi i32 [ %constp.3, %for.end1398 ], [ %constp.3, %if.then1400 ], [ 0, %for.cond1351thread-pre-split ]
  %tobool1402 = icmp ne i32 %constp.2.lcssa2405, 0
  %cond1403 = zext i1 %tobool1402 to i32
  %tobool1404 = icmp ne i32 %restrictp.2.lcssa2406, 0
  %cond1405 = select i1 %tobool1404, i32 4, i32 0
  %tobool1407 = icmp ne i32 %volatilep.2.lcssa2407, 0
  %cond1408 = select i1 %tobool1407, i32 2, i32 0
  %or1406 = or i32 %cond1405, %cond1408
  %or1409 = or i32 %or1406, %cond1403
  %.pre2323 = load %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1435.thread

if.then1418:                                      ; preds = %if.then1329
  %300 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1419 = icmp eq i32 %300, 0
  %tobool1421 = icmp eq i32 %type_quals.02225, 0
  %or.cond2177 = or i1 %tobool1419, %tobool1421
  br i1 %or.cond2177, label %if.end1423, label %if.then1422

if.then1422:                                      ; preds = %if.then1418
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #8
  br label %if.end1423

if.end1423:                                       ; preds = %if.then1418, %if.then1422
  %.pre2335 = load %union.tree_node** %type, align 8, !tbaa !0
  br i1 %tobool1421, label %if.end1427, label %if.then1425

if.then1425:                                      ; preds = %if.end1423
  %call1426 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %.pre2335, i32 %type_quals.02225) #8
  store %union.tree_node* %call1426, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1427

if.end1427:                                       ; preds = %if.end1423, %if.then1425
  %301 = phi %union.tree_node* [ %call1426, %if.then1425 ], [ %.pre2335, %if.end1423 ]
  %call1428 = call %union.tree_node* @build_pointer_type(%union.tree_node* %301) #8
  store %union.tree_node* %call1428, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1435

if.else1429:                                      ; preds = %if.then1329
  %tobool1430 = icmp eq i32 %type_quals.02225, 0
  br i1 %tobool1430, label %if.end1435, label %if.then1431

if.then1431:                                      ; preds = %if.else1429
  %call1432 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %288, i32 %type_quals.02225) #8
  store %union.tree_node* %call1432, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1435

if.end1435.thread:                                ; preds = %if.end1342, %if.end1401
  %.ph = phi %union.tree_node* [ %call1343, %if.end1342 ], [ %.pre2323, %if.end1401 ]
  %type_quals.3.ph = phi i32 [ 0, %if.end1342 ], [ %or1409, %if.end1401 ]
  %call14362408 = call %union.tree_node* @build_decl(i32 35, %union.tree_node* %declarator.addr.02228, %union.tree_node* %.ph) #8
  store %union.tree_node* %call14362408, %union.tree_node** %decl1326, align 8, !tbaa !0
  br label %if.end1444

if.end1435:                                       ; preds = %if.else1429, %if.end1427, %if.then1431
  %302 = phi %union.tree_node* [ %call1428, %if.end1427 ], [ %call1432, %if.then1431 ], [ %288, %if.else1429 ]
  %type_quals.3 = phi i32 [ 0, %if.end1427 ], [ %type_quals.02225, %if.then1431 ], [ 0, %if.else1429 ]
  %call1436 = call %union.tree_node* @build_decl(i32 35, %union.tree_node* %declarator.addr.02228, %union.tree_node* %302) #8
  store %union.tree_node* %call1436, %union.tree_node** %decl1326, align 8, !tbaa !0
  %tobool1437 = icmp eq i32 %size_varies.12216, 0
  br i1 %tobool1437, label %if.end1444, label %if.then1438

if.then1438:                                      ; preds = %if.end1435
  %lang_flag_01440 = getelementptr inbounds %union.tree_node* %call1436, i64 0, i32 0, i32 5
  %303 = bitcast [8 x i8]* %lang_flag_01440 to i64*
  %bf.load1441 = load i64* %303, align 8
  %bf.set1443 = or i64 %bf.load1441, 137438953472
  store i64 %bf.set1443, i64* %303, align 8
  br label %if.end1444

if.end1444:                                       ; preds = %if.end1435.thread, %if.end1435, %if.then1438
  %type_quals.32410 = phi i32 [ %type_quals.3.ph, %if.end1435.thread ], [ %type_quals.3, %if.end1435 ], [ %type_quals.3, %if.then1438 ]
  %304 = phi %union.tree_node* [ %.ph, %if.end1435.thread ], [ %302, %if.end1435 ], [ %302, %if.then1438 ]
  %305 = load %union.tree_node** %type, align 8, !tbaa !0
  %306 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp1445 = icmp eq %union.tree_node* %305, %306
  br i1 %cmp1445, label %if.end1453, label %if.else1448

if.else1448:                                      ; preds = %if.end1444
  %call1449 = call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %305) #8
  %tobool1450 = icmp eq %union.tree_node* %call1449, null
  %307 = load %union.tree_node** %type, align 8, !tbaa !0
  %.call1449 = select i1 %tobool1450, %union.tree_node* %307, %union.tree_node* %call1449
  br label %if.end1453

if.end1453:                                       ; preds = %if.end1444, %if.else1448
  %promoted_type.0 = phi %union.tree_node* [ %.call1449, %if.else1448 ], [ %305, %if.end1444 ]
  %308 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %initial = getelementptr inbounds %union.tree_node* %308, i64 0, i32 0, i32 12
  store %union.tree_node* %promoted_type.0, %union.tree_node** %initial, align 8, !tbaa !0
  %309 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %result = getelementptr inbounds %union.tree_node* %309, i64 0, i32 0, i32 11
  store %union.tree_node* %304, %union.tree_node** %result, align 8, !tbaa !0
  br label %if.end1765

if.else1456:                                      ; preds = %if.end1325
  %cmp1457 = icmp eq i32 %decl_context.addr.2, 3
  %code1461 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 2
  %310 = bitcast [4 x i8]* %code1461 to i32*
  %bf.load1462 = load i32* %310, align 8
  %bf.clear1463 = and i32 %bf.load1462, 255
  %cmp1464 = icmp eq i32 %bf.clear1463, 23
  br i1 %cmp1457, label %if.then1459, label %if.else1521

if.then1459:                                      ; preds = %if.else1456
  br i1 %cmp1464, label %if.then1466, label %if.else1468

if.then1466:                                      ; preds = %if.then1459
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str315, i64 0, i64 0), i8* %.name.0) #8
  %311 = load %union.tree_node** %type, align 8, !tbaa !0
  %call1467 = call %union.tree_node* @build_pointer_type(%union.tree_node* %311) #8
  store %union.tree_node* %call1467, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1491

if.else1468:                                      ; preds = %if.then1459
  switch i32 %bf.clear1463, label %cond.end [
    i32 0, label %if.end1491
    i32 18, label %cond.true
  ]

cond.true:                                        ; preds = %if.else1468
  %type1483 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 1
  %312 = load %union.tree_node** %type1483, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %if.else1468, %cond.true
  %cond1484 = phi %union.tree_node* [ %312, %cond.true ], [ %288, %if.else1468 ]
  %size1486 = getelementptr inbounds %union.tree_node* %cond1484, i64 0, i32 0, i32 2
  %313 = bitcast i32* %size1486 to %union.tree_node**
  %314 = load %union.tree_node** %313, align 8, !tbaa !0
  %cmp1487 = icmp eq %union.tree_node* %314, null
  br i1 %cmp1487, label %if.then1489, label %if.end1491

if.then1489:                                      ; preds = %cond.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str316, i64 0, i64 0), i8* %.name.0) #8
  %315 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  store %union.tree_node* %315, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1491

if.end1491:                                       ; preds = %if.else1468, %cond.end, %if.then1489, %if.then1466
  %316 = phi %union.tree_node* [ %288, %if.else1468 ], [ %288, %cond.end ], [ %315, %if.then1489 ], [ %call1467, %if.then1466 ]
  %code1493 = getelementptr inbounds %union.tree_node* %316, i64 0, i32 0, i32 0, i32 2
  %317 = bitcast [4 x i8]* %code1493 to i32*
  %bf.load1494 = load i32* %317, align 8
  %bf.clear1495 = and i32 %bf.load1494, 255
  %cmp1496 = icmp ne i32 %bf.clear1495, 18
  %tobool1499 = icmp eq i32 %type_quals.02225, 0
  %or.cond2178 = or i1 %cmp1496, %tobool1499
  br i1 %or.cond2178, label %if.end1507, label %if.then1500

if.then1500:                                      ; preds = %if.end1491
  %type1502 = getelementptr inbounds %union.tree_node* %316, i64 0, i32 0, i32 0, i32 1
  %318 = load %union.tree_node** %type1502, align 8, !tbaa !0
  %call1503 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %318, i32 %type_quals.02225) #8
  %319 = load %union.tree_node** %type, align 8, !tbaa !0
  %values1505 = getelementptr inbounds %union.tree_node* %319, i64 0, i32 0, i32 1
  %320 = load i8** %values1505, align 8
  %321 = bitcast i8* %320 to %union.tree_node*
  %call1506 = call %union.tree_node* @build_array_type(%union.tree_node* %call1503, %union.tree_node* %321) #8
  store %union.tree_node* %call1506, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1507

if.end1507:                                       ; preds = %if.end1491, %if.then1500
  %322 = phi %union.tree_node* [ %316, %if.end1491 ], [ %call1506, %if.then1500 ]
  %call1508 = call %union.tree_node* @build_decl(i32 37, %union.tree_node* %declarator.addr.02228, %union.tree_node* %322) #8
  store %union.tree_node* %call1508, %union.tree_node** %decl1326, align 8, !tbaa !0
  %non_addressable = getelementptr inbounds %union.tree_node* %call1508, i64 0, i32 0, i32 5
  %323 = bitcast [8 x i8]* %non_addressable to i64*
  %324 = zext i1 %cmp to i64
  %bf.load1510 = load i64* %323, align 8
  %bf.shl = shl nuw nsw i64 %324, 34
  %bf.clear1511 = and i64 %bf.load1510, -17179869185
  %bf.set1512 = or i64 %bf.clear1511, %bf.shl
  store i64 %bf.set1512, i64* %323, align 8
  %tobool1513 = icmp eq i32 %size_varies.12216, 0
  br i1 %tobool1513, label %if.end1765, label %if.then1514

if.then1514:                                      ; preds = %if.end1507
  %325 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %lang_flag_01516 = getelementptr inbounds %union.tree_node* %325, i64 0, i32 0, i32 5
  %326 = bitcast [8 x i8]* %lang_flag_01516 to i64*
  %bf.load1517 = load i64* %326, align 8
  %bf.set1519 = or i64 %bf.load1517, 137438953472
  store i64 %bf.set1519, i64* %326, align 8
  br label %if.end1765

if.else1521:                                      ; preds = %if.else1456
  br i1 %cmp1464, label %if.then1528, label %if.else1656

if.then1528:                                      ; preds = %if.else1521
  %and1529 = and i32 %specbits.5.ph, 2048
  %tobool1530 = icmp eq i32 %and1529, 0
  br i1 %tobool1530, label %if.end1541, label %land.lhs.true1535

land.lhs.true1535:                                ; preds = %if.then1528
  %327 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %328 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp1531 = icmp eq %struct.binding_level* %327, %328
  %329 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1536.not = icmp ne i32 %329, 0
  %brmerge2412 = or i1 %tobool1536.not, %cmp1531
  br i1 %brmerge2412, label %if.then1540, label %if.end1541

if.then1540:                                      ; preds = %land.lhs.true1535
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([40 x i8]* @.str317, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end1541

if.end1541:                                       ; preds = %land.lhs.true1535, %if.then1528, %if.then1540
  %330 = phi i1 [ %cmp1531, %if.then1540 ], [ true, %if.then1528 ], [ false, %land.lhs.true1535 ]
  %and1542 = and i32 %specbits.5.ph, 32
  %tobool1543 = icmp eq i32 %and1542, 0
  br i1 %tobool1543, label %if.end1545, label %if.then1544

if.then1544:                                      ; preds = %if.end1541
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str317, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end1545

if.end1545:                                       ; preds = %if.end1541, %if.then1544
  %331 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %332 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp1546 = icmp eq %struct.binding_level* %331, %332
  br i1 %cmp1546, label %if.end1554, label %land.lhs.true1548

land.lhs.true1548:                                ; preds = %if.end1545
  %and1549 = and i32 %specbits.5.ph, 257
  %tobool1550 = icmp ne i32 %and1549, 0
  %333 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1552 = icmp ne i32 %333, 0
  %or.cond1829 = and i1 %tobool1550, %tobool1552
  br i1 %or.cond1829, label %if.then1553, label %if.end1554

if.then1553:                                      ; preds = %land.lhs.true1548
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([40 x i8]* @.str317, i64 0, i64 0), i8* %.name.0) #8
  br label %if.end1554

if.end1554:                                       ; preds = %land.lhs.true1548, %if.end1545, %if.then1553
  %334 = load %union.tree_node** %type, align 8, !tbaa !0
  %call1555 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %declarator.addr.02228, %union.tree_node* %334) #8
  store %union.tree_node* %call1555, %union.tree_node** %decl1326, align 8, !tbaa !0
  %call1556 = call %union.tree_node* @build_decl_attribute_variant(%union.tree_node* %call1555, %union.tree_node* %decl_attr.0.lcssa2356) #8
  store %union.tree_node* %call1556, %union.tree_node** %decl1326, align 8, !tbaa !0
  %call1557 = call i8* @ggc_alloc_cleared(i64 16) #8
  %335 = bitcast i8* %call1557 to %struct.lang_decl*
  %336 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %lang_specific = getelementptr inbounds %union.tree_node* %336, i64 0, i32 0, i32 24
  store %struct.lang_decl* %335, %struct.lang_decl** %lang_specific, align 8, !tbaa !0
  %337 = load i32* @pedantic, align 4, !tbaa !3
  %tobool1559 = icmp eq i32 %337, 0
  %tobool1561 = icmp eq i32 %type_quals.02225, 0
  %or.cond2179 = or i1 %tobool1559, %tobool1561
  br i1 %or.cond2179, label %if.end1570, label %land.lhs.true1562

land.lhs.true1562:                                ; preds = %if.end1554
  %338 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %in_system_header_flag = getelementptr inbounds %union.tree_node* %338, i64 0, i32 0, i32 5
  %339 = bitcast [8 x i8]* %in_system_header_flag to i64*
  %bf.load1564 = load i64* %339, align 8
  %bf.cast1567 = and i64 %bf.load1564, 65536
  %tobool1568 = icmp eq i64 %bf.cast1567, 0
  br i1 %tobool1568, label %if.then1569, label %if.end1570

if.then1569:                                      ; preds = %land.lhs.true1562
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #8
  br label %if.end1570

if.end1570:                                       ; preds = %land.lhs.true1562, %if.end1554, %if.then1569
  %and1571 = and i32 %type_quals.02225, 2
  %tobool1572 = icmp eq i32 %and1571, 0
  br i1 %tobool1572, label %if.end1585, label %land.lhs.true1573

land.lhs.true1573:                                ; preds = %if.end1570
  %340 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %type1575 = getelementptr inbounds %union.tree_node* %340, i64 0, i32 0, i32 0, i32 1
  %341 = load %union.tree_node** %type1575, align 8, !tbaa !0
  %type1577 = getelementptr inbounds %union.tree_node* %341, i64 0, i32 0, i32 0, i32 1
  %342 = load %union.tree_node** %type1577, align 8, !tbaa !0
  %code1579 = getelementptr inbounds %union.tree_node* %342, i64 0, i32 0, i32 0, i32 2
  %343 = bitcast [4 x i8]* %code1579 to i32*
  %bf.load1580 = load i32* %343, align 8
  %bf.clear1581 = and i32 %bf.load1580, 255
  %cmp1582 = icmp eq i32 %bf.clear1581, 5
  br i1 %cmp1582, label %if.end1585, label %if.then1584

if.then1584:                                      ; preds = %land.lhs.true1573
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([43 x i8]* @.str318, i64 0, i64 0)) #8
  br label %if.end1585

if.end1585:                                       ; preds = %if.end1570, %if.then1584, %land.lhs.true1573
  br i1 %330, label %if.then1587, label %if.end1592

if.then1587:                                      ; preds = %if.end1585
  %344 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %external_flag = getelementptr inbounds %union.tree_node* %344, i64 0, i32 0, i32 5
  %345 = bitcast [8 x i8]* %external_flag to i64*
  %bf.load1589 = load i64* %345, align 8
  %bf.set1591 = or i64 %bf.load1589, 256
  store i64 %bf.set1591, i64* %345, align 8
  br label %if.end1592

if.end1592:                                       ; preds = %if.end1585, %if.then1587
  %and1593 = and i32 %specbits.5.ph, 2049
  %lnot1595 = icmp eq i32 %and1593, 0
  %lnot.ext1596 = zext i1 %lnot1595 to i32
  %346 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %public_flag1598 = getelementptr inbounds %union.tree_node* %346, i64 0, i32 0, i32 0, i32 2
  %347 = bitcast [4 x i8]* %public_flag1598 to i32*
  %bf.load1599 = load i32* %347, align 8
  %bf.shl1601 = shl nuw nsw i32 %lnot.ext1596, 19
  %bf.clear1602 = and i32 %bf.load1599, -524289
  %bf.set1603 = or i32 %bf.clear1602, %bf.shl1601
  store i32 %bf.set1603, i32* %347, align 8
  %tobool1604 = icmp eq i32 %defaulted_int.0, 0
  br i1 %tobool1604, label %if.end1611, label %if.then1605

if.then1605:                                      ; preds = %if.end1592
  %348 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %lang_flag_11607 = getelementptr inbounds %union.tree_node* %348, i64 0, i32 0, i32 5
  %349 = bitcast [8 x i8]* %lang_flag_11607 to i64*
  %bf.load1608 = load i64* %349, align 8
  %bf.set1610 = or i64 %bf.load1608, 274877906944
  store i64 %bf.set1610, i64* %349, align 8
  br label %if.end1611

if.end1611:                                       ; preds = %if.end1592, %if.then1605
  %350 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !0
  %cmp1612 = icmp eq %union.tree_node* %declarator.addr.02228, %350
  br i1 %cmp1612, label %if.then1614, label %if.else1618

if.then1614:                                      ; preds = %if.end1611
  br i1 %tobool468, label %if.then1616, label %if.end1765

if.then1616:                                      ; preds = %if.then1614
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str319, i64 0, i64 0)) #8
  br label %if.end1765

if.else1618:                                      ; preds = %if.end1611
  br i1 %tobool468, label %if.then1620, label %if.else1637

if.then1620:                                      ; preds = %if.else1618
  %351 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %lang_specific1622 = getelementptr inbounds %union.tree_node* %351, i64 0, i32 0, i32 24
  %352 = load %struct.lang_decl** %lang_specific1622, align 8, !tbaa !0
  %353 = getelementptr inbounds %struct.lang_decl* %352, i64 0, i32 0, i32 0
  %bf.load1623 = load i8* %353, align 4
  %bf.set1625 = or i8 %bf.load1623, 1
  store i8 %bf.set1625, i8* %353, align 4
  %tobool1626 = icmp eq i32 %initialized, 0
  br i1 %tobool1626, label %if.end1765, label %if.then1627

if.then1627:                                      ; preds = %if.then1620
  %354 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %inline_flag = getelementptr inbounds %union.tree_node* %354, i64 0, i32 0, i32 5
  %355 = bitcast [8 x i8]* %inline_flag to i64*
  %bf.load1629 = load i64* %355, align 8
  %bf.set1631 = or i64 %bf.load1629, 2048
  store i64 %bf.set1631, i64* %355, align 8
  %and1632 = and i32 %specbits.5.ph, 16
  %tobool1633 = icmp eq i32 %and1632, 0
  br i1 %tobool1633, label %if.end1765, label %if.then1634

if.then1634:                                      ; preds = %if.then1627
  store i32 1, i32* @current_extern_inline, align 4, !tbaa !3
  br label %if.end1765

if.else1637:                                      ; preds = %if.else1618
  %356 = load i32* @flag_inline_trees, align 4, !tbaa !3
  %cmp1638 = icmp ne i32 %356, 2
  %tobool1641 = icmp eq i32 %initialized, 0
  %or.cond2180 = or i1 %cmp1638, %tobool1641
  br i1 %or.cond2180, label %if.end1765, label %if.then1642

if.then1642:                                      ; preds = %if.else1637
  %357 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %inline_flag1644 = getelementptr inbounds %union.tree_node* %357, i64 0, i32 0, i32 5
  %358 = bitcast [8 x i8]* %inline_flag1644 to i64*
  %bf.load1645 = load i64* %358, align 8
  %bf.set1647 = or i64 %bf.load1645, 2048
  store i64 %bf.set1647, i64* %358, align 8
  %359 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %lang_specific1649 = getelementptr inbounds %union.tree_node* %359, i64 0, i32 0, i32 24
  %360 = load %struct.lang_decl** %lang_specific1649, align 8, !tbaa !0
  %361 = getelementptr inbounds %struct.lang_decl* %360, i64 0, i32 0, i32 0
  %bf.load1651 = load i8* %361, align 4
  %bf.clear1652 = and i8 %bf.load1651, -2
  store i8 %bf.clear1652, i8* %361, align 4
  br label %if.end1765

if.else1656:                                      ; preds = %if.else1521
  %tobool1658 = icmp eq i32 %initialized, 0
  br i1 %tobool1658, label %land.rhs1659, label %land.end1662

land.rhs1659:                                     ; preds = %if.else1656
  %and1660 = and i32 %specbits.5.ph, 16
  %tobool1661 = icmp ne i32 %and1660, 0
  br label %land.end1662

land.end1662:                                     ; preds = %if.else1656, %land.rhs1659
  %362 = phi i1 [ false, %if.else1656 ], [ %tobool1661, %land.rhs1659 ]
  %cmp1668 = icmp ne i32 %bf.clear1463, 18
  %tobool1671 = icmp eq i32 %type_quals.02225, 0
  %or.cond2181 = or i1 %cmp1668, %tobool1671
  br i1 %or.cond2181, label %if.else1682, label %if.then1672

if.then1672:                                      ; preds = %land.end1662
  %align = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 7
  %363 = bitcast %union.tree_node** %align to i32*
  %364 = load i32* %363, align 4, !tbaa !3
  %type1675 = getelementptr inbounds %union.tree_node* %288, i64 0, i32 0, i32 0, i32 1
  %365 = load %union.tree_node** %type1675, align 8, !tbaa !0
  %call1676 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %365, i32 %type_quals.02225) #8
  %366 = load %union.tree_node** %type, align 8, !tbaa !0
  %values1678 = getelementptr inbounds %union.tree_node* %366, i64 0, i32 0, i32 1
  %367 = load i8** %values1678, align 8
  %368 = bitcast i8* %367 to %union.tree_node*
  %call1679 = call %union.tree_node* @build_array_type(%union.tree_node* %call1676, %union.tree_node* %368) #8
  store %union.tree_node* %call1679, %union.tree_node** %type, align 8, !tbaa !0
  %align1681 = getelementptr inbounds %union.tree_node* %call1679, i64 0, i32 0, i32 7
  %369 = bitcast %union.tree_node** %align1681 to i32*
  store i32 %364, i32* %369, align 4, !tbaa !3
  br label %if.end1687

if.else1682:                                      ; preds = %land.end1662
  br i1 %tobool1671, label %if.end1687, label %if.then1684

if.then1684:                                      ; preds = %if.else1682
  %call1685 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %288, i32 %type_quals.02225) #8
  store %union.tree_node* %call1685, %union.tree_node** %type, align 8, !tbaa !0
  br label %if.end1687

if.end1687:                                       ; preds = %if.else1682, %if.then1684, %if.then1672
  %370 = phi %union.tree_node* [ %288, %if.else1682 ], [ %call1685, %if.then1684 ], [ %call1679, %if.then1672 ]
  %call1688 = call %union.tree_node* @build_decl(i32 34, %union.tree_node* %declarator.addr.02228, %union.tree_node* %370) #8
  store %union.tree_node* %call1688, %union.tree_node** %decl1326, align 8, !tbaa !0
  %tobool1689 = icmp eq i32 %size_varies.12216, 0
  br i1 %tobool1689, label %if.end1696, label %if.then1690

if.then1690:                                      ; preds = %if.end1687
  %lang_flag_01692 = getelementptr inbounds %union.tree_node* %call1688, i64 0, i32 0, i32 5
  %371 = bitcast [8 x i8]* %lang_flag_01692 to i64*
  %bf.load1693 = load i64* %371, align 8
  %bf.set1695 = or i64 %bf.load1693, 137438953472
  store i64 %bf.set1695, i64* %371, align 8
  br label %if.end1696

if.end1696:                                       ; preds = %if.end1687, %if.then1690
  br i1 %tobool468, label %if.then1698, label %if.end1699

if.then1698:                                      ; preds = %if.end1696
  %372 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %372, i8* getelementptr inbounds ([32 x i8]* @.str320, i64 0, i64 0)) #8
  br label %if.end1699

if.end1699:                                       ; preds = %if.end1696, %if.then1698
  %373 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %external_flag1701 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 5
  %374 = bitcast [8 x i8]* %external_flag1701 to i64*
  %375 = zext i1 %362 to i64
  %bf.load1702 = load i64* %374, align 8
  %bf.shl1704 = shl nuw nsw i64 %375, 8
  %bf.clear1705 = and i64 %bf.load1702, -257
  %bf.set1706 = or i64 %bf.clear1705, %bf.shl1704
  store i64 %bf.set1706, i64* %374, align 8
  %376 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !0
  %377 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !0
  %cmp1708 = icmp eq %struct.binding_level* %376, %377
  br i1 %cmp1708, label %if.then1710, label %if.else1738

if.then1710:                                      ; preds = %if.end1699
  %and1711 = and i32 %specbits.5.ph, 33
  %lnot1713 = icmp eq i32 %and1711, 0
  %lnot.ext1714 = zext i1 %lnot1713 to i32
  %378 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %public_flag1716 = getelementptr inbounds %union.tree_node* %378, i64 0, i32 0, i32 0, i32 2
  %379 = bitcast [4 x i8]* %public_flag1716 to i32*
  %bf.load1717 = load i32* %379, align 8
  %bf.shl1719 = shl nuw nsw i32 %lnot.ext1714, 19
  %bf.clear1720 = and i32 %bf.load1717, -524289
  %bf.set1721 = or i32 %bf.clear1720, %bf.shl1719
  store i32 %bf.set1721, i32* %379, align 8
  %380 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %external_flag1723 = getelementptr inbounds %union.tree_node* %380, i64 0, i32 0, i32 5
  %381 = bitcast [8 x i8]* %external_flag1723 to i64*
  %bf.load1724 = load i64* %381, align 8
  %bf.cast1727 = lshr i64 %bf.load1724, 8
  %382 = xor i64 %bf.cast1727, 1
  %lnot.ext1730 = trunc i64 %382 to i32
  %static_flag1732 = getelementptr inbounds %union.tree_node* %380, i64 0, i32 0, i32 0, i32 2
  %383 = bitcast [4 x i8]* %static_flag1732 to i32*
  %bf.load1733 = load i32* %383, align 8
  %bf.value1734 = shl i32 %lnot.ext1730, 18
  %bf.shl1735 = and i32 %bf.value1734, 262144
  %bf.clear1736 = and i32 %bf.load1733, -262145
  %bf.set1737 = or i32 %bf.shl1735, %bf.clear1736
  store i32 %bf.set1737, i32* %383, align 8
  br label %if.end1765

if.else1738:                                      ; preds = %if.end1699
  %384 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %static_flag1743 = getelementptr inbounds %union.tree_node* %384, i64 0, i32 0, i32 0, i32 2
  %385 = bitcast [4 x i8]* %static_flag1743 to i32*
  %bf.load1744 = load i32* %385, align 8
  %bf.value1745 = shl i32 %specbits.5.ph, 18
  %bf.shl1746 = and i32 %bf.value1745, 262144
  %bf.clear1747 = and i32 %bf.load1744, -262145
  %bf.set1748 = or i32 %bf.clear1747, %bf.shl1746
  store i32 %bf.set1748, i32* %385, align 8
  %386 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %external_flag1750 = getelementptr inbounds %union.tree_node* %386, i64 0, i32 0, i32 5
  %387 = bitcast [8 x i8]* %external_flag1750 to i64*
  %bf.load1751 = load i64* %387, align 8
  %public_flag1756 = getelementptr inbounds %union.tree_node* %386, i64 0, i32 0, i32 0, i32 2
  %388 = bitcast [4 x i8]* %public_flag1756 to i32*
  %bf.load1757 = load i32* %388, align 8
  %389 = shl i64 %bf.load1751, 11
  %bf.value1758 = trunc i64 %389 to i32
  %bf.shl1759 = and i32 %bf.value1758, 524288
  %bf.clear1760 = and i32 %bf.load1757, -524289
  %bf.set1761 = or i32 %bf.shl1759, %bf.clear1760
  store i32 %bf.set1761, i32* %388, align 8
  br label %if.end1765

if.end1765:                                       ; preds = %if.else1637, %if.end1507, %if.then1627, %if.then1620, %if.then1514, %if.then1710, %if.else1738, %if.then1616, %if.then1614, %if.then1642, %if.then1634, %if.end1453
  %type_quals.4 = phi i32 [ %type_quals.32410, %if.end1453 ], [ %type_quals.02225, %if.then1514 ], [ %type_quals.02225, %if.end1507 ], [ %type_quals.02225, %if.then1616 ], [ %type_quals.02225, %if.then1614 ], [ %type_quals.02225, %if.then1634 ], [ %type_quals.02225, %if.then1627 ], [ %type_quals.02225, %if.then1620 ], [ %type_quals.02225, %if.then1642 ], [ %type_quals.02225, %if.else1637 ], [ %type_quals.02225, %if.then1710 ], [ %type_quals.02225, %if.else1738 ]
  %and1766 = and i32 %specbits.5.ph, 32
  %tobool1767 = icmp eq i32 %and1766, 0
  br i1 %tobool1767, label %if.end1773, label %if.then1768

if.then1768:                                      ; preds = %if.end1765
  %390 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %regdecl_flag = getelementptr inbounds %union.tree_node* %390, i64 0, i32 0, i32 5
  %391 = bitcast [8 x i8]* %regdecl_flag to i64*
  %bf.load1770 = load i64* %391, align 8
  %bf.set1772 = or i64 %bf.load1770, 1024
  store i64 %bf.set1772, i64* %391, align 8
  br label %if.end1773

if.end1773:                                       ; preds = %if.end1765, %if.then1768
  %392 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  call void @c_apply_type_quals_to_decl(i32 %type_quals.4, %union.tree_node* %392) #8
  %393 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  %type1775 = getelementptr inbounds %union.tree_node* %393, i64 0, i32 0, i32 0, i32 1
  %394 = load %union.tree_node** %type1775, align 8, !tbaa !0
  %lang_flag_2 = getelementptr inbounds %union.tree_node* %394, i64 0, i32 0, i32 0, i32 2
  %395 = bitcast [4 x i8]* %lang_flag_2 to i32*
  %bf.load1777 = load i32* %395, align 8
  %bf.clear1779 = and i32 %bf.load1777, 67108864
  %tobool1780 = icmp eq i32 %bf.clear1779, 0
  br i1 %tobool1780, label %if.end1783, label %if.then1781

if.then1781:                                      ; preds = %if.end1773
  %call1782 = call i32 @mark_addressable(%union.tree_node* %393) #8
  br label %if.end1783

if.end1783:                                       ; preds = %if.end1773, %if.then1781
  %call1784 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1326, %union.tree_node* %returned_attrs.02222, i32 0) #8
  %396 = load %union.tree_node** %decl1326, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %while.end, %if.end1783, %if.end1293, %if.end1236
  %retval.0 = phi %union.tree_node* [ %269, %if.end1236 ], [ %282, %if.end1293 ], [ %396, %if.end1783 ], [ null, %while.end ]
  ret %union.tree_node* %retval.0
}
