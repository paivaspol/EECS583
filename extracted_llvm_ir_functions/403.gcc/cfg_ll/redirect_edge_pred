define void @redirect_edge_pred(%struct.edge_def* %e, %struct.basic_block_def* %new_pred) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.edge_def* %e}, i64 0, metadata !893), !dbg !1355
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %new_pred}, i64 0, metadata !894), !dbg !1356
  %src = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 2, !dbg !1357
  %0 = load %struct.basic_block_def** %src, align 8, !dbg !1357, !tbaa !1158
  %succ = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 5, !dbg !1357
  tail call void @llvm.dbg.value(metadata !{%struct.edge_def** %succ}, i64 0, metadata !895), !dbg !1357
  br label %for.cond, !dbg !1357

for.cond:                                         ; preds = %for.cond, %entry
  %pe.0 = phi %struct.edge_def** [ %succ, %entry ], [ %succ_next, %for.cond ]
  %1 = load %struct.edge_def** %pe.0, align 8, !dbg !1357, !tbaa !1158
  %cmp = icmp eq %struct.edge_def* %1, %e, !dbg !1357
  %succ_next = getelementptr inbounds %struct.edge_def* %1, i64 0, i32 1, !dbg !1357
  br i1 %cmp, label %for.end, label %for.cond, !dbg !1357

for.end:                                          ; preds = %for.cond
  %2 = load %struct.edge_def** %succ_next, align 8, !dbg !1359, !tbaa !1158
  store %struct.edge_def* %2, %struct.edge_def** %pe.0, align 8, !dbg !1359, !tbaa !1158
  %succ2 = getelementptr inbounds %struct.basic_block_def* %new_pred, i64 0, i32 5, !dbg !1360
  %3 = load %struct.edge_def** %succ2, align 8, !dbg !1360, !tbaa !1158
  %succ_next3 = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 1, !dbg !1360
  store %struct.edge_def* %3, %struct.edge_def** %succ_next3, align 8, !dbg !1360, !tbaa !1158
  store %struct.edge_def* %e, %struct.edge_def** %succ2, align 8, !dbg !1361, !tbaa !1158
  store %struct.basic_block_def* %new_pred, %struct.basic_block_def** %src, align 8, !dbg !1362, !tbaa !1158
  ret void, !dbg !1363
}
