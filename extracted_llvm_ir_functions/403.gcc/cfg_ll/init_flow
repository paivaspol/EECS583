define void @init_flow() #0 {
entry:
  store %struct.edge_def* null, %struct.edge_def** @first_deleted_edge, align 8, !dbg !1157, !tbaa !1158
  store %struct.basic_block_def* null, %struct.basic_block_def** @first_deleted_block, align 8, !dbg !1161, !tbaa !1158
  store i32 0, i32* @n_edges, align 4, !dbg !1162, !tbaa !1163
  %.b = load i1* @init_flow.initialized, align 1
  br i1 %.b, label %if.else, label %if.then, !dbg !1164

if.then:                                          ; preds = %entry
  tail call void @gcc_obstack_init(%struct.obstack* @flow_obstack) #6, !dbg !1165
  tail call void @llvm.dbg.value(metadata !1166, i64 0, metadata !201), !dbg !1167
  tail call void @llvm.dbg.value(metadata !1166, i64 0, metadata !242), !dbg !1168
  tail call void @llvm.dbg.value(metadata !194, i64 0, metadata !244), !dbg !1168
  %0 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !dbg !1168, !tbaa !1158
  %1 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1168, !tbaa !1158
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !1168
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !1168
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1168
  %cmp = icmp slt i64 %sub.ptr.sub, 0, !dbg !1168
  br i1 %cmp, label %if.then2, label %if.end, !dbg !1168

if.then2:                                         ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 0) #6, !dbg !1168
  %.pre156 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1168, !tbaa !1158
  br label %if.end, !dbg !1168

if.end:                                           ; preds = %if.then2, %if.then
  %2 = phi i8* [ %.pre156, %if.then2 ], [ %1, %if.then ]
  tail call void @llvm.dbg.value(metadata !1166, i64 0, metadata !245), !dbg !1169
  %3 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !dbg !1169, !tbaa !1158
  tail call void @llvm.dbg.value(metadata !{i8* %3}, i64 0, metadata !247), !dbg !1169
  %cmp5 = icmp eq i8* %2, %3, !dbg !1169
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !1169

if.then7:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8, !dbg !1169
  %bf.set = or i8 %bf.load, 2, !dbg !1169
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8, !dbg !1169
  br label %if.end8, !dbg !1169

if.end8:                                          ; preds = %if.end, %if.then7
  %sub.ptr.lhs.cast10 = ptrtoint i8* %2 to i64, !dbg !1169
  %4 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !dbg !1169, !tbaa !1163
  %conv12 = sext i32 %4 to i64, !dbg !1169
  %add = add nsw i64 %conv12, %sub.ptr.lhs.cast10, !dbg !1169
  %neg = xor i32 %4, -1, !dbg !1169
  %conv14 = sext i32 %neg to i64, !dbg !1169
  %and = and i64 %add, %conv14, !dbg !1169
  %add.ptr15 = getelementptr inbounds i8* null, i64 %and, !dbg !1169
  store i8* %add.ptr15, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1169, !tbaa !1158
  %5 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !dbg !1169, !tbaa !1158
  %sub.ptr.lhs.cast18 = ptrtoint i8* %add.ptr15 to i64, !dbg !1169
  %sub.ptr.rhs.cast19 = ptrtoint %struct._obstack_chunk* %5 to i64, !dbg !1169
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !1169
  %6 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !dbg !1169, !tbaa !1158
  %sub.ptr.lhs.cast23 = ptrtoint i8* %6 to i64, !dbg !1169
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast19, !dbg !1169
  %cmp26 = icmp sgt i64 %sub.ptr.sub20, %sub.ptr.sub25, !dbg !1169
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !1169

if.then28:                                        ; preds = %if.end8
  store i8* %6, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1169, !tbaa !1158
  br label %if.end31, !dbg !1169

if.end31:                                         ; preds = %if.then28, %if.end8
  %7 = phi i8* [ %6, %if.then28 ], [ %add.ptr15, %if.end8 ]
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !dbg !1169, !tbaa !1158
  store i8* %3, i8** @flow_firstobj, align 8, !dbg !1167, !tbaa !1158
  store i1 true, i1* @init_flow.initialized, align 1
  br label %if.end104, !dbg !1170

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1166, i64 0, metadata !248), !dbg !1171
  %8 = load i8** @flow_firstobj, align 8, !dbg !1171, !tbaa !1158
  tail call void @llvm.dbg.value(metadata !{i8* %8}, i64 0, metadata !251), !dbg !1171
  %9 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !dbg !1171, !tbaa !1158
  %10 = bitcast %struct._obstack_chunk* %9 to i8*, !dbg !1171
  %cmp36 = icmp ugt i8* %8, %10, !dbg !1171
  %11 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !dbg !1171, !tbaa !1158
  %cmp39 = icmp ult i8* %8, %11, !dbg !1171
  %or.cond = and i1 %cmp36, %cmp39, !dbg !1171
  br i1 %or.cond, label %if.then41, label %if.else44, !dbg !1171

if.then41:                                        ; preds = %if.else
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !dbg !1171, !tbaa !1158
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1171, !tbaa !1158
  br label %if.end45, !dbg !1171

if.else44:                                        ; preds = %if.else
  tail call void @obstack_free(%struct.obstack* @flow_obstack, i8* %8) #6, !dbg !1171
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !dbg !1172, !tbaa !1158
  %.pre154 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1172, !tbaa !1158
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then41
  %12 = phi i8* [ %.pre154, %if.else44 ], [ %8, %if.then41 ]
  %13 = phi i8* [ %.pre, %if.else44 ], [ %11, %if.then41 ]
  tail call void @llvm.dbg.value(metadata !1166, i64 0, metadata !252), !dbg !1173
  tail call void @llvm.dbg.value(metadata !1166, i64 0, metadata !254), !dbg !1172
  tail call void @llvm.dbg.value(metadata !194, i64 0, metadata !256), !dbg !1172
  %sub.ptr.lhs.cast51 = ptrtoint i8* %13 to i64, !dbg !1172
  %sub.ptr.rhs.cast52 = ptrtoint i8* %12 to i64, !dbg !1172
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52, !dbg !1172
  %cmp55 = icmp slt i64 %sub.ptr.sub53, 0, !dbg !1172
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !1172

if.then57:                                        ; preds = %if.end45
  tail call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 0) #6, !dbg !1172
  %.pre155 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1172, !tbaa !1158
  br label %if.end58, !dbg !1172

if.end58:                                         ; preds = %if.end45, %if.then57
  %14 = phi i8* [ %.pre155, %if.then57 ], [ %12, %if.end45 ]
  tail call void @llvm.dbg.value(metadata !1166, i64 0, metadata !257), !dbg !1174
  %15 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !dbg !1174, !tbaa !1158
  tail call void @llvm.dbg.value(metadata !{i8* %15}, i64 0, metadata !259), !dbg !1174
  %cmp66 = icmp eq i8* %14, %15, !dbg !1174
  br i1 %cmp66, label %if.then68, label %if.end73, !dbg !1174

if.then68:                                        ; preds = %if.end58
  %bf.load70 = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8, !dbg !1174
  %bf.set72 = or i8 %bf.load70, 2, !dbg !1174
  store i8 %bf.set72, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8, !dbg !1174
  br label %if.end73, !dbg !1174

if.end73:                                         ; preds = %if.end58, %if.then68
  %sub.ptr.lhs.cast75 = ptrtoint i8* %14 to i64, !dbg !1174
  %16 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !dbg !1174, !tbaa !1163
  %conv78 = sext i32 %16 to i64, !dbg !1174
  %add79 = add nsw i64 %conv78, %sub.ptr.lhs.cast75, !dbg !1174
  %neg81 = xor i32 %16, -1, !dbg !1174
  %conv82 = sext i32 %neg81 to i64, !dbg !1174
  %and83 = and i64 %add79, %conv82, !dbg !1174
  %add.ptr84 = getelementptr inbounds i8* null, i64 %and83, !dbg !1174
  store i8* %add.ptr84, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1174, !tbaa !1158
  %17 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !dbg !1174, !tbaa !1158
  %sub.ptr.lhs.cast88 = ptrtoint i8* %add.ptr84 to i64, !dbg !1174
  %sub.ptr.rhs.cast89 = ptrtoint %struct._obstack_chunk* %17 to i64, !dbg !1174
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89, !dbg !1174
  %18 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !dbg !1174, !tbaa !1158
  %sub.ptr.lhs.cast93 = ptrtoint i8* %18 to i64, !dbg !1174
  %sub.ptr.sub95 = sub i64 %sub.ptr.lhs.cast93, %sub.ptr.rhs.cast89, !dbg !1174
  %cmp96 = icmp sgt i64 %sub.ptr.sub90, %sub.ptr.sub95, !dbg !1174
  br i1 %cmp96, label %if.then98, label %if.end101, !dbg !1174

if.then98:                                        ; preds = %if.end73
  store i8* %18, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !dbg !1174, !tbaa !1158
  br label %if.end101, !dbg !1174

if.end101:                                        ; preds = %if.then98, %if.end73
  %19 = phi i8* [ %18, %if.then98 ], [ %add.ptr84, %if.end73 ]
  store i8* %19, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !dbg !1174, !tbaa !1158
  store i8* %15, i8** @flow_firstobj, align 8, !dbg !1173, !tbaa !1158
  br label %if.end104

if.end104:                                        ; preds = %if.end101, %if.end31
  ret void, !dbg !1175
}
