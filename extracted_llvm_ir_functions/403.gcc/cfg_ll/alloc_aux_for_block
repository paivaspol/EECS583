define void @alloc_aux_for_block(%struct.basic_block_def* nocapture %bb, i32 %size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.basic_block_def* %bb}, i64 0, metadata !977), !dbg !1453
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !978), !dbg !1454
  %aux = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 10, !dbg !1455
  %0 = load i8** %aux, align 8, !dbg !1455, !tbaa !1158
  %tobool = icmp eq i8* %0, null, !dbg !1455
  %1 = load i8** @first_block_aux_obj, align 8, !dbg !1455, !tbaa !1158
  %tobool1 = icmp ne i8* %1, null, !dbg !1455
  %or.cond = and i1 %tobool, %tobool1, !dbg !1455
  br i1 %or.cond, label %if.end, label %if.then, !dbg !1455

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([47 x i8]* @.str, i64 0, i64 0), i32 612, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.alloc_aux_for_block, i64 0, i64 0)) #7, !dbg !1456
  unreachable, !dbg !1456

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1457, i64 0, metadata !979), !dbg !1458
  tail call void @llvm.dbg.value(metadata !1457, i64 0, metadata !981), !dbg !1459
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !983), !dbg !1459
  %2 = load i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 4), align 8, !dbg !1459, !tbaa !1158
  %3 = load i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 3), align 8, !dbg !1459, !tbaa !1158
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1459
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !1459
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1459
  %conv = sext i32 %size to i64, !dbg !1459
  %cmp = icmp slt i64 %sub.ptr.sub, %conv, !dbg !1459
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !1459

if.then3:                                         ; preds = %if.end
  tail call void @_obstack_newchunk(%struct.obstack* @block_aux_obstack, i32 %size) #6, !dbg !1459
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 3), align 8, !dbg !1459, !tbaa !1158
  br label %if.end4, !dbg !1459

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = phi i8* [ %.pre, %if.then3 ], [ %3, %if.end ]
  %add.ptr = getelementptr inbounds i8* %4, i64 %conv, !dbg !1459
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 3), align 8, !dbg !1459, !tbaa !1158
  tail call void @llvm.dbg.value(metadata !1457, i64 0, metadata !984), !dbg !1460
  %5 = load i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 2), align 8, !dbg !1460, !tbaa !1158
  tail call void @llvm.dbg.value(metadata !{i8* %5}, i64 0, metadata !986), !dbg !1460
  %cmp7 = icmp eq i8* %add.ptr, %5, !dbg !1460
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !1460

if.then9:                                         ; preds = %if.end4
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 10), align 8, !dbg !1460
  %bf.set = or i8 %bf.load, 2, !dbg !1460
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 10), align 8, !dbg !1460
  br label %if.end10, !dbg !1460

if.end10:                                         ; preds = %if.end4, %if.then9
  %sub.ptr.lhs.cast12 = ptrtoint i8* %add.ptr to i64, !dbg !1460
  %6 = load i32* getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 6), align 8, !dbg !1460, !tbaa !1163
  %conv14 = sext i32 %6 to i64, !dbg !1460
  %add = add nsw i64 %conv14, %sub.ptr.lhs.cast12, !dbg !1460
  %neg = xor i32 %6, -1, !dbg !1460
  %conv16 = sext i32 %neg to i64, !dbg !1460
  %and = and i64 %add, %conv16, !dbg !1460
  %add.ptr17 = getelementptr inbounds i8* null, i64 %and, !dbg !1460
  store i8* %add.ptr17, i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 3), align 8, !dbg !1460, !tbaa !1158
  %7 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 1), align 8, !dbg !1460, !tbaa !1158
  %sub.ptr.lhs.cast20 = ptrtoint i8* %add.ptr17 to i64, !dbg !1460
  %sub.ptr.rhs.cast21 = ptrtoint %struct._obstack_chunk* %7 to i64, !dbg !1460
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !1460
  %8 = load i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 4), align 8, !dbg !1460, !tbaa !1158
  %sub.ptr.lhs.cast25 = ptrtoint i8* %8 to i64, !dbg !1460
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast21, !dbg !1460
  %cmp28 = icmp sgt i64 %sub.ptr.sub22, %sub.ptr.sub27, !dbg !1460
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !1460

if.then30:                                        ; preds = %if.end10
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 3), align 8, !dbg !1460, !tbaa !1158
  br label %if.end33, !dbg !1460

if.end33:                                         ; preds = %if.then30, %if.end10
  %9 = phi i8* [ %8, %if.then30 ], [ %add.ptr17, %if.end10 ]
  store i8* %9, i8** getelementptr inbounds (%struct.obstack* @block_aux_obstack, i64 0, i32 2), align 8, !dbg !1460, !tbaa !1158
  store i8* %5, i8** %aux, align 8, !dbg !1458, !tbaa !1158
  tail call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %conv, i32 1, i1 false), !dbg !1461
  ret void, !dbg !1462
}
