define void @clear_edges() #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !3
  %cmp25 = icmp sgt i32 %0, 0
  br i1 %cmp25, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %while.end
  %1 = phi i32 [ %9, %while.end ], [ %0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.end ], [ 0, %entry ]
  %2 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 4
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb1, i64 0, i64 %indvars.iv
  %3 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !0
  %succ = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 5
  %4 = load %struct.edge_def** %succ, align 8, !tbaa !0
  %tobool23 = icmp eq %struct.edge_def* %4, null
  br i1 %tobool23, label %while.end, label %while.body

while.body:                                       ; preds = %for.body, %while.body
  %e2.024 = phi %struct.edge_def* [ %5, %while.body ], [ %4, %for.body ]
  %succ_next = getelementptr inbounds %struct.edge_def* %e2.024, i64 0, i32 1
  %5 = load %struct.edge_def** %succ_next, align 8, !tbaa !0
  %6 = load i32* @n_edges, align 4, !tbaa !3
  %dec.i = add nsw i32 %6, -1
  store i32 %dec.i, i32* @n_edges, align 4, !tbaa !3
  %7 = bitcast %struct.edge_def* %e2.024 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 64, i32 8, i1 false) #3
  %8 = load %struct.edge_def** @first_deleted_edge, align 8, !tbaa !0
  store %struct.edge_def* %8, %struct.edge_def** %succ_next, align 8, !tbaa !0
  store %struct.edge_def* %e2.024, %struct.edge_def** @first_deleted_edge, align 8, !tbaa !0
  %tobool = icmp eq %struct.edge_def* %5, null
  br i1 %tobool, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.body
  %.pre = load i32* @n_basic_blocks, align 4, !tbaa !3
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %for.body
  %9 = phi i32 [ %.pre, %while.cond.while.end_crit_edge ], [ %1, %for.body ]
  %pred = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %10, %9
  %11 = bitcast %struct.edge_def** %pred to i8*
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 16, i32 8, i1 false)
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %while.end, %entry
  %12 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8, !tbaa !0
  %tobool521 = icmp eq %struct.edge_def* %12, null
  br i1 %tobool521, label %while.end9, label %while.body6

while.body6:                                      ; preds = %for.end, %while.body6
  %e.022 = phi %struct.edge_def* [ %13, %while.body6 ], [ %12, %for.end ]
  %succ_next8 = getelementptr inbounds %struct.edge_def* %e.022, i64 0, i32 1
  %13 = load %struct.edge_def** %succ_next8, align 8, !tbaa !0
  %14 = load i32* @n_edges, align 4, !tbaa !3
  %dec.i19 = add nsw i32 %14, -1
  store i32 %dec.i19, i32* @n_edges, align 4, !tbaa !3
  %15 = bitcast %struct.edge_def* %e.022 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 64, i32 8, i1 false) #3
  %16 = load %struct.edge_def** @first_deleted_edge, align 8, !tbaa !0
  store %struct.edge_def* %16, %struct.edge_def** %succ_next8, align 8, !tbaa !0
  store %struct.edge_def* %e.022, %struct.edge_def** @first_deleted_edge, align 8, !tbaa !0
  %tobool5 = icmp eq %struct.edge_def* %13, null
  br i1 %tobool5, label %while.end9, label %while.body6

while.end9:                                       ; preds = %while.body6, %for.end
  store %struct.edge_def* null, %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 16, !tbaa !0
  store %struct.edge_def* null, %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8, !tbaa !0
  %17 = load i32* @n_edges, align 4, !tbaa !3
  %tobool10 = icmp eq i32 %17, 0
  br i1 %tobool10, label %if.end, label %if.then

if.then:                                          ; preds = %while.end9
  tail call void @fancy_abort(i8* getelementptr inbounds ([47 x i8]* @.str, i64 0, i64 0), i32 198, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.clear_edges, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %while.end9
  ret void
}
