define void @predict_edge(%struct.edge_def* nocapture %e, i32 %predictor, i32 %probability) #0 {
entry:
  %src = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 2
  %0 = load %struct.basic_block_def** %src, align 8, !tbaa !0
  %end = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 1
  %1 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %1) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 6
  %2 = load i32* %flags, align 4, !tbaa !3
  %and = and i32 %2, 1
  %tobool1 = icmp eq i32 %and, 0
  %sub = sub nsw i32 10000, %probability
  %probability.sub = select i1 %tobool1, i32 %probability, i32 %sub
  tail call void @predict_insn(%struct.rtx_def* %1, i32 %predictor, i32 %probability.sub) #7
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}
