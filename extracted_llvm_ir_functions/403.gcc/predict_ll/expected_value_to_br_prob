define void @expected_value_to_br_prob() #0 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #5
  %tobool91 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool91, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %ev_reg.094 = phi %struct.rtx_def* [ %ev_reg.1, %for.inc ], [ null, %entry ]
  %ev.093 = phi %struct.rtx_def* [ %ev.1, %for.inc ], [ null, %entry ]
  %insn.092 = phi %struct.rtx_def* [ %13, %for.inc ], [ %call, %entry ]
  %0 = bitcast %struct.rtx_def* %insn.092 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 37, label %sw.bb
    i32 36, label %for.inc
    i32 33, label %lor.lhs.false
  ]

sw.bb:                                            ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.092, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !3
  %cmp = icmp eq i32 %1, -79
  br i1 %cmp, label %if.then, label %for.inc

if.then:                                          ; preds = %sw.bb
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.092, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx5, align 8, !tbaa !0
  %call6 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn.092) #5
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %cmp12 = icmp eq %struct.rtx_def* %ev.093, null
  br i1 %cmp12, label %for.inc, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %call14 = tail call i32 @any_condjump_p(%struct.rtx_def* %insn.092) #5
  %tobool15 = icmp eq i32 %call14, 0
  br i1 %tobool15, label %for.inc, label %sw.epilog

sw.default:                                       ; preds = %for.body
  %tobool18 = icmp eq %struct.rtx_def* %ev.093, null
  br i1 %tobool18, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.default
  %call19 = tail call i32 @reg_set_p(%struct.rtx_def* %ev_reg.094, %struct.rtx_def* %insn.092) #5
  %tobool20 = icmp eq i32 %call19, 0
  %ev.0. = select i1 %tobool20, %struct.rtx_def* %ev.093, %struct.rtx_def* null
  br label %for.inc

sw.epilog:                                        ; preds = %lor.lhs.false13
  %call23 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %insn.092) #5
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %call23, i64 0, i32 1, i64 1
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx26, align 8, !tbaa !0
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx29, align 8, !tbaa !0
  %call30 = tail call %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %insn.092, %struct.rtx_def* %5, i32 0, %struct.rtx_def** null, %struct.rtx_def* %ev_reg.094) #5
  %tobool31 = icmp eq %struct.rtx_def* %call30, null
  br i1 %tobool31, label %for.inc, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %sw.epilog
  %fld33 = getelementptr inbounds %struct.rtx_def* %call30, i64 0, i32 1
  %rtx35 = bitcast [1 x %union.rtunion_def]* %fld33 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx35, align 8, !tbaa !0
  %cmp36 = icmp eq %struct.rtx_def* %6, %ev_reg.094
  br i1 %cmp36, label %lor.lhs.false37, label %for.inc

lor.lhs.false37:                                  ; preds = %lor.lhs.false32
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %call30, i64 0, i32 1, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx40, align 8, !tbaa !0
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load41 = load i32* %8, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 54
  br i1 %cmp43, label %if.end45, label %for.inc

if.end45:                                         ; preds = %lor.lhs.false37
  %9 = bitcast %struct.rtx_def* %call30 to i32*
  %bf.load46 = load i32* %9, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %ev.093, i64 0, i32 1, i64 1
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx50, align 8, !tbaa !0
  %call54 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear47, i32 0, %struct.rtx_def* %10, %struct.rtx_def* %7) #5
  %call55 = tail call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %call54) #5
  %11 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !0
  %cmp56 = icmp eq %struct.rtx_def* %call55, %11
  %12 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %cmp58 = icmp eq %struct.rtx_def* %call55, %12
  %or.cond = or i1 %cmp56, %cmp58
  br i1 %or.cond, label %if.end60, label %if.then59

if.then59:                                        ; preds = %if.end45
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), i32 608, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.expected_value_to_br_prob, i64 0, i64 0)) #6
  unreachable

if.end60:                                         ; preds = %if.end45
  %.sub.i = select i1 %cmp56, i32 9001, i32 999
  tail call void @predict_insn(%struct.rtx_def* %insn.092, i32 6, i32 %.sub.i) #5
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body, %sw.default, %lor.lhs.false37, %lor.lhs.false32, %sw.epilog, %lor.lhs.false13, %lor.lhs.false, %sw.bb, %if.then, %if.end60
  %ev.1 = phi %struct.rtx_def* [ null, %sw.default ], [ null, %lor.lhs.false ], [ %ev.093, %lor.lhs.false32 ], [ %ev.093, %lor.lhs.false37 ], [ %ev.093, %if.end60 ], [ %ev.093, %sw.epilog ], [ %ev.093, %lor.lhs.false13 ], [ %2, %if.then ], [ %ev.093, %sw.bb ], [ null, %for.body ], [ %ev.0., %land.lhs.true ]
  %ev_reg.1 = phi %struct.rtx_def* [ %ev_reg.094, %sw.default ], [ %ev_reg.094, %lor.lhs.false ], [ %ev_reg.094, %lor.lhs.false32 ], [ %ev_reg.094, %lor.lhs.false37 ], [ %ev_reg.094, %if.end60 ], [ %ev_reg.094, %sw.epilog ], [ %ev_reg.094, %lor.lhs.false13 ], [ %3, %if.then ], [ %ev_reg.094, %sw.bb ], [ %ev_reg.094, %for.body ], [ %ev_reg.094, %land.lhs.true ]
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %insn.092, i64 0, i32 1, i64 2
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx65, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}
