define internal fastcc i32 @get_one_coefficient(%union.tree_node* nocapture %node, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %type) #0 {
entry:
  %tree_op_code = alloca i32, align 4
  %code = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  %tobool = icmp eq i32* %type, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 %bf.clear, i32* %type, align 4, !tbaa !11
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  switch i32 %bf.clear, label %return [
    i32 34, label %if.then1
    i32 25, label %if.then15
    i32 116, label %if.then20
    i32 59, label %if.then25
    i32 60, label %if.then47
    i32 61, label %if.then69
  ]

if.then1:                                         ; preds = %if.end
  %outer_loop = getelementptr inbounds %struct.def_use* %du, i64 0, i32 0
  %1 = load %union.tree_node** %outer_loop, align 8, !tbaa !0
  %name = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 8
  %2 = load %union.tree_node** %name, align 8, !tbaa !0
  %id = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds i8** %id, i64 1
  %4 = load i8** %3, align 8, !tbaa !0
  %call = call fastcc i32 @have_induction_variable(%union.tree_node* %1, i8* %4) #7
  %cmp2 = icmp sgt i32 %call, -1
  br i1 %cmp2, label %if.then3, label %return

if.then3:                                         ; preds = %if.then1
  %position = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 0
  store i32 %call, i32* %position, align 4, !tbaa !4
  %variable = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 3
  store i8* %4, i8** %variable, align 8, !tbaa !0
  %coefficient = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 1
  store i32 1, i32* %coefficient, align 4, !tbaa !4
  %offset = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 2
  %5 = load i32* %offset, align 4, !tbaa !4
  %cmp9 = icmp eq i32 %5, -2147483648
  br i1 %cmp9, label %if.then10, label %return

if.then10:                                        ; preds = %if.then3
  store i32 0, i32* %offset, align 4, !tbaa !4
  br label %return

if.then15:                                        ; preds = %if.end
  %int_cst16 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst16 to i64*
  %6 = load i64* %low, align 8, !tbaa !3
  %conv = trunc i64 %6 to i32
  br label %return

if.then20:                                        ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %7 = load %union.tree_node** %arrayidx, align 8, !tbaa !0
  %call21 = call fastcc i32 @get_one_coefficient(%union.tree_node* %7, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %tree_op_code) #7
  br label %return

if.then25:                                        ; preds = %if.end
  %operands27 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 2
  %arrayidx28 = bitcast i32* %operands27 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx28, align 8, !tbaa !0
  %call29 = call fastcc i32 @get_one_coefficient(%union.tree_node* %8, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %tree_op_code) #7
  %9 = load i32* %tree_op_code, align 4, !tbaa !11
  %cmp30 = icmp eq i32 %9, 25
  br i1 %cmp30, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.then25
  %offset33 = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 2
  store i32 %call29, i32* %offset33, align 4, !tbaa !4
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.then25
  %arrayidx37 = getelementptr inbounds i32* %operands27, i64 2
  %10 = bitcast i32* %arrayidx37 to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !0
  %call38 = call fastcc i32 @get_one_coefficient(%union.tree_node* %11, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %tree_op_code) #7
  %12 = load i32* %tree_op_code, align 4, !tbaa !11
  %cmp39 = icmp eq i32 %12, 25
  br i1 %cmp39, label %if.then41, label %return

if.then41:                                        ; preds = %if.end34
  %offset42 = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 2
  store i32 %call38, i32* %offset42, align 4, !tbaa !4
  br label %return

if.then47:                                        ; preds = %if.end
  %operands49 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 2
  %arrayidx50 = bitcast i32* %operands49 to %union.tree_node**
  %13 = load %union.tree_node** %arrayidx50, align 8, !tbaa !0
  %call51 = call fastcc i32 @get_one_coefficient(%union.tree_node* %13, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %tree_op_code) #7
  %14 = load i32* %tree_op_code, align 4, !tbaa !11
  %cmp52 = icmp eq i32 %14, 25
  br i1 %cmp52, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.then47
  %offset55 = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 2
  store i32 %call51, i32* %offset55, align 4, !tbaa !4
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.then47
  %arrayidx59 = getelementptr inbounds i32* %operands49, i64 2
  %15 = bitcast i32* %arrayidx59 to %union.tree_node**
  %16 = load %union.tree_node** %15, align 8, !tbaa !0
  %call60 = call fastcc i32 @get_one_coefficient(%union.tree_node* %16, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %tree_op_code) #7
  %17 = load i32* %tree_op_code, align 4, !tbaa !11
  %cmp61 = icmp eq i32 %17, 25
  br i1 %cmp61, label %if.then63, label %return

if.then63:                                        ; preds = %if.end56
  %sub = sub nsw i32 0, %call60
  %offset64 = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 2
  store i32 %sub, i32* %offset64, align 4, !tbaa !4
  br label %return

if.then69:                                        ; preds = %if.end
  %operands71 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 2
  %arrayidx72 = bitcast i32* %operands71 to %union.tree_node**
  %18 = load %union.tree_node** %arrayidx72, align 8, !tbaa !0
  %call73 = call fastcc i32 @get_one_coefficient(%union.tree_node* %18, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %tree_op_code) #7
  %19 = load i32* %tree_op_code, align 4, !tbaa !11
  %cmp74 = icmp eq i32 %19, 34
  %arrayidx80 = getelementptr inbounds i32* %operands71, i64 2
  %20 = bitcast i32* %arrayidx80 to %union.tree_node**
  %21 = load %union.tree_node** %20, align 8, !tbaa !0
  %call81 = call fastcc i32 @get_one_coefficient(%union.tree_node* %21, %struct.subscript* %coefficients, %struct.def_use* %du, i32* %tree_op_code) #7
  br i1 %cmp74, label %if.then87, label %if.else89

if.then87:                                        ; preds = %if.then69
  %coefficient88 = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 1
  store i32 %call81, i32* %coefficient88, align 4, !tbaa !4
  br label %return

if.else89:                                        ; preds = %if.then69
  %22 = load i32* %tree_op_code, align 4, !tbaa !11
  %cmp82 = icmp eq i32 %22, 34
  br i1 %cmp82, label %if.then91, label %return

if.then91:                                        ; preds = %if.else89
  %coefficient92 = getelementptr inbounds %struct.subscript* %coefficients, i64 0, i32 1
  store i32 %call73, i32* %coefficient92, align 4, !tbaa !4
  br label %return

return:                                           ; preds = %if.else89, %if.then87, %if.then91, %if.end, %if.end56, %if.then63, %if.end34, %if.then41, %if.then1, %if.then10, %if.then3, %if.then20, %if.then15
  %retval.0 = phi i32 [ %conv, %if.then15 ], [ %call21, %if.then20 ], [ %call, %if.then3 ], [ %call, %if.then10 ], [ %call, %if.then1 ], [ 0, %if.then41 ], [ 0, %if.end34 ], [ 0, %if.then63 ], [ 0, %if.end56 ], [ 0, %if.end ], [ 0, %if.else89 ], [ 0, %if.then91 ], [ 0, %if.then87 ]
  ret i32 %retval.0
}
