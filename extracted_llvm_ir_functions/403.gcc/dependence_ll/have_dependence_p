define i32 @have_dependence_p(%struct.rtx_def* nocapture %dest_rtx, %struct.rtx_def* nocapture %src_rtx, i32* nocapture %direction, i32* nocapture %distance) #3 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dest_rtx, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !0
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2, i32 0
  %3 = load i64* %rtwint, align 8, !tbaa !3
  %sub = add nsw i64 %3, 4294967295
  %conv = trunc i64 %sub to i32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dest_idx.0 = phi i32 [ %conv, %if.then ], [ 0, %entry ]
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %src_rtx, i64 0, i32 1, i64 3
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx14, align 8, !tbaa !0
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 1
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx17, align 8, !tbaa !0
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load18 = load i32* %6, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 66
  br i1 %cmp20, label %if.end34, label %return

if.end34:                                         ; preds = %if.end
  %rtwint31 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 2, i32 0
  %7 = load i64* %rtwint31, align 8, !tbaa !3
  %sub32 = add nsw i64 %7, 4294967295
  %conv33 = trunc i64 %sub32 to i32
  %8 = and i32 %conv33, %dest_idx.0
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %return, label %if.end40

if.end40:                                         ; preds = %if.end34
  %sub41 = sub nsw i32 0, %dest_idx.0
  %idxprom = sext i32 %sub41 to i64
  %10 = load %struct.varray_head_tag** @dep_chain, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 4
  %generic = bitcast %union.varray_data_tag* %data to [1 x i8*]*
  %arrayidx42 = getelementptr inbounds [1 x i8*]* %generic, i64 0, i64 %idxprom
  %11 = load i8** %arrayidx42, align 8, !tbaa !0
  %tobool64 = icmp eq i8* %11, null
  br i1 %tobool64, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end40
  %sub43 = sub i64 -4294967295, %7
  %sext = shl i64 %sub43, 32
  %12 = bitcast i8* %11 to %struct.dependence*
  %idxprom44 = ashr exact i64 %sext, 32
  %arrayidx47 = getelementptr inbounds [1 x i8*]* %generic, i64 0, i64 %idxprom44
  %13 = load i8** %arrayidx47, align 8, !tbaa !0
  %14 = bitcast i8* %13 to %struct.dependence*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %dep_ptr.065 = phi %struct.dependence* [ %12, %for.body.lr.ph ], [ %15, %for.inc ]
  %cmp48 = icmp eq %struct.dependence* %dep_ptr.065, %14
  br i1 %cmp48, label %return, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.dependence* %dep_ptr.065, i64 0, i32 5
  %15 = load %struct.dependence** %next, align 8, !tbaa !0
  %tobool = icmp eq %struct.dependence* %15, null
  br i1 %tobool, label %return, label %for.body

return:                                           ; preds = %if.end40, %for.body, %for.inc, %if.end, %if.end34
  %retval.0 = phi i32 [ 0, %if.end34 ], [ 0, %if.end ], [ 0, %if.end40 ], [ 1, %for.body ], [ 0, %for.inc ]
  ret i32 %retval.0
}
