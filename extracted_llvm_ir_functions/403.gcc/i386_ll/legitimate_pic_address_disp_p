define i32 @legitimate_pic_address_disp_p(%struct.rtx_def* nocapture %disp) #2 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !0
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %.phi.trans.insert154 = bitcast %struct.rtx_def* %disp to i32*
  %bf.load39.pre = load i32* %.phi.trans.insert154, align 8
  br i1 %tobool, label %if.end38, label %if.then

if.then:                                          ; preds = %entry
  %bf.clear = and i32 %bf.load39.pre, 65535
  %cmp = icmp eq i32 %bf.clear, 58
  br i1 %cmp, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def* %disp, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %.phi.trans.insert152 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load2.pre = load i32* %.phi.trans.insert152, align 8
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %bf.load2 = phi i32 [ %bf.load2.pre, %if.then1 ], [ %bf.load39.pre, %if.then ]
  %x.0 = phi %struct.rtx_def* [ %1, %if.then1 ], [ %disp, %if.then ]
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 75
  br i1 %cmp4, label %land.lhs.true, label %if.end32

land.lhs.true:                                    ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 1
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx7, align 8, !tbaa !4
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load8 = load i32* %3, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 54
  %4 = load i32* @ix86_cmodel, align 4, !tbaa !10
  %cmp12 = icmp eq i32 %4, 5
  %or.cond = and i1 %cmp10, %cmp12
  br i1 %or.cond, label %land.lhs.true13, label %if.end32

land.lhs.true13:                                  ; preds = %land.lhs.true
  %rtwint = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !14
  %.off = add i64 %5, 1073741823
  %6 = icmp ult i64 %.off, 2147483647
  br i1 %6, label %if.then28, label %if.end32

if.then28:                                        ; preds = %land.lhs.true13
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx31, align 8, !tbaa !4
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %land.lhs.true13, %land.lhs.true, %if.end
  %x.1 = phi %struct.rtx_def* [ %7, %if.then28 ], [ %x.0, %land.lhs.true13 ], [ %x.0, %land.lhs.true ], [ %x.0, %if.end ]
  %call = tail call fastcc i32 @local_symbolic_operand(%struct.rtx_def* %x.1) #10
  %tobool35 = icmp eq i32 %call, 0
  br i1 %tobool35, label %if.end38, label %return

if.end38:                                         ; preds = %entry, %if.end32
  %bf.clear40 = and i32 %bf.load39.pre, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 58
  br i1 %cmp41, label %if.end43, label %return

if.end43:                                         ; preds = %if.end38
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %disp, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx46, align 8, !tbaa !4
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load50 = load i32* %9, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  br i1 %tobool, label %if.end80, label %if.then49

if.then49:                                        ; preds = %if.end43
  %cmp52 = icmp eq i32 %bf.clear51, 42
  br i1 %cmp52, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.then49
  %fld53 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1
  %rtvec = bitcast [1 x %union.rtunion_def]* %fld53 to %struct.rtvec_def**
  %10 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %num_elem = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0
  %11 = load i32* %num_elem, align 4, !tbaa !0
  %cmp55 = icmp eq i32 %11, 1
  br i1 %cmp55, label %lor.lhs.false56, label %return

lor.lhs.false56:                                  ; preds = %lor.lhs.false
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx58 to i32*
  %12 = load i32* %rtint, align 4, !tbaa !0
  %cmp59 = icmp eq i32 %12, 15
  br i1 %cmp59, label %if.end61, label %return

if.end61:                                         ; preds = %lor.lhs.false56
  %arrayidx65 = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 1, i64 0
  %13 = load %struct.rtx_def** %arrayidx65, align 8, !tbaa !4
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load66 = load i32* %14, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %bf.clear67.off = add i32 %bf.clear67, -67
  %switch = icmp ult i32 %bf.clear67.off, 2
  %. = zext i1 %switch to i32
  ret i32 %.

if.end80:                                         ; preds = %if.end43
  %cmp83 = icmp eq i32 %bf.clear51, 75
  br i1 %cmp83, label %if.then84, label %if.end96

if.then84:                                        ; preds = %if.end80
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx87, align 8, !tbaa !4
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load88 = load i32* %16, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 54
  br i1 %cmp90, label %if.end92, label %return

if.end92:                                         ; preds = %if.then84
  %arrayidx94 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx95, align 8, !tbaa !4
  %.phi.trans.insert = bitcast %struct.rtx_def* %17 to i32*
  %bf.load97.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end96

if.end96:                                         ; preds = %if.end92, %if.end80
  %bf.load97 = phi i32 [ %bf.load97.pre, %if.end92 ], [ %bf.load50, %if.end80 ]
  %disp.addr.0 = phi %struct.rtx_def* [ %17, %if.end92 ], [ %8, %if.end80 ]
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 42
  br i1 %cmp99, label %lor.lhs.false100, label %return

lor.lhs.false100:                                 ; preds = %if.end96
  %fld101 = getelementptr inbounds %struct.rtx_def* %disp.addr.0, i64 0, i32 1
  %rtvec103 = bitcast [1 x %union.rtunion_def]* %fld101 to %struct.rtvec_def**
  %18 = load %struct.rtvec_def** %rtvec103, align 8, !tbaa !4
  %num_elem104 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 0
  %19 = load i32* %num_elem104, align 4, !tbaa !0
  %cmp105 = icmp eq i32 %19, 1
  br i1 %cmp105, label %if.end107, label %return

if.end107:                                        ; preds = %lor.lhs.false100
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %disp.addr.0, i64 0, i32 1, i64 1
  %rtint110 = bitcast %union.rtunion_def* %arrayidx109 to i32*
  %20 = load i32* %rtint110, align 4, !tbaa !0
  switch i32 %20, label %return [
    i32 6, label %sw.bb
    i32 7, label %sw.bb119
  ]

sw.bb:                                            ; preds = %if.end107
  %arrayidx115 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 1, i64 0
  %21 = load %struct.rtx_def** %arrayidx115, align 8, !tbaa !4
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load116 = load i32* %22, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 68
  %conv = zext i1 %cmp118 to i32
  br label %return

sw.bb119:                                         ; preds = %if.end107
  %arrayidx124 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 1, i64 0
  %23 = load %struct.rtx_def** %arrayidx124, align 8, !tbaa !4
  %call128 = tail call fastcc i32 @local_symbolic_operand(%struct.rtx_def* %23) #10
  br label %return

return:                                           ; preds = %if.end107, %if.end96, %lor.lhs.false100, %if.then84, %if.then49, %lor.lhs.false, %lor.lhs.false56, %if.end38, %if.end32, %sw.bb119, %sw.bb
  %retval.0 = phi i32 [ %call128, %sw.bb119 ], [ %conv, %sw.bb ], [ 1, %if.end32 ], [ 0, %if.end38 ], [ 0, %lor.lhs.false56 ], [ 0, %lor.lhs.false ], [ 0, %if.then49 ], [ 0, %if.then84 ], [ 0, %lor.lhs.false100 ], [ 0, %if.end96 ], [ 0, %if.end107 ]
  ret i32 %retval.0
}
