define void @ix86_split_lshrdi(%struct.rtx_def** nocapture %operands, %struct.rtx_def* %scratch) #1 {
entry:
  %low = alloca [2 x %struct.rtx_def*], align 16
  %high = alloca [2 x %struct.rtx_def*], align 16
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %if.then, label %if.else41

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay1 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 2, %struct.rtx_def** %arraydecay, %struct.rtx_def** %arraydecay1) #10
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %rtwint = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %3 = load i64* %rtwint, align 8, !tbaa !14
  %.tr = trunc i64 %3 to i32
  %conv = and i32 %.tr, 63
  %cmp4 = icmp ugt i32 %conv, 31
  br i1 %cmp4, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  %4 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !4
  %arrayidx8 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 1
  %5 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !4
  %call = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %4, %struct.rtx_def* %5) #9
  %6 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !4
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call10 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %6, %struct.rtx_def* %7) #9
  %cmp11 = icmp ugt i32 %conv, 32
  br i1 %cmp11, label %if.then13, label %if.end90

if.then13:                                        ; preds = %if.then6
  %sub = add nsw i32 %conv, -32
  %conv16 = sext i32 %sub to i64
  %call17 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv16) #9
  %call18 = call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %4, %struct.rtx_def* %4, %struct.rtx_def* %call17) #9
  %call19 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #9
  br label %if.end90

if.else:                                          ; preds = %if.then
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !4
  %arrayidx21 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %9 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !4
  %call22 = call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9) #9
  %tobool = icmp eq i32 %call22, 0
  br i1 %tobool, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.else
  %10 = load %struct.rtx_def** %operands, align 8, !tbaa !4
  %11 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !4
  %call26 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %11) #9
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then23
  %12 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !4
  %13 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !4
  %conv30111 = zext i32 %conv to i64
  %call31 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv30111) #9
  %call32 = call %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def* %12, %struct.rtx_def* %13, %struct.rtx_def* %call31) #9
  %call33 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call32) #9
  %call37 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv30111) #9
  %call38 = call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %13, %struct.rtx_def* %13, %struct.rtx_def* %call37) #9
  %call39 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call38) #9
  br label %if.end90

if.else41:                                        ; preds = %entry
  %14 = load %struct.rtx_def** %operands, align 8, !tbaa !4
  %arrayidx43 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %15 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !4
  %call44 = call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %15) #9
  %tobool45 = icmp eq i32 %call44, 0
  br i1 %tobool45, label %if.then46, label %if.end50

if.then46:                                        ; preds = %if.else41
  %16 = load %struct.rtx_def** %operands, align 8, !tbaa !4
  %17 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !4
  %call49 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %16, %struct.rtx_def* %17) #9
  br label %if.end50

if.end50:                                         ; preds = %if.else41, %if.then46
  %arraydecay51 = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay52 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arraydecay51, %struct.rtx_def** %arraydecay52) #10
  %18 = load %struct.rtx_def** %arraydecay51, align 16, !tbaa !4
  %19 = load %struct.rtx_def** %arraydecay52, align 16, !tbaa !4
  %20 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %call56 = call %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %20) #9
  %call57 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call56) #9
  %21 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %call61 = call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %19, %struct.rtx_def* %19, %struct.rtx_def* %21) #9
  %call62 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call61) #9
  %22 = load i32* @ix86_arch, align 4, !tbaa !0
  %shl = shl i32 1, %22
  %and63 = and i32 %shl, 104
  %tobool64 = icmp eq i32 %and63, 0
  br i1 %tobool64, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.end50
  %23 = load i32* @target_flags, align 4, !tbaa !0
  %and65 = and i32 %23, 327680
  %cmp66 = icmp eq i32 %and65, 0
  br i1 %cmp66, label %if.else83, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end50
  %24 = load i32* @no_new_pseudos, align 4, !tbaa !0
  %tobool68 = icmp ne i32 %24, 0
  %tobool70 = icmp eq %struct.rtx_def* %scratch, null
  %or.cond = and i1 %tobool68, %tobool70
  br i1 %or.cond, label %if.else83, label %if.then71

if.then71:                                        ; preds = %land.lhs.true
  %tobool72 = icmp eq i32 %24, 0
  %25 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br i1 %tobool72, label %if.then73, label %if.else75

if.then73:                                        ; preds = %if.then71
  %call74 = call %struct.rtx_def* @force_reg(i32 4, %struct.rtx_def* %25) #9
  br label %if.end77

if.else75:                                        ; preds = %if.then71
  %call76 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %scratch, %struct.rtx_def* %25) #9
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.then73
  %scratch.addr.0 = phi %struct.rtx_def* [ %scratch, %if.else75 ], [ %call74, %if.then73 ]
  %26 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %call81 = call %struct.rtx_def* @gen_x86_shift_adj_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %26, %struct.rtx_def* %scratch.addr.0) #9
  %call82 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call81) #9
  br label %if.end90

if.else83:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %27 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %call87 = call %struct.rtx_def* @gen_x86_shift_adj_2(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %27) #9
  %call88 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call87) #9
  br label %if.end90

if.end90:                                         ; preds = %if.end77, %if.else83, %if.end27, %if.then13, %if.then6
  ret void
}
