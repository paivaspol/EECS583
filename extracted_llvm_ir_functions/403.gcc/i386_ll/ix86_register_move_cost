define i32 @ix86_register_move_cost(i32 %mode, i32 %class1, i32 %class2) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !3295), !dbg !9521
  tail call void @llvm.dbg.value(metadata !{i32 %class1}, i64 0, metadata !3296), !dbg !9522
  tail call void @llvm.dbg.value(metadata !{i32 %class2}, i64 0, metadata !3297), !dbg !9522
  %call = tail call i32 @ix86_secondary_memory_needed(i32 %class1, i32 %class2, i32 %mode, i32 0) #11, !dbg !9523
  %tobool = icmp eq i32 %call, 0, !dbg !9523
  br i1 %tobool, label %if.end61, label %if.then, !dbg !9523

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1550, i64 0, metadata !3298), !dbg !9524
  %call1 = tail call i32 @reg_classes_intersect_p(i32 %class1, i32 12) #10, !dbg !9525
  %tobool2 = icmp eq i32 %call1, 0, !dbg !9525
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !9525

cond.true:                                        ; preds = %if.then
  %idxprom = sext i32 %mode to i64, !dbg !9525
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom, !dbg !9525
  %0 = load i32* %arrayidx, align 4, !dbg !9525, !tbaa !5198
  %cmp = icmp eq i32 %0, 5, !dbg !9525
  br i1 %cmp, label %cond.end17, label %lor.rhs, !dbg !9525

lor.rhs:                                          ; preds = %cond.true
  %cmp5 = icmp eq i32 %0, 6, !dbg !9525
  %phitmp = select i1 %cmp5, i32 2, i32 1, !dbg !9525
  br label %cond.end17, !dbg !9525

cond.false:                                       ; preds = %if.then
  %cmp6 = icmp eq i32 %mode, 18, !dbg !9525
  %1 = sext i32 %mode to i64, !dbg !9525
  %idxprom10 = select i1 %cmp6, i64 17, i64 %1, !dbg !9525
  %arrayidx11 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom10, !dbg !9525
  %2 = load i8* %arrayidx11, align 1, !dbg !9525, !tbaa !4348
  %conv = zext i8 %2 to i32, !dbg !9525
  %3 = load i32* @target_flags, align 4, !dbg !9525, !tbaa !4347
  %and = lshr i32 %3, 23, !dbg !9525
  %4 = and i32 %and, 4, !dbg !9525
  %5 = add i32 %4, 4, !dbg !9525
  %add = add i32 %conv, -1, !dbg !9525
  %sub = add i32 %add, %5, !dbg !9525
  %div = sdiv i32 %sub, %5, !dbg !9525
  br label %cond.end17, !dbg !9525

cond.end17:                                       ; preds = %cond.true, %lor.rhs, %cond.false
  %cond18 = phi i32 [ %div, %cond.false ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ], !dbg !9525
  %call19 = tail call i32 @reg_classes_intersect_p(i32 %class2, i32 12) #10, !dbg !9525
  %tobool20 = icmp eq i32 %call19, 0, !dbg !9525
  br i1 %tobool20, label %cond.true21, label %cond.false33, !dbg !9525

cond.true21:                                      ; preds = %cond.end17
  %idxprom22 = sext i32 %mode to i64, !dbg !9525
  %arrayidx23 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom22, !dbg !9525
  %6 = load i32* %arrayidx23, align 4, !dbg !9525, !tbaa !5198
  %cmp24 = icmp eq i32 %6, 5, !dbg !9525
  br i1 %cmp24, label %cond.end52, label %lor.rhs26, !dbg !9525

lor.rhs26:                                        ; preds = %cond.true21
  %cmp29 = icmp eq i32 %6, 6, !dbg !9525
  %phitmp103 = select i1 %cmp29, i32 2, i32 1, !dbg !9525
  br label %cond.end52, !dbg !9525

cond.false33:                                     ; preds = %cond.end17
  %cmp34 = icmp eq i32 %mode, 18, !dbg !9525
  %7 = sext i32 %mode to i64, !dbg !9525
  %idxprom40 = select i1 %cmp34, i64 17, i64 %7, !dbg !9525
  %arrayidx41 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom40, !dbg !9525
  %8 = load i8* %arrayidx41, align 1, !dbg !9525, !tbaa !4348
  %conv42 = zext i8 %8 to i32, !dbg !9525
  %9 = load i32* @target_flags, align 4, !dbg !9525, !tbaa !4347
  %and43 = lshr i32 %9, 23, !dbg !9525
  %10 = and i32 %and43, 4, !dbg !9525
  %11 = add i32 %10, 4, !dbg !9525
  %add46 = add i32 %conv42, -1, !dbg !9525
  %sub47 = add i32 %add46, %11, !dbg !9525
  %div51 = sdiv i32 %sub47, %11, !dbg !9525
  br label %cond.end52, !dbg !9525

cond.end52:                                       ; preds = %cond.true21, %lor.rhs26, %cond.false33
  %cond53 = phi i32 [ %div51, %cond.false33 ], [ 2, %cond.true21 ], [ %phitmp103, %lor.rhs26 ], !dbg !9525
  %cmp54 = icmp sgt i32 %cond18, %cond53, !dbg !9525
  tail call void @llvm.dbg.value(metadata !9526, i64 0, metadata !3298), !dbg !9527
  %. = select i1 %cmp54, i32 20, i32 0, !dbg !9525
  %call57 = tail call i32 @ix86_memory_move_cost(i32 %mode, i32 %class1, i32 0) #11, !dbg !9528
  %call58 = tail call i32 @ix86_memory_move_cost(i32 %mode, i32 %class2, i32 1) #11, !dbg !9529
  %add59 = add nsw i32 %call58, %call57, !dbg !9529
  %add60 = add nsw i32 %add59, %., !dbg !9529
  br label %return, !dbg !9529

if.end61:                                         ; preds = %entry
  %call62 = tail call i32 @reg_class_subset_p(i32 %class1, i32 17) #10, !dbg !9530
  %call63 = tail call i32 @reg_class_subset_p(i32 %class2, i32 17) #10, !dbg !9530
  %cmp64 = icmp eq i32 %call62, %call63, !dbg !9530
  br i1 %cmp64, label %lor.lhs.false, label %if.then70, !dbg !9530

lor.lhs.false:                                    ; preds = %if.end61
  %call66 = tail call i32 @reg_class_subset_p(i32 %class1, i32 16) #10, !dbg !9531
  %call67 = tail call i32 @reg_class_subset_p(i32 %class2, i32 16) #10, !dbg !9531
  %cmp68 = icmp eq i32 %call66, %call67, !dbg !9531
  br i1 %cmp68, label %if.end71, label %if.then70, !dbg !9531

if.then70:                                        ; preds = %lor.lhs.false, %if.end61
  %12 = load %struct.processor_costs** @ix86_cost, align 8, !dbg !9532, !tbaa !4365
  %mmxsse_to_integer = getelementptr inbounds %struct.processor_costs* %12, i64 0, i32 23, !dbg !9532
  %13 = load i32* %mmxsse_to_integer, align 4, !dbg !9532, !tbaa !4347
  br label %return, !dbg !9532

if.end71:                                         ; preds = %lor.lhs.false
  %call72 = tail call i32 @reg_classes_intersect_p(i32 %class1, i32 15) #10, !dbg !9533
  %tobool73 = icmp eq i32 %call72, 0, !dbg !9533
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !9533

if.then74:                                        ; preds = %if.end71
  %14 = load %struct.processor_costs** @ix86_cost, align 8, !dbg !9534, !tbaa !4365
  %fp_move = getelementptr inbounds %struct.processor_costs* %14, i64 0, i32 14, !dbg !9534
  %15 = load i32* %fp_move, align 4, !dbg !9534, !tbaa !4347
  br label %return, !dbg !9534

if.end75:                                         ; preds = %if.end71
  %call76 = tail call i32 @reg_classes_intersect_p(i32 16, i32 %class1) #10, !dbg !9535
  %tobool77 = icmp eq i32 %call76, 0, !dbg !9535
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !9535

if.then78:                                        ; preds = %if.end75
  %16 = load %struct.processor_costs** @ix86_cost, align 8, !dbg !9536, !tbaa !4365
  %sse_move = getelementptr inbounds %struct.processor_costs* %16, i64 0, i32 20, !dbg !9536
  %17 = load i32* %sse_move, align 4, !dbg !9536, !tbaa !4347
  br label %return, !dbg !9536

if.end79:                                         ; preds = %if.end75
  %call80 = tail call i32 @reg_classes_intersect_p(i32 17, i32 %class1) #10, !dbg !9537
  %tobool81 = icmp eq i32 %call80, 0, !dbg !9537
  br i1 %tobool81, label %return, label %if.then82, !dbg !9537

if.then82:                                        ; preds = %if.end79
  %18 = load %struct.processor_costs** @ix86_cost, align 8, !dbg !9538, !tbaa !4365
  %mmx_move = getelementptr inbounds %struct.processor_costs* %18, i64 0, i32 17, !dbg !9538
  %19 = load i32* %mmx_move, align 4, !dbg !9538, !tbaa !4347
  br label %return, !dbg !9538

return:                                           ; preds = %if.end79, %if.then82, %if.then78, %if.then74, %if.then70, %cond.end52
  %retval.0 = phi i32 [ %add60, %cond.end52 ], [ %13, %if.then70 ], [ %15, %if.then74 ], [ %17, %if.then78 ], [ %19, %if.then82 ], [ 2, %if.end79 ]
  ret i32 %retval.0, !dbg !9539
}
