define internal fastcc %struct.rtx_def** @ix86_pent_find_pair(%struct.rtx_def** %e_ready, %struct.rtx_def** %ready, i32 %type, %struct.rtx_def* %first) #1 {
entry:
  %call = tail call fastcc i32 @ix86_safe_length(%struct.rtx_def* %first) #10
  %call4 = tail call fastcc i32 @ix86_safe_length_prefix(%struct.rtx_def* %first) #10
  %add = add nsw i32 %call4, 7
  %cmp = icmp sgt i32 %call, %add
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call5 = tail call fastcc i32 @ix86_safe_memory(%struct.rtx_def* %first) #10
  %call6 = tail call i32 @result_ready_cost(%struct.rtx_def* %first) #9
  %cmp770 = icmp ult %struct.rtx_def** %e_ready, %ready
  br i1 %cmp770, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %cmp23 = icmp sgt i32 %call6, 0
  %cmp25 = icmp eq i32 %call5, 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %mincycles.074 = phi i32 [ 2147483647, %for.body.lr.ph ], [ %mincycles.1, %for.inc ]
  %bestinsnp.073 = phi %struct.rtx_def** [ null, %for.body.lr.ph ], [ %bestinsnp.1, %for.inc ]
  %insnp.071 = phi %struct.rtx_def** [ %e_ready, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %0 = load %struct.rtx_def** %insnp.071, align 8, !tbaa !4
  %call8 = tail call fastcc i32 @ix86_safe_pent_pair(%struct.rtx_def* %0) #10
  %cmp9 = icmp eq i32 %call8, %type
  br i1 %cmp9, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %1 = load %struct.rtx_def** %insnp.071, align 8, !tbaa !4
  %call10 = tail call fastcc i32 @ix86_safe_length(%struct.rtx_def* %1) #10
  %2 = load %struct.rtx_def** %insnp.071, align 8, !tbaa !4
  %call11 = tail call fastcc i32 @ix86_safe_length_prefix(%struct.rtx_def* %2) #10
  %add12 = add nsw i32 %call11, 7
  %cmp13 = icmp sgt i32 %call10, %add12
  br i1 %cmp13, label %for.inc, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  %3 = load %struct.rtx_def** %insnp.071, align 8, !tbaa !4
  %call18 = tail call fastcc i32 @ix86_safe_memory(%struct.rtx_def* %3) #10
  %4 = load %struct.rtx_def** %insnp.071, align 8, !tbaa !4
  %call19 = tail call i32 @result_ready_cost(%struct.rtx_def* %4) #9
  %sub = sub nsw i32 %call6, %call19
  %ispos = icmp sgt i32 %sub, -1
  %neg = sub i32 0, %sub
  %5 = select i1 %ispos, i32 %sub, i32 %neg
  %cmp21 = icmp sgt i32 %call19, 0
  %or.cond66 = and i1 %cmp21, %cmp23
  br i1 %or.cond66, label %if.then24, label %if.end42

if.then24:                                        ; preds = %if.then14
  %cmp27 = icmp eq i32 %call18, 3
  %or.cond67 = and i1 %cmp25, %cmp27
  %add29 = add nsw i32 %5, 2
  %currentcycles.0 = select i1 %or.cond67, i32 %add29, i32 %5
  %cmp33 = icmp eq i32 %call18, 1
  %or.cond68 = and i1 %cmp25, %cmp33
  %or.cond68.not = xor i1 %or.cond68, true
  %cmp35 = icmp eq i32 %type, 0
  %or.cond69 = or i1 %cmp35, %or.cond68.not
  br i1 %or.cond69, label %if.end42, label %land.lhs.true36

land.lhs.true36:                                  ; preds = %if.then24
  %call37 = tail call fastcc i32 @ix86_safe_pent_pair(%struct.rtx_def* %first) #10
  %not.cmp38 = icmp ne i32 %call37, 0
  %add40 = zext i1 %not.cmp38 to i32
  %currentcycles.0.add40 = add nsw i32 %add40, %currentcycles.0
  br label %if.end42

if.end42:                                         ; preds = %land.lhs.true36, %if.then24, %if.then14
  %currentcycles.1 = phi i32 [ %currentcycles.0, %if.then24 ], [ %5, %if.then14 ], [ %currentcycles.0.add40, %land.lhs.true36 ]
  %cmp43 = icmp slt i32 %currentcycles.1, %mincycles.074
  %insnp.0.bestinsnp.0 = select i1 %cmp43, %struct.rtx_def** %insnp.071, %struct.rtx_def** %bestinsnp.073
  %currentcycles.1.mincycles.0 = select i1 %cmp43, i32 %currentcycles.1, i32 %mincycles.074
  br label %for.inc

for.inc:                                          ; preds = %if.end42, %land.lhs.true, %for.body
  %bestinsnp.1 = phi %struct.rtx_def** [ %bestinsnp.073, %land.lhs.true ], [ %bestinsnp.073, %for.body ], [ %insnp.0.bestinsnp.0, %if.end42 ]
  %mincycles.1 = phi i32 [ %mincycles.074, %land.lhs.true ], [ %mincycles.074, %for.body ], [ %currentcycles.1.mincycles.0, %if.end42 ]
  %incdec.ptr = getelementptr inbounds %struct.rtx_def** %insnp.071, i64 -1
  %cmp7 = icmp ult %struct.rtx_def** %incdec.ptr, %ready
  %tobool = icmp eq i32 %mincycles.1, 0
  %or.cond = or i1 %cmp7, %tobool
  br i1 %or.cond, label %return, label %for.body

return:                                           ; preds = %if.end, %for.inc, %entry
  %retval.0 = phi %struct.rtx_def** [ null, %entry ], [ null, %if.end ], [ %bestinsnp.1, %for.inc ]
  ret %struct.rtx_def** %retval.0
}
