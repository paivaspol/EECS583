define %struct.rtx_def* @ix86_expand_builtin(%union.tree_node* nocapture %exp, %struct.rtx_def* %target, %struct.rtx_def* nocapture %subtarget, i32 %mode, i32 %ignore) #1 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !4
  %operands3 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %arrayidx4 = bitcast i32* %operands3 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx4, align 8, !tbaa !4
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 2
  %2 = bitcast i32* %arrayidx7 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !4
  %u1 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %4 = load i32* %f, align 4, !tbaa !7
  switch i32 %4, label %for.body [
    i32 150, label %sw.bb
    i32 153, label %sw.bb9
    i32 103, label %sw.bb12
    i32 104, label %sw.bb70
    i32 69, label %sw.bb168
    i32 143, label %sw.bb244
    i32 141, label %sw.bb246
    i32 139, label %sw.bb248
    i32 146, label %sw.bb250
    i32 147, label %sw.bb252
    i32 148, label %sw.bb254
    i32 149, label %sw.bb256
    i32 56, label %sw.bb258
    i32 57, label %sw.bb260
    i32 58, label %sw.bb262
    i32 59, label %sw.bb264
    i32 60, label %sw.bb266
    i32 61, label %sw.bb268
    i32 65, label %sw.bb270
    i32 66, label %sw.bb270
    i32 67, label %sw.bb342
    i32 68, label %sw.bb342
    i32 72, label %sw.bb390
    i32 73, label %sw.bb392
    i32 151, label %sw.bb394
    i32 152, label %sw.bb402
    i32 137, label %sw.bb407
    i32 114, label %sw.bb506
    i32 154, label %sw.bb580
    i32 155, label %sw.bb583
    i32 156, label %sw.bb585
    i32 157, label %sw.bb587
    i32 158, label %sw.bb589
    i32 159, label %sw.bb591
    i32 160, label %sw.bb593
    i32 161, label %sw.bb595
    i32 162, label %sw.bb597
    i32 163, label %sw.bb599
    i32 164, label %sw.bb601
    i32 165, label %sw.bb603
    i32 166, label %sw.bb605
    i32 167, label %sw.bb607
    i32 168, label %sw.bb609
    i32 169, label %sw.bb611
    i32 170, label %sw.bb613
    i32 171, label %sw.bb615
    i32 172, label %sw.bb617
    i32 173, label %sw.bb619
    i32 174, label %sw.bb621
    i32 175, label %sw.bb623
    i32 176, label %sw.bb625
    i32 177, label %sw.bb627
    i32 178, label %sw.bb629
    i32 179, label %sw.bb631
    i32 180, label %sw.bb633
    i32 181, label %sw.bb637
  ]

sw.bb:                                            ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_emms() #9
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #9
  br label %return

sw.bb9:                                           ; preds = %entry
  %call10 = tail call %struct.rtx_def* @gen_sfence() #9
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #9
  br label %return

sw.bb12:                                          ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !4
  %chain = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain, align 8, !tbaa !4
  %value14 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value14 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !4
  %call15 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %6, %struct.rtx_def* null, i32 0, i32 0) #9
  %call16 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %9, %struct.rtx_def* null, i32 0, i32 0) #9
  %10 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 772, i32 3), align 8, !tbaa !4
  %mode19 = getelementptr inbounds %struct.insn_operand_data* %10, i64 0, i32 2
  %11 = bitcast [2 x i8]* %mode19 to i16*
  %bf.load = load i16* %11, align 8
  %bf.cast = zext i16 %bf.load to i32
  %mode24 = getelementptr inbounds %struct.insn_operand_data* %10, i64 1, i32 2
  %12 = bitcast [2 x i8]* %mode24 to i16*
  %bf.load25 = load i16* %12, align 8
  %bf.cast26 = zext i16 %bf.load25 to i32
  %mode31 = getelementptr inbounds %struct.insn_operand_data* %10, i64 2, i32 2
  %13 = bitcast [2 x i8]* %mode31 to i16*
  %bf.load32 = load i16* %13, align 8
  %bf.cast33 = zext i16 %bf.load32 to i32
  %predicate = getelementptr inbounds %struct.insn_operand_data* %10, i64 1, i32 0
  %14 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !4
  %call38 = tail call i32 %14(%struct.rtx_def* %call15, i32 %bf.cast26) #9
  %tobool = icmp eq i32 %call38, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb12
  %call39 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast26, %struct.rtx_def* %call15) #9
  br label %if.end

if.end:                                           ; preds = %sw.bb12, %if.then
  %op0.0 = phi %struct.rtx_def* [ %call15, %sw.bb12 ], [ %call39, %if.then ]
  %predicate44 = getelementptr inbounds %struct.insn_operand_data* %10, i64 2, i32 0
  %15 = load i32 (%struct.rtx_def*, i32)** %predicate44, align 8, !tbaa !4
  %call45 = tail call i32 %15(%struct.rtx_def* %call16, i32 %bf.cast33) #9
  %tobool46 = icmp eq i32 %call45, 0
  br i1 %tobool46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str197, i64 0, i64 0)) #9
  %call48 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #9
  br label %return

if.end49:                                         ; preds = %if.end
  %cmp = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp, label %if.then60, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end49
  %16 = bitcast %struct.rtx_def* %target to i32*
  %bf.load50 = load i32* %16, align 8
  %bf.lshr = lshr i32 %bf.load50, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp51 = icmp eq i32 %bf.clear, %bf.cast
  br i1 %cmp51, label %lor.lhs.false52, label %if.then60

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %predicate57 = getelementptr inbounds %struct.insn_operand_data* %10, i64 0, i32 0
  %17 = load i32 (%struct.rtx_def*, i32)** %predicate57, align 8, !tbaa !4
  %call58 = tail call i32 %17(%struct.rtx_def* %target, i32 %bf.cast) #9
  %tobool59 = icmp eq i32 %call58, 0
  br i1 %tobool59, label %if.then60, label %if.end62

if.then60:                                        ; preds = %lor.lhs.false52, %lor.lhs.false, %if.end49
  %call61 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #9
  br label %if.end62

if.end62:                                         ; preds = %lor.lhs.false52, %if.then60
  %target.addr.0 = phi %struct.rtx_def* [ %call61, %if.then60 ], [ %target, %lor.lhs.false52 ]
  %18 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 772, i32 2), align 8, !tbaa !4
  %call65 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %18(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %op0.0, %struct.rtx_def* %call16) #9
  %tobool66 = icmp eq %struct.rtx_def* %call65, null
  br i1 %tobool66, label %return, label %if.end68

if.end68:                                         ; preds = %if.end62
  %call69 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call65) #9
  br label %return

sw.bb70:                                          ; preds = %entry
  %value72 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %19 = bitcast i32* %value72 to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !4
  %chain74 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %21 = load %union.tree_node** %chain74, align 8, !tbaa !4
  %value76 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 2
  %22 = bitcast i32* %value76 to %union.tree_node**
  %23 = load %union.tree_node** %22, align 8, !tbaa !4
  %chain80 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %union.tree_node** %chain80, align 8, !tbaa !4
  %value82 = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 2
  %25 = bitcast i32* %value82 to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !4
  %call83 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %20, %struct.rtx_def* null, i32 0, i32 0) #9
  %call84 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %23, %struct.rtx_def* null, i32 0, i32 0) #9
  %call85 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %26, %struct.rtx_def* null, i32 0, i32 0) #9
  %27 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 771, i32 3), align 8, !tbaa !4
  %mode90 = getelementptr inbounds %struct.insn_operand_data* %27, i64 0, i32 2
  %28 = bitcast [2 x i8]* %mode90 to i16*
  %bf.load91 = load i16* %28, align 8
  %bf.cast92 = zext i16 %bf.load91 to i32
  %mode97 = getelementptr inbounds %struct.insn_operand_data* %27, i64 1, i32 2
  %29 = bitcast [2 x i8]* %mode97 to i16*
  %bf.load98 = load i16* %29, align 8
  %bf.cast99 = zext i16 %bf.load98 to i32
  %mode104 = getelementptr inbounds %struct.insn_operand_data* %27, i64 2, i32 2
  %30 = bitcast [2 x i8]* %mode104 to i16*
  %bf.load105 = load i16* %30, align 8
  %bf.cast106 = zext i16 %bf.load105 to i32
  %mode111 = getelementptr inbounds %struct.insn_operand_data* %27, i64 3, i32 2
  %31 = bitcast [2 x i8]* %mode111 to i16*
  %bf.load112 = load i16* %31, align 8
  %bf.cast113 = zext i16 %bf.load112 to i32
  %predicate118 = getelementptr inbounds %struct.insn_operand_data* %27, i64 1, i32 0
  %32 = load i32 (%struct.rtx_def*, i32)** %predicate118, align 8, !tbaa !4
  %call119 = tail call i32 %32(%struct.rtx_def* %call83, i32 %bf.cast99) #9
  %tobool120 = icmp eq i32 %call119, 0
  br i1 %tobool120, label %if.then121, label %if.end123

if.then121:                                       ; preds = %sw.bb70
  %call122 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast99, %struct.rtx_def* %call83) #9
  br label %if.end123

if.end123:                                        ; preds = %sw.bb70, %if.then121
  %op0.1 = phi %struct.rtx_def* [ %call83, %sw.bb70 ], [ %call122, %if.then121 ]
  %predicate128 = getelementptr inbounds %struct.insn_operand_data* %27, i64 2, i32 0
  %33 = load i32 (%struct.rtx_def*, i32)** %predicate128, align 8, !tbaa !4
  %call129 = tail call i32 %33(%struct.rtx_def* %call84, i32 %bf.cast106) #9
  %tobool130 = icmp eq i32 %call129, 0
  br i1 %tobool130, label %if.then131, label %if.end133

if.then131:                                       ; preds = %if.end123
  %call132 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast106, %struct.rtx_def* %call84) #9
  br label %if.end133

if.end133:                                        ; preds = %if.end123, %if.then131
  %op1.0 = phi %struct.rtx_def* [ %call84, %if.end123 ], [ %call132, %if.then131 ]
  %predicate138 = getelementptr inbounds %struct.insn_operand_data* %27, i64 3, i32 0
  %34 = load i32 (%struct.rtx_def*, i32)** %predicate138, align 8, !tbaa !4
  %call139 = tail call i32 %34(%struct.rtx_def* %call85, i32 %bf.cast113) #9
  %tobool140 = icmp eq i32 %call139, 0
  br i1 %tobool140, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.end133
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str197, i64 0, i64 0)) #9
  %35 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br label %return

if.end142:                                        ; preds = %if.end133
  %cmp143 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp143, label %if.then157, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %if.end142
  %36 = bitcast %struct.rtx_def* %target to i32*
  %bf.load145 = load i32* %36, align 8
  %bf.lshr146 = lshr i32 %bf.load145, 16
  %bf.clear147 = and i32 %bf.lshr146, 255
  %cmp148 = icmp eq i32 %bf.clear147, %bf.cast92
  br i1 %cmp148, label %lor.lhs.false149, label %if.then157

lor.lhs.false149:                                 ; preds = %lor.lhs.false144
  %predicate154 = getelementptr inbounds %struct.insn_operand_data* %27, i64 0, i32 0
  %37 = load i32 (%struct.rtx_def*, i32)** %predicate154, align 8, !tbaa !4
  %call155 = tail call i32 %37(%struct.rtx_def* %target, i32 %bf.cast92) #9
  %tobool156 = icmp eq i32 %call155, 0
  br i1 %tobool156, label %if.then157, label %if.end159

if.then157:                                       ; preds = %lor.lhs.false149, %lor.lhs.false144, %if.end142
  %call158 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast92) #9
  br label %if.end159

if.end159:                                        ; preds = %lor.lhs.false149, %if.then157
  %target.addr.1 = phi %struct.rtx_def* [ %call158, %if.then157 ], [ %target, %lor.lhs.false149 ]
  %38 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 771, i32 2), align 8, !tbaa !4
  %call163 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %38(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %op0.1, %struct.rtx_def* %op1.0, %struct.rtx_def* %call85) #9
  %tobool164 = icmp eq %struct.rtx_def* %call163, null
  br i1 %tobool164, label %return, label %if.end166

if.end166:                                        ; preds = %if.end159
  %call167 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call163) #9
  br label %return

sw.bb168:                                         ; preds = %entry
  %39 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %39, 25
  %40 = and i32 %and, 1
  %41 = or i32 %40, 678
  %value171 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %42 = bitcast i32* %value171 to %union.tree_node**
  %43 = load %union.tree_node** %42, align 8, !tbaa !4
  %chain173 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %44 = load %union.tree_node** %chain173, align 8, !tbaa !4
  %value175 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 2
  %45 = bitcast i32* %value175 to %union.tree_node**
  %46 = load %union.tree_node** %45, align 8, !tbaa !4
  %chain179 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %union.tree_node** %chain179, align 8, !tbaa !4
  %value181 = getelementptr inbounds %union.tree_node* %47, i64 0, i32 0, i32 2
  %48 = bitcast i32* %value181 to %union.tree_node**
  %49 = load %union.tree_node** %48, align 8, !tbaa !4
  %call182 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %49, %struct.rtx_def* null, i32 0, i32 0) #9
  %call183 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %43, %struct.rtx_def* null, i32 0, i32 0) #9
  %call184 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %46, %struct.rtx_def* null, i32 0, i32 0) #9
  %idxprom185 = zext i32 %41 to i64
  %operand187 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom185, i32 3
  %50 = load %struct.insn_operand_data** %operand187, align 8, !tbaa !4
  %mode189 = getelementptr inbounds %struct.insn_operand_data* %50, i64 0, i32 2
  %51 = bitcast [2 x i8]* %mode189 to i16*
  %bf.load190 = load i16* %51, align 8
  %bf.cast191 = zext i16 %bf.load190 to i32
  %mode196 = getelementptr inbounds %struct.insn_operand_data* %50, i64 1, i32 2
  %52 = bitcast [2 x i8]* %mode196 to i16*
  %bf.load197 = load i16* %52, align 8
  %bf.cast198 = zext i16 %bf.load197 to i32
  %mode203 = getelementptr inbounds %struct.insn_operand_data* %50, i64 2, i32 2
  %53 = bitcast [2 x i8]* %mode203 to i16*
  %bf.load204 = load i16* %53, align 8
  %bf.cast205 = zext i16 %bf.load204 to i32
  %predicate210 = getelementptr inbounds %struct.insn_operand_data* %50, i64 0, i32 0
  %54 = load i32 (%struct.rtx_def*, i32)** %predicate210, align 8, !tbaa !4
  %call211 = tail call i32 %54(%struct.rtx_def* %call182, i32 %bf.cast191) #9
  %tobool212 = icmp eq i32 %call211, 0
  br i1 %tobool212, label %if.then213, label %if.end215

if.then213:                                       ; preds = %sw.bb168
  %call214 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast191, %struct.rtx_def* %call182) #9
  br label %if.end215

if.end215:                                        ; preds = %sw.bb168, %if.then213
  %op0.2 = phi %struct.rtx_def* [ %call182, %sw.bb168 ], [ %call214, %if.then213 ]
  %predicate220 = getelementptr inbounds %struct.insn_operand_data* %50, i64 1, i32 0
  %55 = load i32 (%struct.rtx_def*, i32)** %predicate220, align 8, !tbaa !4
  %call221 = tail call i32 %55(%struct.rtx_def* %call183, i32 %bf.cast198) #9
  %tobool222 = icmp eq i32 %call221, 0
  br i1 %tobool222, label %if.then223, label %if.end225

if.then223:                                       ; preds = %if.end215
  %call224 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast198, %struct.rtx_def* %call183) #9
  br label %if.end225

if.end225:                                        ; preds = %if.end215, %if.then223
  %op1.1 = phi %struct.rtx_def* [ %call183, %if.end215 ], [ %call224, %if.then223 ]
  %predicate230 = getelementptr inbounds %struct.insn_operand_data* %50, i64 2, i32 0
  %56 = load i32 (%struct.rtx_def*, i32)** %predicate230, align 8, !tbaa !4
  %call231 = tail call i32 %56(%struct.rtx_def* %call184, i32 %bf.cast205) #9
  %tobool232 = icmp eq i32 %call231, 0
  br i1 %tobool232, label %if.then233, label %if.end235

if.then233:                                       ; preds = %if.end225
  %call234 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast205, %struct.rtx_def* %call184) #9
  br label %if.end235

if.end235:                                        ; preds = %if.end225, %if.then233
  %op2.0 = phi %struct.rtx_def* [ %call184, %if.end225 ], [ %call234, %if.then233 ]
  %genfun238 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom185, i32 2
  %57 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun238, align 8, !tbaa !4
  %call239 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %57(%struct.rtx_def* %op0.2, %struct.rtx_def* %op1.1, %struct.rtx_def* %op2.0) #9
  %tobool240 = icmp eq %struct.rtx_def* %call239, null
  br i1 %tobool240, label %return, label %if.end242

if.end242:                                        ; preds = %if.end235
  %call243 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call239) #9
  br label %return

sw.bb244:                                         ; preds = %entry
  %call245 = tail call fastcc %struct.rtx_def* @ix86_expand_unop1_builtin(i32 703, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb246:                                         ; preds = %entry
  %call247 = tail call fastcc %struct.rtx_def* @ix86_expand_unop1_builtin(i32 701, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb248:                                         ; preds = %entry
  %call249 = tail call fastcc %struct.rtx_def* @ix86_expand_unop1_builtin(i32 699, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb250:                                         ; preds = %entry
  %call251 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 708, %union.tree_node* %3) #10
  br label %return

sw.bb252:                                         ; preds = %entry
  %call253 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 712, %union.tree_node* %3) #10
  br label %return

sw.bb254:                                         ; preds = %entry
  %call255 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 718, %union.tree_node* %3) #10
  br label %return

sw.bb256:                                         ; preds = %entry
  %call257 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 724, %union.tree_node* %3) #10
  br label %return

sw.bb258:                                         ; preds = %entry
  %call259 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 674, %union.tree_node* %3, %struct.rtx_def* %target, i32 1) #10
  br label %return

sw.bb260:                                         ; preds = %entry
  %call261 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 675, %union.tree_node* %3, %struct.rtx_def* %target, i32 1) #10
  br label %return

sw.bb262:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 674, %union.tree_node* %3) #10
  br label %return

sw.bb264:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 675, %union.tree_node* %3) #10
  br label %return

sw.bb266:                                         ; preds = %entry
  %call267 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 686, %union.tree_node* %3, %struct.rtx_def* %target, i32 1) #10
  br label %return

sw.bb268:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 688, %union.tree_node* %3) #10
  br label %return

sw.bb270:                                         ; preds = %entry, %entry
  %cmp271 = icmp eq i32 %4, 65
  %value274 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %58 = bitcast i32* %value274 to %union.tree_node**
  %59 = load %union.tree_node** %58, align 8, !tbaa !4
  %chain276 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %union.tree_node** %chain276, align 8, !tbaa !4
  %value278 = getelementptr inbounds %union.tree_node* %60, i64 0, i32 0, i32 2
  %61 = bitcast i32* %value278 to %union.tree_node**
  %62 = load %union.tree_node** %61, align 8, !tbaa !4
  %call279 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %59, %struct.rtx_def* null, i32 0, i32 0) #9
  %call280 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %62, %struct.rtx_def* null, i32 0, i32 0) #9
  %idxprom281 = select i1 %cmp271, i64 684, i64 685
  %operand283 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom281, i32 3
  %63 = load %struct.insn_operand_data** %operand283, align 8, !tbaa !4
  %mode285 = getelementptr inbounds %struct.insn_operand_data* %63, i64 0, i32 2
  %64 = bitcast [2 x i8]* %mode285 to i16*
  %bf.load286 = load i16* %64, align 8
  %bf.cast287 = zext i16 %bf.load286 to i32
  %mode292 = getelementptr inbounds %struct.insn_operand_data* %63, i64 1, i32 2
  %65 = bitcast [2 x i8]* %mode292 to i16*
  %bf.load293 = load i16* %65, align 8
  %bf.cast294 = zext i16 %bf.load293 to i32
  %mode299 = getelementptr inbounds %struct.insn_operand_data* %63, i64 2, i32 2
  %66 = bitcast [2 x i8]* %mode299 to i16*
  %bf.load300 = load i16* %66, align 8
  %bf.cast301 = zext i16 %bf.load300 to i32
  %predicate306 = getelementptr inbounds %struct.insn_operand_data* %63, i64 1, i32 0
  %67 = load i32 (%struct.rtx_def*, i32)** %predicate306, align 8, !tbaa !4
  %call307 = tail call i32 %67(%struct.rtx_def* %call279, i32 %bf.cast294) #9
  %tobool308 = icmp eq i32 %call307, 0
  br i1 %tobool308, label %if.then309, label %if.end311

if.then309:                                       ; preds = %sw.bb270
  %call310 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast294, %struct.rtx_def* %call279) #9
  br label %if.end311

if.end311:                                        ; preds = %sw.bb270, %if.then309
  %op0.3 = phi %struct.rtx_def* [ %call279, %sw.bb270 ], [ %call310, %if.then309 ]
  %68 = load i32* @target_flags, align 4, !tbaa !0
  %and312 = lshr i32 %68, 25
  %69 = and i32 %and312, 1
  %70 = or i32 %69, 4
  %call315 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %70, %struct.rtx_def* %call280) #9
  %call316 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast301, %struct.rtx_def* %call315) #9
  %cmp317 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp317, label %if.then331, label %lor.lhs.false318

lor.lhs.false318:                                 ; preds = %if.end311
  %71 = bitcast %struct.rtx_def* %target to i32*
  %bf.load319 = load i32* %71, align 8
  %bf.lshr320 = lshr i32 %bf.load319, 16
  %bf.clear321 = and i32 %bf.lshr320, 255
  %cmp322 = icmp eq i32 %bf.clear321, %bf.cast287
  br i1 %cmp322, label %lor.lhs.false323, label %if.then331

lor.lhs.false323:                                 ; preds = %lor.lhs.false318
  %predicate328 = getelementptr inbounds %struct.insn_operand_data* %63, i64 0, i32 0
  %72 = load i32 (%struct.rtx_def*, i32)** %predicate328, align 8, !tbaa !4
  %call329 = tail call i32 %72(%struct.rtx_def* %target, i32 %bf.cast287) #9
  %tobool330 = icmp eq i32 %call329, 0
  br i1 %tobool330, label %if.then331, label %if.end333

if.then331:                                       ; preds = %lor.lhs.false323, %lor.lhs.false318, %if.end311
  %call332 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast287) #9
  br label %if.end333

if.end333:                                        ; preds = %lor.lhs.false323, %if.then331
  %target.addr.2 = phi %struct.rtx_def* [ %call332, %if.then331 ], [ %target, %lor.lhs.false323 ]
  %genfun336 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom281, i32 2
  %73 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun336, align 8, !tbaa !4
  %call337 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %73(%struct.rtx_def* %target.addr.2, %struct.rtx_def* %op0.3, %struct.rtx_def* %call316) #9
  %tobool338 = icmp eq %struct.rtx_def* %call337, null
  br i1 %tobool338, label %return, label %if.end340

if.end340:                                        ; preds = %if.end333
  %call341 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call337) #9
  br label %return

sw.bb342:                                         ; preds = %entry, %entry
  %cmp343 = icmp eq i32 %4, 67
  %value346 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %74 = bitcast i32* %value346 to %union.tree_node**
  %75 = load %union.tree_node** %74, align 8, !tbaa !4
  %chain348 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %76 = load %union.tree_node** %chain348, align 8, !tbaa !4
  %value350 = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 2
  %77 = bitcast i32* %value350 to %union.tree_node**
  %78 = load %union.tree_node** %77, align 8, !tbaa !4
  %call351 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %75, %struct.rtx_def* null, i32 0, i32 0) #9
  %call352 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %78, %struct.rtx_def* null, i32 0, i32 0) #9
  %idxprom353 = select i1 %cmp343, i64 684, i64 685
  %operand355 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom353, i32 3
  %79 = load %struct.insn_operand_data** %operand355, align 8, !tbaa !4
  %mode357 = getelementptr inbounds %struct.insn_operand_data* %79, i64 1, i32 2
  %80 = bitcast [2 x i8]* %mode357 to i16*
  %bf.load358 = load i16* %80, align 8
  %bf.cast359 = zext i16 %bf.load358 to i32
  %mode364 = getelementptr inbounds %struct.insn_operand_data* %79, i64 2, i32 2
  %81 = bitcast [2 x i8]* %mode364 to i16*
  %bf.load365 = load i16* %81, align 8
  %bf.cast366 = zext i16 %bf.load365 to i32
  %82 = load i32* @target_flags, align 4, !tbaa !0
  %and367 = lshr i32 %82, 25
  %83 = and i32 %and367, 1
  %84 = or i32 %83, 4
  %call370 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %84, %struct.rtx_def* %call351) #9
  %call371 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast359, %struct.rtx_def* %call370) #9
  %predicate376 = getelementptr inbounds %struct.insn_operand_data* %79, i64 2, i32 0
  %85 = load i32 (%struct.rtx_def*, i32)** %predicate376, align 8, !tbaa !4
  %call377 = tail call i32 %85(%struct.rtx_def* %call352, i32 %bf.cast366) #9
  %tobool378 = icmp eq i32 %call377, 0
  br i1 %tobool378, label %if.then379, label %if.end381

if.then379:                                       ; preds = %sw.bb342
  %call380 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast366, %struct.rtx_def* %call352) #9
  br label %if.end381

if.end381:                                        ; preds = %sw.bb342, %if.then379
  %op1.2 = phi %struct.rtx_def* [ %call352, %sw.bb342 ], [ %call380, %if.then379 ]
  %genfun384 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom353, i32 2
  %86 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun384, align 8, !tbaa !4
  %call385 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %86(%struct.rtx_def* %call371, %struct.rtx_def* %call371, %struct.rtx_def* %op1.2) #9
  %tobool386 = icmp eq %struct.rtx_def* %call385, null
  br i1 %tobool386, label %return, label %if.end388

if.end388:                                        ; preds = %if.end381
  %call389 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call385) #9
  br label %return

sw.bb390:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 680, %union.tree_node* %3) #10
  br label %return

sw.bb392:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 681, %union.tree_node* %3) #10
  br label %return

sw.bb394:                                         ; preds = %entry
  %value396 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %87 = bitcast i32* %value396 to %union.tree_node**
  %88 = load %union.tree_node** %87, align 8, !tbaa !4
  %call397 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %88, %struct.rtx_def* null, i32 0, i32 0) #9
  %call398 = tail call %struct.rtx_def* @assign_386_stack_local(i32 4, i32 0) #10
  %call399 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call398, %struct.rtx_def* %call397) #9
  %call400 = tail call %struct.rtx_def* @gen_ldmxcsr(%struct.rtx_def* %call398) #9
  %call401 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call400) #9
  br label %return

sw.bb402:                                         ; preds = %entry
  %call403 = tail call %struct.rtx_def* @assign_386_stack_local(i32 4, i32 0) #10
  %call404 = tail call %struct.rtx_def* @gen_stmxcsr(%struct.rtx_def* %call403) #9
  %call405 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call404) #9
  %call406 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 4, %struct.rtx_def* %call403) #9
  br label %return

sw.bb407:                                         ; preds = %entry
  %value409 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %89 = bitcast i32* %value409 to %union.tree_node**
  %90 = load %union.tree_node** %89, align 8, !tbaa !4
  %chain411 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %91 = load %union.tree_node** %chain411, align 8, !tbaa !4
  %value413 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 2
  %92 = bitcast i32* %value413 to %union.tree_node**
  %93 = load %union.tree_node** %92, align 8, !tbaa !4
  %chain417 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 0, i32 0
  %94 = load %union.tree_node** %chain417, align 8, !tbaa !4
  %value419 = getelementptr inbounds %union.tree_node* %94, i64 0, i32 0, i32 2
  %95 = bitcast i32* %value419 to %union.tree_node**
  %96 = load %union.tree_node** %95, align 8, !tbaa !4
  %call420 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %90, %struct.rtx_def* null, i32 0, i32 0) #9
  %call421 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %93, %struct.rtx_def* null, i32 0, i32 0) #9
  %call422 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %96, %struct.rtx_def* null, i32 0, i32 0) #9
  %97 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 689, i32 3), align 8, !tbaa !4
  %mode427 = getelementptr inbounds %struct.insn_operand_data* %97, i64 0, i32 2
  %98 = bitcast [2 x i8]* %mode427 to i16*
  %bf.load428 = load i16* %98, align 8
  %bf.cast429 = zext i16 %bf.load428 to i32
  %mode434 = getelementptr inbounds %struct.insn_operand_data* %97, i64 1, i32 2
  %99 = bitcast [2 x i8]* %mode434 to i16*
  %bf.load435 = load i16* %99, align 8
  %bf.cast436 = zext i16 %bf.load435 to i32
  %mode441 = getelementptr inbounds %struct.insn_operand_data* %97, i64 2, i32 2
  %100 = bitcast [2 x i8]* %mode441 to i16*
  %bf.load442 = load i16* %100, align 8
  %bf.cast443 = zext i16 %bf.load442 to i32
  %mode448 = getelementptr inbounds %struct.insn_operand_data* %97, i64 3, i32 2
  %101 = bitcast [2 x i8]* %mode448 to i16*
  %bf.load449 = load i16* %101, align 8
  %bf.cast450 = zext i16 %bf.load449 to i32
  %predicate455 = getelementptr inbounds %struct.insn_operand_data* %97, i64 1, i32 0
  %102 = load i32 (%struct.rtx_def*, i32)** %predicate455, align 8, !tbaa !4
  %call456 = tail call i32 %102(%struct.rtx_def* %call420, i32 %bf.cast436) #9
  %tobool457 = icmp eq i32 %call456, 0
  br i1 %tobool457, label %if.then458, label %if.end460

if.then458:                                       ; preds = %sw.bb407
  %call459 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast436, %struct.rtx_def* %call420) #9
  br label %if.end460

if.end460:                                        ; preds = %sw.bb407, %if.then458
  %op0.4 = phi %struct.rtx_def* [ %call420, %sw.bb407 ], [ %call459, %if.then458 ]
  %predicate465 = getelementptr inbounds %struct.insn_operand_data* %97, i64 2, i32 0
  %103 = load i32 (%struct.rtx_def*, i32)** %predicate465, align 8, !tbaa !4
  %call466 = tail call i32 %103(%struct.rtx_def* %call421, i32 %bf.cast443) #9
  %tobool467 = icmp eq i32 %call466, 0
  br i1 %tobool467, label %if.then468, label %if.end470

if.then468:                                       ; preds = %if.end460
  %call469 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast443, %struct.rtx_def* %call421) #9
  br label %if.end470

if.end470:                                        ; preds = %if.end460, %if.then468
  %op1.3 = phi %struct.rtx_def* [ %call421, %if.end460 ], [ %call469, %if.then468 ]
  %predicate475 = getelementptr inbounds %struct.insn_operand_data* %97, i64 3, i32 0
  %104 = load i32 (%struct.rtx_def*, i32)** %predicate475, align 8, !tbaa !4
  %call476 = tail call i32 %104(%struct.rtx_def* %call422, i32 %bf.cast450) #9
  %tobool477 = icmp eq i32 %call476, 0
  br i1 %tobool477, label %if.then478, label %if.end480

if.then478:                                       ; preds = %if.end470
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str198, i64 0, i64 0)) #9
  %call479 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast429) #9
  br label %return

if.end480:                                        ; preds = %if.end470
  %cmp481 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp481, label %if.then495, label %lor.lhs.false482

lor.lhs.false482:                                 ; preds = %if.end480
  %105 = bitcast %struct.rtx_def* %target to i32*
  %bf.load483 = load i32* %105, align 8
  %bf.lshr484 = lshr i32 %bf.load483, 16
  %bf.clear485 = and i32 %bf.lshr484, 255
  %cmp486 = icmp eq i32 %bf.clear485, %bf.cast429
  br i1 %cmp486, label %lor.lhs.false487, label %if.then495

lor.lhs.false487:                                 ; preds = %lor.lhs.false482
  %predicate492 = getelementptr inbounds %struct.insn_operand_data* %97, i64 0, i32 0
  %106 = load i32 (%struct.rtx_def*, i32)** %predicate492, align 8, !tbaa !4
  %call493 = tail call i32 %106(%struct.rtx_def* %target, i32 %bf.cast429) #9
  %tobool494 = icmp eq i32 %call493, 0
  br i1 %tobool494, label %if.then495, label %if.end497

if.then495:                                       ; preds = %lor.lhs.false487, %lor.lhs.false482, %if.end480
  %call496 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast429) #9
  br label %if.end497

if.end497:                                        ; preds = %lor.lhs.false487, %if.then495
  %target.addr.3 = phi %struct.rtx_def* [ %call496, %if.then495 ], [ %target, %lor.lhs.false487 ]
  %107 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 689, i32 2), align 8, !tbaa !4
  %call501 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %107(%struct.rtx_def* %target.addr.3, %struct.rtx_def* %op0.4, %struct.rtx_def* %op1.3, %struct.rtx_def* %call422) #9
  %tobool502 = icmp eq %struct.rtx_def* %call501, null
  br i1 %tobool502, label %return, label %if.end504

if.end504:                                        ; preds = %if.end497
  %call505 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call501) #9
  br label %return

sw.bb506:                                         ; preds = %entry
  %value508 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %108 = bitcast i32* %value508 to %union.tree_node**
  %109 = load %union.tree_node** %108, align 8, !tbaa !4
  %chain510 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %110 = load %union.tree_node** %chain510, align 8, !tbaa !4
  %value512 = getelementptr inbounds %union.tree_node* %110, i64 0, i32 0, i32 2
  %111 = bitcast i32* %value512 to %union.tree_node**
  %112 = load %union.tree_node** %111, align 8, !tbaa !4
  %call513 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %109, %struct.rtx_def* null, i32 0, i32 0) #9
  %call514 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %112, %struct.rtx_def* null, i32 0, i32 0) #9
  %113 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 773, i32 3), align 8, !tbaa !4
  %mode519 = getelementptr inbounds %struct.insn_operand_data* %113, i64 0, i32 2
  %114 = bitcast [2 x i8]* %mode519 to i16*
  %bf.load520 = load i16* %114, align 8
  %bf.cast521 = zext i16 %bf.load520 to i32
  %mode526 = getelementptr inbounds %struct.insn_operand_data* %113, i64 1, i32 2
  %115 = bitcast [2 x i8]* %mode526 to i16*
  %bf.load527 = load i16* %115, align 8
  %bf.cast528 = zext i16 %bf.load527 to i32
  %mode533 = getelementptr inbounds %struct.insn_operand_data* %113, i64 2, i32 2
  %116 = bitcast [2 x i8]* %mode533 to i16*
  %bf.load534 = load i16* %116, align 8
  %bf.cast535 = zext i16 %bf.load534 to i32
  %predicate540 = getelementptr inbounds %struct.insn_operand_data* %113, i64 1, i32 0
  %117 = load i32 (%struct.rtx_def*, i32)** %predicate540, align 8, !tbaa !4
  %call541 = tail call i32 %117(%struct.rtx_def* %call513, i32 %bf.cast528) #9
  %tobool542 = icmp eq i32 %call541, 0
  br i1 %tobool542, label %if.then543, label %if.end545

if.then543:                                       ; preds = %sw.bb506
  %call544 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast528, %struct.rtx_def* %call513) #9
  br label %if.end545

if.end545:                                        ; preds = %sw.bb506, %if.then543
  %op0.5 = phi %struct.rtx_def* [ %call513, %sw.bb506 ], [ %call544, %if.then543 ]
  %predicate550 = getelementptr inbounds %struct.insn_operand_data* %113, i64 2, i32 0
  %118 = load i32 (%struct.rtx_def*, i32)** %predicate550, align 8, !tbaa !4
  %call551 = tail call i32 %118(%struct.rtx_def* %call514, i32 %bf.cast535) #9
  %tobool552 = icmp eq i32 %call551, 0
  br i1 %tobool552, label %if.then553, label %if.end554

if.then553:                                       ; preds = %if.end545
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str198, i64 0, i64 0)) #9
  %119 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br label %return

if.end554:                                        ; preds = %if.end545
  %cmp555 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp555, label %if.then569, label %lor.lhs.false556

lor.lhs.false556:                                 ; preds = %if.end554
  %120 = bitcast %struct.rtx_def* %target to i32*
  %bf.load557 = load i32* %120, align 8
  %bf.lshr558 = lshr i32 %bf.load557, 16
  %bf.clear559 = and i32 %bf.lshr558, 255
  %cmp560 = icmp eq i32 %bf.clear559, %bf.cast521
  br i1 %cmp560, label %lor.lhs.false561, label %if.then569

lor.lhs.false561:                                 ; preds = %lor.lhs.false556
  %predicate566 = getelementptr inbounds %struct.insn_operand_data* %113, i64 0, i32 0
  %121 = load i32 (%struct.rtx_def*, i32)** %predicate566, align 8, !tbaa !4
  %call567 = tail call i32 %121(%struct.rtx_def* %target, i32 %bf.cast521) #9
  %tobool568 = icmp eq i32 %call567, 0
  br i1 %tobool568, label %if.then569, label %if.end571

if.then569:                                       ; preds = %lor.lhs.false561, %lor.lhs.false556, %if.end554
  %call570 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast521) #9
  br label %if.end571

if.end571:                                        ; preds = %lor.lhs.false561, %if.then569
  %target.addr.4 = phi %struct.rtx_def* [ %call570, %if.then569 ], [ %target, %lor.lhs.false561 ]
  %122 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 773, i32 2), align 8, !tbaa !4
  %call575 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %122(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %op0.5, %struct.rtx_def* %call514) #9
  %tobool576 = icmp eq %struct.rtx_def* %call575, null
  br i1 %tobool576, label %return, label %if.end578

if.end578:                                        ; preds = %if.end571
  %call579 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call575) #9
  br label %return

sw.bb580:                                         ; preds = %entry
  %call581 = tail call %struct.rtx_def* @gen_femms() #9
  %call582 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call581) #9
  br label %return

sw.bb583:                                         ; preds = %entry
  %call584 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 823, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb585:                                         ; preds = %entry
  %call586 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 816, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb587:                                         ; preds = %entry
  %call588 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 818, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb589:                                         ; preds = %entry
  %call590 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 806, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb591:                                         ; preds = %entry
  %call592 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 811, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb593:                                         ; preds = %entry
  %call594 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 810, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb595:                                         ; preds = %entry
  %call596 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 809, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb597:                                         ; preds = %entry
  %call598 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 812, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb599:                                         ; preds = %entry
  %call600 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 813, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb601:                                         ; preds = %entry
  %call602 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 814, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb603:                                         ; preds = %entry
  %call604 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 824, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb605:                                         ; preds = %entry
  %call606 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 825, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb607:                                         ; preds = %entry
  %call608 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 826, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb609:                                         ; preds = %entry
  %call610 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 828, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb611:                                         ; preds = %entry
  %call612 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 827, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb613:                                         ; preds = %entry
  %call614 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 807, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb615:                                         ; preds = %entry
  %call616 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 808, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb617:                                         ; preds = %entry
  %call618 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 822, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb619:                                         ; preds = %entry
  %call620 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 829, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb621:                                         ; preds = %entry
  %call622 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 817, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb623:                                         ; preds = %entry
  %call624 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 819, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb625:                                         ; preds = %entry
  %call626 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 820, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

sw.bb627:                                         ; preds = %entry
  %call628 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 821, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb629:                                         ; preds = %entry
  %call630 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 830, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb631:                                         ; preds = %entry
  %call632 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 831, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

sw.bb633:                                         ; preds = %entry
  %call634 = tail call %struct.rtx_def* @gen_reg_rtx(i32 46) #9
  %call635 = tail call %struct.rtx_def* @gen_sse_clrv4sf(%struct.rtx_def* %call634) #9
  %call636 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call635) #9
  br label %return

sw.bb637:                                         ; preds = %entry
  %call638 = tail call %struct.rtx_def* @gen_reg_rtx(i32 5) #9
  %call639 = tail call %struct.rtx_def* @gen_mmx_clrdi(%struct.rtx_def* %call638) #9
  %call640 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call639) #9
  br label %return

for.body:                                         ; preds = %entry, %for.inc
  %d.01043 = phi %struct.builtin_description* [ %incdec.ptr, %for.inc ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_2arg to %struct.builtin_description*), %entry ]
  %i.01042 = phi i64 [ %inc, %for.inc ], [ 0, %entry ]
  %code = getelementptr inbounds %struct.builtin_description* %d.01043, i64 0, i32 3
  %123 = load i32* %code, align 4, !tbaa !6
  %cmp642 = icmp eq i32 %123, %4
  br i1 %cmp642, label %if.then643, label %for.inc

if.then643:                                       ; preds = %for.body
  %icode644 = getelementptr inbounds %struct.builtin_description* %d.01043, i64 0, i32 1
  %124 = load i32* %icode644, align 4, !tbaa !5
  %.off = add i32 %124, -727
  %switch = icmp ult i32 %.off, 4
  br i1 %switch, label %if.then655, label %if.end657

if.then655:                                       ; preds = %if.then643
  %value.i = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %125 = bitcast i32* %value.i to %union.tree_node**
  %126 = load %union.tree_node** %125, align 8, !tbaa !4
  %chain.i = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %127 = load %union.tree_node** %chain.i, align 8, !tbaa !4
  %value2.i = getelementptr inbounds %union.tree_node* %127, i64 0, i32 0, i32 2
  %128 = bitcast i32* %value2.i to %union.tree_node**
  %129 = load %union.tree_node** %128, align 8, !tbaa !4
  %call.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %126, %struct.rtx_def* null, i32 0, i32 0) #9
  %call3.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %129, %struct.rtx_def* null, i32 0, i32 0) #9
  %130 = load i32* %icode644, align 4, !tbaa !5
  %idxprom.i = zext i32 %130 to i64
  %operand.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom.i, i32 3
  %131 = load %struct.insn_operand_data** %operand.i, align 8, !tbaa !4
  %mode.i = getelementptr inbounds %struct.insn_operand_data* %131, i64 0, i32 2
  %132 = bitcast [2 x i8]* %mode.i to i16*
  %bf.load.i = load i16* %132, align 8
  %bf.cast.i = zext i16 %bf.load.i to i32
  %mode10.i = getelementptr inbounds %struct.insn_operand_data* %131, i64 1, i32 2
  %133 = bitcast [2 x i8]* %mode10.i to i16*
  %bf.load11.i = load i16* %133, align 8
  %bf.cast12.i = zext i16 %bf.load11.i to i32
  %mode18.i = getelementptr inbounds %struct.insn_operand_data* %131, i64 2, i32 2
  %134 = bitcast [2 x i8]* %mode18.i to i16*
  %bf.load19.i = load i16* %134, align 8
  %bf.cast20.i = zext i16 %bf.load19.i to i32
  %comparison21.i = getelementptr inbounds %struct.builtin_description* %d.01043, i64 0, i32 4
  %135 = load i32* %comparison21.i, align 4, !tbaa !8
  %idxprom22.i = zext i16 %bf.load11.i to i64
  %arrayidx23.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom22.i
  %136 = load i32* %arrayidx23.i, align 4, !tbaa !9
  %.off.i = add i32 %136, -7
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then655
  %call27.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call.i, i32 %bf.cast12.i) #9
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then655
  %op0.0.i = phi %struct.rtx_def* [ %call27.i, %if.then.i ], [ %call.i, %if.then655 ]
  %idxprom28.i = zext i16 %bf.load19.i to i64
  %arrayidx29.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom28.i
  %137 = load i32* %arrayidx29.i, align 4, !tbaa !9
  %.off125.i = add i32 %137, -7
  %switch126.i = icmp ult i32 %.off125.i, 2
  br i1 %switch126.i, label %if.then35.i, label %if.end37.i

if.then35.i:                                      ; preds = %if.end.i
  %call36.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call3.i, i32 %bf.cast20.i) #9
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.then35.i, %if.end.i
  %op1.0.i = phi %struct.rtx_def* [ %call36.i, %if.then35.i ], [ %call3.i, %if.end.i ]
  %flag.i = getelementptr inbounds %struct.builtin_description* %d.01043, i64 0, i32 5
  %138 = load i32* %flag.i, align 4, !tbaa !0
  %tobool.i = icmp eq i32 %138, 0
  br i1 %tobool.i, label %if.end41.i, label %if.then38.i

if.then38.i:                                      ; preds = %if.end37.i
  %call39.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast20.i) #9
  %call40.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call39.i, %struct.rtx_def* %op1.0.i) #9
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then38.i, %if.end37.i
  %op1.1.i = phi %struct.rtx_def* [ %op0.0.i, %if.then38.i ], [ %op1.0.i, %if.end37.i ]
  %op0.1.i = phi %struct.rtx_def* [ %call39.i, %if.then38.i ], [ %op0.0.i, %if.end37.i ]
  %tobool42.i = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool42.i, label %if.then54.i, label %lor.lhs.false43.i

lor.lhs.false43.i:                                ; preds = %if.end41.i
  %139 = bitcast %struct.rtx_def* %target to i32*
  %bf.load44.i = load i32* %139, align 8
  %bf.lshr.i = lshr i32 %bf.load44.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %cmp45.i = icmp eq i32 %bf.clear.i, %bf.cast.i
  br i1 %cmp45.i, label %lor.lhs.false46.i, label %if.then54.i

lor.lhs.false46.i:                                ; preds = %lor.lhs.false43.i
  %140 = load i32* %icode644, align 4, !tbaa !5
  %idxprom48.i = zext i32 %140 to i64
  %operand50.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom48.i, i32 3
  %141 = load %struct.insn_operand_data** %operand50.i, align 8, !tbaa !4
  %predicate.i = getelementptr inbounds %struct.insn_operand_data* %141, i64 0, i32 0
  %142 = load i32 (%struct.rtx_def*, i32)** %predicate.i, align 8, !tbaa !4
  %call52.i = tail call i32 %142(%struct.rtx_def* %target, i32 %bf.cast.i) #9
  %tobool53.i = icmp eq i32 %call52.i, 0
  br i1 %tobool53.i, label %if.then54.i, label %if.end56.i

if.then54.i:                                      ; preds = %lor.lhs.false46.i, %lor.lhs.false43.i, %if.end41.i
  %call55.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast.i) #9
  br label %if.end56.i

if.end56.i:                                       ; preds = %if.then54.i, %lor.lhs.false46.i
  %target.addr.0.i = phi %struct.rtx_def* [ %call55.i, %if.then54.i ], [ %target, %lor.lhs.false46.i ]
  %143 = load i32* %icode644, align 4, !tbaa !5
  %idxprom58.i = zext i32 %143 to i64
  %operand60.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom58.i, i32 3
  %144 = load %struct.insn_operand_data** %operand60.i, align 8, !tbaa !4
  %predicate62.i = getelementptr inbounds %struct.insn_operand_data* %144, i64 1, i32 0
  %145 = load i32 (%struct.rtx_def*, i32)** %predicate62.i, align 8, !tbaa !4
  %call63.i = tail call i32 %145(%struct.rtx_def* %op0.1.i, i32 %bf.cast12.i) #9
  %tobool64.i = icmp eq i32 %call63.i, 0
  br i1 %tobool64.i, label %if.then65.i, label %if.end67.i

if.then65.i:                                      ; preds = %if.end56.i
  %call66.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast12.i, %struct.rtx_def* %op0.1.i) #9
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.then65.i, %if.end56.i
  %op0.2.i = phi %struct.rtx_def* [ %op0.1.i, %if.end56.i ], [ %call66.i, %if.then65.i ]
  %146 = load i32* %icode644, align 4, !tbaa !5
  %idxprom69.i = zext i32 %146 to i64
  %operand71.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom69.i, i32 3
  %147 = load %struct.insn_operand_data** %operand71.i, align 8, !tbaa !4
  %predicate73.i = getelementptr inbounds %struct.insn_operand_data* %147, i64 2, i32 0
  %148 = load i32 (%struct.rtx_def*, i32)** %predicate73.i, align 8, !tbaa !4
  %call74.i = tail call i32 %148(%struct.rtx_def* %op1.1.i, i32 %bf.cast20.i) #9
  %tobool75.i = icmp eq i32 %call74.i, 0
  br i1 %tobool75.i, label %if.then76.i, label %if.end78.i

if.then76.i:                                      ; preds = %if.end67.i
  %call77.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast20.i, %struct.rtx_def* %op1.1.i) #9
  br label %if.end78.i

if.end78.i:                                       ; preds = %if.then76.i, %if.end67.i
  %op1.2.i = phi %struct.rtx_def* [ %op1.1.i, %if.end67.i ], [ %call77.i, %if.then76.i ]
  %call79.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %135, i32 %bf.cast12.i, %struct.rtx_def* %op0.2.i, %struct.rtx_def* %op1.2.i) #9
  %149 = load i32* %icode644, align 4, !tbaa !5
  %idxprom81.i = sext i32 %149 to i64
  %genfun.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom81.i, i32 2
  %150 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun.i, align 8, !tbaa !4
  %call83.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %150(%struct.rtx_def* %target.addr.0.i, %struct.rtx_def* %op0.2.i, %struct.rtx_def* %op1.2.i, %struct.rtx_def* %call79.i) #9
  %tobool84.i = icmp eq %struct.rtx_def* %call83.i, null
  br i1 %tobool84.i, label %return, label %if.end86.i

if.end86.i:                                       ; preds = %if.end78.i
  %call87.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call83.i) #9
  br label %return

if.end657:                                        ; preds = %if.then643
  %call659 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 %124, %union.tree_node* %3, %struct.rtx_def* %target) #10
  br label %return

for.inc:                                          ; preds = %for.body
  %inc = add i64 %i.01042, 1
  %incdec.ptr = getelementptr inbounds %struct.builtin_description* %d.01043, i64 1
  %cmp641 = icmp ult i64 %inc, 103
  br i1 %cmp641, label %for.body, label %for.body663

for.body663:                                      ; preds = %for.inc, %for.inc670
  %d.11040 = phi %struct.builtin_description* [ %incdec.ptr672, %for.inc670 ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_1arg to %struct.builtin_description*), %for.inc ]
  %i.11039 = phi i64 [ %inc671, %for.inc670 ], [ 0, %for.inc ]
  %code664 = getelementptr inbounds %struct.builtin_description* %d.11040, i64 0, i32 3
  %151 = load i32* %code664, align 4, !tbaa !6
  %cmp665 = icmp eq i32 %151, %4
  br i1 %cmp665, label %if.then666, label %for.inc670

if.then666:                                       ; preds = %for.body663
  %icode667 = getelementptr inbounds %struct.builtin_description* %d.11040, i64 0, i32 1
  %152 = load i32* %icode667, align 4, !tbaa !5
  %call668 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 %152, %union.tree_node* %3, %struct.rtx_def* %target, i32 0) #10
  br label %return

for.inc670:                                       ; preds = %for.body663
  %inc671 = add i64 %i.11039, 1
  %incdec.ptr672 = getelementptr inbounds %struct.builtin_description* %d.11040, i64 1
  %cmp662 = icmp ult i64 %inc671, 9
  br i1 %cmp662, label %for.body663, label %for.body676

for.body676:                                      ; preds = %for.inc670, %for.inc682
  %d.21037 = phi %struct.builtin_description* [ %incdec.ptr684, %for.inc682 ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_comi to %struct.builtin_description*), %for.inc670 ]
  %i.21036 = phi i64 [ %inc683, %for.inc682 ], [ 0, %for.inc670 ]
  %code677 = getelementptr inbounds %struct.builtin_description* %d.21037, i64 0, i32 3
  %153 = load i32* %code677, align 4, !tbaa !6
  %cmp678 = icmp eq i32 %153, %4
  br i1 %cmp678, label %if.then679, label %for.inc682

if.then679:                                       ; preds = %for.body676
  %value.i1005 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %154 = bitcast i32* %value.i1005 to %union.tree_node**
  %155 = load %union.tree_node** %154, align 8, !tbaa !4
  %chain.i1006 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %156 = load %union.tree_node** %chain.i1006, align 8, !tbaa !4
  %value2.i1007 = getelementptr inbounds %union.tree_node* %156, i64 0, i32 0, i32 2
  %157 = bitcast i32* %value2.i1007 to %union.tree_node**
  %158 = load %union.tree_node** %157, align 8, !tbaa !4
  %call.i1008 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %155, %struct.rtx_def* null, i32 0, i32 0) #9
  %call3.i1009 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %158, %struct.rtx_def* null, i32 0, i32 0) #9
  %icode.i1010 = getelementptr inbounds %struct.builtin_description* %d.21037, i64 0, i32 1
  %159 = load i32* %icode.i1010, align 4, !tbaa !5
  %idxprom.i1011 = zext i32 %159 to i64
  %operand.i1012 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom.i1011, i32 3
  %160 = load %struct.insn_operand_data** %operand.i1012, align 8, !tbaa !4
  %mode.i1013 = getelementptr inbounds %struct.insn_operand_data* %160, i64 0, i32 2
  %161 = bitcast [2 x i8]* %mode.i1013 to i16*
  %bf.load.i1014 = load i16* %161, align 8
  %bf.cast.i1015 = zext i16 %bf.load.i1014 to i32
  %mode10.i1016 = getelementptr inbounds %struct.insn_operand_data* %160, i64 1, i32 2
  %162 = bitcast [2 x i8]* %mode10.i1016 to i16*
  %bf.load11.i1017 = load i16* %162, align 8
  %bf.cast12.i1018 = zext i16 %bf.load11.i1017 to i32
  %comparison13.i = getelementptr inbounds %struct.builtin_description* %d.21037, i64 0, i32 4
  %163 = load i32* %comparison13.i, align 4, !tbaa !8
  %idxprom14.i = zext i16 %bf.load.i1014 to i64
  %arrayidx15.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom14.i
  %164 = load i32* %arrayidx15.i, align 4, !tbaa !9
  %.off.i1019 = add i32 %164, -7
  %switch.i1020 = icmp ult i32 %.off.i1019, 2
  br i1 %switch.i1020, label %if.then.i1021, label %if.end.i1023

if.then.i1021:                                    ; preds = %if.then679
  %call19.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call.i1008, i32 %bf.cast.i1015) #9
  br label %if.end.i1023

if.end.i1023:                                     ; preds = %if.then.i1021, %if.then679
  %op0.0.i1022 = phi %struct.rtx_def* [ %call19.i, %if.then.i1021 ], [ %call.i1008, %if.then679 ]
  %idxprom20.i = zext i16 %bf.load11.i1017 to i64
  %arrayidx21.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom20.i
  %165 = load i32* %arrayidx21.i, align 4, !tbaa !9
  %.off1.i = add i32 %165, -7
  %switch2.i = icmp ult i32 %.off1.i, 2
  br i1 %switch2.i, label %if.then27.i, label %if.end29.i

if.then27.i:                                      ; preds = %if.end.i1023
  %call28.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call3.i1009, i32 %bf.cast12.i1018) #9
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then27.i, %if.end.i1023
  %op1.0.i1024 = phi %struct.rtx_def* [ %call28.i, %if.then27.i ], [ %call3.i1009, %if.end.i1023 ]
  %flag.i1025 = getelementptr inbounds %struct.builtin_description* %d.21037, i64 0, i32 5
  %166 = load i32* %flag.i1025, align 4, !tbaa !0
  %tobool.i1026 = icmp eq i32 %166, 0
  %op1.0.op0.0.i = select i1 %tobool.i1026, %struct.rtx_def* %op1.0.i1024, %struct.rtx_def* %op0.0.i1022
  %op0.0.op1.0.i = select i1 %tobool.i1026, %struct.rtx_def* %op0.0.i1022, %struct.rtx_def* %op1.0.i1024
  %call32.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #9
  %167 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call33.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call32.i, %struct.rtx_def* %167) #9
  %call34.i = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call32.i, i32 0) #9
  %168 = load i32* %icode.i1010, align 4, !tbaa !5
  %idxprom36.i = zext i32 %168 to i64
  %operand38.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom36.i, i32 3
  %169 = load %struct.insn_operand_data** %operand38.i, align 8, !tbaa !4
  %predicate.i1027 = getelementptr inbounds %struct.insn_operand_data* %169, i64 0, i32 0
  %170 = load i32 (%struct.rtx_def*, i32)** %predicate.i1027, align 8, !tbaa !4
  %call40.i1028 = tail call i32 %170(%struct.rtx_def* %op0.0.op1.0.i, i32 %bf.cast.i1015) #9
  %tobool41.i = icmp eq i32 %call40.i1028, 0
  br i1 %tobool41.i, label %if.then42.i, label %if.end44.i

if.then42.i:                                      ; preds = %if.end29.i
  %call43.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast.i1015, %struct.rtx_def* %op0.0.op1.0.i) #9
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.then42.i, %if.end29.i
  %op0.2.i1029 = phi %struct.rtx_def* [ %op0.0.op1.0.i, %if.end29.i ], [ %call43.i, %if.then42.i ]
  %171 = load i32* %icode.i1010, align 4, !tbaa !5
  %idxprom46.i = zext i32 %171 to i64
  %operand48.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom46.i, i32 3
  %172 = load %struct.insn_operand_data** %operand48.i, align 8, !tbaa !4
  %predicate50.i = getelementptr inbounds %struct.insn_operand_data* %172, i64 1, i32 0
  %173 = load i32 (%struct.rtx_def*, i32)** %predicate50.i, align 8, !tbaa !4
  %call51.i = tail call i32 %173(%struct.rtx_def* %op1.0.op0.0.i, i32 %bf.cast12.i1018) #9
  %tobool52.i = icmp eq i32 %call51.i, 0
  br i1 %tobool52.i, label %if.then53.i, label %if.end55.i

if.then53.i:                                      ; preds = %if.end44.i
  %call54.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast12.i1018, %struct.rtx_def* %op1.0.op0.0.i) #9
  br label %if.end55.i

if.end55.i:                                       ; preds = %if.then53.i, %if.end44.i
  %op1.2.i1030 = phi %struct.rtx_def* [ %op1.0.op0.0.i, %if.end44.i ], [ %call54.i, %if.then53.i ]
  %call56.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %163, i32 %bf.cast.i1015, %struct.rtx_def* %op0.2.i1029, %struct.rtx_def* %op1.2.i1030) #9
  %174 = load i32* %icode.i1010, align 4, !tbaa !5
  %idxprom58.i1031 = sext i32 %174 to i64
  %genfun.i1032 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom58.i1031, i32 2
  %175 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun.i1032, align 8, !tbaa !4
  %call60.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %175(%struct.rtx_def* %op0.2.i1029, %struct.rtx_def* %op1.2.i1030, %struct.rtx_def* %call56.i) #9
  %tobool61.i = icmp eq %struct.rtx_def* %call60.i, null
  br i1 %tobool61.i, label %return, label %if.end63.i

if.end63.i:                                       ; preds = %if.end55.i
  %call64.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call60.i) #9
  %call65.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call34.i) #9
  %call66.i1033 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #9
  %176 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call67.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %163, i32 2, %struct.rtx_def* %call66.i1033, %struct.rtx_def* %176) #9
  %call68.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call65.i, %struct.rtx_def* %call67.i) #9
  %call69.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call68.i) #9
  %arrayidx70.i = getelementptr inbounds %struct.rtx_def* %call34.i, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx70.i to %struct.rtx_def**
  %177 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !4
  br label %return

for.inc682:                                       ; preds = %for.body676
  %inc683 = add i64 %i.21036, 1
  %incdec.ptr684 = getelementptr inbounds %struct.builtin_description* %d.21037, i64 1
  %cmp675 = icmp ult i64 %inc683, 12
  br i1 %cmp675, label %for.body676, label %return

return:                                           ; preds = %for.inc682, %if.end63.i, %if.end55.i, %if.end86.i, %if.end78.i, %if.end571, %if.end497, %if.end381, %if.end333, %if.end235, %if.end159, %if.end62, %if.then666, %if.end657, %sw.bb637, %sw.bb633, %sw.bb631, %sw.bb629, %sw.bb627, %sw.bb625, %sw.bb623, %sw.bb621, %sw.bb619, %sw.bb617, %sw.bb615, %sw.bb613, %sw.bb611, %sw.bb609, %sw.bb607, %sw.bb605, %sw.bb603, %sw.bb601, %sw.bb599, %sw.bb597, %sw.bb595, %sw.bb593, %sw.bb591, %sw.bb589, %sw.bb587, %sw.bb585, %sw.bb583, %sw.bb580, %if.end578, %if.then553, %if.end504, %if.then478, %sw.bb402, %sw.bb394, %sw.bb392, %sw.bb390, %if.end388, %if.end340, %sw.bb268, %sw.bb266, %sw.bb264, %sw.bb262, %sw.bb260, %sw.bb258, %sw.bb256, %sw.bb254, %sw.bb252, %sw.bb250, %sw.bb248, %sw.bb246, %sw.bb244, %if.end242, %if.end166, %if.then141, %if.end68, %if.then47, %sw.bb9, %sw.bb
  %retval.0 = phi %struct.rtx_def* [ %call659, %if.end657 ], [ %call668, %if.then666 ], [ %call638, %sw.bb637 ], [ %call634, %sw.bb633 ], [ %call632, %sw.bb631 ], [ %call630, %sw.bb629 ], [ %call628, %sw.bb627 ], [ %call626, %sw.bb625 ], [ %call624, %sw.bb623 ], [ %call622, %sw.bb621 ], [ %call620, %sw.bb619 ], [ %call618, %sw.bb617 ], [ %call616, %sw.bb615 ], [ %call614, %sw.bb613 ], [ %call612, %sw.bb611 ], [ %call610, %sw.bb609 ], [ %call608, %sw.bb607 ], [ %call606, %sw.bb605 ], [ %call604, %sw.bb603 ], [ %call602, %sw.bb601 ], [ %call600, %sw.bb599 ], [ %call598, %sw.bb597 ], [ %call596, %sw.bb595 ], [ %call594, %sw.bb593 ], [ %call592, %sw.bb591 ], [ %call590, %sw.bb589 ], [ %call588, %sw.bb587 ], [ %call586, %sw.bb585 ], [ %call584, %sw.bb583 ], [ null, %sw.bb580 ], [ %target.addr.4, %if.end578 ], [ %119, %if.then553 ], [ %target.addr.3, %if.end504 ], [ %call479, %if.then478 ], [ %call406, %sw.bb402 ], [ null, %sw.bb394 ], [ null, %sw.bb392 ], [ null, %sw.bb390 ], [ null, %if.end388 ], [ %target.addr.2, %if.end340 ], [ null, %sw.bb268 ], [ %call267, %sw.bb266 ], [ null, %sw.bb264 ], [ null, %sw.bb262 ], [ %call261, %sw.bb260 ], [ %call259, %sw.bb258 ], [ %call257, %sw.bb256 ], [ %call255, %sw.bb254 ], [ %call253, %sw.bb252 ], [ %call251, %sw.bb250 ], [ %call249, %sw.bb248 ], [ %call247, %sw.bb246 ], [ %call245, %sw.bb244 ], [ null, %if.end242 ], [ %target.addr.1, %if.end166 ], [ %35, %if.then141 ], [ %target.addr.0, %if.end68 ], [ %call48, %if.then47 ], [ null, %sw.bb9 ], [ null, %sw.bb ], [ null, %if.end62 ], [ null, %if.end159 ], [ null, %if.end235 ], [ null, %if.end333 ], [ null, %if.end381 ], [ null, %if.end497 ], [ null, %if.end571 ], [ %target.addr.0.i, %if.end86.i ], [ null, %if.end78.i ], [ %177, %if.end63.i ], [ null, %if.end55.i ], [ null, %for.inc682 ]
  ret %struct.rtx_def* %retval.0
}
