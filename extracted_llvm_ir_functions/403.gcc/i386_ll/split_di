define void @split_di(%struct.rtx_def** nocapture %operands, i32 %num, %struct.rtx_def** nocapture %lo_half, %struct.rtx_def** nocapture %hi_half) #1 {
entry:
  %tobool44 = icmp eq i32 %num, 0
  br i1 %tobool44, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %0 = sext i32 %num to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %indvars.iv = phi i64 [ %0, %while.body.lr.ph ], [ %indvars.iv.next, %while.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 %indvars.iv.next
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %1, i32 4, i64 0, i32 1, i32 1) #9
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %lo_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !4
  %call3 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %1, i32 4, i64 4, i32 1, i32 1) #9
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %hi_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx5, align 8, !tbaa !4
  br label %while.cond.backedge

if.else:                                          ; preds = %while.body
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear7 = and i32 %bf.lshr, 255
  %cmp8 = icmp eq i32 %bf.clear7, 0
  %.bf.clear7 = select i1 %cmp8, i32 5, i32 %bf.clear7
  %call12 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 4, %struct.rtx_def* %1, i32 %.bf.clear7, i32 0) #9
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %lo_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call12, %struct.rtx_def** %arrayidx14, align 8, !tbaa !4
  %bf.load15 = load i32* %2, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 0
  %cond25 = select i1 %cmp18, i32 5, i32 %bf.clear17
  %call26 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 4, %struct.rtx_def* %1, i32 %cond25, i32 4) #9
  %arrayidx28 = getelementptr inbounds %struct.rtx_def** %hi_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call26, %struct.rtx_def** %arrayidx28, align 8, !tbaa !4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else, %if.then
  %3 = trunc i64 %indvars.iv.next to i32
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.cond.backedge, %entry
  ret void
}
