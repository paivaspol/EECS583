define i32 @cmpsi_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %call = tail call i32 @nonimmediate_operand(%struct.rtx_def* %op, i32 %mode) #9
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.rtx_def* %op to i32*
  %bf.load = load i32* %0, align 8
  %1 = and i32 %bf.load, 16777215
  %2 = icmp eq i32 %1, 262227
  br i1 %2, label %land.lhs.true4, label %if.end57

land.lhs.true4:                                   ; preds = %if.end
  %fld = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load5 = load i32* %4, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 133
  br i1 %cmp7, label %land.lhs.true8, label %if.end57

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14, align 8, !tbaa !4
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load15 = load i32* %6, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 54
  br i1 %cmp17, label %land.lhs.true18, label %if.end57

land.lhs.true18:                                  ; preds = %land.lhs.true8
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 2
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx24, align 8, !tbaa !4
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load25 = load i32* %8, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 54
  br i1 %cmp27, label %land.lhs.true28, label %if.end57

land.lhs.true28:                                  ; preds = %land.lhs.true18
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint, align 8, !tbaa !14
  %cmp37 = icmp eq i64 %9, 8
  br i1 %cmp37, label %land.lhs.true38, label %if.end57

land.lhs.true38:                                  ; preds = %land.lhs.true28
  %rtwint47 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0, i32 0
  %10 = load i64* %rtwint47, align 8, !tbaa !14
  %cmp48 = icmp eq i64 %10, 8
  br i1 %cmp48, label %land.lhs.true49, label %if.end57

land.lhs.true49:                                  ; preds = %land.lhs.true38
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx52, align 8, !tbaa !4
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load53 = load i32* %12, align 8
  %bf.clear54 = and i32 %bf.load53, 65535
  %cmp55 = icmp eq i32 %bf.clear54, 54
  br i1 %cmp55, label %return, label %if.end57

if.end57:                                         ; preds = %land.lhs.true49, %land.lhs.true38, %land.lhs.true28, %land.lhs.true18, %land.lhs.true8, %land.lhs.true4, %if.end
  br label %return

return:                                           ; preds = %land.lhs.true49, %entry, %if.end57
  %retval.0 = phi i32 [ 0, %if.end57 ], [ 1, %entry ], [ 1, %land.lhs.true49 ]
  ret i32 %retval.0
}
