define void @x86_initialize_trampoline(%struct.rtx_def* %tramp, %struct.rtx_def* %fnaddr, %struct.rtx_def* %cxt) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %tramp}, i64 0, metadata !3210), !dbg !9304
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %fnaddr}, i64 0, metadata !3211), !dbg !9304
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %cxt}, i64 0, metadata !3212), !dbg !9304
  %0 = load i32* @target_flags, align 4, !dbg !9305, !tbaa !4347
  %and = and i32 %0, 33554432, !dbg !9305
  %tobool = icmp eq i32 %and, 0, !dbg !9305
  br i1 %tobool, label %if.then, label %if.else, !dbg !9305

if.then:                                          ; preds = %entry
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !dbg !9306, !tbaa !4365
  %call = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 10) #10, !dbg !9307
  %call1 = tail call %struct.rtx_def* @expand_binop(i32 4, %struct.optab* %1, %struct.rtx_def* %fnaddr, %struct.rtx_def* %call, %struct.rtx_def* null, i32 1, i32 0) #10, !dbg !9307
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call1}, i64 0, metadata !3213), !dbg !9307
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %tramp) #10, !dbg !9308
  %call3 = tail call i64 @trunc_int_for_mode(i64 185, i32 2) #10, !dbg !9309
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call3) #10, !dbg !9309
  %call5 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %call4) #10, !dbg !9309
  %call6 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 1) #10, !dbg !9310
  %call7 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call6) #10, !dbg !9310
  %call8 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call7, %struct.rtx_def* %cxt) #10, !dbg !9310
  %call9 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 5) #10, !dbg !9311
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %call9) #10, !dbg !9311
  %call11 = tail call i64 @trunc_int_for_mode(i64 233, i32 2) #10, !dbg !9312
  %call12 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call11) #10, !dbg !9312
  %call13 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call10, %struct.rtx_def* %call12) #10, !dbg !9312
  %call14 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 6) #10, !dbg !9313
  %call15 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call14) #10, !dbg !9313
  %call16 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call15, %struct.rtx_def* %call1) #10, !dbg !9313
  br label %if.end76, !dbg !9314

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1550, i64 0, metadata !3215), !dbg !9315
  %call17 = tail call i32 @x86_64_zero_extended_value(%struct.rtx_def* %fnaddr) #11, !dbg !9316
  %tobool18 = icmp eq i32 %call17, 0, !dbg !9316
  br i1 %tobool18, label %if.else32, label %if.then19, !dbg !9316

if.then19:                                        ; preds = %if.else
  %call20 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 5, %struct.rtx_def* %fnaddr) #10, !dbg !9317
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call20}, i64 0, metadata !3211), !dbg !9317
  %call21 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 0) #10, !dbg !9319
  %call22 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call21) #10, !dbg !9319
  %call23 = tail call i64 @trunc_int_for_mode(i64 47937, i32 3) #10, !dbg !9320
  %call24 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call23) #10, !dbg !9320
  %call25 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call22, %struct.rtx_def* %call24) #10, !dbg !9320
  %call27 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 2) #10, !dbg !9321
  %call28 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call27) #10, !dbg !9321
  %call29 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %call20) #10, !dbg !9322
  %call30 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call28, %struct.rtx_def* %call29) #10, !dbg !9322
  tail call void @llvm.dbg.value(metadata !9323, i64 0, metadata !3215), !dbg !9324
  br label %if.end, !dbg !9325

if.else32:                                        ; preds = %if.else
  %call34 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 0) #10, !dbg !9326
  %call35 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call34) #10, !dbg !9326
  %call36 = tail call i64 @trunc_int_for_mode(i64 47945, i32 3) #10, !dbg !9328
  %call37 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call36) #10, !dbg !9328
  %call38 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call35, %struct.rtx_def* %call37) #10, !dbg !9328
  %call41 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 2) #10, !dbg !9329
  %call42 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call41) #10, !dbg !9329
  %call43 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call42, %struct.rtx_def* %fnaddr) #10, !dbg !9329
  tail call void @llvm.dbg.value(metadata !9330, i64 0, metadata !3215), !dbg !9331
  br label %if.end

if.end:                                           ; preds = %if.else32, %if.then19
  %offset.0 = phi i32 [ 6, %if.then19 ], [ 10, %if.else32 ]
  %conv45106 = zext i32 %offset.0 to i64, !dbg !9332
  %call46 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv45106) #10, !dbg !9332
  %call47 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call46) #10, !dbg !9332
  %call48 = tail call i64 @trunc_int_for_mode(i64 47689, i32 3) #10, !dbg !9333
  %call49 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call48) #10, !dbg !9333
  %call50 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call47, %struct.rtx_def* %call49) #10, !dbg !9333
  %add51 = add nsw i32 %offset.0, 2, !dbg !9334
  %conv52107 = zext i32 %add51 to i64, !dbg !9334
  %call53 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv52107) #10, !dbg !9334
  %call54 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call53) #10, !dbg !9334
  %call55 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call54, %struct.rtx_def* %cxt) #10, !dbg !9334
  %add56 = add nsw i32 %offset.0, 10, !dbg !9335
  tail call void @llvm.dbg.value(metadata !{i32 %add56}, i64 0, metadata !3215), !dbg !9335
  %conv57108 = zext i32 %add56 to i64, !dbg !9336
  %call58 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv57108) #10, !dbg !9336
  %call59 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call58) #10, !dbg !9336
  %call60 = tail call i64 @trunc_int_for_mode(i64 65353, i32 3) #10, !dbg !9337
  %call61 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call60) #10, !dbg !9337
  %call62 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call59, %struct.rtx_def* %call61) #10, !dbg !9337
  %add63 = add nsw i32 %offset.0, 12, !dbg !9338
  %conv64109 = zext i32 %add63 to i64, !dbg !9338
  %call65 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv64109) #10, !dbg !9338
  %call66 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %call65) #10, !dbg !9338
  %call67 = tail call i64 @trunc_int_for_mode(i64 227, i32 2) #10, !dbg !9339
  %call68 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call67) #10, !dbg !9339
  %call69 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call66, %struct.rtx_def* %call68) #10, !dbg !9339
  %add70 = add nsw i32 %offset.0, 13, !dbg !9340
  tail call void @llvm.dbg.value(metadata !{i32 %add70}, i64 0, metadata !3215), !dbg !9340
  %2 = load i32* @target_flags, align 4, !dbg !9341, !tbaa !4347
  %and71 = and i32 %2, 33554432, !dbg !9341
  %tobool72 = icmp ne i32 %and71, 0, !dbg !9341
  %cond = select i1 %tobool72, i32 23, i32 10, !dbg !9341
  %cmp = icmp ugt i32 %add70, %cond, !dbg !9341
  br i1 %cmp, label %if.then74, label %if.end76, !dbg !9341

if.then74:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str76, i64 0, i64 0), i32 10894, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.x86_initialize_trampoline, i64 0, i64 0)) #12, !dbg !9342
  unreachable, !dbg !9342

if.end76:                                         ; preds = %if.end, %if.then
  ret void, !dbg !9343
}
