define i32 @ix86_cc_mode(i32 %code, %struct.rtx_def* nocapture %op0, %struct.rtx_def* %op1) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %code}, i64 0, metadata !2891), !dbg !7867
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %op0}, i64 0, metadata !2892), !dbg !7868
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %op1}, i64 0, metadata !2893), !dbg !7868
  %0 = bitcast %struct.rtx_def* %op0 to i32*, !dbg !7869
  %bf.load = load i32* %0, align 8, !dbg !7869
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7869
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7869
  %idxprom11 = zext i32 %bf.clear to i64, !dbg !7869
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom11, !dbg !7869
  %1 = load i32* %arrayidx, align 4, !dbg !7869, !tbaa !5198
  %cmp = icmp eq i32 %1, 2, !dbg !7869
  br i1 %cmp, label %if.then, label %if.end, !dbg !7869

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !7870, i64 0, metadata !7871), !dbg !7873
  %2 = load i32* @target_flags, align 4, !dbg !7874, !tbaa !4347
  %and.i = lshr i32 %2, 4, !dbg !7874
  %3 = and i32 %and.i, 1, !dbg !7874
  %4 = add i32 %3, 57, !dbg !7874
  br label %return, !dbg !7872

if.end:                                           ; preds = %entry
  switch i32 %code, label %sw.default [
    i32 103, label %return
    i32 102, label %return
    i32 108, label %sw.bb1
    i32 109, label %sw.bb1
    i32 111, label %sw.bb1
    i32 110, label %sw.bb1
    i32 104, label %sw.bb2
    i32 107, label %sw.bb2
    i32 105, label %sw.bb5
    i32 106, label %sw.bb5
    i32 48, label %sw.bb9
  ], !dbg !7875

sw.bb1:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  br label %return, !dbg !7876

sw.bb2:                                           ; preds = %if.end, %if.end
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !7878, !tbaa !4365
  %cmp3 = icmp eq %struct.rtx_def* %5, %op1, !dbg !7878
  %. = select i1 %cmp3, i32 54, i32 53, !dbg !7879
  br label %return, !dbg !7879

sw.bb5:                                           ; preds = %if.end, %if.end
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !7880, !tbaa !4365
  %cmp6 = icmp eq %struct.rtx_def* %6, %op1, !dbg !7880
  %.12 = select i1 %cmp6, i32 55, i32 53, !dbg !7881
  br label %return, !dbg !7881

sw.bb9:                                           ; preds = %if.end
  br label %return, !dbg !7882

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str76, i64 0, i64 0), i32 7200, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.ix86_cc_mode, i64 0, i64 0)) #12, !dbg !7883
  unreachable, !dbg !7883

return:                                           ; preds = %sw.bb5, %sw.bb2, %if.end, %if.end, %sw.bb9, %sw.bb1, %if.then
  %retval.0 = phi i32 [ %4, %if.then ], [ 52, %sw.bb9 ], [ 52, %sw.bb1 ], [ 56, %if.end ], [ 56, %if.end ], [ %., %sw.bb2 ], [ %.12, %sw.bb5 ]
  ret i32 %retval.0, !dbg !7884
}
