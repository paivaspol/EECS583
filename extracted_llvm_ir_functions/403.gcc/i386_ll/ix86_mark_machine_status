define internal void @ix86_mark_machine_status(%struct.function* nocapture %p) #1 {
entry:
  %machine1 = getelementptr inbounds %struct.function* %p, i64 0, i32 51
  %0 = load %struct.machine_function** %machine1, align 8, !tbaa !4
  %tobool = icmp eq %struct.machine_function* %0, null
  br i1 %tobool, label %for.end12, label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %entry, %for.inc11
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc11 ], [ 0, %entry ]
  br label %do.body

do.body:                                          ; preds = %for.inc, %for.cond2.preheader
  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx6 = getelementptr inbounds %struct.machine_function* %0, i64 0, i32 0, i64 %indvars.iv22, i64 %indvars.iv
  %1 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !4
  %cmp7 = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp7, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0, i64 0
  %call = tail call i32 @ggc_set_mark(i8* %2) #9
  %tobool8 = icmp eq i32 %call, 0
  br i1 %tobool8, label %if.then9, label %for.inc

if.then9:                                         ; preds = %land.lhs.true
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %1) #9
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %do.body, %if.then9
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.inc11, label %do.body

for.inc11:                                        ; preds = %for.inc
  %indvars.iv.next23 = add i64 %indvars.iv22, 1
  %lftr.wideiv24 = trunc i64 %indvars.iv.next23 to i32
  %exitcond25 = icmp eq i32 %lftr.wideiv24, 59
  br i1 %exitcond25, label %for.end12, label %for.cond2.preheader

for.end12:                                        ; preds = %for.inc11, %entry
  ret void
}
