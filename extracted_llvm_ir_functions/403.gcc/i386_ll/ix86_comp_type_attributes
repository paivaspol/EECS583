define internal i32 @ix86_comp_type_attributes(%union.tree_node* nocapture %type1, %union.tree_node* nocapture %type2) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !0
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([6 x i8]* @.str58, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0)
  %code = getelementptr inbounds %union.tree_node* %type1, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %attributes = getelementptr inbounds %union.tree_node* %type1, i64 0, i32 0, i32 5
  %2 = bitcast [8 x i8]* %attributes to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !4
  %call = tail call %union.tree_node* @lookup_attribute(i8* %cond, %union.tree_node* %3) #9
  %lnot = icmp eq %union.tree_node* %call, null
  %attributes4 = getelementptr inbounds %union.tree_node* %type2, i64 0, i32 0, i32 5
  %4 = bitcast [8 x i8]* %attributes4 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !4
  %call5 = tail call %union.tree_node* @lookup_attribute(i8* %cond, %union.tree_node* %5) #9
  %lnot7 = icmp eq %union.tree_node* %call5, null
  %cmp9 = xor i1 %lnot, %lnot7
  %6 = zext i1 %cmp9 to i32
  %. = xor i32 %6, 1
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ %., %if.end ]
  ret i32 %retval.0
}
