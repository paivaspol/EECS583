define void @ix86_va_start(i32 %stdarg_p, %union.tree_node* %valist, %struct.rtx_def* %nextarg) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !0
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @std_expand_builtin_va_start(i32 %stdarg_p, %union.tree_node* %valist, %struct.rtx_def* %nextarg) #9
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !4
  %type = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !4
  %values = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = load i8** %values, align 8
  %chain = bitcast i8* %3 to %union.tree_node**
  %4 = load %union.tree_node** %chain, align 8, !tbaa !4
  %chain4 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %5 = load %union.tree_node** %chain4, align 8, !tbaa !4
  %chain6 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain6, align 8, !tbaa !4
  %type8 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type8, align 8, !tbaa !4
  %type10 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type10, align 8, !tbaa !4
  %call = tail call %union.tree_node* @build1(i32 41, %union.tree_node* %8, %union.tree_node* %valist) #9
  %type12 = getelementptr inbounds i8* %3, i64 8
  %9 = bitcast i8* %type12 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !4
  %call13 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %10, %union.tree_node* %call, i8* %3) #9
  %type15 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type15, align 8, !tbaa !4
  %call16 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %11, %union.tree_node* %call, %union.tree_node* %4) #9
  %type18 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type18, align 8, !tbaa !4
  %call19 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %12, %union.tree_node* %call, %union.tree_node* %5) #9
  %type21 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type21, align 8, !tbaa !4
  %call22 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %13, %union.tree_node* %call, %union.tree_node* %6) #9
  %14 = load %struct.function** @cfun, align 8, !tbaa !4
  %words23 = getelementptr inbounds %struct.function* %14, i64 0, i32 13, i32 0
  %15 = load i32* %words23, align 4, !tbaa !0
  %conv = sext i32 %15 to i64
  %regno = getelementptr inbounds %struct.function* %14, i64 0, i32 13, i32 2
  %16 = load i32* %regno, align 4, !tbaa !0
  %conv25 = sext i32 %16 to i64
  %sse_regno = getelementptr inbounds %struct.function* %14, i64 0, i32 13, i32 5
  %17 = load i32* %sse_regno, align 4, !tbaa !0
  %conv27 = sext i32 %17 to i64
  %18 = load i8** @ix86_debug_arg_string, align 8, !tbaa !4
  %cmp = icmp eq i8* %18, null
  br i1 %cmp, label %if.end34, label %if.then29

if.then29:                                        ; preds = %if.end
  %19 = load %struct._IO_FILE** @stderr, align 8, !tbaa !4
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([46 x i8]* @.str75, i64 0, i64 0), i32 %15, i32 %16, i32 %17) #9
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then29
  %type36 = getelementptr inbounds %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type36, align 8, !tbaa !4
  %mul = shl nsw i64 %conv25, 3
  %call37 = tail call %union.tree_node* @build_int_2_wide(i64 %mul, i64 0) #9
  %call38 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %20, %union.tree_node* %call13, %union.tree_node* %call37) #9
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call38, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast [4 x i8]* %side_effects_flag to i32*
  %bf.load = load i32* %21, align 8
  %bf.set = or i32 %bf.load, 256
  store i32 %bf.set, i32* %21, align 8
  %22 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call40 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call38, %struct.rtx_def* %22, i32 0, i32 0) #9
  %type42 = getelementptr inbounds %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type42, align 8, !tbaa !4
  %mul43 = shl nsw i64 %conv27, 4
  %24 = load i32* @target_flags, align 4, !tbaa !0
  %and44 = and i32 %24, 33554432
  %tobool45 = icmp ne i32 %and44, 0
  %conv47 = select i1 %tobool45, i64 48, i64 24
  %add = add nsw i64 %conv47, %mul43
  %call48 = tail call %union.tree_node* @build_int_2_wide(i64 %add, i64 0) #9
  %call49 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %23, %union.tree_node* %call16, %union.tree_node* %call48) #9
  %side_effects_flag51 = getelementptr inbounds %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast [4 x i8]* %side_effects_flag51 to i32*
  %bf.load52 = load i32* %25, align 8
  %bf.set54 = or i32 %bf.load52, 256
  store i32 %bf.set54, i32* %25, align 8
  %26 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call55 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call49, %struct.rtx_def* %26, i32 0, i32 0) #9
  %type57 = getelementptr inbounds %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 1
  %27 = load %union.tree_node** %type57, align 8, !tbaa !4
  %28 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !4
  %call58 = tail call %union.tree_node* @make_tree(%union.tree_node* %27, %struct.rtx_def* %28) #9
  %cmp59 = icmp eq i32 %15, 0
  br i1 %cmp59, label %if.end71, label %if.then61

if.then61:                                        ; preds = %if.end34
  %29 = load %union.tree_node** %type57, align 8, !tbaa !4
  %30 = load i32* @target_flags, align 4, !tbaa !0
  %and64 = lshr i32 %30, 23
  %31 = and i32 %and64, 4
  %32 = add i32 %31, 4
  %conv67127 = zext i32 %32 to i64
  %mul68 = mul nsw i64 %conv67127, %conv
  %call69 = tail call %union.tree_node* @build_int_2_wide(i64 %mul68, i64 0) #9
  %call70 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %29, %union.tree_node* %call58, %union.tree_node* %call69) #9
  br label %if.end71

if.end71:                                         ; preds = %if.end34, %if.then61
  %t.0 = phi %union.tree_node* [ %call70, %if.then61 ], [ %call58, %if.end34 ]
  %33 = load %union.tree_node** %type57, align 8, !tbaa !4
  %call74 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %33, %union.tree_node* %call19, %union.tree_node* %t.0) #9
  %side_effects_flag76 = getelementptr inbounds %union.tree_node* %call74, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast [4 x i8]* %side_effects_flag76 to i32*
  %bf.load77 = load i32* %34, align 8
  %bf.set79 = or i32 %bf.load77, 256
  store i32 %bf.set79, i32* %34, align 8
  %35 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call80 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call74, %struct.rtx_def* %35, i32 0, i32 0) #9
  %type82 = getelementptr inbounds %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 1
  %36 = load %union.tree_node** %type82, align 8, !tbaa !4
  %37 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !4
  %call83 = tail call %union.tree_node* @make_tree(%union.tree_node* %36, %struct.rtx_def* %37) #9
  %38 = load %union.tree_node** %type82, align 8, !tbaa !4
  %call86 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %38, %union.tree_node* %call22, %union.tree_node* %call83) #9
  %side_effects_flag88 = getelementptr inbounds %union.tree_node* %call86, i64 0, i32 0, i32 0, i32 2
  %39 = bitcast [4 x i8]* %side_effects_flag88 to i32*
  %bf.load89 = load i32* %39, align 8
  %bf.set91 = or i32 %bf.load89, 256
  store i32 %bf.set91, i32* %39, align 8
  %40 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call92 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call86, %struct.rtx_def* %40, i32 0, i32 0) #9
  %41 = load %struct.function** @cfun, align 8, !tbaa !4
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %41, i64 0, i32 53
  store i32 128, i32* %preferred_stack_boundary, align 4, !tbaa !0
  br label %return

return:                                           ; preds = %if.end71, %if.then
  ret void
}
