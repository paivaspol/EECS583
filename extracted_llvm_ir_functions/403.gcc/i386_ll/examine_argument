define internal fastcc i32 @examine_argument(i32 %mode, %union.tree_node* %type, i32 %in_return, i32* nocapture %int_nregs, i32* nocapture %sse_nregs) #1 {
entry:
  %class = alloca [4 x i32], align 16
  %arraydecay = getelementptr inbounds [4 x i32]* %class, i64 0, i64 0
  %call = call fastcc i32 @classify_argument(i32 %mode, %union.tree_node* %type, i32* %arraydecay, i32 0) #10
  store i32 0, i32* %int_nregs, align 4, !tbaa !0
  store i32 0, i32* %sse_nregs, align 4, !tbaa !0
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp17 = icmp sgt i32 %call, 0
  br i1 %cmp17, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tobool5 = icmp eq i32 %in_return, 0
  %0 = sext i32 %call to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds [4 x i32]* %class, i64 0, i64 %indvars.iv.next
  %1 = load i32* %arrayidx, align 4, !tbaa !15
  switch i32 %1, label %for.cond.backedge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb1
    i32 5, label %sw.bb1
    i32 9, label %sw.bb8
    i32 8, label %sw.bb4
    i32 7, label %sw.bb4
  ]

sw.bb:                                            ; preds = %for.body, %for.body
  %2 = load i32* %int_nregs, align 4, !tbaa !0
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %int_nregs, align 4, !tbaa !0
  br label %for.cond.backedge

sw.bb1:                                           ; preds = %for.body, %for.body, %for.body
  %3 = load i32* %sse_nregs, align 4, !tbaa !0
  %inc2 = add nsw i32 %3, 1
  store i32 %inc2, i32* %sse_nregs, align 4, !tbaa !0
  br label %for.cond.backedge

sw.bb4:                                           ; preds = %for.body, %for.body
  br i1 %tobool5, label %return, label %for.cond.backedge

for.cond.backedge:                                ; preds = %sw.bb4, %sw.bb, %sw.bb1, %for.body
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %for.body, label %return

sw.bb8:                                           ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str76, i64 0, i64 0), i32 1953, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.examine_argument, i64 0, i64 0)) #11
  unreachable

return:                                           ; preds = %for.cond.preheader, %sw.bb4, %for.cond.backedge, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %for.cond.preheader ], [ 0, %sw.bb4 ], [ 1, %for.cond.backedge ]
  ret i32 %retval.0
}
