define void @init_cumulative_args(%struct.ix86_args* nocapture %cum, %union.tree_node* %fntype, %struct.rtx_def* %libname) #1 {
entry:
  %0 = load i8** @ix86_debug_arg_string, align 8, !tbaa !4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.end16, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !4
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([24 x i8]* @.str60, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %1)
  %tobool = icmp eq %union.tree_node* %fntype, null
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !4
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  %code = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom98 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8*]* @tree_code_name, i64 0, i64 %idxprom98
  %5 = load i8** %arrayidx, align 8, !tbaa !4
  %type = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type, align 8, !tbaa !4
  %code4 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast [4 x i8]* %code4 to i32*
  %bf.load5 = load i32* %7, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %idxprom799 = zext i32 %bf.clear6 to i64
  %arrayidx8 = getelementptr inbounds [256 x i8*]* @tree_code_name, i64 0, i64 %idxprom799
  %8 = load i8** %arrayidx8, align 8, !tbaa !4
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([32 x i8]* @.str61, i64 0, i64 0), i8* %5, i8* %8) #9
  br label %if.end

if.else:                                          ; preds = %if.then
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([10 x i8]* @.str62, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %3)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %tobool11 = icmp eq %struct.rtx_def* %libname, null
  br i1 %tobool11, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE** @stderr, align 8, !tbaa !4
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %libname, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx13 to i8**
  %11 = load i8** %rtstr, align 8, !tbaa !4
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([15 x i8]* @.str63, i64 0, i64 0), i8* %11) #9
  br label %if.end16

if.end16:                                         ; preds = %if.end, %entry, %if.then12
  %12 = bitcast %struct.ix86_args* %cum to i8*
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 28, i32 4, i1 false)
  %13 = load i32* @ix86_regparm, align 4, !tbaa !0
  %nregs = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  store i32 %13, i32* %nregs, align 4, !tbaa !0
  %14 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %14, 22
  %15 = and i32 %and, 8
  %sse_nregs = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 4
  store i32 %15, i32* %sse_nregs, align 4, !tbaa !0
  %tobool18 = icmp ne %union.tree_node* %fntype, null
  br i1 %tobool18, label %land.lhs.true, label %if.end31

land.lhs.true:                                    ; preds = %if.end16
  %16 = load i32* @target_flags, align 4, !tbaa !0
  %and19 = and i32 %16, 33554432
  %tobool20 = icmp eq i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.end31

if.then21:                                        ; preds = %land.lhs.true
  %attributes = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 5
  %17 = bitcast [8 x i8]* %attributes to %union.tree_node**
  %18 = load %union.tree_node** %17, align 8, !tbaa !4
  %call23 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8]* @.str59, i64 0, i64 0), %union.tree_node* %18) #9
  %tobool24 = icmp eq %union.tree_node* %call23, null
  br i1 %tobool24, label %if.then21.if.end31_crit_edge, label %if.then25

if.then21.if.end31_crit_edge:                     ; preds = %if.then21
  %.pre = load i32* %nregs, align 4, !tbaa !0
  br label %if.end31

if.then25:                                        ; preds = %if.then21
  %value = getelementptr inbounds %union.tree_node* %call23, i64 0, i32 0, i32 2
  %19 = bitcast i32* %value to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !4
  %value27 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 2
  %21 = bitcast i32* %value27 to %union.tree_node**
  %22 = load %union.tree_node** %21, align 8, !tbaa !4
  %int_cst28 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst28 to i64*
  %23 = load i64* %low, align 8, !tbaa !14
  %conv = trunc i64 %23 to i32
  store i32 %conv, i32* %nregs, align 4, !tbaa !0
  br label %if.end31

if.end31:                                         ; preds = %if.then21.if.end31_crit_edge, %land.lhs.true, %if.then25, %if.end16
  %24 = phi i32 [ %.pre, %if.then21.if.end31_crit_edge ], [ %13, %land.lhs.true ], [ %conv, %if.then25 ], [ %13, %if.end16 ]
  %maybe_vaarg = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 6
  store i32 0, i32* %maybe_vaarg, align 4, !tbaa !0
  %tobool33 = icmp eq i32 %24, 0
  %tobool18.not109 = xor i1 %tobool18, true
  %brmerge = or i1 %tobool33, %tobool18.not109
  br i1 %brmerge, label %if.end56, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end31
  %values = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 1
  %25 = load i8** %values, align 8
  %cmp38100 = icmp eq i8* %25, null
  br i1 %cmp38100, label %land.lhs.true61, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %26 = bitcast i8* %25 to %union.tree_node*
  %27 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !4
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %param.0101 = phi %union.tree_node* [ %26, %for.body.lr.ph ], [ %28, %for.body ]
  %chain = getelementptr inbounds %union.tree_node* %param.0101, i64 0, i32 0, i32 0, i32 0
  %28 = load %union.tree_node** %chain, align 8, !tbaa !4
  %cmp41 = icmp eq %union.tree_node* %28, null
  br i1 %cmp41, label %land.lhs.true43, label %for.body

land.lhs.true43:                                  ; preds = %for.body
  %value45 = getelementptr inbounds %union.tree_node* %param.0101, i64 0, i32 0, i32 2
  %29 = bitcast i32* %value45 to %union.tree_node**
  %30 = load %union.tree_node** %29, align 8, !tbaa !4
  %cmp46 = icmp eq %union.tree_node* %30, %27
  br i1 %cmp46, label %if.end56, label %if.then48

if.then48:                                        ; preds = %land.lhs.true43
  %31 = load i32* @target_flags, align 4, !tbaa !0
  %and49 = and i32 %31, 33554432
  %tobool50 = icmp eq i32 %and49, 0
  br i1 %tobool50, label %if.then51, label %if.end53

if.then51:                                        ; preds = %if.then48
  store i32 0, i32* %nregs, align 4, !tbaa !0
  br label %if.end53

if.end53:                                         ; preds = %if.then48, %if.then51
  %32 = phi i32 [ %24, %if.then48 ], [ 0, %if.then51 ]
  store i32 1, i32* %maybe_vaarg, align 4, !tbaa !0
  br label %if.end56

if.end56:                                         ; preds = %if.end31, %land.lhs.true43, %if.end53
  %33 = phi i32 [ %24, %if.end31 ], [ %24, %land.lhs.true43 ], [ %32, %if.end53 ]
  %tobool18.not = xor i1 %tobool18, true
  %tobool59 = icmp eq %struct.rtx_def* %libname, null
  %or.cond = and i1 %tobool59, %tobool18.not
  br i1 %or.cond, label %if.then65, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end56
  br i1 %tobool18, label %land.lhs.true61, label %if.end67

land.lhs.true61:                                  ; preds = %for.cond.preheader, %lor.lhs.false
  %34 = phi i32 [ %33, %lor.lhs.false ], [ %24, %for.cond.preheader ]
  %values63 = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 1
  %35 = load i8** %values63, align 8
  %tobool64 = icmp eq i8* %35, null
  br i1 %tobool64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.end56, %land.lhs.true61
  %36 = phi i32 [ %33, %if.end56 ], [ %34, %land.lhs.true61 ]
  store i32 1, i32* %maybe_vaarg, align 4, !tbaa !0
  br label %if.end67

if.end67:                                         ; preds = %land.lhs.true61, %if.then65, %lor.lhs.false
  %37 = phi i32 [ %34, %land.lhs.true61 ], [ %36, %if.then65 ], [ %33, %lor.lhs.false ]
  %38 = load i8** @ix86_debug_arg_string, align 8, !tbaa !4
  %cmp68 = icmp eq i8* %38, null
  br i1 %cmp68, label %if.end73, label %if.then70

if.then70:                                        ; preds = %if.end67
  %39 = load %struct._IO_FILE** @stderr, align 8, !tbaa !4
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([14 x i8]* @.str64, i64 0, i64 0), i32 %37) #9
  br label %if.end73

if.end73:                                         ; preds = %if.end67, %if.then70
  ret void
}
