define i32 @symbolic_operand(%struct.rtx_def* nocapture %op, i32 %mode) #2 {
entry:
  %0 = bitcast %struct.rtx_def* %op to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 68, label %return
    i32 67, label %return
    i32 58, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  switch i32 %bf.clear3, label %if.end [
    i32 68, label %return
    i32 67, label %return
    i32 42, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %sw.bb1
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %3 = load i32* %rtint, align 4, !tbaa !0
  switch i32 %3, label %if.end.thread [
    i32 6, label %return
    i32 7, label %return
    i32 15, label %return
  ]

if.end.thread:                                    ; preds = %land.lhs.true
  br label %return

if.end:                                           ; preds = %sw.bb1
  %cmp26 = icmp eq i32 %bf.clear3, 75
  br i1 %cmp26, label %lor.lhs.false27, label %return

lor.lhs.false27:                                  ; preds = %if.end
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx30, align 8, !tbaa !4
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load31 = load i32* %5, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 54
  br i1 %cmp33, label %if.end35, label %return

if.end35:                                         ; preds = %lor.lhs.false27
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx38, align 8, !tbaa !4
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load39 = load i32* %7, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  switch i32 %bf.clear40, label %if.then56 [
    i32 68, label %return
    i32 67, label %return
    i32 42, label %lor.lhs.false51
  ]

lor.lhs.false51:                                  ; preds = %if.end35
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtint54 = bitcast %union.rtunion_def* %arrayidx53 to i32*
  %8 = load i32* %rtint54, align 4, !tbaa !0
  %cmp55 = icmp eq i32 %8, 7
  br i1 %cmp55, label %if.end57, label %if.then56

if.then56:                                        ; preds = %if.end35, %lor.lhs.false51
  br label %return

if.end57:                                         ; preds = %lor.lhs.false51
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtvec_def**
  %9 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %arrayidx60 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 0
  %10 = load %struct.rtx_def** %arrayidx60, align 8, !tbaa !4
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load61 = load i32* %11, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %bf.clear62.off = add i32 %bf.clear62, -67
  %switch = icmp ult i32 %bf.clear62.off, 2
  %. = zext i1 %switch to i32
  ret i32 %.

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %if.end.thread, %if.end35, %if.end35, %if.end, %lor.lhs.false27, %sw.bb1, %sw.bb1, %land.lhs.true, %land.lhs.true, %land.lhs.true, %entry, %entry, %sw.default, %if.then56
  %retval.0 = phi i32 [ 0, %sw.default ], [ 0, %if.then56 ], [ 1, %entry ], [ 1, %entry ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true ], [ 1, %sw.bb1 ], [ 1, %sw.bb1 ], [ 0, %lor.lhs.false27 ], [ 0, %if.end ], [ 1, %if.end35 ], [ 1, %if.end35 ], [ 0, %if.end.thread ]
  ret i32 %retval.0
}
