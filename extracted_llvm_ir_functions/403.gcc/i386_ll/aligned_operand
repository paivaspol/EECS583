define i32 @aligned_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %parts = alloca %struct.ix86_address, align 8
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %op}, i64 0, metadata !2452), !dbg !6478
  call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !2453), !dbg !6479
  call void @llvm.dbg.declare(metadata !{%struct.ix86_address* %parts}, metadata !2454), !dbg !6480
  %call = call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #10, !dbg !6481
  %tobool = icmp eq i32 %call, 0, !dbg !6481
  br i1 %tobool, label %return, label %if.end, !dbg !6481

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.rtx_def* %op to i32*, !dbg !6482
  %bf.load = load i32* %0, align 8, !dbg !6482
  %bf.clear = and i32 %bf.load, 65535, !dbg !6482
  %cmp = icmp eq i32 %bf.clear, 66, !dbg !6482
  br i1 %cmp, label %if.end2, label %return, !dbg !6482

if.end2:                                          ; preds = %if.end
  %bf.clear4 = and i32 %bf.load, 134217728, !dbg !6483
  %tobool5 = icmp eq i32 %bf.clear4, 0, !dbg !6483
  br i1 %tobool5, label %if.end7, label %return, !dbg !6483

if.end7:                                          ; preds = %if.end2
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, !dbg !6484
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6484
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !6484, !tbaa !4365
  call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !2452), !dbg !6484
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !6485
  %bf.load8 = load i32* %2, align 8, !dbg !6485
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !6485
  switch i32 %bf.clear9, label %if.end15 [
    i32 96, label %return
    i32 99, label %return
  ], !dbg !6485

if.end15:                                         ; preds = %if.end7
  %call16 = call fastcc i32 @ix86_decompose_address(%struct.rtx_def* %1, %struct.ix86_address* %parts) #11, !dbg !6486
  %tobool17 = icmp eq i32 %call16, 0, !dbg !6486
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6486

if.then18:                                        ; preds = %if.end15
  call void @fancy_abort(i8* getelementptr inbounds ([48 x i8]* @.str76, i64 0, i64 0), i32 3535, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.aligned_operand, i64 0, i64 0)) #12, !dbg !6487
  unreachable, !dbg !6487

if.end19:                                         ; preds = %if.end15
  %index = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1, !dbg !6488
  %3 = load %struct.rtx_def** %index, align 8, !dbg !6488, !tbaa !4365
  %tobool20 = icmp eq %struct.rtx_def* %3, null, !dbg !6488
  br i1 %tobool20, label %if.end31, label %if.then21, !dbg !6488

if.then21:                                        ; preds = %if.end19
  %scale = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 3, !dbg !6489
  %4 = load i64* %scale, align 8, !dbg !6489, !tbaa !5557
  %cmp22 = icmp slt i64 %4, 4, !dbg !6489
  br i1 %cmp22, label %land.lhs.true, label %if.end31, !dbg !6489

land.lhs.true:                                    ; preds = %if.then21
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0, !dbg !6489
  %rtuint = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !6489
  %5 = load i32* %rtuint, align 4, !dbg !6489, !tbaa !4347
  %idxprom = zext i32 %5 to i64, !dbg !6489
  %6 = load %struct.function** @cfun, align 8, !dbg !6489, !tbaa !4365
  %emit = getelementptr inbounds %struct.function* %6, i64 0, i32 3, !dbg !6489
  %7 = load %struct.emit_status** %emit, align 8, !dbg !6489, !tbaa !4365
  %regno_pointer_align = getelementptr inbounds %struct.emit_status* %7, i64 0, i32 10, !dbg !6489
  %8 = load i8** %regno_pointer_align, align 8, !dbg !6489, !tbaa !4365
  %arrayidx26 = getelementptr inbounds i8* %8, i64 %idxprom, !dbg !6489
  %9 = load i8* %arrayidx26, align 1, !dbg !6489, !tbaa !4348
  %cmp27 = icmp ult i8 %9, 32, !dbg !6489
  br i1 %cmp27, label %return, label %if.end31, !dbg !6489

if.end31:                                         ; preds = %if.end19, %if.then21, %land.lhs.true
  %base = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 0, !dbg !6491
  %10 = load %struct.rtx_def** %base, align 8, !dbg !6491, !tbaa !4365
  %tobool32 = icmp eq %struct.rtx_def* %10, null, !dbg !6491
  br i1 %tobool32, label %if.end47, label %if.then33, !dbg !6491

if.then33:                                        ; preds = %if.end31
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0, !dbg !6492
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*, !dbg !6492
  %11 = load i32* %rtuint37, align 4, !dbg !6492, !tbaa !4347
  %idxprom38 = zext i32 %11 to i64, !dbg !6492
  %12 = load %struct.function** @cfun, align 8, !dbg !6492, !tbaa !4365
  %emit39 = getelementptr inbounds %struct.function* %12, i64 0, i32 3, !dbg !6492
  %13 = load %struct.emit_status** %emit39, align 8, !dbg !6492, !tbaa !4365
  %regno_pointer_align40 = getelementptr inbounds %struct.emit_status* %13, i64 0, i32 10, !dbg !6492
  %14 = load i8** %regno_pointer_align40, align 8, !dbg !6492, !tbaa !4365
  %arrayidx41 = getelementptr inbounds i8* %14, i64 %idxprom38, !dbg !6492
  %15 = load i8* %arrayidx41, align 1, !dbg !6492, !tbaa !4348
  %cmp43 = icmp ult i8 %15, 32, !dbg !6492
  br i1 %cmp43, label %return, label %if.end47, !dbg !6492

if.end47:                                         ; preds = %if.end31, %if.then33
  %disp = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 2, !dbg !6494
  %16 = load %struct.rtx_def** %disp, align 8, !dbg !6494, !tbaa !4365
  %tobool48 = icmp eq %struct.rtx_def* %16, null, !dbg !6494
  br i1 %tobool48, label %if.end63, label %if.then49, !dbg !6494

if.then49:                                        ; preds = %if.end47
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !6495
  %bf.load51 = load i32* %17, align 8, !dbg !6495
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !6495
  %cmp53 = icmp eq i32 %bf.clear52, 54, !dbg !6495
  br i1 %cmp53, label %lor.lhs.false55, label %return, !dbg !6495

lor.lhs.false55:                                  ; preds = %if.then49
  %rtwint = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0, i32 0, !dbg !6495
  %18 = load i64* %rtwint, align 8, !dbg !6495, !tbaa !5557
  %and = and i64 %18, 3, !dbg !6495
  %cmp59 = icmp eq i64 %and, 0, !dbg !6495
  br i1 %cmp59, label %if.end63, label %return, !dbg !6495

if.end63:                                         ; preds = %lor.lhs.false55, %if.end47
  br label %return, !dbg !6497

return:                                           ; preds = %if.then49, %lor.lhs.false55, %if.then33, %land.lhs.true, %if.end7, %if.end7, %if.end2, %if.end, %entry, %if.end63
  %retval.0 = phi i32 [ 1, %if.end63 ], [ 0, %entry ], [ 1, %if.end ], [ 0, %if.end2 ], [ 1, %if.end7 ], [ 1, %if.end7 ], [ 0, %land.lhs.true ], [ 0, %if.then33 ], [ 0, %lor.lhs.false55 ], [ 0, %if.then49 ]
  ret i32 %retval.0, !dbg !6497
}
