define i32 @binary_fp_operator(%struct.rtx_def* nocapture %op, i32 %mode) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %op}, i64 0, metadata !2417), !dbg !6349
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !2418), !dbg !6350
  %cmp = icmp eq i32 %mode, 0, !dbg !6351
  %.phi.trans.insert = bitcast %struct.rtx_def* %op to i32*
  %bf.load2.pre = load i32* %.phi.trans.insert, align 8, !dbg !6352
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !6351

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load2.pre, 16, !dbg !6351
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6351
  %cmp1 = icmp eq i32 %bf.clear, %mode, !dbg !6351
  br i1 %cmp1, label %if.end, label %return, !dbg !6351

if.end:                                           ; preds = %entry, %land.lhs.true
  %bf.clear3 = and i32 %bf.load2.pre, 65535, !dbg !6352
  switch i32 %bf.clear3, label %return [
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
  ], !dbg !6352

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end
  %bf.lshr5 = lshr i32 %bf.load2.pre, 16, !dbg !6353
  %bf.clear6 = and i32 %bf.lshr5, 255, !dbg !6353
  %idxprom11 = zext i32 %bf.clear6 to i64, !dbg !6353
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom11, !dbg !6353
  %0 = load i32* %arrayidx, align 4, !dbg !6353, !tbaa !5198
  %cmp7 = icmp eq i32 %0, 2, !dbg !6353
  %conv = zext i1 %cmp7 to i32, !dbg !6353
  br label %return, !dbg !6353

return:                                           ; preds = %if.end, %land.lhs.true, %sw.bb
  %retval.0 = phi i32 [ %conv, %sw.bb ], [ 0, %land.lhs.true ], [ 0, %if.end ]
  ret i32 %retval.0, !dbg !6355
}
