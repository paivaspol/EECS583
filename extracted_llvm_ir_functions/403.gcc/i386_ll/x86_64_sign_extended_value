define i32 @x86_64_sign_extended_value(%struct.rtx_def* nocapture %value) #1 {
entry:
  %0 = bitcast %struct.rtx_def* %value to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 54, label %sw.bb
    i32 68, label %sw.bb2
    i32 67, label %sw.bb7
    i32 58, label %sw.bb12
  ]

sw.bb:                                            ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !14
  %call = tail call i64 @trunc_int_for_mode(i64 %1, i32 5) #9
  %call1 = tail call i64 @trunc_int_for_mode(i64 %call, i32 4) #9
  %cmp = icmp eq i64 %call1, %call
  %conv = zext i1 %cmp to i32
  br label %return

sw.bb2:                                           ; preds = %entry
  %2 = load i32* @ix86_cmodel, align 4, !tbaa !10
  %.off143 = add i32 %2, -1
  %3 = icmp ult i32 %.off143, 2
  %lor.ext = zext i1 %3 to i32
  br label %return

sw.bb7:                                           ; preds = %entry
  %4 = load i32* @ix86_cmodel, align 4, !tbaa !10
  %.off = add i32 %4, -4
  %5 = icmp ugt i32 %.off, 1
  %land.ext = zext i1 %5 to i32
  br label %return

sw.bb12:                                          ; preds = %entry
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load15 = load i32* %7, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  switch i32 %bf.clear16, label %if.end118 [
    i32 42, label %land.lhs.true
    i32 75, label %if.then41
  ]

land.lhs.true:                                    ; preds = %sw.bb12
  %fld22 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtvec = bitcast [1 x %union.rtunion_def]* %fld22 to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %num_elem = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  %9 = load i32* %num_elem, align 4, !tbaa !0
  %cmp24 = icmp eq i32 %9, 1
  br i1 %cmp24, label %land.lhs.true26, label %if.end118

land.lhs.true26:                                  ; preds = %land.lhs.true
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %10 = load i32* %rtint, align 4, !tbaa !0
  %cmp32 = icmp eq i32 %10, 15
  br i1 %cmp32, label %return, label %if.else

if.else:                                          ; preds = %land.lhs.true26
  %cmp39 = icmp eq i32 %bf.clear16, 75
  br i1 %cmp39, label %if.then41, label %if.end118

if.then41:                                        ; preds = %sw.bb12, %if.else
  %fld45 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtx47 = bitcast [1 x %union.rtunion_def]* %fld45 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx47, align 8, !tbaa !4
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx53, align 8, !tbaa !4
  %13 = load i32* @ix86_cmodel, align 4, !tbaa !10
  %cmp54 = icmp eq i32 %13, 4
  br i1 %cmp54, label %return, label %if.end

if.end:                                           ; preds = %if.then41
  %14 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load57 = load i32* %14, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 54
  br i1 %cmp59, label %if.end62, label %return

if.end62:                                         ; preds = %if.end
  %rtwint65 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %15 = load i64* %rtwint65, align 8, !tbaa !14
  %call66 = tail call i64 @trunc_int_for_mode(i64 %15, i32 5) #9
  %16 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load67 = load i32* %16, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  switch i32 %bf.clear68, label %return [
    i32 68, label %sw.bb69
    i32 67, label %sw.bb92
  ]

sw.bb69:                                          ; preds = %if.end62
  %17 = load i32* @ix86_cmodel, align 4, !tbaa !10
  %cmp70 = icmp eq i32 %17, 1
  %cmp73 = icmp slt i64 %call66, 1073741824
  %or.cond = and i1 %cmp70, %cmp73
  br i1 %or.cond, label %land.lhs.true75, label %if.end80

land.lhs.true75:                                  ; preds = %sw.bb69
  %call76 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #9
  %cmp77 = icmp eq i64 %call76, %call66
  br i1 %cmp77, label %return, label %land.lhs.true75.if.end80_crit_edge

land.lhs.true75.if.end80_crit_edge:               ; preds = %land.lhs.true75
  %.pre = load i32* @ix86_cmodel, align 4, !tbaa !10
  br label %if.end80

if.end80:                                         ; preds = %land.lhs.true75.if.end80_crit_edge, %sw.bb69
  %18 = phi i32 [ %.pre, %land.lhs.true75.if.end80_crit_edge ], [ %17, %sw.bb69 ]
  %cmp81 = icmp eq i32 %18, 2
  %cmp84 = icmp sgt i64 %call66, 0
  %or.cond140 = and i1 %cmp81, %cmp84
  br i1 %or.cond140, label %land.lhs.true86, label %if.end118

land.lhs.true86:                                  ; preds = %if.end80
  %call87 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #9
  %cmp88 = icmp eq i64 %call87, %call66
  br i1 %cmp88, label %return, label %if.end118

sw.bb92:                                          ; preds = %if.end62
  %19 = load i32* @ix86_cmodel, align 4, !tbaa !10
  %20 = and i32 %19, -3
  %21 = icmp eq i32 %20, 1
  %cmp98 = icmp slt i64 %call66, 1073741824
  %or.cond141 = and i1 %21, %cmp98
  br i1 %or.cond141, label %land.lhs.true100, label %if.end105

land.lhs.true100:                                 ; preds = %sw.bb92
  %call101 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #9
  %cmp102 = icmp eq i64 %call101, %call66
  br i1 %cmp102, label %return, label %land.lhs.true100.if.end105_crit_edge

land.lhs.true100.if.end105_crit_edge:             ; preds = %land.lhs.true100
  %.pre144 = load i32* @ix86_cmodel, align 4, !tbaa !10
  br label %if.end105

if.end105:                                        ; preds = %land.lhs.true100.if.end105_crit_edge, %sw.bb92
  %22 = phi i32 [ %.pre144, %land.lhs.true100.if.end105_crit_edge ], [ %19, %sw.bb92 ]
  %cmp106 = icmp eq i32 %22, 2
  %cmp109 = icmp sgt i64 %call66, 0
  %or.cond142 = and i1 %cmp106, %cmp109
  br i1 %or.cond142, label %land.lhs.true111, label %if.end118

land.lhs.true111:                                 ; preds = %if.end105
  %call112 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #9
  %cmp113 = icmp eq i64 %call112, %call66
  br i1 %cmp113, label %return, label %if.end118

if.end118:                                        ; preds = %sw.bb12, %land.lhs.true, %if.else, %if.end105, %land.lhs.true111, %if.end80, %land.lhs.true86
  br label %return

return:                                           ; preds = %entry, %if.end62, %land.lhs.true111, %land.lhs.true100, %land.lhs.true86, %land.lhs.true75, %if.end, %if.then41, %land.lhs.true26, %if.end118, %sw.bb7, %sw.bb2, %sw.bb
  %retval.0 = phi i32 [ 0, %if.end118 ], [ %land.ext, %sw.bb7 ], [ %lor.ext, %sw.bb2 ], [ %conv, %sw.bb ], [ 1, %land.lhs.true26 ], [ 0, %if.then41 ], [ 0, %if.end ], [ 1, %land.lhs.true75 ], [ 1, %land.lhs.true86 ], [ 1, %land.lhs.true100 ], [ 1, %land.lhs.true111 ], [ 0, %if.end62 ], [ 0, %entry ]
  ret i32 %retval.0
}
