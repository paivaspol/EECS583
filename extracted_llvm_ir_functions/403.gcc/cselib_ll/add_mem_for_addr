define internal fastcc void @add_mem_for_addr(%struct.cselib_val_struct* %addr_elt, %struct.cselib_val_struct* %mem_elt, %struct.rtx_def* %x) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cselib_val_struct* %addr_elt}, i64 0, metadata !628), !dbg !1425
  tail call void @llvm.dbg.value(metadata !{%struct.cselib_val_struct* %mem_elt}, i64 0, metadata !629), !dbg !1425
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !630), !dbg !1426
  %locs = getelementptr inbounds %struct.cselib_val_struct* %mem_elt, i64 0, i32 2, !dbg !1427
  %l.019 = load %struct.elt_loc_list** %locs, align 8, !dbg !1427
  %tobool20 = icmp eq %struct.elt_loc_list* %l.019, null, !dbg !1427
  br i1 %tobool20, label %for.end, label %for.body, !dbg !1427

for.body:                                         ; preds = %entry, %for.inc
  %l.021 = phi %struct.elt_loc_list* [ %l.0, %for.inc ], [ %l.019, %entry ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %l.021, i64 0, i32 1, !dbg !1429
  %0 = load %struct.rtx_def** %loc, align 8, !dbg !1429, !tbaa !897
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !1429
  %bf.load = load i32* %1, align 8, !dbg !1429
  %bf.clear = and i32 %bf.load, 65535, !dbg !1429
  %cmp = icmp eq i32 %bf.clear, 66, !dbg !1429
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !1429

land.lhs.true:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !1429
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1429
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !1429, !tbaa !897
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !1429
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx3 to %struct.cselib_val_struct**, !dbg !1429
  %3 = load %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !1429, !tbaa !897
  %cmp4 = icmp eq %struct.cselib_val_struct* %3, %addr_elt, !dbg !1429
  br i1 %cmp4, label %return, label %for.inc, !dbg !1429

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %next = getelementptr inbounds %struct.elt_loc_list* %l.021, i64 0, i32 0, !dbg !1427
  %l.0 = load %struct.elt_loc_list** %next, align 8, !dbg !1427
  %tobool = icmp eq %struct.elt_loc_list* %l.0, null, !dbg !1427
  br i1 %tobool, label %for.end, label %for.body, !dbg !1427

for.end:                                          ; preds = %for.inc, %entry
  %addr_list = getelementptr inbounds %struct.cselib_val_struct* %addr_elt, i64 0, i32 3, !dbg !1430
  %4 = load %struct.elt_list** %addr_list, align 8, !dbg !1430, !tbaa !897
  %call = tail call fastcc %struct.elt_list* @new_elt_list(%struct.elt_list* %4, %struct.cselib_val_struct* %mem_elt) #8, !dbg !1430
  store %struct.elt_list* %call, %struct.elt_list** %addr_list, align 8, !dbg !1430, !tbaa !897
  %5 = load %struct.elt_loc_list** %locs, align 8, !dbg !1431, !tbaa !897
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct* %addr_elt, i64 0, i32 1, i32 0, !dbg !1432
  %6 = load %struct.rtx_def** %val_rtx, align 8, !dbg !1432, !tbaa !897
  %call7 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x, %struct.rtx_def* %6) #11, !dbg !1432
  %call8 = tail call fastcc %struct.elt_loc_list* @new_elt_loc_list(%struct.elt_loc_list* %5, %struct.rtx_def* %call7) #8, !dbg !1432
  store %struct.elt_loc_list* %call8, %struct.elt_loc_list** %locs, align 8, !dbg !1432, !tbaa !897
  br label %return, !dbg !1433

return:                                           ; preds = %land.lhs.true, %for.end
  ret void, !dbg !1433
}
