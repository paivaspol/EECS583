define internal fastcc %struct.elt_loc_list* @new_elt_loc_list(%struct.elt_loc_list* %next, %struct.rtx_def* %loc) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.elt_loc_list* %next}, i64 0, metadata !737), !dbg !1061
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %loc}, i64 0, metadata !738), !dbg !1062
  %0 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !dbg !1063, !tbaa !897
  tail call void @llvm.dbg.value(metadata !{%struct.elt_loc_list* %0}, i64 0, metadata !739), !dbg !1063
  %tobool = icmp eq %struct.elt_loc_list* %0, null, !dbg !1064
  br i1 %tobool, label %if.else, label %if.then, !dbg !1064

if.then:                                          ; preds = %entry
  %next1 = getelementptr inbounds %struct.elt_loc_list* %0, i64 0, i32 0, !dbg !1065
  %1 = load %struct.elt_loc_list** %next1, align 8, !dbg !1065, !tbaa !897
  store %struct.elt_loc_list* %1, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !dbg !1065, !tbaa !897
  br label %if.end35, !dbg !1065

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !740), !dbg !1066
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !742), !dbg !1067
  tail call void @llvm.dbg.value(metadata !1068, i64 0, metadata !744), !dbg !1067
  %2 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !dbg !1067, !tbaa !897
  %3 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1067, !tbaa !897
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1067
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !1067
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1067
  %cmp = icmp slt i64 %sub.ptr.sub, 24, !dbg !1067
  br i1 %cmp, label %if.then3, label %if.end, !dbg !1067

if.then3:                                         ; preds = %if.else
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 24) #11, !dbg !1067
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1067, !tbaa !897
  br label %if.end, !dbg !1067

if.end:                                           ; preds = %if.then3, %if.else
  %4 = phi i8* [ %.pre, %if.then3 ], [ %3, %if.else ]
  %add.ptr = getelementptr inbounds i8* %4, i64 24, !dbg !1067
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1067, !tbaa !897
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !745), !dbg !1069
  %5 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !dbg !1069, !tbaa !897
  tail call void @llvm.dbg.value(metadata !{i8* %5}, i64 0, metadata !747), !dbg !1069
  %cmp6 = icmp eq i8* %add.ptr, %5, !dbg !1069
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !1069

if.then8:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8, !dbg !1069
  %bf.set = or i8 %bf.load, 2, !dbg !1069
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8, !dbg !1069
  br label %if.end9, !dbg !1069

if.end9:                                          ; preds = %if.end, %if.then8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %add.ptr to i64, !dbg !1069
  %6 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !dbg !1069, !tbaa !907
  %conv13 = sext i32 %6 to i64, !dbg !1069
  %add = add nsw i64 %conv13, %sub.ptr.lhs.cast11, !dbg !1069
  %neg = xor i32 %6, -1, !dbg !1069
  %conv15 = sext i32 %neg to i64, !dbg !1069
  %and = and i64 %add, %conv15, !dbg !1069
  %add.ptr16 = getelementptr inbounds i8* null, i64 %and, !dbg !1069
  store i8* %add.ptr16, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1069, !tbaa !897
  %7 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !dbg !1069, !tbaa !897
  %sub.ptr.lhs.cast19 = ptrtoint i8* %add.ptr16 to i64, !dbg !1069
  %sub.ptr.rhs.cast20 = ptrtoint %struct._obstack_chunk* %7 to i64, !dbg !1069
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20, !dbg !1069
  %8 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !dbg !1069, !tbaa !897
  %sub.ptr.lhs.cast24 = ptrtoint i8* %8 to i64, !dbg !1069
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast20, !dbg !1069
  %cmp27 = icmp sgt i64 %sub.ptr.sub21, %sub.ptr.sub26, !dbg !1069
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !1069

if.then29:                                        ; preds = %if.end9
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1069, !tbaa !897
  br label %if.end32, !dbg !1069

if.end32:                                         ; preds = %if.then29, %if.end9
  %9 = phi i8* [ %8, %if.then29 ], [ %add.ptr16, %if.end9 ]
  store i8* %9, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !dbg !1069, !tbaa !897
  %10 = bitcast i8* %5 to %struct.elt_loc_list*, !dbg !1066
  tail call void @llvm.dbg.value(metadata !{%struct.elt_loc_list* %10}, i64 0, metadata !739), !dbg !1066
  br label %if.end35

if.end35:                                         ; preds = %if.end32, %if.then
  %el.0 = phi %struct.elt_loc_list* [ %0, %if.then ], [ %10, %if.end32 ]
  %next36 = getelementptr inbounds %struct.elt_loc_list* %el.0, i64 0, i32 0, !dbg !1070
  store %struct.elt_loc_list* %next, %struct.elt_loc_list** %next36, align 8, !dbg !1070, !tbaa !897
  %loc37 = getelementptr inbounds %struct.elt_loc_list* %el.0, i64 0, i32 1, !dbg !1071
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc37, align 8, !dbg !1071, !tbaa !897
  %11 = load %struct.rtx_def** @cselib_current_insn, align 8, !dbg !1072, !tbaa !897
  %setting_insn = getelementptr inbounds %struct.elt_loc_list* %el.0, i64 0, i32 2, !dbg !1072
  store %struct.rtx_def* %11, %struct.rtx_def** %setting_insn, align 8, !dbg !1072, !tbaa !897
  ret %struct.elt_loc_list* %el.0, !dbg !1073
}
