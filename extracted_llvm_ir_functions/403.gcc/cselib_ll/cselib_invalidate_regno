define internal fastcc void @cselib_invalidate_regno(i32 %regno, i32 %mode) #1 {
entry:
  %0 = load i32* @reload_completed, align 4, !tbaa !3
  %tobool = icmp ne i32 %0, 0
  %cmp = icmp ugt i32 %regno, 52
  %or.cond = and i1 %tobool, %cmp
  br i1 %or.cond, label %land.lhs.true1, label %if.end

land.lhs.true1:                                   ; preds = %entry
  %idxprom = zext i32 %regno to i64
  %1 = load i16** @reg_renumber, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i16* %1, i64 %idxprom
  %2 = load i16* %arrayidx, align 2, !tbaa !6
  %cmp2 = icmp sgt i16 %2, -1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true1
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 968, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.cselib_invalidate_regno, i64 0, i64 0)) #9
  unreachable

if.end:                                           ; preds = %entry, %land.lhs.true1
  %cmp7 = icmp eq i32 %mode, 0
  %or.cond261 = or i1 %cmp, %cmp7
  br i1 %or.cond261, label %if.else73, label %if.then9

if.then9:                                         ; preds = %if.end
  %3 = load i32* @max_value_regs, align 4, !tbaa !3
  %cmp10 = icmp ugt i32 %3, %regno
  %sub = sub i32 %regno, %3
  %i.0 = select i1 %cmp10, i32 0, i32 %sub
  %regno.off = add i32 %regno, -8
  %4 = icmp ult i32 %regno.off, 8
  %regno.off257 = add i32 %regno, -21
  %5 = icmp ult i32 %regno.off257, 8
  %or.cond263 = or i1 %4, %5
  %regno.off258 = add i32 %regno, -45
  %6 = icmp ult i32 %regno.off258, 8
  %or.cond265 = or i1 %or.cond263, %6
  %regno.off259 = add i32 %regno, -29
  %7 = icmp ult i32 %regno.off259, 8
  %or.cond267 = or i1 %or.cond265, %7
  br i1 %or.cond267, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then9
  %idxprom36 = sext i32 %mode to i64
  %arrayidx37 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom36
  %8 = load i32* %arrayidx37, align 4, !tbaa !5
  %cmp38 = icmp eq i32 %8, 5
  br i1 %cmp38, label %cond.end70, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp42 = icmp eq i32 %8, 6
  %phitmp260 = select i1 %cmp42, i32 2, i32 1
  br label %cond.end70

cond.false:                                       ; preds = %if.then9
  switch i32 %mode, label %cond.false56 [
    i32 18, label %cond.true46
    i32 24, label %cond.true52
  ]

cond.true46:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !tbaa !3
  %and = lshr i32 %9, 25
  %10 = and i32 %and, 1
  %11 = xor i32 %10, 3
  br label %cond.end70

cond.true52:                                      ; preds = %cond.false
  %12 = load i32* @target_flags, align 4, !tbaa !3
  %and53 = lshr i32 %12, 24
  %13 = and i32 %and53, 2
  %14 = xor i32 %13, 6
  br label %cond.end70

cond.false56:                                     ; preds = %cond.false
  %idxprom57 = sext i32 %mode to i64
  %arrayidx58 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom57
  %15 = load i8* %arrayidx58, align 1, !tbaa !1
  %conv59 = zext i8 %15 to i32
  %16 = load i32* @target_flags, align 4, !tbaa !3
  %and60 = lshr i32 %16, 23
  %17 = and i32 %and60, 4
  %18 = add i32 %17, 4
  %add = add i32 %conv59, -1
  %sub63 = add i32 %add, %18
  %div = sdiv i32 %sub63, %18
  br label %cond.end70

cond.end70:                                       ; preds = %cond.true, %lor.rhs, %cond.true46, %cond.false56, %cond.true52
  %cond71 = phi i32 [ %11, %cond.true46 ], [ %14, %cond.true52 ], [ %div, %cond.false56 ], [ 2, %cond.true ], [ %phitmp260, %lor.rhs ]
  %add72 = add i32 %cond71, %regno
  br label %for.cond.preheader

if.else73:                                        ; preds = %if.end
  %add74 = add i32 %regno, 1
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.else73, %cond.end70
  %i.1.ph = phi i32 [ %i.0, %cond.end70 ], [ %regno, %if.else73 ]
  %endregno.0.ph = phi i32 [ %add72, %cond.end70 ], [ %add74, %if.else73 ]
  %cmp76278 = icmp ult i32 %i.1.ph, %endregno.0.ph
  br i1 %cmp76278, label %for.body.lr.ph, label %for.end198

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %19 = zext i32 %i.1.ph to i64
  br label %for.body

for.body:                                         ; preds = %for.inc196.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv = phi i64 [ %19, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc196.for.body_crit_edge ]
  %i.1279 = phi i32 [ %i.1.ph, %for.body.lr.ph ], [ %inc197, %for.inc196.for.body_crit_edge ]
  %20 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.varray_head_tag* %20, i64 0, i32 4
  %te = bitcast %union.varray_data_tag* %data to [1 x %struct.elt_list*]*
  %arrayidx79 = getelementptr inbounds [1 x %struct.elt_list*]* %te, i64 0, i64 %indvars.iv
  %21 = load %struct.elt_list** %arrayidx79, align 8, !tbaa !0
  %tobool80275276 = icmp eq %struct.elt_list* %21, null
  br i1 %tobool80275276, label %for.inc196, label %while.body.lr.ph.lr.ph

while.body.lr.ph.lr.ph:                           ; preds = %for.body
  %22 = trunc i64 %indvars.iv to i32
  %cmp81 = icmp ult i32 %22, 53
  %i.1.off = add i32 %22, -8
  %23 = icmp ult i32 %i.1.off, 8
  %i.1.off252 = add i32 %22, -21
  %24 = icmp ult i32 %i.1.off252, 8
  %or.cond269 = or i1 %23, %24
  %i.1.off253 = add i32 %22, -45
  %25 = icmp ult i32 %i.1.off253, 8
  %or.cond271 = or i1 %or.cond269, %25
  %i.1.off254 = add i32 %22, -29
  %26 = icmp ult i32 %i.1.off254, 8
  %or.cond273 = or i1 %or.cond271, %26
  %sub172 = add i32 %22, -1
  br label %while.body.lr.ph

while.cond.outer.loopexit:                        ; preds = %if.end174
  %tobool80275 = icmp eq %struct.elt_list* %43, null
  br i1 %tobool80275, label %for.inc196, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.body.lr.ph.lr.ph, %while.cond.outer.loopexit
  %27 = phi %struct.elt_list* [ %21, %while.body.lr.ph.lr.ph ], [ %43, %while.cond.outer.loopexit ]
  %l.0.ph277 = phi %struct.elt_list** [ %arrayidx79, %while.body.lr.ph.lr.ph ], [ %next, %while.cond.outer.loopexit ]
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %28 = phi %struct.elt_list* [ %27, %while.body.lr.ph ], [ %53, %while.cond.backedge ]
  %elt = getelementptr inbounds %struct.elt_list* %28, i64 0, i32 1
  %29 = load %struct.cselib_val_struct** %elt, align 8, !tbaa !0
  br i1 %cmp81, label %if.then83, label %if.end174

if.then83:                                        ; preds = %while.body
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct* %29, i64 0, i32 1, i32 0
  %30 = load %struct.rtx_def** %val_rtx, align 8, !tbaa !0
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load = load i32* %31, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  br i1 %or.cond273, label %cond.true107, label %cond.false124

cond.true107:                                     ; preds = %if.then83
  %idxprom108256 = zext i32 %bf.clear to i64
  %arrayidx109 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom108256
  %32 = load i32* %arrayidx109, align 4, !tbaa !5
  %cmp110 = icmp eq i32 %32, 5
  br i1 %cmp110, label %cond.end170, label %lor.rhs112

lor.rhs112:                                       ; preds = %cond.true107
  %cmp120 = icmp eq i32 %32, 6
  %phitmp = select i1 %cmp120, i32 2, i32 1
  br label %cond.end170

cond.false124:                                    ; preds = %if.then83
  switch i32 %bf.clear, label %cond.false148 [
    i32 18, label %cond.true132
    i32 24, label %cond.true144
  ]

cond.true132:                                     ; preds = %cond.false124
  %33 = load i32* @target_flags, align 4, !tbaa !3
  %and133 = lshr i32 %33, 25
  %34 = and i32 %and133, 1
  %35 = xor i32 %34, 3
  br label %cond.end170

cond.true144:                                     ; preds = %cond.false124
  %36 = load i32* @target_flags, align 4, !tbaa !3
  %and145 = lshr i32 %36, 24
  %37 = and i32 %and145, 2
  %38 = xor i32 %37, 6
  br label %cond.end170

cond.false148:                                    ; preds = %cond.false124
  %idxprom154255 = zext i32 %bf.clear to i64
  %arrayidx155 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom154255
  %39 = load i8* %arrayidx155, align 1, !tbaa !1
  %conv156 = zext i8 %39 to i32
  %40 = load i32* @target_flags, align 4, !tbaa !3
  %and157 = lshr i32 %40, 23
  %41 = and i32 %and157, 4
  %42 = add i32 %41, 4
  %add160 = add i32 %conv156, -1
  %sub161 = add i32 %add160, %42
  %div165 = sdiv i32 %sub161, %42
  br label %cond.end170

cond.end170:                                      ; preds = %cond.true107, %lor.rhs112, %cond.true132, %cond.false148, %cond.true144
  %cond171 = phi i32 [ %35, %cond.true132 ], [ %38, %cond.true144 ], [ %div165, %cond.false148 ], [ 2, %cond.true107 ], [ %phitmp, %lor.rhs112 ]
  %add173 = add i32 %sub172, %cond171
  br label %if.end174

if.end174:                                        ; preds = %cond.end170, %while.body
  %this_last.0 = phi i32 [ %add173, %cond.end170 ], [ %i.1279, %while.body ]
  %cmp175 = icmp ult i32 %this_last.0, %regno
  %next = getelementptr inbounds %struct.elt_list* %28, i64 0, i32 0
  %43 = load %struct.elt_list** %next, align 8, !tbaa !0
  br i1 %cmp175, label %while.cond.outer.loopexit, label %if.end178

if.end178:                                        ; preds = %if.end174
  store %struct.elt_list* %43, %struct.elt_list** %l.0.ph277, align 8, !tbaa !0
  %44 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !0
  store %struct.elt_list* %44, %struct.elt_list** %next, align 8, !tbaa !0
  store %struct.elt_list* %28, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !0
  %locs = getelementptr inbounds %struct.cselib_val_struct* %29, i64 0, i32 2
  br label %for.cond179

for.cond179:                                      ; preds = %for.inc, %if.end178
  %p.0 = phi %struct.elt_loc_list** [ %locs, %if.end178 ], [ %next190, %for.inc ]
  %45 = load %struct.elt_loc_list** %p.0, align 8, !tbaa !0
  %loc = getelementptr inbounds %struct.elt_loc_list* %45, i64 0, i32 1
  %46 = load %struct.rtx_def** %loc, align 8, !tbaa !0
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load180 = load i32* %47, align 8
  %bf.clear181 = and i32 %bf.load180, 65535
  %cmp182 = icmp eq i32 %bf.clear181, 61
  br i1 %cmp182, label %land.lhs.true184, label %for.inc

land.lhs.true184:                                 ; preds = %for.cond179
  %arrayidx185 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx185 to i32*
  %48 = load i32* %rtuint, align 4, !tbaa !3
  %cmp186 = icmp eq i32 %48, %22
  br i1 %cmp186, label %if.then188, label %for.inc

if.then188:                                       ; preds = %land.lhs.true184
  %next.i274 = getelementptr inbounds %struct.elt_loc_list* %45, i64 0, i32 0
  %49 = load %struct.elt_loc_list** %next.i274, align 8, !tbaa !0
  store %struct.elt_loc_list* %49, %struct.elt_loc_list** %p.0, align 8, !tbaa !0
  %50 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !0
  store %struct.elt_loc_list* %50, %struct.elt_loc_list** %next.i274, align 8, !tbaa !0
  store %struct.elt_loc_list* %45, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !0
  %51 = load %struct.elt_loc_list** %locs, align 8, !tbaa !0
  %cmp192 = icmp eq %struct.elt_loc_list* %51, null
  br i1 %cmp192, label %if.then194, label %while.cond.backedge

for.inc:                                          ; preds = %for.cond179, %land.lhs.true184
  %next190 = getelementptr inbounds %struct.elt_loc_list* %45, i64 0, i32 0
  br label %for.cond179

if.then194:                                       ; preds = %if.then188
  %52 = load i32* @n_useless_values, align 4, !tbaa !3
  %inc = add nsw i32 %52, 1
  store i32 %inc, i32* @n_useless_values, align 4, !tbaa !3
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then194, %if.then188
  %53 = load %struct.elt_list** %l.0.ph277, align 8, !tbaa !0
  %tobool80 = icmp eq %struct.elt_list* %53, null
  br i1 %tobool80, label %for.inc196, label %while.body

for.inc196:                                       ; preds = %for.body, %while.cond.outer.loopexit, %while.cond.backedge
  %inc197 = add i32 %i.1279, 1
  %exitcond = icmp eq i32 %inc197, %endregno.0.ph
  br i1 %exitcond, label %for.end198, label %for.inc196.for.body_crit_edge

for.inc196.for.body_crit_edge:                    ; preds = %for.inc196
  %indvars.iv.next = add i64 %indvars.iv, 1
  br label %for.body

for.end198:                                       ; preds = %for.inc196, %for.cond.preheader
  ret void
}
