define void @cselib_init() #2 {
entry:
  %0 = load %struct.rtx_def** @callmem, align 8, !dbg !1341, !tbaa !897
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !1341
  br i1 %tobool, label %if.then, label %if.end34, !dbg !1341

if.then:                                          ; preds = %entry
  tail call void @gcc_obstack_init(%struct.obstack* @cselib_obstack) #11, !dbg !1342
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !480), !dbg !1343
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !516), !dbg !1344
  tail call void @llvm.dbg.value(metadata !286, i64 0, metadata !518), !dbg !1344
  %1 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !dbg !1344, !tbaa !897
  %2 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1344, !tbaa !897
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !1344
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !1344
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1344
  %cmp = icmp slt i64 %sub.ptr.sub, 0, !dbg !1344
  br i1 %cmp, label %if.then2, label %if.end, !dbg !1344

if.then2:                                         ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 0) #11, !dbg !1344
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1344, !tbaa !897
  br label %if.end, !dbg !1344

if.end:                                           ; preds = %if.then2, %if.then
  %3 = phi i8* [ %.pre, %if.then2 ], [ %2, %if.then ]
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !519), !dbg !1345
  %4 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !dbg !1345, !tbaa !897
  tail call void @llvm.dbg.value(metadata !{i8* %4}, i64 0, metadata !521), !dbg !1345
  %cmp5 = icmp eq i8* %3, %4, !dbg !1345
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !1345

if.then7:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8, !dbg !1345
  %bf.set = or i8 %bf.load, 2, !dbg !1345
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8, !dbg !1345
  br label %if.end8, !dbg !1345

if.end8:                                          ; preds = %if.end, %if.then7
  %sub.ptr.lhs.cast10 = ptrtoint i8* %3 to i64, !dbg !1345
  %5 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !dbg !1345, !tbaa !907
  %conv12 = sext i32 %5 to i64, !dbg !1345
  %add = add nsw i64 %conv12, %sub.ptr.lhs.cast10, !dbg !1345
  %neg = xor i32 %5, -1, !dbg !1345
  %conv14 = sext i32 %neg to i64, !dbg !1345
  %and = and i64 %add, %conv14, !dbg !1345
  %add.ptr15 = getelementptr inbounds i8* null, i64 %and, !dbg !1345
  store i8* %add.ptr15, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1345, !tbaa !897
  %6 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !dbg !1345, !tbaa !897
  %sub.ptr.lhs.cast18 = ptrtoint i8* %add.ptr15 to i64, !dbg !1345
  %sub.ptr.rhs.cast19 = ptrtoint %struct._obstack_chunk* %6 to i64, !dbg !1345
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !1345
  %7 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !dbg !1345, !tbaa !897
  %sub.ptr.lhs.cast23 = ptrtoint i8* %7 to i64, !dbg !1345
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast19, !dbg !1345
  %cmp26 = icmp sgt i64 %sub.ptr.sub20, %sub.ptr.sub25, !dbg !1345
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !1345

if.then28:                                        ; preds = %if.end8
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1345, !tbaa !897
  br label %if.end31, !dbg !1345

if.end31:                                         ; preds = %if.then28, %if.end8
  %8 = phi i8* [ %7, %if.then28 ], [ %add.ptr15, %if.end8 ]
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !dbg !1345, !tbaa !897
  store i8* %4, i8** @cselib_startobj, align 8, !dbg !1343, !tbaa !897
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !1346, !tbaa !897
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %9) #11, !dbg !1346
  store %struct.rtx_def* %call, %struct.rtx_def** @callmem, align 8, !dbg !1346, !tbaa !897
  tail call void @ggc_add_rtx_root(%struct.rtx_def** @callmem, i32 1) #11, !dbg !1347
  br label %if.end34, !dbg !1348

if.end34:                                         ; preds = %entry, %if.end31
  %call35 = tail call i32 @max_reg_num() #11, !dbg !1349
  store i32 %call35, i32* @cselib_nregs, align 4, !dbg !1349, !tbaa !907
  %conv36 = zext i32 %call35 to i64, !dbg !1350
  %call37 = tail call %struct.varray_head_tag* @varray_init(i64 %conv36, i64 8, i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0)) #11, !dbg !1350
  store %struct.varray_head_tag* %call37, %struct.varray_head_tag** @reg_values, align 8, !dbg !1350, !tbaa !897
  %10 = load i32* @cselib_nregs, align 4, !dbg !1351, !tbaa !907
  %conv38 = zext i32 %10 to i64, !dbg !1351
  %call39 = tail call %struct.varray_head_tag* @varray_init(i64 %conv38, i64 4, i8* getelementptr inbounds ([10 x i8]* @.str2, i64 0, i64 0)) #11, !dbg !1351
  store %struct.varray_head_tag* %call39, %struct.varray_head_tag** @used_regs, align 8, !dbg !1351, !tbaa !897
  %call40 = tail call %struct.htab* @htab_create(i64 31, i32 (i8*)* @get_value_hash, i32 (i8*, i8*)* @entry_and_rtx_equal_p, void (i8*)* null) #11, !dbg !1352
  store %struct.htab* %call40, %struct.htab** @hash_table, align 8, !dbg !1352, !tbaa !897
  tail call fastcc void @clear_table(i32 1) #8, !dbg !1353
  ret void, !dbg !1354
}
