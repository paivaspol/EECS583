define internal fastcc %struct.rtx_def* @wrap_constant(i32 %mode, %struct.rtx_def* %x) #1 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 54, label %if.end
    i32 55, label %lor.lhs.false
  ]

lor.lhs.false:                                    ; preds = %entry
  %bf.clear5 = and i32 %bf.load, 16711680
  %cmp6 = icmp eq i32 %bf.clear5, 0
  br i1 %cmp6, label %if.end, label %return

if.end:                                           ; preds = %entry, %lor.lhs.false
  %cmp7 = icmp eq i32 %mode, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 548, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.wrap_constant, i64 0, i64 0)) #9
  unreachable

if.end9:                                          ; preds = %if.end
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %mode, %struct.rtx_def* %x) #10
  br label %return

return:                                           ; preds = %lor.lhs.false, %entry, %if.end9
  %retval.0 = phi %struct.rtx_def* [ %call, %if.end9 ], [ %x, %entry ], [ %x, %lor.lhs.false ]
  ret %struct.rtx_def* %retval.0
}
