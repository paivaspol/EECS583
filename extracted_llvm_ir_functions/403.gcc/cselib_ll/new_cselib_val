define internal fastcc %struct.cselib_val_struct* @new_cselib_val(i32 %value, i32 %mode) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %value}, i64 0, metadata !752), !dbg !1044
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !753), !dbg !1045
  %0 = load %struct.cselib_val_struct** @empty_vals, align 8, !dbg !1046, !tbaa !897
  tail call void @llvm.dbg.value(metadata !{%struct.cselib_val_struct* %0}, i64 0, metadata !754), !dbg !1046
  %tobool = icmp eq %struct.cselib_val_struct* %0, null, !dbg !1047
  br i1 %tobool, label %if.else, label %if.then, !dbg !1047

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct.cselib_val_struct* %0, i64 0, i32 1, !dbg !1048
  %next_free = bitcast %union.anon* %u to %struct.cselib_val_struct**, !dbg !1048
  %1 = load %struct.cselib_val_struct** %next_free, align 8, !dbg !1048, !tbaa !897
  store %struct.cselib_val_struct* %1, %struct.cselib_val_struct** @empty_vals, align 8, !dbg !1048, !tbaa !897
  br label %if.end36, !dbg !1048

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !755), !dbg !1050
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !757), !dbg !1051
  tail call void @llvm.dbg.value(metadata !1052, i64 0, metadata !759), !dbg !1051
  %2 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !dbg !1051, !tbaa !897
  %3 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1051, !tbaa !897
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1051
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !1051
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1051
  %cmp = icmp slt i64 %sub.ptr.sub, 32, !dbg !1051
  br i1 %cmp, label %if.then3, label %if.end, !dbg !1051

if.then3:                                         ; preds = %if.else
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 32) #11, !dbg !1051
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1051, !tbaa !897
  br label %if.end, !dbg !1051

if.end:                                           ; preds = %if.then3, %if.else
  %4 = phi i8* [ %.pre, %if.then3 ], [ %3, %if.else ]
  %add.ptr = getelementptr inbounds i8* %4, i64 32, !dbg !1051
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1051, !tbaa !897
  tail call void @llvm.dbg.value(metadata !1049, i64 0, metadata !760), !dbg !1053
  %5 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !dbg !1053, !tbaa !897
  tail call void @llvm.dbg.value(metadata !{i8* %5}, i64 0, metadata !762), !dbg !1053
  %cmp7 = icmp eq i8* %add.ptr, %5, !dbg !1053
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !1053

if.then9:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8, !dbg !1053
  %bf.set = or i8 %bf.load, 2, !dbg !1053
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8, !dbg !1053
  br label %if.end10, !dbg !1053

if.end10:                                         ; preds = %if.end, %if.then9
  %sub.ptr.lhs.cast12 = ptrtoint i8* %add.ptr to i64, !dbg !1053
  %6 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !dbg !1053, !tbaa !907
  %conv14 = sext i32 %6 to i64, !dbg !1053
  %add = add nsw i64 %conv14, %sub.ptr.lhs.cast12, !dbg !1053
  %neg = xor i32 %6, -1, !dbg !1053
  %conv16 = sext i32 %neg to i64, !dbg !1053
  %and = and i64 %add, %conv16, !dbg !1053
  %add.ptr17 = getelementptr inbounds i8* null, i64 %and, !dbg !1053
  store i8* %add.ptr17, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1053, !tbaa !897
  %7 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !dbg !1053, !tbaa !897
  %sub.ptr.lhs.cast20 = ptrtoint i8* %add.ptr17 to i64, !dbg !1053
  %sub.ptr.rhs.cast21 = ptrtoint %struct._obstack_chunk* %7 to i64, !dbg !1053
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !1053
  %8 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !dbg !1053, !tbaa !897
  %sub.ptr.lhs.cast25 = ptrtoint i8* %8 to i64, !dbg !1053
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast21, !dbg !1053
  %cmp28 = icmp sgt i64 %sub.ptr.sub22, %sub.ptr.sub27, !dbg !1053
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !1053

if.then30:                                        ; preds = %if.end10
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !dbg !1053, !tbaa !897
  br label %if.end33, !dbg !1053

if.end33:                                         ; preds = %if.then30, %if.end10
  %9 = phi i8* [ %8, %if.then30 ], [ %add.ptr17, %if.end10 ]
  store i8* %9, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !dbg !1053, !tbaa !897
  %10 = bitcast i8* %5 to %struct.cselib_val_struct*, !dbg !1050
  tail call void @llvm.dbg.value(metadata !{%struct.cselib_val_struct* %10}, i64 0, metadata !754), !dbg !1050
  br label %if.end36

if.end36:                                         ; preds = %if.end33, %if.then
  %e.0 = phi %struct.cselib_val_struct* [ %0, %if.then ], [ %10, %if.end33 ]
  %cmp37 = icmp eq i32 %value, 0, !dbg !1054
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !1054

if.then39:                                        ; preds = %if.end36
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 710, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.new_cselib_val, i64 0, i64 0)) #10, !dbg !1055
  unreachable, !dbg !1055

if.end40:                                         ; preds = %if.end36
  %value41 = getelementptr inbounds %struct.cselib_val_struct* %e.0, i64 0, i32 0, !dbg !1056
  store i32 %value, i32* %value41, align 4, !dbg !1056, !tbaa !907
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 60, i32 %mode) #11, !dbg !1057
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct* %e.0, i64 0, i32 1, i32 0, !dbg !1057
  store %struct.rtx_def* %call, %struct.rtx_def** %val_rtx, align 8, !dbg !1057, !tbaa !897
  %11 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0, !dbg !1058
  %e.0.c = ptrtoint %struct.cselib_val_struct* %e.0 to i64, !dbg !1058
  store i64 %e.0.c, i64* %11, align 8, !dbg !1058, !tbaa !897
  %locs = getelementptr inbounds %struct.cselib_val_struct* %e.0, i64 0, i32 2, !dbg !1059
  %12 = bitcast %struct.elt_loc_list** %locs to i8*, !dbg !1060
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 16, i32 8, i1 false), !dbg !1059
  ret %struct.cselib_val_struct* %e.0, !dbg !1060
}
