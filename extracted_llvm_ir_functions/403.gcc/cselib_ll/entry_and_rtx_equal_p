define internal i32 @entry_and_rtx_equal_p(i8* nocapture %entry1, i8* %x_arg) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %entry1}, i64 0, metadata !529), !dbg !1357
  tail call void @llvm.dbg.value(metadata !{i8* %x_arg}, i64 0, metadata !530), !dbg !1357
  %0 = bitcast i8* %x_arg to %struct.rtx_def*, !dbg !1358
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !535), !dbg !1358
  %1 = bitcast i8* %x_arg to i32*, !dbg !1359
  %bf.load = load i32* %1, align 8, !dbg !1359
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !1359
  %bf.clear = and i32 %bf.lshr, 255, !dbg !1359
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !536), !dbg !1359
  %bf.clear3 = and i32 %bf.load, 65535, !dbg !1360
  %cmp = icmp eq i32 %bf.clear3, 54, !dbg !1360
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1360

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 0, !dbg !1360
  %cmp7 = icmp eq i32 %bf.clear3, 55, !dbg !1360
  %or.cond = and i1 %cmp4, %cmp7, !dbg !1360
  br i1 %or.cond, label %if.then, label %if.end, !dbg !1360

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 265, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.entry_and_rtx_equal_p, i64 0, i64 0)) #10, !dbg !1361
  unreachable, !dbg !1361

if.end:                                           ; preds = %lor.lhs.false
  %u = getelementptr inbounds i8* %entry1, i64 8, !dbg !1362
  %val_rtx = bitcast i8* %u to %struct.rtx_def**, !dbg !1362
  %2 = load %struct.rtx_def** %val_rtx, align 8, !dbg !1362, !tbaa !897
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !1362
  %bf.load8 = load i32* %3, align 8, !dbg !1362
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !1362
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !1362
  %cmp11 = icmp eq i32 %bf.clear, %bf.clear10, !dbg !1362
  br i1 %cmp11, label %if.end13, label %return, !dbg !1362

if.end13:                                         ; preds = %if.end
  %cmp16 = icmp eq i32 %bf.clear3, 58, !dbg !1363
  br i1 %cmp16, label %land.lhs.true17, label %if.end32, !dbg !1363

land.lhs.true17:                                  ; preds = %if.end13
  %fld = getelementptr inbounds i8* %x_arg, i64 8, !dbg !1363
  %rtx = bitcast i8* %fld to %struct.rtx_def**, !dbg !1363
  %4 = load %struct.rtx_def** %rtx, align 8, !dbg !1363, !tbaa !897
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !1363
  %bf.load18 = load i32* %5, align 8, !dbg !1363
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !1363
  %bf.clear19.off = add i32 %bf.clear19, -54, !dbg !1363
  %switch = icmp ult i32 %bf.clear19.off, 2, !dbg !1363
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %4}, i64 0, metadata !535), !dbg !1364
  %. = select i1 %switch, %struct.rtx_def* %4, %struct.rtx_def* %0, !dbg !1363
  br label %if.end32, !dbg !1363

if.end32:                                         ; preds = %land.lhs.true17, %if.end13
  %x.0 = phi %struct.rtx_def* [ %0, %if.end13 ], [ %., %land.lhs.true17 ]
  %locs = getelementptr inbounds i8* %entry1, i64 16, !dbg !1365
  %6 = bitcast i8* %locs to %struct.elt_loc_list**, !dbg !1365
  %l.047 = load %struct.elt_loc_list** %6, align 8, !dbg !1365
  %tobool48 = icmp eq %struct.elt_loc_list* %l.047, null, !dbg !1365
  br i1 %tobool48, label %return, label %for.body, !dbg !1365

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_loc_list* %l.049, i64 0, i32 0, !dbg !1365
  %l.0 = load %struct.elt_loc_list** %next, align 8, !dbg !1365
  %tobool = icmp eq %struct.elt_loc_list* %l.0, null, !dbg !1365
  br i1 %tobool, label %return, label %for.body, !dbg !1365

for.body:                                         ; preds = %if.end32, %for.cond
  %l.049 = phi %struct.elt_loc_list* [ %l.0, %for.cond ], [ %l.047, %if.end32 ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %l.049, i64 0, i32 1, !dbg !1367
  %7 = load %struct.rtx_def** %loc, align 8, !dbg !1367, !tbaa !897
  %call = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %7, %struct.rtx_def* %x.0) #8, !dbg !1367
  %tobool33 = icmp eq i32 %call, 0, !dbg !1367
  br i1 %tobool33, label %for.cond, label %return, !dbg !1367

return:                                           ; preds = %if.end32, %for.body, %for.cond, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 0, %if.end32 ], [ 1, %for.body ], [ 0, %for.cond ]
  ret i32 %retval.0, !dbg !1368
}
