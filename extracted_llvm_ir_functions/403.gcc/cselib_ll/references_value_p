define i32 @references_value_p(%struct.rtx_def* nocapture %x, i32 %only_useless) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !394), !dbg !893
  tail call void @llvm.dbg.value(metadata !{i32 %only_useless}, i64 0, metadata !395), !dbg !894
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !895
  %bf.load = load i32* %0, align 8, !dbg !895
  %bf.clear = and i32 %bf.load, 65535, !dbg !895
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !396), !dbg !895
  %idxprom64 = zext i32 %bf.clear to i64, !dbg !896
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom64, !dbg !896
  %1 = load i8** %arrayidx, align 8, !dbg !896, !tbaa !897
  tail call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !397), !dbg !896
  %cmp = icmp eq i32 %bf.clear, 60, !dbg !900
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !900

land.lhs.true:                                    ; preds = %entry
  %tobool = icmp eq i32 %only_useless, 0, !dbg !900
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !900

lor.lhs.false:                                    ; preds = %land.lhs.true
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, !dbg !900
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx3 to %struct.cselib_val_struct**, !dbg !900
  %2 = load %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !900, !tbaa !897
  %locs = getelementptr inbounds %struct.cselib_val_struct* %2, i64 0, i32 2, !dbg !900
  %3 = load %struct.elt_loc_list** %locs, align 8, !dbg !900, !tbaa !897
  %cmp4 = icmp eq %struct.elt_loc_list* %3, null, !dbg !900
  br i1 %cmp4, label %return, label %if.end, !dbg !900

if.end:                                           ; preds = %lor.lhs.false, %entry
  %arrayidx6 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom64, !dbg !901
  %4 = load i8* %arrayidx6, align 1, !dbg !901, !tbaa !898
  %cmp770 = icmp eq i8 %4, 0, !dbg !901
  br i1 %cmp770, label %return, label %for.body.lr.ph, !dbg !901

for.body.lr.ph:                                   ; preds = %if.end
  %5 = zext i8 %4 to i64
  br label %for.body, !dbg !901

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv72 = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next73, %for.cond.backedge ]
  %indvars.iv.next73 = add i64 %indvars.iv72, -1, !dbg !901
  %arrayidx10 = getelementptr inbounds i8* %1, i64 %indvars.iv.next73, !dbg !903
  %6 = load i8* %arrayidx10, align 1, !dbg !903, !tbaa !898
  switch i8 %6, label %for.cond.backedge [
    i8 101, label %land.lhs.true14
    i8 69, label %for.cond26.preheader
  ], !dbg !903

land.lhs.true14:                                  ; preds = %for.body
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next73, !dbg !903
  %rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !903
  %7 = load %struct.rtx_def** %rtx, align 8, !dbg !903, !tbaa !897
  %call = tail call i32 @references_value_p(%struct.rtx_def* %7, i32 %only_useless) #8, !dbg !903
  %tobool18 = icmp eq i32 %call, 0, !dbg !903
  br i1 %tobool18, label %for.cond.backedge, label %return, !dbg !903

for.cond.backedge:                                ; preds = %for.body, %land.lhs.true14, %for.cond26.preheader, %for.cond26
  %8 = trunc i64 %indvars.iv.next73 to i32, !dbg !901
  %cmp7 = icmp sgt i32 %8, 0, !dbg !901
  br i1 %cmp7, label %for.body, label %return, !dbg !901

for.cond26.preheader:                             ; preds = %for.body
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next73, !dbg !905
  %rtvec = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtvec_def**, !dbg !905
  %9 = load %struct.rtvec_def** %rtvec, align 8, !dbg !905, !tbaa !897
  %num_elem65 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 0, !dbg !905
  %10 = load i32* %num_elem65, align 4, !dbg !905, !tbaa !907
  %cmp3066 = icmp sgt i32 %10, 0, !dbg !905
  br i1 %cmp3066, label %for.body32, label %for.cond.backedge, !dbg !905

for.cond26:                                       ; preds = %for.body32
  %11 = trunc i64 %indvars.iv.next to i32, !dbg !905
  %cmp30 = icmp slt i32 %11, %10, !dbg !905
  br i1 %cmp30, label %for.body32, label %for.cond.backedge, !dbg !905

for.body32:                                       ; preds = %for.cond26.preheader, %for.cond26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond26 ], [ 0, %for.cond26.preheader ]
  %arrayidx38 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv, !dbg !908
  %12 = load %struct.rtx_def** %arrayidx38, align 8, !dbg !908, !tbaa !897
  %call39 = tail call i32 @references_value_p(%struct.rtx_def* %12, i32 %only_useless) #8, !dbg !908
  %tobool40 = icmp eq i32 %call39, 0, !dbg !908
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !905
  br i1 %tobool40, label %for.cond26, label %return, !dbg !908

return:                                           ; preds = %if.end, %land.lhs.true14, %for.cond.backedge, %for.body32, %lor.lhs.false, %land.lhs.true
  %retval.0 = phi i32 [ 1, %land.lhs.true ], [ 1, %lor.lhs.false ], [ 1, %for.body32 ], [ 0, %if.end ], [ 1, %land.lhs.true14 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0, !dbg !909
}
