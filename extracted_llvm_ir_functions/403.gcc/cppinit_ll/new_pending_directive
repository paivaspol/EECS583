define internal fastcc void @new_pending_directive(%struct.cpp_pending* nocapture %pend, i8* %text, void (%struct.cpp_reader*, i8*)* %handler) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 24) #6
  %0 = bitcast i8* %call to %struct.pending_option*
  %arg = getelementptr inbounds i8* %call, i64 8
  %1 = bitcast i8* %arg to i8**
  store i8* %text, i8** %1, align 8, !tbaa !3
  %next = bitcast i8* %call to %struct.pending_option**
  store %struct.pending_option* null, %struct.pending_option** %next, align 8, !tbaa !3
  %handler1 = getelementptr inbounds i8* %call, i64 16
  %2 = bitcast i8* %handler1 to void (%struct.cpp_reader*, i8*)**
  store void (%struct.cpp_reader*, i8*)* %handler, void (%struct.cpp_reader*, i8*)** %2, align 8, !tbaa !3
  %directive_head = getelementptr inbounds %struct.cpp_pending* %pend, i64 0, i32 0
  %3 = load %struct.pending_option** %directive_head, align 8, !tbaa !3
  %tobool = icmp eq %struct.pending_option* %3, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store %struct.pending_option* %0, %struct.pending_option** %directive_head, align 8, !tbaa !3
  %directive_tail4.pre = getelementptr inbounds %struct.cpp_pending* %pend, i64 0, i32 1
  br label %if.end

if.else:                                          ; preds = %entry
  %directive_tail = getelementptr inbounds %struct.cpp_pending* %pend, i64 0, i32 1
  %4 = load %struct.pending_option** %directive_tail, align 8, !tbaa !3
  %next3 = getelementptr inbounds %struct.pending_option* %4, i64 0, i32 0
  store %struct.pending_option* %0, %struct.pending_option** %next3, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %directive_tail4.pre-phi = phi %struct.pending_option** [ %directive_tail, %if.else ], [ %directive_tail4.pre, %if.then ]
  store %struct.pending_option* %0, %struct.pending_option** %directive_tail4.pre-phi, align 8, !tbaa !3
  ret void
}
