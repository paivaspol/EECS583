define %struct.rtx_def* @alloc_EXPR_LIST(i32 %kind, %struct.rtx_def* %val, %struct.rtx_def* %next) #0 {
entry:
  %0 = load %struct.rtx_def** @unused_expr_list, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  store %struct.rtx_def* %1, %struct.rtx_def** @unused_expr_list, align 8, !tbaa !0
  %2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0
  %val.c = ptrtoint %struct.rtx_def* %val to i64
  store i64 %val.c, i64* %2, align 8, !tbaa !0
  %3 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %next.c = ptrtoint %struct.rtx_def* %next to i64
  store i64 %next.c, i64* %3, align 8, !tbaa !0
  %4 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %4, align 8
  %bf.value = shl i32 %kind, 16
  %bf.shl = and i32 %bf.value, 16711680
  %bf.clear = and i32 %bf.load, -16711681
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %4, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 %kind, %struct.rtx_def* %val, %struct.rtx_def* %next) #2
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %r.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call, %if.else ]
  ret %struct.rtx_def* %r.0
}
