define %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %val, %struct.rtx_def* %next) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %val}, i64 0, metadata !308), !dbg !356
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %next}, i64 0, metadata !309), !dbg !356
  %0 = load %struct.rtx_def** @unused_insn_list, align 8, !dbg !357, !tbaa !358
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !357
  br i1 %tobool, label %if.else, label %if.then, !dbg !357

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !310), !dbg !361
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, !dbg !363
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !363
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !363, !tbaa !358
  store %struct.rtx_def* %1, %struct.rtx_def** @unused_insn_list, align 8, !dbg !363, !tbaa !358
  %2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0, !dbg !364
  %val.c = ptrtoint %struct.rtx_def* %val to i64, !dbg !364
  store i64 %val.c, i64* %2, align 8, !dbg !364, !tbaa !358
  %3 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0, !dbg !365
  %next.c = ptrtoint %struct.rtx_def* %next to i64, !dbg !365
  store i64 %next.c, i64* %3, align 8, !dbg !365, !tbaa !358
  %4 = bitcast %struct.rtx_def* %0 to i32*, !dbg !366
  %bf.load = load i32* %4, align 8, !dbg !366
  %bf.clear = and i32 %bf.load, -16711681, !dbg !366
  store i32 %bf.clear, i32* %4, align 8, !dbg !366
  br label %if.end, !dbg !367

if.else:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 0, %struct.rtx_def* %val, %struct.rtx_def* %next) #3, !dbg !368
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !310), !dbg !368
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %r.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call, %if.else ]
  ret %struct.rtx_def* %r.0, !dbg !369
}
