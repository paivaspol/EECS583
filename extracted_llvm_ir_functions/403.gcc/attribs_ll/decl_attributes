define %union.tree_node* @decl_attributes(%union.tree_node** %node, %union.tree_node* %attributes, i32 %flags) #0 {
entry:
  %attributes.addr = alloca %union.tree_node*, align 8
  %no_add_attrs = alloca i8, align 1
  store %union.tree_node* %attributes, %union.tree_node** %attributes.addr, align 8, !tbaa !0
  %.b = load i1* @attributes_initialized, align 1
  br i1 %.b, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32* @lang_attribute_common, align 4, !tbaa !3
  %tobool.i = icmp ne i32 %0, 0
  %cond.i = select i1 %tobool.i, %struct.attribute_spec* getelementptr inbounds ([25 x %struct.attribute_spec]* @c_common_attribute_table, i64 0, i64 0), %struct.attribute_spec* getelementptr inbounds ([1 x %struct.attribute_spec]* @empty_attribute_table, i64 0, i64 0)
  store %struct.attribute_spec* %cond.i, %struct.attribute_spec** getelementptr inbounds ([4 x %struct.attribute_spec*]* @attribute_tables, i64 0, i64 0), align 16, !tbaa !0
  %1 = load %struct.attribute_spec** @lang_attribute_table, align 8, !tbaa !0
  store %struct.attribute_spec* %1, %struct.attribute_spec** getelementptr inbounds ([4 x %struct.attribute_spec*]* @attribute_tables, i64 0, i64 1), align 8, !tbaa !0
  %2 = load %struct.attribute_spec** @format_attribute_table, align 8, !tbaa !0
  store %struct.attribute_spec* %2, %struct.attribute_spec** getelementptr inbounds ([4 x %struct.attribute_spec*]* @attribute_tables, i64 0, i64 2), align 16, !tbaa !0
  %3 = load %struct.attribute_spec** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 4), align 8, !tbaa !0
  store %struct.attribute_spec* %3, %struct.attribute_spec** getelementptr inbounds ([4 x %struct.attribute_spec*]* @attribute_tables, i64 0, i64 3), align 8, !tbaa !0
  store i1 true, i1* @attributes_initialized, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load void (%union.tree_node*, %union.tree_node**)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 7), align 8, !tbaa !0
  %5 = load %union.tree_node** %node, align 8, !tbaa !0
  call void %4(%union.tree_node* %5, %union.tree_node** %attributes.addr) #4
  %6 = load %union.tree_node** %node, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom379 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom379
  %8 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %8, 100
  %cmp6 = icmp eq i32 %bf.clear, 30
  %or.cond = and i1 %cmp, %cmp6
  br i1 %or.cond, label %land.lhs.true8, label %for.cond.preheader

land.lhs.true8:                                   ; preds = %if.end
  %and = and i32 %flags, 16
  %tobool9 = icmp eq i32 %and, 0
  br i1 %tobool9, label %if.then10, label %for.cond.preheader

if.then10:                                        ; preds = %land.lhs.true8
  call void @insert_default_attributes(%union.tree_node* %6) #4
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %land.lhs.true8, %if.then10, %if.end
  %a.0397 = load %union.tree_node** %attributes.addr, align 8
  %tobool12398 = icmp eq %union.tree_node* %a.0397, null
  br i1 %tobool12398, label %for.end294, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc291
  %a.0403 = phi %union.tree_node* [ %a.0, %for.inc291 ], [ %a.0397, %for.cond.preheader ]
  %flags.addr.0402 = phi i32 [ %flags.addr.2, %for.inc291 ], [ %flags, %for.cond.preheader ]
  %returned_attrs.0399 = phi %union.tree_node* [ %returned_attrs.2, %for.inc291 ], [ null, %for.cond.preheader ]
  %purpose = getelementptr inbounds %union.tree_node* %a.0403, i64 0, i32 0, i32 1
  %9 = load i8** %purpose, align 8
  %10 = bitcast i8* %9 to %union.tree_node*
  %value = getelementptr inbounds %union.tree_node* %a.0403, i64 0, i32 0, i32 2
  %11 = bitcast i32* %value to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !0
  store i8 0, i8* %no_add_attrs, align 1, !tbaa !4
  br label %for.cond18.preheader

for.cond14:                                       ; preds = %for.end.thread, %for.end
  %indvars.iv.next407414 = add i64 %indvars.iv406, 1
  %13 = trunc i64 %indvars.iv.next407414 to i32
  %cmp15 = icmp slt i32 %13, 4
  br i1 %cmp15, label %for.cond18.preheader, label %if.then48

for.cond18.preheader:                             ; preds = %for.body, %for.cond14
  %indvars.iv406 = phi i64 [ 0, %for.body ], [ %indvars.iv.next407414, %for.cond14 ]
  %arrayidx21 = getelementptr inbounds [4 x %struct.attribute_spec*]* @attribute_tables, i64 0, i64 %indvars.iv406
  %14 = load %struct.attribute_spec** %arrayidx21, align 8, !tbaa !0
  %name23389 = getelementptr inbounds %struct.attribute_spec* %14, i64 0, i32 0
  %15 = load i8** %name23389, align 8, !tbaa !0
  %cmp24390 = icmp eq i8* %15, null
  br i1 %cmp24390, label %for.end.thread, label %for.body26

for.cond18:                                       ; preds = %for.body26
  %name23 = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv.next, i32 0
  %16 = load i8** %name23, align 8, !tbaa !0
  %cmp24 = icmp eq i8* %16, null
  br i1 %cmp24, label %for.end.thread, label %for.body26

for.body26:                                       ; preds = %for.cond18.preheader, %for.cond18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond18 ], [ 0, %for.cond18.preheader ]
  %17 = phi i8* [ %16, %for.cond18 ], [ %15, %for.cond18.preheader ]
  %call = call i32 @is_attribute_p(i8* %17, %union.tree_node* %10) #4
  %tobool32 = icmp eq i32 %call, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %18 = load %struct.attribute_spec** %arrayidx21, align 8, !tbaa !0
  br i1 %tobool32, label %for.cond18, label %for.end

for.end.thread:                                   ; preds = %for.cond18, %for.cond18.preheader
  br label %for.cond14

for.end:                                          ; preds = %for.body26
  %arrayidx37 = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv
  %cmp39 = icmp eq %struct.attribute_spec* %arrayidx37, null
  br i1 %cmp39, label %for.cond14, label %if.else

if.then48:                                        ; preds = %for.cond14
  %str = getelementptr inbounds i8* %9, i64 32
  %19 = bitcast i8* %str to i8**
  %20 = load i8** %19, align 8, !tbaa !0
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([33 x i8]* @.str, i64 0, i64 0), i8* %20) #4
  br label %for.inc291

if.else:                                          ; preds = %for.end
  %call49 = call i32 @list_length(%union.tree_node* %12) #4
  %min_length = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv, i32 1
  %21 = load i32* %min_length, align 4, !tbaa !3
  %cmp50 = icmp slt i32 %call49, %21
  br i1 %cmp50, label %if.then59, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %max_length = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv, i32 2
  %22 = load i32* %max_length, align 4, !tbaa !3
  %cmp52 = icmp sgt i32 %22, -1
  br i1 %cmp52, label %land.lhs.true54, label %if.end64

land.lhs.true54:                                  ; preds = %lor.lhs.false
  %call55 = call i32 @list_length(%union.tree_node* %12) #4
  %23 = load i32* %max_length, align 4, !tbaa !3
  %cmp57 = icmp sgt i32 %call55, %23
  br i1 %cmp57, label %if.then59, label %if.end64

if.then59:                                        ; preds = %land.lhs.true54, %if.else
  %str62 = getelementptr inbounds i8* %9, i64 32
  %24 = bitcast i8* %str62 to i8**
  %25 = load i8** %24, align 8, !tbaa !0
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([55 x i8]* @.str1, i64 0, i64 0), i8* %25) #4
  br label %for.inc291

if.end64:                                         ; preds = %lor.lhs.false, %land.lhs.true54
  %decl_required = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv, i32 3
  %26 = load i8* %decl_required, align 1, !tbaa !4, !range !5
  %tobool65 = icmp eq i8 %26, 0
  br i1 %tobool65, label %if.end86, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %if.end64
  %27 = load %union.tree_node** %node, align 8, !tbaa !0
  %code69 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast [4 x i8]* %code69 to i32*
  %bf.load70 = load i32* %28, align 8
  %bf.clear71 = and i32 %bf.load70, 255
  %idxprom72384 = zext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom72384
  %29 = load i8* %arrayidx73, align 1, !tbaa !1
  %cmp75 = icmp eq i8 %29, 100
  br i1 %cmp75, label %if.end86, label %if.then77

if.then77:                                        ; preds = %land.lhs.true67
  %and78 = and i32 %flags.addr.0402, 7
  %tobool79 = icmp eq i32 %and78, 0
  br i1 %tobool79, label %if.else82, label %if.then80

if.then80:                                        ; preds = %if.then77
  %call81 = call %union.tree_node* @tree_cons(%union.tree_node* %10, %union.tree_node* %12, %union.tree_node* %returned_attrs.0399) #4
  br label %for.inc291

if.else82:                                        ; preds = %if.then77
  %str85 = getelementptr inbounds i8* %9, i64 32
  %30 = bitcast i8* %str85 to i8**
  %31 = load i8** %30, align 8, !tbaa !0
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str2, i64 0, i64 0), i8* %31) #4
  br label %for.inc291

if.end86:                                         ; preds = %if.end64, %land.lhs.true67
  %type_required = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv, i32 4
  %32 = load i8* %type_required, align 1, !tbaa !4, !range !5
  %tobool87 = icmp eq i8 %32, 0
  br i1 %tobool87, label %if.end102, label %land.lhs.true89

land.lhs.true89:                                  ; preds = %if.end86
  %33 = load %union.tree_node** %node, align 8, !tbaa !0
  %code91 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast [4 x i8]* %code91 to i32*
  %bf.load92 = load i32* %34, align 8
  %bf.clear93 = and i32 %bf.load92, 255
  %idxprom94383 = zext i32 %bf.clear93 to i64
  %arrayidx95 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom94383
  %35 = load i8* %arrayidx95, align 1, !tbaa !1
  %cmp97 = icmp eq i8 %35, 100
  br i1 %cmp97, label %if.then99, label %if.end102

if.then99:                                        ; preds = %land.lhs.true89
  %type = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 1
  %and101 = and i32 %flags.addr.0402, -9
  br label %if.end102

if.end102:                                        ; preds = %if.end86, %if.then99, %land.lhs.true89
  %flags.addr.1 = phi i32 [ %and101, %if.then99 ], [ %flags.addr.0402, %land.lhs.true89 ], [ %flags.addr.0402, %if.end86 ]
  %anode.0 = phi %union.tree_node** [ %type, %if.then99 ], [ %node, %land.lhs.true89 ], [ %node, %if.end86 ]
  %function_type_required = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv, i32 5
  %36 = load i8* %function_type_required, align 1, !tbaa !4, !range !5
  %tobool103 = icmp eq i8 %36, 0
  br i1 %tobool103, label %if.end177, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %if.end102
  %37 = load %union.tree_node** %anode.0, align 8, !tbaa !0
  %code107 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 2
  %38 = bitcast [4 x i8]* %code107 to i32*
  %bf.load108 = load i32* %38, align 8
  %bf.clear109 = and i32 %bf.load108, 255
  switch i32 %bf.clear109, label %if.else152 [
    i32 23, label %if.end177
    i32 16, label %if.end177
    i32 13, label %land.lhs.true126
  ]

land.lhs.true126:                                 ; preds = %land.lhs.true105
  %type128 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 1
  %39 = load %union.tree_node** %type128, align 8, !tbaa !0
  %code130 = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 0, i32 2
  %40 = bitcast [4 x i8]* %code130 to i32*
  %bf.load131 = load i32* %40, align 8
  %bf.clear132 = and i32 %bf.load131, 255
  switch i32 %bf.clear132, label %if.else152 [
    i32 23, label %if.then144
    i32 16, label %if.then144
  ]

if.then144:                                       ; preds = %land.lhs.true126, %land.lhs.true126
  %and145 = and i32 %flags.addr.1, 8
  %tobool146 = icmp eq i32 %and145, 0
  br i1 %tobool146, label %if.then147, label %if.end149

if.then147:                                       ; preds = %if.then144
  %call148 = call %union.tree_node* @build_type_copy(%union.tree_node* %37) #4
  store %union.tree_node* %call148, %union.tree_node** %anode.0, align 8, !tbaa !0
  %type151.phi.trans.insert = getelementptr inbounds %union.tree_node* %call148, i64 0, i32 0, i32 0, i32 1
  %.pre.pre = load %union.tree_node** %type151.phi.trans.insert, align 8, !tbaa !0
  %code160.phi.trans.insert.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre.pre, i64 0, i32 0, i32 0, i32 2
  %.phi.trans.insert.phi.trans.insert = bitcast [4 x i8]* %code160.phi.trans.insert.phi.trans.insert to i32*
  %bf.load161.pre.pre = load i32* %.phi.trans.insert.phi.trans.insert, align 8
  br label %if.end149

if.end149:                                        ; preds = %if.then144, %if.then147
  %bf.load161.pre = phi i32 [ %bf.load131, %if.then144 ], [ %bf.load161.pre.pre, %if.then147 ]
  %41 = phi %union.tree_node* [ %37, %if.then144 ], [ %call148, %if.then147 ]
  %type151 = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 0, i32 1
  br label %if.end158

if.else152:                                       ; preds = %land.lhs.true126, %land.lhs.true105
  %and153 = and i32 %flags.addr.1, 2
  %tobool154 = icmp eq i32 %and153, 0
  br i1 %tobool154, label %if.end158, label %if.then155

if.then155:                                       ; preds = %if.else152
  %call156 = call %union.tree_node* @tree_cons(%union.tree_node* %10, %union.tree_node* %12, %union.tree_node* %returned_attrs.0399) #4
  br label %for.inc291

if.end158:                                        ; preds = %if.else152, %if.end149
  %bf.load161 = phi i32 [ %bf.load161.pre, %if.end149 ], [ %bf.load108, %if.else152 ]
  %anode.1 = phi %union.tree_node** [ %type151, %if.end149 ], [ %anode.0, %if.else152 ]
  %bf.clear162 = and i32 %bf.load161, 255
  switch i32 %bf.clear162, label %if.then172 [
    i32 23, label %if.end177
    i32 16, label %if.end177
  ]

if.then172:                                       ; preds = %if.end158
  %str175 = getelementptr inbounds i8* %9, i64 32
  %42 = bitcast i8* %str175 to i8**
  %43 = load i8** %42, align 8, !tbaa !0
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([46 x i8]* @.str3, i64 0, i64 0), i8* %43) #4
  br label %for.inc291

if.end177:                                        ; preds = %if.end158, %if.end158, %land.lhs.true105, %land.lhs.true105, %if.end102
  %anode.2 = phi %union.tree_node** [ %anode.1, %if.end158 ], [ %anode.0, %land.lhs.true105 ], [ %anode.0, %if.end102 ], [ %anode.0, %land.lhs.true105 ], [ %anode.1, %if.end158 ]
  %handler = getelementptr inbounds %struct.attribute_spec* %18, i64 %indvars.iv, i32 6
  %44 = load %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)** %handler, align 8, !tbaa !0
  %cmp178 = icmp eq %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* %44, null
  br i1 %cmp178, label %if.end184, label %if.then180

if.then180:                                       ; preds = %if.end177
  %call182 = call %union.tree_node* %44(%union.tree_node** %anode.2, %union.tree_node* %10, %union.tree_node* %12, i32 %flags.addr.1, i8* %no_add_attrs) #4
  %call183 = call %union.tree_node* @chainon(%union.tree_node* %call182, %union.tree_node* %returned_attrs.0399) #4
  br label %if.end184

if.end184:                                        ; preds = %if.end177, %if.then180
  %returned_attrs.1 = phi %union.tree_node* [ %call183, %if.then180 ], [ %returned_attrs.0399, %if.end177 ]
  %45 = load i8* %type_required, align 1, !tbaa !4, !range !5
  %tobool186 = icmp eq i8 %45, 0
  br i1 %tobool186, label %if.end223, label %land.lhs.true188

land.lhs.true188:                                 ; preds = %if.end184
  %46 = load %union.tree_node** %node, align 8, !tbaa !0
  %code190 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %47 = bitcast [4 x i8]* %code190 to i32*
  %bf.load191 = load i32* %47, align 8
  %bf.clear192 = and i32 %bf.load191, 255
  %idxprom193382 = zext i32 %bf.clear192 to i64
  %arrayidx194 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom193382
  %48 = load i8* %arrayidx194, align 1, !tbaa !1
  %cmp196 = icmp eq i8 %48, 100
  br i1 %cmp196, label %land.lhs.true198, label %if.end223

land.lhs.true198:                                 ; preds = %land.lhs.true188
  %bf.clear192.off = add i32 %bf.clear192, -34
  %switch = icmp ult i32 %bf.clear192.off, 3
  br i1 %switch, label %if.then219, label %if.end223

if.then219:                                       ; preds = %land.lhs.true198
  %mode = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 5
  %49 = bitcast [8 x i8]* %mode to i64*
  %bf.load220 = load i64* %49, align 8
  %bf.clear221 = and i64 %bf.load220, -256
  store i64 %bf.clear221, i64* %49, align 8
  %50 = load %union.tree_node** %node, align 8, !tbaa !0
  %size = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 4
  store %union.tree_node* null, %union.tree_node** %size, align 8, !tbaa !0
  %51 = load %union.tree_node** %node, align 8, !tbaa !0
  call void @layout_decl(%union.tree_node* %51, i32 0) #4
  br label %if.end223

if.end223:                                        ; preds = %land.lhs.true198, %if.end184, %if.then219, %land.lhs.true188
  %52 = load i8* %no_add_attrs, align 1, !tbaa !4, !range !5
  %tobool224 = icmp eq i8 %52, 0
  br i1 %tobool224, label %if.then225, label %for.inc291

if.then225:                                       ; preds = %if.end223
  %53 = load %union.tree_node** %anode.2, align 8, !tbaa !0
  %code228 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 0, i32 2
  %54 = bitcast [4 x i8]* %code228 to i32*
  %bf.load229 = load i32* %54, align 8
  %bf.clear230 = and i32 %bf.load229, 255
  %idxprom231380 = zext i32 %bf.clear230 to i64
  %arrayidx232 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom231380
  %55 = load i8* %arrayidx232, align 1, !tbaa !1
  %cmp234 = icmp eq i8 %55, 100
  br i1 %cmp234, label %if.then236, label %if.else239

if.then236:                                       ; preds = %if.then225
  %attributes238 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 16
  br label %if.end242

if.else239:                                       ; preds = %if.then225
  %attributes241 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 5
  %56 = bitcast [8 x i8]* %attributes241 to %union.tree_node**
  br label %if.end242

if.end242:                                        ; preds = %if.else239, %if.then236
  %old_attrs.0.in = phi %union.tree_node** [ %attributes238, %if.then236 ], [ %56, %if.else239 ]
  %old_attrs.0 = load %union.tree_node** %old_attrs.0.in, align 8
  %name243 = getelementptr inbounds %struct.attribute_spec* %arrayidx37, i64 0, i32 0
  %57 = load i8** %name243, align 8, !tbaa !0
  %call244 = call %union.tree_node* @lookup_attribute(i8* %57, %union.tree_node* %old_attrs.0) #4
  %cond395 = icmp eq %union.tree_node* %call244, null
  br i1 %cond395, label %if.then263, label %for.body248

for.body248:                                      ; preds = %if.end242, %for.inc256
  %a226.0396 = phi %union.tree_node* [ %call259, %for.inc256 ], [ %call244, %if.end242 ]
  %value250 = getelementptr inbounds %union.tree_node* %a226.0396, i64 0, i32 0, i32 2
  %58 = bitcast i32* %value250 to %union.tree_node**
  %59 = load %union.tree_node** %58, align 8, !tbaa !0
  %call251 = call i32 @simple_cst_equal(%union.tree_node* %59, %union.tree_node* %12) #4
  %cmp252 = icmp eq i32 %call251, 1
  br i1 %cmp252, label %for.inc291, label %for.inc256

for.inc256:                                       ; preds = %for.body248
  %60 = load i8** %name243, align 8, !tbaa !0
  %chain = getelementptr inbounds %union.tree_node* %a226.0396, i64 0, i32 0, i32 0, i32 0
  %61 = load %union.tree_node** %chain, align 8, !tbaa !0
  %call259 = call %union.tree_node* @lookup_attribute(i8* %60, %union.tree_node* %61) #4
  %cond = icmp eq %union.tree_node* %call259, null
  br i1 %cond, label %if.then263, label %for.body248

if.then263:                                       ; preds = %if.end242, %for.inc256
  %62 = load %union.tree_node** %anode.2, align 8, !tbaa !0
  %code265 = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 0, i32 2
  %63 = bitcast [4 x i8]* %code265 to i32*
  %bf.load266 = load i32* %63, align 8
  %bf.clear267 = and i32 %bf.load266, 255
  %idxprom268381 = zext i32 %bf.clear267 to i64
  %arrayidx269 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom268381
  %64 = load i8* %arrayidx269, align 1, !tbaa !1
  %cmp271 = icmp eq i8 %64, 100
  br i1 %cmp271, label %if.then273, label %if.else277

if.then273:                                       ; preds = %if.then263
  %call274 = call %union.tree_node* @tree_cons(%union.tree_node* %10, %union.tree_node* %12, %union.tree_node* %old_attrs.0) #4
  %65 = load %union.tree_node** %anode.2, align 8, !tbaa !0
  %attributes276 = getelementptr inbounds %union.tree_node* %65, i64 0, i32 0, i32 16
  store %union.tree_node* %call274, %union.tree_node** %attributes276, align 8, !tbaa !0
  br label %for.inc291

if.else277:                                       ; preds = %if.then263
  %and278 = and i32 %flags.addr.1, 8
  %tobool279 = icmp eq i32 %and278, 0
  %call285 = call %union.tree_node* @tree_cons(%union.tree_node* %10, %union.tree_node* %12, %union.tree_node* %old_attrs.0) #4
  br i1 %tobool279, label %if.else284, label %if.then280

if.then280:                                       ; preds = %if.else277
  %66 = load %union.tree_node** %anode.2, align 8, !tbaa !0
  %attributes283 = getelementptr inbounds %union.tree_node* %66, i64 0, i32 0, i32 5
  %67 = bitcast [8 x i8]* %attributes283 to %union.tree_node**
  store %union.tree_node* %call285, %union.tree_node** %67, align 8, !tbaa !0
  br label %for.inc291

if.else284:                                       ; preds = %if.else277
  %call286 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %62, %union.tree_node* %call285) #4
  store %union.tree_node* %call286, %union.tree_node** %anode.2, align 8, !tbaa !0
  br label %for.inc291

for.inc291:                                       ; preds = %for.body248, %if.end223, %if.then273, %if.else284, %if.then280, %if.then172, %if.then155, %if.else82, %if.then80, %if.then59, %if.then48
  %returned_attrs.2 = phi %union.tree_node* [ %returned_attrs.0399, %if.then48 ], [ %returned_attrs.0399, %if.then59 ], [ %returned_attrs.0399, %if.then172 ], [ %returned_attrs.1, %if.end223 ], [ %returned_attrs.1, %if.then273 ], [ %returned_attrs.1, %if.then280 ], [ %returned_attrs.1, %if.else284 ], [ %call156, %if.then155 ], [ %call81, %if.then80 ], [ %returned_attrs.0399, %if.else82 ], [ %returned_attrs.1, %for.body248 ]
  %flags.addr.2 = phi i32 [ %flags.addr.0402, %if.then48 ], [ %flags.addr.0402, %if.then59 ], [ %flags.addr.1, %if.then172 ], [ %flags.addr.1, %if.end223 ], [ %flags.addr.1, %if.then273 ], [ %flags.addr.1, %if.then280 ], [ %flags.addr.1, %if.else284 ], [ %flags.addr.1, %if.then155 ], [ %flags.addr.0402, %if.then80 ], [ %flags.addr.0402, %if.else82 ], [ %flags.addr.1, %for.body248 ]
  %chain293 = getelementptr inbounds %union.tree_node* %a.0403, i64 0, i32 0, i32 0, i32 0
  %a.0 = load %union.tree_node** %chain293, align 8
  %tobool12 = icmp eq %union.tree_node* %a.0, null
  br i1 %tobool12, label %for.end294, label %for.body

for.end294:                                       ; preds = %for.inc291, %for.cond.preheader
  %returned_attrs.0.lcssa = phi %union.tree_node* [ null, %for.cond.preheader ], [ %returned_attrs.2, %for.inc291 ]
  ret %union.tree_node* %returned_attrs.0.lcssa
}
