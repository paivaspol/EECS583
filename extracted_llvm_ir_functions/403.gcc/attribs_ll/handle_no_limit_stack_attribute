define internal noalias %union.tree_node* @handle_no_limit_stack_attribute(%union.tree_node** nocapture %node, %union.tree_node* nocapture %name, %union.tree_node* nocapture %args, i32 %flags, i8* nocapture %no_add_attrs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %node}, i64 0, metadata !837), !dbg !1528
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %name}, i64 0, metadata !838), !dbg !1529
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %args}, i64 0, metadata !839), !dbg !1530
  tail call void @llvm.dbg.value(metadata !{i32 %flags}, i64 0, metadata !840), !dbg !1531
  tail call void @llvm.dbg.value(metadata !{i8* %no_add_attrs}, i64 0, metadata !841), !dbg !1532
  %0 = load %union.tree_node** %node, align 8, !dbg !1533, !tbaa !1026
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %0}, i64 0, metadata !842), !dbg !1533
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !1534
  %1 = bitcast [4 x i8]* %code to i32*, !dbg !1534
  %bf.load = load i32* %1, align 8, !dbg !1534
  %bf.clear = and i32 %bf.load, 255, !dbg !1534
  %cmp = icmp eq i32 %bf.clear, 30, !dbg !1534
  br i1 %cmp, label %if.else, label %if.then, !dbg !1534

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1, !dbg !1535
  %2 = getelementptr inbounds i8** %id, i64 1, !dbg !1535
  %3 = load i8** %2, align 8, !dbg !1535, !tbaa !1026
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([41 x i8]* @.str32, i64 0, i64 0), i8* %3) #5, !dbg !1535
  store i8 1, i8* %no_add_attrs, align 1, !dbg !1537, !tbaa !1050
  br label %if.end10, !dbg !1538

if.else:                                          ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12, !dbg !1539
  %4 = load %union.tree_node** %initial, align 8, !dbg !1539, !tbaa !1026
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !1539
  br i1 %tobool, label %if.else6, label %if.then2, !dbg !1539

if.then2:                                         ; preds = %if.else
  %id4 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1, !dbg !1540
  %5 = getelementptr inbounds i8** %id4, i64 1, !dbg !1540
  %6 = load i8** %5, align 8, !dbg !1540, !tbaa !1026
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([42 x i8]* @.str33, i64 0, i64 0), i8* %6) #5, !dbg !1540
  store i8 1, i8* %no_add_attrs, align 1, !dbg !1542, !tbaa !1050
  br label %if.end10, !dbg !1543

if.else6:                                         ; preds = %if.else
  %no_limit_stack = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !1544
  %7 = bitcast [8 x i8]* %no_limit_stack to i64*, !dbg !1544
  %bf.load8 = load i64* %7, align 8, !dbg !1544
  %bf.set = or i64 %bf.load8, 268435456, !dbg !1544
  store i64 %bf.set, i64* %7, align 8, !dbg !1544
  br label %if.end10

if.end10:                                         ; preds = %if.then2, %if.else6, %if.then
  ret %union.tree_node* null, !dbg !1545
}
