define internal noalias %union.tree_node* @handle_unused_attribute(%union.tree_node** nocapture %node, %union.tree_node* nocapture %name, %union.tree_node* nocapture %args, i32 %flags, i8* nocapture %no_add_attrs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %node}, i64 0, metadata !952), !dbg !1253
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %name}, i64 0, metadata !953), !dbg !1254
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %args}, i64 0, metadata !954), !dbg !1255
  tail call void @llvm.dbg.value(metadata !{i32 %flags}, i64 0, metadata !955), !dbg !1256
  tail call void @llvm.dbg.value(metadata !{i8* %no_add_attrs}, i64 0, metadata !956), !dbg !1257
  %0 = load %union.tree_node** %node, align 8, !dbg !1258, !tbaa !1026
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !1258
  %1 = bitcast [4 x i8]* %code to i32*, !dbg !1258
  %bf.load = load i32* %1, align 8, !dbg !1258
  %bf.clear = and i32 %bf.load, 255, !dbg !1258
  %idxprom57 = zext i32 %bf.clear to i64, !dbg !1258
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom57, !dbg !1258
  %2 = load i8* %arrayidx, align 1, !dbg !1258, !tbaa !1027
  %cmp = icmp eq i8 %2, 100, !dbg !1258
  br i1 %cmp, label %if.then, label %if.else39, !dbg !1258

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %0}, i64 0, metadata !957), !dbg !1259
  switch i32 %bf.clear, label %if.else [
    i32 35, label %if.then35
    i32 34, label %if.then35
    i32 30, label %if.then35
    i32 31, label %if.then35
    i32 33, label %if.then35
  ], !dbg !1260

if.then35:                                        ; preds = %if.then, %if.then, %if.then, %if.then, %if.then
  %bf.set = or i32 %bf.load, 65536, !dbg !1261
  store i32 %bf.set, i32* %1, align 8, !dbg !1261
  br label %if.end47, !dbg !1261

if.else:                                          ; preds = %if.then
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1, !dbg !1262
  %3 = getelementptr inbounds i8** %id, i64 1, !dbg !1262
  %4 = load i8** %3, align 8, !dbg !1262, !tbaa !1026
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([23 x i8]* @.str4, i64 0, i64 0), i8* %4) #5, !dbg !1262
  store i8 1, i8* %no_add_attrs, align 1, !dbg !1264, !tbaa !1050
  br label %if.end47

if.else39:                                        ; preds = %entry
  %and = and i32 %flags, 8, !dbg !1265
  %tobool = icmp eq i32 %and, 0, !dbg !1265
  br i1 %tobool, label %if.then40, label %if.end41, !dbg !1265

if.then40:                                        ; preds = %if.else39
  %call = tail call %union.tree_node* @build_type_copy(%union.tree_node* %0) #5, !dbg !1267
  store %union.tree_node* %call, %union.tree_node** %node, align 8, !dbg !1267, !tbaa !1026
  %used_flag43.phi.trans.insert = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %.phi.trans.insert = bitcast [4 x i8]* %used_flag43.phi.trans.insert to i32*
  %bf.load44.pre = load i32* %.phi.trans.insert, align 8, !dbg !1268
  br label %if.end41, !dbg !1267

if.end41:                                         ; preds = %if.else39, %if.then40
  %bf.load44 = phi i32 [ %bf.load, %if.else39 ], [ %bf.load44.pre, %if.then40 ]
  %5 = phi %union.tree_node* [ %0, %if.else39 ], [ %call, %if.then40 ]
  %used_flag43 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2, !dbg !1268
  %6 = bitcast [4 x i8]* %used_flag43 to i32*, !dbg !1268
  %bf.set46 = or i32 %bf.load44, 65536, !dbg !1268
  store i32 %bf.set46, i32* %6, align 8, !dbg !1268
  br label %if.end47

if.end47:                                         ; preds = %if.then35, %if.else, %if.end41
  ret %union.tree_node* null, !dbg !1269
}
