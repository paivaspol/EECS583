define internal noalias %union.tree_node* @handle_aligned_attribute(%union.tree_node** nocapture %node, %union.tree_node* nocapture %name, %union.tree_node* %args, i32 %flags, i8* nocapture %no_add_attrs) #0 {
entry:
  %tobool = icmp eq %union.tree_node* %args, null
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %args, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = tail call %union.tree_node* @size_int_wide(i64 16, i32 0) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ %call, %cond.false ]
  %2 = load %union.tree_node** %node, align 8, !tbaa !0
  %code = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %3 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom162 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom162
  %4 = load i8* %arrayidx, align 1, !tbaa !1
  switch i8 %4, label %while.cond.preheader [
    i8 100, label %if.then
    i8 116, label %if.then19
  ]

if.then:                                          ; preds = %cond.end
  %type3 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %cmp8 = icmp eq i32 %bf.clear, 33
  %conv9 = zext i1 %cmp8 to i32
  br label %while.cond.preheader

if.then19:                                        ; preds = %cond.end
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then19, %if.then, %cond.end
  %is_type.0.ph = phi i32 [ 0, %cond.end ], [ %conv9, %if.then ], [ 1, %if.then19 ]
  %type.0.ph = phi %union.tree_node** [ null, %cond.end ], [ %type3, %if.then ], [ %node, %if.then19 ]
  %decl.0.ph = phi %union.tree_node* [ null, %cond.end ], [ %2, %if.then ], [ null, %if.then19 ]
  %code22163 = getelementptr inbounds %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast [4 x i8]* %code22163 to i32*
  %bf.load23164 = load i32* %5, align 8
  %bf.clear24165 = and i32 %bf.load23164, 255
  %bf.clear24.off166 = add i32 %bf.clear24165, -114
  %switch167 = icmp ult i32 %bf.clear24.off166, 3
  br i1 %switch167, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %while.body, %while.cond.preheader
  %bf.clear24.lcssa = phi i32 [ %bf.clear24165, %while.cond.preheader ], [ %bf.clear24, %while.body ]
  %align_expr.0.lcssa = phi %union.tree_node* [ %cond, %while.cond.preheader ], [ %6, %while.body ]
  %cmp44 = icmp eq i32 %bf.clear24.lcssa, 25
  br i1 %cmp44, label %if.else47, label %if.then46

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %align_expr.0168 = phi %union.tree_node* [ %6, %while.body ], [ %cond, %while.cond.preheader ]
  %operands = getelementptr inbounds %union.tree_node* %align_expr.0168, i64 0, i32 0, i32 2
  %arrayidx39 = bitcast i32* %operands to %union.tree_node**
  %6 = load %union.tree_node** %arrayidx39, align 8, !tbaa !0
  %code22 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast [4 x i8]* %code22 to i32*
  %bf.load23 = load i32* %7, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %bf.clear24.off = add i32 %bf.clear24, -114
  %switch = icmp ult i32 %bf.clear24.off, 3
  br i1 %switch, label %while.body, label %lor.rhs

if.then46:                                        ; preds = %lor.rhs
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str36, i64 0, i64 0)) #4
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !4
  br label %if.end128

if.else47:                                        ; preds = %lor.rhs
  %call48 = tail call i32 @tree_log2(%union.tree_node* %align_expr.0.lcssa) #4
  %cmp49 = icmp eq i32 %call48, -1
  br i1 %cmp49, label %if.then51, label %if.else52

if.then51:                                        ; preds = %if.else47
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str37, i64 0, i64 0)) #4
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !4
  br label %if.end128

if.else52:                                        ; preds = %if.else47
  %cmp53 = icmp sgt i32 %call48, 30
  br i1 %cmp53, label %if.then55, label %if.else56

if.then55:                                        ; preds = %if.else52
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([33 x i8]* @.str38, i64 0, i64 0)) #4
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !4
  br label %if.end128

if.else56:                                        ; preds = %if.else52
  %tobool57 = icmp eq i32 %is_type.0.ph, 0
  br i1 %tobool57, label %if.else96, label %if.then58

if.then58:                                        ; preds = %if.else56
  %tobool59 = icmp eq %union.tree_node* %decl.0.ph, null
  br i1 %tobool59, label %if.else85, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then58
  %type61 = getelementptr inbounds %union.tree_node* %decl.0.ph, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type61, align 8, !tbaa !0
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !0
  %cmp62 = icmp eq %union.tree_node* %8, %9
  br i1 %cmp62, label %if.else85, label %land.lhs.true64

land.lhs.true64:                                  ; preds = %land.lhs.true
  %result = getelementptr inbounds %union.tree_node* %decl.0.ph, i64 0, i32 0, i32 11
  %10 = load %union.tree_node** %result, align 8, !tbaa !0
  %cmp66 = icmp eq %union.tree_node* %10, null
  br i1 %cmp66, label %if.then68, label %if.else85

if.then68:                                        ; preds = %land.lhs.true64
  %11 = load %union.tree_node** %type.0.ph, align 8, !tbaa !0
  %call71 = tail call %union.tree_node* @build_type_copy(%union.tree_node* %11) #4
  store %union.tree_node* %call71, %union.tree_node** %type.0.ph, align 8, !tbaa !0
  store %union.tree_node* %8, %union.tree_node** %result, align 8, !tbaa !0
  %12 = load %union.tree_node** %type.0.ph, align 8, !tbaa !0
  %13 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 11
  store %union.tree_node* %decl.0.ph, %union.tree_node** %13, align 8, !tbaa !0
  %used_flag = getelementptr inbounds %union.tree_node* %decl.0.ph, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast [4 x i8]* %used_flag to i32*
  %bf.load77 = load i32* %14, align 8
  %bf.clear78 = and i32 %bf.load77, 65536
  %15 = load %union.tree_node** %type.0.ph, align 8, !tbaa !0
  %used_flag80 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast [4 x i8]* %used_flag80 to i32*
  %bf.load81 = load i32* %16, align 8
  %bf.clear82 = and i32 %bf.load81, -65537
  %bf.set = or i32 %bf.clear82, %bf.clear78
  store i32 %bf.set, i32* %16, align 8
  %17 = load %union.tree_node** %type.0.ph, align 8, !tbaa !0
  store %union.tree_node* %17, %union.tree_node** %type61, align 8, !tbaa !0
  br label %if.end90

if.else85:                                        ; preds = %land.lhs.true, %if.then58, %land.lhs.true64
  %and = and i32 %flags, 8
  %tobool86 = icmp eq i32 %and, 0
  br i1 %tobool86, label %if.then87, label %if.end90

if.then87:                                        ; preds = %if.else85
  %18 = load %union.tree_node** %type.0.ph, align 8, !tbaa !0
  %call88 = tail call %union.tree_node* @build_type_copy(%union.tree_node* %18) #4
  store %union.tree_node* %call88, %union.tree_node** %type.0.ph, align 8, !tbaa !0
  br label %if.end90

if.end90:                                         ; preds = %if.else85, %if.then87, %if.then68
  %mul = shl i32 8, %call48
  %19 = load %union.tree_node** %type.0.ph, align 8, !tbaa !0
  %align = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 7
  %20 = bitcast %union.tree_node** %align to i32*
  store i32 %mul, i32* %20, align 4, !tbaa !3
  %type92 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type* %type92, i64 0, i32 6
  %21 = bitcast [4 x i8]* %user_align to i32*
  %bf.load93 = load i32* %21, align 4
  %bf.set95 = or i32 %bf.load93, -2147483648
  store i32 %bf.set95, i32* %21, align 4
  br label %if.end128

if.else96:                                        ; preds = %if.else56
  %code98 = getelementptr inbounds %union.tree_node* %decl.0.ph, i64 0, i32 0, i32 0, i32 2
  %22 = bitcast [4 x i8]* %code98 to i32*
  %bf.load99 = load i32* %22, align 8
  %bf.clear100 = and i32 %bf.load99, 255
  switch i32 %bf.clear100, label %if.then110 [
    i32 34, label %if.else111
    i32 37, label %if.else111
  ]

if.then110:                                       ; preds = %if.else96
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl.0.ph, i8* getelementptr inbounds ([40 x i8]* @.str39, i64 0, i64 0)) #4
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !4
  br label %if.end128

if.else111:                                       ; preds = %if.else96, %if.else96
  %mul113 = shl i32 8, %call48
  %u1 = getelementptr inbounds %union.tree_node* %decl.0.ph, i64 0, i32 0, i32 6
  %23 = bitcast %union.anon* %u1 to i32*
  %bf.load115 = load i32* %23, align 4
  %bf.value116 = and i32 %mul113, 16777215
  %bf.clear117 = and i32 %bf.load115, -16777216
  %bf.set118 = or i32 %bf.clear117, %bf.value116
  store i32 %bf.set118, i32* %23, align 4
  %user_align120 = getelementptr inbounds %union.tree_node* %decl.0.ph, i64 0, i32 0, i32 5
  %24 = bitcast [8 x i8]* %user_align120 to i64*
  %bf.load121 = load i64* %24, align 8
  %bf.set123 = or i64 %bf.load121, 34359738368
  store i64 %bf.set123, i64* %24, align 8
  br label %if.end128

if.end128:                                        ; preds = %if.then51, %if.end90, %if.else111, %if.then110, %if.then55, %if.then46
  ret %union.tree_node* null
}
