define internal noalias %union.tree_node* @handle_transparent_union_attribute(%union.tree_node** nocapture %node, %union.tree_node* nocapture %name, %union.tree_node* nocapture %args, i32 %flags, i8* nocapture %no_add_attrs) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %node}, i64 0, metadata !934), !dbg !1284
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %name}, i64 0, metadata !935), !dbg !1285
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %args}, i64 0, metadata !936), !dbg !1286
  tail call void @llvm.dbg.value(metadata !{i32 %flags}, i64 0, metadata !937), !dbg !1287
  tail call void @llvm.dbg.value(metadata !{i8* %no_add_attrs}, i64 0, metadata !938), !dbg !1288
  tail call void @llvm.dbg.value(metadata !1030, i64 0, metadata !939), !dbg !1289
  tail call void @llvm.dbg.value(metadata !1169, i64 0, metadata !940), !dbg !1290
  tail call void @llvm.dbg.value(metadata !397, i64 0, metadata !941), !dbg !1291
  %0 = load %union.tree_node** %node, align 8, !dbg !1292, !tbaa !1026
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !1292
  %1 = bitcast [4 x i8]* %code to i32*, !dbg !1292
  %bf.load = load i32* %1, align 8, !dbg !1292
  %bf.clear = and i32 %bf.load, 255, !dbg !1292
  %idxprom108 = zext i32 %bf.clear to i64, !dbg !1292
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom108, !dbg !1292
  %2 = load i8* %arrayidx, align 1, !dbg !1292, !tbaa !1027
  switch i8 %2, label %if.else89 [
    i8 100, label %if.end20
    i8 116, label %land.lhs.true
  ], !dbg !1292

if.end20:                                         ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %0}, i64 0, metadata !939), !dbg !1293
  %type3 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1, !dbg !1295
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %type3}, i64 0, metadata !940), !dbg !1295
  %cmp8 = icmp eq i32 %bf.clear, 33, !dbg !1296
  br i1 %cmp8, label %if.end20.land.lhs.true_crit_edge, label %if.else52, !dbg !1297

if.end20.land.lhs.true_crit_edge:                 ; preds = %if.end20
  %.pre = load %union.tree_node** %type3, align 8, !dbg !1297, !tbaa !1026
  %code22.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre, i64 0, i32 0, i32 0, i32 2
  %.phi.trans.insert = bitcast [4 x i8]* %code22.phi.trans.insert to i32*
  %bf.load23.pre = load i32* %.phi.trans.insert, align 8, !dbg !1297
  br label %land.lhs.true, !dbg !1297

land.lhs.true:                                    ; preds = %if.end20.land.lhs.true_crit_edge, %entry
  %bf.load23 = phi i32 [ %bf.load23.pre, %if.end20.land.lhs.true_crit_edge ], [ %bf.load, %entry ]
  %3 = phi %union.tree_node* [ %.pre, %if.end20.land.lhs.true_crit_edge ], [ %0, %entry ]
  %type.0111 = phi %union.tree_node** [ %type3, %if.end20.land.lhs.true_crit_edge ], [ %node, %entry ]
  %decl.0109 = phi %union.tree_node* [ %0, %if.end20.land.lhs.true_crit_edge ], [ null, %entry ]
  %bf.clear24 = and i32 %bf.load23, 255, !dbg !1297
  %cmp25 = icmp eq i32 %bf.clear24, 21, !dbg !1297
  br i1 %cmp25, label %land.lhs.true27, label %if.else52, !dbg !1297

land.lhs.true27:                                  ; preds = %land.lhs.true
  %cmp28 = icmp eq %union.tree_node* %decl.0109, null, !dbg !1297
  br i1 %cmp28, label %if.then45, label %lor.lhs.false, !dbg !1297

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %values = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 1, !dbg !1297
  %4 = load i8** %values, align 8, !dbg !1297
  %cmp31 = icmp eq i8* %4, null, !dbg !1297
  br i1 %cmp31, label %land.lhs.true55, label %land.lhs.true33, !dbg !1297

land.lhs.true33:                                  ; preds = %lor.lhs.false
  %type30 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !1297
  %mode = getelementptr inbounds %struct.tree_type* %type30, i64 0, i32 6, !dbg !1297
  %5 = bitcast [4 x i8]* %mode to i32*, !dbg !1297
  %bf.load35 = load i32* %5, align 4, !dbg !1297
  %bf.lshr = lshr i32 %bf.load35, 9, !dbg !1297
  %bf.clear36 = and i32 %bf.lshr, 127, !dbg !1297
  %mode40 = getelementptr inbounds i8* %4, i64 48, !dbg !1297
  %6 = bitcast i8* %mode40 to i64*, !dbg !1297
  %bf.load41 = load i64* %6, align 8, !dbg !1297
  %bf.load41.tr = trunc i64 %bf.load41 to i32, !dbg !1297
  %bf.cast = and i32 %bf.load41.tr, 255, !dbg !1297
  %cmp43 = icmp eq i32 %bf.clear36, %bf.cast, !dbg !1297
  br i1 %cmp43, label %if.then45, label %land.lhs.true55, !dbg !1297

if.then45:                                        ; preds = %land.lhs.true33, %land.lhs.true27
  %and = and i32 %flags, 8, !dbg !1298
  %tobool46 = icmp eq i32 %and, 0, !dbg !1298
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !1298

if.then47:                                        ; preds = %if.then45
  %call = tail call %union.tree_node* @build_type_copy(%union.tree_node* %3) #5, !dbg !1300
  store %union.tree_node* %call, %union.tree_node** %type.0111, align 8, !dbg !1300, !tbaa !1026
  br label %if.end48, !dbg !1300

if.end48:                                         ; preds = %if.then45, %if.then47
  %7 = phi %union.tree_node* [ %call, %if.then47 ], [ %3, %if.then45 ]
  %type49 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !1301
  %transparent_union_flag = getelementptr inbounds %struct.tree_type* %type49, i64 0, i32 6, !dbg !1301
  %8 = bitcast [4 x i8]* %transparent_union_flag to i32*, !dbg !1301
  %bf.load50 = load i32* %8, align 4, !dbg !1301
  %bf.set = or i32 %bf.load50, 524288, !dbg !1301
  store i32 %bf.set, i32* %8, align 4, !dbg !1301
  br label %if.end91, !dbg !1302

if.else52:                                        ; preds = %land.lhs.true, %if.end20
  %type.0112 = phi %union.tree_node** [ %type.0111, %land.lhs.true ], [ %type3, %if.end20 ]
  %decl.0110 = phi %union.tree_node* [ %decl.0109, %land.lhs.true ], [ %0, %if.end20 ]
  %cmp53 = icmp eq %union.tree_node* %decl.0110, null, !dbg !1303
  br i1 %cmp53, label %if.else89, label %land.lhs.true55, !dbg !1303

land.lhs.true55:                                  ; preds = %land.lhs.true33, %lor.lhs.false, %if.else52
  %decl.0110116 = phi %union.tree_node* [ %decl.0110, %if.else52 ], [ %decl.0109, %lor.lhs.false ], [ %decl.0109, %land.lhs.true33 ]
  %type.0112115 = phi %union.tree_node** [ %type.0112, %if.else52 ], [ %type.0111, %lor.lhs.false ], [ %type.0111, %land.lhs.true33 ]
  %code57 = getelementptr inbounds %union.tree_node* %decl.0110116, i64 0, i32 0, i32 0, i32 2, !dbg !1303
  %9 = bitcast [4 x i8]* %code57 to i32*, !dbg !1303
  %bf.load58 = load i32* %9, align 8, !dbg !1303
  %bf.clear59 = and i32 %bf.load58, 255, !dbg !1303
  %cmp60 = icmp eq i32 %bf.clear59, 35, !dbg !1303
  br i1 %cmp60, label %land.lhs.true62, label %if.else89, !dbg !1303

land.lhs.true62:                                  ; preds = %land.lhs.true55
  %10 = load %union.tree_node** %type.0112115, align 8, !dbg !1303, !tbaa !1026
  %code64 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2, !dbg !1303
  %11 = bitcast [4 x i8]* %code64 to i32*, !dbg !1303
  %bf.load65 = load i32* %11, align 8, !dbg !1303
  %bf.clear66 = and i32 %bf.load65, 255, !dbg !1303
  %cmp67 = icmp eq i32 %bf.clear66, 21, !dbg !1303
  br i1 %cmp67, label %land.lhs.true69, label %if.else89, !dbg !1303

land.lhs.true69:                                  ; preds = %land.lhs.true62
  %type70 = bitcast %union.tree_node* %10 to %struct.tree_type*, !dbg !1303
  %mode71 = getelementptr inbounds %struct.tree_type* %type70, i64 0, i32 6, !dbg !1303
  %12 = bitcast [4 x i8]* %mode71 to i32*, !dbg !1303
  %bf.load72 = load i32* %12, align 4, !dbg !1303
  %bf.lshr73 = lshr i32 %bf.load72, 9, !dbg !1303
  %bf.clear74 = and i32 %bf.lshr73, 127, !dbg !1303
  %values76 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 1, !dbg !1303
  %13 = load i8** %values76, align 8, !dbg !1303
  %mode78 = getelementptr inbounds i8* %13, i64 48, !dbg !1303
  %14 = bitcast i8* %mode78 to i64*, !dbg !1303
  %bf.load79 = load i64* %14, align 8, !dbg !1303
  %bf.load79.tr = trunc i64 %bf.load79 to i32, !dbg !1303
  %bf.cast81 = and i32 %bf.load79.tr, 255, !dbg !1303
  %cmp82 = icmp eq i32 %bf.clear74, %bf.cast81, !dbg !1303
  br i1 %cmp82, label %if.then84, label %if.else89, !dbg !1303

if.then84:                                        ; preds = %land.lhs.true69
  %transparent_union = getelementptr inbounds %union.tree_node* %decl.0110116, i64 0, i32 0, i32 5, !dbg !1304
  %15 = bitcast [8 x i8]* %transparent_union to i64*, !dbg !1304
  %bf.load86 = load i64* %15, align 8, !dbg !1304
  %bf.set88 = or i64 %bf.load86, 524288, !dbg !1304
  store i64 %bf.set88, i64* %15, align 8, !dbg !1304
  br label %if.end91, !dbg !1304

if.else89:                                        ; preds = %entry, %if.else52, %land.lhs.true69, %land.lhs.true62, %land.lhs.true55
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1, !dbg !1305
  %16 = getelementptr inbounds i8** %id, i64 1, !dbg !1305
  %17 = load i8** %16, align 8, !dbg !1305, !tbaa !1026
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([23 x i8]* @.str4, i64 0, i64 0), i8* %17) #5, !dbg !1305
  store i8 1, i8* %no_add_attrs, align 1, !dbg !1307, !tbaa !1050
  br label %if.end91

if.end91:                                         ; preds = %if.then84, %if.else89, %if.end48
  ret %union.tree_node* null, !dbg !1308
}
