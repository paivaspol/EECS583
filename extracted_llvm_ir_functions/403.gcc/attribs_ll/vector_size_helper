define internal fastcc %union.tree_node* @vector_size_helper(%union.tree_node* nocapture %type, %union.tree_node* %bottom) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast [4 x i8]* %code to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 13, label %if.then
    i32 15, label %if.then
    i32 18, label %if.then14
    i32 23, label %if.then26
  ]

if.then:                                          ; preds = %entry, %entry
  %type7 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type7, align 8, !tbaa !0
  %call = tail call fastcc %union.tree_node* @vector_size_helper(%union.tree_node* %1, %union.tree_node* %bottom) #5
  %call8 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call) #4
  br label %if.end35

if.then14:                                        ; preds = %entry
  %type16 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type16, align 8, !tbaa !0
  %call17 = tail call fastcc %union.tree_node* @vector_size_helper(%union.tree_node* %2, %union.tree_node* %bottom) #5
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %3 = load i8** %values, align 8
  %4 = bitcast i8* %3 to %union.tree_node*
  %call19 = tail call %union.tree_node* @build_array_type(%union.tree_node* %call17, %union.tree_node* %4) #4
  br label %if.end35

if.then26:                                        ; preds = %entry
  %type28 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type28, align 8, !tbaa !0
  %call29 = tail call fastcc %union.tree_node* @vector_size_helper(%union.tree_node* %5, %union.tree_node* %bottom) #5
  %values31 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %6 = load i8** %values31, align 8
  %7 = bitcast i8* %6 to %union.tree_node*
  %call32 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call29, %union.tree_node* %7) #4
  br label %if.end35

if.end35:                                         ; preds = %if.then14, %if.then26, %if.then
  %outer.0 = phi %union.tree_node* [ %call8, %if.then ], [ %call19, %if.then14 ], [ %call32, %if.then26 ]
  %bf.load37 = load i32* %0, align 8
  %bf.clear38 = and i32 %bf.load37, 4096
  %readonly_flag40 = getelementptr inbounds %union.tree_node* %outer.0, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast [4 x i8]* %readonly_flag40 to i32*
  %bf.load41 = load i32* %8, align 8
  %bf.clear42 = and i32 %bf.load41, -4097
  %bf.set = or i32 %bf.clear42, %bf.clear38
  store i32 %bf.set, i32* %8, align 8
  %bf.load44 = load i32* %0, align 8
  %bf.clear46 = and i32 %bf.load44, 2048
  %bf.clear52 = and i32 %bf.set, -2049
  %bf.set53 = or i32 %bf.clear52, %bf.clear46
  store i32 %bf.set53, i32* %8, align 8
  br label %return

return:                                           ; preds = %entry, %if.end35
  %retval.0 = phi %union.tree_node* [ %outer.0, %if.end35 ], [ %bottom, %entry ]
  ret %union.tree_node* %retval.0
}
