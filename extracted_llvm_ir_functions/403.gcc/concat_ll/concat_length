define i64 @concat_length(i8* %first, ...) #0 {
entry:
  %args = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata !{i8* %first}, i64 0, metadata !13), !dbg !88
  call void @llvm.dbg.declare(metadata !{[1 x %struct.__va_list_tag]* %args}, metadata !15), !dbg !89
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %args to i8*, !dbg !89
  call void @llvm.va_start(i8* %arraydecay1), !dbg !89
  call void @llvm.dbg.value(metadata !{i8* %first}, i64 0, metadata !90) #2, !dbg !93
  call void @llvm.dbg.value(metadata !94, i64 0, metadata !95) #2, !dbg !96
  call void @llvm.dbg.value(metadata !{i8* %first}, i64 0, metadata !97) #2, !dbg !98
  %tobool3.i = icmp eq i8* %first, null, !dbg !98
  br i1 %tobool3.i, label %vconcat_length.exit, label %for.body.lr.ph.i, !dbg !98

for.body.lr.ph.i:                                 ; preds = %entry
  %gp_offset_p.i = getelementptr inbounds [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, i32 0, !dbg !98
  %0 = getelementptr inbounds [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, i32 3, !dbg !98
  %overflow_arg_area_p.i = getelementptr inbounds [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, i32 2, !dbg !98
  %gp_offset.pre.i = load i32* %gp_offset_p.i, align 16, !dbg !98
  br label %for.body.i, !dbg !98

for.body.i:                                       ; preds = %vaarg.end.i, %for.body.lr.ph.i
  %gp_offset.i = phi i32 [ %gp_offset.pre.i, %for.body.lr.ph.i ], [ %gp_offset6.i, %vaarg.end.i ], !dbg !100
  %arg.05.i = phi i8* [ %first, %for.body.lr.ph.i ], [ %4, %vaarg.end.i ]
  %length.04.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %add.i, %vaarg.end.i ]
  %call.i = call i64 @strlen(i8* %arg.05.i) #6, !dbg !100
  %add.i = add i64 %call.i, %length.04.i, !dbg !100
  call void @llvm.dbg.value(metadata !{i64 %add.i}, i64 0, metadata !95) #2, !dbg !100
  %fits_in_gp.i = icmp ult i32 %gp_offset.i, 41, !dbg !98
  br i1 %fits_in_gp.i, label %vaarg.in_reg.i, label %vaarg.in_mem.i, !dbg !98

vaarg.in_reg.i:                                   ; preds = %for.body.i
  %reg_save_area.i = load i8** %0, align 16, !dbg !98
  %1 = sext i32 %gp_offset.i to i64, !dbg !98
  %2 = getelementptr i8* %reg_save_area.i, i64 %1, !dbg !98
  %3 = add i32 %gp_offset.i, 8, !dbg !98
  store i32 %3, i32* %gp_offset_p.i, align 16, !dbg !98
  br label %vaarg.end.i, !dbg !98

vaarg.in_mem.i:                                   ; preds = %for.body.i
  %overflow_arg_area.i = load i8** %overflow_arg_area_p.i, align 8, !dbg !98
  %overflow_arg_area.next.i = getelementptr i8* %overflow_arg_area.i, i64 8, !dbg !98
  store i8* %overflow_arg_area.next.i, i8** %overflow_arg_area_p.i, align 8, !dbg !98
  br label %vaarg.end.i, !dbg !98

vaarg.end.i:                                      ; preds = %vaarg.in_mem.i, %vaarg.in_reg.i
  %gp_offset6.i = phi i32 [ %3, %vaarg.in_reg.i ], [ %gp_offset.i, %vaarg.in_mem.i ]
  %vaarg.addr.in.i = phi i8* [ %2, %vaarg.in_reg.i ], [ %overflow_arg_area.i, %vaarg.in_mem.i ]
  %vaarg.addr.i = bitcast i8* %vaarg.addr.in.i to i8**, !dbg !98
  %4 = load i8** %vaarg.addr.i, align 8, !dbg !98
  call void @llvm.dbg.value(metadata !{i8* %4}, i64 0, metadata !97) #2, !dbg !98
  %tobool.i = icmp eq i8* %4, null, !dbg !98
  br i1 %tobool.i, label %vconcat_length.exit, label %for.body.i, !dbg !98

vconcat_length.exit:                              ; preds = %vaarg.end.i, %entry
  %length.0.lcssa.i = phi i64 [ 0, %entry ], [ %add.i, %vaarg.end.i ]
  call void @llvm.dbg.value(metadata !{i64 %length.0.lcssa.i}, i64 0, metadata !14), !dbg !91
  call void @llvm.va_end(i8* %arraydecay1), !dbg !101
  ret i64 %length.0.lcssa.i, !dbg !102
}
