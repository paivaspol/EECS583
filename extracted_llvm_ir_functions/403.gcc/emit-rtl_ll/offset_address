define %struct.rtx_def* @offset_address(%struct.rtx_def* %memref, %struct.rtx_def* %offset, i64 %pow2) #0 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %memref, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %1 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  %call = tail call %struct.rtx_def* @simplify_gen_binary(i32 75, i32 %3, %struct.rtx_def* %0, %struct.rtx_def* %offset) #8
  %4 = bitcast %struct.rtx_def* %memref to i32*
  %bf.load = load i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call1 = tail call i32 @memory_address_p(i32 %bf.clear, %struct.rtx_def* %call) #8
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load3 = load i32* %5, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp = icmp eq i32 %bf.clear4, 75
  br i1 %cmp, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx8, align 8, !tbaa !4
  %7 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !4
  %cmp9 = icmp eq %struct.rtx_def* %6, %7
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true5
  %bf.lshr11 = lshr i32 %bf.load3, 16
  %bf.clear12 = and i32 %bf.lshr11, 255
  %call13 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear12, %struct.rtx_def* %0) #8
  %8 = load i32* @target_flags, align 4, !tbaa !0
  %and14 = lshr i32 %8, 25
  %9 = and i32 %and14, 1
  %10 = or i32 %9, 4
  %call17 = tail call %struct.rtx_def* @simplify_gen_binary(i32 75, i32 %10, %struct.rtx_def* %call13, %struct.rtx_def* %offset) #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true5, %land.lhs.true
  %new.0 = phi %struct.rtx_def* [ %call, %entry ], [ %call17, %if.then ], [ %call, %land.lhs.true5 ], [ %call, %land.lhs.true ]
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  tail call void @update_temp_slot_address(%struct.rtx_def* %11, %struct.rtx_def* %new.0) #8
  %call21 = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 0, %struct.rtx_def* %new.0, i32 1) #9
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %memref, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx23 to %struct.mem_attrs**
  %12 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !4
  %cmp24 = icmp eq %struct.mem_attrs* %12, null
  br i1 %cmp24, label %cond.end49, label %cond.true44

cond.true44:                                      ; preds = %if.end
  %alias = getelementptr inbounds %struct.mem_attrs* %12, i64 0, i32 0
  %13 = load i64* %alias, align 8, !tbaa !3
  %expr = getelementptr inbounds %struct.mem_attrs* %12, i64 0, i32 1
  %14 = load %union.tree_node** %expr, align 8, !tbaa !4
  %align = getelementptr inbounds %struct.mem_attrs* %12, i64 0, i32 4
  %15 = load i32* %align, align 4, !tbaa !0
  %phitmp = zext i32 %15 to i64
  br label %cond.end49

cond.end49:                                       ; preds = %if.end, %cond.true44
  %16 = phi %struct.mem_attrs* [ %12, %cond.true44 ], [ null, %if.end ]
  %cond39109 = phi %union.tree_node* [ %14, %cond.true44 ], [ null, %if.end ]
  %cond28105108 = phi i64 [ %13, %cond.true44 ], [ 0, %if.end ]
  %cond50 = phi i64 [ %phitmp, %cond.true44 ], [ 8, %if.end ]
  %mul = shl i64 %pow2, 3
  %cmp51 = icmp ult i64 %cond50, %mul
  br i1 %cmp51, label %cond.true53, label %cond.end70

cond.true53:                                      ; preds = %cond.end49
  %cmp57 = icmp eq %struct.mem_attrs* %16, null
  br i1 %cmp57, label %cond.end70, label %cond.true59

cond.true59:                                      ; preds = %cond.true53
  %align63 = getelementptr inbounds %struct.mem_attrs* %16, i64 0, i32 4
  %17 = load i32* %align63, align 4, !tbaa !0
  %phitmp103 = zext i32 %17 to i64
  br label %cond.end70

cond.end70:                                       ; preds = %cond.end49, %cond.true59, %cond.true53
  %cond71 = phi i64 [ %phitmp103, %cond.true59 ], [ 8, %cond.true53 ], [ %mul, %cond.end49 ]
  %conv72 = trunc i64 %cond71 to i32
  %18 = bitcast %struct.rtx_def* %call21 to i32*
  %bf.load73 = load i32* %18, align 8
  %bf.lshr74 = lshr i32 %bf.load73, 16
  %bf.clear75 = and i32 %bf.lshr74, 255
  %call76 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i64 %cond28105108, %union.tree_node* %cond39109, %struct.rtx_def* null, %struct.rtx_def* null, i32 %conv72, i32 %bf.clear75) #9
  %19 = getelementptr inbounds %struct.rtx_def* %call21, i64 0, i32 1, i64 1, i32 0
  %call76.c = ptrtoint %struct.mem_attrs* %call76 to i64
  store i64 %call76.c, i64* %19, align 8, !tbaa !4
  ret %struct.rtx_def* %call21
}
