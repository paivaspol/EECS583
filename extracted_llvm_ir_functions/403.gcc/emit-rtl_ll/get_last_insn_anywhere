define %struct.rtx_def* @get_last_insn_anywhere() #5 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !4
  %emit = getelementptr inbounds %struct.function* %0, i64 0, i32 3
  %1 = load %struct.emit_status** %emit, align 8, !tbaa !4
  %x_last_insn = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 3
  %2 = load %struct.rtx_def** %x_last_insn, align 8, !tbaa !4
  %tobool = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %sequence_stack = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 5
  %stack.010 = load %struct.sequence_stack** %sequence_stack, align 8
  %tobool411 = icmp eq %struct.sequence_stack* %stack.010, null
  br i1 %tobool411, label %return, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.sequence_stack* %stack.012, i64 0, i32 3
  %stack.0 = load %struct.sequence_stack** %next, align 8
  %tobool4 = icmp eq %struct.sequence_stack* %stack.0, null
  br i1 %tobool4, label %return, label %for.body

for.body:                                         ; preds = %if.end, %for.cond
  %stack.012 = phi %struct.sequence_stack* [ %stack.0, %for.cond ], [ %stack.010, %if.end ]
  %last = getelementptr inbounds %struct.sequence_stack* %stack.012, i64 0, i32 1
  %3 = load %struct.rtx_def** %last, align 8, !tbaa !4
  %cmp = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp, label %for.cond, label %return

return:                                           ; preds = %if.end, %for.body, %for.cond, %entry
  %retval.0 = phi %struct.rtx_def* [ %2, %entry ], [ null, %if.end ], [ %3, %for.body ], [ null, %for.cond ]
  ret %struct.rtx_def* %retval.0
}
