define void @add_insn_before(%struct.rtx_def* %insn, %struct.rtx_def* %before) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %before, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %1 = load i32* @optimize, align 4, !tbaa !0
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = bitcast %struct.rtx_def* %before to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool1 = icmp eq i32 %bf.clear, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 3429, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.add_insn_before, i64 0, i64 0)) #10
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %0 to i64
  store i64 %.c, i64* %3, align 8, !tbaa !4
  %4 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2, i32 0
  %before.c = ptrtoint %struct.rtx_def* %before to i64
  store i64 %before.c, i64* %4, align 8, !tbaa !4
  %tobool8 = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool8, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 2, i32 0
  %insn.c149 = ptrtoint %struct.rtx_def* %insn to i64
  store i64 %insn.c149, i64* %5, align 8, !tbaa !4
  %6 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load13 = load i32* %6, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp = icmp eq i32 %bf.clear14, 32
  br i1 %cmp, label %land.lhs.true15, label %if.end51

land.lhs.true15:                                  ; preds = %if.then9
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 3
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx18, align 8, !tbaa !4
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load19 = load i32* %8, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 24
  br i1 %cmp21, label %if.then22, label %if.end51

if.then22:                                        ; preds = %land.lhs.true15
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtvec_def**
  %9 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %num_elem = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 0
  %10 = load i32* %num_elem, align 4, !tbaa !0
  %sub = add nsw i32 %10, -1
  %idxprom = sext i32 %sub to i64
  %arrayidx31 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 %idxprom
  %11 = load %struct.rtx_def** %arrayidx31, align 8, !tbaa !4
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 2, i32 0
  store i64 %insn.c149, i64* %12, align 8, !tbaa !4
  br label %if.end51

if.else:                                          ; preds = %if.end
  %13 = load %struct.function** @cfun, align 8, !tbaa !4
  %emit = getelementptr inbounds %struct.function* %13, i64 0, i32 3
  %14 = load %struct.emit_status** %emit, align 8, !tbaa !4
  %x_first_insn = getelementptr inbounds %struct.emit_status* %14, i64 0, i32 2
  %15 = load %struct.rtx_def** %x_first_insn, align 8, !tbaa !4
  %cmp36 = icmp eq %struct.rtx_def* %15, %before
  br i1 %cmp36, label %if.then37, label %if.else40

if.then37:                                        ; preds = %if.else
  store %struct.rtx_def* %insn, %struct.rtx_def** %x_first_insn, align 8, !tbaa !4
  br label %if.end51

if.else40:                                        ; preds = %if.else
  %sequence_stack = getelementptr inbounds %struct.emit_status* %14, i64 0, i32 5
  %stack.0152 = load %struct.sequence_stack** %sequence_stack, align 8
  %cond153 = icmp eq %struct.sequence_stack* %stack.0152, null
  br i1 %cond153, label %if.then48, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.sequence_stack* %stack.0154, i64 0, i32 3
  %stack.0 = load %struct.sequence_stack** %next, align 8
  %cond = icmp eq %struct.sequence_stack* %stack.0, null
  br i1 %cond, label %if.then48, label %for.body

for.body:                                         ; preds = %if.else40, %for.cond
  %stack.0154 = phi %struct.sequence_stack* [ %stack.0, %for.cond ], [ %stack.0152, %if.else40 ]
  %first = getelementptr inbounds %struct.sequence_stack* %stack.0154, i64 0, i32 0
  %16 = load %struct.rtx_def** %first, align 8, !tbaa !4
  %cmp43 = icmp eq %struct.rtx_def* %16, %before
  br i1 %cmp43, label %if.then44, label %for.cond

if.then44:                                        ; preds = %for.body
  store %struct.rtx_def* %insn, %struct.rtx_def** %first, align 8, !tbaa !4
  br label %if.end51

if.then48:                                        ; preds = %if.else40, %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 3457, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.add_insn_before, i64 0, i64 0)) #10
  unreachable

if.end51:                                         ; preds = %if.then44, %if.then37, %if.then9, %land.lhs.true15, %if.then22
  %17 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !4
  %tobool52 = icmp eq %struct.varray_head_tag* %17, null
  br i1 %tobool52, label %if.end86, label %land.lhs.true53

land.lhs.true53:                                  ; preds = %if.end51
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %before, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx55 to i32*
  %18 = load i32* %rtint, align 4, !tbaa !0
  %conv = zext i32 %18 to i64
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %17, i64 0, i32 0
  %19 = load i64* %num_elements, align 8, !tbaa !3
  %cmp56 = icmp ult i64 %conv, %19
  br i1 %cmp56, label %land.lhs.true58, label %if.end86

land.lhs.true58:                                  ; preds = %land.lhs.true53
  %idxprom62 = sext i32 %18 to i64
  %data = getelementptr inbounds %struct.varray_head_tag* %17, i64 0, i32 4
  %bb63 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx64 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb63, i64 0, i64 %idxprom62
  %20 = load %struct.basic_block_def** %arrayidx64, align 8, !tbaa !4
  %tobool65 = icmp eq %struct.basic_block_def* %20, null
  br i1 %tobool65, label %if.end86, label %if.then66

if.then66:                                        ; preds = %land.lhs.true58
  tail call void @set_block_for_insn(%struct.rtx_def* %insn, %struct.basic_block_def* %20) #8
  %head = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 0
  %21 = load %struct.rtx_def** %head, align 8, !tbaa !4
  %cmp67 = icmp eq %struct.rtx_def* %21, %insn
  br i1 %cmp67, label %land.lhs.true69, label %if.end86

land.lhs.true69:                                  ; preds = %if.then66
  %22 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load70 = load i32* %22, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  switch i32 %bf.clear71, label %if.then84 [
    i32 35, label %if.end86
    i32 37, label %lor.lhs.false
  ]

lor.lhs.false:                                    ; preds = %land.lhs.true69
  %arrayidx80 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint81 = bitcast %union.rtunion_def* %arrayidx80 to i32*
  %23 = load i32* %rtint81, align 4, !tbaa !0
  %cmp82 = icmp eq i32 %23, -80
  br i1 %cmp82, label %if.end86, label %if.then84

if.then84:                                        ; preds = %land.lhs.true69, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 3472, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.add_insn_before, i64 0, i64 0)) #10
  unreachable

if.end86:                                         ; preds = %land.lhs.true69, %lor.lhs.false, %land.lhs.true58, %if.end51, %if.then66, %land.lhs.true53
  %24 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %insn.c = ptrtoint %struct.rtx_def* %insn to i64
  store i64 %insn.c, i64* %24, align 8, !tbaa !4
  %25 = bitcast %struct.rtx_def* %before to i32*
  %bf.load90 = load i32* %25, align 8
  %bf.clear91 = and i32 %bf.load90, 65535
  %cmp92 = icmp eq i32 %bf.clear91, 32
  br i1 %cmp92, label %land.lhs.true94, label %if.end114

land.lhs.true94:                                  ; preds = %if.end86
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %before, i64 0, i32 1, i64 3
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx97, align 8, !tbaa !4
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load98 = load i32* %27, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 24
  br i1 %cmp100, label %if.then102, label %if.end114

if.then102:                                       ; preds = %land.lhs.true94
  %arrayidx107 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtvec108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtvec_def**
  %28 = load %struct.rtvec_def** %rtvec108, align 8, !tbaa !4
  %arrayidx110 = getelementptr inbounds %struct.rtvec_def* %28, i64 0, i32 1, i64 0
  %29 = load %struct.rtx_def** %arrayidx110, align 8, !tbaa !4
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 1, i32 0
  store i64 %insn.c, i64* %30, align 8, !tbaa !4
  br label %if.end114

if.end114:                                        ; preds = %if.then102, %land.lhs.true94, %if.end86
  ret void
}
