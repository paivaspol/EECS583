define i32 @active_insn_p(%struct.rtx_def* nocapture %insn) #5 {
entry:
  %0 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -33
  %switch = icmp ult i32 %bf.clear.off, 2
  br i1 %switch, label %lor.end19, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %cmp6 = icmp eq i32 %bf.clear, 32
  br i1 %cmp6, label %land.rhs, label %lor.end19

land.rhs:                                         ; preds = %lor.rhs
  %1 = load i32* @reload_completed, align 4, !tbaa !0
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %lor.end19, label %lor.rhs7

lor.rhs7:                                         ; preds = %land.rhs
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load8 = load i32* %3, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %bf.clear9.off = add i32 %bf.clear9, -48
  %4 = icmp ugt i32 %bf.clear9.off, 1
  br label %lor.end19

lor.end19:                                        ; preds = %lor.rhs7, %entry, %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ true, %land.rhs ], [ true, %entry ], [ %4, %lor.rhs7 ]
  %lor.ext = zext i1 %5 to i32
  ret i32 %lor.ext
}
