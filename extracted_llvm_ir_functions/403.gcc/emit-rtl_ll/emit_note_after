define %struct.rtx_def* @emit_note_after(i32 %subtype, %struct.rtx_def* %after) #0 {
entry:
  %call = tail call %struct.rtx_def* @rtx_alloc(i32 37) #8
  %0 = load %struct.function** @cfun, align 8, !tbaa !4
  %emit = getelementptr inbounds %struct.function* %0, i64 0, i32 3
  %1 = load %struct.emit_status** %emit, align 8, !tbaa !4
  %x_cur_insn_uid = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 6
  %2 = load i32* %x_cur_insn_uid, align 4, !tbaa !0
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %x_cur_insn_uid, align 4, !tbaa !0
  %fld = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  store i32 %2, i32* %rtint, align 4, !tbaa !0
  %3 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3, i32 0
  store i64 0, i64* %3, align 8, !tbaa !4
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 4
  %rtint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  store i32 %subtype, i32* %rtint5, align 4, !tbaa !0
  tail call void @add_insn_after(%struct.rtx_def* %call, %struct.rtx_def* %after) #9
  ret %struct.rtx_def* %call
}
