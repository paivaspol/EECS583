define %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %orig) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %orig to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 61, label %return
    i32 71, label %return
    i32 54, label %return
    i32 55, label %return
    i32 56, label %return
    i32 68, label %return
    i32 36, label %return
    i32 59, label %return
    i32 69, label %return
    i32 70, label %return
    i32 62, label %for.cond.preheader
    i32 58, label %sw.bb5
  ]

for.cond.preheader:                               ; preds = %entry
  %1 = load i32* @copy_insn_n_scratches, align 4, !tbaa !0
  %cmp266 = icmp sgt i32 %1, 0
  br i1 %cmp266, label %for.body, label %sw.epilog

for.cond:                                         ; preds = %for.body
  %2 = trunc i64 %indvars.iv.next272 to i32
  %cmp = icmp slt i32 %2, %1
  br i1 %cmp, label %for.body, label %sw.epilog

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %indvars.iv271 = phi i64 [ %indvars.iv.next272, %for.cond ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds [30 x %struct.rtx_def*]* @copy_insn_scratch_in, i64 0, i64 %indvars.iv271
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !4
  %cmp2 = icmp eq %struct.rtx_def* %3, %orig
  %indvars.iv.next272 = add i64 %indvars.iv271, 1
  br i1 %cmp2, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %arrayidx4 = getelementptr inbounds [30 x %struct.rtx_def*]* @copy_insn_scratch_out, i64 0, i64 %indvars.iv271
  %4 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !4
  br label %return

sw.bb5:                                           ; preds = %entry
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load7 = load i32* %6, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 75
  br i1 %cmp9, label %land.lhs.true, label %sw.epilog

land.lhs.true:                                    ; preds = %sw.bb5
  %fld13 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1
  %rtx15 = bitcast [1 x %union.rtunion_def]* %fld13 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx15, align 8, !tbaa !4
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load16 = load i32* %8, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 68
  br i1 %cmp18, label %land.lhs.true19, label %sw.epilog

land.lhs.true19:                                  ; preds = %land.lhs.true
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx25, align 8, !tbaa !4
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load26 = load i32* %10, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 54
  br i1 %cmp28, label %return, label %sw.epilog

sw.epilog:                                        ; preds = %for.cond.preheader, %for.cond, %entry, %sw.bb5, %land.lhs.true, %land.lhs.true19
  %call = tail call %struct.rtx_def* @rtx_alloc(i32 %bf.clear) #8
  %11 = bitcast %struct.rtx_def* %orig to i64*
  %12 = bitcast %struct.rtx_def* %call to i64*
  %13 = load i64* %11, align 8
  store i64 %13, i64* %12, align 8
  %14 = bitcast %struct.rtx_def* %call to i32*
  %trunc = trunc i64 %13 to i32
  %bf.clear32 = and i32 %trunc, -536870913
  store i32 %bf.clear32, i32* %14, align 8
  %idxprom33251 = zext i32 %bf.clear to i64
  %arrayidx34 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom33251
  %15 = load i8* %arrayidx34, align 1, !tbaa !1
  %cmp35 = icmp eq i8 %15, 105
  br i1 %cmp35, label %if.then37, label %if.end44

if.then37:                                        ; preds = %sw.epilog
  %bf.clear43 = and i32 %trunc, 1560281087
  store i32 %bf.clear43, i32* %14, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.then37, %sw.epilog
  %bf.load45 = phi i32 [ %bf.clear43, %if.then37 ], [ %bf.clear32, %sw.epilog ]
  %bf.clear51259 = and i32 %bf.load45, 65535
  %idxprom52253260 = zext i32 %bf.clear51259 to i64
  %arrayidx53261 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom52253260
  %16 = load i8* %arrayidx53261, align 1, !tbaa !1
  %cmp55263 = icmp eq i8 %16, 0
  br i1 %cmp55263, label %for.end156, label %for.body57.lr.ph

for.body57.lr.ph:                                 ; preds = %if.end44
  %arrayidx48 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom52253260
  %17 = load i8** %arrayidx48, align 8, !tbaa !4
  br label %for.body57

for.body57:                                       ; preds = %for.body57.lr.ph, %for.inc154
  %indvars.iv268 = phi i64 [ 0, %for.body57.lr.ph ], [ %indvars.iv.next269, %for.inc154 ]
  %format_ptr.0265 = phi i8* [ %17, %for.body57.lr.ph ], [ %incdec.ptr, %for.inc154 ]
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 %indvars.iv268
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv268
  %18 = getelementptr inbounds %union.rtunion_def* %arrayidx63, i64 0, i32 0
  %19 = load i64* %18, align 8
  %20 = getelementptr inbounds %union.rtunion_def* %arrayidx60, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %incdec.ptr = getelementptr inbounds i8* %format_ptr.0265, i64 1
  %21 = load i8* %format_ptr.0265, align 1, !tbaa !1
  %conv64 = sext i8 %21 to i32
  switch i32 %conv64, label %sw.default152 [
    i32 101, label %sw.bb65
    i32 69, label %sw.bb83
    i32 86, label %sw.bb83
    i32 116, label %for.inc154
    i32 119, label %for.inc154
    i32 105, label %for.inc154
    i32 115, label %for.inc154
    i32 83, label %for.inc154
    i32 117, label %for.inc154
    i32 48, label %for.inc154
  ]

sw.bb65:                                          ; preds = %for.body57
  %rtx69 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx69, align 8, !tbaa !4
  %cmp70 = icmp eq %struct.rtx_def* %22, null
  br i1 %cmp70, label %for.inc154, label %if.then72

if.then72:                                        ; preds = %sw.bb65
  %call77 = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %22) #9
  %call77.c = ptrtoint %struct.rtx_def* %call77 to i64
  store i64 %call77.c, i64* %20, align 8, !tbaa !4
  br label %for.inc154

sw.bb83:                                          ; preds = %for.body57, %for.body57
  %rtvec = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtvec_def**
  %23 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %24 = load %struct.rtvec_def** @orig_asm_constraints_vector, align 8, !tbaa !4
  %cmp87 = icmp eq %struct.rtvec_def* %23, %24
  br i1 %cmp87, label %if.then89, label %if.else

if.then89:                                        ; preds = %sw.bb83
  %25 = load %struct.rtvec_def** @copy_asm_constraints_vector, align 8, !tbaa !4
  %.c254 = ptrtoint %struct.rtvec_def* %25 to i64
  store i64 %.c254, i64* %20, align 8, !tbaa !4
  br label %for.inc154

if.else:                                          ; preds = %sw.bb83
  %26 = load %struct.rtvec_def** @orig_asm_operands_vector, align 8, !tbaa !4
  %cmp98 = icmp eq %struct.rtvec_def* %23, %26
  br i1 %cmp98, label %if.then100, label %if.else105

if.then100:                                       ; preds = %if.else
  %27 = load %struct.rtvec_def** @copy_asm_operands_vector, align 8, !tbaa !4
  %.c = ptrtoint %struct.rtvec_def* %27 to i64
  store i64 %.c, i64* %20, align 8, !tbaa !4
  br label %for.inc154

if.else105:                                       ; preds = %if.else
  %cmp110 = icmp eq %struct.rtvec_def* %23, null
  br i1 %cmp110, label %for.inc154, label %if.then112

if.then112:                                       ; preds = %if.else105
  %num_elem = getelementptr inbounds %struct.rtvec_def* %23, i64 0, i32 0
  %28 = load i32* %num_elem, align 4, !tbaa !0
  %call117 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %28) #8
  %rtvec121 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtvec_def**
  %call117.c = ptrtoint %struct.rtvec_def* %call117 to i64
  store i64 %call117.c, i64* %20, align 8, !tbaa !4
  %num_elem127255 = getelementptr inbounds %struct.rtvec_def* %call117, i64 0, i32 0
  %29 = load i32* %num_elem127255, align 4, !tbaa !0
  %cmp128256 = icmp sgt i32 %29, 0
  br i1 %cmp128256, label %for.body130, label %for.inc154

for.body130:                                      ; preds = %if.then112, %for.body130
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body130 ], [ 0, %if.then112 ]
  %30 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %arrayidx136 = getelementptr inbounds %struct.rtvec_def* %30, i64 0, i32 1, i64 %indvars.iv
  %31 = load %struct.rtx_def** %arrayidx136, align 8, !tbaa !4
  %call137 = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %31) #9
  %32 = load %struct.rtvec_def** %rtvec121, align 8, !tbaa !4
  %arrayidx144 = getelementptr inbounds %struct.rtvec_def* %32, i64 0, i32 1, i64 %indvars.iv
  store %struct.rtx_def* %call137, %struct.rtx_def** %arrayidx144, align 8, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %33 = load %struct.rtvec_def** %rtvec121, align 8, !tbaa !4
  %num_elem127 = getelementptr inbounds %struct.rtvec_def* %33, i64 0, i32 0
  %34 = load i32* %num_elem127, align 4, !tbaa !0
  %35 = trunc i64 %indvars.iv.next to i32
  %cmp128 = icmp slt i32 %35, %34
  br i1 %cmp128, label %for.body130, label %for.inc154

sw.default152:                                    ; preds = %for.body57
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 4773, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.copy_insn_1, i64 0, i64 0)) #10
  unreachable

for.inc154:                                       ; preds = %if.then112, %for.body130, %sw.bb65, %if.else105, %if.then72, %if.then100, %if.then89, %for.body57, %for.body57, %for.body57, %for.body57, %for.body57, %for.body57, %for.body57
  %indvars.iv.next269 = add i64 %indvars.iv268, 1
  %bf.load50 = load i32* %14, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %idxprom52253 = zext i32 %bf.clear51 to i64
  %arrayidx53 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom52253
  %36 = load i8* %arrayidx53, align 1, !tbaa !1
  %conv54 = zext i8 %36 to i32
  %37 = trunc i64 %indvars.iv.next269 to i32
  %cmp55 = icmp slt i32 %37, %conv54
  br i1 %cmp55, label %for.body57, label %for.end156

for.end156:                                       ; preds = %for.inc154, %if.end44
  switch i32 %bf.clear, label %return [
    i32 62, label %if.then159
    i32 41, label %if.then172
  ]

if.then159:                                       ; preds = %for.end156
  %38 = load i32* @copy_insn_n_scratches, align 4, !tbaa !0
  %inc160 = add nsw i32 %38, 1
  store i32 %inc160, i32* @copy_insn_n_scratches, align 4, !tbaa !0
  %cmp161 = icmp sgt i32 %38, 29
  br i1 %cmp161, label %if.then163, label %if.end164

if.then163:                                       ; preds = %if.then159
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 4781, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.copy_insn_1, i64 0, i64 0)) #10
  unreachable

if.end164:                                        ; preds = %if.then159
  %idxprom165 = sext i32 %38 to i64
  %arrayidx166 = getelementptr inbounds [30 x %struct.rtx_def*]* @copy_insn_scratch_in, i64 0, i64 %idxprom165
  store %struct.rtx_def* %orig, %struct.rtx_def** %arrayidx166, align 8, !tbaa !4
  %arrayidx168 = getelementptr inbounds [30 x %struct.rtx_def*]* @copy_insn_scratch_out, i64 0, i64 %idxprom165
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx168, align 8, !tbaa !4
  br label %return

if.then172:                                       ; preds = %for.end156
  %arrayidx174 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 3
  %rtvec175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtvec_def**
  %39 = load %struct.rtvec_def** %rtvec175, align 8, !tbaa !4
  store %struct.rtvec_def* %39, %struct.rtvec_def** @orig_asm_operands_vector, align 8, !tbaa !4
  %arrayidx177 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3
  %rtvec178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtvec_def**
  %40 = load %struct.rtvec_def** %rtvec178, align 8, !tbaa !4
  store %struct.rtvec_def* %40, %struct.rtvec_def** @copy_asm_operands_vector, align 8, !tbaa !4
  %arrayidx180 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 4
  %rtvec181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtvec_def**
  %41 = load %struct.rtvec_def** %rtvec181, align 8, !tbaa !4
  store %struct.rtvec_def* %41, %struct.rtvec_def** @orig_asm_constraints_vector, align 8, !tbaa !4
  %arrayidx183 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 4
  %rtvec184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtvec_def**
  %42 = load %struct.rtvec_def** %rtvec184, align 8, !tbaa !4
  store %struct.rtvec_def* %42, %struct.rtvec_def** @copy_asm_constraints_vector, align 8, !tbaa !4
  br label %return

return:                                           ; preds = %if.end164, %if.then172, %for.end156, %land.lhs.true19, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.then
  %retval.0 = phi %struct.rtx_def* [ %4, %if.then ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %entry ], [ %orig, %land.lhs.true19 ], [ %call, %for.end156 ], [ %call, %if.then172 ], [ %call, %if.end164 ]
  ret %struct.rtx_def* %retval.0
}
