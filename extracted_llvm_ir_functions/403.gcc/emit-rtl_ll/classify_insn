define i32 @classify_insn(%struct.rtx_def* nocapture %x) #5 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end89 [
    i32 36, label %return
    i32 50, label %if.then4
    i32 51, label %if.then9
    i32 47, label %if.then14
    i32 39, label %if.then29
  ]

if.then4:                                         ; preds = %entry
  br label %return

if.then9:                                         ; preds = %entry
  br label %return

if.then14:                                        ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !tbaa !4
  %cmp15 = icmp eq %struct.rtx_def* %1, %2
  br i1 %cmp15, label %return, label %if.else

if.else:                                          ; preds = %if.then14
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx19, align 8, !tbaa !4
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load20 = load i32* %4, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 50
  %. = select i1 %cmp22, i32 34, i32 32
  br label %return

if.then29:                                        ; preds = %entry
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**
  %5 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %num_elem = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 0
  %6 = load i32* %num_elem, align 4, !tbaa !0
  %cmp32108 = icmp sgt i32 %6, 0
  br i1 %cmp32108, label %for.body.lr.ph, label %if.end89

for.body.lr.ph:                                   ; preds = %if.then29
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !tbaa !4
  %8 = sext i32 %6 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx36 = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv.next
  %9 = load %struct.rtx_def** %arrayidx36, align 8, !tbaa !4
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load37 = load i32* %10, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  switch i32 %bf.clear38, label %for.cond.backedge [
    i32 50, label %return
    i32 47, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %for.body
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx59, align 8, !tbaa !4
  %cmp60 = icmp eq %struct.rtx_def* %11, %7
  br i1 %cmp60, label %return, label %land.lhs.true72

for.cond.backedge:                                ; preds = %for.body, %land.lhs.true72
  %12 = trunc i64 %indvars.iv.next to i32
  %cmp32 = icmp sgt i32 %12, 0
  br i1 %cmp32, label %for.body, label %if.end89

land.lhs.true72:                                  ; preds = %land.lhs.true
  %arrayidx80 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx81, align 8, !tbaa !4
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load82 = load i32* %14, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  %cmp84 = icmp eq i32 %bf.clear83, 50
  br i1 %cmp84, label %return, label %for.cond.backedge

if.end89:                                         ; preds = %if.then29, %for.cond.backedge, %entry
  br label %return

return:                                           ; preds = %land.lhs.true72, %land.lhs.true, %for.body, %entry, %if.else, %if.then14, %if.end89, %if.then9, %if.then4
  %retval.0 = phi i32 [ 34, %if.then4 ], [ 33, %if.then9 ], [ 32, %if.end89 ], [ 36, %entry ], [ 33, %if.then14 ], [ %., %if.else ], [ 34, %land.lhs.true72 ], [ 33, %land.lhs.true ], [ 34, %for.body ]
  ret i32 %retval.0
}
