define %struct.rtx_def* @make_insn_raw(%struct.rtx_def* %pattern) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %pattern}, i64 0, metadata !1750), !dbg !3363
  %call = tail call %struct.rtx_def* @rtx_alloc(i32 32) #9, !dbg !3364
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !1751), !dbg !3364
  %0 = load %struct.function** @cfun, align 8, !dbg !3365, !tbaa !2272
  %emit = getelementptr inbounds %struct.function* %0, i64 0, i32 3, !dbg !3365
  %1 = load %struct.emit_status** %emit, align 8, !dbg !3365, !tbaa !2272
  %x_cur_insn_uid = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 6, !dbg !3365
  %2 = load i32* %x_cur_insn_uid, align 4, !dbg !3365, !tbaa !2263
  %inc = add nsw i32 %2, 1, !dbg !3365
  store i32 %inc, i32* %x_cur_insn_uid, align 4, !dbg !3365, !tbaa !2263
  %fld = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, !dbg !3365
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*, !dbg !3365
  store i32 %2, i32* %rtint, align 4, !dbg !3365, !tbaa !2263
  %3 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3, i32 0, !dbg !3366
  %pattern.c = ptrtoint %struct.rtx_def* %pattern to i64, !dbg !3366
  store i64 %pattern.c, i64* %3, align 8, !dbg !3366, !tbaa !2272
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 4, !dbg !3367
  %rtint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*, !dbg !3367
  store i32 -1, i32* %rtint5, align 4, !dbg !3367, !tbaa !2263
  %4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 5, i32 0, !dbg !3368
  %5 = bitcast i64* %4 to i8*, !dbg !3369
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 16, i32 8, i1 false), !dbg !3370
  ret %struct.rtx_def* %call, !dbg !3369
}
