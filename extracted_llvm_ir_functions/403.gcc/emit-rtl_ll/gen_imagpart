define %struct.rtx_def* @gen_imagpart(i32 %mode, %struct.rtx_def* %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !1335), !dbg !2562
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !1336), !dbg !2563
  %idxprom = sext i32 %mode to i64, !dbg !2564
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom, !dbg !2564
  %0 = load i16* %arrayidx, align 2, !dbg !2564, !tbaa !2497
  %conv = zext i16 %0 to i32, !dbg !2564
  %1 = load i32* @target_flags, align 4, !dbg !2564, !tbaa !2263
  %and = lshr i32 %1, 20, !dbg !2564
  %2 = and i32 %and, 32, !dbg !2564
  %3 = add i32 %2, 32, !dbg !2564
  %cmp = icmp ult i32 %conv, %3, !dbg !2564
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2564

land.lhs.true:                                    ; preds = %entry
  %4 = bitcast %struct.rtx_def* %x to i32*, !dbg !2564
  %bf.load = load i32* %4, align 8, !dbg !2564
  %bf.clear = and i32 %bf.load, 65535, !dbg !2564
  %cmp2 = icmp eq i32 %bf.clear, 61, !dbg !2564
  br i1 %cmp2, label %land.lhs.true4, label %if.else, !dbg !2564

land.lhs.true4:                                   ; preds = %land.lhs.true
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, !dbg !2564
  %rtuint = bitcast %union.rtunion_def* %arrayidx5 to i32*, !dbg !2564
  %5 = load i32* %rtuint, align 4, !dbg !2564, !tbaa !2263
  %cmp6 = icmp ult i32 %5, 53, !dbg !2564
  br i1 %cmp6, label %if.then, label %if.else, !dbg !2564

if.then:                                          ; preds = %land.lhs.true4
  tail call void (i8*, ...)* @internal_error(i8* getelementptr inbounds ([62 x i8]* @.str1, i64 0, i64 0)) #11, !dbg !2565
  unreachable, !dbg !2565

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %call = tail call %struct.rtx_def* @gen_highpart(i32 %mode, %struct.rtx_def* %x) #10, !dbg !2566
  ret %struct.rtx_def* %call, !dbg !2566
}
