define %struct.rtx_def* @change_address(%struct.rtx_def* %memref, i32 %mode, %struct.rtx_def* %addr) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %memref}, i64 0, metadata !1475), !dbg !2866
  tail call void @llvm.dbg.value(metadata !{i32 %mode}, i64 0, metadata !1476), !dbg !2867
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %addr}, i64 0, metadata !1477), !dbg !2868
  %call = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 %mode, %struct.rtx_def* %addr, i32 1) #10, !dbg !2869
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call}, i64 0, metadata !1478), !dbg !2869
  %0 = bitcast %struct.rtx_def* %call to i32*, !dbg !2870
  %bf.load = load i32* %0, align 8, !dbg !2870
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2870
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2870
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !1479), !dbg !2870
  %arrayidx = getelementptr inbounds %struct.rtx_def* %memref, i64 0, i32 1, i64 1, !dbg !2871
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !2871
  %1 = load %struct.mem_attrs** %rtmem, align 8, !dbg !2871, !tbaa !2272
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !2871
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !2871

cond.false:                                       ; preds = %entry
  %alias = getelementptr inbounds %struct.mem_attrs* %1, i64 0, i32 0, !dbg !2871
  %2 = load i64* %alias, align 8, !dbg !2871, !tbaa !2269
  br label %cond.end, !dbg !2871

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i64 [ %2, %cond.false ], [ 0, %entry ], !dbg !2871
  %cmp4 = icmp eq i32 %bf.clear, 51, !dbg !2871
  br i1 %cmp4, label %cond.end16, label %cond.false14, !dbg !2871

cond.false14:                                     ; preds = %cond.end
  %idxprom30 = zext i32 %bf.clear to i64, !dbg !2872
  %arrayidx7 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom30, !dbg !2872
  %3 = load i8* %arrayidx7, align 1, !dbg !2872, !tbaa !2264
  %conv = zext i8 %3 to i64, !dbg !2872
  %call8 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 undef, i64 %conv) #10, !dbg !2872
  %call15 = tail call i32 @get_mode_alignment(i32 %bf.clear) #9, !dbg !2873
  br label %cond.end16, !dbg !2873

cond.end16:                                       ; preds = %cond.end, %cond.false14
  %cond1031 = phi %struct.rtx_def* [ %call8, %cond.false14 ], [ null, %cond.end ]
  %cond17 = phi i32 [ %call15, %cond.false14 ], [ 8, %cond.end ], !dbg !2873
  %call18 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i64 %cond, %union.tree_node* null, %struct.rtx_def* null, %struct.rtx_def* %cond1031, i32 %cond17, i32 %bf.clear) #10, !dbg !2873
  %4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1, i32 0, !dbg !2873
  %call18.c = ptrtoint %struct.mem_attrs* %call18 to i64, !dbg !2873
  store i64 %call18.c, i64* %4, align 8, !dbg !2873, !tbaa !2272
  ret %struct.rtx_def* %call, !dbg !2874
}
