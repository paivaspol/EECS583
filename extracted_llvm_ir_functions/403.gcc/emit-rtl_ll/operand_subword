define %struct.rtx_def* @operand_subword(%struct.rtx_def* %op, i32 %offset, i32 %validate_address, i32 %mode) #0 {
entry:
  %cmp = icmp eq i32 %mode, 0
  br i1 %cmp, label %if.end, label %if.end3

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.rtx_def* %op to i32*
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp1 = icmp eq i32 %bf.clear, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), i32 1560, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.operand_subword, i64 0, i64 0)) #10
  unreachable

if.end3:                                          ; preds = %entry, %if.end
  %mode.addr.069 = phi i32 [ %bf.clear, %if.end ], [ %mode, %entry ]
  %cmp4 = icmp eq i32 %mode.addr.069, 51
  br i1 %cmp4, label %if.end21, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end3
  %idxprom = sext i32 %mode.addr.069 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %1 to i32
  %2 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %2, 23
  %3 = and i32 %and, 4
  %4 = add i32 %3, 4
  %cmp5 = icmp ult i32 %conv, %4
  br i1 %cmp5, label %return, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %land.lhs.true
  %add = add i32 %offset, 1
  %mul = mul i32 %4, %add
  %cmp18 = icmp ugt i32 %mul, %conv
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %land.lhs.true11
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !tbaa !4
  br label %return

if.end21:                                         ; preds = %land.lhs.true11, %if.end3
  %6 = bitcast %struct.rtx_def* %op to i32*
  %bf.load22 = load i32* %6, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 66
  br i1 %cmp24, label %if.then26, label %if.end48

if.then26:                                        ; preds = %if.end21
  %7 = load i32* @word_mode, align 4, !tbaa !7
  %8 = load i32* @target_flags, align 4, !tbaa !0
  %and27 = lshr i32 %8, 23
  %9 = and i32 %and27, 4
  %10 = add i32 %9, 4
  %mul30 = mul i32 %10, %offset
  %conv31 = zext i32 %mul30 to i64
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op, i32 %7, i64 %conv31, i32 0, i32 1) #9
  %tobool32 = icmp eq i32 %validate_address, 0
  br i1 %tobool32, label %return, label %if.else

if.else:                                          ; preds = %if.then26
  %11 = load i32* @reload_completed, align 4, !tbaa !0
  %tobool34 = icmp eq i32 %11, 0
  br i1 %tobool34, label %if.else41, label %if.then35

if.then35:                                        ; preds = %if.else
  %12 = load i32* @word_mode, align 4, !tbaa !7
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %call37 = tail call i32 @strict_memory_address_p(i32 %12, %struct.rtx_def* %13) #8
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %return, label %if.end48

if.else41:                                        ; preds = %if.else
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx44, align 8, !tbaa !4
  tail call void @update_temp_slot_address(%struct.rtx_def* %14, %struct.rtx_def* %14) #8
  %call.i = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %call, i32 0, %struct.rtx_def* %14, i32 1) #8
  br label %return

if.end48:                                         ; preds = %if.then35, %if.end21
  %15 = load i32* @word_mode, align 4, !tbaa !7
  %16 = load i32* @target_flags, align 4, !tbaa !0
  %and49 = lshr i32 %16, 23
  %17 = and i32 %and49, 4
  %18 = add i32 %17, 4
  %mul52 = mul i32 %18, %offset
  %call53 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %15, %struct.rtx_def* %op, i32 %mode.addr.069, i32 %mul52) #8
  br label %return

return:                                           ; preds = %if.then35, %if.then26, %land.lhs.true, %if.end48, %if.else41, %if.then20
  %retval.0 = phi %struct.rtx_def* [ %5, %if.then20 ], [ %call53, %if.end48 ], [ %call.i, %if.else41 ], [ null, %land.lhs.true ], [ %call, %if.then26 ], [ null, %if.then35 ]
  ret %struct.rtx_def* %retval.0
}
