define i32 @subreg_lowpart_p(%struct.rtx_def* nocapture %x) #6 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !1378), !dbg !2628
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !2629
  %bf.load = load i32* %0, align 8, !dbg !2629
  %bf.clear = and i32 %bf.load, 65535, !dbg !2629
  %cmp = icmp eq i32 %bf.clear, 63, !dbg !2629
  br i1 %cmp, label %if.else, label %return, !dbg !2629

if.else:                                          ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, !dbg !2630
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !2630
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !2630, !tbaa !2272
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !2630
  %bf.load1 = load i32* %2, align 8, !dbg !2630
  %bf.clear2 = and i32 %bf.load1, 16711680, !dbg !2630
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !2630
  br i1 %cmp3, label %return, label %if.end5, !dbg !2630

if.end5:                                          ; preds = %if.else
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, !dbg !2631
  %rtuint = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !2631
  %3 = load i32* %rtuint, align 4, !dbg !2631, !tbaa !2263
  %cmp17 = icmp eq i32 %3, 0, !dbg !2631
  %conv = zext i1 %cmp17 to i32, !dbg !2631
  br label %return, !dbg !2631

return:                                           ; preds = %if.else, %entry, %if.end5
  %retval.0 = phi i32 [ %conv, %if.end5 ], [ 1, %entry ], [ 0, %if.else ]
  ret i32 %retval.0, !dbg !2632
}
