define internal fastcc void @_ZN3povL15transform_pointEPd(double* nocapture %P) #4 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %P}, i64 0, metadata !1065), !dbg !2344
  %0 = load double* %P, align 8, !dbg !2345, !tbaa !1572
  %1 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gOE, i64 0, i64 0), align 16, !dbg !2345, !tbaa !1572
  %sub = fsub double %0, %1, !dbg !2345
  tail call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !1066), !dbg !2345
  %arrayidx1 = getelementptr inbounds double* %P, i64 1, !dbg !2346
  %2 = load double* %arrayidx1, align 8, !dbg !2346, !tbaa !1572
  %3 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gOE, i64 0, i64 1), align 8, !dbg !2346, !tbaa !1572
  %sub2 = fsub double %2, %3, !dbg !2346
  tail call void @llvm.dbg.value(metadata !{double %sub2}, i64 0, metadata !1067), !dbg !2346
  %arrayidx3 = getelementptr inbounds double* %P, i64 2, !dbg !2347
  %4 = load double* %arrayidx3, align 8, !dbg !2347, !tbaa !1572
  %5 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gOE, i64 0, i64 2), align 16, !dbg !2347, !tbaa !1572
  %sub4 = fsub double %4, %5, !dbg !2347
  tail call void @llvm.dbg.value(metadata !{double %sub4}, i64 0, metadata !1068), !dbg !2347
  %6 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gUE, i64 0, i64 0), align 16, !dbg !2348, !tbaa !1572
  %mul = fmul double %sub, %6, !dbg !2348
  %7 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gUE, i64 0, i64 1), align 8, !dbg !2348, !tbaa !1572
  %mul5 = fmul double %sub2, %7, !dbg !2348
  %add = fadd double %mul, %mul5, !dbg !2348
  %8 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gUE, i64 0, i64 2), align 16, !dbg !2348, !tbaa !1572
  %mul6 = fmul double %sub4, %8, !dbg !2348
  %add7 = fadd double %add, %mul6, !dbg !2348
  store double %add7, double* %P, align 8, !dbg !2348, !tbaa !1572
  %9 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gVE, i64 0, i64 0), align 16, !dbg !2349, !tbaa !1572
  %mul9 = fmul double %sub, %9, !dbg !2349
  %10 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gVE, i64 0, i64 1), align 8, !dbg !2349, !tbaa !1572
  %mul10 = fmul double %sub2, %10, !dbg !2349
  %add11 = fadd double %mul9, %mul10, !dbg !2349
  %11 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gVE, i64 0, i64 2), align 16, !dbg !2349, !tbaa !1572
  %mul12 = fmul double %sub4, %11, !dbg !2349
  %add13 = fadd double %add11, %mul12, !dbg !2349
  store double %add13, double* %arrayidx1, align 8, !dbg !2349, !tbaa !1572
  %12 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gWE, i64 0, i64 0), align 16, !dbg !2350, !tbaa !1572
  %mul15 = fmul double %sub, %12, !dbg !2350
  %13 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gWE, i64 0, i64 1), align 8, !dbg !2350, !tbaa !1572
  %mul16 = fmul double %sub2, %13, !dbg !2350
  %add17 = fadd double %mul15, %mul16, !dbg !2350
  %14 = load double* getelementptr inbounds ([3 x double]* @_ZN3povL2gWE, i64 0, i64 2), align 16, !dbg !2350, !tbaa !1572
  %mul18 = fmul double %sub4, %14, !dbg !2350
  %add19 = fadd double %add17, %mul18, !dbg !2350
  store double %add19, double* %arrayidx3, align 8, !dbg !2350, !tbaa !1572
  ret void, !dbg !2351
}
