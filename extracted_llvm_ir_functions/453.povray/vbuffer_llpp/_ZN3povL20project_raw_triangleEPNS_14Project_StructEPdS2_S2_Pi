define internal fastcc void @_ZN3povL20project_raw_triangleEPNS_14Project_StructEPdS2_S2_Pi(%"struct.pov::Project_Struct"* nocapture %Project, double* nocapture readonly %P1, double* nocapture readonly %P2, double* nocapture readonly %P3, i32* nocapture %visible) #0 {
  %Points = alloca [20 x [3 x double]], align 16
  %number = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %"struct.pov::Project_Struct"* %Project, i64 0, metadata !1368, metadata !1814), !dbg !3819
  tail call void @llvm.dbg.value(metadata double* %P1, i64 0, metadata !1369, metadata !1814), !dbg !3820
  tail call void @llvm.dbg.value(metadata double* %P2, i64 0, metadata !1370, metadata !1814), !dbg !3821
  tail call void @llvm.dbg.value(metadata double* %P3, i64 0, metadata !1371, metadata !1814), !dbg !3822
  tail call void @llvm.dbg.value(metadata i32* %visible, i64 0, metadata !1372, metadata !1814), !dbg !3823
  %1 = bitcast [20 x [3 x double]]* %Points to i8*, !dbg !3824
  call void @llvm.lifetime.start(i64 480, i8* %1) #3, !dbg !3824
  tail call void @llvm.dbg.declare(metadata [20 x [3 x double]]* %Points, metadata !1373, metadata !1814), !dbg !3825
  tail call void @llvm.dbg.value(metadata double* %P1, i64 0, metadata !1188, metadata !1814), !dbg !3826
  %2 = bitcast double* %P1 to i64*, !dbg !3828
  %3 = load i64* %2, align 8, !dbg !3828, !tbaa !2106
  %4 = bitcast [20 x [3 x double]]* %Points to i64*, !dbg !3829
  store i64 %3, i64* %4, align 16, !dbg !3829, !tbaa !2106
  %5 = getelementptr inbounds double* %P1, i64 1, !dbg !3830
  %6 = bitcast double* %5 to i64*, !dbg !3830
  %7 = load i64* %6, align 8, !dbg !3830, !tbaa !2106
  %8 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 0, i64 1, !dbg !3831
  %9 = bitcast double* %8 to i64*, !dbg !3832
  store i64 %7, i64* %9, align 8, !dbg !3832, !tbaa !2106
  %10 = getelementptr inbounds double* %P1, i64 2, !dbg !3833
  %11 = bitcast double* %10 to i64*, !dbg !3833
  %12 = load i64* %11, align 8, !dbg !3833, !tbaa !2106
  %13 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 0, i64 2, !dbg !3834
  %14 = bitcast double* %13 to i64*, !dbg !3835
  store i64 %12, i64* %14, align 16, !dbg !3835, !tbaa !2106
  %15 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 1, i64 0, !dbg !3836
  tail call void @llvm.dbg.value(metadata double* %15, i64 0, metadata !1187, metadata !1814), !dbg !3837
  tail call void @llvm.dbg.value(metadata double* %P2, i64 0, metadata !1188, metadata !1814), !dbg !3839
  %16 = bitcast double* %P2 to i64*, !dbg !3840
  %17 = load i64* %16, align 8, !dbg !3840, !tbaa !2106
  %18 = bitcast double* %15 to i64*, !dbg !3841
  store i64 %17, i64* %18, align 8, !dbg !3841, !tbaa !2106
  %19 = getelementptr inbounds double* %P2, i64 1, !dbg !3842
  %20 = bitcast double* %19 to i64*, !dbg !3842
  %21 = load i64* %20, align 8, !dbg !3842, !tbaa !2106
  %22 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 1, i64 1, !dbg !3843
  %23 = bitcast double* %22 to i64*, !dbg !3844
  store i64 %21, i64* %23, align 8, !dbg !3844, !tbaa !2106
  %24 = getelementptr inbounds double* %P2, i64 2, !dbg !3845
  %25 = bitcast double* %24 to i64*, !dbg !3845
  %26 = load i64* %25, align 8, !dbg !3845, !tbaa !2106
  %27 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 1, i64 2, !dbg !3846
  %28 = bitcast double* %27 to i64*, !dbg !3847
  store i64 %26, i64* %28, align 8, !dbg !3847, !tbaa !2106
  %29 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 2, i64 0, !dbg !3848
  tail call void @llvm.dbg.value(metadata double* %29, i64 0, metadata !1187, metadata !1814), !dbg !3849
  tail call void @llvm.dbg.value(metadata double* %P3, i64 0, metadata !1188, metadata !1814), !dbg !3851
  %30 = bitcast double* %P3 to i64*, !dbg !3852
  %31 = load i64* %30, align 8, !dbg !3852, !tbaa !2106
  %32 = bitcast double* %29 to i64*, !dbg !3853
  store i64 %31, i64* %32, align 16, !dbg !3853, !tbaa !2106
  %33 = getelementptr inbounds double* %P3, i64 1, !dbg !3854
  %34 = bitcast double* %33 to i64*, !dbg !3854
  %35 = load i64* %34, align 8, !dbg !3854, !tbaa !2106
  %36 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 2, i64 1, !dbg !3855
  %37 = bitcast double* %36 to i64*, !dbg !3856
  store i64 %35, i64* %37, align 8, !dbg !3856, !tbaa !2106
  %38 = getelementptr inbounds double* %P3, i64 2, !dbg !3857
  %39 = bitcast double* %38 to i64*, !dbg !3857
  %40 = load i64* %39, align 8, !dbg !3857, !tbaa !2106
  %41 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 2, i64 2, !dbg !3858
  %42 = bitcast double* %41 to i64*, !dbg !3859
  store i64 %40, i64* %42, align 16, !dbg !3859, !tbaa !2106
  tail call void @llvm.dbg.value(metadata i32 3, i64 0, metadata !1375, metadata !1814), !dbg !3860
  store i32 3, i32* %number, align 4, !dbg !3861, !tbaa !1954
  %43 = bitcast i64 %12 to double
  %44 = fcmp olt double %43, -1.000000e+00, !dbg !3862
  %45 = bitcast i64 %26 to double
  %46 = bitcast i64 %40 to double
  %47 = bitcast i64 %7 to double
  %48 = bitcast i64 %17 to double
  %49 = bitcast i64 %21 to double
  %50 = bitcast i64 %31 to double
  %51 = bitcast i64 %35 to double
  %52 = fcmp olt double %45, -1.000000e+00, !dbg !3864
  %or.cond = or i1 %44, %52, !dbg !3865
  %53 = fcmp olt double %46, -1.000000e+00, !dbg !3866
  %or.cond3 = or i1 %or.cond, %53, !dbg !3865
  br i1 %or.cond3, label %79, label %54, !dbg !3865

; <label>:54                                      ; preds = %0
  %55 = bitcast i64 %3 to double
  %56 = tail call double @fabs(double %55) #7, !dbg !3867
  %57 = fadd double %43, 1.000000e+00, !dbg !3868
  %58 = fmul double %57, 5.000000e-01, !dbg !3869
  %59 = fcmp ogt double %56, %58, !dbg !3870
  br i1 %59, label %79, label %60, !dbg !3871

; <label>:60                                      ; preds = %54
  %61 = tail call double @fabs(double %47) #7, !dbg !3872
  %62 = fcmp ogt double %61, %58, !dbg !3873
  br i1 %62, label %79, label %63, !dbg !3874

; <label>:63                                      ; preds = %60
  %64 = tail call double @fabs(double %48) #7, !dbg !3875
  %65 = fadd double %45, 1.000000e+00, !dbg !3876
  %66 = fmul double %65, 5.000000e-01, !dbg !3877
  %67 = fcmp ogt double %64, %66, !dbg !3878
  br i1 %67, label %79, label %68, !dbg !3879

; <label>:68                                      ; preds = %63
  %69 = tail call double @fabs(double %49) #7, !dbg !3880
  %70 = fcmp ogt double %69, %66, !dbg !3881
  br i1 %70, label %79, label %71, !dbg !3882

; <label>:71                                      ; preds = %68
  %72 = tail call double @fabs(double %50) #7, !dbg !3883
  %73 = fadd double %46, 1.000000e+00, !dbg !3884
  %74 = fmul double %73, 5.000000e-01, !dbg !3885
  %75 = fcmp ogt double %72, %74, !dbg !3886
  br i1 %75, label %79, label %76, !dbg !3887

; <label>:76                                      ; preds = %71
  %77 = tail call double @fabs(double %51) #7, !dbg !3888
  %78 = fcmp ogt double %77, %74, !dbg !3889
  br i1 %78, label %79, label %.lr.ph, !dbg !3890

; <label>:79                                      ; preds = %0, %54, %60, %63, %68, %71, %76
  %80 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 0, !dbg !3891
  tail call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1375, metadata !1814), !dbg !3860
  call void @_ZN3pov12Clip_PolygonEPA3_dPiPKdS4_S4_S4_dddd([3 x double]* %80, i32* %number, double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VX1E, i64 0, i64 0), double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VX2E, i64 0, i64 0), double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VY1E, i64 0, i64 0), double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VY2E, i64 0, i64 0), double 0x3FDC9F25C5BFF0CF, double 0x3FDC9F25C5BFF0CF, double 0x3FDC9F25C5BFF0CF, double 0x3FDC9F25C5BFF0CF) #6, !dbg !3893
  %.pre = load i32* %number, align 4, !dbg !3894, !tbaa !1954
  call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1375, metadata !1814), !dbg !3860
  %81 = icmp eq i32 %.pre, 0, !dbg !3894
  br i1 %81, label %138, label %.preheader, !dbg !3896

.preheader:                                       ; preds = %79
  call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1375, metadata !1814), !dbg !3860
  %82 = icmp sgt i32 %.pre, 0, !dbg !3897
  br i1 %82, label %.lr.ph, label %._crit_edge, !dbg !3901

.lr.ph:                                           ; preds = %76, %.preheader
  %83 = phi i32 [ %.pre, %.preheader ], [ 3, %76 ]
  %84 = load i32* getelementptr inbounds (%"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i64 0, i32 2), align 4, !dbg !3902, !tbaa !3026
  %85 = sdiv i32 %84, 2, !dbg !3904
  %86 = sitofp i32 %84 to double, !dbg !3905
  %87 = load i32* getelementptr inbounds (%"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i64 0, i32 1), align 8, !dbg !3906, !tbaa !3057
  %88 = sdiv i32 %87, 2, !dbg !3907
  %89 = sitofp i32 %87 to double, !dbg !3908
  %90 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 0, !dbg !3909
  %91 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 2, !dbg !3911
  %92 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 1, !dbg !3913
  %93 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 3, !dbg !3915
  %94 = sext i32 %83 to i64, !dbg !3901
  br label %95, !dbg !3901

; <label>:95                                      ; preds = %.lr.ph, %136
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %136 ]
  %96 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 %indvars.iv, !dbg !3917
  %97 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 %indvars.iv, i64 2, !dbg !3917
  %98 = load double* %97, align 8, !dbg !3917, !tbaa !2106
  %99 = fcmp olt double %98, -9.999999e-01, !dbg !3919
  br i1 %99, label %100, label %102, !dbg !3920

; <label>:100                                     ; preds = %95
  %101 = bitcast [3 x double]* %96 to i8*, !dbg !3921
  call void @llvm.memset.p0i8.i64(i8* %101, i8 0, i64 16, i32 8, i1 false), !dbg !3923
  br label %112, !dbg !3921

; <label>:102                                     ; preds = %95
  %103 = fadd double %98, 1.000000e+00, !dbg !3924
  %104 = bitcast [3 x double]* %96 to <2 x double>*, !dbg !3926
  %105 = load <2 x double>* %104, align 8, !dbg !3926, !tbaa !2106
  %106 = insertelement <2 x double> undef, double %103, i32 0, !dbg !3926
  %107 = insertelement <2 x double> %106, double %103, i32 1, !dbg !3926
  %108 = fdiv <2 x double> %105, %107, !dbg !3926
  %109 = bitcast [3 x double]* %96 to <2 x double>*, !dbg !3926
  store <2 x double> %108, <2 x double>* %109, align 8, !dbg !3926, !tbaa !2106
  %110 = extractelement <2 x double> %108, i32 0
  %111 = extractelement <2 x double> %108, i32 1
  br label %112

; <label>:112                                     ; preds = %102, %100
  %113 = phi double [ %111, %102 ], [ 0.000000e+00, %100 ]
  %114 = phi double [ %110, %102 ], [ 0.000000e+00, %100 ]
  %115 = fmul double %86, %114, !dbg !3927
  %116 = fptosi double %115 to i32, !dbg !3928
  %117 = add nsw i32 %116, %85, !dbg !3929
  call void @llvm.dbg.value(metadata i32 %117, i64 0, metadata !1376, metadata !1814), !dbg !3930
  %118 = fmul double %89, %113, !dbg !3931
  %119 = fptosi double %118 to i32, !dbg !3932
  %120 = sub nsw i32 %88, %119, !dbg !3933
  call void @llvm.dbg.value(metadata i32 %120, i64 0, metadata !1377, metadata !1814), !dbg !3934
  %121 = load i32* %90, align 4, !dbg !3909, !tbaa !2638
  %122 = icmp slt i32 %117, %121, !dbg !3935
  br i1 %122, label %123, label %124, !dbg !3936

; <label>:123                                     ; preds = %112
  store i32 %117, i32* %90, align 4, !dbg !3937, !tbaa !2638
  br label %124, !dbg !3938

; <label>:124                                     ; preds = %123, %112
  %125 = load i32* %91, align 4, !dbg !3911, !tbaa !2644
  %126 = icmp sgt i32 %117, %125, !dbg !3939
  br i1 %126, label %127, label %128, !dbg !3940

; <label>:127                                     ; preds = %124
  store i32 %117, i32* %91, align 4, !dbg !3941, !tbaa !2644
  br label %128, !dbg !3942

; <label>:128                                     ; preds = %127, %124
  %129 = load i32* %92, align 4, !dbg !3913, !tbaa !2635
  %130 = icmp slt i32 %120, %129, !dbg !3943
  br i1 %130, label %131, label %132, !dbg !3944

; <label>:131                                     ; preds = %128
  store i32 %120, i32* %92, align 4, !dbg !3945, !tbaa !2635
  br label %132, !dbg !3946

; <label>:132                                     ; preds = %131, %128
  %133 = load i32* %93, align 4, !dbg !3915, !tbaa !2641
  %134 = icmp sgt i32 %120, %133, !dbg !3947
  br i1 %134, label %135, label %136, !dbg !3948

; <label>:135                                     ; preds = %132
  store i32 %120, i32* %93, align 4, !dbg !3949, !tbaa !2641
  br label %136, !dbg !3950

; <label>:136                                     ; preds = %132, %135
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3901
  call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1375, metadata !1814), !dbg !3860
  %137 = icmp slt i64 %indvars.iv.next, %94, !dbg !3897
  br i1 %137, label %95, label %._crit_edge, !dbg !3901

._crit_edge:                                      ; preds = %136, %.preheader
  store i32 1, i32* %visible, align 4, !dbg !3951, !tbaa !1954
  br label %138, !dbg !3952

; <label>:138                                     ; preds = %79, %._crit_edge
  call void @llvm.lifetime.end(i64 480, i8* %1) #3, !dbg !3953
  ret void, !dbg !3953
}
