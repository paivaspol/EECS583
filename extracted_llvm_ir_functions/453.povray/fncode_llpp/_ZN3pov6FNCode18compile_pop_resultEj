define void @_ZN3pov6FNCode18compile_pop_resultEj(%"class.pov::FNCode"* nocapture %this, i32 %local_k) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.pov::FNCode"* %this}, i64 0, metadata !982), !dbg !1779
  tail call void @llvm.dbg.value(metadata !{i32 %local_k}, i64 0, metadata !983), !dbg !1779
  %level = getelementptr inbounds %"class.pov::FNCode"* %this, i64 0, i32 5, !dbg !1780
  %0 = load i32* %level, align 4, !dbg !1780, !tbaa !1117
  %dec = add nsw i32 %0, -1, !dbg !1780
  store i32 %dec, i32* %level, align 4, !dbg !1780, !tbaa !1117
  switch i32 %0, label %if.else7 [
    i32 2, label %if.then
    i32 3, label %if.then5
  ], !dbg !1781

if.then:                                          ; preds = %entry
  %call = tail call i32 @_ZN3pov6FNCode19compile_instructionEjjjj(%"class.pov::FNCode"* %this, i32 320, i32 6, i32 5, i32 0) #7, !dbg !1782
  br label %if.end13, !dbg !1782

if.then5:                                         ; preds = %entry
  %call6 = tail call i32 @_ZN3pov6FNCode19compile_instructionEjjjj(%"class.pov::FNCode"* %this, i32 320, i32 7, i32 5, i32 0) #7, !dbg !1783
  br label %if.end13, !dbg !1783

if.else7:                                         ; preds = %entry
  %cmp9 = icmp sgt i32 %dec, 2, !dbg !1784
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !1784

if.then10:                                        ; preds = %if.else7
  %call11 = tail call i32 @_ZN3pov6FNCode19compile_instructionEjjjj(%"class.pov::FNCode"* %this, i32 704, i32 1, i32 5, i32 %local_k) #7, !dbg !1785
  br label %if.end13, !dbg !1785

if.end13:                                         ; preds = %if.then5, %if.then10, %if.else7, %if.then
  ret void, !dbg !1786
}
