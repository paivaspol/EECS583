define i32 @_ZN3pov6FNCode19compile_instructionEjjjj(%"class.pov::FNCode"* nocapture %this, i32 %op, i32 %rs, i32 %rd, i32 %k) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.pov::FNCode"* %this}, i64 0, metadata !986), !dbg !1207
  tail call void @llvm.dbg.value(metadata !{i32 %op}, i64 0, metadata !987), !dbg !1207
  tail call void @llvm.dbg.value(metadata !{i32 %rs}, i64 0, metadata !988), !dbg !1207
  tail call void @llvm.dbg.value(metadata !{i32 %rd}, i64 0, metadata !989), !dbg !1207
  tail call void @llvm.dbg.value(metadata !{i32 %k}, i64 0, metadata !990), !dbg !1207
  %function = getelementptr inbounds %"class.pov::FNCode"* %this, i64 0, i32 0, !dbg !1208
  %0 = load %"struct.pov::FunctionCode"** %function, align 8, !dbg !1208, !tbaa !1112
  %program_size = getelementptr inbounds %"struct.pov::FunctionCode"* %0, i64 0, i32 1, !dbg !1208
  %1 = load i32* %program_size, align 4, !dbg !1208, !tbaa !1117
  %max_program_size = getelementptr inbounds %"class.pov::FNCode"* %this, i64 0, i32 1, !dbg !1208
  %2 = load i32* %max_program_size, align 4, !dbg !1208, !tbaa !1117
  %cmp = icmp ult i32 %1, %2, !dbg !1208
  br i1 %cmp, label %if.end, label %if.then, !dbg !1208

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1209, i64 0, metadata !1210), !dbg !1213
  %add = add i32 %2, 256, !dbg !1211
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !1214), !dbg !1213
  %cmp.i = icmp ult i32 %add, 1048575, !dbg !1215
  %.sroa.speculated = select i1 %cmp.i, i32 %add, i32 1048575, !dbg !1211
  store i32 %.sroa.speculated, i32* %max_program_size, align 4, !dbg !1211, !tbaa !1117
  %program = getelementptr inbounds %"struct.pov::FunctionCode"* %0, i64 0, i32 0, !dbg !1218
  %3 = load i32** %program, align 8, !dbg !1218, !tbaa !1112
  %4 = bitcast i32* %3 to i8*, !dbg !1218
  %conv = zext i32 %.sroa.speculated to i64, !dbg !1218
  %mul = shl nuw nsw i64 %conv, 2, !dbg !1218
  %call7 = tail call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %4, i64 %mul, i8* getelementptr inbounds ([55 x i8]* @.str3, i64 0, i64 0), i32 2044, i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0)) #7, !dbg !1218
  %5 = bitcast i8* %call7 to i32*, !dbg !1218
  %6 = load %"struct.pov::FunctionCode"** %function, align 8, !dbg !1218, !tbaa !1112
  %program9 = getelementptr inbounds %"struct.pov::FunctionCode"* %6, i64 0, i32 0, !dbg !1218
  store i32* %5, i32** %program9, align 8, !dbg !1218, !tbaa !1112
  %.pre = load %"struct.pov::FunctionCode"** %function, align 8, !dbg !1219, !tbaa !1112
  %program_size15.phi.trans.insert = getelementptr inbounds %"struct.pov::FunctionCode"* %.pre, i64 0, i32 1
  %.pre30 = load i32* %program_size15.phi.trans.insert, align 4, !dbg !1219, !tbaa !1117
  br label %if.end, !dbg !1220

if.end:                                           ; preds = %entry, %if.then
  %7 = phi i32 [ %1, %entry ], [ %.pre30, %if.then ]
  %8 = phi %"struct.pov::FunctionCode"* [ %0, %entry ], [ %.pre, %if.then ]
  %shl = shl i32 %k, 12, !dbg !1219
  %shl10 = shl i32 %rs, 3, !dbg !1219
  %or = or i32 %shl10, %op, !dbg !1219
  %or11 = or i32 %or, %rd, !dbg !1219
  %and12 = and i32 %or11, 4095, !dbg !1219
  %or13 = or i32 %and12, %shl, !dbg !1219
  %program_size15 = getelementptr inbounds %"struct.pov::FunctionCode"* %8, i64 0, i32 1, !dbg !1219
  %idxprom = zext i32 %7 to i64, !dbg !1219
  %program17 = getelementptr inbounds %"struct.pov::FunctionCode"* %8, i64 0, i32 0, !dbg !1219
  %9 = load i32** %program17, align 8, !dbg !1219, !tbaa !1112
  %arrayidx = getelementptr inbounds i32* %9, i64 %idxprom, !dbg !1219
  store i32 %or13, i32* %arrayidx, align 4, !dbg !1219, !tbaa !1117
  %10 = load i32* %program_size15, align 4, !dbg !1221, !tbaa !1117
  %inc = add i32 %10, 1, !dbg !1221
  store i32 %inc, i32* %program_size15, align 4, !dbg !1221, !tbaa !1117
  %cmp22 = icmp ugt i32 %inc, 1048574, !dbg !1222
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !1222

if.then23:                                        ; preds = %if.end
  %call24 = tail call i32 (i8*, ...)* @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([22 x i8]* @.str39, i64 0, i64 0)) #7, !dbg !1223
  %.pre31 = load %"struct.pov::FunctionCode"** %function, align 8, !dbg !1224, !tbaa !1112
  %program_size27.phi.trans.insert = getelementptr inbounds %"struct.pov::FunctionCode"* %.pre31, i64 0, i32 1
  %.pre32 = load i32* %program_size27.phi.trans.insert, align 4, !dbg !1224, !tbaa !1117
  br label %if.end25, !dbg !1223

if.end25:                                         ; preds = %if.then23, %if.end
  %11 = phi i32 [ %.pre32, %if.then23 ], [ %inc, %if.end ]
  %sub = add i32 %11, -1, !dbg !1224
  ret i32 %sub, !dbg !1224
}
