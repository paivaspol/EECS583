define void @_ZN3pov20POV_Std_Display_PlotEiijjjj(i32 %x, i32 %y, i32 %r, i32 %g, i32 %b, i32) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !28), !dbg !161
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !29), !dbg !161
  tail call void @llvm.dbg.value(metadata !{i32 %r}, i64 0, metadata !30), !dbg !161
  tail call void @llvm.dbg.value(metadata !{i32 %g}, i64 0, metadata !31), !dbg !161
  tail call void @llvm.dbg.value(metadata !{i32 %b}, i64 0, metadata !32), !dbg !161
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !33), !dbg !161
  %1 = load double* @_ZN3povL19Display_Width_ScaleE, align 8, !dbg !162, !tbaa !145
  %conv = sitofp i32 %x to double, !dbg !162
  %mul = fmul double %conv, %1, !dbg !162
  %conv1 = fptosi double %mul to i32, !dbg !162
  tail call void @llvm.dbg.value(metadata !{i32 %conv1}, i64 0, metadata !34), !dbg !162
  %2 = load double* @_ZN3povL20Display_Height_ScaleE, align 8, !dbg !163, !tbaa !145
  %conv2 = sitofp i32 %y to double, !dbg !163
  %mul3 = fmul double %conv2, %2, !dbg !163
  %conv4 = fptosi double %mul3 to i32, !dbg !163
  tail call void @llvm.dbg.value(metadata !{i32 %conv4}, i64 0, metadata !35), !dbg !163
  tail call void @llvm.dbg.declare(metadata !164, metadata !37), !dbg !165
  %3 = load i32* @_ZN3povL6Prev_YE, align 4, !dbg !166, !tbaa !150
  %cmp = icmp sgt i32 %conv4, %3, !dbg !166
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !166

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = load i32* @_ZN3povL6Prev_XE, align 4, !dbg !167, !tbaa !150
  br label %if.end, !dbg !166

if.then:                                          ; preds = %entry
  %inc = add nsw i32 %3, 1, !dbg !168
  store i32 %inc, i32* @_ZN3povL6Prev_YE, align 4, !dbg !168, !tbaa !150
  store i32 0, i32* @_ZN3povL6Prev_XE, align 4, !dbg !170, !tbaa !150
  br label %if.end, !dbg !171

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %4 = phi i32 [ %.pre, %entry.if.end_crit_edge ], [ 0, %if.then ]
  %cmp5 = icmp sgt i32 %conv1, %4, !dbg !167
  br i1 %cmp5, label %if.then6, label %if.end17, !dbg !167

if.then6:                                         ; preds = %if.end
  %inc16 = add nsw i32 %4, 1, !dbg !172
  store i32 %inc16, i32* @_ZN3povL6Prev_XE, align 4, !dbg !172, !tbaa !150
  br label %if.end17, !dbg !174

if.end17:                                         ; preds = %if.then6, %if.end
  ret void, !dbg !175
}
