define internal i32 @_ZN3povL10Inside_SorEPdPNS_13Object_StructE(double* %IPoint, %"struct.pov::Object_Struct"* nocapture %Object) #0 {
entry:
  %P = alloca [3 x double], align 16
  call void @llvm.dbg.value(metadata !{double* %IPoint}, i64 0, metadata !1154), !dbg !1655
  call void @llvm.dbg.value(metadata !{%"struct.pov::Object_Struct"* %Object}, i64 0, metadata !1155), !dbg !1655
  call void @llvm.dbg.declare(metadata !{[3 x double]* %P}, metadata !1160), !dbg !1656
  call void @llvm.dbg.value(metadata !1657, i64 0, metadata !1162), !dbg !1658
  %arraydecay = getelementptr inbounds [3 x double]* %P, i64 0, i64 0, !dbg !1659
  %0 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !1659
  %1 = load %"struct.pov::Transform_Struct"** %0, align 8, !dbg !1659, !tbaa !1331
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %arraydecay, double* %IPoint, %"struct.pov::Transform_Struct"* %1) #7, !dbg !1659
  %arrayidx = getelementptr inbounds [3 x double]* %P, i64 0, i64 1, !dbg !1660
  %2 = load double* %arrayidx, align 8, !dbg !1660, !tbaa !1357
  %Height1 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 2, !dbg !1660
  %3 = bitcast %"struct.pov::Object_Struct"** %Height1 to double*, !dbg !1660
  %4 = load double* %3, align 8, !dbg !1660, !tbaa !1357
  %cmp = fcmp ult double %2, %4, !dbg !1660
  br i1 %cmp, label %if.end55, label %land.lhs.true, !dbg !1660

land.lhs.true:                                    ; preds = %entry
  %Height2 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 3, !dbg !1660
  %5 = bitcast %"struct.pov::Texture_Struct"** %Height2 to double*, !dbg !1660
  %6 = load double* %5, align 8, !dbg !1660, !tbaa !1357
  %cmp2 = fcmp ugt double %2, %6, !dbg !1660
  br i1 %cmp2, label %if.end55, label %if.then, !dbg !1660

if.then:                                          ; preds = %land.lhs.true
  %7 = load double* %arraydecay, align 16, !dbg !1661, !tbaa !1357
  %mul = fmul double %7, %7, !dbg !1661
  %arrayidx5 = getelementptr inbounds [3 x double]* %P, i64 0, i64 2, !dbg !1661
  %8 = load double* %arrayidx5, align 16, !dbg !1661, !tbaa !1357
  %mul7 = fmul double %8, %8, !dbg !1661
  %add = fadd double %mul, %mul7, !dbg !1661
  call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !1158), !dbg !1661
  %Radius2 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 5, !dbg !1663
  %9 = bitcast %"struct.pov::Interior_Struct"** %Radius2 to double*, !dbg !1663
  %10 = load double* %9, align 8, !dbg !1663, !tbaa !1357
  tail call void @llvm.dbg.value(metadata !{double %10}, i64 0, metadata !1664), !dbg !1665
  %mul.i = fmul double %10, %10, !dbg !1666
  %cmp8 = fcmp ugt double %add, %mul.i, !dbg !1663
  br i1 %cmp8, label %if.end55, label %for.cond.preheader, !dbg !1663

for.cond.preheader:                               ; preds = %if.then
  %Number = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, !dbg !1668
  %11 = bitcast %"struct.pov::Object_Struct"* %Number to i32*, !dbg !1668
  %12 = load i32* %11, align 4, !dbg !1668, !tbaa !1328
  %cmp1081 = icmp sgt i32 %12, 0, !dbg !1668
  br i1 %cmp1081, label %for.body.lr.ph, label %for.end, !dbg !1668

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %Spline = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !1671
  %13 = bitcast i32* %Spline to %"struct.pov::Sor_Spline_Struct"**, !dbg !1671
  %14 = load %"struct.pov::Sor_Spline_Struct"** %13, align 8, !dbg !1671, !tbaa !1331
  %Entry11 = getelementptr inbounds %"struct.pov::Sor_Spline_Struct"* %14, i64 0, i32 1, !dbg !1671
  %15 = load %"struct.pov::Sor_Spline_Entry_Struct"** %Entry11, align 8, !dbg !1671, !tbaa !1331
  %BCyl = getelementptr inbounds %"struct.pov::Sor_Spline_Struct"* %14, i64 0, i32 2, !dbg !1673
  %16 = load %"struct.pov::BCyl_Struct"** %BCyl, align 8, !dbg !1673, !tbaa !1331
  %entry16 = getelementptr inbounds %"struct.pov::BCyl_Struct"* %16, i64 0, i32 8, !dbg !1673
  %17 = load %"struct.pov::BCyl_Entry_Struct"** %entry16, align 8, !dbg !1673, !tbaa !1331
  %height = getelementptr inbounds %"struct.pov::BCyl_Struct"* %16, i64 0, i32 4, !dbg !1673
  %18 = load double** %height, align 8, !dbg !1673, !tbaa !1331
  br label %for.body, !dbg !1668

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %i.082 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %arrayidx12 = getelementptr inbounds %"struct.pov::Sor_Spline_Entry_Struct"* %15, i64 %indvars.iv, !dbg !1671
  call void @llvm.dbg.value(metadata !{%"struct.pov::Sor_Spline_Entry_Struct"* %arrayidx12}, i64 0, metadata !1162), !dbg !1671
  %h1 = getelementptr inbounds %"struct.pov::BCyl_Entry_Struct"* %17, i64 %indvars.iv, i32 2, !dbg !1673
  %19 = load i16* %h1, align 2, !dbg !1673, !tbaa !1642
  %idxprom18 = sext i16 %19 to i64, !dbg !1673
  %arrayidx21 = getelementptr inbounds double* %18, i64 %idxprom18, !dbg !1673
  %20 = load double* %arrayidx21, align 8, !dbg !1673, !tbaa !1357
  %cmp22 = fcmp ult double %2, %20, !dbg !1673
  br i1 %cmp22, label %for.inc, label %land.lhs.true23, !dbg !1673

land.lhs.true23:                                  ; preds = %for.body
  %h2 = getelementptr inbounds %"struct.pov::BCyl_Entry_Struct"* %17, i64 %indvars.iv, i32 3, !dbg !1673
  %21 = load i16* %h2, align 2, !dbg !1673, !tbaa !1642
  %idxprom30 = sext i16 %21 to i64, !dbg !1673
  %arrayidx34 = getelementptr inbounds double* %18, i64 %idxprom30, !dbg !1673
  %22 = load double* %arrayidx34, align 8, !dbg !1673, !tbaa !1357
  %cmp35 = fcmp ugt double %2, %22, !dbg !1673
  br i1 %cmp35, label %for.inc, label %for.end, !dbg !1673

for.inc:                                          ; preds = %land.lhs.true23, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1668
  %inc = add nsw i32 %i.082, 1, !dbg !1668
  call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !1156), !dbg !1668
  %23 = trunc i64 %indvars.iv.next to i32, !dbg !1668
  %cmp10 = icmp slt i32 %23, %12, !dbg !1668
  br i1 %cmp10, label %for.body, label %for.end, !dbg !1668

for.end:                                          ; preds = %for.inc, %land.lhs.true23, %for.cond.preheader
  %i.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %i.082, %land.lhs.true23 ], [ %inc, %for.inc ]
  %Entry.1 = phi %"struct.pov::Sor_Spline_Entry_Struct"* [ null, %for.cond.preheader ], [ %arrayidx12, %land.lhs.true23 ], [ %arrayidx12, %for.inc ]
  %cmp38 = icmp slt i32 %i.0.lcssa, %12, !dbg !1674
  br i1 %cmp38, label %if.then39, label %if.end55, !dbg !1674

if.then39:                                        ; preds = %for.end
  %A = getelementptr inbounds %"struct.pov::Sor_Spline_Entry_Struct"* %Entry.1, i64 0, i32 0, !dbg !1675
  %24 = load double* %A, align 8, !dbg !1675, !tbaa !1357
  %mul43 = fmul double %2, %24, !dbg !1675
  %B = getelementptr inbounds %"struct.pov::Sor_Spline_Entry_Struct"* %Entry.1, i64 0, i32 1, !dbg !1675
  %25 = load double* %B, align 8, !dbg !1675, !tbaa !1357
  %add44 = fadd double %mul43, %25, !dbg !1675
  %mul45 = fmul double %2, %add44, !dbg !1675
  %C = getelementptr inbounds %"struct.pov::Sor_Spline_Entry_Struct"* %Entry.1, i64 0, i32 2, !dbg !1675
  %26 = load double* %C, align 8, !dbg !1675, !tbaa !1357
  %add46 = fadd double %26, %mul45, !dbg !1675
  %mul47 = fmul double %2, %add46, !dbg !1675
  %D = getelementptr inbounds %"struct.pov::Sor_Spline_Entry_Struct"* %Entry.1, i64 0, i32 3, !dbg !1675
  %27 = load double* %D, align 8, !dbg !1675, !tbaa !1357
  %add48 = fadd double %27, %mul47, !dbg !1675
  call void @llvm.dbg.value(metadata !{double %add48}, i64 0, metadata !1159), !dbg !1675
  %cmp49 = fcmp ugt double %add, %add48, !dbg !1677
  br i1 %cmp49, label %if.end55, label %if.then50, !dbg !1677

if.then50:                                        ; preds = %if.then39
  %28 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !1678
  %29 = load i32* %28, align 4, !dbg !1678, !tbaa !1328
  %and = lshr i32 %29, 2, !dbg !1678
  %and.lobit = and i32 %and, 1, !dbg !1678
  %30 = xor i32 %and.lobit, 1, !dbg !1678
  br label %return, !dbg !1678

if.end55:                                         ; preds = %if.then39, %if.then, %land.lhs.true, %entry, %for.end
  %31 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !1680
  %32 = load i32* %31, align 4, !dbg !1680, !tbaa !1328
  %and58 = and i32 %32, 4, !dbg !1680
  br label %return, !dbg !1680

return:                                           ; preds = %if.end55, %if.then50
  %retval.0 = phi i32 [ %30, %if.then50 ], [ %and58, %if.end55 ]
  ret i32 %retval.0, !dbg !1681
}
