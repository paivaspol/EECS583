define internal void @_ZN3povL11Sor_UVCoordEPdPNS_13Object_StructEPNS_10istk_entryE(double* nocapture %Result, %"struct.pov::Object_Struct"* nocapture %Object, %"struct.pov::istk_entry"* %Inter) #0 {
entry:
  %P = alloca [3 x double], align 16
  call void @llvm.dbg.value(metadata !{double* %Result}, i64 0, metadata !1098), !dbg !1742
  call void @llvm.dbg.value(metadata !{%"struct.pov::Object_Struct"* %Object}, i64 0, metadata !1099), !dbg !1742
  call void @llvm.dbg.value(metadata !{%"struct.pov::istk_entry"* %Inter}, i64 0, metadata !1100), !dbg !1742
  call void @llvm.dbg.declare(metadata !{[3 x double]* %P}, metadata !1105), !dbg !1743
  %arraydecay = getelementptr inbounds [3 x double]* %P, i64 0, i64 0, !dbg !1744
  %arraydecay1 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 1, i64 0, !dbg !1744
  %0 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !1744
  %1 = load %"struct.pov::Transform_Struct"** %0, align 8, !dbg !1744, !tbaa !1331
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %arraydecay, double* %arraydecay1, %"struct.pov::Transform_Struct"* %1) #7, !dbg !1744
  %2 = load double* %arraydecay, align 16, !dbg !1745, !tbaa !1357
  %mul = fmul double %2, %2, !dbg !1745
  %arrayidx3 = getelementptr inbounds [3 x double]* %P, i64 0, i64 2, !dbg !1745
  %3 = load double* %arrayidx3, align 16, !dbg !1745, !tbaa !1357
  %mul5 = fmul double %3, %3, !dbg !1745
  %add = fadd double %mul, %mul5, !dbg !1745
  call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !1101), !dbg !1745
  %cmp = fcmp ogt double %add, 1.000000e-07, !dbg !1746
  br i1 %cmp, label %if.then, label %if.end22, !dbg !1746

if.then:                                          ; preds = %entry
  %call = call double @sqrt(double %add) #9, !dbg !1747
  call void @llvm.dbg.value(metadata !{double %call}, i64 0, metadata !1101), !dbg !1747
  %4 = load double* %arrayidx3, align 16, !dbg !1749, !tbaa !1357
  %cmp7 = fcmp oeq double %4, 0.000000e+00, !dbg !1749
  %5 = load double* %arraydecay, align 16, !dbg !1750, !tbaa !1357
  br i1 %cmp7, label %if.then8, label %if.else12, !dbg !1749

if.then8:                                         ; preds = %if.then
  %cmp10 = fcmp ogt double %5, 0.000000e+00, !dbg !1750
  %. = select i1 %cmp10, double 0.000000e+00, double 0x400921FB54442D18, !dbg !1752
  br label %if.end19, !dbg !1752

if.else12:                                        ; preds = %if.then
  %div = fdiv double %5, %call, !dbg !1753
  %call14 = call double @acos(double %div) #9, !dbg !1753
  call void @llvm.dbg.value(metadata !{double %call14}, i64 0, metadata !1102), !dbg !1753
  %6 = load double* %arrayidx3, align 16, !dbg !1755, !tbaa !1357
  %cmp16 = fcmp olt double %6, 0.000000e+00, !dbg !1755
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !1755

if.then17:                                        ; preds = %if.else12
  %sub = fsub double 0x401921FB54442D18, %call14, !dbg !1756
  call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !1102), !dbg !1756
  br label %if.end19, !dbg !1756

if.end19:                                         ; preds = %if.then8, %if.else12, %if.then17
  %7 = phi double [ %6, %if.then17 ], [ %6, %if.else12 ], [ %4, %if.then8 ]
  %theta.0 = phi double [ %sub, %if.then17 ], [ %call14, %if.else12 ], [ %., %if.then8 ]
  %div20 = fdiv double %theta.0, 0x401921FB54442D18, !dbg !1757
  call void @llvm.dbg.value(metadata !{double %div20}, i64 0, metadata !1102), !dbg !1757
  br label %if.end22, !dbg !1758

if.end22:                                         ; preds = %entry, %if.end19
  %8 = phi double [ %7, %if.end19 ], [ %3, %entry ]
  %theta.1 = phi double [ %div20, %if.end19 ], [ 0.000000e+00, %entry ]
  store double %theta.1, double* %Result, align 8, !dbg !1759, !tbaa !1357
  %i1 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 6, !dbg !1760
  %9 = load i32* %i1, align 4, !dbg !1760, !tbaa !1328
  switch i32 %9, label %sw.epilog [
    i32 3, label %sw.bb
    i32 1, label %sw.bb64
    i32 2, label %sw.bb77
  ], !dbg !1760

sw.bb:                                            ; preds = %if.end22
  %i2 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 7, !dbg !1761
  %10 = load i32* %i2, align 4, !dbg !1761, !tbaa !1328
  %idxprom = sext i32 %10 to i64, !dbg !1761
  %Spline = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !1761
  %11 = bitcast i32* %Spline to %"struct.pov::Sor_Spline_Struct"**, !dbg !1761
  %12 = load %"struct.pov::Sor_Spline_Struct"** %11, align 8, !dbg !1761, !tbaa !1331
  %BCyl = getelementptr inbounds %"struct.pov::Sor_Spline_Struct"* %12, i64 0, i32 2, !dbg !1761
  %13 = load %"struct.pov::BCyl_Struct"** %BCyl, align 8, !dbg !1761, !tbaa !1331
  %entry24 = getelementptr inbounds %"struct.pov::BCyl_Struct"* %13, i64 0, i32 8, !dbg !1761
  %14 = load %"struct.pov::BCyl_Entry_Struct"** %entry24, align 8, !dbg !1761, !tbaa !1331
  %h2 = getelementptr inbounds %"struct.pov::BCyl_Entry_Struct"* %14, i64 %idxprom, i32 3, !dbg !1761
  %15 = load i16* %h2, align 2, !dbg !1761, !tbaa !1642
  %idxprom26 = sext i16 %15 to i64, !dbg !1761
  %height = getelementptr inbounds %"struct.pov::BCyl_Struct"* %13, i64 0, i32 4, !dbg !1761
  %16 = load double** %height, align 8, !dbg !1761, !tbaa !1331
  %arrayidx29 = getelementptr inbounds double* %16, i64 %idxprom26, !dbg !1761
  %17 = load double* %arrayidx29, align 8, !dbg !1761, !tbaa !1357
  %h1 = getelementptr inbounds %"struct.pov::BCyl_Entry_Struct"* %14, i64 %idxprom, i32 2, !dbg !1761
  %18 = load i16* %h1, align 2, !dbg !1761, !tbaa !1642
  %idxprom36 = sext i16 %18 to i64, !dbg !1761
  %arrayidx40 = getelementptr inbounds double* %16, i64 %idxprom36, !dbg !1761
  %19 = load double* %arrayidx40, align 8, !dbg !1761, !tbaa !1357
  %sub41 = fsub double %17, %19, !dbg !1761
  call void @llvm.dbg.value(metadata !{double %sub41}, i64 0, metadata !1103), !dbg !1761
  %Number = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, !dbg !1763
  %20 = bitcast %"struct.pov::Object_Struct"* %Number to i32*, !dbg !1763
  %21 = load i32* %20, align 4, !dbg !1763, !tbaa !1328
  %conv = sitofp i32 %21 to double, !dbg !1763
  %div42 = fdiv double 1.000000e+00, %conv, !dbg !1763
  call void @llvm.dbg.value(metadata !{double %div42}, i64 0, metadata !1104), !dbg !1763
  %arrayidx43 = getelementptr inbounds [3 x double]* %P, i64 0, i64 1, !dbg !1764
  %22 = load double* %arrayidx43, align 8, !dbg !1764, !tbaa !1357
  %sub56 = fsub double %22, %19, !dbg !1764
  %div57 = fdiv double %sub56, %sub41, !dbg !1764
  %mul58 = fmul double %div42, %div57, !dbg !1764
  %conv60 = sitofp i32 %10 to double, !dbg !1764
  %mul61 = fmul double %conv60, %div42, !dbg !1764
  %add62 = fadd double %mul61, %mul58, !dbg !1764
  %arrayidx63 = getelementptr inbounds double* %Result, i64 1, !dbg !1764
  store double %add62, double* %arrayidx63, align 8, !dbg !1764, !tbaa !1357
  br label %sw.epilog, !dbg !1765

sw.bb64:                                          ; preds = %if.end22
  %23 = load double* %arraydecay, align 16, !dbg !1766, !tbaa !1357
  %mul67 = fmul double %23, %23, !dbg !1766
  %mul70 = fmul double %8, %8, !dbg !1766
  %add71 = fadd double %mul67, %mul70, !dbg !1766
  %call72 = call double @sqrt(double %add71) #9, !dbg !1766
  %Base_Radius_Squared = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 6, !dbg !1766
  %24 = bitcast %"struct.pov::Object_Struct"** %Base_Radius_Squared to double*, !dbg !1766
  %25 = load double* %24, align 8, !dbg !1766, !tbaa !1357
  %call73 = call double @sqrt(double %25) #9, !dbg !1766
  %div74 = fdiv double %call72, %call73, !dbg !1766
  %sub75 = fadd double %div74, -1.000000e+00, !dbg !1766
  %arrayidx76 = getelementptr inbounds double* %Result, i64 1, !dbg !1766
  store double %sub75, double* %arrayidx76, align 8, !dbg !1766, !tbaa !1357
  br label %sw.epilog, !dbg !1767

sw.bb77:                                          ; preds = %if.end22
  %26 = load double* %arraydecay, align 16, !dbg !1768, !tbaa !1357
  %mul80 = fmul double %26, %26, !dbg !1768
  %mul83 = fmul double %8, %8, !dbg !1768
  %add84 = fadd double %mul80, %mul83, !dbg !1768
  %call85 = call double @sqrt(double %add84) #9, !dbg !1768
  %sub86 = fsub double -0.000000e+00, %call85, !dbg !1768
  %Cap_Radius_Squared = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 7, !dbg !1768
  %27 = bitcast %"struct.pov::Object_Struct"** %Cap_Radius_Squared to double*, !dbg !1768
  %28 = load double* %27, align 8, !dbg !1768, !tbaa !1357
  %call87 = call double @sqrt(double %28) #9, !dbg !1768
  %div88 = fdiv double %sub86, %call87, !dbg !1768
  %add89 = fadd double %div88, 2.000000e+00, !dbg !1768
  %arrayidx90 = getelementptr inbounds double* %Result, i64 1, !dbg !1768
  store double %add89, double* %arrayidx90, align 8, !dbg !1768, !tbaa !1357
  br label %sw.epilog, !dbg !1769

sw.epilog:                                        ; preds = %if.end22, %sw.bb77, %sw.bb64, %sw.bb
  ret void, !dbg !1770
}
