define internal fastcc i32 @_ZN3povL11solve_cubicEPdS0_(double* nocapture readonly %x, double* nocapture %y) #0 {
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !298, metadata !653), !dbg !1207
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !299, metadata !653), !dbg !1208
  %1 = load double* %x, align 8, !dbg !1209, !tbaa !676
  tail call void @llvm.dbg.value(metadata double %1, i64 0, metadata !309, metadata !653), !dbg !1210
  %2 = fcmp oeq double %1, 0.000000e+00, !dbg !1211
  br i1 %2, label %3, label %6, !dbg !1213

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds double* %x, i64 1, !dbg !1214
  %5 = tail call fastcc i32 @_ZN3povL15solve_quadraticEPdS0_(double* %4, double* %y) #6, !dbg !1216
  br label %72, !dbg !1217

; <label>:6                                       ; preds = %0
  %7 = fcmp une double %1, 1.000000e+00, !dbg !1218
  %8 = getelementptr inbounds double* %x, i64 1, !dbg !1221
  %9 = bitcast double* %8 to <2 x double>*, !dbg !1221
  %10 = load <2 x double>* %9, align 8, !dbg !1221
  %11 = getelementptr inbounds double* %x, i64 3
  %12 = load double* %11, align 8
  br i1 %7, label %13, label %18, !dbg !1223

; <label>:13                                      ; preds = %6
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !310, metadata !653), !dbg !1224
  %14 = insertelement <2 x double> undef, double %1, i32 0, !dbg !1225
  %15 = insertelement <2 x double> %14, double %1, i32 1, !dbg !1225
  %16 = fdiv <2 x double> %10, %15, !dbg !1225
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !311, metadata !653), !dbg !1226
  %17 = fdiv double %12, %1, !dbg !1227
  tail call void @llvm.dbg.value(metadata double %17, i64 0, metadata !312, metadata !653), !dbg !1228
  br label %18, !dbg !1229

; <label>:18                                      ; preds = %6, %13
  %a3.0 = phi double [ %17, %13 ], [ %12, %6 ]
  %19 = phi <2 x double> [ %16, %13 ], [ %10, %6 ]
  %20 = extractelement <2 x double> %19, i32 0, !dbg !1230
  %21 = fmul double %20, %20, !dbg !1230
  tail call void @llvm.dbg.value(metadata double %21, i64 0, metadata !308, metadata !653), !dbg !1231
  %22 = extractelement <2 x double> %19, i32 1, !dbg !1232
  %23 = fmul double %22, 3.000000e+00, !dbg !1232
  %24 = fsub double %21, %23, !dbg !1233
  %25 = fdiv double %24, 9.000000e+00, !dbg !1234
  tail call void @llvm.dbg.value(metadata double %25, i64 0, metadata !300, metadata !653), !dbg !1235
  %26 = fmul double %22, 4.500000e+00, !dbg !1236
  %27 = fsub double %21, %26, !dbg !1237
  %28 = fmul double %20, %27, !dbg !1238
  %29 = fmul double %a3.0, 1.350000e+01, !dbg !1239
  %30 = fadd double %29, %28, !dbg !1240
  %31 = fdiv double %30, 2.700000e+01, !dbg !1241
  tail call void @llvm.dbg.value(metadata double %31, i64 0, metadata !301, metadata !653), !dbg !1242
  %32 = fmul double %25, %25, !dbg !1243
  %33 = fmul double %25, %32, !dbg !1244
  tail call void @llvm.dbg.value(metadata double %33, i64 0, metadata !302, metadata !653), !dbg !1245
  %34 = fmul double %31, %31, !dbg !1246
  tail call void @llvm.dbg.value(metadata double %34, i64 0, metadata !303, metadata !653), !dbg !1247
  %35 = fsub double %33, %34, !dbg !1248
  tail call void @llvm.dbg.value(metadata double %35, i64 0, metadata !305, metadata !653), !dbg !1249
  %36 = fdiv double %20, 3.000000e+00, !dbg !1250
  tail call void @llvm.dbg.value(metadata double %36, i64 0, metadata !306, metadata !653), !dbg !1251
  %37 = fcmp ult double %35, 0.000000e+00, !dbg !1252
  br i1 %37, label %60, label %38, !dbg !1254

; <label>:38                                      ; preds = %18
  %39 = tail call double @sqrt(double %33) #5, !dbg !1255
  %40 = fdiv double %31, %39, !dbg !1257
  tail call void @llvm.dbg.value(metadata double %40, i64 0, metadata !305, metadata !653), !dbg !1249
  %41 = tail call double @acos(double %40) #5, !dbg !1258
  %42 = fdiv double %41, 3.000000e+00, !dbg !1259
  tail call void @llvm.dbg.value(metadata double %42, i64 0, metadata !307, metadata !653), !dbg !1260
  %43 = tail call double @sqrt(double %25) #5, !dbg !1261
  %44 = fmul double %43, -2.000000e+00, !dbg !1262
  tail call void @llvm.dbg.value(metadata double %44, i64 0, metadata !304, metadata !653), !dbg !1263
  %45 = tail call double @cos(double %42) #5, !dbg !1264
  %46 = fmul double %44, %45, !dbg !1265
  %47 = fsub double %46, %36, !dbg !1266
  store double %47, double* %y, align 8, !dbg !1267, !tbaa !676
  %48 = getelementptr inbounds double* %y, i64 1, !dbg !1268
  %49 = insertelement <2 x double> undef, double %42, i32 0, !dbg !1269
  %50 = insertelement <2 x double> %49, double %42, i32 1, !dbg !1269
  %51 = fadd <2 x double> %50, <double 0x4000C152382D7366, double 0x4010C152382D7366>, !dbg !1269
  %52 = call <2 x double> @llvm.cos.v2f64(<2 x double> %51), !dbg !1270
  %53 = insertelement <2 x double> undef, double %44, i32 0, !dbg !1271
  %54 = insertelement <2 x double> %53, double %44, i32 1, !dbg !1271
  %55 = fmul <2 x double> %54, %52, !dbg !1271
  %56 = insertelement <2 x double> undef, double %36, i32 0, !dbg !1272
  %57 = insertelement <2 x double> %56, double %36, i32 1, !dbg !1272
  %58 = fsub <2 x double> %55, %57, !dbg !1272
  %59 = bitcast double* %48 to <2 x double>*, !dbg !1273
  store <2 x double> %58, <2 x double>* %59, align 8, !dbg !1273, !tbaa !676
  br label %72, !dbg !1274

; <label>:60                                      ; preds = %18
  %61 = fsub double %34, %33, !dbg !1275
  %62 = tail call double @sqrt(double %61) #5, !dbg !1277
  %63 = tail call double @fabs(double %31) #5, !dbg !1278
  %64 = fadd double %62, %63, !dbg !1279
  %65 = tail call double @llvm.pow.f64(double %64, double 0x3FD5555555555555), !dbg !1280
  tail call void @llvm.dbg.value(metadata double %65, i64 0, metadata !304, metadata !653), !dbg !1263
  %66 = fcmp olt double %31, 0.000000e+00, !dbg !1281
  %67 = fdiv double %25, %65, !dbg !1283
  %68 = fadd double %65, %67, !dbg !1285
  br i1 %66, label %71, label %69, !dbg !1286

; <label>:69                                      ; preds = %60
  %70 = fsub double -0.000000e+00, %68, !dbg !1287
  br label %71

; <label>:71                                      ; preds = %60, %69
  %.pn = phi double [ %70, %69 ], [ %68, %60 ]
  %storemerge = fsub double %.pn, %36, !dbg !1289
  store double %storemerge, double* %y, align 8, !dbg !1290, !tbaa !676
  br label %72, !dbg !1291

; <label>:72                                      ; preds = %71, %38, %3
  %.0 = phi i32 [ %5, %3 ], [ 3, %38 ], [ 1, %71 ]
  ret i32 %.0, !dbg !1292
}
