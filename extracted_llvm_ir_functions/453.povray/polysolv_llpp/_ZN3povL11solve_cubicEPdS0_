define internal fastcc i32 @_ZN3povL11solve_cubicEPdS0_(double* nocapture %x, double* nocapture %y) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %x}, i64 0, metadata !192), !dbg !715
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !193), !dbg !715
  %0 = load double* %x, align 8, !dbg !716, !tbaa !422
  tail call void @llvm.dbg.value(metadata !{double %0}, i64 0, metadata !203), !dbg !716
  %cmp = fcmp oeq double %0, 0.000000e+00, !dbg !717
  br i1 %cmp, label %if.then, label %if.else, !dbg !717

if.then:                                          ; preds = %entry
  %arrayidx1 = getelementptr inbounds double* %x, i64 1, !dbg !718
  %call = tail call fastcc i32 @_ZN3povL15solve_quadraticEPdS0_(double* %arrayidx1, double* %y) #7, !dbg !718
  br label %return, !dbg !718

if.else:                                          ; preds = %entry
  %cmp2 = fcmp une double %0, 1.000000e+00, !dbg !720
  %arrayidx4 = getelementptr inbounds double* %x, i64 1, !dbg !722
  %1 = load double* %arrayidx4, align 8, !dbg !722, !tbaa !422
  br i1 %cmp2, label %if.then3, label %if.else9, !dbg !720

if.then3:                                         ; preds = %if.else
  %div = fdiv double %1, %0, !dbg !722
  tail call void @llvm.dbg.value(metadata !{double %div}, i64 0, metadata !204), !dbg !722
  %arrayidx5 = getelementptr inbounds double* %x, i64 2, !dbg !724
  %2 = load double* %arrayidx5, align 8, !dbg !724, !tbaa !422
  %div6 = fdiv double %2, %0, !dbg !724
  tail call void @llvm.dbg.value(metadata !{double %div6}, i64 0, metadata !205), !dbg !724
  %arrayidx7 = getelementptr inbounds double* %x, i64 3, !dbg !725
  %3 = load double* %arrayidx7, align 8, !dbg !725, !tbaa !422
  %div8 = fdiv double %3, %0, !dbg !725
  tail call void @llvm.dbg.value(metadata !{double %div8}, i64 0, metadata !206), !dbg !725
  br label %if.end13, !dbg !726

if.else9:                                         ; preds = %if.else
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !204), !dbg !727
  %arrayidx11 = getelementptr inbounds double* %x, i64 2, !dbg !729
  %4 = load double* %arrayidx11, align 8, !dbg !729, !tbaa !422
  tail call void @llvm.dbg.value(metadata !{double %4}, i64 0, metadata !205), !dbg !729
  %arrayidx12 = getelementptr inbounds double* %x, i64 3, !dbg !730
  %5 = load double* %arrayidx12, align 8, !dbg !730, !tbaa !422
  tail call void @llvm.dbg.value(metadata !{double %5}, i64 0, metadata !206), !dbg !730
  br label %if.end13

if.end13:                                         ; preds = %if.then3, %if.else9
  %a1.0 = phi double [ %div, %if.then3 ], [ %1, %if.else9 ]
  %a2.0 = phi double [ %div6, %if.then3 ], [ %4, %if.else9 ]
  %a3.0 = phi double [ %div8, %if.then3 ], [ %5, %if.else9 ]
  %mul = fmul double %a1.0, %a1.0, !dbg !731
  tail call void @llvm.dbg.value(metadata !{double %mul}, i64 0, metadata !202), !dbg !731
  %mul14 = fmul double %a2.0, 3.000000e+00, !dbg !732
  %sub = fsub double %mul, %mul14, !dbg !732
  %div15 = fdiv double %sub, 9.000000e+00, !dbg !732
  tail call void @llvm.dbg.value(metadata !{double %div15}, i64 0, metadata !194), !dbg !732
  %mul16 = fmul double %a2.0, 4.500000e+00, !dbg !733
  %sub17 = fsub double %mul, %mul16, !dbg !733
  %mul18 = fmul double %a1.0, %sub17, !dbg !733
  %mul19 = fmul double %a3.0, 1.350000e+01, !dbg !733
  %add = fadd double %mul19, %mul18, !dbg !733
  %div20 = fdiv double %add, 2.700000e+01, !dbg !733
  tail call void @llvm.dbg.value(metadata !{double %div20}, i64 0, metadata !195), !dbg !733
  %mul21 = fmul double %div15, %div15, !dbg !734
  %mul22 = fmul double %div15, %mul21, !dbg !734
  tail call void @llvm.dbg.value(metadata !{double %mul22}, i64 0, metadata !196), !dbg !734
  %mul23 = fmul double %div20, %div20, !dbg !735
  tail call void @llvm.dbg.value(metadata !{double %mul23}, i64 0, metadata !197), !dbg !735
  %sub24 = fsub double %mul22, %mul23, !dbg !736
  tail call void @llvm.dbg.value(metadata !{double %sub24}, i64 0, metadata !199), !dbg !736
  %div25 = fdiv double %a1.0, 3.000000e+00, !dbg !737
  tail call void @llvm.dbg.value(metadata !{double %div25}, i64 0, metadata !200), !dbg !737
  %cmp26 = fcmp ult double %sub24, 0.000000e+00, !dbg !738
  br i1 %cmp26, label %if.else48, label %if.then27, !dbg !738

if.then27:                                        ; preds = %if.end13
  %call28 = tail call double @sqrt(double %mul22) #8, !dbg !739
  %div29 = fdiv double %div20, %call28, !dbg !739
  tail call void @llvm.dbg.value(metadata !{double %div29}, i64 0, metadata !199), !dbg !739
  %call30 = tail call double @acos(double %div29) #8, !dbg !741
  %div31 = fdiv double %call30, 3.000000e+00, !dbg !741
  tail call void @llvm.dbg.value(metadata !{double %div31}, i64 0, metadata !201), !dbg !741
  %call32 = tail call double @sqrt(double %div15) #8, !dbg !742
  %mul33 = fmul double %call32, -2.000000e+00, !dbg !742
  tail call void @llvm.dbg.value(metadata !{double %mul33}, i64 0, metadata !198), !dbg !742
  %call34 = tail call double @cos(double %div31) #8, !dbg !743
  %mul35 = fmul double %mul33, %call34, !dbg !743
  %sub36 = fsub double %mul35, %div25, !dbg !743
  store double %sub36, double* %y, align 8, !dbg !743, !tbaa !422
  %add38 = fadd double %div31, 0x4000C152382D7366, !dbg !744
  %call39 = tail call double @cos(double %add38) #8, !dbg !744
  %mul40 = fmul double %mul33, %call39, !dbg !744
  %sub41 = fsub double %mul40, %div25, !dbg !744
  %arrayidx42 = getelementptr inbounds double* %y, i64 1, !dbg !744
  store double %sub41, double* %arrayidx42, align 8, !dbg !744, !tbaa !422
  %add43 = fadd double %div31, 0x4010C152382D7366, !dbg !745
  %call44 = tail call double @cos(double %add43) #8, !dbg !745
  %mul45 = fmul double %mul33, %call44, !dbg !745
  %sub46 = fsub double %mul45, %div25, !dbg !745
  %arrayidx47 = getelementptr inbounds double* %y, i64 2, !dbg !745
  store double %sub46, double* %arrayidx47, align 8, !dbg !745, !tbaa !422
  br label %return, !dbg !746

if.else48:                                        ; preds = %if.end13
  %sub49 = fsub double %mul23, %mul22, !dbg !747
  %call50 = tail call double @sqrt(double %sub49) #8, !dbg !747
  %call51 = tail call double @fabs(double %div20) #6, !dbg !747
  %add52 = fadd double %call50, %call51, !dbg !747
  %call53 = tail call double @pow(double %add52, double 0x3FD5555555555555) #8, !dbg !747
  tail call void @llvm.dbg.value(metadata !{double %call53}, i64 0, metadata !198), !dbg !747
  %cmp54 = fcmp olt double %div20, 0.000000e+00, !dbg !749
  %div56 = fdiv double %div15, %call53, !dbg !750
  %add57 = fadd double %call53, %div56, !dbg !750
  br i1 %cmp54, label %if.end66, label %if.else60, !dbg !749

if.else60:                                        ; preds = %if.else48
  %sub63 = fsub double -0.000000e+00, %add57, !dbg !752
  br label %if.end66

if.end66:                                         ; preds = %if.else48, %if.else60
  %sub63.pn = phi double [ %sub63, %if.else60 ], [ %add57, %if.else48 ]
  %storemerge = fsub double %sub63.pn, %div25, !dbg !752
  store double %storemerge, double* %y, align 8, !dbg !750, !tbaa !422
  br label %return, !dbg !754

return:                                           ; preds = %if.end66, %if.then27, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ 3, %if.then27 ], [ 1, %if.end66 ]
  ret i32 %retval.0, !dbg !755
}
