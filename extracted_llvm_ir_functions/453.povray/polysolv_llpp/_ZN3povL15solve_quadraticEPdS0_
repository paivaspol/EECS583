define internal fastcc i32 @_ZN3povL15solve_quadraticEPdS0_(double* nocapture readonly %x, double* nocapture %y) #0 {
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !186, metadata !653), !dbg !949
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !187, metadata !653), !dbg !950
  %1 = load double* %x, align 8, !dbg !951, !tbaa !676
  tail call void @llvm.dbg.value(metadata double %1, i64 0, metadata !190, metadata !653), !dbg !952
  %2 = getelementptr inbounds double* %x, i64 1, !dbg !953
  %3 = load double* %2, align 8, !dbg !953, !tbaa !676
  %4 = fsub double -0.000000e+00, %3, !dbg !954
  tail call void @llvm.dbg.value(metadata double %4, i64 0, metadata !191, metadata !653), !dbg !955
  %5 = getelementptr inbounds double* %x, i64 2, !dbg !956
  %6 = load double* %5, align 8, !dbg !956, !tbaa !676
  tail call void @llvm.dbg.value(metadata double %6, i64 0, metadata !192, metadata !653), !dbg !957
  %7 = fcmp oeq double %1, 0.000000e+00, !dbg !958
  br i1 %7, label %8, label %12, !dbg !960

; <label>:8                                       ; preds = %0
  %9 = fcmp oeq double %3, -0.000000e+00, !dbg !961
  br i1 %9, label %36, label %10, !dbg !964

; <label>:10                                      ; preds = %8
  %11 = fdiv double %6, %4, !dbg !965
  store double %11, double* %y, align 8, !dbg !966, !tbaa !676
  br label %36, !dbg !967

; <label>:12                                      ; preds = %0
  %13 = fmul double %3, %3, !dbg !968
  %14 = fmul double %1, 4.000000e+00, !dbg !969
  %15 = fmul double %14, %6, !dbg !970
  %16 = fsub double %13, %15, !dbg !971
  tail call void @llvm.dbg.value(metadata double %16, i64 0, metadata !188, metadata !653), !dbg !972
  %17 = fcmp ogt double %16, -1.000000e-10, !dbg !973
  %18 = fcmp olt double %16, 1.000000e-10, !dbg !975
  %or.cond = and i1 %17, %18, !dbg !976
  br i1 %or.cond, label %19, label %22, !dbg !976

; <label>:19                                      ; preds = %12
  %20 = fmul double %3, -5.000000e-01, !dbg !977
  %21 = fdiv double %20, %1, !dbg !979
  store double %21, double* %y, align 8, !dbg !980, !tbaa !676
  br label %36, !dbg !981

; <label>:22                                      ; preds = %12
  %23 = fcmp olt double %16, 0.000000e+00, !dbg !982
  br i1 %23, label %36, label %24, !dbg !985

; <label>:24                                      ; preds = %22
  %25 = tail call double @sqrt(double %16) #5, !dbg !986
  tail call void @llvm.dbg.value(metadata double %25, i64 0, metadata !188, metadata !653), !dbg !972
  %26 = fmul double %1, 2.000000e+00, !dbg !987
  tail call void @llvm.dbg.value(metadata double %26, i64 0, metadata !189, metadata !653), !dbg !988
  %27 = insertelement <2 x double> undef, double %25, i32 0, !dbg !989
  %28 = insertelement <2 x double> %27, double %4, i32 1, !dbg !989
  %29 = insertelement <2 x double> undef, double %3, i32 0, !dbg !989
  %30 = insertelement <2 x double> %29, double %25, i32 1, !dbg !989
  %31 = fsub <2 x double> %28, %30, !dbg !989
  %32 = insertelement <2 x double> undef, double %26, i32 0, !dbg !990
  %33 = insertelement <2 x double> %32, double %26, i32 1, !dbg !990
  %34 = fdiv <2 x double> %31, %33, !dbg !990
  %35 = bitcast double* %y to <2 x double>*, !dbg !991
  store <2 x double> %34, <2 x double>* %35, align 8, !dbg !991, !tbaa !676
  br label %36, !dbg !992

; <label>:36                                      ; preds = %22, %8, %24, %19, %10
  %.0 = phi i32 [ 1, %10 ], [ 1, %19 ], [ 2, %24 ], [ 0, %8 ], [ 0, %22 ]
  ret i32 %.0, !dbg !993
}
