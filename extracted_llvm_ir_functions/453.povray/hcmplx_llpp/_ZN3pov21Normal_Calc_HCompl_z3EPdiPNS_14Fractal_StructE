define void @_ZN3pov21Normal_Calc_HCompl_z3EPdiPNS_14Fractal_StructE(double* nocapture %Result, i32 %N_Max, %"struct.pov::Fractal_Struct"* nocapture readnone) #0 {
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !924, metadata !1534), !dbg !2022
  tail call void @llvm.dbg.value(metadata i32 %N_Max, i64 0, metadata !925, metadata !1534), !dbg !2023
  tail call void @llvm.dbg.value(metadata %"struct.pov::Fractal_Struct"* %0, i64 0, metadata !926, metadata !1534), !dbg !2024
  %2 = load double** @_ZN3pov2SxE, align 8, !dbg !2025, !tbaa !1543
  %3 = load double* %2, align 8, !dbg !2025, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %3, i64 0, metadata !932, metadata !1534), !dbg !2026
  %4 = load double** @_ZN3pov2SyE, align 8, !dbg !2027, !tbaa !1543
  %5 = load double* %4, align 8, !dbg !2027, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %5, i64 0, metadata !933, metadata !1534), !dbg !2028
  %6 = load double** @_ZN3pov2SzE, align 8, !dbg !2029, !tbaa !1543
  %7 = load double* %6, align 8, !dbg !2029, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %7, i64 0, metadata !934, metadata !1534), !dbg !2030
  %8 = load double** @_ZN3pov2SwE, align 8, !dbg !2031, !tbaa !1543
  %9 = load double* %8, align 8, !dbg !2031, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %9, i64 0, metadata !935, metadata !1534), !dbg !2032
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !931, metadata !1534), !dbg !2033
  %10 = icmp sgt i32 %N_Max, 1, !dbg !2034
  br i1 %10, label %.lr.ph, label %._crit_edge, !dbg !2037

.lr.ph:                                           ; preds = %1
  %11 = add i32 %N_Max, -1, !dbg !2037
  br label %12, !dbg !2037

; <label>:12                                      ; preds = %12, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %12 ]
  %x.04 = phi double [ %3, %.lr.ph ], [ %27, %12 ]
  %y.03 = phi double [ %5, %.lr.ph ], [ %34, %12 ]
  %z.02 = phi double [ %7, %.lr.ph ], [ %41, %12 ]
  %w.01 = phi double [ %9, %.lr.ph ], [ %48, %12 ]
  %13 = getelementptr inbounds double* %2, i64 %indvars.iv, !dbg !2038
  %14 = load double* %13, align 8, !dbg !2038, !tbaa !1538
  %15 = fmul double %x.04, %14, !dbg !2038
  %16 = getelementptr inbounds double* %4, i64 %indvars.iv, !dbg !2038
  %17 = load double* %16, align 8, !dbg !2038, !tbaa !1538
  %18 = fmul double %y.03, %17, !dbg !2038
  %19 = fsub double %15, %18, !dbg !2038
  %20 = getelementptr inbounds double* %6, i64 %indvars.iv, !dbg !2038
  %21 = load double* %20, align 8, !dbg !2038, !tbaa !1538
  %22 = fmul double %z.02, %21, !dbg !2038
  %23 = fsub double %19, %22, !dbg !2038
  %24 = getelementptr inbounds double* %8, i64 %indvars.iv, !dbg !2038
  %25 = load double* %24, align 8, !dbg !2038, !tbaa !1538
  %26 = fmul double %w.01, %25, !dbg !2038
  %27 = fadd double %23, %26, !dbg !2038
  tail call void @llvm.dbg.value(metadata double %27, i64 0, metadata !936, metadata !1534), !dbg !2040
  %28 = fmul double %x.04, %17, !dbg !2038
  %29 = fmul double %y.03, %14, !dbg !2038
  %30 = fadd double %29, %28, !dbg !2038
  %31 = fmul double %z.02, %25, !dbg !2038
  %32 = fsub double %30, %31, !dbg !2038
  %33 = fmul double %w.01, %21, !dbg !2038
  %34 = fsub double %32, %33, !dbg !2038
  tail call void @llvm.dbg.value(metadata double %34, i64 0, metadata !937, metadata !1534), !dbg !2041
  %35 = fmul double %x.04, %21, !dbg !2038
  %36 = fmul double %y.03, %25, !dbg !2038
  %37 = fsub double %35, %36, !dbg !2038
  %38 = fmul double %z.02, %14, !dbg !2038
  %39 = fadd double %38, %37, !dbg !2038
  %40 = fmul double %w.01, %17, !dbg !2038
  %41 = fsub double %39, %40, !dbg !2038
  tail call void @llvm.dbg.value(metadata double %41, i64 0, metadata !938, metadata !1534), !dbg !2042
  %42 = fmul double %x.04, %25, !dbg !2038
  %43 = fmul double %y.03, %21, !dbg !2038
  %44 = fadd double %43, %42, !dbg !2038
  %45 = fmul double %z.02, %17, !dbg !2038
  %46 = fadd double %45, %44, !dbg !2038
  %47 = fmul double %w.01, %14, !dbg !2038
  %48 = fadd double %47, %46, !dbg !2038
  tail call void @llvm.dbg.value(metadata double %48, i64 0, metadata !939, metadata !1534), !dbg !2043
  tail call void @llvm.dbg.value(metadata double %27, i64 0, metadata !932, metadata !1534), !dbg !2026
  tail call void @llvm.dbg.value(metadata double %34, i64 0, metadata !933, metadata !1534), !dbg !2028
  tail call void @llvm.dbg.value(metadata double %41, i64 0, metadata !934, metadata !1534), !dbg !2030
  tail call void @llvm.dbg.value(metadata double %48, i64 0, metadata !935, metadata !1534), !dbg !2032
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2037
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !2037
  %exitcond = icmp eq i32 %lftr.wideiv, %11, !dbg !2037
  br i1 %exitcond, label %._crit_edge, label %12, !dbg !2037

._crit_edge:                                      ; preds = %12, %1
  %x.0.lcssa = phi double [ %3, %1 ], [ %27, %12 ]
  %y.0.lcssa = phi double [ %5, %1 ], [ %34, %12 ]
  %z.0.lcssa = phi double [ %7, %1 ], [ %41, %12 ]
  %w.0.lcssa = phi double [ %9, %1 ], [ %48, %12 ]
  %49 = sext i32 %N_Max to i64, !dbg !2044
  %50 = getelementptr inbounds double* %2, i64 %49, !dbg !2044
  %51 = load double* %50, align 8, !dbg !2044, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %51, i64 0, metadata !927, metadata !1534), !dbg !2045
  %52 = getelementptr inbounds double* %4, i64 %49, !dbg !2046
  %53 = load double* %52, align 8, !dbg !2046, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %53, i64 0, metadata !928, metadata !1534), !dbg !2047
  %54 = getelementptr inbounds double* %6, i64 %49, !dbg !2048
  %55 = load double* %54, align 8, !dbg !2048, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %55, i64 0, metadata !929, metadata !1534), !dbg !2049
  %56 = getelementptr inbounds double* %8, i64 %49, !dbg !2050
  %57 = load double* %56, align 8, !dbg !2050, !tbaa !1538
  tail call void @llvm.dbg.value(metadata double %57, i64 0, metadata !930, metadata !1534), !dbg !2051
  %58 = fmul double %x.0.lcssa, %51, !dbg !2052
  %59 = fmul double %y.0.lcssa, %53, !dbg !2053
  %60 = fadd double %58, %59, !dbg !2054
  %61 = fmul double %z.0.lcssa, %55, !dbg !2055
  %62 = fadd double %60, %61, !dbg !2056
  %63 = fmul double %w.0.lcssa, %57, !dbg !2057
  %64 = fadd double %62, %63, !dbg !2058
  store double %64, double* %Result, align 8, !dbg !2059, !tbaa !1538
  %65 = fmul double %y.0.lcssa, %51, !dbg !2060
  %66 = fmul double %x.0.lcssa, %53, !dbg !2061
  %67 = fsub double %66, %65, !dbg !2062
  %68 = fmul double %w.0.lcssa, %55, !dbg !2063
  %69 = fsub double %67, %68, !dbg !2064
  %70 = fmul double %z.0.lcssa, %57, !dbg !2065
  %71 = fadd double %69, %70, !dbg !2066
  %72 = getelementptr inbounds double* %Result, i64 1, !dbg !2067
  store double %71, double* %72, align 8, !dbg !2068, !tbaa !1538
  %73 = fmul double %z.0.lcssa, %51, !dbg !2069
  %74 = fsub double -0.000000e+00, %73, !dbg !2069
  %75 = fmul double %w.0.lcssa, %53, !dbg !2070
  %76 = fsub double %74, %75, !dbg !2071
  %77 = fmul double %x.0.lcssa, %55, !dbg !2072
  %78 = fadd double %76, %77, !dbg !2073
  %79 = fmul double %y.0.lcssa, %57, !dbg !2074
  %80 = fadd double %78, %79, !dbg !2075
  %81 = getelementptr inbounds double* %Result, i64 2, !dbg !2076
  store double %80, double* %81, align 8, !dbg !2077, !tbaa !1538
  ret void, !dbg !2078
}
