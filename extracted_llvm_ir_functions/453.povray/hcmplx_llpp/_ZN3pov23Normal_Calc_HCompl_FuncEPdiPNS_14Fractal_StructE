define void @_ZN3pov23Normal_Calc_HCompl_FuncEPdiPNS_14Fractal_StructE(double* nocapture %Result, i32 %N_Max, %"struct.pov::Fractal_Struct"* nocapture %fractal) #2 {
entry:
  %xx = alloca double, align 8
  %yy = alloca double, align 8
  %zz = alloca double, align 8
  %ww = alloca double, align 8
  call void @llvm.dbg.value(metadata !{double* %Result}, i64 0, metadata !1055), !dbg !1658
  call void @llvm.dbg.value(metadata !{i32 %N_Max}, i64 0, metadata !1056), !dbg !1658
  call void @llvm.dbg.value(metadata !{%"struct.pov::Fractal_Struct"* %fractal}, i64 0, metadata !1057), !dbg !1658
  call void @llvm.dbg.declare(metadata !{double* %xx}, metadata !1067), !dbg !1659
  call void @llvm.dbg.declare(metadata !{double* %yy}, metadata !1068), !dbg !1659
  call void @llvm.dbg.declare(metadata !{double* %zz}, metadata !1069), !dbg !1659
  call void @llvm.dbg.declare(metadata !{double* %ww}, metadata !1070), !dbg !1659
  %0 = load double** @_ZN3pov2SxE, align 8, !dbg !1660, !tbaa !1317
  %1 = load double* %0, align 8, !dbg !1660, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !1063), !dbg !1660
  %2 = load double** @_ZN3pov2SyE, align 8, !dbg !1661, !tbaa !1317
  %3 = load double* %2, align 8, !dbg !1661, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %3}, i64 0, metadata !1064), !dbg !1661
  %4 = load double** @_ZN3pov2SzE, align 8, !dbg !1662, !tbaa !1317
  %5 = load double* %4, align 8, !dbg !1662, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %5}, i64 0, metadata !1065), !dbg !1662
  %6 = load double** @_ZN3pov2SwE, align 8, !dbg !1663, !tbaa !1317
  %7 = load double* %6, align 8, !dbg !1663, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %7}, i64 0, metadata !1066), !dbg !1663
  call void @llvm.dbg.value(metadata !1322, i64 0, metadata !1062), !dbg !1664
  %cmp113 = icmp sgt i32 %N_Max, 1, !dbg !1664
  br i1 %cmp113, label %for.body, label %for.end, !dbg !1664

for.body:                                         ; preds = %for.body, %entry
  %8 = phi double* [ %6, %entry ], [ %.pre124, %for.body ]
  %9 = phi double* [ %4, %entry ], [ %.pre123, %for.body ]
  %10 = phi double* [ %2, %entry ], [ %.pre122, %for.body ]
  %11 = phi double* [ %0, %entry ], [ %.pre, %for.body ]
  %indvars.iv = phi i64 [ 1, %entry ], [ %indvars.iv.next, %for.body ]
  %x.0117 = phi double [ %1, %entry ], [ %add, %for.body ]
  %y.0116 = phi double [ %3, %entry ], [ %sub21, %for.body ]
  %z.0115 = phi double [ %5, %entry ], [ %sub28, %for.body ]
  %w.0114 = phi double [ %7, %entry ], [ %add35, %for.body ]
  %arrayidx4 = getelementptr inbounds double* %11, i64 %indvars.iv, !dbg !1666
  %12 = load double* %arrayidx4, align 8, !dbg !1666, !tbaa !1314
  %arrayidx6 = getelementptr inbounds double* %10, i64 %indvars.iv, !dbg !1666
  %13 = load double* %arrayidx6, align 8, !dbg !1666, !tbaa !1314
  %arrayidx8 = getelementptr inbounds double* %9, i64 %indvars.iv, !dbg !1666
  %14 = load double* %arrayidx8, align 8, !dbg !1666, !tbaa !1314
  %arrayidx10 = getelementptr inbounds double* %8, i64 %indvars.iv, !dbg !1666
  %15 = load double* %arrayidx10, align 8, !dbg !1666, !tbaa !1314
  call fastcc void @_ZN3povL5HFuncEPdS0_S0_S0_ddddPNS_14Fractal_StructE(double* %xx, double* %yy, double* %zz, double* %ww, double %12, double %13, double %14, double %15, %"struct.pov::Fractal_Struct"* %fractal) #7, !dbg !1666
  call void @llvm.dbg.value(metadata !{double* %xx}, i64 0, metadata !1067), !dbg !1668
  %16 = load double* %xx, align 8, !dbg !1668, !tbaa !1314
  %mul = fmul double %x.0117, %16, !dbg !1668
  call void @llvm.dbg.value(metadata !{double* %yy}, i64 0, metadata !1068), !dbg !1668
  %17 = load double* %yy, align 8, !dbg !1668, !tbaa !1314
  %mul11 = fmul double %y.0116, %17, !dbg !1668
  %sub = fsub double %mul, %mul11, !dbg !1668
  call void @llvm.dbg.value(metadata !{double* %zz}, i64 0, metadata !1069), !dbg !1668
  %18 = load double* %zz, align 8, !dbg !1668, !tbaa !1314
  %mul12 = fmul double %z.0115, %18, !dbg !1668
  %sub13 = fsub double %sub, %mul12, !dbg !1668
  call void @llvm.dbg.value(metadata !{double* %ww}, i64 0, metadata !1070), !dbg !1668
  %19 = load double* %ww, align 8, !dbg !1668, !tbaa !1314
  %mul14 = fmul double %w.0114, %19, !dbg !1668
  %add = fadd double %sub13, %mul14, !dbg !1668
  call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !1071), !dbg !1668
  %mul15 = fmul double %x.0117, %17, !dbg !1668
  %mul16 = fmul double %y.0116, %16, !dbg !1668
  %add17 = fadd double %mul16, %mul15, !dbg !1668
  %mul18 = fmul double %z.0115, %19, !dbg !1668
  %sub19 = fsub double %add17, %mul18, !dbg !1668
  %mul20 = fmul double %w.0114, %18, !dbg !1668
  %sub21 = fsub double %sub19, %mul20, !dbg !1668
  call void @llvm.dbg.value(metadata !{double %sub21}, i64 0, metadata !1072), !dbg !1668
  %mul22 = fmul double %x.0117, %18, !dbg !1668
  %mul23 = fmul double %y.0116, %19, !dbg !1668
  %sub24 = fsub double %mul22, %mul23, !dbg !1668
  %mul25 = fmul double %z.0115, %16, !dbg !1668
  %add26 = fadd double %mul25, %sub24, !dbg !1668
  %mul27 = fmul double %w.0114, %17, !dbg !1668
  %sub28 = fsub double %add26, %mul27, !dbg !1668
  call void @llvm.dbg.value(metadata !{double %sub28}, i64 0, metadata !1073), !dbg !1668
  %mul29 = fmul double %x.0117, %19, !dbg !1668
  %mul30 = fmul double %y.0116, %18, !dbg !1668
  %add31 = fadd double %mul30, %mul29, !dbg !1668
  %mul32 = fmul double %z.0115, %17, !dbg !1668
  %add33 = fadd double %mul32, %add31, !dbg !1668
  %mul34 = fmul double %w.0114, %16, !dbg !1668
  %add35 = fadd double %mul34, %add33, !dbg !1668
  call void @llvm.dbg.value(metadata !{double %add35}, i64 0, metadata !1074), !dbg !1668
  call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !1063), !dbg !1669
  call void @llvm.dbg.value(metadata !{double %sub21}, i64 0, metadata !1064), !dbg !1670
  call void @llvm.dbg.value(metadata !{double %sub28}, i64 0, metadata !1065), !dbg !1671
  call void @llvm.dbg.value(metadata !{double %add35}, i64 0, metadata !1066), !dbg !1672
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1664
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1664
  %exitcond = icmp eq i32 %lftr.wideiv, %N_Max, !dbg !1664
  %.pre = load double** @_ZN3pov2SxE, align 8, !dbg !1673, !tbaa !1317
  %.pre122 = load double** @_ZN3pov2SyE, align 8, !dbg !1674, !tbaa !1317
  %.pre123 = load double** @_ZN3pov2SzE, align 8, !dbg !1675, !tbaa !1317
  %.pre124 = load double** @_ZN3pov2SwE, align 8, !dbg !1676, !tbaa !1317
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1664

for.end:                                          ; preds = %for.body, %entry
  %20 = phi double* [ %6, %entry ], [ %.pre124, %for.body ]
  %21 = phi double* [ %4, %entry ], [ %.pre123, %for.body ]
  %22 = phi double* [ %2, %entry ], [ %.pre122, %for.body ]
  %23 = phi double* [ %0, %entry ], [ %.pre, %for.body ]
  %x.0.lcssa = phi double [ %1, %entry ], [ %add, %for.body ]
  %y.0.lcssa = phi double [ %3, %entry ], [ %sub21, %for.body ]
  %z.0.lcssa = phi double [ %5, %entry ], [ %sub28, %for.body ]
  %w.0.lcssa = phi double [ %7, %entry ], [ %add35, %for.body ]
  %idxprom36 = sext i32 %N_Max to i64, !dbg !1673
  %arrayidx37 = getelementptr inbounds double* %23, i64 %idxprom36, !dbg !1673
  %24 = load double* %arrayidx37, align 8, !dbg !1673, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %24}, i64 0, metadata !1058), !dbg !1673
  %arrayidx39 = getelementptr inbounds double* %22, i64 %idxprom36, !dbg !1674
  %25 = load double* %arrayidx39, align 8, !dbg !1674, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %25}, i64 0, metadata !1059), !dbg !1674
  %arrayidx41 = getelementptr inbounds double* %21, i64 %idxprom36, !dbg !1675
  %26 = load double* %arrayidx41, align 8, !dbg !1675, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %26}, i64 0, metadata !1060), !dbg !1675
  %arrayidx43 = getelementptr inbounds double* %20, i64 %idxprom36, !dbg !1676
  %27 = load double* %arrayidx43, align 8, !dbg !1676, !tbaa !1314
  call void @llvm.dbg.value(metadata !{double %27}, i64 0, metadata !1061), !dbg !1676
  %mul44 = fmul double %x.0.lcssa, %24, !dbg !1677
  %mul45 = fmul double %y.0.lcssa, %25, !dbg !1677
  %add46 = fadd double %mul44, %mul45, !dbg !1677
  %mul47 = fmul double %z.0.lcssa, %26, !dbg !1677
  %add48 = fadd double %add46, %mul47, !dbg !1677
  %mul49 = fmul double %w.0.lcssa, %27, !dbg !1677
  %add50 = fadd double %add48, %mul49, !dbg !1677
  store double %add50, double* %Result, align 8, !dbg !1677, !tbaa !1314
  %28 = fmul double %y.0.lcssa, %24, !dbg !1678
  %mul54 = fmul double %x.0.lcssa, %25, !dbg !1678
  %add55 = fsub double %mul54, %28, !dbg !1678
  %mul56 = fmul double %w.0.lcssa, %26, !dbg !1678
  %sub57 = fsub double %add55, %mul56, !dbg !1678
  %mul58 = fmul double %z.0.lcssa, %27, !dbg !1678
  %add59 = fadd double %sub57, %mul58, !dbg !1678
  %arrayidx60 = getelementptr inbounds double* %Result, i64 1, !dbg !1678
  store double %add59, double* %arrayidx60, align 8, !dbg !1678, !tbaa !1314
  %29 = fmul double %z.0.lcssa, %24, !dbg !1679
  %mul62 = fsub double -0.000000e+00, %29, !dbg !1679
  %mul63 = fmul double %w.0.lcssa, %25, !dbg !1679
  %sub64 = fsub double %mul62, %mul63, !dbg !1679
  %mul65 = fmul double %x.0.lcssa, %26, !dbg !1679
  %add66 = fadd double %sub64, %mul65, !dbg !1679
  %mul67 = fmul double %y.0.lcssa, %27, !dbg !1679
  %add68 = fadd double %add66, %mul67, !dbg !1679
  %arrayidx69 = getelementptr inbounds double* %Result, i64 2, !dbg !1679
  store double %add68, double* %arrayidx69, align 8, !dbg !1679, !tbaa !1314
  ret void, !dbg !1680
}
