define void @_ZN3pov11Complex_ExpEPNS_5cmplxES1_(%"struct.pov::cmplx"* nocapture %target, %"struct.pov::cmplx"* nocapture %source) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::cmplx"* %target}, i64 0, metadata !1100), !dbg !1710
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::cmplx"* %source}, i64 0, metadata !1101), !dbg !1710
  %x = getelementptr inbounds %"struct.pov::cmplx"* %source, i64 0, i32 0, !dbg !1711
  %0 = load double* %x, align 8, !dbg !1711, !tbaa !1314
  %call = tail call double @exp(double %0) #8, !dbg !1711
  tail call void @llvm.dbg.value(metadata !{double %call}, i64 0, metadata !1102), !dbg !1711
  %y = getelementptr inbounds %"struct.pov::cmplx"* %source, i64 0, i32 1, !dbg !1712
  %1 = load double* %y, align 8, !dbg !1712, !tbaa !1314
  %call1 = tail call double @cos(double %1) #8, !dbg !1712
  %mul = fmul double %call, %call1, !dbg !1712
  %x2 = getelementptr inbounds %"struct.pov::cmplx"* %target, i64 0, i32 0, !dbg !1712
  store double %mul, double* %x2, align 8, !dbg !1712, !tbaa !1314
  %2 = load double* %y, align 8, !dbg !1713, !tbaa !1314
  %call4 = tail call double @sin(double %2) #8, !dbg !1713
  %mul5 = fmul double %call, %call4, !dbg !1713
  %y6 = getelementptr inbounds %"struct.pov::cmplx"* %target, i64 0, i32 1, !dbg !1713
  store double %mul5, double* %y6, align 8, !dbg !1713, !tbaa !1314
  ret void, !dbg !1714
}
