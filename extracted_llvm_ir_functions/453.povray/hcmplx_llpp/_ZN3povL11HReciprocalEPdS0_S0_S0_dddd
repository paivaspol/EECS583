define internal fastcc void @_ZN3povL11HReciprocalEPdS0_S0_S0_dddd(double* nocapture %xr, double* nocapture %yr, double* nocapture %zr, double* nocapture %wr, double %x, double %y, double %z, double %w) #0 {
entry:
  %sub = fsub double %x, %w, !dbg !1507
  %mul = fmul double %sub, %sub, !dbg !1507
  %add = fadd double %y, %z, !dbg !1507
  %mul3 = fmul double %add, %add, !dbg !1507
  %add4 = fadd double %mul3, %mul, !dbg !1507
  %add5 = fadd double %x, %w, !dbg !1507
  %mul7 = fmul double %add5, %add5, !dbg !1507
  %sub8 = fsub double %y, %z, !dbg !1507
  %mul10 = fmul double %sub8, %sub8, !dbg !1507
  %add11 = fadd double %mul10, %mul7, !dbg !1507
  %mul12 = fmul double %add4, %add11, !dbg !1507
  tail call void @llvm.dbg.value(metadata !{double %mul12}, i64 0, metadata !1240), !dbg !1507
  %cmp = fcmp oeq double %mul12, 0.000000e+00, !dbg !1508
  br i1 %cmp, label %return, label %if.end, !dbg !1508

if.end:                                           ; preds = %entry
  %mul13 = fmul double %x, %x, !dbg !1509
  %mul14 = fmul double %y, %y, !dbg !1509
  %add15 = fadd double %mul13, %mul14, !dbg !1509
  %mul16 = fmul double %z, %z, !dbg !1509
  %add17 = fadd double %add15, %mul16, !dbg !1509
  %mul18 = fmul double %w, %w, !dbg !1509
  %add19 = fadd double %add17, %mul18, !dbg !1509
  tail call void @llvm.dbg.value(metadata !{double %add19}, i64 0, metadata !1241), !dbg !1509
  %mul20 = fmul double %x, %w, !dbg !1510
  %mul21 = fmul double %y, %z, !dbg !1510
  %sub22 = fsub double %mul20, %mul21, !dbg !1510
  tail call void @llvm.dbg.value(metadata !{double %sub22}, i64 0, metadata !1242), !dbg !1510
  %mul23 = fmul double %add19, %x, !dbg !1511
  %mul24 = fmul double %w, 2.000000e+00, !dbg !1511
  %mul25 = fmul double %mul24, %sub22, !dbg !1511
  %sub26 = fsub double %mul23, %mul25, !dbg !1511
  %div = fdiv double %sub26, %mul12, !dbg !1511
  store double %div, double* %xr, align 8, !dbg !1511, !tbaa !1314
  %0 = fmul double %add19, %y, !dbg !1512
  %mul28 = fsub double -0.000000e+00, %0, !dbg !1512
  %mul29 = fmul double %z, 2.000000e+00, !dbg !1512
  %mul30 = fmul double %mul29, %sub22, !dbg !1512
  %sub31 = fsub double %mul28, %mul30, !dbg !1512
  %div32 = fdiv double %sub31, %mul12, !dbg !1512
  store double %div32, double* %yr, align 8, !dbg !1512, !tbaa !1314
  %1 = fmul double %add19, %z, !dbg !1513
  %mul34 = fsub double -0.000000e+00, %1, !dbg !1513
  %mul35 = fmul double %y, 2.000000e+00, !dbg !1513
  %mul36 = fmul double %mul35, %sub22, !dbg !1513
  %sub37 = fsub double %mul34, %mul36, !dbg !1513
  %div38 = fdiv double %sub37, %mul12, !dbg !1513
  store double %div38, double* %zr, align 8, !dbg !1513, !tbaa !1314
  %mul39 = fmul double %add19, %w, !dbg !1514
  %mul40 = fmul double %x, 2.000000e+00, !dbg !1514
  %mul41 = fmul double %mul40, %sub22, !dbg !1514
  %sub42 = fsub double %mul39, %mul41, !dbg !1514
  %div43 = fdiv double %sub42, %mul12, !dbg !1514
  store double %div43, double* %wr, align 8, !dbg !1514, !tbaa !1314
  br label %return, !dbg !1515

return:                                           ; preds = %entry, %if.end
  ret void
}
