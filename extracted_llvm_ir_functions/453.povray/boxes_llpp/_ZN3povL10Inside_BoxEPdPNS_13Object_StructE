define internal i32 @_ZN3povL10Inside_BoxEPdPNS_13Object_StructE(double* %IPoint, %"struct.pov::Object_Struct"* nocapture readonly %Object) #0 {
  %New_Point = alloca [3 x double], align 16
  tail call void @llvm.dbg.value(metadata double* %IPoint, i64 0, metadata !1020, metadata !1445), !dbg !1639
  tail call void @llvm.dbg.value(metadata %"struct.pov::Object_Struct"* %Object, i64 0, metadata !1021, metadata !1445), !dbg !1640
  tail call void @llvm.dbg.declare(metadata [3 x double]* %New_Point, metadata !1022, metadata !1445), !dbg !1641
  %1 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !1642
  %2 = load %"struct.pov::Transform_Struct"** %1, align 8, !dbg !1642, !tbaa !1460
  %3 = icmp eq %"struct.pov::Transform_Struct"* %2, null, !dbg !1644
  %4 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 0, !dbg !1645
  br i1 %3, label %6, label %5, !dbg !1647

; <label>:5                                       ; preds = %0
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %4, double* %IPoint, %"struct.pov::Transform_Struct"* %2) #6, !dbg !1648
  %.pre = load double* %4, align 16, !dbg !1649, !tbaa !1478
  br label %17, !dbg !1651

; <label>:6                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata double* %4, i64 0, metadata !1016, metadata !1445), !dbg !1652
  tail call void @llvm.dbg.value(metadata double* %IPoint, i64 0, metadata !1017, metadata !1445), !dbg !1655
  %7 = bitcast double* %IPoint to <2 x i64>*, !dbg !1656
  %8 = load <2 x i64>* %7, align 8, !dbg !1656, !tbaa !1478
  %9 = bitcast [3 x double]* %New_Point to <2 x i64>*, !dbg !1657
  store <2 x i64> %8, <2 x i64>* %9, align 16, !dbg !1657, !tbaa !1478
  %10 = getelementptr inbounds double* %IPoint, i64 2, !dbg !1658
  %11 = bitcast double* %10 to i64*, !dbg !1658
  %12 = load i64* %11, align 8, !dbg !1658, !tbaa !1478
  %13 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 2, !dbg !1659
  %14 = bitcast double* %13 to i64*, !dbg !1660
  store i64 %12, i64* %14, align 16, !dbg !1660, !tbaa !1478
  %15 = extractelement <2 x i64> %8, i32 0
  %16 = bitcast i64 %15 to double
  br label %17

; <label>:17                                      ; preds = %6, %5
  %18 = phi double [ %16, %6 ], [ %.pre, %5 ]
  %19 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, !dbg !1661
  %20 = bitcast %"struct.pov::Object_Struct"* %19 to double*, !dbg !1662
  %21 = load double* %20, align 8, !dbg !1662, !tbaa !1478
  %22 = fcmp olt double %18, %21, !dbg !1663
  br i1 %22, label %28, label %23, !dbg !1664

; <label>:23                                      ; preds = %17
  %24 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 3, !dbg !1665
  %25 = bitcast %"struct.pov::Texture_Struct"** %24 to double*, !dbg !1665
  %26 = load double* %25, align 8, !dbg !1665, !tbaa !1478
  %27 = fcmp ogt double %18, %26, !dbg !1666
  br i1 %27, label %28, label %32, !dbg !1667

; <label>:28                                      ; preds = %23, %17
  %29 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !1668
  %30 = load i32* %29, align 4, !dbg !1668, !tbaa !1670
  %31 = and i32 %30, 4, !dbg !1668
  br label %69, !dbg !1671

; <label>:32                                      ; preds = %23
  %33 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 1, !dbg !1672
  %34 = load double* %33, align 8, !dbg !1672, !tbaa !1478
  %35 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !1674
  %36 = bitcast i32* %35 to double*, !dbg !1674
  %37 = load double* %36, align 8, !dbg !1674, !tbaa !1478
  %38 = fcmp olt double %34, %37, !dbg !1675
  br i1 %38, label %44, label %39, !dbg !1676

; <label>:39                                      ; preds = %32
  %40 = getelementptr inbounds %"struct.pov::Texture_Struct"** %24, i64 1, !dbg !1677
  %41 = bitcast %"struct.pov::Texture_Struct"** %40 to double*, !dbg !1677
  %42 = load double* %41, align 8, !dbg !1677, !tbaa !1478
  %43 = fcmp ogt double %34, %42, !dbg !1678
  br i1 %43, label %44, label %48, !dbg !1679

; <label>:44                                      ; preds = %39, %32
  %45 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !1680
  %46 = load i32* %45, align 4, !dbg !1680, !tbaa !1670
  %47 = and i32 %46, 4, !dbg !1680
  br label %69, !dbg !1682

; <label>:48                                      ; preds = %39
  %49 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 2, !dbg !1683
  %50 = load double* %49, align 16, !dbg !1683, !tbaa !1478
  %51 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 2, !dbg !1685
  %52 = bitcast %"struct.pov::Object_Struct"** %51 to double*, !dbg !1685
  %53 = load double* %52, align 8, !dbg !1685, !tbaa !1478
  %54 = fcmp olt double %50, %53, !dbg !1686
  br i1 %54, label %60, label %55, !dbg !1687

; <label>:55                                      ; preds = %48
  %56 = getelementptr inbounds %"struct.pov::Texture_Struct"** %24, i64 2, !dbg !1688
  %57 = bitcast %"struct.pov::Texture_Struct"** %56 to double*, !dbg !1688
  %58 = load double* %57, align 8, !dbg !1688, !tbaa !1478
  %59 = fcmp ogt double %50, %58, !dbg !1689
  br i1 %59, label %60, label %64, !dbg !1690

; <label>:60                                      ; preds = %55, %48
  %61 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !1691
  %62 = load i32* %61, align 4, !dbg !1691, !tbaa !1670
  %63 = and i32 %62, 4, !dbg !1691
  br label %69, !dbg !1693

; <label>:64                                      ; preds = %55
  %65 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !1694
  %66 = load i32* %65, align 4, !dbg !1694, !tbaa !1670
  %67 = lshr i32 %66, 2, !dbg !1695
  %.lobit = and i32 %67, 1, !dbg !1695
  %68 = xor i32 %.lobit, 1, !dbg !1695
  br label %69, !dbg !1696

; <label>:69                                      ; preds = %64, %60, %44, %28
  %.0 = phi i32 [ %31, %28 ], [ %47, %44 ], [ %63, %60 ], [ %68, %64 ]
  ret i32 %.0, !dbg !1697
}
