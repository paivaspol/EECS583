define i32 @_ZN8pov_base7IStream8Read_IntEv(%"class.pov_base::IStream"* nocapture %this) #0 align 2 {
  %result = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %"class.pov_base::IStream"* %this, i64 0, metadata !460, metadata !903), !dbg !1231
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !425, metadata !903) #6, !dbg !1232
  tail call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !426, metadata !903) #6, !dbg !1234
  %1 = getelementptr inbounds %"class.pov_base::IStream"* %this, i64 0, i32 0, i32 1, !dbg !1235
  %2 = load i8* %1, align 1, !dbg !1235, !tbaa !925, !range !1084
  %.not.i = icmp eq i8 %2, 0, !dbg !1236
  br i1 %.not.i, label %3, label %_ZN8pov_base6IOBase4readEPvm.exit, !dbg !1236

; <label>:3                                       ; preds = %0
  %4 = bitcast i32* %result to i8*, !dbg !1237
  %5 = getelementptr inbounds %"class.pov_base::IStream"* %this, i64 0, i32 0, i32 2, !dbg !1238
  %6 = load %struct.__sFILE** %5, align 8, !dbg !1238, !tbaa !928
  %7 = call i64 @fread(i8* %4, i64 4, i64 1, %struct.__sFILE* %6) #10, !dbg !1239
  %8 = icmp ne i64 %7, 1, !dbg !1240
  %9 = zext i1 %8 to i8, !dbg !1241
  store i8 %9, i8* %1, align 1, !dbg !1241, !tbaa !925
  %.pre = load i32* %result, align 4, !dbg !1242, !tbaa !1243
  br label %_ZN8pov_base6IOBase4readEPvm.exit, !dbg !1244

_ZN8pov_base6IOBase4readEPvm.exit:                ; preds = %0, %3
  %10 = phi i32 [ undef, %0 ], [ %.pre, %3 ]
  tail call void @llvm.dbg.value(metadata i32* %result, i64 0, metadata !461, metadata !903), !dbg !1245
  ret i32 %10, !dbg !1246
}
