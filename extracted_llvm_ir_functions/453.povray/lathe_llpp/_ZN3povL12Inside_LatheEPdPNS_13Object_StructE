define internal i32 @_ZN3povL12Inside_LatheEPdPNS_13Object_StructE(double* %IPoint, %"struct.pov::Object_Struct"* nocapture readonly %Object) #0 {
  %x = alloca [4 x double], align 16
  %y = alloca [3 x double], align 16
  %P = alloca [3 x double], align 16
  tail call void @llvm.dbg.value(metadata double* %IPoint, i64 0, metadata !1138, metadata !1640), !dbg !2736
  tail call void @llvm.dbg.value(metadata %"struct.pov::Object_Struct"* %Object, i64 0, metadata !1139, metadata !1640), !dbg !2737
  tail call void @llvm.dbg.declare(metadata [4 x double]* %x, metadata !1146, metadata !1640), !dbg !2738
  tail call void @llvm.dbg.declare(metadata [3 x double]* %y, metadata !1147, metadata !1640), !dbg !2739
  tail call void @llvm.dbg.declare(metadata [3 x double]* %P, metadata !1149, metadata !1640), !dbg !2740
  %1 = bitcast %"struct.pov::Object_Struct"* %Object to %"struct.pov::Lathe_Struct"*, !dbg !2741
  tail call void @llvm.dbg.value(metadata %"struct.pov::Lathe_Struct"* %1, i64 0, metadata !1152, metadata !1640), !dbg !2742
  %2 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !2743
  %3 = bitcast i32* %2 to %"struct.pov::Lathe_Spline_Struct"**, !dbg !2743
  %4 = load %"struct.pov::Lathe_Spline_Struct"** %3, align 8, !dbg !2743, !tbaa !1748
  %5 = getelementptr inbounds %"struct.pov::Lathe_Spline_Struct"* %4, i64 0, i32 2, !dbg !2744
  %6 = load %"struct.pov::BCyl_Struct"** %5, align 8, !dbg !2744, !tbaa !2230
  %7 = getelementptr inbounds %"struct.pov::BCyl_Struct"* %6, i64 0, i32 4, !dbg !2745
  %8 = load double** %7, align 8, !dbg !2745, !tbaa !2746
  tail call void @llvm.dbg.value(metadata double* %8, i64 0, metadata !1148, metadata !1640), !dbg !2747
  %9 = getelementptr inbounds %"struct.pov::BCyl_Struct"* %6, i64 0, i32 8, !dbg !2748
  %10 = load %"struct.pov::BCyl_Entry_Struct"** %9, align 8, !dbg !2748, !tbaa !2749
  tail call void @llvm.dbg.value(metadata %"struct.pov::BCyl_Entry_Struct"* %10, i64 0, metadata !1150, metadata !1640), !dbg !2750
  %11 = getelementptr inbounds [3 x double]* %P, i64 0, i64 0, !dbg !2751
  %12 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !2752
  %13 = load %"struct.pov::Transform_Struct"** %12, align 8, !dbg !2752, !tbaa !1675
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %11, double* %IPoint, %"struct.pov::Transform_Struct"* %13) #6, !dbg !2753
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1142, metadata !1640), !dbg !2754
  %14 = getelementptr inbounds [3 x double]* %P, i64 0, i64 1, !dbg !2755
  %15 = load double* %14, align 8, !dbg !2755, !tbaa !1836
  %16 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 2, !dbg !2757
  %17 = bitcast %"struct.pov::Object_Struct"** %16 to double*, !dbg !2757
  %18 = load double* %17, align 8, !dbg !2757, !tbaa !1688
  %19 = fcmp ult double %15, %18, !dbg !2758
  br i1 %19, label %.thread, label %20, !dbg !2759

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 3, !dbg !2760
  %22 = bitcast %"struct.pov::Texture_Struct"** %21 to double*, !dbg !2760
  %23 = load double* %22, align 8, !dbg !2760, !tbaa !1693
  %24 = fcmp ugt double %15, %23, !dbg !2761
  br i1 %24, label %.thread, label %25, !dbg !2762

; <label>:25                                      ; preds = %20
  %26 = load double* %11, align 16, !dbg !2763, !tbaa !1836
  %27 = fmul double %26, %26, !dbg !2765
  %28 = getelementptr inbounds [3 x double]* %P, i64 0, i64 2, !dbg !2766
  %29 = load double* %28, align 16, !dbg !2766, !tbaa !1836
  %30 = fmul double %29, %29, !dbg !2767
  %31 = fadd double %27, %30, !dbg !2768
  %32 = call double @sqrt(double %31) #7, !dbg !2769
  call void @llvm.dbg.value(metadata double %32, i64 0, metadata !1143, metadata !1640), !dbg !2770
  %33 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 4, !dbg !2771
  %34 = bitcast %"struct.pov::Texture_Struct"** %33 to double*, !dbg !2771
  %35 = load double* %34, align 8, !dbg !2771, !tbaa !2219
  %36 = fcmp ult double %32, %35, !dbg !2773
  br i1 %36, label %.thread, label %37, !dbg !2774

; <label>:37                                      ; preds = %25
  %38 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 5, !dbg !2775
  %39 = bitcast %"struct.pov::Interior_Struct"** %38 to double*, !dbg !2775
  %40 = load double* %39, align 8, !dbg !2775, !tbaa !1685
  %41 = fcmp ugt double %32, %40, !dbg !2776
  br i1 %41, label %.thread, label %.preheader, !dbg !2777

.preheader:                                       ; preds = %37
  %42 = getelementptr inbounds %"struct.pov::Lathe_Struct"* %1, i64 0, i32 15, !dbg !2778
  %43 = load i32* %42, align 4, !dbg !2778, !tbaa !1733
  %44 = icmp sgt i32 %43, 0, !dbg !2782
  br i1 %44, label %.lr.ph8, label %._crit_edge.thread, !dbg !2783

._crit_edge.thread:                               ; preds = %.preheader
  %.pre16 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !2784
  %45 = load i32* %.pre16, align 4, !dbg !2784, !tbaa !2531
  %46 = zext i32 %45 to i64, !dbg !2784
  %47 = and i64 %46, 4, !dbg !2784
  br label %137, !dbg !2787

.lr.ph8:                                          ; preds = %.preheader
  %48 = bitcast [4 x double]* %x to i64*, !dbg !2788
  %49 = getelementptr inbounds [4 x double]* %x, i64 0, i64 1, !dbg !2792
  %50 = bitcast double* %49 to i64*, !dbg !2793
  %51 = getelementptr inbounds [4 x double]* %x, i64 0, i64 2, !dbg !2794
  %52 = bitcast double* %51 to i64*, !dbg !2795
  %53 = getelementptr inbounds [4 x double]* %x, i64 0, i64 3, !dbg !2796
  %54 = getelementptr inbounds [4 x double]* %x, i64 0, i64 0, !dbg !2797
  %55 = getelementptr inbounds [3 x double]* %y, i64 0, i64 0, !dbg !2798
  %56 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !2799
  br label %57, !dbg !2783

; <label>:57                                      ; preds = %._crit_edge14, %.lr.ph8
  %58 = phi i32 [ %43, %.lr.ph8 ], [ %123, %._crit_edge14 ]
  %59 = phi double [ %15, %.lr.ph8 ], [ %.pre, %._crit_edge14 ], !dbg !2800
  %indvars.iv = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next, %._crit_edge14 ]
  %NC.06 = phi i32 [ 0, %.lr.ph8 ], [ %NC.2, %._crit_edge14 ]
  %60 = load %"struct.pov::Lathe_Spline_Struct"** %3, align 8, !dbg !2800, !tbaa !1748
  %61 = getelementptr inbounds %"struct.pov::Lathe_Spline_Struct"* %60, i64 0, i32 1, !dbg !2801
  %62 = load %"struct.pov::Lathe_Spline_Entry_Struct"** %61, align 8, !dbg !2801, !tbaa !1762
  %63 = getelementptr inbounds %"struct.pov::BCyl_Entry_Struct"* %10, i64 %indvars.iv, i32 2, !dbg !2802
  %64 = load i16* %63, align 2, !dbg !2802, !tbaa !2803
  %65 = sext i16 %64 to i64, !dbg !2805
  %66 = getelementptr inbounds double* %8, i64 %65, !dbg !2805
  %67 = load double* %66, align 8, !dbg !2805, !tbaa !1836
  %68 = fadd double %67, -1.000000e-07, !dbg !2806
  %69 = fcmp ult double %59, %68, !dbg !2807
  br i1 %69, label %122, label %70, !dbg !2808

; <label>:70                                      ; preds = %57
  %71 = getelementptr inbounds %"struct.pov::BCyl_Entry_Struct"* %10, i64 %indvars.iv, i32 3, !dbg !2809
  %72 = load i16* %71, align 2, !dbg !2809, !tbaa !2810
  %73 = sext i16 %72 to i64, !dbg !2811
  %74 = getelementptr inbounds double* %8, i64 %73, !dbg !2811
  %75 = load double* %74, align 8, !dbg !2811, !tbaa !1836
  %76 = fadd double %75, 1.000000e-07, !dbg !2812
  %77 = fcmp ugt double %59, %76, !dbg !2813
  br i1 %77, label %122, label %78, !dbg !2814

; <label>:78                                      ; preds = %70
  %79 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 0, i64 1, !dbg !2815
  %80 = bitcast double* %79 to i64*, !dbg !2815
  %81 = load i64* %80, align 8, !dbg !2815, !tbaa !1836
  store i64 %81, i64* %48, align 16, !dbg !2788, !tbaa !1836
  %82 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 1, i64 1, !dbg !2816
  %83 = bitcast double* %82 to i64*, !dbg !2816
  %84 = load i64* %83, align 8, !dbg !2816, !tbaa !1836
  store i64 %84, i64* %50, align 8, !dbg !2793, !tbaa !1836
  %85 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 2, i64 1, !dbg !2817
  %86 = bitcast double* %85 to i64*, !dbg !2817
  %87 = load i64* %86, align 8, !dbg !2817, !tbaa !1836
  store i64 %87, i64* %52, align 16, !dbg !2795, !tbaa !1836
  %88 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 3, i64 1, !dbg !2818
  %89 = load double* %88, align 8, !dbg !2818, !tbaa !1836
  %90 = fsub double %89, %59, !dbg !2819
  store double %90, double* %53, align 8, !dbg !2820, !tbaa !1836
  %91 = load i32* %56, align 4, !dbg !2799, !tbaa !2531
  %92 = and i32 %91, 64, !dbg !2799
  %93 = call i32 @_ZN3pov16Solve_PolynomialEiPdS0_id(i32 3, double* %54, double* %55, i32 %92, double 0.000000e+00) #6, !dbg !2821
  call void @llvm.dbg.value(metadata i32 %93, i64 0, metadata !1141, metadata !1640), !dbg !2822
  %94 = icmp eq i32 %93, 0, !dbg !2823
  br i1 %94, label %.loopexit, label %.lr.ph.lr.ph, !dbg !2824

.lr.ph.lr.ph:                                     ; preds = %78
  %95 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 0, i64 0, !dbg !2825
  %96 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 1, i64 0, !dbg !2829
  %97 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 2, i64 0, !dbg !2830
  %98 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %62, i64 %indvars.iv, i32 3, i64 0, !dbg !2831
  br label %.lr.ph, !dbg !2824

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.outer
  %.in = phi i32 [ %93, %.lr.ph.lr.ph ], [ %100, %.outer ]
  %NC.1.ph4 = phi i32 [ %NC.06, %.lr.ph.lr.ph ], [ %120, %.outer ]
  br label %99, !dbg !2824

; <label>:99                                      ; preds = %.lr.ph, %.backedge
  %.in10 = phi i32 [ %.in, %.lr.ph ], [ %100, %.backedge ]
  %100 = add nsw i32 %.in10, -1, !dbg !2832
  %101 = sext i32 %100 to i64, !dbg !2833
  %102 = getelementptr inbounds [3 x double]* %y, i64 0, i64 %101, !dbg !2833
  %103 = load double* %102, align 8, !dbg !2833, !tbaa !1836
  call void @llvm.dbg.value(metadata double %103, i64 0, metadata !1145, metadata !1640), !dbg !2834
  %104 = fcmp oge double %103, 0.000000e+00, !dbg !2835
  %105 = fcmp ole double %103, 1.000000e+00, !dbg !2836
  %or.cond = and i1 %104, %105, !dbg !2837
  br i1 %or.cond, label %107, label %.backedge, !dbg !2837

.backedge:                                        ; preds = %99, %107
  %106 = icmp eq i32 %100, 0, !dbg !2823
  br i1 %106, label %.loopexit, label %99, !dbg !2824

; <label>:107                                     ; preds = %99
  %108 = load double* %95, align 8, !dbg !2825, !tbaa !1836
  %109 = fmul double %103, %108, !dbg !2838
  %110 = load double* %96, align 8, !dbg !2829, !tbaa !1836
  %111 = fadd double %109, %110, !dbg !2839
  %112 = fmul double %103, %111, !dbg !2840
  %113 = load double* %97, align 8, !dbg !2830, !tbaa !1836
  %114 = fadd double %113, %112, !dbg !2841
  %115 = fmul double %103, %114, !dbg !2842
  %116 = load double* %98, align 8, !dbg !2831, !tbaa !1836
  %117 = fadd double %116, %115, !dbg !2843
  %118 = fsub double %117, %32, !dbg !2844
  call void @llvm.dbg.value(metadata double %118, i64 0, metadata !1144, metadata !1640), !dbg !2845
  %119 = fcmp ult double %118, 0.000000e+00, !dbg !2846
  br i1 %119, label %.backedge, label %.outer, !dbg !2848

.outer:                                           ; preds = %107
  %120 = add nsw i32 %NC.1.ph4, 1, !dbg !2849
  call void @llvm.dbg.value(metadata i32 %120, i64 0, metadata !1142, metadata !1640), !dbg !2754
  %121 = icmp eq i32 %100, 0, !dbg !2823
  br i1 %121, label %.loopexit, label %.lr.ph, !dbg !2824

.loopexit:                                        ; preds = %.outer, %.backedge, %78
  %NC.1.ph.lcssa = phi i32 [ %NC.06, %78 ], [ %NC.1.ph4, %.backedge ], [ %120, %.outer ]
  %.pre15 = load i32* %42, align 4, !dbg !2778, !tbaa !1733
  br label %122

; <label>:122                                     ; preds = %.loopexit, %70, %57
  %123 = phi i32 [ %58, %70 ], [ %58, %57 ], [ %.pre15, %.loopexit ], !dbg !2783
  %NC.2 = phi i32 [ %NC.06, %70 ], [ %NC.06, %57 ], [ %NC.1.ph.lcssa, %.loopexit ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2783
  %124 = sext i32 %123 to i64, !dbg !2782
  %125 = icmp slt i64 %indvars.iv.next, %124, !dbg !2782
  br i1 %125, label %._crit_edge14, label %._crit_edge, !dbg !2783

._crit_edge14:                                    ; preds = %122
  %.pre = load double* %14, align 8, !dbg !2851, !tbaa !1836
  br label %57, !dbg !2783

.thread:                                          ; preds = %37, %25, %20, %0
  %126 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !2784
  %127 = load i32* %126, align 4, !dbg !2784, !tbaa !2531
  %128 = zext i32 %127 to i64, !dbg !2784
  %129 = and i64 %128, 4, !dbg !2784
  br label %137, !dbg !2787

._crit_edge:                                      ; preds = %122
  %130 = and i32 %NC.2, 1, !dbg !2852
  %131 = icmp eq i32 %130, 0, !dbg !2853
  %132 = load i32* %56, align 4, !dbg !2784, !tbaa !2531
  %133 = zext i32 %132 to i64, !dbg !2784
  %134 = and i64 %133, 4, !dbg !2784
  br i1 %131, label %137, label %135, !dbg !2787

; <label>:135                                     ; preds = %._crit_edge
  %.lobit = lshr exact i64 %134, 2, !dbg !2854
  %136 = xor i64 %.lobit, 1, !dbg !2854
  br label %137, !dbg !2855

; <label>:137                                     ; preds = %._crit_edge.thread, %.thread, %._crit_edge, %135
  %.0.in = phi i64 [ %136, %135 ], [ %134, %._crit_edge ], [ %129, %.thread ], [ %47, %._crit_edge.thread ]
  %.0 = trunc i64 %.0.in to i32, !dbg !2854
  ret i32 %.0, !dbg !2856
}
