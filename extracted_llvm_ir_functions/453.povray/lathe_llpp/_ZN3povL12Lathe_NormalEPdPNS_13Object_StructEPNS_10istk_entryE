define internal void @_ZN3povL12Lathe_NormalEPdPNS_13Object_StructEPNS_10istk_entryE(double* %Result, %"struct.pov::Object_Struct"* nocapture readonly %Object, %"struct.pov::istk_entry"* %Inter) #0 {
  %P = alloca [3 x double], align 16
  %N = alloca [3 x double], align 16
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1155, metadata !1640), !dbg !2857
  tail call void @llvm.dbg.value(metadata %"struct.pov::Object_Struct"* %Object, i64 0, metadata !1156, metadata !1640), !dbg !2858
  tail call void @llvm.dbg.value(metadata %"struct.pov::istk_entry"* %Inter, i64 0, metadata !1157, metadata !1640), !dbg !2859
  tail call void @llvm.dbg.declare(metadata [3 x double]* %P, metadata !1161, metadata !1640), !dbg !2860
  tail call void @llvm.dbg.declare(metadata [3 x double]* %N, metadata !1162, metadata !1640), !dbg !2861
  %1 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 6, !dbg !2862
  %2 = load i32* %1, align 4, !dbg !2862, !tbaa !2863
  %3 = sext i32 %2 to i64, !dbg !2865
  %4 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !2866
  %5 = bitcast i32* %4 to %"struct.pov::Lathe_Spline_Struct"**, !dbg !2866
  %6 = load %"struct.pov::Lathe_Spline_Struct"** %5, align 8, !dbg !2866, !tbaa !1748
  %7 = getelementptr inbounds %"struct.pov::Lathe_Spline_Struct"* %6, i64 0, i32 1, !dbg !2867
  %8 = load %"struct.pov::Lathe_Spline_Entry_Struct"** %7, align 8, !dbg !2867, !tbaa !1762
  %9 = getelementptr inbounds [3 x double]* %P, i64 0, i64 0, !dbg !2868
  %10 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 1, i64 0, !dbg !2869
  %11 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !2870
  %12 = load %"struct.pov::Transform_Struct"** %11, align 8, !dbg !2870, !tbaa !1675
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %9, double* %10, %"struct.pov::Transform_Struct"* %12) #6, !dbg !2871
  %13 = load double* %9, align 16, !dbg !2872, !tbaa !1836
  %14 = fmul double %13, %13, !dbg !2873
  %15 = getelementptr inbounds [3 x double]* %P, i64 0, i64 2, !dbg !2874
  %16 = load double* %15, align 16, !dbg !2874, !tbaa !1836
  %17 = fmul double %16, %16, !dbg !2875
  %18 = fadd double %14, %17, !dbg !2876
  call void @llvm.dbg.value(metadata double %18, i64 0, metadata !1158, metadata !1640), !dbg !2877
  %19 = fcmp ogt double %18, 1.000000e-07, !dbg !2878
  br i1 %19, label %20, label %52, !dbg !2880

; <label>:20                                      ; preds = %0
  %21 = call double @sqrt(double %18) #7, !dbg !2881
  call void @llvm.dbg.value(metadata double %21, i64 0, metadata !1158, metadata !1640), !dbg !2877
  %22 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 8, !dbg !2883
  %23 = load double* %22, align 8, !dbg !2883, !tbaa !2884
  %24 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %8, i64 %3, i32 0, i64 0, !dbg !2885
  %25 = load double* %24, align 8, !dbg !2885, !tbaa !1836
  %26 = fmul double %25, 3.000000e+00, !dbg !2886
  %27 = fmul double %23, %26, !dbg !2887
  %28 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %8, i64 %3, i32 1, i64 0, !dbg !2888
  %29 = load double* %28, align 8, !dbg !2888, !tbaa !1836
  %30 = fmul double %29, 2.000000e+00, !dbg !2889
  %31 = fadd double %27, %30, !dbg !2890
  %32 = fmul double %23, %31, !dbg !2891
  %33 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %8, i64 %3, i32 2, i64 0, !dbg !2892
  %34 = load double* %33, align 8, !dbg !2892, !tbaa !1836
  %35 = fadd double %34, %32, !dbg !2893
  call void @llvm.dbg.value(metadata double %35, i64 0, metadata !1159, metadata !1640), !dbg !2894
  %36 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %8, i64 %3, i32 0, i64 1, !dbg !2895
  %37 = load double* %36, align 8, !dbg !2895, !tbaa !1836
  %38 = fmul double %37, 3.000000e+00, !dbg !2896
  %39 = fmul double %23, %38, !dbg !2897
  %40 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %8, i64 %3, i32 1, i64 1, !dbg !2898
  %41 = load double* %40, align 8, !dbg !2898, !tbaa !1836
  %42 = fmul double %41, 2.000000e+00, !dbg !2899
  %43 = fadd double %39, %42, !dbg !2900
  %44 = fmul double %23, %43, !dbg !2901
  %45 = getelementptr inbounds %"struct.pov::Lathe_Spline_Entry_Struct"* %8, i64 %3, i32 2, i64 1, !dbg !2902
  %46 = load double* %45, align 8, !dbg !2902, !tbaa !1836
  %47 = fadd double %46, %44, !dbg !2903
  call void @llvm.dbg.value(metadata double %47, i64 0, metadata !1160, metadata !1640), !dbg !2904
  %48 = fmul double %13, %47, !dbg !2905
  %49 = fmul double %21, %35, !dbg !2906
  %50 = fsub double -0.000000e+00, %49, !dbg !2906
  %51 = fmul double %16, %47, !dbg !2907
  br label %52, !dbg !2908

; <label>:52                                      ; preds = %0, %20
  %.sink2 = phi double [ %51, %20 ], [ 0.000000e+00, %0 ]
  %.sink1 = phi double [ %48, %20 ], [ 0.000000e+00, %0 ]
  %.sink = phi double [ %50, %20 ], [ 1.000000e+00, %0 ]
  %53 = getelementptr inbounds [3 x double]* %N, i64 0, i64 2, !dbg !2909
  store double %.sink2, double* %53, align 16
  %54 = getelementptr inbounds [3 x double]* %N, i64 0, i64 0, !dbg !2911
  store double %.sink1, double* %54, align 16
  %55 = getelementptr inbounds [3 x double]* %N, i64 0, i64 1, !dbg !2912
  store double %.sink, double* %55, align 8
  %56 = load %"struct.pov::Transform_Struct"** %11, align 8, !dbg !2913, !tbaa !1675
  call void @_ZN3pov12MTransNormalEPdS0_PNS_16Transform_StructE(double* %Result, double* %54, %"struct.pov::Transform_Struct"* %56) #6, !dbg !2914
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1169, metadata !1640) #4, !dbg !2915
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1170, metadata !1640) #4, !dbg !2917
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1087, metadata !1640) #4, !dbg !2918
  %57 = bitcast double* %Result to <2 x double>*, !dbg !2920
  %58 = load <2 x double>* %57, align 8, !dbg !2920, !tbaa !1836
  %59 = extractelement <2 x double> %58, i32 0, !dbg !2921
  %60 = fmul double %59, %59, !dbg !2921
  %61 = extractelement <2 x double> %58, i32 1, !dbg !2922
  %62 = fmul double %61, %61, !dbg !2922
  %63 = fadd double %60, %62, !dbg !2923
  %64 = getelementptr inbounds double* %Result, i64 2, !dbg !2924
  %65 = load double* %64, align 8, !dbg !2924, !tbaa !1836
  %66 = fmul double %65, %65, !dbg !2925
  %67 = fadd double %63, %66, !dbg !2926
  %68 = call double @sqrt(double %67) #7, !dbg !2927
  call void @llvm.dbg.value(metadata double %68, i64 0, metadata !1086, metadata !1640) #4, !dbg !2928
  call void @llvm.dbg.value(metadata double %68, i64 0, metadata !1171, metadata !1640) #4, !dbg !2929
  call void @llvm.dbg.value(metadata double %68, i64 0, metadata !1171, metadata !1640) #4, !dbg !2929
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1176, metadata !1640) #4, !dbg !2930
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1177, metadata !1640) #4, !dbg !2932
  call void @llvm.dbg.value(metadata double %68, i64 0, metadata !1178, metadata !1640) #4, !dbg !2933
  %69 = fdiv double 1.000000e+00, %68, !dbg !2934
  call void @llvm.dbg.value(metadata double %69, i64 0, metadata !1179, metadata !1640) #4, !dbg !2935
  %70 = insertelement <2 x double> undef, double %69, i32 0, !dbg !2936
  %71 = insertelement <2 x double> %70, double %69, i32 1, !dbg !2936
  %72 = fmul <2 x double> %71, %58, !dbg !2936
  %73 = bitcast double* %Result to <2 x double>*, !dbg !2937
  store <2 x double> %72, <2 x double>* %73, align 8, !dbg !2937, !tbaa !1836
  %74 = fmul double %69, %65, !dbg !2938
  store double %74, double* %64, align 8, !dbg !2939, !tbaa !1836
  ret void, !dbg !2940
}
