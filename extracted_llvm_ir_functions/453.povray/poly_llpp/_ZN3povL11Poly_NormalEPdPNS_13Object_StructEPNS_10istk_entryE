define internal void @_ZN3povL11Poly_NormalEPdPNS_13Object_StructEPNS_10istk_entryE(double* %Result, %"struct.pov::Object_Struct"* nocapture readonly %Object, %"struct.pov::istk_entry"* %Inter) #0 {
  %x.i = alloca [16 x double], align 16
  %y.i = alloca [16 x double], align 16
  %z.i = alloca [16 x double], align 16
  %New_Point = alloca [3 x double], align 16
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1126, metadata !1536), !dbg !2152
  tail call void @llvm.dbg.value(metadata %"struct.pov::Object_Struct"* %Object, i64 0, metadata !1127, metadata !1536), !dbg !2153
  tail call void @llvm.dbg.value(metadata %"struct.pov::istk_entry"* %Inter, i64 0, metadata !1128, metadata !1536), !dbg !2154
  tail call void @llvm.dbg.declare(metadata [3 x double]* %New_Point, metadata !1130, metadata !1536), !dbg !2155
  %1 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 0, !dbg !2156
  %2 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 1, i64 0, !dbg !2157
  %3 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !2158
  %4 = load %"struct.pov::Transform_Struct"** %3, align 8, !dbg !2158, !tbaa !1547
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %1, double* %2, %"struct.pov::Transform_Struct"* %4) #6, !dbg !2159
  %5 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, !dbg !2160
  %6 = bitcast %"struct.pov::Object_Struct"* %5 to i32*, !dbg !2160
  %7 = load i32* %6, align 4, !dbg !2160, !tbaa !1588
  %8 = icmp sgt i32 %7, 4, !dbg !2162
  %9 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !2163
  %10 = bitcast i32* %9 to double**, !dbg !2163
  %11 = load double** %10, align 8, !dbg !2163, !tbaa !1597
  call void @llvm.dbg.declare(metadata [16 x double]* %x.i, metadata !1144, metadata !1536), !dbg !2165
  call void @llvm.dbg.declare(metadata [16 x double]* %y.i, metadata !1145, metadata !1536), !dbg !2167
  call void @llvm.dbg.declare(metadata [16 x double]* %z.i, metadata !1146, metadata !1536), !dbg !2168
  br i1 %8, label %12, label %118, !dbg !2169

; <label>:12                                      ; preds = %0
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1136, metadata !1536) #4, !dbg !2170
  call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !1137, metadata !1536) #4, !dbg !2171
  call void @llvm.dbg.value(metadata double* %11, i64 0, metadata !1138, metadata !1536) #4, !dbg !2172
  call void @llvm.dbg.value(metadata double* %1, i64 0, metadata !1139, metadata !1536) #4, !dbg !2173
  %13 = bitcast [16 x double]* %x.i to i8*, !dbg !2174
  call void @llvm.lifetime.start(i64 128, i8* %13) #4, !dbg !2174
  %14 = bitcast [16 x double]* %y.i to i8*, !dbg !2174
  call void @llvm.lifetime.start(i64 128, i8* %14) #4, !dbg !2174
  %15 = bitcast [16 x double]* %z.i to i8*, !dbg !2174
  call void @llvm.lifetime.start(i64 128, i8* %15) #4, !dbg !2174
  %16 = getelementptr inbounds [16 x double]* %x.i, i64 0, i64 0, !dbg !2175
  store double 1.000000e+00, double* %16, align 16, !dbg !2176, !tbaa !1563
  %17 = getelementptr inbounds [16 x double]* %y.i, i64 0, i64 0, !dbg !2177
  store double 1.000000e+00, double* %17, align 16, !dbg !2178, !tbaa !1563
  %18 = getelementptr inbounds [16 x double]* %z.i, i64 0, i64 0, !dbg !2179
  store double 1.000000e+00, double* %18, align 16, !dbg !2180, !tbaa !1563
  %19 = bitcast [3 x double]* %New_Point to i64*, !dbg !2181
  %20 = load i64* %19, align 16, !dbg !2181, !tbaa !1563
  %21 = getelementptr inbounds [16 x double]* %x.i, i64 0, i64 1, !dbg !2182
  %22 = bitcast double* %21 to i64*, !dbg !2183
  store i64 %20, i64* %22, align 8, !dbg !2183, !tbaa !1563
  %23 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 1, !dbg !2184
  %24 = bitcast double* %23 to i64*, !dbg !2184
  %25 = load i64* %24, align 8, !dbg !2184, !tbaa !1563
  %26 = getelementptr inbounds [16 x double]* %y.i, i64 0, i64 1, !dbg !2185
  %27 = bitcast double* %26 to i64*, !dbg !2186
  store i64 %25, i64* %27, align 8, !dbg !2186, !tbaa !1563
  %28 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 2, !dbg !2187
  %29 = bitcast double* %28 to i64*, !dbg !2187
  %30 = load i64* %29, align 16, !dbg !2187, !tbaa !1563
  %31 = getelementptr inbounds [16 x double]* %z.i, i64 0, i64 1, !dbg !2188
  %32 = bitcast double* %31 to i64*, !dbg !2189
  store i64 %30, i64* %32, align 8, !dbg !2189, !tbaa !1563
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !1140, metadata !1536) #4, !dbg !2190
  %33 = bitcast i64 %20 to double, !dbg !2191
  %34 = bitcast i64 %25 to double, !dbg !2191
  %35 = bitcast i64 %30 to double, !dbg !2191
  br label %.lr.ph16.i

.lr.ph16.i:                                       ; preds = %12, %.lr.ph16.i
  %36 = phi double [ %43, %.lr.ph16.i ], [ %35, %12 ], !dbg !2192
  %37 = phi double [ %41, %.lr.ph16.i ], [ %34, %12 ], !dbg !2192
  %38 = phi double [ %39, %.lr.ph16.i ], [ %33, %12 ], !dbg !2192
  %indvars.iv32.i = phi i64 [ %indvars.iv.next33.i, %.lr.ph16.i ], [ 2, %12 ], !dbg !2191
  %39 = fmul double %33, %38, !dbg !2196
  %40 = getelementptr inbounds [16 x double]* %x.i, i64 0, i64 %indvars.iv32.i, !dbg !2197
  store double %39, double* %40, align 8, !dbg !2198, !tbaa !1563
  %41 = fmul double %34, %37, !dbg !2199
  %42 = getelementptr inbounds [16 x double]* %y.i, i64 0, i64 %indvars.iv32.i, !dbg !2200
  store double %41, double* %42, align 8, !dbg !2201, !tbaa !1563
  %43 = fmul double %35, %36, !dbg !2202
  %44 = getelementptr inbounds [16 x double]* %z.i, i64 0, i64 %indvars.iv32.i, !dbg !2203
  store double %43, double* %44, align 8, !dbg !2204, !tbaa !1563
  %indvars.iv.next33.i = add nuw nsw i64 %indvars.iv32.i, 1, !dbg !2205
  %lftr.wideiv7 = trunc i64 %indvars.iv32.i to i32, !dbg !2205
  %exitcond8 = icmp eq i32 %lftr.wideiv7, %7, !dbg !2205
  br i1 %exitcond8, label %._crit_edge17.i, label %.lr.ph16.i, !dbg !2205

._crit_edge17.i:                                  ; preds = %.lr.ph16.i
  call void @llvm.dbg.value(metadata double* %11, i64 0, metadata !1148, metadata !1536) #4, !dbg !2206
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1143, metadata !1536) #4, !dbg !2207
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1180, metadata !1536) #4, !dbg !2208
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !1181, metadata !1536) #4, !dbg !2210
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !1182, metadata !1536) #4, !dbg !2211
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !1183, metadata !1536) #4, !dbg !2212
  %45 = getelementptr inbounds double* %Result, i64 1, !dbg !2213
  %46 = getelementptr inbounds double* %Result, i64 2, !dbg !2214
  call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !1140, metadata !1536) #4, !dbg !2190
  %47 = icmp sgt i32 %7, -1, !dbg !2215
  %48 = bitcast double* %Result to i8*, !dbg !2218
  call void @llvm.memset.p0i8.i64(i8* %48, i8 0, i64 24, i32 8, i1 false) #4, !dbg !2219
  br i1 %47, label %.lr.ph12.i, label %_ZN3povL7normal0EPdiS0_S0_.exit, !dbg !2218

.lr.ph12.i:                                       ; preds = %._crit_edge17.i
  %49 = sext i32 %7 to i64, !dbg !2191
  br label %.lr.ph6.i, !dbg !2218

.lr.ph6.i:                                        ; preds = %._crit_edge7.i, %.lr.ph12.i
  %indvars.iv = phi i32 [ %indvars.iv.next, %._crit_edge7.i ], [ 0, %.lr.ph12.i ]
  %50 = phi double [ %70, %._crit_edge7.i ], [ 0.000000e+00, %.lr.ph12.i ], !dbg !2191
  %51 = phi double [ %100, %._crit_edge7.i ], [ 0.000000e+00, %.lr.ph12.i ], !dbg !2191
  %52 = phi double [ %86, %._crit_edge7.i ], [ 0.000000e+00, %.lr.ph12.i ], !dbg !2191
  %indvars.iv30.i = phi i64 [ %54, %._crit_edge7.i ], [ %49, %.lr.ph12.i ], !dbg !2191
  %indvars.iv24.i = phi i64 [ %indvars.iv.next25.i, %._crit_edge7.i ], [ 0, %.lr.ph12.i ], !dbg !2191
  %term.09.i = phi i64 [ %117, %._crit_edge7.i ], [ 0, %.lr.ph12.i ], !dbg !2191
  %53 = icmp sgt i64 %indvars.iv30.i, 0, !dbg !2220
  %54 = add nsw i64 %indvars.iv30.i, -1, !dbg !2229
  %55 = getelementptr inbounds [16 x double]* %x.i, i64 0, i64 %54, !dbg !2231
  %56 = trunc i64 %indvars.iv30.i to i32, !dbg !2232
  %57 = sitofp i32 %56 to double, !dbg !2232
  %58 = getelementptr inbounds [16 x double]* %x.i, i64 0, i64 %indvars.iv30.i, !dbg !2233
  br label %.lr.ph.i, !dbg !2236

.lr.ph.i:                                         ; preds = %116, %.lr.ph6.i
  %59 = phi double [ %50, %.lr.ph6.i ], [ %70, %116 ], !dbg !2191
  %60 = phi double [ %51, %.lr.ph6.i ], [ %100, %116 ], !dbg !2191
  %61 = phi double [ %52, %.lr.ph6.i ], [ %86, %116 ], !dbg !2191
  %indvars.iv26.i = phi i64 [ %indvars.iv24.i, %.lr.ph6.i ], [ %64, %116 ], !dbg !2191
  %indvars.iv22.i = phi i64 [ 1, %.lr.ph6.i ], [ %indvars.iv.next23.i, %116 ], !dbg !2191
  %indvars.iv18.i = phi i64 [ 0, %.lr.ph6.i ], [ %indvars.iv.next19.i, %116 ], !dbg !2191
  %term.14.i = phi i64 [ %term.09.i, %.lr.ph6.i ], [ %117, %116 ], !dbg !2191
  %62 = getelementptr inbounds [16 x double]* %y.i, i64 0, i64 %indvars.iv26.i, !dbg !2237
  %63 = icmp sgt i64 %indvars.iv26.i, 0, !dbg !2238
  %64 = add nsw i64 %indvars.iv26.i, -1, !dbg !2239
  %65 = getelementptr inbounds [16 x double]* %y.i, i64 0, i64 %64, !dbg !2240
  %66 = trunc i64 %indvars.iv26.i to i32, !dbg !2241
  %67 = sitofp i32 %66 to double, !dbg !2241
  %sext.i = shl i64 %term.14.i, 32, !dbg !2191
  %68 = ashr exact i64 %sext.i, 32, !dbg !2191
  br label %69, !dbg !2242

; <label>:69                                      ; preds = %.thread.i, %.lr.ph.i
  %70 = phi double [ %59, %.lr.ph.i ], [ %115, %.thread.i ], !dbg !2191
  %71 = phi double [ %60, %.lr.ph.i ], [ %100, %.thread.i ], !dbg !2191
  %72 = phi double [ %61, %.lr.ph.i ], [ %86, %.thread.i ], !dbg !2191
  %indvars.iv20.i = phi i64 [ %indvars.iv18.i, %.lr.ph.i ], [ %105, %.thread.i ], !dbg !2191
  %indvars.iv.i = phi i64 [ %68, %.lr.ph.i ], [ %indvars.iv.next41.i, %.thread.i ], !dbg !2191
  br i1 %53, label %73, label %85, !dbg !2243

; <label>:73                                      ; preds = %69
  %74 = load double* %55, align 8, !dbg !2231, !tbaa !1563
  %75 = load double* %62, align 8, !dbg !2237, !tbaa !1563
  %76 = fmul double %74, %75, !dbg !2244
  %77 = getelementptr inbounds [16 x double]* %z.i, i64 0, i64 %indvars.iv20.i, !dbg !2245
  %78 = load double* %77, align 8, !dbg !2245, !tbaa !1563
  %79 = fmul double %76, %78, !dbg !2246
  call void @llvm.dbg.value(metadata double %79, i64 0, metadata !1147, metadata !1536) #4, !dbg !2247
  %80 = getelementptr inbounds double* %11, i64 %indvars.iv.i, !dbg !2248
  %81 = load double* %80, align 8, !dbg !2248, !tbaa !1563
  %82 = fmul double %57, %81, !dbg !2249
  %83 = fmul double %79, %82, !dbg !2250
  %84 = fadd double %72, %83, !dbg !2251
  store double %84, double* %Result, align 8, !dbg !2251, !tbaa !1563
  br label %85, !dbg !2252

; <label>:85                                      ; preds = %73, %69
  %86 = phi double [ %84, %73 ], [ %72, %69 ], !dbg !2191
  br i1 %63, label %87, label %99, !dbg !2253

; <label>:87                                      ; preds = %85
  %88 = load double* %58, align 8, !dbg !2233, !tbaa !1563
  %89 = load double* %65, align 8, !dbg !2240, !tbaa !1563
  %90 = fmul double %88, %89, !dbg !2254
  %91 = getelementptr inbounds [16 x double]* %z.i, i64 0, i64 %indvars.iv20.i, !dbg !2255
  %92 = load double* %91, align 8, !dbg !2255, !tbaa !1563
  %93 = fmul double %90, %92, !dbg !2256
  call void @llvm.dbg.value(metadata double %93, i64 0, metadata !1147, metadata !1536) #4, !dbg !2247
  %94 = getelementptr inbounds double* %11, i64 %indvars.iv.i, !dbg !2257
  %95 = load double* %94, align 8, !dbg !2257, !tbaa !1563
  %96 = fmul double %67, %95, !dbg !2258
  %97 = fmul double %93, %96, !dbg !2259
  %98 = fadd double %71, %97, !dbg !2260
  store double %98, double* %45, align 8, !dbg !2260, !tbaa !1563
  br label %99, !dbg !2261

; <label>:99                                      ; preds = %87, %85
  %100 = phi double [ %98, %87 ], [ %71, %85 ], !dbg !2191
  %101 = icmp sgt i64 %indvars.iv20.i, 0, !dbg !2262
  br i1 %101, label %.thread.i, label %116, !dbg !2264

.thread.i:                                        ; preds = %99
  %102 = load double* %58, align 8, !dbg !2265, !tbaa !1563
  %103 = load double* %62, align 8, !dbg !2267, !tbaa !1563
  %104 = fmul double %102, %103, !dbg !2268
  %105 = add nsw i64 %indvars.iv20.i, -1, !dbg !2269
  %106 = getelementptr inbounds [16 x double]* %z.i, i64 0, i64 %105, !dbg !2270
  %107 = load double* %106, align 8, !dbg !2270, !tbaa !1563
  %108 = fmul double %104, %107, !dbg !2271
  call void @llvm.dbg.value(metadata double %108, i64 0, metadata !1147, metadata !1536) #4, !dbg !2247
  %109 = trunc i64 %indvars.iv20.i to i32, !dbg !2272
  %110 = sitofp i32 %109 to double, !dbg !2272
  %111 = getelementptr inbounds double* %11, i64 %indvars.iv.i, !dbg !2273
  %112 = load double* %111, align 8, !dbg !2273, !tbaa !1563
  %113 = fmul double %110, %112, !dbg !2274
  %114 = fmul double %108, %113, !dbg !2275
  %115 = fadd double %70, %114, !dbg !2276
  store double %115, double* %46, align 8, !dbg !2276, !tbaa !1563
  %indvars.iv.next41.i = add nsw i64 %indvars.iv.i, 1, !dbg !2242
  br label %69, !dbg !2242

; <label>:116                                     ; preds = %99
  %117 = add i64 %68, %indvars.iv22.i, !dbg !2242
  %indvars.iv.next19.i = add nuw nsw i64 %indvars.iv18.i, 1, !dbg !2236
  %indvars.iv.next23.i = add nuw nsw i64 %indvars.iv22.i, 1, !dbg !2236
  %lftr.wideiv = trunc i64 %indvars.iv18.i to i32, !dbg !2236
  %exitcond = icmp eq i32 %lftr.wideiv, %indvars.iv, !dbg !2236
  br i1 %exitcond, label %._crit_edge7.i, label %.lr.ph.i, !dbg !2236

._crit_edge7.i:                                   ; preds = %116
  %indvars.iv.next25.i = add nuw nsw i64 %indvars.iv24.i, 1, !dbg !2218
  %indvars.iv.next = add nuw i32 %indvars.iv, 1, !dbg !2218
  br i1 %53, label %.lr.ph6.i, label %_ZN3povL7normal0EPdiS0_S0_.exit, !dbg !2218

_ZN3povL7normal0EPdiS0_S0_.exit:                  ; preds = %._crit_edge7.i, %._crit_edge17.i
  call void @llvm.lifetime.end(i64 128, i8* %15) #4, !dbg !2277
  call void @llvm.lifetime.end(i64 128, i8* %14) #4, !dbg !2277
  call void @llvm.lifetime.end(i64 128, i8* %13) #4, !dbg !2277
  br label %_ZN3povL7normal1EPdiS0_S0_.exit, !dbg !2278

; <label>:118                                     ; preds = %0
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1151, metadata !1536), !dbg !2279
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !1152, metadata !1536), !dbg !2282
  tail call void @llvm.dbg.value(metadata double* %11, i64 0, metadata !1153, metadata !1536), !dbg !2283
  tail call void @llvm.dbg.value(metadata double* %1, i64 0, metadata !1154, metadata !1536), !dbg !2284
  tail call void @llvm.dbg.value(metadata double* %11, i64 0, metadata !1164, metadata !1536), !dbg !2285
  %119 = load double* %1, align 16, !dbg !2286, !tbaa !1563
  tail call void @llvm.dbg.value(metadata double %119, i64 0, metadata !1155, metadata !1536), !dbg !2287
  %120 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 1, !dbg !2288
  %121 = load double* %120, align 8, !dbg !2288, !tbaa !1563
  tail call void @llvm.dbg.value(metadata double %121, i64 0, metadata !1156, metadata !1536), !dbg !2289
  %122 = getelementptr inbounds [3 x double]* %New_Point, i64 0, i64 2, !dbg !2290
  %123 = load double* %122, align 16, !dbg !2290, !tbaa !1563
  tail call void @llvm.dbg.value(metadata double %123, i64 0, metadata !1157, metadata !1536), !dbg !2291
  switch i32 %7, label %._ZN3povL7normal1EPdiS0_S0_.exit_crit_edge [
    i32 1, label %124
    i32 2, label %134
    i32 3, label %178
    i32 4, label %295
  ], !dbg !2292

._ZN3povL7normal1EPdiS0_S0_.exit_crit_edge:       ; preds = %118
  %.pre = getelementptr inbounds double* %Result, i64 1, !dbg !2293
  %.pre9 = getelementptr inbounds double* %Result, i64 2, !dbg !2295
  br label %_ZN3povL7normal1EPdiS0_S0_.exit, !dbg !2292

; <label>:124                                     ; preds = %118
  %125 = bitcast double* %11 to <2 x i64>*, !dbg !2296
  %126 = load <2 x i64>* %125, align 8, !dbg !2296, !tbaa !1563
  %127 = getelementptr inbounds double* %11, i64 2, !dbg !2298
  %128 = bitcast double* %127 to i64*, !dbg !2298
  %129 = load i64* %128, align 8, !dbg !2298, !tbaa !1563
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1180, metadata !1536), !dbg !2299
  %130 = getelementptr inbounds double* %Result, i64 1, !dbg !2301
  %131 = bitcast double* %Result to <2 x i64>*, !dbg !2302
  store <2 x i64> %126, <2 x i64>* %131, align 8, !dbg !2302, !tbaa !1563
  %132 = getelementptr inbounds double* %Result, i64 2, !dbg !2303
  %133 = bitcast double* %132 to i64*, !dbg !2304
  store i64 %129, i64* %133, align 8, !dbg !2304, !tbaa !1563
  br label %_ZN3povL7normal1EPdiS0_S0_.exit, !dbg !2305

; <label>:134                                     ; preds = %118
  %135 = load double* %11, align 8, !dbg !2306, !tbaa !1563
  %136 = fmul double %135, 2.000000e+00, !dbg !2307
  %137 = fmul double %119, %136, !dbg !2308
  %138 = getelementptr inbounds double* %11, i64 1, !dbg !2309
  %139 = load double* %138, align 8, !dbg !2309, !tbaa !1563
  %140 = fmul double %121, %139, !dbg !2310
  %141 = fadd double %137, %140, !dbg !2311
  %142 = getelementptr inbounds double* %11, i64 2, !dbg !2312
  %143 = load double* %142, align 8, !dbg !2312, !tbaa !1563
  %144 = fmul double %123, %143, !dbg !2313
  %145 = fadd double %141, %144, !dbg !2314
  %146 = getelementptr inbounds double* %11, i64 3, !dbg !2315
  %147 = load double* %146, align 8, !dbg !2315, !tbaa !1563
  %148 = fadd double %147, %145, !dbg !2316
  store double %148, double* %Result, align 8, !dbg !2317, !tbaa !1563
  %149 = load double* %138, align 8, !dbg !2318, !tbaa !1563
  %150 = fmul double %119, %149, !dbg !2319
  %151 = getelementptr inbounds double* %11, i64 4, !dbg !2320
  %152 = load double* %151, align 8, !dbg !2320, !tbaa !1563
  %153 = fmul double %152, 2.000000e+00, !dbg !2321
  %154 = fmul double %121, %153, !dbg !2322
  %155 = fadd double %150, %154, !dbg !2323
  %156 = getelementptr inbounds double* %11, i64 5, !dbg !2324
  %157 = load double* %156, align 8, !dbg !2324, !tbaa !1563
  %158 = fmul double %123, %157, !dbg !2325
  %159 = fadd double %158, %155, !dbg !2326
  %160 = getelementptr inbounds double* %11, i64 6, !dbg !2327
  %161 = load double* %160, align 8, !dbg !2327, !tbaa !1563
  %162 = fadd double %161, %159, !dbg !2328
  %163 = getelementptr inbounds double* %Result, i64 1, !dbg !2329
  store double %162, double* %163, align 8, !dbg !2330, !tbaa !1563
  %164 = load double* %142, align 8, !dbg !2331, !tbaa !1563
  %165 = fmul double %119, %164, !dbg !2332
  %166 = load double* %156, align 8, !dbg !2333, !tbaa !1563
  %167 = fmul double %121, %166, !dbg !2334
  %168 = fadd double %165, %167, !dbg !2335
  %169 = getelementptr inbounds double* %11, i64 7, !dbg !2336
  %170 = load double* %169, align 8, !dbg !2336, !tbaa !1563
  %171 = fmul double %170, 2.000000e+00, !dbg !2337
  %172 = fmul double %123, %171, !dbg !2338
  %173 = fadd double %168, %172, !dbg !2339
  %174 = getelementptr inbounds double* %11, i64 8, !dbg !2340
  %175 = load double* %174, align 8, !dbg !2340, !tbaa !1563
  %176 = fadd double %175, %173, !dbg !2341
  %177 = getelementptr inbounds double* %Result, i64 2, !dbg !2342
  store double %176, double* %177, align 8, !dbg !2343, !tbaa !1563
  br label %_ZN3povL7normal1EPdiS0_S0_.exit, !dbg !2344

; <label>:178                                     ; preds = %118
  %179 = fmul double %119, %119, !dbg !2345
  tail call void @llvm.dbg.value(metadata double %179, i64 0, metadata !1158, metadata !1536), !dbg !2346
  %180 = fmul double %121, %121, !dbg !2347
  tail call void @llvm.dbg.value(metadata double %180, i64 0, metadata !1159, metadata !1536), !dbg !2348
  %181 = fmul double %123, %123, !dbg !2349
  tail call void @llvm.dbg.value(metadata double %181, i64 0, metadata !1160, metadata !1536), !dbg !2350
  %182 = load double* %11, align 8, !dbg !2351, !tbaa !1563
  %183 = fmul double %182, 3.000000e+00, !dbg !2352
  %184 = fmul double %179, %183, !dbg !2353
  %185 = fmul double %119, 2.000000e+00, !dbg !2354
  %186 = getelementptr inbounds double* %11, i64 1, !dbg !2355
  %187 = load double* %186, align 8, !dbg !2355, !tbaa !1563
  %188 = fmul double %121, %187, !dbg !2356
  %189 = getelementptr inbounds double* %11, i64 2, !dbg !2357
  %190 = load double* %189, align 8, !dbg !2357, !tbaa !1563
  %191 = fmul double %123, %190, !dbg !2358
  %192 = fadd double %188, %191, !dbg !2359
  %193 = getelementptr inbounds double* %11, i64 3, !dbg !2360
  %194 = load double* %193, align 8, !dbg !2360, !tbaa !1563
  %195 = fadd double %194, %192, !dbg !2361
  %196 = fmul double %185, %195, !dbg !2362
  %197 = fadd double %184, %196, !dbg !2363
  %198 = getelementptr inbounds double* %11, i64 4, !dbg !2364
  %199 = load double* %198, align 8, !dbg !2364, !tbaa !1563
  %200 = fmul double %180, %199, !dbg !2365
  %201 = fadd double %200, %197, !dbg !2366
  %202 = getelementptr inbounds double* %11, i64 5, !dbg !2367
  %203 = load double* %202, align 8, !dbg !2367, !tbaa !1563
  %204 = fmul double %123, %203, !dbg !2368
  %205 = getelementptr inbounds double* %11, i64 6, !dbg !2369
  %206 = load double* %205, align 8, !dbg !2369, !tbaa !1563
  %207 = fadd double %204, %206, !dbg !2370
  %208 = fmul double %121, %207, !dbg !2371
  %209 = fadd double %201, %208, !dbg !2372
  %210 = getelementptr inbounds double* %11, i64 7, !dbg !2373
  %211 = load double* %210, align 8, !dbg !2373, !tbaa !1563
  %212 = fmul double %181, %211, !dbg !2374
  %213 = fadd double %212, %209, !dbg !2375
  %214 = getelementptr inbounds double* %11, i64 8, !dbg !2376
  %215 = load double* %214, align 8, !dbg !2376, !tbaa !1563
  %216 = fmul double %123, %215, !dbg !2377
  %217 = fadd double %216, %213, !dbg !2378
  %218 = getelementptr inbounds double* %11, i64 9, !dbg !2379
  %219 = load double* %218, align 8, !dbg !2379, !tbaa !1563
  %220 = fadd double %219, %217, !dbg !2380
  store double %220, double* %Result, align 8, !dbg !2381, !tbaa !1563
  %221 = load double* %186, align 8, !dbg !2382, !tbaa !1563
  %222 = fmul double %179, %221, !dbg !2383
  %223 = load double* %198, align 8, !dbg !2384, !tbaa !1563
  %224 = fmul double %223, 2.000000e+00, !dbg !2385
  %225 = fmul double %121, %224, !dbg !2386
  %226 = load double* %202, align 8, !dbg !2387, !tbaa !1563
  %227 = fmul double %123, %226, !dbg !2388
  %228 = fadd double %225, %227, !dbg !2389
  %229 = load double* %205, align 8, !dbg !2390, !tbaa !1563
  %230 = fadd double %229, %228, !dbg !2391
  %231 = fmul double %119, %230, !dbg !2392
  %232 = fadd double %222, %231, !dbg !2393
  %233 = getelementptr inbounds double* %11, i64 10, !dbg !2394
  %234 = load double* %233, align 8, !dbg !2394, !tbaa !1563
  %235 = fmul double %234, 3.000000e+00, !dbg !2395
  %236 = fmul double %180, %235, !dbg !2396
  %237 = fadd double %236, %232, !dbg !2397
  %238 = fmul double %121, 2.000000e+00, !dbg !2398
  %239 = getelementptr inbounds double* %11, i64 11, !dbg !2399
  %240 = load double* %239, align 8, !dbg !2399, !tbaa !1563
  %241 = fmul double %123, %240, !dbg !2400
  %242 = getelementptr inbounds double* %11, i64 12, !dbg !2401
  %243 = load double* %242, align 8, !dbg !2401, !tbaa !1563
  %244 = fadd double %241, %243, !dbg !2402
  %245 = fmul double %238, %244, !dbg !2403
  %246 = fadd double %237, %245, !dbg !2404
  %247 = getelementptr inbounds double* %11, i64 13, !dbg !2405
  %248 = load double* %247, align 8, !dbg !2405, !tbaa !1563
  %249 = fmul double %181, %248, !dbg !2406
  %250 = fadd double %249, %246, !dbg !2407
  %251 = getelementptr inbounds double* %11, i64 14, !dbg !2408
  %252 = load double* %251, align 8, !dbg !2408, !tbaa !1563
  %253 = fmul double %123, %252, !dbg !2409
  %254 = fadd double %253, %250, !dbg !2410
  %255 = getelementptr inbounds double* %11, i64 15, !dbg !2411
  %256 = load double* %255, align 8, !dbg !2411, !tbaa !1563
  %257 = fadd double %256, %254, !dbg !2412
  %258 = getelementptr inbounds double* %Result, i64 1, !dbg !2413
  store double %257, double* %258, align 8, !dbg !2414, !tbaa !1563
  %259 = load double* %189, align 8, !dbg !2415, !tbaa !1563
  %260 = fmul double %179, %259, !dbg !2416
  %261 = load double* %202, align 8, !dbg !2417, !tbaa !1563
  %262 = fmul double %121, %261, !dbg !2418
  %263 = load double* %210, align 8, !dbg !2419, !tbaa !1563
  %264 = fmul double %263, 2.000000e+00, !dbg !2420
  %265 = fmul double %123, %264, !dbg !2421
  %266 = fadd double %262, %265, !dbg !2422
  %267 = load double* %214, align 8, !dbg !2423, !tbaa !1563
  %268 = fadd double %267, %266, !dbg !2424
  %269 = fmul double %119, %268, !dbg !2425
  %270 = fadd double %260, %269, !dbg !2426
  %271 = load double* %239, align 8, !dbg !2427, !tbaa !1563
  %272 = fmul double %180, %271, !dbg !2428
  %273 = fadd double %272, %270, !dbg !2429
  %274 = load double* %247, align 8, !dbg !2430, !tbaa !1563
  %275 = fmul double %274, 2.000000e+00, !dbg !2431
  %276 = fmul double %123, %275, !dbg !2432
  %277 = load double* %251, align 8, !dbg !2433, !tbaa !1563
  %278 = fadd double %277, %276, !dbg !2434
  %279 = fmul double %121, %278, !dbg !2435
  %280 = fadd double %273, %279, !dbg !2436
  %281 = getelementptr inbounds double* %11, i64 16, !dbg !2437
  %282 = load double* %281, align 8, !dbg !2437, !tbaa !1563
  %283 = fmul double %282, 3.000000e+00, !dbg !2438
  %284 = fmul double %181, %283, !dbg !2439
  %285 = fadd double %284, %280, !dbg !2440
  %286 = getelementptr inbounds double* %11, i64 17, !dbg !2441
  %287 = load double* %286, align 8, !dbg !2441, !tbaa !1563
  %288 = fmul double %287, 2.000000e+00, !dbg !2442
  %289 = fmul double %123, %288, !dbg !2443
  %290 = fadd double %289, %285, !dbg !2444
  %291 = getelementptr inbounds double* %11, i64 18, !dbg !2445
  %292 = load double* %291, align 8, !dbg !2445, !tbaa !1563
  %293 = fadd double %292, %290, !dbg !2446
  %294 = getelementptr inbounds double* %Result, i64 2, !dbg !2447
  store double %293, double* %294, align 8, !dbg !2448, !tbaa !1563
  br label %_ZN3povL7normal1EPdiS0_S0_.exit, !dbg !2449

; <label>:295                                     ; preds = %118
  %296 = fmul double %119, %119, !dbg !2450
  tail call void @llvm.dbg.value(metadata double %296, i64 0, metadata !1158, metadata !1536), !dbg !2346
  %297 = fmul double %121, %121, !dbg !2451
  tail call void @llvm.dbg.value(metadata double %297, i64 0, metadata !1159, metadata !1536), !dbg !2348
  %298 = fmul double %123, %123, !dbg !2452
  tail call void @llvm.dbg.value(metadata double %298, i64 0, metadata !1160, metadata !1536), !dbg !2350
  %299 = fmul double %119, %296, !dbg !2453
  tail call void @llvm.dbg.value(metadata double %299, i64 0, metadata !1161, metadata !1536), !dbg !2454
  %300 = fmul double %121, %297, !dbg !2455
  tail call void @llvm.dbg.value(metadata double %300, i64 0, metadata !1162, metadata !1536), !dbg !2456
  %301 = fmul double %123, %298, !dbg !2457
  tail call void @llvm.dbg.value(metadata double %301, i64 0, metadata !1163, metadata !1536), !dbg !2458
  %302 = load double* %11, align 8, !dbg !2459, !tbaa !1563
  %303 = fmul double %302, 4.000000e+00, !dbg !2460
  %304 = fmul double %299, %303, !dbg !2461
  %305 = fmul double %296, 3.000000e+00, !dbg !2462
  %306 = getelementptr inbounds double* %11, i64 1, !dbg !2463
  %307 = load double* %306, align 8, !dbg !2463, !tbaa !1563
  %308 = fmul double %121, %307, !dbg !2464
  %309 = getelementptr inbounds double* %11, i64 2, !dbg !2465
  %310 = load double* %309, align 8, !dbg !2465, !tbaa !1563
  %311 = fmul double %123, %310, !dbg !2466
  %312 = fadd double %308, %311, !dbg !2467
  %313 = getelementptr inbounds double* %11, i64 3, !dbg !2468
  %314 = load double* %313, align 8, !dbg !2468, !tbaa !1563
  %315 = fadd double %314, %312, !dbg !2469
  %316 = fmul double %305, %315, !dbg !2470
  %317 = fadd double %304, %316, !dbg !2471
  %318 = fmul double %119, 2.000000e+00, !dbg !2472
  %319 = getelementptr inbounds double* %11, i64 4, !dbg !2473
  %320 = load double* %319, align 8, !dbg !2473, !tbaa !1563
  %321 = fmul double %297, %320, !dbg !2474
  %322 = getelementptr inbounds double* %11, i64 5, !dbg !2475
  %323 = load double* %322, align 8, !dbg !2475, !tbaa !1563
  %324 = fmul double %123, %323, !dbg !2476
  %325 = getelementptr inbounds double* %11, i64 6, !dbg !2477
  %326 = load double* %325, align 8, !dbg !2477, !tbaa !1563
  %327 = fadd double %324, %326, !dbg !2478
  %328 = fmul double %121, %327, !dbg !2479
  %329 = fadd double %321, %328, !dbg !2480
  %330 = getelementptr inbounds double* %11, i64 7, !dbg !2481
  %331 = load double* %330, align 8, !dbg !2481, !tbaa !1563
  %332 = fmul double %298, %331, !dbg !2482
  %333 = fadd double %332, %329, !dbg !2483
  %334 = getelementptr inbounds double* %11, i64 8, !dbg !2484
  %335 = load double* %334, align 8, !dbg !2484, !tbaa !1563
  %336 = fmul double %123, %335, !dbg !2485
  %337 = fadd double %336, %333, !dbg !2486
  %338 = getelementptr inbounds double* %11, i64 9, !dbg !2487
  %339 = load double* %338, align 8, !dbg !2487, !tbaa !1563
  %340 = fadd double %339, %337, !dbg !2488
  %341 = fmul double %318, %340, !dbg !2489
  %342 = fadd double %317, %341, !dbg !2490
  %343 = getelementptr inbounds double* %11, i64 10, !dbg !2491
  %344 = load double* %343, align 8, !dbg !2491, !tbaa !1563
  %345 = fmul double %300, %344, !dbg !2492
  %346 = fadd double %345, %342, !dbg !2493
  %347 = getelementptr inbounds double* %11, i64 11, !dbg !2494
  %348 = load double* %347, align 8, !dbg !2494, !tbaa !1563
  %349 = fmul double %123, %348, !dbg !2495
  %350 = getelementptr inbounds double* %11, i64 12, !dbg !2496
  %351 = load double* %350, align 8, !dbg !2496, !tbaa !1563
  %352 = fadd double %349, %351, !dbg !2497
  %353 = fmul double %297, %352, !dbg !2498
  %354 = fadd double %353, %346, !dbg !2499
  %355 = getelementptr inbounds double* %11, i64 13, !dbg !2500
  %356 = load double* %355, align 8, !dbg !2500, !tbaa !1563
  %357 = fmul double %298, %356, !dbg !2501
  %358 = getelementptr inbounds double* %11, i64 14, !dbg !2502
  %359 = load double* %358, align 8, !dbg !2502, !tbaa !1563
  %360 = fmul double %123, %359, !dbg !2503
  %361 = fadd double %357, %360, !dbg !2504
  %362 = getelementptr inbounds double* %11, i64 15, !dbg !2505
  %363 = load double* %362, align 8, !dbg !2505, !tbaa !1563
  %364 = fadd double %363, %361, !dbg !2506
  %365 = fmul double %121, %364, !dbg !2507
  %366 = fadd double %354, %365, !dbg !2508
  %367 = getelementptr inbounds double* %11, i64 16, !dbg !2509
  %368 = load double* %367, align 8, !dbg !2509, !tbaa !1563
  %369 = fmul double %301, %368, !dbg !2510
  %370 = fadd double %369, %366, !dbg !2511
  %371 = getelementptr inbounds double* %11, i64 17, !dbg !2512
  %372 = load double* %371, align 8, !dbg !2512, !tbaa !1563
  %373 = fmul double %298, %372, !dbg !2513
  %374 = fadd double %373, %370, !dbg !2514
  %375 = getelementptr inbounds double* %11, i64 18, !dbg !2515
  %376 = load double* %375, align 8, !dbg !2515, !tbaa !1563
  %377 = fmul double %123, %376, !dbg !2516
  %378 = fadd double %377, %374, !dbg !2517
  %379 = getelementptr inbounds double* %11, i64 19, !dbg !2518
  %380 = load double* %379, align 8, !dbg !2518, !tbaa !1563
  %381 = fadd double %380, %378, !dbg !2519
  store double %381, double* %Result, align 8, !dbg !2520, !tbaa !1563
  %382 = load double* %306, align 8, !dbg !2521, !tbaa !1563
  %383 = fmul double %299, %382, !dbg !2522
  %384 = load double* %319, align 8, !dbg !2523, !tbaa !1563
  %385 = fmul double %384, 2.000000e+00, !dbg !2524
  %386 = fmul double %121, %385, !dbg !2525
  %387 = load double* %322, align 8, !dbg !2526, !tbaa !1563
  %388 = fmul double %123, %387, !dbg !2527
  %389 = fadd double %386, %388, !dbg !2528
  %390 = load double* %325, align 8, !dbg !2529, !tbaa !1563
  %391 = fadd double %390, %389, !dbg !2530
  %392 = fmul double %296, %391, !dbg !2531
  %393 = fadd double %383, %392, !dbg !2532
  %394 = load double* %343, align 8, !dbg !2533, !tbaa !1563
  %395 = fmul double %394, 3.000000e+00, !dbg !2534
  %396 = fmul double %297, %395, !dbg !2535
  %397 = fmul double %121, 2.000000e+00, !dbg !2536
  %398 = load double* %347, align 8, !dbg !2537, !tbaa !1563
  %399 = fmul double %123, %398, !dbg !2538
  %400 = load double* %350, align 8, !dbg !2539, !tbaa !1563
  %401 = fadd double %399, %400, !dbg !2540
  %402 = fmul double %397, %401, !dbg !2541
  %403 = fadd double %396, %402, !dbg !2542
  %404 = load double* %355, align 8, !dbg !2543, !tbaa !1563
  %405 = fmul double %298, %404, !dbg !2544
  %406 = fadd double %405, %403, !dbg !2545
  %407 = load double* %358, align 8, !dbg !2546, !tbaa !1563
  %408 = fmul double %123, %407, !dbg !2547
  %409 = fadd double %408, %406, !dbg !2548
  %410 = load double* %362, align 8, !dbg !2549, !tbaa !1563
  %411 = fadd double %410, %409, !dbg !2550
  %412 = fmul double %119, %411, !dbg !2551
  %413 = fadd double %393, %412, !dbg !2552
  %414 = getelementptr inbounds double* %11, i64 20, !dbg !2553
  %415 = load double* %414, align 8, !dbg !2553, !tbaa !1563
  %416 = fmul double %415, 4.000000e+00, !dbg !2554
  %417 = fmul double %300, %416, !dbg !2555
  %418 = fadd double %417, %413, !dbg !2556
  %419 = fmul double %297, 3.000000e+00, !dbg !2557
  %420 = getelementptr inbounds double* %11, i64 21, !dbg !2558
  %421 = load double* %420, align 8, !dbg !2558, !tbaa !1563
  %422 = fmul double %123, %421, !dbg !2559
  %423 = getelementptr inbounds double* %11, i64 22, !dbg !2560
  %424 = load double* %423, align 8, !dbg !2560, !tbaa !1563
  %425 = fadd double %422, %424, !dbg !2561
  %426 = fmul double %419, %425, !dbg !2562
  %427 = fadd double %426, %418, !dbg !2563
  %428 = getelementptr inbounds double* %11, i64 23, !dbg !2564
  %429 = load double* %428, align 8, !dbg !2564, !tbaa !1563
  %430 = fmul double %298, %429, !dbg !2565
  %431 = getelementptr inbounds double* %11, i64 24, !dbg !2566
  %432 = load double* %431, align 8, !dbg !2566, !tbaa !1563
  %433 = fmul double %123, %432, !dbg !2567
  %434 = fadd double %430, %433, !dbg !2568
  %435 = getelementptr inbounds double* %11, i64 25, !dbg !2569
  %436 = load double* %435, align 8, !dbg !2569, !tbaa !1563
  %437 = fadd double %436, %434, !dbg !2570
  %438 = fmul double %397, %437, !dbg !2571
  %439 = fadd double %427, %438, !dbg !2572
  %440 = getelementptr inbounds double* %11, i64 26, !dbg !2573
  %441 = load double* %440, align 8, !dbg !2573, !tbaa !1563
  %442 = fmul double %301, %441, !dbg !2574
  %443 = fadd double %442, %439, !dbg !2575
  %444 = getelementptr inbounds double* %11, i64 27, !dbg !2576
  %445 = load double* %444, align 8, !dbg !2576, !tbaa !1563
  %446 = fmul double %298, %445, !dbg !2577
  %447 = fadd double %446, %443, !dbg !2578
  %448 = getelementptr inbounds double* %11, i64 28, !dbg !2579
  %449 = load double* %448, align 8, !dbg !2579, !tbaa !1563
  %450 = fmul double %123, %449, !dbg !2580
  %451 = fadd double %450, %447, !dbg !2581
  %452 = getelementptr inbounds double* %11, i64 29, !dbg !2582
  %453 = load double* %452, align 8, !dbg !2582, !tbaa !1563
  %454 = fadd double %453, %451, !dbg !2583
  %455 = getelementptr inbounds double* %Result, i64 1, !dbg !2584
  store double %454, double* %455, align 8, !dbg !2585, !tbaa !1563
  %456 = load double* %309, align 8, !dbg !2586, !tbaa !1563
  %457 = fmul double %299, %456, !dbg !2587
  %458 = load double* %322, align 8, !dbg !2588, !tbaa !1563
  %459 = fmul double %121, %458, !dbg !2589
  %460 = load double* %330, align 8, !dbg !2590, !tbaa !1563
  %461 = fmul double %460, 2.000000e+00, !dbg !2591
  %462 = fmul double %123, %461, !dbg !2592
  %463 = fadd double %459, %462, !dbg !2593
  %464 = load double* %334, align 8, !dbg !2594, !tbaa !1563
  %465 = fadd double %464, %463, !dbg !2595
  %466 = fmul double %296, %465, !dbg !2596
  %467 = fadd double %457, %466, !dbg !2597
  %468 = load double* %347, align 8, !dbg !2598, !tbaa !1563
  %469 = fmul double %297, %468, !dbg !2599
  %470 = load double* %355, align 8, !dbg !2600, !tbaa !1563
  %471 = fmul double %470, 2.000000e+00, !dbg !2601
  %472 = fmul double %123, %471, !dbg !2602
  %473 = load double* %358, align 8, !dbg !2603, !tbaa !1563
  %474 = fadd double %473, %472, !dbg !2604
  %475 = fmul double %121, %474, !dbg !2605
  %476 = fadd double %469, %475, !dbg !2606
  %477 = load double* %367, align 8, !dbg !2607, !tbaa !1563
  %478 = fmul double %477, 3.000000e+00, !dbg !2608
  %479 = fmul double %298, %478, !dbg !2609
  %480 = fadd double %479, %476, !dbg !2610
  %481 = load double* %371, align 8, !dbg !2611, !tbaa !1563
  %482 = fmul double %481, 2.000000e+00, !dbg !2612
  %483 = fmul double %123, %482, !dbg !2613
  %484 = fadd double %483, %480, !dbg !2614
  %485 = load double* %375, align 8, !dbg !2615, !tbaa !1563
  %486 = fadd double %485, %484, !dbg !2616
  %487 = fmul double %119, %486, !dbg !2617
  %488 = fadd double %467, %487, !dbg !2618
  %489 = load double* %420, align 8, !dbg !2619, !tbaa !1563
  %490 = fmul double %300, %489, !dbg !2620
  %491 = fadd double %490, %488, !dbg !2621
  %492 = load double* %428, align 8, !dbg !2622, !tbaa !1563
  %493 = fmul double %492, 2.000000e+00, !dbg !2623
  %494 = fmul double %123, %493, !dbg !2624
  %495 = load double* %431, align 8, !dbg !2625, !tbaa !1563
  %496 = fadd double %495, %494, !dbg !2626
  %497 = fmul double %297, %496, !dbg !2627
  %498 = fadd double %497, %491, !dbg !2628
  %499 = load double* %440, align 8, !dbg !2629, !tbaa !1563
  %500 = fmul double %499, 3.000000e+00, !dbg !2630
  %501 = fmul double %298, %500, !dbg !2631
  %502 = load double* %444, align 8, !dbg !2632, !tbaa !1563
  %503 = fmul double %502, 2.000000e+00, !dbg !2633
  %504 = fmul double %123, %503, !dbg !2634
  %505 = fadd double %501, %504, !dbg !2635
  %506 = load double* %448, align 8, !dbg !2636, !tbaa !1563
  %507 = fadd double %506, %505, !dbg !2637
  %508 = fmul double %121, %507, !dbg !2638
  %509 = fadd double %498, %508, !dbg !2639
  %510 = getelementptr inbounds double* %11, i64 30, !dbg !2640
  %511 = load double* %510, align 8, !dbg !2640, !tbaa !1563
  %512 = fmul double %511, 4.000000e+00, !dbg !2641
  %513 = fmul double %301, %512, !dbg !2642
  %514 = fadd double %513, %509, !dbg !2643
  %515 = getelementptr inbounds double* %11, i64 31, !dbg !2644
  %516 = load double* %515, align 8, !dbg !2644, !tbaa !1563
  %517 = fmul double %516, 3.000000e+00, !dbg !2645
  %518 = fmul double %298, %517, !dbg !2646
  %519 = fadd double %518, %514, !dbg !2647
  %520 = getelementptr inbounds double* %11, i64 32, !dbg !2648
  %521 = load double* %520, align 8, !dbg !2648, !tbaa !1563
  %522 = fmul double %521, 2.000000e+00, !dbg !2649
  %523 = fmul double %123, %522, !dbg !2650
  %524 = fadd double %523, %519, !dbg !2651
  %525 = getelementptr inbounds double* %11, i64 33, !dbg !2652
  %526 = load double* %525, align 8, !dbg !2652, !tbaa !1563
  %527 = fadd double %526, %524, !dbg !2653
  %528 = getelementptr inbounds double* %Result, i64 2, !dbg !2654
  store double %527, double* %528, align 8, !dbg !2655, !tbaa !1563
  br label %_ZN3povL7normal1EPdiS0_S0_.exit, !dbg !2656

_ZN3povL7normal1EPdiS0_S0_.exit:                  ; preds = %._ZN3povL7normal1EPdiS0_S0_.exit_crit_edge, %295, %178, %134, %124, %_ZN3povL7normal0EPdiS0_S0_.exit
  %.pre-phi10 = phi double* [ %.pre9, %._ZN3povL7normal1EPdiS0_S0_.exit_crit_edge ], [ %528, %295 ], [ %294, %178 ], [ %177, %134 ], [ %132, %124 ], [ %46, %_ZN3povL7normal0EPdiS0_S0_.exit ], !dbg !2295
  %.pre-phi = phi double* [ %.pre, %._ZN3povL7normal1EPdiS0_S0_.exit_crit_edge ], [ %455, %295 ], [ %258, %178 ], [ %163, %134 ], [ %130, %124 ], [ %45, %_ZN3povL7normal0EPdiS0_S0_.exit ], !dbg !2293
  %529 = load %"struct.pov::Transform_Struct"** %3, align 8, !dbg !2657, !tbaa !1547
  call void @_ZN3pov12MTransNormalEPdS0_PNS_16Transform_StructE(double* %Result, double* %Result, %"struct.pov::Transform_Struct"* %529) #6, !dbg !2658
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1170, metadata !1536), !dbg !2659
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1171, metadata !1536), !dbg !2660
  %530 = load double* %Result, align 8, !dbg !2661, !tbaa !1563
  %531 = fmul double %530, %530, !dbg !2662
  %532 = load double* %.pre-phi, align 8, !dbg !2293, !tbaa !1563
  %533 = fmul double %532, %532, !dbg !2663
  %534 = fadd double %531, %533, !dbg !2664
  %535 = load double* %.pre-phi10, align 8, !dbg !2295, !tbaa !1563
  %536 = fmul double %535, %535, !dbg !2665
  %537 = fadd double %534, %536, !dbg !2666
  call void @llvm.dbg.value(metadata double %537, i64 0, metadata !1169, metadata !1536), !dbg !2667
  call void @llvm.dbg.value(metadata double %537, i64 0, metadata !1129, metadata !1536), !dbg !2668
  call void @llvm.dbg.value(metadata double %537, i64 0, metadata !1129, metadata !1536), !dbg !2668
  %538 = fcmp ogt double %537, 0.000000e+00, !dbg !2669
  br i1 %538, label %539, label %545, !dbg !2671

; <label>:539                                     ; preds = %_ZN3povL7normal1EPdiS0_S0_.exit
  %540 = call double @sqrt(double %537) #7, !dbg !2672
  %541 = fdiv double 1.000000e+00, %540, !dbg !2674
  call void @llvm.dbg.value(metadata double %541, i64 0, metadata !1129, metadata !1536), !dbg !2668
  call void @llvm.dbg.value(metadata double %541, i64 0, metadata !1169, metadata !1536), !dbg !2667
  call void @llvm.dbg.value(metadata double %541, i64 0, metadata !1129, metadata !1536), !dbg !2668
  call void @llvm.dbg.value(metadata double %541, i64 0, metadata !1129, metadata !1536), !dbg !2668
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1174, metadata !1536), !dbg !2675
  tail call void @llvm.dbg.value(metadata double %541, i64 0, metadata !1175, metadata !1536), !dbg !2677
  %542 = fmul double %530, %541, !dbg !2678
  store double %542, double* %Result, align 8, !dbg !2678, !tbaa !1563
  %543 = fmul double %541, %532, !dbg !2679
  store double %543, double* %.pre-phi, align 8, !dbg !2679, !tbaa !1563
  %544 = fmul double %541, %535, !dbg !2680
  br label %546, !dbg !2681

; <label>:545                                     ; preds = %_ZN3povL7normal1EPdiS0_S0_.exit
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1180, metadata !1536), !dbg !2682
  tail call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !1181, metadata !1536), !dbg !2685
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !1182, metadata !1536), !dbg !2686
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !1183, metadata !1536), !dbg !2687
  store double 1.000000e+00, double* %Result, align 8, !dbg !2688, !tbaa !1563
  store double 0.000000e+00, double* %.pre-phi, align 8, !dbg !2689, !tbaa !1563
  br label %546

; <label>:546                                     ; preds = %545, %539
  %storemerge = phi double [ 0.000000e+00, %545 ], [ %544, %539 ]
  store double %storemerge, double* %.pre-phi10, align 8, !dbg !2680, !tbaa !1563
  ret void, !dbg !2690
}
