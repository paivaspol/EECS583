define internal %"struct.pov::Poly_Struct"* @_ZN3povL9Copy_PolyEPNS_13Object_StructE(%"struct.pov::Object_Struct"* nocapture %Object) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::Object_Struct"* %Object}, i64 0, metadata !951), !dbg !1768
  %Order = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, !dbg !1769
  %0 = bitcast %"struct.pov::Object_Struct"* %Order to i32*, !dbg !1769
  %1 = load i32* %0, align 4, !dbg !1769, !tbaa !1355
  %call = tail call %"struct.pov::Poly_Struct"* @_ZN3pov11Create_PolyEi(i32 %1) #7, !dbg !1769
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::Poly_Struct"* %call}, i64 0, metadata !952), !dbg !1769
  %Trans = getelementptr inbounds %"struct.pov::Poly_Struct"* %call, i64 0, i32 10, !dbg !1770
  %2 = load %"struct.pov::Transform_Struct"** %Trans, align 8, !dbg !1770, !tbaa !1321
  tail call void @_ZN3pov17Destroy_TransformEPNS_16Transform_StructE(%"struct.pov::Transform_Struct"* %2) #7, !dbg !1770
  %Flags = getelementptr inbounds %"struct.pov::Poly_Struct"* %call, i64 0, i32 13, !dbg !1771
  %3 = load i32* %Flags, align 4, !dbg !1771, !tbaa !1355
  %and = and i32 %3, -65, !dbg !1771
  %Flags1 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 13, !dbg !1771
  %4 = load i32* %Flags1, align 4, !dbg !1771, !tbaa !1355
  %and3 = and i32 %4, 64, !dbg !1771
  %or = or i32 %and3, %and, !dbg !1771
  store i32 %or, i32* %Flags, align 4, !dbg !1771, !tbaa !1355
  %and8 = and i32 %or, -5, !dbg !1773
  %5 = load i32* %Flags1, align 4, !dbg !1773, !tbaa !1355
  %and11 = and i32 %5, 4, !dbg !1773
  %or12 = or i32 %and8, %and11, !dbg !1773
  store i32 %or12, i32* %Flags, align 4, !dbg !1773, !tbaa !1355
  %6 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !1775
  %7 = load %"struct.pov::Transform_Struct"** %6, align 8, !dbg !1775, !tbaa !1321
  %call16 = tail call %"struct.pov::Transform_Struct"* @_ZN3pov14Copy_TransformEPNS_16Transform_StructE(%"struct.pov::Transform_Struct"* %7) #7, !dbg !1775
  store %"struct.pov::Transform_Struct"* %call16, %"struct.pov::Transform_Struct"** %Trans, align 8, !dbg !1775, !tbaa !1321
  tail call void @llvm.dbg.value(metadata !142, i64 0, metadata !953), !dbg !1776
  %Order18 = getelementptr inbounds %"struct.pov::Poly_Struct"* %call, i64 0, i32 14, !dbg !1776
  %8 = load i32* %Order18, align 4, !dbg !1776, !tbaa !1355
  %add44 = add nsw i32 %8, 1, !dbg !1776
  %add2045 = add nsw i32 %8, 2, !dbg !1776
  %mul46 = mul nsw i32 %add44, %add2045, !dbg !1776
  %add2247 = add nsw i32 %8, 3, !dbg !1776
  %mul2348 = mul nsw i32 %mul46, %add2247, !dbg !1776
  %cmp50 = icmp sgt i32 %mul2348, 5, !dbg !1776
  br i1 %cmp50, label %for.body.lr.ph, label %for.end, !dbg !1776

for.body.lr.ph:                                   ; preds = %entry
  %Coeffs = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !1778
  %9 = bitcast i32* %Coeffs to double**, !dbg !1778
  %10 = load double** %9, align 8, !dbg !1778, !tbaa !1321
  %Coeffs25 = getelementptr inbounds %"struct.pov::Poly_Struct"* %call, i64 0, i32 15, !dbg !1778
  %11 = load double** %Coeffs25, align 8, !dbg !1778, !tbaa !1321
  %div = sdiv i32 %mul2348, 6, !dbg !1776
  br label %for.body, !dbg !1776

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double* %10, i64 %indvars.iv, !dbg !1778
  %12 = load double* %arrayidx, align 8, !dbg !1778, !tbaa !1329
  %arrayidx26 = getelementptr inbounds double* %11, i64 %indvars.iv, !dbg !1778
  store double %12, double* %arrayidx26, align 8, !dbg !1778, !tbaa !1329
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1776
  %13 = trunc i64 %indvars.iv.next to i32, !dbg !1776
  %cmp = icmp slt i32 %13, %div, !dbg !1776
  br i1 %cmp, label %for.body, label %for.end, !dbg !1776

for.end:                                          ; preds = %for.body, %entry
  ret %"struct.pov::Poly_Struct"* %call, !dbg !1780
}
