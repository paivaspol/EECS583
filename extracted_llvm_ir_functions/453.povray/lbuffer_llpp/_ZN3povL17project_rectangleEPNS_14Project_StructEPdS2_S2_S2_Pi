define internal fastcc void @_ZN3povL17project_rectangleEPNS_14Project_StructEPdS2_S2_S2_Pi(%"struct.pov::Project_Struct"* nocapture %Project, double* nocapture readonly %P1, double* nocapture readonly %P2, double* nocapture readonly %P3, double* nocapture readonly %P4, i32* nocapture %visible) #0 {
  %Points = alloca [20 x [3 x double]], align 16
  %number = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %"struct.pov::Project_Struct"* %Project, i64 0, metadata !1114, metadata !1635), !dbg !3110
  tail call void @llvm.dbg.value(metadata double* %P1, i64 0, metadata !1115, metadata !1635), !dbg !3111
  tail call void @llvm.dbg.value(metadata double* %P2, i64 0, metadata !1116, metadata !1635), !dbg !3112
  tail call void @llvm.dbg.value(metadata double* %P3, i64 0, metadata !1117, metadata !1635), !dbg !3113
  tail call void @llvm.dbg.value(metadata double* %P4, i64 0, metadata !1118, metadata !1635), !dbg !3114
  tail call void @llvm.dbg.value(metadata i32* %visible, i64 0, metadata !1119, metadata !1635), !dbg !3115
  %1 = bitcast [20 x [3 x double]]* %Points to i8*, !dbg !3116
  call void @llvm.lifetime.start(i64 480, i8* %1) #3, !dbg !3116
  tail call void @llvm.dbg.declare(metadata [20 x [3 x double]]* %Points, metadata !1120, metadata !1635), !dbg !3117
  tail call void @llvm.dbg.value(metadata double* %P1, i64 0, metadata !1081, metadata !1635), !dbg !3118
  %2 = bitcast double* %P1 to <2 x i64>*, !dbg !3120
  %3 = load <2 x i64>* %2, align 8, !dbg !3120, !tbaa !1728
  %4 = bitcast [20 x [3 x double]]* %Points to <2 x i64>*, !dbg !3121
  store <2 x i64> %3, <2 x i64>* %4, align 16, !dbg !3121, !tbaa !1728
  %5 = getelementptr inbounds double* %P1, i64 2, !dbg !3122
  %6 = bitcast double* %5 to i64*, !dbg !3122
  %7 = load i64* %6, align 8, !dbg !3122, !tbaa !1728
  %8 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 0, i64 2, !dbg !3123
  %9 = bitcast double* %8 to i64*, !dbg !3124
  store i64 %7, i64* %9, align 16, !dbg !3124, !tbaa !1728
  %10 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 1, i64 0, !dbg !3125
  tail call void @llvm.dbg.value(metadata double* %10, i64 0, metadata !1080, metadata !1635), !dbg !3126
  tail call void @llvm.dbg.value(metadata double* %P2, i64 0, metadata !1081, metadata !1635), !dbg !3128
  %11 = bitcast double* %P2 to <2 x i64>*, !dbg !3129
  %12 = load <2 x i64>* %11, align 8, !dbg !3129, !tbaa !1728
  %13 = bitcast double* %10 to <2 x i64>*, !dbg !3130
  store <2 x i64> %12, <2 x i64>* %13, align 8, !dbg !3130, !tbaa !1728
  %14 = getelementptr inbounds double* %P2, i64 2, !dbg !3131
  %15 = bitcast double* %14 to i64*, !dbg !3131
  %16 = load i64* %15, align 8, !dbg !3131, !tbaa !1728
  %17 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 1, i64 2, !dbg !3132
  %18 = bitcast double* %17 to i64*, !dbg !3133
  store i64 %16, i64* %18, align 8, !dbg !3133, !tbaa !1728
  %19 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 2, i64 0, !dbg !3134
  tail call void @llvm.dbg.value(metadata double* %19, i64 0, metadata !1080, metadata !1635), !dbg !3135
  tail call void @llvm.dbg.value(metadata double* %P3, i64 0, metadata !1081, metadata !1635), !dbg !3137
  %20 = bitcast double* %P3 to <2 x i64>*, !dbg !3138
  %21 = load <2 x i64>* %20, align 8, !dbg !3138, !tbaa !1728
  %22 = bitcast double* %19 to <2 x i64>*, !dbg !3139
  store <2 x i64> %21, <2 x i64>* %22, align 16, !dbg !3139, !tbaa !1728
  %23 = getelementptr inbounds double* %P3, i64 2, !dbg !3140
  %24 = bitcast double* %23 to i64*, !dbg !3140
  %25 = load i64* %24, align 8, !dbg !3140, !tbaa !1728
  %26 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 2, i64 2, !dbg !3141
  %27 = bitcast double* %26 to i64*, !dbg !3142
  store i64 %25, i64* %27, align 16, !dbg !3142, !tbaa !1728
  %28 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 3, i64 0, !dbg !3143
  tail call void @llvm.dbg.value(metadata double* %28, i64 0, metadata !1080, metadata !1635), !dbg !3144
  tail call void @llvm.dbg.value(metadata double* %P4, i64 0, metadata !1081, metadata !1635), !dbg !3146
  %29 = bitcast double* %P4 to <2 x i64>*, !dbg !3147
  %30 = load <2 x i64>* %29, align 8, !dbg !3147, !tbaa !1728
  %31 = bitcast double* %28 to <2 x i64>*, !dbg !3148
  store <2 x i64> %30, <2 x i64>* %31, align 8, !dbg !3148, !tbaa !1728
  %32 = getelementptr inbounds double* %P4, i64 2, !dbg !3149
  %33 = bitcast double* %32 to i64*, !dbg !3149
  %34 = load i64* %33, align 8, !dbg !3149, !tbaa !1728
  %35 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 3, i64 2, !dbg !3150
  %36 = bitcast double* %35 to i64*, !dbg !3151
  store i64 %34, i64* %36, align 8, !dbg !3151, !tbaa !1728
  tail call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !1122, metadata !1635), !dbg !3152
  store i32 4, i32* %number, align 4, !dbg !3153, !tbaa !1849
  %37 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 0, !dbg !3154
  tail call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1122, metadata !1635), !dbg !3152
  call void @_ZN3pov12Clip_PolygonEPA3_dPiPKdS4_S4_S4_dddd([3 x double]* %37, i32* %number, double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VX1E, i64 0, i64 0), double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VX2E, i64 0, i64 0), double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VY1E, i64 0, i64 0), double* getelementptr inbounds ([3 x double]* @_ZN3povL8VIEW_VY2E, i64 0, i64 0), double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00) #5, !dbg !3155
  call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1122, metadata !1635), !dbg !3152
  %38 = load i32* %number, align 4, !dbg !3156, !tbaa !1849
  %39 = icmp eq i32 %38, 0, !dbg !3156
  br i1 %39, label %96, label %.preheader, !dbg !3158

.preheader:                                       ; preds = %0
  call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1122, metadata !1635), !dbg !3152
  %40 = icmp sgt i32 %38, 0, !dbg !3159
  br i1 %40, label %.lr.ph, label %._crit_edge, !dbg !3163

.lr.ph:                                           ; preds = %.preheader
  %41 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 0, !dbg !3164
  %42 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 2, !dbg !3167
  %43 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 1, !dbg !3169
  %44 = getelementptr inbounds %"struct.pov::Project_Struct"* %Project, i64 0, i32 3, !dbg !3171
  %45 = sext i32 %38 to i64, !dbg !3163
  br label %46, !dbg !3163

; <label>:46                                      ; preds = %.lr.ph, %94
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %94 ]
  %47 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 %indvars.iv, !dbg !3173
  %48 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 %indvars.iv, i64 2, !dbg !3173
  %49 = load double* %48, align 8, !dbg !3173, !tbaa !1728
  %50 = fcmp olt double %49, 1.000000e-07, !dbg !3175
  br i1 %50, label %51, label %53, !dbg !3176

; <label>:51                                      ; preds = %46
  %52 = bitcast [3 x double]* %47 to i8*, !dbg !3177
  call void @llvm.memset.p0i8.i64(i8* %52, i8 0, i64 16, i32 8, i1 false), !dbg !3179
  br label %72, !dbg !3177

; <label>:53                                      ; preds = %46
  %54 = getelementptr inbounds [20 x [3 x double]]* %Points, i64 0, i64 %indvars.iv, i64 1, !dbg !3180
  %55 = bitcast [3 x double]* %47 to <2 x double>*, !dbg !3182
  %56 = load <2 x double>* %55, align 8, !dbg !3182, !tbaa !1728
  %57 = insertelement <2 x double> undef, double %49, i32 0, !dbg !3182
  %58 = insertelement <2 x double> %57, double %49, i32 1, !dbg !3182
  %59 = fdiv <2 x double> %56, %58, !dbg !3182
  %60 = bitcast [3 x double]* %47 to <2 x double>*, !dbg !3182
  store <2 x double> %59, <2 x double>* %60, align 8, !dbg !3182, !tbaa !1728
  %61 = extractelement <2 x double> %59, i32 0, !dbg !3183
  %62 = call double @fabs(double %61) #6, !dbg !3183
  %63 = fcmp olt double %62, 1.000000e-07, !dbg !3185
  br i1 %63, label %64, label %66, !dbg !3186

; <label>:64                                      ; preds = %53
  %65 = getelementptr inbounds [3 x double]* %47, i64 0, i64 0, !dbg !3187
  store double 0.000000e+00, double* %65, align 8, !dbg !3188, !tbaa !1728
  br label %66, !dbg !3189

; <label>:66                                      ; preds = %64, %53
  %67 = phi double [ 0.000000e+00, %64 ], [ %61, %53 ]
  %68 = extractelement <2 x double> %59, i32 1, !dbg !3190
  %69 = call double @fabs(double %68) #6, !dbg !3190
  %70 = fcmp olt double %69, 1.000000e-07, !dbg !3192
  br i1 %70, label %71, label %72, !dbg !3193

; <label>:71                                      ; preds = %66
  store double 0.000000e+00, double* %54, align 8, !dbg !3194, !tbaa !1728
  br label %72, !dbg !3195

; <label>:72                                      ; preds = %66, %71, %51
  %73 = phi double [ %68, %66 ], [ 0.000000e+00, %71 ], [ 0.000000e+00, %51 ]
  %74 = phi double [ %67, %66 ], [ %67, %71 ], [ 0.000000e+00, %51 ]
  %75 = fmul double %74, 3.200000e+04, !dbg !3196
  %76 = fptosi double %75 to i32, !dbg !3197
  call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !1123, metadata !1635), !dbg !3198
  %77 = fmul double %73, 3.200000e+04, !dbg !3199
  %78 = fptosi double %77 to i32, !dbg !3200
  call void @llvm.dbg.value(metadata i32 %78, i64 0, metadata !1124, metadata !1635), !dbg !3201
  %79 = load i32* %41, align 4, !dbg !3164, !tbaa !1654
  %80 = icmp slt i32 %76, %79, !dbg !3202
  br i1 %80, label %81, label %82, !dbg !3203

; <label>:81                                      ; preds = %72
  store i32 %76, i32* %41, align 4, !dbg !3204, !tbaa !1654
  br label %82, !dbg !3205

; <label>:82                                      ; preds = %81, %72
  %83 = load i32* %42, align 4, !dbg !3167, !tbaa !1656
  %84 = icmp sgt i32 %76, %83, !dbg !3206
  br i1 %84, label %85, label %86, !dbg !3207

; <label>:85                                      ; preds = %82
  store i32 %76, i32* %42, align 4, !dbg !3208, !tbaa !1656
  br label %86, !dbg !3209

; <label>:86                                      ; preds = %85, %82
  %87 = load i32* %43, align 4, !dbg !3169, !tbaa !1659
  %88 = icmp slt i32 %78, %87, !dbg !3210
  br i1 %88, label %89, label %90, !dbg !3211

; <label>:89                                      ; preds = %86
  store i32 %78, i32* %43, align 4, !dbg !3212, !tbaa !1659
  br label %90, !dbg !3213

; <label>:90                                      ; preds = %89, %86
  %91 = load i32* %44, align 4, !dbg !3171, !tbaa !1660
  %92 = icmp sgt i32 %78, %91, !dbg !3214
  br i1 %92, label %93, label %94, !dbg !3215

; <label>:93                                      ; preds = %90
  store i32 %78, i32* %44, align 4, !dbg !3216, !tbaa !1660
  br label %94, !dbg !3217

; <label>:94                                      ; preds = %90, %93
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3163
  call void @llvm.dbg.value(metadata i32* %number, i64 0, metadata !1122, metadata !1635), !dbg !3152
  %95 = icmp slt i64 %indvars.iv.next, %45, !dbg !3159
  br i1 %95, label %46, label %._crit_edge, !dbg !3163

._crit_edge:                                      ; preds = %94, %.preheader
  store i32 1, i32* %visible, align 4, !dbg !3218, !tbaa !1849
  br label %96, !dbg !3219

; <label>:96                                      ; preds = %0, %._crit_edge
  call void @llvm.lifetime.end(i64 480, i8* %1) #3, !dbg !3220
  ret void, !dbg !3220
}
