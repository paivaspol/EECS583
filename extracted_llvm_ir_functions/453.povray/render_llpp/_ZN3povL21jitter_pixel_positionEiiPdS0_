define internal fastcc void @_ZN3povL21jitter_pixel_positionEiiPdS0_(i32 %x, i32 %y, double* nocapture %Jitter_X, double* nocapture %Jitter_Y) #7 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !1312), !dbg !4034
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !1313), !dbg !4034
  tail call void @llvm.dbg.value(metadata !{double* %Jitter_X}, i64 0, metadata !1314), !dbg !4034
  tail call void @llvm.dbg.value(metadata !{double* %Jitter_Y}, i64 0, metadata !1315), !dbg !4034
  %0 = load i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i64 0, i32 0), align 8, !dbg !4035, !tbaa !1664
  %and = and i32 %0, 256, !dbg !4035
  %tobool = icmp eq i32 %and, 0, !dbg !4035
  br i1 %tobool, label %if.else, label %if.then, !dbg !4035

if.then:                                          ; preds = %entry
  %1 = load i32* @_ZN3pov11Jitt_OffsetE, align 4, !dbg !4036, !tbaa !1664
  %add = add nsw i32 %1, %x, !dbg !4036
  %and1 = and i32 %add, 4095, !dbg !4036
  %idxprom33 = zext i32 %and1 to i64, !dbg !4036
  %arrayidx = getelementptr inbounds [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %idxprom33, !dbg !4036
  %2 = load i16* %arrayidx, align 2, !dbg !4036, !tbaa !3898
  %conv2 = zext i16 %2 to i32, !dbg !4036
  %xor = xor i32 %conv2, %y, !dbg !4036
  %and3 = and i32 %xor, 4095, !dbg !4036
  %idxprom434 = zext i32 %and3 to i64, !dbg !4036
  %arrayidx5 = getelementptr inbounds [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %idxprom434, !dbg !4036
  %3 = load i16* %arrayidx5, align 2, !dbg !4036, !tbaa !3898
  %conv6 = zext i16 %3 to i64, !dbg !4036
  %and7 = and i64 %conv6, 255, !dbg !4036
  %arrayidx9 = getelementptr inbounds [256 x float]* @_ZN3povL7jitttabE, i64 0, i64 %and7, !dbg !4036
  %4 = load float* %arrayidx9, align 4, !dbg !4036, !tbaa !2062
  %conv10 = fpext float %4 to double, !dbg !4036
  store double %conv10, double* %Jitter_X, align 8, !dbg !4036, !tbaa !1662
  %inc = add nsw i32 %1, 1, !dbg !4038
  %add11 = add nsw i32 %inc, %x, !dbg !4039
  %and12 = and i32 %add11, 4095, !dbg !4039
  %idxprom1336 = zext i32 %and12 to i64, !dbg !4039
  %arrayidx14 = getelementptr inbounds [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %idxprom1336, !dbg !4039
  %5 = load i16* %arrayidx14, align 2, !dbg !4039, !tbaa !3898
  %conv15 = zext i16 %5 to i32, !dbg !4039
  %xor16 = xor i32 %conv15, %y, !dbg !4039
  %and17 = and i32 %xor16, 4095, !dbg !4039
  %idxprom1837 = zext i32 %and17 to i64, !dbg !4039
  %arrayidx19 = getelementptr inbounds [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %idxprom1837, !dbg !4039
  %6 = load i16* %arrayidx19, align 2, !dbg !4039, !tbaa !3898
  %conv20 = zext i16 %6 to i64, !dbg !4039
  %and21 = and i64 %conv20, 255, !dbg !4039
  %arrayidx23 = getelementptr inbounds [256 x float]* @_ZN3povL7jitttabE, i64 0, i64 %and21, !dbg !4039
  %7 = load float* %arrayidx23, align 4, !dbg !4039, !tbaa !2062
  %conv24 = fpext float %7 to double, !dbg !4039
  store double %conv24, double* %Jitter_Y, align 8, !dbg !4039, !tbaa !1662
  %inc25 = add nsw i32 %1, 2, !dbg !4040
  store i32 %inc25, i32* @_ZN3pov11Jitt_OffsetE, align 4, !dbg !4040, !tbaa !1664
  %8 = load double* @_ZN3povL11JitterScaleE, align 8, !dbg !4041, !tbaa !1662
  %9 = load double* %Jitter_X, align 8, !dbg !4041, !tbaa !1662
  %mul = fmul double %8, %9, !dbg !4041
  store double %mul, double* %Jitter_X, align 8, !dbg !4041, !tbaa !1662
  %10 = load double* @_ZN3povL11JitterScaleE, align 8, !dbg !4042, !tbaa !1662
  %11 = load double* %Jitter_Y, align 8, !dbg !4042, !tbaa !1662
  %mul26 = fmul double %10, %11, !dbg !4042
  store double %mul26, double* %Jitter_Y, align 8, !dbg !4042, !tbaa !1662
  br label %if.end, !dbg !4043

if.else:                                          ; preds = %entry
  store double 0.000000e+00, double* %Jitter_Y, align 8, !dbg !4044, !tbaa !1662
  store double 0.000000e+00, double* %Jitter_X, align 8, !dbg !4044, !tbaa !1662
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4046
}
