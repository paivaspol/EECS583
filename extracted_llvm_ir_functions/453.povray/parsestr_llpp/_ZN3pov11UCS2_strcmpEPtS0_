define i32 @_ZN3pov11UCS2_strcmpEPtS0_(i16* nocapture %s1, i16* nocapture %s2) #3 {
entry:
  tail call void @llvm.dbg.value(metadata !{i16* %s1}, i64 0, metadata !718), !dbg !1238
  tail call void @llvm.dbg.value(metadata !{i16* %s2}, i64 0, metadata !719), !dbg !1238
  br label %while.cond, !dbg !1239

while.cond:                                       ; preds = %while.body, %entry
  %s2.addr.0 = phi i16* [ %s2, %entry ], [ %incdec.ptr1, %while.body ]
  %s1.addr.0 = phi i16* [ %s1, %entry ], [ %incdec.ptr, %while.body ]
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr}, i64 0, metadata !718), !dbg !1239
  %0 = load i16* %s1.addr.0, align 2, !dbg !1239, !tbaa !868
  tail call void @llvm.dbg.value(metadata !{i16 %0}, i64 0, metadata !720), !dbg !1239
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr1}, i64 0, metadata !719), !dbg !1239
  %1 = load i16* %s2.addr.0, align 2, !dbg !1239, !tbaa !868
  tail call void @llvm.dbg.value(metadata !{i16 %1}, i64 0, metadata !721), !dbg !1239
  %cmp = icmp eq i16 %0, %1, !dbg !1239
  br i1 %cmp, label %while.body, label %while.end, !dbg !1239

while.body:                                       ; preds = %while.cond
  %incdec.ptr1 = getelementptr inbounds i16* %s2.addr.0, i64 1, !dbg !1239
  %incdec.ptr = getelementptr inbounds i16* %s1.addr.0, i64 1, !dbg !1239
  %cmp4 = icmp eq i16 %0, 0, !dbg !1240
  br i1 %cmp4, label %return, label %while.cond, !dbg !1240

while.end:                                        ; preds = %while.cond
  %conv = zext i16 %0 to i32, !dbg !1239
  %conv2 = zext i16 %1 to i32, !dbg !1239
  %sub = sub nsw i32 %conv, %conv2, !dbg !1242
  br label %return, !dbg !1242

return:                                           ; preds = %while.body, %while.end
  %retval.0 = phi i32 [ %sub, %while.end ], [ 0, %while.body ]
  ret i32 %retval.0, !dbg !1243
}
