define void @_ZN3pov15MInvTransNormalEPdS0_PNS_16Transform_StructE(double* nocapture %result, double* nocapture %vector, %"struct.pov::Transform_Struct"* nocapture %transform) #0 {
entry:
  %answer_array = alloca [3 x double], align 16
  call void @llvm.dbg.value(metadata !{double* %result}, i64 0, metadata !138), !dbg !554
  call void @llvm.dbg.value(metadata !{double* %vector}, i64 0, metadata !139), !dbg !554
  call void @llvm.dbg.value(metadata !{%"struct.pov::Transform_Struct"* %transform}, i64 0, metadata !140), !dbg !554
  call void @llvm.dbg.declare(metadata !{[3 x double]* %answer_array}, metadata !142), !dbg !555
  call void @llvm.dbg.value(metadata !11, i64 0, metadata !141), !dbg !556
  %0 = load double* %vector, align 8, !dbg !558, !tbaa !397
  %arrayidx4 = getelementptr inbounds double* %vector, i64 1, !dbg !558
  %1 = load double* %arrayidx4, align 8, !dbg !558, !tbaa !397
  %arrayidx9 = getelementptr inbounds double* %vector, i64 2, !dbg !558
  %2 = load double* %arrayidx9, align 8, !dbg !558, !tbaa !397
  br label %for.body, !dbg !556

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx3 = getelementptr inbounds %"struct.pov::Transform_Struct"* %transform, i64 0, i32 0, i64 %indvars.iv, i64 0, !dbg !558
  %3 = load double* %arrayidx3, align 8, !dbg !558, !tbaa !397
  %mul = fmul double %0, %3, !dbg !558
  %arrayidx7 = getelementptr inbounds %"struct.pov::Transform_Struct"* %transform, i64 0, i32 0, i64 %indvars.iv, i64 1, !dbg !558
  %4 = load double* %arrayidx7, align 8, !dbg !558, !tbaa !397
  %mul8 = fmul double %1, %4, !dbg !558
  %add = fadd double %mul, %mul8, !dbg !558
  %arrayidx12 = getelementptr inbounds %"struct.pov::Transform_Struct"* %transform, i64 0, i32 0, i64 %indvars.iv, i64 2, !dbg !558
  %5 = load double* %arrayidx12, align 8, !dbg !558, !tbaa !397
  %mul13 = fmul double %2, %5, !dbg !558
  %add14 = fadd double %add, %mul13, !dbg !558
  %arrayidx16 = getelementptr inbounds [3 x double]* %answer_array, i64 0, i64 %indvars.iv, !dbg !558
  store double %add14, double* %arrayidx16, align 8, !dbg !558, !tbaa !397
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !556
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !556
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !556
  br i1 %exitcond, label %for.end, label %for.body, !dbg !556

for.end:                                          ; preds = %for.body
  %arrayidx17 = getelementptr inbounds [3 x double]* %answer_array, i64 0, i64 0, !dbg !560
  %6 = load double* %arrayidx17, align 16, !dbg !560, !tbaa !397
  store double %6, double* %result, align 8, !dbg !560, !tbaa !397
  %arrayidx19 = getelementptr inbounds [3 x double]* %answer_array, i64 0, i64 1, !dbg !561
  %7 = load double* %arrayidx19, align 8, !dbg !561, !tbaa !397
  %arrayidx20 = getelementptr inbounds double* %result, i64 1, !dbg !561
  store double %7, double* %arrayidx20, align 8, !dbg !561, !tbaa !397
  %arrayidx21 = getelementptr inbounds [3 x double]* %answer_array, i64 0, i64 2, !dbg !562
  %8 = load double* %arrayidx21, align 16, !dbg !562, !tbaa !397
  %arrayidx22 = getelementptr inbounds double* %result, i64 2, !dbg !562
  store double %8, double* %arrayidx22, align 8, !dbg !562, !tbaa !397
  ret void, !dbg !563
}
