define void @_ZN3pov25Compute_Scaling_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"* nocapture %result, double* nocapture readonly %vector) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::Transform_Struct"* %result, i64 0, metadata !160, metadata !650), !dbg !1583
  tail call void @llvm.dbg.value(metadata double* %vector, i64 0, metadata !161, metadata !650), !dbg !1584
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !69, metadata !650), !dbg !1585
  br label %.preheader.i, !dbg !1587

.preheader.i:                                     ; preds = %6, %0
  %indvars.iv3.i = phi i64 [ 0, %0 ], [ %indvars.iv.next4.i, %6 ], !dbg !1588
  %1 = trunc i64 %indvars.iv3.i to i32, !dbg !1589
  br label %2, !dbg !1590

; <label>:2                                       ; preds = %2, %.preheader.i
  %indvars.iv.i = phi i64 [ 0, %.preheader.i ], [ %indvars.iv.next.i, %2 ], !dbg !1588
  %3 = trunc i64 %indvars.iv.i to i32, !dbg !1589
  %4 = icmp eq i32 %1, %3, !dbg !1589
  %5 = getelementptr inbounds %"struct.pov::Transform_Struct"* %result, i64 0, i32 0, i64 %indvars.iv3.i, i64 %indvars.iv.i, !dbg !1591
  %..i = select i1 %4, double 1.000000e+00, double 0.000000e+00, !dbg !1592
  store double %..i, double* %5, align 8, !dbg !1593, !tbaa !677
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !1590
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 4, !dbg !1590
  br i1 %exitcond.i, label %6, label %2, !dbg !1590

; <label>:6                                       ; preds = %2
  %indvars.iv.next4.i = add nuw nsw i64 %indvars.iv3.i, 1, !dbg !1587
  %exitcond5.i = icmp eq i64 %indvars.iv.next4.i, 4, !dbg !1587
  br i1 %exitcond5.i, label %_ZN3pov9MIdentityEPA4_d.exit, label %.preheader.i, !dbg !1587

_ZN3pov9MIdentityEPA4_d.exit:                     ; preds = %6
  %7 = bitcast double* %vector to i64*, !dbg !1594
  %8 = load i64* %7, align 8, !dbg !1594, !tbaa !677
  %9 = bitcast %"struct.pov::Transform_Struct"* %result to i64*, !dbg !1595
  store i64 %8, i64* %9, align 8, !dbg !1595, !tbaa !677
  %10 = getelementptr inbounds double* %vector, i64 1, !dbg !1596
  %11 = bitcast double* %10 to i64*, !dbg !1596
  %12 = load i64* %11, align 8, !dbg !1596, !tbaa !677
  %13 = getelementptr inbounds %"struct.pov::Transform_Struct"* %result, i64 0, i32 0, i64 1, i64 1, !dbg !1597
  %14 = bitcast double* %13 to i64*, !dbg !1598
  store i64 %12, i64* %14, align 8, !dbg !1598, !tbaa !677
  %15 = getelementptr inbounds double* %vector, i64 2, !dbg !1599
  %16 = bitcast double* %15 to i64*, !dbg !1599
  %17 = load i64* %16, align 8, !dbg !1599, !tbaa !677
  %18 = getelementptr inbounds %"struct.pov::Transform_Struct"* %result, i64 0, i32 0, i64 2, i64 2, !dbg !1600
  %19 = bitcast double* %18 to i64*, !dbg !1601
  store i64 %17, i64* %19, align 8, !dbg !1601, !tbaa !677
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !69, metadata !650), !dbg !1602
  br label %.preheader.i2, !dbg !1604

.preheader.i2:                                    ; preds = %25, %_ZN3pov9MIdentityEPA4_d.exit
  %indvars.iv3.i1 = phi i64 [ 0, %_ZN3pov9MIdentityEPA4_d.exit ], [ %indvars.iv.next4.i7, %25 ], !dbg !1605
  %20 = trunc i64 %indvars.iv3.i1 to i32, !dbg !1606
  br label %21, !dbg !1607

; <label>:21                                      ; preds = %21, %.preheader.i2
  %indvars.iv.i3 = phi i64 [ 0, %.preheader.i2 ], [ %indvars.iv.next.i5, %21 ], !dbg !1605
  %22 = trunc i64 %indvars.iv.i3 to i32, !dbg !1606
  %23 = icmp eq i32 %20, %22, !dbg !1606
  %24 = getelementptr inbounds %"struct.pov::Transform_Struct"* %result, i64 0, i32 1, i64 %indvars.iv3.i1, i64 %indvars.iv.i3, !dbg !1608
  %..i4 = select i1 %23, double 1.000000e+00, double 0.000000e+00, !dbg !1609
  store double %..i4, double* %24, align 8, !dbg !1610, !tbaa !677
  %indvars.iv.next.i5 = add nuw nsw i64 %indvars.iv.i3, 1, !dbg !1607
  %exitcond.i6 = icmp eq i64 %indvars.iv.next.i5, 4, !dbg !1607
  br i1 %exitcond.i6, label %25, label %21, !dbg !1607

; <label>:25                                      ; preds = %21
  %indvars.iv.next4.i7 = add nuw nsw i64 %indvars.iv3.i1, 1, !dbg !1604
  %exitcond5.i8 = icmp eq i64 %indvars.iv.next4.i7, 4, !dbg !1604
  br i1 %exitcond5.i8, label %_ZN3pov9MIdentityEPA4_d.exit9, label %.preheader.i2, !dbg !1604

_ZN3pov9MIdentityEPA4_d.exit9:                    ; preds = %25
  %26 = load double* %vector, align 8, !dbg !1611, !tbaa !677
  %27 = fdiv double 1.000000e+00, %26, !dbg !1612
  %28 = getelementptr inbounds %"struct.pov::Transform_Struct"* %result, i64 0, i32 1, i64 0, i64 0, !dbg !1613
  store double %27, double* %28, align 8, !dbg !1614, !tbaa !677
  %29 = load double* %10, align 8, !dbg !1615, !tbaa !677
  %30 = fdiv double 1.000000e+00, %29, !dbg !1616
  %31 = getelementptr inbounds %"struct.pov::Transform_Struct"* %result, i64 0, i32 1, i64 1, i64 1, !dbg !1617
  store double %30, double* %31, align 8, !dbg !1618, !tbaa !677
  %32 = load double* %15, align 8, !dbg !1619, !tbaa !677
  %33 = fdiv double 1.000000e+00, %32, !dbg !1620
  %34 = getelementptr inbounds %"struct.pov::Transform_Struct"* %result, i64 0, i32 1, i64 2, i64 2, !dbg !1621
  store double %33, double* %34, align 8, !dbg !1622, !tbaa !677
  ret void, !dbg !1623
}
