define i32 @_ZN3pov8MInvers3EPA3_dS1_([3 x double]* nocapture readonly %inM, [3 x double]* nocapture %outM) #0 {
  tail call void @llvm.dbg.value(metadata [3 x double]* %inM, i64 0, metadata !242, metadata !650), !dbg !2345
  tail call void @llvm.dbg.value(metadata [3 x double]* %outM, i64 0, metadata !243, metadata !650), !dbg !2346
  %1 = getelementptr inbounds [3 x double]* %inM, i64 1, i64 1, !dbg !2347
  %2 = load double* %1, align 8, !dbg !2347, !tbaa !677
  %3 = getelementptr inbounds [3 x double]* %inM, i64 2, i64 2, !dbg !2348
  %4 = load double* %3, align 8, !dbg !2348, !tbaa !677
  %5 = fmul double %2, %4, !dbg !2349
  %6 = getelementptr inbounds [3 x double]* %inM, i64 1, i64 2, !dbg !2350
  %7 = load double* %6, align 8, !dbg !2350, !tbaa !677
  %8 = getelementptr inbounds [3 x double]* %inM, i64 2, i64 1, !dbg !2351
  %9 = load double* %8, align 8, !dbg !2351, !tbaa !677
  %10 = fmul double %7, %9, !dbg !2352
  %11 = fsub double %5, %10, !dbg !2353
  %12 = getelementptr inbounds [3 x double]* %outM, i64 0, i64 0, !dbg !2354
  store double %11, double* %12, align 8, !dbg !2355, !tbaa !677
  %13 = getelementptr inbounds [3 x double]* %inM, i64 0, i64 1, !dbg !2356
  %14 = load double* %13, align 8, !dbg !2356, !tbaa !677
  %15 = load double* %3, align 8, !dbg !2357, !tbaa !677
  %16 = fmul double %14, %15, !dbg !2358
  %17 = getelementptr inbounds [3 x double]* %inM, i64 0, i64 2, !dbg !2359
  %18 = load double* %17, align 8, !dbg !2359, !tbaa !677
  %19 = load double* %8, align 8, !dbg !2360, !tbaa !677
  %20 = fmul double %18, %19, !dbg !2361
  %21 = fsub double %16, %20, !dbg !2362
  %22 = fsub double -0.000000e+00, %21, !dbg !2363
  %23 = getelementptr inbounds [3 x double]* %outM, i64 1, i64 0, !dbg !2364
  store double %22, double* %23, align 8, !dbg !2365, !tbaa !677
  %24 = load double* %13, align 8, !dbg !2366, !tbaa !677
  %25 = load double* %6, align 8, !dbg !2367, !tbaa !677
  %26 = fmul double %24, %25, !dbg !2368
  %27 = load double* %17, align 8, !dbg !2369, !tbaa !677
  %28 = load double* %1, align 8, !dbg !2370, !tbaa !677
  %29 = fmul double %27, %28, !dbg !2371
  %30 = fsub double %26, %29, !dbg !2372
  %31 = getelementptr inbounds [3 x double]* %outM, i64 2, i64 0, !dbg !2373
  store double %30, double* %31, align 8, !dbg !2374, !tbaa !677
  %32 = getelementptr inbounds [3 x double]* %inM, i64 1, i64 0, !dbg !2375
  %33 = load double* %32, align 8, !dbg !2375, !tbaa !677
  %34 = load double* %3, align 8, !dbg !2376, !tbaa !677
  %35 = fmul double %33, %34, !dbg !2377
  %36 = load double* %6, align 8, !dbg !2378, !tbaa !677
  %37 = getelementptr inbounds [3 x double]* %inM, i64 2, i64 0, !dbg !2379
  %38 = load double* %37, align 8, !dbg !2379, !tbaa !677
  %39 = fmul double %36, %38, !dbg !2380
  %40 = fsub double %35, %39, !dbg !2381
  %41 = fsub double -0.000000e+00, %40, !dbg !2382
  %42 = getelementptr inbounds [3 x double]* %outM, i64 0, i64 1, !dbg !2383
  store double %41, double* %42, align 8, !dbg !2384, !tbaa !677
  %43 = getelementptr inbounds [3 x double]* %inM, i64 0, i64 0, !dbg !2385
  %44 = load double* %43, align 8, !dbg !2385, !tbaa !677
  %45 = load double* %3, align 8, !dbg !2386, !tbaa !677
  %46 = fmul double %44, %45, !dbg !2387
  %47 = load double* %17, align 8, !dbg !2388, !tbaa !677
  %48 = load double* %37, align 8, !dbg !2389, !tbaa !677
  %49 = fmul double %47, %48, !dbg !2390
  %50 = fsub double %46, %49, !dbg !2391
  %51 = getelementptr inbounds [3 x double]* %outM, i64 1, i64 1, !dbg !2392
  store double %50, double* %51, align 8, !dbg !2393, !tbaa !677
  %52 = load double* %43, align 8, !dbg !2394, !tbaa !677
  %53 = load double* %6, align 8, !dbg !2395, !tbaa !677
  %54 = fmul double %52, %53, !dbg !2396
  %55 = load double* %17, align 8, !dbg !2397, !tbaa !677
  %56 = load double* %32, align 8, !dbg !2398, !tbaa !677
  %57 = fmul double %55, %56, !dbg !2399
  %58 = fsub double %54, %57, !dbg !2400
  %59 = fsub double -0.000000e+00, %58, !dbg !2401
  %60 = getelementptr inbounds [3 x double]* %outM, i64 2, i64 1, !dbg !2402
  store double %59, double* %60, align 8, !dbg !2403, !tbaa !677
  %61 = load double* %32, align 8, !dbg !2404, !tbaa !677
  %62 = load double* %8, align 8, !dbg !2405, !tbaa !677
  %63 = fmul double %61, %62, !dbg !2406
  %64 = load double* %1, align 8, !dbg !2407, !tbaa !677
  %65 = load double* %37, align 8, !dbg !2408, !tbaa !677
  %66 = fmul double %64, %65, !dbg !2409
  %67 = fsub double %63, %66, !dbg !2410
  %68 = getelementptr inbounds [3 x double]* %outM, i64 0, i64 2, !dbg !2411
  store double %67, double* %68, align 8, !dbg !2412, !tbaa !677
  %69 = load double* %43, align 8, !dbg !2413, !tbaa !677
  %70 = load double* %8, align 8, !dbg !2414, !tbaa !677
  %71 = fmul double %69, %70, !dbg !2415
  %72 = load double* %13, align 8, !dbg !2416, !tbaa !677
  %73 = load double* %37, align 8, !dbg !2417, !tbaa !677
  %74 = fmul double %72, %73, !dbg !2418
  %75 = fsub double %71, %74, !dbg !2419
  %76 = fsub double -0.000000e+00, %75, !dbg !2420
  %77 = getelementptr inbounds [3 x double]* %outM, i64 1, i64 2, !dbg !2421
  store double %76, double* %77, align 8, !dbg !2422, !tbaa !677
  %78 = load double* %43, align 8, !dbg !2423, !tbaa !677
  %79 = load double* %1, align 8, !dbg !2424, !tbaa !677
  %80 = fmul double %78, %79, !dbg !2425
  %81 = load double* %13, align 8, !dbg !2426, !tbaa !677
  %82 = load double* %32, align 8, !dbg !2427, !tbaa !677
  %83 = fmul double %81, %82, !dbg !2428
  %84 = fsub double %80, %83, !dbg !2429
  %85 = getelementptr inbounds [3 x double]* %outM, i64 2, i64 2, !dbg !2430
  store double %84, double* %85, align 8, !dbg !2431, !tbaa !677
  %86 = load double* %43, align 8, !dbg !2432, !tbaa !677
  %87 = load double* %1, align 8, !dbg !2433, !tbaa !677
  %88 = fmul double %86, %87, !dbg !2434
  %89 = load double* %3, align 8, !dbg !2435, !tbaa !677
  %90 = fmul double %88, %89, !dbg !2436
  %91 = load double* %13, align 8, !dbg !2437, !tbaa !677
  %92 = load double* %6, align 8, !dbg !2438, !tbaa !677
  %93 = fmul double %91, %92, !dbg !2439
  %94 = load double* %37, align 8, !dbg !2440, !tbaa !677
  %95 = fmul double %93, %94, !dbg !2441
  %96 = fadd double %90, %95, !dbg !2442
  %97 = load double* %17, align 8, !dbg !2443, !tbaa !677
  %98 = load double* %32, align 8, !dbg !2444, !tbaa !677
  %99 = fmul double %97, %98, !dbg !2445
  %100 = load double* %8, align 8, !dbg !2446, !tbaa !677
  %101 = fmul double %99, %100, !dbg !2447
  %102 = fadd double %96, %101, !dbg !2448
  %103 = fmul double %87, %97, !dbg !2449
  %104 = fmul double %94, %103, !dbg !2450
  %105 = fsub double %102, %104, !dbg !2451
  %106 = fmul double %86, %92, !dbg !2452
  %107 = fmul double %106, %100, !dbg !2453
  %108 = fsub double %105, %107, !dbg !2454
  %109 = fmul double %91, %98, !dbg !2455
  %110 = fmul double %89, %109, !dbg !2456
  %111 = fsub double %108, %110, !dbg !2457
  tail call void @llvm.dbg.value(metadata double %111, i64 0, metadata !244, metadata !650), !dbg !2458
  %112 = tail call double @fabs(double %111) #7, !dbg !2459
  %113 = fcmp olt double %112, 1.000000e-10, !dbg !2461
  br i1 %113, label %136, label %114, !dbg !2462

; <label>:114                                     ; preds = %0
  %115 = fdiv double 1.000000e+00, %111, !dbg !2463
  tail call void @llvm.dbg.value(metadata double %115, i64 0, metadata !244, metadata !650), !dbg !2458
  tail call void @llvm.dbg.value(metadata double* %12, i64 0, metadata !356, metadata !650), !dbg !2464
  tail call void @llvm.dbg.value(metadata double %115, i64 0, metadata !357, metadata !650), !dbg !2466
  %116 = load double* %12, align 8, !dbg !2467, !tbaa !677
  %117 = insertelement <2 x double> undef, double %115, i32 0, !dbg !2467
  %118 = insertelement <2 x double> %117, double %115, i32 1, !dbg !2467
  %119 = insertelement <2 x double> undef, double %116, i32 0, !dbg !2467
  %120 = insertelement <2 x double> %119, double %41, i32 1, !dbg !2467
  %121 = fmul <2 x double> %118, %120, !dbg !2467
  %122 = bitcast [3 x double]* %outM to <2 x double>*, !dbg !2467
  store <2 x double> %121, <2 x double>* %122, align 8, !dbg !2467, !tbaa !677
  tail call void @llvm.dbg.value(metadata double* %23, i64 0, metadata !356, metadata !650), !dbg !2468
  tail call void @llvm.dbg.value(metadata double %115, i64 0, metadata !357, metadata !650), !dbg !2470
  %123 = insertelement <2 x double> undef, double %67, i32 0, !dbg !2471
  %124 = insertelement <2 x double> %123, double %22, i32 1, !dbg !2471
  %125 = fmul <2 x double> %124, %118, !dbg !2471
  %126 = bitcast double* %68 to <2 x double>*, !dbg !2471
  store <2 x double> %125, <2 x double>* %126, align 8, !dbg !2471, !tbaa !677
  %127 = insertelement <2 x double> undef, double %50, i32 0, !dbg !2472
  %128 = insertelement <2 x double> %127, double %76, i32 1, !dbg !2472
  %129 = fmul <2 x double> %128, %118, !dbg !2472
  %130 = bitcast double* %51 to <2 x double>*, !dbg !2472
  store <2 x double> %129, <2 x double>* %130, align 8, !dbg !2472, !tbaa !677
  tail call void @llvm.dbg.value(metadata double* %31, i64 0, metadata !356, metadata !650), !dbg !2473
  tail call void @llvm.dbg.value(metadata double %115, i64 0, metadata !357, metadata !650), !dbg !2475
  %131 = insertelement <2 x double> undef, double %30, i32 0, !dbg !2476
  %132 = insertelement <2 x double> %131, double %59, i32 1, !dbg !2476
  %133 = fmul <2 x double> %132, %118, !dbg !2476
  %134 = bitcast double* %31 to <2 x double>*, !dbg !2476
  store <2 x double> %133, <2 x double>* %134, align 8, !dbg !2476, !tbaa !677
  %135 = fmul double %115, %84, !dbg !2477
  store double %135, double* %85, align 8, !dbg !2477, !tbaa !677
  br label %136, !dbg !2478

; <label>:136                                     ; preds = %0, %114
  %.0 = phi i32 [ 1, %114 ], [ 0, %0 ]
  ret i32 %.0, !dbg !2479
}
