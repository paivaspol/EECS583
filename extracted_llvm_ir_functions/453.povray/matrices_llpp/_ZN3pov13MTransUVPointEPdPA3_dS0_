define void @_ZN3pov13MTransUVPointEPdPA3_dS0_(double* nocapture readonly %p, [3 x double]* nocapture readonly %m, double* nocapture %t) #0 {
  tail call void @llvm.dbg.value(metadata double* %p, i64 0, metadata !297, metadata !650), !dbg !2490
  tail call void @llvm.dbg.value(metadata [3 x double]* %m, i64 0, metadata !298, metadata !650), !dbg !2491
  tail call void @llvm.dbg.value(metadata double* %t, i64 0, metadata !299, metadata !650), !dbg !2492
  %1 = load double* %p, align 8, !dbg !2493, !tbaa !677
  %2 = getelementptr inbounds [3 x double]* %m, i64 0, i64 0, !dbg !2494
  %3 = load double* %2, align 8, !dbg !2494, !tbaa !677
  %4 = fmul double %1, %3, !dbg !2495
  %5 = getelementptr inbounds double* %p, i64 1, !dbg !2496
  %6 = load double* %5, align 8, !dbg !2496, !tbaa !677
  %7 = getelementptr inbounds [3 x double]* %m, i64 1, i64 0, !dbg !2497
  %8 = load double* %7, align 8, !dbg !2497, !tbaa !677
  %9 = fmul double %6, %8, !dbg !2498
  %10 = fadd double %4, %9, !dbg !2499
  %11 = getelementptr inbounds [3 x double]* %m, i64 2, i64 0, !dbg !2500
  %12 = load double* %11, align 8, !dbg !2500, !tbaa !677
  %13 = fadd double %12, %10, !dbg !2501
  store double %13, double* %t, align 8, !dbg !2502, !tbaa !677
  %14 = load double* %p, align 8, !dbg !2503, !tbaa !677
  %15 = getelementptr inbounds [3 x double]* %m, i64 0, i64 1, !dbg !2504
  %16 = load double* %15, align 8, !dbg !2504, !tbaa !677
  %17 = fmul double %14, %16, !dbg !2505
  %18 = load double* %5, align 8, !dbg !2506, !tbaa !677
  %19 = getelementptr inbounds [3 x double]* %m, i64 1, i64 1, !dbg !2507
  %20 = load double* %19, align 8, !dbg !2507, !tbaa !677
  %21 = fmul double %18, %20, !dbg !2508
  %22 = fadd double %17, %21, !dbg !2509
  %23 = getelementptr inbounds [3 x double]* %m, i64 2, i64 1, !dbg !2510
  %24 = load double* %23, align 8, !dbg !2510, !tbaa !677
  %25 = fadd double %24, %22, !dbg !2511
  %26 = getelementptr inbounds double* %t, i64 1, !dbg !2512
  store double %25, double* %26, align 8, !dbg !2513, !tbaa !677
  %27 = load double* %p, align 8, !dbg !2514, !tbaa !677
  %28 = getelementptr inbounds [3 x double]* %m, i64 0, i64 2, !dbg !2515
  %29 = load double* %28, align 8, !dbg !2515, !tbaa !677
  %30 = fmul double %27, %29, !dbg !2516
  %31 = load double* %5, align 8, !dbg !2517, !tbaa !677
  %32 = getelementptr inbounds [3 x double]* %m, i64 1, i64 2, !dbg !2518
  %33 = load double* %32, align 8, !dbg !2518, !tbaa !677
  %34 = fmul double %31, %33, !dbg !2519
  %35 = fadd double %30, %34, !dbg !2520
  %36 = getelementptr inbounds [3 x double]* %m, i64 2, i64 2, !dbg !2521
  %37 = load double* %36, align 8, !dbg !2521, !tbaa !677
  %38 = fadd double %37, %35, !dbg !2522
  tail call void @llvm.dbg.value(metadata double %38, i64 0, metadata !300, metadata !650), !dbg !2523
  %39 = insertelement <2 x double> undef, double %13, i32 0, !dbg !2524
  %40 = insertelement <2 x double> %39, double %25, i32 1, !dbg !2524
  %41 = insertelement <2 x double> undef, double %38, i32 0, !dbg !2524
  %42 = insertelement <2 x double> %41, double %38, i32 1, !dbg !2524
  %43 = fdiv <2 x double> %40, %42, !dbg !2524
  %44 = bitcast double* %t to <2 x double>*, !dbg !2524
  store <2 x double> %43, <2 x double>* %44, align 8, !dbg !2524, !tbaa !677
  ret void, !dbg !2525
}
