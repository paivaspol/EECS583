define void @_ZN3pov18MInvTransDirectionEPdS0_PNS_16Transform_StructE(double* nocapture %result, double* nocapture %vector, %"struct.pov::Transform_Struct"* nocapture %transform) #0 {
entry:
  %answer_array = alloca [4 x double], align 16
  call void @llvm.dbg.value(metadata !{double* %result}, i64 0, metadata !119), !dbg !534
  call void @llvm.dbg.value(metadata !{double* %vector}, i64 0, metadata !120), !dbg !534
  call void @llvm.dbg.value(metadata !{%"struct.pov::Transform_Struct"* %transform}, i64 0, metadata !121), !dbg !534
  call void @llvm.dbg.declare(metadata !{[4 x double]* %answer_array}, metadata !123), !dbg !535
  call void @llvm.dbg.value(metadata !11, i64 0, metadata !122), !dbg !536
  %0 = load double* %vector, align 8, !dbg !538, !tbaa !397
  %arrayidx3 = getelementptr inbounds double* %vector, i64 1, !dbg !538
  %1 = load double* %arrayidx3, align 8, !dbg !538, !tbaa !397
  %arrayidx8 = getelementptr inbounds double* %vector, i64 2, !dbg !538
  %2 = load double* %arrayidx8, align 8, !dbg !538, !tbaa !397
  br label %for.body, !dbg !536

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx2 = getelementptr inbounds %"struct.pov::Transform_Struct"* %transform, i64 0, i32 1, i64 0, i64 %indvars.iv, !dbg !538
  %3 = load double* %arrayidx2, align 8, !dbg !538, !tbaa !397
  %mul = fmul double %0, %3, !dbg !538
  %arrayidx6 = getelementptr inbounds %"struct.pov::Transform_Struct"* %transform, i64 0, i32 1, i64 1, i64 %indvars.iv, !dbg !538
  %4 = load double* %arrayidx6, align 8, !dbg !538, !tbaa !397
  %mul7 = fmul double %1, %4, !dbg !538
  %add = fadd double %mul, %mul7, !dbg !538
  %arrayidx11 = getelementptr inbounds %"struct.pov::Transform_Struct"* %transform, i64 0, i32 1, i64 2, i64 %indvars.iv, !dbg !538
  %5 = load double* %arrayidx11, align 8, !dbg !538, !tbaa !397
  %mul12 = fmul double %2, %5, !dbg !538
  %add13 = fadd double %add, %mul12, !dbg !538
  %arrayidx15 = getelementptr inbounds [4 x double]* %answer_array, i64 0, i64 %indvars.iv, !dbg !538
  store double %add13, double* %arrayidx15, align 8, !dbg !538, !tbaa !397
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !536
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !536
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !536
  br i1 %exitcond, label %for.end, label %for.body, !dbg !536

for.end:                                          ; preds = %for.body
  %arrayidx16 = getelementptr inbounds [4 x double]* %answer_array, i64 0, i64 0, !dbg !540
  %6 = load double* %arrayidx16, align 16, !dbg !540, !tbaa !397
  store double %6, double* %result, align 8, !dbg !540, !tbaa !397
  %arrayidx18 = getelementptr inbounds [4 x double]* %answer_array, i64 0, i64 1, !dbg !541
  %7 = load double* %arrayidx18, align 8, !dbg !541, !tbaa !397
  %arrayidx19 = getelementptr inbounds double* %result, i64 1, !dbg !541
  store double %7, double* %arrayidx19, align 8, !dbg !541, !tbaa !397
  %arrayidx20 = getelementptr inbounds [4 x double]* %answer_array, i64 0, i64 2, !dbg !542
  %8 = load double* %arrayidx20, align 16, !dbg !542, !tbaa !397
  %arrayidx21 = getelementptr inbounds double* %result, i64 2, !dbg !542
  store double %8, double* %arrayidx21, align 8, !dbg !542, !tbaa !397
  ret void, !dbg !543
}
