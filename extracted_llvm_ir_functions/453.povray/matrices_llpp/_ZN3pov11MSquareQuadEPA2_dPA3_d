define void @_ZN3pov11MSquareQuadEPA2_dPA3_d([2 x double]* nocapture %st, [3 x double]* nocapture %sq) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{[2 x double]* %st}, i64 0, metadata !302), !dbg !939
  tail call void @llvm.dbg.value(metadata !{[3 x double]* %sq}, i64 0, metadata !303), !dbg !939
  %arrayidx1 = getelementptr inbounds [2 x double]* %st, i64 1, i64 0, !dbg !940
  %0 = load double* %arrayidx1, align 8, !dbg !940, !tbaa !397
  %arrayidx3 = getelementptr inbounds [2 x double]* %st, i64 2, i64 0, !dbg !940
  %1 = load double* %arrayidx3, align 8, !dbg !940, !tbaa !397
  %sub = fsub double %0, %1, !dbg !940
  tail call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !306), !dbg !940
  %arrayidx5 = getelementptr inbounds [2 x double]* %st, i64 3, i64 0, !dbg !941
  %2 = load double* %arrayidx5, align 8, !dbg !941, !tbaa !397
  %sub8 = fsub double %2, %1, !dbg !941
  tail call void @llvm.dbg.value(metadata !{double %sub8}, i64 0, metadata !307), !dbg !941
  %arrayidx10 = getelementptr inbounds [2 x double]* %st, i64 1, i64 1, !dbg !942
  %3 = load double* %arrayidx10, align 8, !dbg !942, !tbaa !397
  %arrayidx12 = getelementptr inbounds [2 x double]* %st, i64 2, i64 1, !dbg !942
  %4 = load double* %arrayidx12, align 8, !dbg !942, !tbaa !397
  %sub13 = fsub double %3, %4, !dbg !942
  tail call void @llvm.dbg.value(metadata !{double %sub13}, i64 0, metadata !308), !dbg !942
  %arrayidx15 = getelementptr inbounds [2 x double]* %st, i64 3, i64 1, !dbg !943
  %5 = load double* %arrayidx15, align 8, !dbg !943, !tbaa !397
  %sub18 = fsub double %5, %4, !dbg !943
  tail call void @llvm.dbg.value(metadata !{double %sub18}, i64 0, metadata !309), !dbg !943
  %arrayidx20 = getelementptr inbounds [2 x double]* %st, i64 0, i64 0, !dbg !944
  %6 = load double* %arrayidx20, align 8, !dbg !944, !tbaa !397
  %sub23 = fsub double %6, %0, !dbg !944
  %add = fadd double %1, %sub23, !dbg !944
  %sub28 = fsub double %add, %2, !dbg !944
  tail call void @llvm.dbg.value(metadata !{double %sub28}, i64 0, metadata !304), !dbg !944
  %arrayidx30 = getelementptr inbounds [2 x double]* %st, i64 0, i64 1, !dbg !945
  %7 = load double* %arrayidx30, align 8, !dbg !945, !tbaa !397
  %sub33 = fsub double %7, %3, !dbg !945
  %add36 = fadd double %4, %sub33, !dbg !945
  %sub39 = fsub double %add36, %5, !dbg !945
  tail call void @llvm.dbg.value(metadata !{double %sub39}, i64 0, metadata !305), !dbg !945
  %mul = fmul double %sub, %sub18, !dbg !946
  %mul40 = fmul double %sub8, %sub13, !dbg !946
  %sub41 = fsub double %mul, %mul40, !dbg !946
  tail call void @llvm.dbg.value(metadata !{double %sub41}, i64 0, metadata !310), !dbg !946
  %cmp = fcmp oeq double %sub41, 0.000000e+00, !dbg !947
  br i1 %cmp, label %if.then, label %if.end, !dbg !947

if.then:                                          ; preds = %entry
  %call = tail call i32 (i8*, ...)* @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([45 x i8]* @.str7, i64 0, i64 0), double %sub41) #7, !dbg !948
  br label %if.end, !dbg !948

if.end:                                           ; preds = %if.then, %entry
  %mul42 = fmul double %sub18, %sub28, !dbg !949
  %mul43 = fmul double %sub8, %sub39, !dbg !949
  %sub44 = fsub double %mul42, %mul43, !dbg !949
  %div = fdiv double %sub44, %sub41, !dbg !949
  %arrayidx46 = getelementptr inbounds [3 x double]* %sq, i64 0, i64 2, !dbg !949
  store double %div, double* %arrayidx46, align 8, !dbg !949, !tbaa !397
  %mul47 = fmul double %sub, %sub39, !dbg !950
  %mul48 = fmul double %sub13, %sub28, !dbg !950
  %sub49 = fsub double %mul47, %mul48, !dbg !950
  %div50 = fdiv double %sub49, %sub41, !dbg !950
  %arrayidx52 = getelementptr inbounds [3 x double]* %sq, i64 1, i64 2, !dbg !950
  store double %div50, double* %arrayidx52, align 8, !dbg !950, !tbaa !397
  %arrayidx54 = getelementptr inbounds [3 x double]* %sq, i64 2, i64 2, !dbg !951
  store double 1.000000e+00, double* %arrayidx54, align 8, !dbg !951, !tbaa !397
  %8 = load double* %arrayidx1, align 8, !dbg !952, !tbaa !397
  %9 = load double* %arrayidx20, align 8, !dbg !952, !tbaa !397
  %sub59 = fsub double %8, %9, !dbg !952
  %mul64 = fmul double %8, %div, !dbg !952
  %add65 = fadd double %sub59, %mul64, !dbg !952
  %arrayidx67 = getelementptr inbounds [3 x double]* %sq, i64 0, i64 0, !dbg !952
  store double %add65, double* %arrayidx67, align 8, !dbg !952, !tbaa !397
  %10 = load double* %arrayidx5, align 8, !dbg !953, !tbaa !397
  %11 = load double* %arrayidx20, align 8, !dbg !953, !tbaa !397
  %sub72 = fsub double %10, %11, !dbg !953
  %mul77 = fmul double %10, %div50, !dbg !953
  %add78 = fadd double %sub72, %mul77, !dbg !953
  %arrayidx80 = getelementptr inbounds [3 x double]* %sq, i64 1, i64 0, !dbg !953
  store double %add78, double* %arrayidx80, align 8, !dbg !953, !tbaa !397
  %12 = load double* %arrayidx20, align 8, !dbg !954, !tbaa !397
  %arrayidx84 = getelementptr inbounds [3 x double]* %sq, i64 2, i64 0, !dbg !954
  store double %12, double* %arrayidx84, align 8, !dbg !954, !tbaa !397
  %13 = load double* %arrayidx10, align 8, !dbg !955, !tbaa !397
  %14 = load double* %arrayidx30, align 8, !dbg !955, !tbaa !397
  %sub89 = fsub double %13, %14, !dbg !955
  %mul94 = fmul double %13, %div, !dbg !955
  %add95 = fadd double %sub89, %mul94, !dbg !955
  %arrayidx97 = getelementptr inbounds [3 x double]* %sq, i64 0, i64 1, !dbg !955
  store double %add95, double* %arrayidx97, align 8, !dbg !955, !tbaa !397
  %15 = load double* %arrayidx15, align 8, !dbg !956, !tbaa !397
  %16 = load double* %arrayidx30, align 8, !dbg !956, !tbaa !397
  %sub102 = fsub double %15, %16, !dbg !956
  %mul107 = fmul double %15, %div50, !dbg !956
  %add108 = fadd double %sub102, %mul107, !dbg !956
  %arrayidx110 = getelementptr inbounds [3 x double]* %sq, i64 1, i64 1, !dbg !956
  store double %add108, double* %arrayidx110, align 8, !dbg !956, !tbaa !397
  %17 = load double* %arrayidx30, align 8, !dbg !957, !tbaa !397
  %arrayidx114 = getelementptr inbounds [3 x double]* %sq, i64 2, i64 1, !dbg !957
  store double %17, double* %arrayidx114, align 8, !dbg !957, !tbaa !397
  ret void, !dbg !958
}
