define i32 @_Z14POVMSAttr_CopyP9POVMSDataS0_(%struct.POVMSData* %sourceattr, %struct.POVMSData* %destattr) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.POVMSData* %sourceattr}, i64 0, metadata !578), !dbg !2061
  tail call void @llvm.dbg.value(metadata !{%struct.POVMSData* %destattr}, i64 0, metadata !579), !dbg !2061
  %cmp = icmp eq %struct.POVMSData* %sourceattr, null, !dbg !2062
  %cmp1 = icmp eq %struct.POVMSData* %destattr, null, !dbg !2063
  %or.cond = or i1 %cmp, %cmp1, !dbg !2062
  %cmp4 = icmp eq %struct.POVMSData* %sourceattr, %destattr, !dbg !2064
  %or.cond53 = or i1 %or.cond, %cmp4, !dbg !2062
  br i1 %or.cond53, label %return, label %if.end6, !dbg !2062

if.end6:                                          ; preds = %entry
  %size = getelementptr inbounds %struct.POVMSData* %sourceattr, i64 0, i32 1, !dbg !2065
  %0 = load i32* %size, align 4, !dbg !2065, !tbaa !937
  %cmp7 = icmp slt i32 %0, 0, !dbg !2065
  br i1 %cmp7, label %return, label %if.end9, !dbg !2065

if.end9:                                          ; preds = %if.end6
  %type = getelementptr inbounds %struct.POVMSData* %sourceattr, i64 0, i32 0, !dbg !2066
  %1 = load i32* %type, align 4, !dbg !2066, !tbaa !937
  switch i32 %1, label %if.else16 [
    i32 1329744453, label %if.then11
    i32 1279873876, label %if.then14
  ], !dbg !2066

if.then11:                                        ; preds = %if.end9
  %call = tail call i32 @_Z16POVMSObject_CopyP9POVMSDataS0_(%struct.POVMSData* %sourceattr, %struct.POVMSData* %destattr) #8, !dbg !2067
  br label %return, !dbg !2067

if.then14:                                        ; preds = %if.end9
  %call15 = tail call i32 @_Z18POVMSAttrList_CopyP9POVMSDataS0_(%struct.POVMSData* %sourceattr, %struct.POVMSData* %destattr) #8, !dbg !2069
  br label %return, !dbg !2069

if.else16:                                        ; preds = %if.end9
  %2 = bitcast %struct.POVMSData* %destattr to i8*, !dbg !2071
  %3 = bitcast %struct.POVMSData* %sourceattr to i8*, !dbg !2071
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 16, i32 8, i1 false), !dbg !2071, !tbaa.struct !1505
  %ptr = getelementptr inbounds %struct.POVMSData* %sourceattr, i64 0, i32 2, i32 0, !dbg !2073
  %4 = load i8** %ptr, align 8, !dbg !2073, !tbaa !917
  %cmp17 = icmp eq i8* %4, null, !dbg !2073
  br i1 %cmp17, label %return, label %if.then18, !dbg !2073

if.then18:                                        ; preds = %if.else16
  %5 = load i32* %size, align 4, !dbg !2074, !tbaa !937
  %conv = sext i32 %5 to i64, !dbg !2074
  %call20 = tail call noalias i8* @malloc(i64 %conv) #9, !dbg !2074
  %ptr21 = getelementptr inbounds %struct.POVMSData* %destattr, i64 0, i32 2, i32 0, !dbg !2074
  store i8* %call20, i8** %ptr21, align 8, !dbg !2074, !tbaa !917
  %cmp23 = icmp eq i8* %call20, null, !dbg !2076
  tail call void @llvm.dbg.value(metadata !2077, i64 0, metadata !2078) #6, !dbg !2079
  tail call void @llvm.dbg.value(metadata !925, i64 0, metadata !2080) #6, !dbg !2079
  tail call void @llvm.dbg.value(metadata !2081, i64 0, metadata !2082) #6, !dbg !2079
  br i1 %cmp23, label %_Z20POVMS_AssertFunctioniPKcS0_i.exit.thread, label %if.end28, !dbg !2083

_Z20POVMS_AssertFunctioniPKcS0_i.exit.thread:     ; preds = %if.then18
  %6 = load %struct._IO_FILE** @stderr, align 8, !dbg !2084, !tbaa !917
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([39 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 2761, i8* getelementptr inbounds ([37 x i8]* @.str8, i64 0, i64 0)) #9, !dbg !2084
  br label %return, !dbg !2076

if.end28:                                         ; preds = %if.then18
  %7 = load i8** %ptr, align 8, !dbg !2085, !tbaa !917
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %call20, i8* %7, i64 %conv, i32 1, i1 false), !dbg !2085
  br label %return, !dbg !2086

return:                                           ; preds = %_Z20POVMS_AssertFunctioniPKcS0_i.exit.thread, %if.end28, %if.else16, %if.end6, %entry, %if.then14, %if.then11
  %retval.0 = phi i32 [ %call, %if.then11 ], [ %call15, %if.then14 ], [ -1, %entry ], [ -1, %if.end6 ], [ 0, %if.else16 ], [ 0, %if.end28 ], [ -2, %_Z20POVMS_AssertFunctioniPKcS0_i.exit.thread ]
  ret i32 %retval.0, !dbg !2087
}
