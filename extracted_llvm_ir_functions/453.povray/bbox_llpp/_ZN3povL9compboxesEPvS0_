define internal i32 @_ZN3povL9compboxesEPvS0_(i8* nocapture readonly %in_a, i8* nocapture readonly %in_b) #5 {
  tail call void @llvm.dbg.value(metadata i8* %in_a, i64 0, metadata !1162, metadata !1499), !dbg !2777
  tail call void @llvm.dbg.value(metadata i8* %in_b, i64 0, metadata !1163, metadata !1499), !dbg !2778
  %1 = bitcast i8* %in_a to %"struct.pov::BBox_Tree_Struct"**, !dbg !2779
  %2 = load %"struct.pov::BBox_Tree_Struct"** %1, align 8, !dbg !2780, !tbaa !1519
  %3 = bitcast i8* %in_b to %"struct.pov::BBox_Tree_Struct"**, !dbg !2781
  %4 = load %"struct.pov::BBox_Tree_Struct"** %3, align 8, !dbg !2782, !tbaa !1519
  %5 = load i32* @_ZN3povL4AxisE, align 4, !dbg !2783, !tbaa !1974
  %6 = sext i32 %5 to i64, !dbg !2784
  %7 = getelementptr inbounds %"struct.pov::BBox_Tree_Struct"* %2, i64 0, i32 2, i32 0, i64 %6, !dbg !2784
  %8 = load float* %7, align 4, !dbg !2784, !tbaa !1604
  %9 = getelementptr inbounds %"struct.pov::BBox_Tree_Struct"* %2, i64 0, i32 2, i32 1, i64 %6, !dbg !2785
  %10 = load float* %9, align 4, !dbg !2785, !tbaa !1604
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !1166, metadata !1499), !dbg !2786
  %11 = getelementptr inbounds %"struct.pov::BBox_Tree_Struct"* %4, i64 0, i32 2, i32 0, i64 %6, !dbg !2787
  %12 = load float* %11, align 4, !dbg !2787, !tbaa !1604
  %13 = insertelement <2 x float> undef, float %8, i32 0, !dbg !2784
  %14 = insertelement <2 x float> %13, float %12, i32 1, !dbg !2784
  %15 = fpext <2 x float> %14 to <2 x double>, !dbg !2784
  %16 = fmul <2 x double> %15, <double 2.000000e+00, double 2.000000e+00>, !dbg !2788
  %17 = getelementptr inbounds %"struct.pov::BBox_Tree_Struct"* %4, i64 0, i32 2, i32 1, i64 %6, !dbg !2789
  %18 = load float* %17, align 4, !dbg !2789, !tbaa !1604
  %19 = insertelement <2 x float> undef, float %10, i32 0, !dbg !2785
  %20 = insertelement <2 x float> %19, float %18, i32 1, !dbg !2785
  %21 = fpext <2 x float> %20 to <2 x double>, !dbg !2785
  %22 = fadd <2 x double> %16, %21, !dbg !2790
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !1167, metadata !1499), !dbg !2791
  %23 = extractelement <2 x double> %22, i32 0, !dbg !2792
  %24 = extractelement <2 x double> %22, i32 1, !dbg !2792
  %25 = fcmp olt double %23, %24, !dbg !2792
  br i1 %25, label %27, label %26, !dbg !2794

; <label>:26                                      ; preds = %0
  %not. = fcmp une double %23, %24, !dbg !2795
  %. = zext i1 %not. to i32, !dbg !2795
  br label %27, !dbg !2795

; <label>:27                                      ; preds = %26, %0
  %.0 = phi i32 [ -1, %0 ], [ %., %26 ]
  ret i32 %.0, !dbg !2799
}
