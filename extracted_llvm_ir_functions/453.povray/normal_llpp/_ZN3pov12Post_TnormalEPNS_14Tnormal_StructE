define void @_ZN3pov12Post_TnormalEPNS_14Tnormal_StructE(%"struct.pov::Tnormal_Struct"* %Tnormal) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::Tnormal_Struct"* %Tnormal}, i64 0, metadata !845), !dbg !1218
  %cmp = icmp eq %"struct.pov::Tnormal_Struct"* %Tnormal, null, !dbg !1219
  br i1 %cmp, label %if.end42, label %if.then, !dbg !1219

if.then:                                          ; preds = %entry
  %Flags = getelementptr inbounds %"struct.pov::Tnormal_Struct"* %Tnormal, i64 0, i32 2, !dbg !1220
  %0 = load i16* %Flags, align 2, !dbg !1220, !tbaa !1222
  %and = and i16 %0, 4, !dbg !1220
  %tobool = icmp eq i16 %and, 0, !dbg !1220
  br i1 %tobool, label %if.end, label %if.end42, !dbg !1220

if.end:                                           ; preds = %if.then
  %Type = getelementptr inbounds %"struct.pov::Tnormal_Struct"* %Tnormal, i64 0, i32 0, !dbg !1223
  %1 = load i16* %Type, align 2, !dbg !1223, !tbaa !1222
  %cmp3 = icmp eq i16 %1, 0, !dbg !1223
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1223

if.then4:                                         ; preds = %if.end
  %call = tail call i32 (i8*, ...)* @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0)) #6, !dbg !1224
  %.pre = load i16* %Flags, align 2, !dbg !1226, !tbaa !1222
  br label %if.end5, !dbg !1227

if.end5:                                          ; preds = %if.then4, %if.end
  %2 = phi i16 [ %.pre, %if.then4 ], [ %0, %if.end ]
  %or = or i16 %2, 4, !dbg !1226
  store i16 %or, i16* %Flags, align 2, !dbg !1226, !tbaa !1222
  %Blend_Map = getelementptr inbounds %"struct.pov::Tnormal_Struct"* %Tnormal, i64 0, i32 9, !dbg !1228
  %3 = load %"struct.pov::Blend_Map_Struct"** %Blend_Map, align 8, !dbg !1228, !tbaa !1229
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::Blend_Map_Struct"* %3}, i64 0, metadata !847), !dbg !1228
  %cmp9 = icmp eq %"struct.pov::Blend_Map_Struct"* %3, null, !dbg !1228
  br i1 %cmp9, label %if.end42, label %for.cond.preheader, !dbg !1228

for.cond.preheader:                               ; preds = %if.end5
  %Number_Of_Entries = getelementptr inbounds %"struct.pov::Blend_Map_Struct"* %3, i64 0, i32 1, !dbg !1230
  %4 = load i16* %Number_Of_Entries, align 2, !dbg !1230, !tbaa !1222
  %cmp1259 = icmp sgt i16 %4, 0, !dbg !1230
  br i1 %cmp1259, label %for.body.lr.ph, label %if.end42, !dbg !1230

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %Type13 = getelementptr inbounds %"struct.pov::Blend_Map_Struct"* %3, i64 0, i32 3, !dbg !1233
  %Blend_Map_Entries = getelementptr inbounds %"struct.pov::Blend_Map_Struct"* %3, i64 0, i32 4, !dbg !1235
  br label %for.body, !dbg !1230

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %5 = load i8* %Type13, align 1, !dbg !1233, !tbaa !1191
  %conv14 = sext i8 %5 to i32, !dbg !1233
  switch i32 %conv14, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb16
    i32 4, label %sw.bb34
    i32 6, label %for.inc
    i32 5, label %for.inc
    i32 2, label %for.inc
  ], !dbg !1233

sw.bb:                                            ; preds = %for.body
  %6 = load %"struct.pov::Blend_Map_Entry"** %Blend_Map_Entries, align 8, !dbg !1235, !tbaa !1229
  %Vals = getelementptr inbounds %"struct.pov::Blend_Map_Entry"* %6, i64 %indvars.iv, i32 2, !dbg !1235
  %Pigment = bitcast %union.anon* %Vals to %"struct.pov::Pigment_Struct"**, !dbg !1235
  %7 = load %"struct.pov::Pigment_Struct"** %Pigment, align 8, !dbg !1235, !tbaa !1229
  %call15 = tail call i32 @_ZN3pov12Post_PigmentEPNS_14Pigment_StructE(%"struct.pov::Pigment_Struct"* %7) #6, !dbg !1235
  br label %for.inc, !dbg !1237

sw.bb16:                                          ; preds = %for.body
  %8 = load i16* %Flags, align 2, !dbg !1238, !tbaa !1222
  %and19 = and i16 %8, 8, !dbg !1238
  %9 = load %"struct.pov::Blend_Map_Entry"** %Blend_Map_Entries, align 8, !dbg !1238, !tbaa !1229
  %Vals23 = getelementptr inbounds %"struct.pov::Blend_Map_Entry"* %9, i64 %indvars.iv, i32 2, !dbg !1238
  %Tnormal24 = bitcast %union.anon* %Vals23 to %"struct.pov::Tnormal_Struct"**, !dbg !1238
  %10 = load %"struct.pov::Tnormal_Struct"** %Tnormal24, align 8, !dbg !1238, !tbaa !1229
  %Flags25 = getelementptr inbounds %"struct.pov::Tnormal_Struct"* %10, i64 0, i32 2, !dbg !1238
  %11 = load i16* %Flags25, align 2, !dbg !1238, !tbaa !1222
  %or27 = or i16 %11, %and19, !dbg !1238
  store i16 %or27, i16* %Flags25, align 2, !dbg !1238, !tbaa !1222
  tail call void @_ZN3pov12Post_TnormalEPNS_14Tnormal_StructE(%"struct.pov::Tnormal_Struct"* %10) #6, !dbg !1239
  br label %for.inc, !dbg !1240

sw.bb34:                                          ; preds = %for.body
  %12 = load %"struct.pov::Blend_Map_Entry"** %Blend_Map_Entries, align 8, !dbg !1241, !tbaa !1229
  %Vals38 = getelementptr inbounds %"struct.pov::Blend_Map_Entry"* %12, i64 %indvars.iv, i32 2, !dbg !1241
  %Texture = bitcast %union.anon* %Vals38 to %"struct.pov::Texture_Struct"**, !dbg !1241
  %13 = load %"struct.pov::Texture_Struct"** %Texture, align 8, !dbg !1241, !tbaa !1229
  tail call void @_ZN3pov13Post_TexturesEPNS_14Texture_StructE(%"struct.pov::Texture_Struct"* %13) #6, !dbg !1241
  br label %for.inc, !dbg !1242

sw.default:                                       ; preds = %for.body
  %call40 = tail call i32 (i8*, ...)* @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([38 x i8]* @.str3, i64 0, i64 0)) #6, !dbg !1243
  br label %for.inc, !dbg !1244

for.inc:                                          ; preds = %sw.bb, %sw.bb16, %sw.bb34, %sw.default, %for.body, %for.body, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1230
  %14 = load i16* %Number_Of_Entries, align 2, !dbg !1230, !tbaa !1222
  %conv11 = sext i16 %14 to i32, !dbg !1230
  %15 = trunc i64 %indvars.iv.next to i32, !dbg !1230
  %cmp12 = icmp slt i32 %15, %conv11, !dbg !1230
  br i1 %cmp12, label %for.body, label %if.end42, !dbg !1230

if.end42:                                         ; preds = %for.cond.preheader, %for.inc, %if.end5, %if.then, %entry
  ret void, !dbg !1245
}
