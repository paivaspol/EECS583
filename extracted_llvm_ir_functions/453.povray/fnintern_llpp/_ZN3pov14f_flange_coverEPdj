define double @_ZN3pov14f_flange_coverEPdj(double* nocapture %ptr, i32) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %ptr}, i64 0, metadata !181), !dbg !1859
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !182), !dbg !1859
  %1 = load double* %ptr, align 8, !dbg !1860, !tbaa !1656
  %mul = fmul double %1, %1, !dbg !1860
  tail call void @llvm.dbg.value(metadata !{double %mul}, i64 0, metadata !184), !dbg !1860
  %arrayidx2 = getelementptr inbounds double* %ptr, i64 1, !dbg !1860
  %2 = load double* %arrayidx2, align 8, !dbg !1860, !tbaa !1656
  %mul4 = fmul double %2, %2, !dbg !1860
  tail call void @llvm.dbg.value(metadata !{double %mul4}, i64 0, metadata !185), !dbg !1860
  %arrayidx5 = getelementptr inbounds double* %ptr, i64 2, !dbg !1860
  %3 = load double* %arrayidx5, align 8, !dbg !1860, !tbaa !1656
  %mul7 = fmul double %3, %3, !dbg !1860
  tail call void @llvm.dbg.value(metadata !{double %mul7}, i64 0, metadata !186), !dbg !1860
  %arrayidx8 = getelementptr inbounds double* %ptr, i64 3, !dbg !1861
  %4 = load double* %arrayidx8, align 8, !dbg !1861, !tbaa !1656
  %mul9 = fmul double %mul, %4, !dbg !1861
  %mul11 = fmul double %mul4, %4, !dbg !1861
  %add = fadd double %mul9, %mul11, !dbg !1861
  %add12 = fadd double %mul7, %add, !dbg !1861
  %arrayidx13 = getelementptr inbounds double* %ptr, i64 4, !dbg !1861
  %5 = load double* %arrayidx13, align 8, !dbg !1861, !tbaa !1656
  %6 = fmul double %5, %add12, !dbg !1861
  %mul14 = fsub double -0.000000e+00, %6, !dbg !1861
  %call = tail call double @exp(double %mul14) #8, !dbg !1861
  %7 = load double* %arrayidx8, align 8, !dbg !1861, !tbaa !1656
  %mul16 = fmul double %mul, %7, !dbg !1861
  %add17 = fadd double %mul4, %mul16, !dbg !1861
  %mul19 = fmul double %mul7, %7, !dbg !1861
  %add20 = fadd double %mul19, %add17, !dbg !1861
  %8 = load double* %arrayidx13, align 8, !dbg !1861, !tbaa !1656
  %9 = fmul double %8, %add20, !dbg !1861
  %mul23 = fsub double -0.000000e+00, %9, !dbg !1861
  %call24 = tail call double @exp(double %mul23) #8, !dbg !1861
  %add25 = fadd double %call, %call24, !dbg !1861
  %10 = load double* %arrayidx8, align 8, !dbg !1862, !tbaa !1656
  %mul27 = fmul double %mul4, %10, !dbg !1862
  %add28 = fadd double %mul, %mul27, !dbg !1862
  %mul30 = fmul double %mul7, %10, !dbg !1862
  %add31 = fadd double %mul30, %add28, !dbg !1862
  %11 = load double* %arrayidx13, align 8, !dbg !1862, !tbaa !1656
  %12 = fmul double %11, %add31, !dbg !1862
  %mul34 = fsub double -0.000000e+00, %12, !dbg !1862
  %call35 = tail call double @exp(double %mul34) #8, !dbg !1862
  %add36 = fadd double %add25, %call35, !dbg !1862
  tail call void @llvm.dbg.value(metadata !{double %add36}, i64 0, metadata !183), !dbg !1862
  %arrayidx37 = getelementptr inbounds double* %ptr, i64 6, !dbg !1863
  %13 = load double* %arrayidx37, align 8, !dbg !1863, !tbaa !1656
  %arrayidx38 = getelementptr inbounds double* %ptr, i64 5, !dbg !1863
  %14 = load double* %arrayidx38, align 8, !dbg !1863, !tbaa !1656
  %mul39 = fmul double %add36, %14, !dbg !1863
  %sub40 = fsub double %13, %mul39, !dbg !1863
  ret double %sub40, !dbg !1863
}
