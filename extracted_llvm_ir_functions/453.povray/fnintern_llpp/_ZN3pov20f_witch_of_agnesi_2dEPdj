define double @_ZN3pov20f_witch_of_agnesi_2dEPdj(double* nocapture %ptr, i32) #0 {
  tail call void @llvm.dbg.value(metadata double* %ptr, i64 0, metadata !1711, metadata !2347), !dbg !5858
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !1712, metadata !2347), !dbg !5859
  %2 = load double* %ptr, align 8, !dbg !5860, !tbaa !2351
  %3 = fmul double %2, %2, !dbg !5861
  tail call void @llvm.dbg.value(metadata double %3, i64 0, metadata !1714, metadata !2347), !dbg !5862
  %4 = getelementptr inbounds double* %ptr, i64 1, !dbg !5863
  %5 = load double* %4, align 8, !dbg !5863, !tbaa !2351
  %6 = getelementptr inbounds double* %ptr, i64 6, !dbg !5864
  %7 = load double* %6, align 8, !dbg !5864, !tbaa !2351
  %8 = fcmp ogt double %7, 0.000000e+00, !dbg !5864
  br i1 %8, label %9, label %36, !dbg !5866

; <label>:9                                       ; preds = %1
  %10 = getelementptr inbounds double* %ptr, i64 2, !dbg !5867
  %11 = load double* %10, align 8, !dbg !5867, !tbaa !2351
  %12 = fmul double %11, %11, !dbg !5867
  %13 = fadd double %3, %12, !dbg !5867
  %14 = tail call double @sqrt(double %13) #7, !dbg !5867
  %15 = getelementptr inbounds double* %ptr, i64 7, !dbg !5867
  %16 = load double* %15, align 8, !dbg !5867, !tbaa !2351
  %17 = fsub double %14, %16, !dbg !5867
  tail call void @llvm.dbg.value(metadata double %17, i64 0, metadata !1714, metadata !2347), !dbg !5862
  %18 = getelementptr inbounds double* %ptr, i64 8, !dbg !5867
  %19 = load double* %18, align 8, !dbg !5867, !tbaa !2351
  %20 = fmul double %19, 0x3F91DF46A2529D39, !dbg !5867
  tail call void @llvm.dbg.value(metadata double %20, i64 0, metadata !1716, metadata !2347), !dbg !5869
  %21 = fcmp une double %20, 0.000000e+00, !dbg !5870
  br i1 %21, label %22, label %31, !dbg !5867

; <label>:22                                      ; preds = %9
  %23 = tail call double @cos(double %20) #7, !dbg !5872
  %24 = fmul double %17, %23, !dbg !5872
  %25 = tail call double @sin(double %20) #7, !dbg !5872
  %26 = fmul double %5, %25, !dbg !5872
  %27 = fsub double %24, %26, !dbg !5872
  store double %27, double* %ptr, align 8, !dbg !5872, !tbaa !2351
  %28 = fmul double %17, %25, !dbg !5872
  %29 = fmul double %23, %5, !dbg !5872
  %30 = fadd double %28, %29, !dbg !5872
  store double %30, double* %4, align 8, !dbg !5872, !tbaa !2351
  br label %32, !dbg !5872

; <label>:31                                      ; preds = %9
  store double %17, double* %ptr, align 8, !dbg !5870, !tbaa !2351
  br label %32

; <label>:32                                      ; preds = %31, %22
  %33 = phi double [ %5, %31 ], [ %30, %22 ]
  %34 = phi double [ %17, %31 ], [ %27, %22 ]
  %35 = fmul double %34, %34, !dbg !5867
  tail call void @llvm.dbg.value(metadata double %35, i64 0, metadata !1714, metadata !2347), !dbg !5862
  br label %36, !dbg !5867

; <label>:36                                      ; preds = %32, %1
  %37 = phi double [ %33, %32 ], [ %5, %1 ]
  %x2.0 = phi double [ %35, %32 ], [ %3, %1 ]
  %38 = getelementptr inbounds double* %ptr, i64 4, !dbg !5874
  %39 = load double* %38, align 8, !dbg !5874, !tbaa !2351
  %40 = fmul double %39, %39, !dbg !5875
  %41 = fmul double %40, %37, !dbg !5876
  %42 = fmul double %x2.0, %37, !dbg !5877
  %43 = fadd double %41, %42, !dbg !5878
  %44 = getelementptr inbounds double* %ptr, i64 5, !dbg !5879
  %45 = load double* %44, align 8, !dbg !5879, !tbaa !2351
  %46 = fsub double %43, %45, !dbg !5880
  tail call void @llvm.dbg.value(metadata double 1.000000e+01, i64 0, metadata !1805, metadata !2347), !dbg !5881
  tail call void @llvm.dbg.value(metadata double 1.000000e+01, i64 0, metadata !1812, metadata !2347), !dbg !5885
  tail call void @llvm.dbg.value(metadata double 1.000000e+01, i64 0, metadata !1808, metadata !2347), !dbg !5886
  %47 = getelementptr inbounds double* %ptr, i64 3, !dbg !5887
  %48 = load double* %47, align 8, !dbg !5887, !tbaa !2351
  %49 = fmul double %48, %46, !dbg !5888
  %50 = fsub double -0.000000e+00, %49, !dbg !5888
  %51 = fcmp ogt double %49, 1.000000e+01, !dbg !5889
  %52 = select i1 %51, double -1.000000e+01, double %50, !dbg !5893
  %53 = fcmp olt double %52, 1.000000e+01, !dbg !5894
  %54 = select i1 %53, double %52, double 1.000000e+01, !dbg !5895
  ret double %54, !dbg !5896
}
