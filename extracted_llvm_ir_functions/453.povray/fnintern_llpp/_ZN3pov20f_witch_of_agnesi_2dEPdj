define double @_ZN3pov20f_witch_of_agnesi_2dEPdj(double* nocapture %ptr, i32) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %ptr}, i64 0, metadata !1431), !dbg !2565
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !1432), !dbg !2565
  %1 = load double* %ptr, align 8, !dbg !2566, !tbaa !1656
  %mul = fmul double %1, %1, !dbg !2566
  tail call void @llvm.dbg.value(metadata !{double %mul}, i64 0, metadata !1434), !dbg !2566
  %arrayidx2 = getelementptr inbounds double* %ptr, i64 1, !dbg !2566
  %arrayidx5 = getelementptr inbounds double* %ptr, i64 6, !dbg !2567
  %2 = load double* %arrayidx5, align 8, !dbg !2567, !tbaa !1656
  %cmp = fcmp ogt double %2, 0.000000e+00, !dbg !2567
  br i1 %cmp, label %if.then, label %if.end35, !dbg !2567

if.then:                                          ; preds = %entry
  %arrayidx6 = getelementptr inbounds double* %ptr, i64 2, !dbg !2568
  %3 = load double* %arrayidx6, align 8, !dbg !2568, !tbaa !1656
  %mul8 = fmul double %3, %3, !dbg !2568
  %add = fadd double %mul, %mul8, !dbg !2568
  %call = tail call double @sqrt(double %add) #8, !dbg !2568
  %arrayidx9 = getelementptr inbounds double* %ptr, i64 7, !dbg !2568
  %4 = load double* %arrayidx9, align 8, !dbg !2568, !tbaa !1656
  %sub = fsub double %call, %4, !dbg !2568
  tail call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !1434), !dbg !2568
  %arrayidx10 = getelementptr inbounds double* %ptr, i64 8, !dbg !2568
  %5 = load double* %arrayidx10, align 8, !dbg !2568, !tbaa !1656
  %mul11 = fmul double %5, 0x3F91DF46A2529D39, !dbg !2568
  tail call void @llvm.dbg.value(metadata !{double %mul11}, i64 0, metadata !1436), !dbg !2568
  %cmp12 = fcmp une double %mul11, 0.000000e+00, !dbg !2568
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !2568

if.then13:                                        ; preds = %if.then
  %call14 = tail call double @cos(double %mul11) #8, !dbg !2570
  %mul15 = fmul double %sub, %call14, !dbg !2570
  %6 = load double* %arrayidx2, align 8, !dbg !2570, !tbaa !1656
  %call17 = tail call double @sin(double %mul11) #8, !dbg !2570
  %mul18 = fmul double %6, %call17, !dbg !2570
  %sub19 = fsub double %mul15, %mul18, !dbg !2570
  store double %sub19, double* %ptr, align 8, !dbg !2570, !tbaa !1656
  %call21 = tail call double @sin(double %mul11) #8, !dbg !2570
  %mul22 = fmul double %sub, %call21, !dbg !2570
  %7 = load double* %arrayidx2, align 8, !dbg !2570, !tbaa !1656
  %call24 = tail call double @cos(double %mul11) #8, !dbg !2570
  %mul25 = fmul double %7, %call24, !dbg !2570
  %add26 = fadd double %mul22, %mul25, !dbg !2570
  store double %add26, double* %arrayidx2, align 8, !dbg !2570, !tbaa !1656
  %.pre = load double* %ptr, align 8, !dbg !2568, !tbaa !1656
  br label %if.end, !dbg !2570

if.else:                                          ; preds = %if.then
  store double %sub, double* %ptr, align 8, !dbg !2568, !tbaa !1656
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  %8 = phi double [ %sub, %if.else ], [ %.pre, %if.then13 ]
  %mul31 = fmul double %8, %8, !dbg !2568
  tail call void @llvm.dbg.value(metadata !{double %mul31}, i64 0, metadata !1434), !dbg !2568
  br label %if.end35, !dbg !2568

if.end35:                                         ; preds = %entry, %if.end
  %x2.0 = phi double [ %mul31, %if.end ], [ %mul, %entry ]
  %arrayidx36 = getelementptr inbounds double* %ptr, i64 4, !dbg !2572
  %9 = load double* %arrayidx36, align 8, !dbg !2572, !tbaa !1656
  %mul38 = fmul double %9, %9, !dbg !2572
  %10 = load double* %arrayidx2, align 8, !dbg !2572, !tbaa !1656
  %mul40 = fmul double %mul38, %10, !dbg !2572
  %mul42 = fmul double %x2.0, %10, !dbg !2572
  %add43 = fadd double %mul40, %mul42, !dbg !2572
  %arrayidx44 = getelementptr inbounds double* %ptr, i64 5, !dbg !2572
  %11 = load double* %arrayidx44, align 8, !dbg !2572, !tbaa !1656
  %sub45 = fsub double %add43, %11, !dbg !2572
  tail call void @llvm.dbg.value(metadata !1718, i64 0, metadata !2573), !dbg !2575
  %arrayidx47 = getelementptr inbounds double* %ptr, i64 3, !dbg !2574
  %12 = load double* %arrayidx47, align 8, !dbg !2574, !tbaa !1656
  %13 = fmul double %12, %sub45, !dbg !2574
  %mul48 = fsub double -0.000000e+00, %13, !dbg !2574
  %cmp.i = fcmp ogt double %13, 1.000000e+01, !dbg !2576
  %14 = select i1 %cmp.i, double -1.000000e+01, double %mul48, !dbg !2577
  %cmp.i83 = fcmp olt double %14, 1.000000e+01, !dbg !2577
  %.sroa.speculated = select i1 %cmp.i83, double %14, double 1.000000e+01, !dbg !2574
  ret double %.sroa.speculated, !dbg !2574
}
