define double @_ZN3pov9f_enneperEPdj(double* nocapture %ptr, i32) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %ptr}, i64 0, metadata !172), !dbg !1847
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !173), !dbg !1847
  %1 = load double* %ptr, align 8, !dbg !1848, !tbaa !1656
  %mul = fmul double %1, %1, !dbg !1848
  tail call void @llvm.dbg.value(metadata !{double %mul}, i64 0, metadata !176), !dbg !1848
  %arrayidx2 = getelementptr inbounds double* %ptr, i64 1, !dbg !1848
  %2 = load double* %arrayidx2, align 8, !dbg !1848, !tbaa !1656
  %mul4 = fmul double %2, %2, !dbg !1848
  tail call void @llvm.dbg.value(metadata !{double %mul4}, i64 0, metadata !177), !dbg !1848
  %arrayidx5 = getelementptr inbounds double* %ptr, i64 2, !dbg !1848
  %3 = load double* %arrayidx5, align 8, !dbg !1848, !tbaa !1656
  %mul7 = fmul double %3, %3, !dbg !1848
  tail call void @llvm.dbg.value(metadata !{double %mul7}, i64 0, metadata !178), !dbg !1848
  %call = tail call double @fabs(double %3) #9, !dbg !1849
  %cmp = fcmp olt double %call, 2.000000e-01, !dbg !1849
  br i1 %cmp, label %if.then, label %if.end, !dbg !1849

if.then:                                          ; preds = %entry
  store double 2.000000e-01, double* %arrayidx5, align 8, !dbg !1850, !tbaa !1656
  br label %if.end, !dbg !1850

if.end:                                           ; preds = %if.then, %entry
  %4 = phi double [ 2.000000e-01, %if.then ], [ %3, %entry ]
  %sub = fsub double %mul4, %mul, !dbg !1851
  %mul11 = fmul double %4, 2.000000e+00, !dbg !1851
  %div = fdiv double %sub, %mul11, !dbg !1851
  %mul12 = fmul double %mul7, 2.000000e+00, !dbg !1851
  %div13 = fdiv double %mul12, 9.000000e+00, !dbg !1851
  %add = fadd double %div, %div13, !dbg !1851
  %add14 = fadd double %add, 0.000000e+00, !dbg !1851
  tail call void @llvm.dbg.value(metadata !{double %add14}, i64 0, metadata !174), !dbg !1851
  %mul17 = fmul double %4, 4.000000e+00, !dbg !1852
  %div18 = fdiv double %sub, %mul17, !dbg !1852
  %add19 = fadd double %mul, %mul4, !dbg !1852
  %mul20 = fmul double %mul7, 0.000000e+00, !dbg !1852
  %add21 = fadd double %add19, %mul20, !dbg !1852
  %mul22 = fmul double %add21, 0.000000e+00, !dbg !1852
  %sub23 = fsub double %div18, %mul22, !dbg !1852
  %add24 = fadd double %sub23, 0.000000e+00, !dbg !1852
  tail call void @llvm.dbg.value(metadata !{double %add24}, i64 0, metadata !175), !dbg !1852
  %mul25 = fmul double %add14, %add14, !dbg !1853
  %mul26 = fmul double %add14, %mul25, !dbg !1853
  %mul27 = fmul double %add24, 6.000000e+00, !dbg !1853
  %mul28 = fmul double %add24, %mul27, !dbg !1853
  %sub29 = fsub double %mul26, %mul28, !dbg !1853
  tail call void @llvm.dbg.value(metadata !1718, i64 0, metadata !1854), !dbg !1856
  %arrayidx31 = getelementptr inbounds double* %ptr, i64 3, !dbg !1855
  %5 = load double* %arrayidx31, align 8, !dbg !1855, !tbaa !1656
  %6 = fmul double %5, %sub29, !dbg !1855
  %mul32 = fsub double -0.000000e+00, %6, !dbg !1855
  %cmp.i = fcmp ogt double %6, 1.000000e+01, !dbg !1857
  %7 = select i1 %cmp.i, double -1.000000e+01, double %mul32, !dbg !1858
  %cmp.i56 = fcmp olt double %7, 1.000000e+01, !dbg !1858
  %.sroa.speculated = select i1 %cmp.i56, double %7, double 1.000000e+01, !dbg !1855
  ret double %.sroa.speculated, !dbg !1855
}
