define double @_ZN3pov13f_boy_surfaceEPdj(double* nocapture readonly %ptr, i32) #1 {
  tail call void @llvm.dbg.value(metadata double* %ptr, i64 0, metadata !1172, metadata !2347), !dbg !2681
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !1173, metadata !2347), !dbg !2682
  %2 = load double* %ptr, align 8, !dbg !2683, !tbaa !2351
  %3 = fmul double %2, %2, !dbg !2684
  tail call void @llvm.dbg.value(metadata double %3, i64 0, metadata !1177, metadata !2347), !dbg !2685
  %4 = getelementptr inbounds double* %ptr, i64 1, !dbg !2686
  %5 = load double* %4, align 8, !dbg !2686, !tbaa !2351
  %6 = fmul double %5, %5, !dbg !2687
  tail call void @llvm.dbg.value(metadata double %6, i64 0, metadata !1178, metadata !2347), !dbg !2688
  %7 = getelementptr inbounds double* %ptr, i64 2, !dbg !2689
  %8 = load double* %7, align 8, !dbg !2689, !tbaa !2351
  %9 = fmul double %8, %8, !dbg !2690
  tail call void @llvm.dbg.value(metadata double %9, i64 0, metadata !1179, metadata !2347), !dbg !2691
  %10 = fsub double 1.000000e+00, %8, !dbg !2692
  tail call void @llvm.dbg.value(metadata double %10, i64 0, metadata !1175, metadata !2347), !dbg !2693
  %11 = fadd double %3, %6, !dbg !2694
  tail call void @llvm.dbg.value(metadata double %11, i64 0, metadata !1176, metadata !2347), !dbg !2695
  %12 = getelementptr inbounds double* %ptr, i64 4, !dbg !2696
  %13 = load double* %12, align 8, !dbg !2696, !tbaa !2351
  %14 = fmul double %10, 6.400000e+01, !dbg !2697
  %15 = fmul double %10, %14, !dbg !2698
  %16 = fmul double %10, %15, !dbg !2699
  %17 = fmul double %9, %16, !dbg !2700
  %18 = fmul double %8, %17, !dbg !2701
  %19 = fmul double %10, 4.800000e+01, !dbg !2702
  %20 = fmul double %10, %19, !dbg !2703
  %21 = fmul double %9, %20, !dbg !2704
  %22 = fmul double %3, 3.000000e+00, !dbg !2705
  %23 = fmul double %6, 3.000000e+00, !dbg !2706
  %24 = fadd double %22, %23, !dbg !2707
  %25 = fmul double %9, 2.000000e+00, !dbg !2708
  %26 = fadd double %24, %25, !dbg !2709
  %27 = fmul double %26, %21, !dbg !2710
  %28 = fsub double %18, %27, !dbg !2711
  %29 = fmul double %10, 1.200000e+01, !dbg !2712
  %30 = fmul double %8, %29, !dbg !2713
  %31 = fmul double %11, 2.700000e+01, !dbg !2714
  %32 = fmul double %11, %31, !dbg !2715
  %33 = fmul double %9, 2.400000e+01, !dbg !2716
  %34 = fmul double %11, %33, !dbg !2717
  %35 = fsub double %32, %34, !dbg !2718
  %36 = fmul double %5, 0x404974B2334F2347, !dbg !2719
  %37 = fmul double %36, %8, !dbg !2720
  %38 = fsub double %6, %22, !dbg !2721
  %39 = fmul double %37, %38, !dbg !2722
  %40 = fadd double %39, %35, !dbg !2723
  %41 = fmul double %9, 4.000000e+00, !dbg !2724
  %42 = fmul double %9, %41, !dbg !2725
  %43 = fadd double %42, %40, !dbg !2726
  %44 = fmul double %30, %43, !dbg !2727
  %45 = fadd double %28, %44, !dbg !2728
  %46 = fmul double %3, 9.000000e+00, !dbg !2729
  %47 = fmul double %6, 9.000000e+00, !dbg !2730
  %48 = fadd double %46, %47, !dbg !2731
  %49 = fsub double %48, %25, !dbg !2732
  %50 = fmul double %11, -8.100000e+01, !dbg !2733
  %51 = fmul double %11, %50, !dbg !2734
  %52 = fmul double %9, 7.200000e+01, !dbg !2735
  %53 = fmul double %11, %52, !dbg !2736
  %54 = fsub double %51, %53, !dbg !2737
  %55 = fmul double %2, 0x40631785A67B5A75, !dbg !2738
  %56 = fmul double %55, %8, !dbg !2739
  %57 = fsub double %3, %23, !dbg !2740
  %58 = fmul double %56, %57, !dbg !2741
  %59 = fadd double %58, %54, !dbg !2742
  %60 = fadd double %42, %59, !dbg !2743
  %61 = fmul double %49, %60, !dbg !2744
  %62 = fadd double %61, %45, !dbg !2745
  %63 = fmul double %13, %62, !dbg !2746
  tail call void @llvm.dbg.value(metadata double %63, i64 0, metadata !1174, metadata !2347), !dbg !2747
  tail call void @llvm.dbg.value(metadata double 1.000000e+01, i64 0, metadata !1805, metadata !2347), !dbg !2748
  tail call void @llvm.dbg.value(metadata double 1.000000e+01, i64 0, metadata !1812, metadata !2347), !dbg !2752
  tail call void @llvm.dbg.value(metadata double 1.000000e+01, i64 0, metadata !1808, metadata !2347), !dbg !2753
  %64 = getelementptr inbounds double* %ptr, i64 3, !dbg !2754
  %65 = load double* %64, align 8, !dbg !2754, !tbaa !2351
  %66 = fmul double %65, %63, !dbg !2755
  %67 = fcmp olt double %66, -1.000000e+01, !dbg !2756
  %68 = select i1 %67, double -1.000000e+01, double %66, !dbg !2760
  %69 = fcmp olt double %68, 1.000000e+01, !dbg !2761
  %70 = select i1 %69, double %68, double 1.000000e+01, !dbg !2762
  ret double %70, !dbg !2763
}
