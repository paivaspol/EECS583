define double @_ZN3pov19f_folium_surface_2dEPdj(double* nocapture %ptr, i32) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %ptr}, i64 0, metadata !197), !dbg !1872
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !198), !dbg !1872
  %1 = load double* %ptr, align 8, !dbg !1873, !tbaa !1656
  %mul = fmul double %1, %1, !dbg !1873
  tail call void @llvm.dbg.value(metadata !{double %mul}, i64 0, metadata !200), !dbg !1873
  %arrayidx2 = getelementptr inbounds double* %ptr, i64 1, !dbg !1873
  %2 = load double* %arrayidx2, align 8, !dbg !1873, !tbaa !1656
  %mul4 = fmul double %2, %2, !dbg !1873
  tail call void @llvm.dbg.value(metadata !{double %mul4}, i64 0, metadata !201), !dbg !1873
  %arrayidx5 = getelementptr inbounds double* %ptr, i64 2, !dbg !1873
  %3 = load double* %arrayidx5, align 8, !dbg !1873, !tbaa !1656
  %arrayidx8 = getelementptr inbounds double* %ptr, i64 6, !dbg !1874
  %4 = load double* %arrayidx8, align 8, !dbg !1874, !tbaa !1656
  %cmp = fcmp ogt double %4, 0.000000e+00, !dbg !1874
  br i1 %cmp, label %if.then, label %if.end38, !dbg !1874

if.then:                                          ; preds = %entry
  %mul11 = fmul double %3, %3, !dbg !1875
  %add = fadd double %mul, %mul11, !dbg !1875
  %call = tail call double @sqrt(double %add) #8, !dbg !1875
  %arrayidx12 = getelementptr inbounds double* %ptr, i64 7, !dbg !1875
  %5 = load double* %arrayidx12, align 8, !dbg !1875, !tbaa !1656
  %sub = fsub double %call, %5, !dbg !1875
  tail call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !200), !dbg !1875
  %arrayidx13 = getelementptr inbounds double* %ptr, i64 8, !dbg !1875
  %6 = load double* %arrayidx13, align 8, !dbg !1875, !tbaa !1656
  %mul14 = fmul double %6, 0x3F91DF46A2529D39, !dbg !1875
  tail call void @llvm.dbg.value(metadata !{double %mul14}, i64 0, metadata !203), !dbg !1875
  %cmp15 = fcmp une double %mul14, 0.000000e+00, !dbg !1875
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !1875

if.then16:                                        ; preds = %if.then
  %call17 = tail call double @cos(double %mul14) #8, !dbg !1877
  %mul18 = fmul double %sub, %call17, !dbg !1877
  %7 = load double* %arrayidx2, align 8, !dbg !1877, !tbaa !1656
  %call20 = tail call double @sin(double %mul14) #8, !dbg !1877
  %mul21 = fmul double %7, %call20, !dbg !1877
  %sub22 = fsub double %mul18, %mul21, !dbg !1877
  store double %sub22, double* %ptr, align 8, !dbg !1877, !tbaa !1656
  %call24 = tail call double @sin(double %mul14) #8, !dbg !1877
  %mul25 = fmul double %sub, %call24, !dbg !1877
  %8 = load double* %arrayidx2, align 8, !dbg !1877, !tbaa !1656
  %call27 = tail call double @cos(double %mul14) #8, !dbg !1877
  %mul28 = fmul double %8, %call27, !dbg !1877
  %add29 = fadd double %mul25, %mul28, !dbg !1877
  store double %add29, double* %arrayidx2, align 8, !dbg !1877, !tbaa !1656
  %.pre = load double* %ptr, align 8, !dbg !1875, !tbaa !1656
  br label %if.end, !dbg !1877

if.else:                                          ; preds = %if.then
  store double %sub, double* %ptr, align 8, !dbg !1875, !tbaa !1656
  %.pre92 = load double* %arrayidx2, align 8, !dbg !1875, !tbaa !1656
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then16
  %9 = phi double [ %.pre92, %if.else ], [ %add29, %if.then16 ]
  %10 = phi double [ %sub, %if.else ], [ %.pre, %if.then16 ]
  %mul34 = fmul double %10, %10, !dbg !1875
  tail call void @llvm.dbg.value(metadata !{double %mul34}, i64 0, metadata !200), !dbg !1875
  %mul37 = fmul double %9, %9, !dbg !1875
  tail call void @llvm.dbg.value(metadata !{double %mul37}, i64 0, metadata !201), !dbg !1875
  br label %if.end38, !dbg !1875

if.end38:                                         ; preds = %if.end, %entry
  %11 = phi double [ %10, %if.end ], [ %1, %entry ]
  %y2.0 = phi double [ %mul37, %if.end ], [ %mul4, %entry ]
  %x2.0 = phi double [ %mul34, %if.end ], [ %mul, %entry ]
  %arrayidx39 = getelementptr inbounds double* %ptr, i64 5, !dbg !1879
  %12 = load double* %arrayidx39, align 8, !dbg !1879, !tbaa !1656
  %arrayidx40 = getelementptr inbounds double* %ptr, i64 4, !dbg !1879
  %13 = load double* %arrayidx40, align 8, !dbg !1879, !tbaa !1656
  %mul41 = fmul double %13, 4.000000e+00, !dbg !1879
  %sub42 = fsub double %12, %mul41, !dbg !1879
  %mul44 = fmul double %11, %sub42, !dbg !1879
  %add45 = fadd double %mul44, 1.000000e+00, !dbg !1879
  %mul46 = fmul double %y2.0, %add45, !dbg !1879
  %add48 = fadd double %12, 1.000000e+00, !dbg !1879
  %mul49 = fmul double %x2.0, %add48, !dbg !1879
  %add50 = fadd double %mul49, %mul46, !dbg !1879
  tail call void @llvm.dbg.value(metadata !1718, i64 0, metadata !1880), !dbg !1882
  %arrayidx52 = getelementptr inbounds double* %ptr, i64 3, !dbg !1881
  %14 = load double* %arrayidx52, align 8, !dbg !1881, !tbaa !1656
  %15 = fmul double %14, %add50, !dbg !1881
  %mul53 = fsub double -0.000000e+00, %15, !dbg !1881
  %cmp.i = fcmp ogt double %15, 1.000000e+01, !dbg !1883
  %16 = select i1 %cmp.i, double -1.000000e+01, double %mul53, !dbg !1884
  %cmp.i89 = fcmp olt double %16, 1.000000e+01, !dbg !1884
  %.sroa.speculated = select i1 %cmp.i89, double %16, double 1.000000e+01, !dbg !1881
  ret double %.sroa.speculated, !dbg !1881
}
