define double @_ZN3pov12f_algbr_cyl3EPdj(double* nocapture %ptr, i32) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %ptr}, i64 0, metadata !45), !dbg !1687
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !46), !dbg !1687
  %1 = load double* %ptr, align 8, !dbg !1688, !tbaa !1656
  %mul = fmul double %1, %1, !dbg !1688
  tail call void @llvm.dbg.value(metadata !{double %mul}, i64 0, metadata !48), !dbg !1688
  %arrayidx2 = getelementptr inbounds double* %ptr, i64 1, !dbg !1688
  %2 = load double* %arrayidx2, align 8, !dbg !1688, !tbaa !1656
  %mul4 = fmul double %2, %2, !dbg !1688
  tail call void @llvm.dbg.value(metadata !{double %mul4}, i64 0, metadata !49), !dbg !1688
  %arrayidx5 = getelementptr inbounds double* %ptr, i64 5, !dbg !1689
  %3 = load double* %arrayidx5, align 8, !dbg !1689, !tbaa !1656
  %cmp = fcmp ogt double %3, 0.000000e+00, !dbg !1689
  br i1 %cmp, label %if.then, label %if.end35, !dbg !1689

if.then:                                          ; preds = %entry
  %arrayidx6 = getelementptr inbounds double* %ptr, i64 2, !dbg !1690
  %4 = load double* %arrayidx6, align 8, !dbg !1690, !tbaa !1656
  %mul8 = fmul double %4, %4, !dbg !1690
  %add = fadd double %mul, %mul8, !dbg !1690
  %call = tail call double @sqrt(double %add) #8, !dbg !1690
  %arrayidx9 = getelementptr inbounds double* %ptr, i64 6, !dbg !1690
  %5 = load double* %arrayidx9, align 8, !dbg !1690, !tbaa !1656
  %sub = fsub double %call, %5, !dbg !1690
  tail call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !48), !dbg !1690
  %arrayidx10 = getelementptr inbounds double* %ptr, i64 7, !dbg !1690
  %6 = load double* %arrayidx10, align 8, !dbg !1690, !tbaa !1656
  %mul11 = fmul double %6, 0x3F91DF46A2529D39, !dbg !1690
  tail call void @llvm.dbg.value(metadata !{double %mul11}, i64 0, metadata !50), !dbg !1690
  %cmp12 = fcmp une double %mul11, 0.000000e+00, !dbg !1690
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !1690

if.then13:                                        ; preds = %if.then
  %call14 = tail call double @cos(double %mul11) #8, !dbg !1692
  %mul15 = fmul double %sub, %call14, !dbg !1692
  %7 = load double* %arrayidx2, align 8, !dbg !1692, !tbaa !1656
  %call17 = tail call double @sin(double %mul11) #8, !dbg !1692
  %mul18 = fmul double %7, %call17, !dbg !1692
  %sub19 = fsub double %mul15, %mul18, !dbg !1692
  store double %sub19, double* %ptr, align 8, !dbg !1692, !tbaa !1656
  %call21 = tail call double @sin(double %mul11) #8, !dbg !1692
  %mul22 = fmul double %sub, %call21, !dbg !1692
  %8 = load double* %arrayidx2, align 8, !dbg !1692, !tbaa !1656
  %call24 = tail call double @cos(double %mul11) #8, !dbg !1692
  %mul25 = fmul double %8, %call24, !dbg !1692
  %add26 = fadd double %mul22, %mul25, !dbg !1692
  store double %add26, double* %arrayidx2, align 8, !dbg !1692, !tbaa !1656
  %.pre = load double* %ptr, align 8, !dbg !1690, !tbaa !1656
  br label %if.end, !dbg !1692

if.else:                                          ; preds = %if.then
  store double %sub, double* %ptr, align 8, !dbg !1690, !tbaa !1656
  %.pre92 = load double* %arrayidx2, align 8, !dbg !1690, !tbaa !1656
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  %9 = phi double [ %.pre92, %if.else ], [ %add26, %if.then13 ]
  %10 = phi double [ %sub, %if.else ], [ %.pre, %if.then13 ]
  %mul31 = fmul double %10, %10, !dbg !1690
  tail call void @llvm.dbg.value(metadata !{double %mul31}, i64 0, metadata !48), !dbg !1690
  %mul34 = fmul double %9, %9, !dbg !1690
  tail call void @llvm.dbg.value(metadata !{double %mul34}, i64 0, metadata !49), !dbg !1690
  br label %if.end35, !dbg !1690

if.end35:                                         ; preds = %if.end, %entry
  %11 = phi double [ %10, %if.end ], [ %1, %entry ]
  %12 = phi double [ %9, %if.end ], [ %2, %entry ]
  %y2.0 = phi double [ %mul34, %if.end ], [ %mul4, %entry ]
  %x2.0 = phi double [ %mul31, %if.end ], [ %mul, %entry ]
  %mul36 = fmul double %x2.0, %x2.0, !dbg !1694
  %mul37 = fmul double %y2.0, %x2.0, !dbg !1694
  %add38 = fadd double %mul36, %mul37, !dbg !1694
  %mul39 = fmul double %x2.0, 2.000000e+00, !dbg !1694
  %mul41 = fmul double %mul39, %12, !dbg !1694
  %sub42 = fsub double %add38, %mul41, !dbg !1694
  %mul44 = fmul double %y2.0, %11, !dbg !1694
  %sub45 = fsub double %sub42, %mul44, !dbg !1694
  %add46 = fadd double %y2.0, %sub45, !dbg !1694
  %arrayidx48 = getelementptr inbounds double* %ptr, i64 4, !dbg !1695
  %arrayidx49 = getelementptr inbounds double* %ptr, i64 3, !dbg !1695
  %13 = load double* %arrayidx49, align 8, !dbg !1695, !tbaa !1656
  %14 = fmul double %13, %add46, !dbg !1695
  %15 = load double* %arrayidx48, align 8, !dbg !1695, !tbaa !1656
  %cmp.i = fcmp ogt double %14, %15, !dbg !1696
  tail call void @llvm.dbg.value(metadata !{double* %arrayidx48}, i64 0, metadata !1697), !dbg !1698
  %.v = select i1 %cmp.i, double %15, double %14, !dbg !1699
  %16 = fsub double -0.000000e+00, %.v, !dbg !1699
  %cmp.i90 = fcmp ogt double %15, %16, !dbg !1699
  %17 = select i1 %cmp.i90, double %16, double %15, !dbg !1695
  ret double %17, !dbg !1695
}
