define double @_ZN3pov16f_crossed_troughEPdj(double* nocapture %ptr, i32) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %ptr}, i64 0, metadata !119), !dbg !1789
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !120), !dbg !1789
  %1 = load double* %ptr, align 8, !dbg !1790, !tbaa !1656
  %mul = fmul double %1, %1, !dbg !1790
  %arrayidx2 = getelementptr inbounds double* %ptr, i64 2, !dbg !1790
  %2 = load double* %arrayidx2, align 8, !dbg !1790, !tbaa !1656
  %mul3 = fmul double %mul, %2, !dbg !1790
  %mul5 = fmul double %2, %mul3, !dbg !1790
  %arrayidx6 = getelementptr inbounds double* %ptr, i64 1, !dbg !1790
  %3 = load double* %arrayidx6, align 8, !dbg !1790, !tbaa !1656
  %sub = fsub double %mul5, %3, !dbg !1790
  tail call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !121), !dbg !1790
  tail call void @llvm.dbg.value(metadata !1718, i64 0, metadata !1791), !dbg !1793
  %arrayidx7 = getelementptr inbounds double* %ptr, i64 3, !dbg !1792
  %4 = load double* %arrayidx7, align 8, !dbg !1792, !tbaa !1656
  %mul8 = fmul double %4, %sub, !dbg !1792
  %cmp.i = fcmp olt double %mul8, -1.000000e+01, !dbg !1794
  %5 = select i1 %cmp.i, double -1.000000e+01, double %mul8, !dbg !1795
  %cmp.i17 = fcmp olt double %5, 1.000000e+01, !dbg !1795
  %.sroa.speculated = select i1 %cmp.i17, double %5, double 1.000000e+01, !dbg !1792
  ret double %.sroa.speculated, !dbg !1792
}
