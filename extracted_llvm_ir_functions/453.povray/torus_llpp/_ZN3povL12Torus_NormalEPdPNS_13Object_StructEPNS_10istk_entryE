define internal void @_ZN3povL12Torus_NormalEPdPNS_13Object_StructEPNS_10istk_entryE(double* %Result, %"struct.pov::Object_Struct"* nocapture readonly %Object, %"struct.pov::istk_entry"* %Inter) #0 {
  %P = alloca [3 x double], align 16
  %N = alloca [3 x double], align 16
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1081, metadata !1481), !dbg !2019
  tail call void @llvm.dbg.value(metadata %"struct.pov::Object_Struct"* %Object, i64 0, metadata !1082, metadata !1481), !dbg !2020
  tail call void @llvm.dbg.value(metadata %"struct.pov::istk_entry"* %Inter, i64 0, metadata !1083, metadata !1481), !dbg !2021
  tail call void @llvm.dbg.declare(metadata [3 x double]* %P, metadata !1085, metadata !1481), !dbg !2022
  tail call void @llvm.dbg.declare(metadata [3 x double]* %N, metadata !1086, metadata !1481), !dbg !2023
  tail call void @llvm.dbg.declare(metadata [3 x double]* undef, metadata !1087, metadata !1481), !dbg !2024
  %1 = getelementptr inbounds [3 x double]* %P, i64 0, i64 0, !dbg !2025
  %2 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 1, i64 0, !dbg !2026
  %3 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 0, i32 10, !dbg !2027
  %4 = load %"struct.pov::Transform_Struct"** %3, align 8, !dbg !2027, !tbaa !1516
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %1, double* %2, %"struct.pov::Transform_Struct"* %4) #7, !dbg !2028
  %5 = load double* %1, align 16, !dbg !2029, !tbaa !1566
  %6 = fmul double %5, %5, !dbg !2030
  %7 = getelementptr inbounds [3 x double]* %P, i64 0, i64 2, !dbg !2031
  %8 = load double* %7, align 16, !dbg !2031, !tbaa !1566
  %9 = fmul double %8, %8, !dbg !2032
  %10 = fadd double %6, %9, !dbg !2033
  %11 = call double @sqrt(double %10) #8, !dbg !2034
  call void @llvm.dbg.value(metadata double %11, i64 0, metadata !1084, metadata !1481), !dbg !2035
  %12 = fcmp ogt double %11, 1.000000e-07, !dbg !2036
  br i1 %12, label %13, label %21, !dbg !2038

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, !dbg !2039
  %15 = bitcast %"struct.pov::Object_Struct"* %14 to double*, !dbg !2039
  %16 = load double* %15, align 8, !dbg !2039, !tbaa !1525
  %17 = fmul double %5, %16, !dbg !2041
  %18 = fdiv double %17, %11, !dbg !2042
  call void @llvm.dbg.value(metadata double %18, i64 0, metadata !1087, metadata !2043), !dbg !2024
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !1087, metadata !2044), !dbg !2024
  %19 = fmul double %8, %16, !dbg !2045
  %20 = fdiv double %19, %11, !dbg !2046
  call void @llvm.dbg.value(metadata double %20, i64 0, metadata !1087, metadata !2047), !dbg !2024
  br label %21, !dbg !2048

; <label>:21                                      ; preds = %0, %13
  %22 = phi double [ %20, %13 ], [ 0.000000e+00, %0 ]
  %23 = phi double [ %18, %13 ], [ 0.000000e+00, %0 ]
  %24 = getelementptr inbounds [3 x double]* %N, i64 0, i64 0, !dbg !2049
  tail call void @llvm.dbg.value(metadata double* %24, i64 0, metadata !1101, metadata !1481), !dbg !2050
  tail call void @llvm.dbg.value(metadata double* %1, i64 0, metadata !1102, metadata !1481), !dbg !2052
  tail call void @llvm.dbg.value(metadata double* undef, i64 0, metadata !1103, metadata !1481), !dbg !2053
  %25 = fsub double %5, %23, !dbg !2054
  store double %25, double* %24, align 16, !dbg !2055, !tbaa !1566
  %26 = getelementptr inbounds [3 x double]* %P, i64 0, i64 1, !dbg !2056
  %27 = bitcast double* %26 to i64*, !dbg !2056
  %28 = load i64* %27, align 8, !dbg !2056, !tbaa !1566
  %29 = getelementptr inbounds [3 x double]* %N, i64 0, i64 1, !dbg !2057
  %30 = bitcast double* %29 to i64*, !dbg !2058
  store i64 %28, i64* %30, align 8, !dbg !2058, !tbaa !1566
  %31 = fsub double %8, %22, !dbg !2059
  %32 = getelementptr inbounds [3 x double]* %N, i64 0, i64 2, !dbg !2060
  store double %31, double* %32, align 16, !dbg !2061, !tbaa !1566
  %33 = load %"struct.pov::Transform_Struct"** %3, align 8, !dbg !2062, !tbaa !1516
  call void @_ZN3pov12MTransNormalEPdS0_PNS_16Transform_StructE(double* %Result, double* %24, %"struct.pov::Transform_Struct"* %33) #7, !dbg !2063
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1108, metadata !1481) #6, !dbg !2064
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1109, metadata !1481) #6, !dbg !2066
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1014, metadata !1481) #6, !dbg !2067
  %34 = bitcast double* %Result to <2 x double>*, !dbg !2069
  %35 = load <2 x double>* %34, align 8, !dbg !2069, !tbaa !1566
  %36 = extractelement <2 x double> %35, i32 0, !dbg !2070
  %37 = fmul double %36, %36, !dbg !2070
  %38 = extractelement <2 x double> %35, i32 1, !dbg !2071
  %39 = fmul double %38, %38, !dbg !2071
  %40 = fadd double %37, %39, !dbg !2072
  %41 = getelementptr inbounds double* %Result, i64 2, !dbg !2073
  %42 = load double* %41, align 8, !dbg !2073, !tbaa !1566
  %43 = fmul double %42, %42, !dbg !2074
  %44 = fadd double %40, %43, !dbg !2075
  %45 = call double @sqrt(double %44) #8, !dbg !2076
  call void @llvm.dbg.value(metadata double %45, i64 0, metadata !1013, metadata !1481) #6, !dbg !2077
  call void @llvm.dbg.value(metadata double %45, i64 0, metadata !1110, metadata !1481) #6, !dbg !2078
  call void @llvm.dbg.value(metadata double %45, i64 0, metadata !1110, metadata !1481) #6, !dbg !2078
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1115, metadata !1481) #6, !dbg !2079
  call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !1116, metadata !1481) #6, !dbg !2081
  call void @llvm.dbg.value(metadata double %45, i64 0, metadata !1117, metadata !1481) #6, !dbg !2082
  %46 = fdiv double 1.000000e+00, %45, !dbg !2083
  call void @llvm.dbg.value(metadata double %46, i64 0, metadata !1118, metadata !1481) #6, !dbg !2084
  %47 = insertelement <2 x double> undef, double %46, i32 0, !dbg !2085
  %48 = insertelement <2 x double> %47, double %46, i32 1, !dbg !2085
  %49 = fmul <2 x double> %48, %35, !dbg !2085
  %50 = bitcast double* %Result to <2 x double>*, !dbg !2086
  store <2 x double> %49, <2 x double>* %50, align 8, !dbg !2086, !tbaa !1566
  %51 = fmul double %46, %42, !dbg !2087
  store double %51, double* %41, align 8, !dbg !2088, !tbaa !1566
  ret void, !dbg !2089
}
