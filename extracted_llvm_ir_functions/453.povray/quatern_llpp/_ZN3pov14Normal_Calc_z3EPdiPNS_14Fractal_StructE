define void @_ZN3pov14Normal_Calc_z3EPdiPNS_14Fractal_StructE(double* nocapture %Result, i32 %N_Max, %"struct.pov::Fractal_Struct"* nocapture readnone) #0 {
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !902, metadata !1252), !dbg !1690
  tail call void @llvm.dbg.value(metadata i32 %N_Max, i64 0, metadata !903, metadata !1252), !dbg !1691
  tail call void @llvm.dbg.value(metadata %"struct.pov::Fractal_Struct"* %0, i64 0, metadata !904, metadata !1252), !dbg !1692
  tail call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !905, metadata !1252), !dbg !1693
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !906, metadata !1252), !dbg !1694
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !907, metadata !1252), !dbg !1695
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !908, metadata !1252), !dbg !1696
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !909, metadata !1252), !dbg !1697
  tail call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !910, metadata !1252), !dbg !1698
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !911, metadata !1252), !dbg !1699
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !912, metadata !1252), !dbg !1700
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !913, metadata !1252), !dbg !1701
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !914, metadata !1252), !dbg !1702
  tail call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !915, metadata !1252), !dbg !1703
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !916, metadata !1252), !dbg !1704
  %2 = load double** @_ZN3pov2SxE, align 8, !dbg !1705, !tbaa !1262
  %3 = load double** @_ZN3pov2SyE, align 8, !dbg !1706, !tbaa !1262
  %4 = load double** @_ZN3pov2SzE, align 8, !dbg !1707, !tbaa !1262
  %5 = load double** @_ZN3pov2SwE, align 8, !dbg !1708, !tbaa !1262
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !921, metadata !1252), !dbg !1709
  %w.01 = load double* %5, align 8, !dbg !1708
  %z.02 = load double* %4, align 8, !dbg !1707
  %y.03 = load double* %3, align 8, !dbg !1706
  %x.04 = load double* %2, align 8, !dbg !1705
  %6 = icmp slt i32 %N_Max, 1, !dbg !1710
  br i1 %6, label %._crit_edge, label %.lr.ph, !dbg !1713

.lr.ph:                                           ; preds = %1, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 1, %1 ]
  %x.021 = phi double [ %x.0, %.lr.ph ], [ %x.04, %1 ]
  %y.020 = phi double [ %y.0, %.lr.ph ], [ %y.03, %1 ]
  %z.019 = phi double [ %z.0, %.lr.ph ], [ %z.02, %1 ]
  %w.018 = phi double [ %w.0, %.lr.ph ], [ %w.01, %1 ]
  %n34.010 = phi double [ %76, %.lr.ph ], [ 0.000000e+00, %1 ]
  %n33.09 = phi double [ %73, %.lr.ph ], [ 1.000000e+00, %1 ]
  %n32.08 = phi double [ %70, %.lr.ph ], [ 0.000000e+00, %1 ]
  %n31.07 = phi double [ %67, %.lr.ph ], [ 0.000000e+00, %1 ]
  %7 = phi <2 x double> [ %55, %.lr.ph ], [ zeroinitializer, %1 ]
  %8 = phi <2 x double> [ %44, %.lr.ph ], [ <double 1.000000e+00, double 0.000000e+00>, %1 ]
  %9 = phi <2 x double> [ %52, %.lr.ph ], [ zeroinitializer, %1 ]
  %10 = phi <2 x double> [ %49, %.lr.ph ], [ <double 0.000000e+00, double 1.000000e+00>, %1 ]
  %11 = fmul double %y.020, %y.020, !dbg !1714
  %12 = fmul double %z.019, %z.019, !dbg !1716
  %13 = fadd double %12, %11, !dbg !1717
  %14 = fmul double %w.018, %w.018, !dbg !1718
  %15 = fadd double %14, %13, !dbg !1719
  tail call void @llvm.dbg.value(metadata double %15, i64 0, metadata !922, metadata !1252), !dbg !1720
  %16 = fmul double %x.021, %x.021, !dbg !1721
  tail call void @llvm.dbg.value(metadata double %16, i64 0, metadata !925, metadata !1252), !dbg !1722
  %17 = fsub double %16, %15, !dbg !1723
  tail call void @llvm.dbg.value(metadata double %17, i64 0, metadata !926, metadata !1252), !dbg !1724
  %18 = fmul double %16, 3.000000e+00, !dbg !1725
  %19 = fsub double %18, %15, !dbg !1726
  tail call void @llvm.dbg.value(metadata double %19, i64 0, metadata !927, metadata !1252), !dbg !1727
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !923, metadata !1252), !dbg !1728
  %20 = fmul double %x.021, 6.000000e+00, !dbg !1729
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !924, metadata !1252), !dbg !1731
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !905, metadata !1252), !dbg !1693
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !906, metadata !1252), !dbg !1694
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !907, metadata !1252), !dbg !1695
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !908, metadata !1252), !dbg !1696
  %21 = insertelement <2 x double> undef, double %y.020, i32 0, !dbg !1729
  %22 = insertelement <2 x double> %21, double %y.020, i32 1, !dbg !1729
  %23 = fmul <2 x double> %22, %10, !dbg !1729
  %24 = insertelement <2 x double> undef, double %z.019, i32 0, !dbg !1729
  %25 = insertelement <2 x double> %24, double %z.019, i32 1, !dbg !1729
  %26 = fmul <2 x double> %25, %9, !dbg !1729
  %27 = fadd <2 x double> %26, %23, !dbg !1729
  %28 = insertelement <2 x double> undef, double %w.018, i32 0, !dbg !1729
  %29 = insertelement <2 x double> %28, double %w.018, i32 1, !dbg !1729
  %30 = fmul <2 x double> %29, %7, !dbg !1729
  %31 = fadd <2 x double> %30, %27, !dbg !1729
  %32 = fmul <2 x double> %31, <double 2.000000e+00, double 2.000000e+00>, !dbg !1729
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !923, metadata !1252), !dbg !1728
  %33 = insertelement <2 x double> undef, double %20, i32 0, !dbg !1729
  %34 = insertelement <2 x double> %33, double %20, i32 1, !dbg !1729
  %35 = fmul <2 x double> %34, %8, !dbg !1729
  %36 = fsub <2 x double> %35, %32, !dbg !1729
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !924, metadata !1252), !dbg !1731
  %37 = insertelement <2 x double> undef, double %17, i32 0, !dbg !1729
  %38 = insertelement <2 x double> %37, double %17, i32 1, !dbg !1729
  %39 = fmul <2 x double> %38, %8, !dbg !1729
  %40 = insertelement <2 x double> undef, double %x.021, i32 0, !dbg !1729
  %41 = insertelement <2 x double> %40, double %x.021, i32 1, !dbg !1729
  %42 = fmul <2 x double> %32, %41, !dbg !1729
  %43 = fsub <2 x double> %39, %42, !dbg !1729
  %44 = fmul <2 x double> %43, <double 3.000000e+00, double 3.000000e+00>, !dbg !1729
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !909, metadata !1252), !dbg !1697
  %45 = insertelement <2 x double> undef, double %19, i32 0, !dbg !1729
  %46 = insertelement <2 x double> %45, double %19, i32 1, !dbg !1729
  %47 = fmul <2 x double> %46, %10, !dbg !1729
  %48 = fmul <2 x double> %36, %22, !dbg !1729
  %49 = fadd <2 x double> %47, %48, !dbg !1729
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !910, metadata !1252), !dbg !1698
  %50 = fmul <2 x double> %46, %9, !dbg !1729
  %51 = fmul <2 x double> %36, %25, !dbg !1729
  %52 = fadd <2 x double> %50, %51, !dbg !1729
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !911, metadata !1252), !dbg !1699
  %53 = fmul <2 x double> %46, %7, !dbg !1729
  %54 = fmul <2 x double> %36, %29, !dbg !1729
  %55 = fadd <2 x double> %53, %54, !dbg !1729
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !912, metadata !1252), !dbg !1700
  %56 = fmul double %n32.08, %y.020, !dbg !1732
  %57 = fmul double %n33.09, %z.019, !dbg !1732
  %58 = fadd double %57, %56, !dbg !1732
  %59 = fmul double %n34.010, %w.018, !dbg !1732
  %60 = fadd double %59, %58, !dbg !1732
  %61 = fmul double %60, 2.000000e+00, !dbg !1732
  tail call void @llvm.dbg.value(metadata double %61, i64 0, metadata !923, metadata !1252), !dbg !1728
  %62 = fmul double %n31.07, %20, !dbg !1732
  %63 = fsub double %62, %61, !dbg !1732
  tail call void @llvm.dbg.value(metadata double %63, i64 0, metadata !924, metadata !1252), !dbg !1731
  %64 = fmul double %n31.07, %17, !dbg !1732
  %65 = fmul double %x.021, %61, !dbg !1732
  %66 = fsub double %64, %65, !dbg !1732
  %67 = fmul double %66, 3.000000e+00, !dbg !1732
  tail call void @llvm.dbg.value(metadata double %67, i64 0, metadata !913, metadata !1252), !dbg !1701
  %68 = fmul double %n32.08, %19, !dbg !1732
  %69 = fmul double %y.020, %63, !dbg !1732
  %70 = fadd double %68, %69, !dbg !1732
  tail call void @llvm.dbg.value(metadata double %70, i64 0, metadata !914, metadata !1252), !dbg !1702
  %71 = fmul double %n33.09, %19, !dbg !1732
  %72 = fmul double %z.019, %63, !dbg !1732
  %73 = fadd double %71, %72, !dbg !1732
  tail call void @llvm.dbg.value(metadata double %73, i64 0, metadata !915, metadata !1252), !dbg !1703
  %74 = fmul double %n34.010, %19, !dbg !1732
  %75 = fmul double %w.018, %63, !dbg !1732
  %76 = fadd double %74, %75, !dbg !1732
  tail call void @llvm.dbg.value(metadata double %76, i64 0, metadata !916, metadata !1252), !dbg !1704
  %77 = getelementptr inbounds double* %2, i64 %indvars.iv, !dbg !1734
  %78 = getelementptr inbounds double* %3, i64 %indvars.iv, !dbg !1735
  %79 = getelementptr inbounds double* %4, i64 %indvars.iv, !dbg !1736
  %80 = getelementptr inbounds double* %5, i64 %indvars.iv, !dbg !1737
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1713
  %w.0 = load double* %80, align 8, !dbg !1708
  %z.0 = load double* %79, align 8, !dbg !1707
  %y.0 = load double* %78, align 8, !dbg !1706
  %x.0 = load double* %77, align 8, !dbg !1705
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1713
  %exitcond = icmp eq i32 %lftr.wideiv, %N_Max, !dbg !1713
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !1713

._crit_edge:                                      ; preds = %.lr.ph, %1
  %x.0.lcssa = phi double [ %x.04, %1 ], [ %x.0, %.lr.ph ]
  %y.0.lcssa = phi double [ %y.03, %1 ], [ %y.0, %.lr.ph ]
  %z.0.lcssa = phi double [ %z.02, %1 ], [ %z.0, %.lr.ph ]
  %w.0.lcssa = phi double [ %w.01, %1 ], [ %w.0, %.lr.ph ]
  %n34.0.lcssa = phi double [ 0.000000e+00, %1 ], [ %76, %.lr.ph ]
  %n33.0.lcssa = phi double [ 1.000000e+00, %1 ], [ %73, %.lr.ph ]
  %n32.0.lcssa = phi double [ 0.000000e+00, %1 ], [ %70, %.lr.ph ]
  %n31.0.lcssa = phi double [ 0.000000e+00, %1 ], [ %67, %.lr.ph ]
  %81 = phi <2 x double> [ zeroinitializer, %1 ], [ %55, %.lr.ph ]
  %82 = phi <2 x double> [ zeroinitializer, %1 ], [ %52, %.lr.ph ]
  %83 = phi <2 x double> [ <double 0.000000e+00, double 1.000000e+00>, %1 ], [ %49, %.lr.ph ]
  %84 = phi <2 x double> [ <double 1.000000e+00, double 0.000000e+00>, %1 ], [ %44, %.lr.ph ]
  %85 = insertelement <2 x double> undef, double %x.0.lcssa, i32 0, !dbg !1738
  %86 = insertelement <2 x double> %85, double %x.0.lcssa, i32 1, !dbg !1738
  %87 = fmul <2 x double> %84, %86, !dbg !1738
  %88 = insertelement <2 x double> undef, double %y.0.lcssa, i32 0, !dbg !1739
  %89 = insertelement <2 x double> %88, double %y.0.lcssa, i32 1, !dbg !1739
  %90 = fmul <2 x double> %83, %89, !dbg !1739
  %91 = fadd <2 x double> %90, %87, !dbg !1740
  %92 = insertelement <2 x double> undef, double %z.0.lcssa, i32 0, !dbg !1741
  %93 = insertelement <2 x double> %92, double %z.0.lcssa, i32 1, !dbg !1741
  %94 = fmul <2 x double> %82, %93, !dbg !1741
  %95 = fadd <2 x double> %94, %91, !dbg !1742
  %96 = insertelement <2 x double> undef, double %w.0.lcssa, i32 0, !dbg !1743
  %97 = insertelement <2 x double> %96, double %w.0.lcssa, i32 1, !dbg !1743
  %98 = fmul <2 x double> %81, %97, !dbg !1743
  %99 = fadd <2 x double> %98, %95, !dbg !1744
  %100 = bitcast double* %Result to <2 x double>*, !dbg !1745
  store <2 x double> %99, <2 x double>* %100, align 8, !dbg !1745, !tbaa !1256
  %101 = fmul double %n31.0.lcssa, %x.0.lcssa, !dbg !1746
  %102 = fmul double %n32.0.lcssa, %y.0.lcssa, !dbg !1747
  %103 = fadd double %102, %101, !dbg !1748
  %104 = fmul double %n33.0.lcssa, %z.0.lcssa, !dbg !1749
  %105 = fadd double %104, %103, !dbg !1750
  %106 = fmul double %n34.0.lcssa, %w.0.lcssa, !dbg !1751
  %107 = fadd double %106, %105, !dbg !1752
  %108 = getelementptr inbounds double* %Result, i64 2, !dbg !1753
  store double %107, double* %108, align 8, !dbg !1754, !tbaa !1256
  ret void, !dbg !1755
}
