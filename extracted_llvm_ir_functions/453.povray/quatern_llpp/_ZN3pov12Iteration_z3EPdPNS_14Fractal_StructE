define i32 @_ZN3pov12Iteration_z3EPdPNS_14Fractal_StructE(double* nocapture %point, %"struct.pov::Fractal_Struct"* nocapture %Julia) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %point}, i64 0, metadata !838), !dbg !1016
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::Fractal_Struct"* %Julia}, i64 0, metadata !840), !dbg !1016
  %0 = load double* %point, align 8, !dbg !1017, !tbaa !1018
  tail call void @llvm.dbg.value(metadata !{double %0}, i64 0, metadata !842), !dbg !1017
  %1 = load double** @_ZN3pov2SxE, align 8, !dbg !1017, !tbaa !1021
  store double %0, double* %1, align 8, !dbg !1017, !tbaa !1018
  %arrayidx3 = getelementptr inbounds double* %point, i64 1, !dbg !1022
  %2 = load double* %arrayidx3, align 8, !dbg !1022, !tbaa !1018
  tail call void @llvm.dbg.value(metadata !{double %2}, i64 0, metadata !843), !dbg !1022
  %3 = load double** @_ZN3pov2SyE, align 8, !dbg !1022, !tbaa !1021
  store double %2, double* %3, align 8, !dbg !1022, !tbaa !1018
  %arrayidx5 = getelementptr inbounds double* %point, i64 2, !dbg !1023
  %4 = load double* %arrayidx5, align 8, !dbg !1023, !tbaa !1018
  tail call void @llvm.dbg.value(metadata !{double %4}, i64 0, metadata !844), !dbg !1023
  %5 = load double** @_ZN3pov2SzE, align 8, !dbg !1023, !tbaa !1021
  store double %4, double* %5, align 8, !dbg !1023, !tbaa !1018
  %SliceDist = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 17, !dbg !1024
  %6 = load double* %SliceDist, align 8, !dbg !1024, !tbaa !1018
  %arrayidx7 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 16, i64 0, !dbg !1024
  %7 = load double* %arrayidx7, align 8, !dbg !1024, !tbaa !1018
  %mul = fmul double %0, %7, !dbg !1024
  %sub = fsub double %6, %mul, !dbg !1024
  %arrayidx9 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 16, i64 1, !dbg !1024
  %8 = load double* %arrayidx9, align 8, !dbg !1024, !tbaa !1018
  %mul10 = fmul double %2, %8, !dbg !1024
  %sub11 = fsub double %sub, %mul10, !dbg !1024
  %arrayidx13 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 16, i64 2, !dbg !1024
  %9 = load double* %arrayidx13, align 8, !dbg !1024, !tbaa !1018
  %mul14 = fmul double %4, %9, !dbg !1024
  %sub15 = fsub double %sub11, %mul14, !dbg !1024
  %arrayidx17 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 16, i64 3, !dbg !1024
  %10 = load double* %arrayidx17, align 8, !dbg !1024, !tbaa !1018
  %div = fdiv double %sub15, %10, !dbg !1024
  tail call void @llvm.dbg.value(metadata !{double %div}, i64 0, metadata !845), !dbg !1024
  %11 = load double** @_ZN3pov2SwE, align 8, !dbg !1024, !tbaa !1021
  store double %div, double* %11, align 8, !dbg !1024, !tbaa !1018
  %Exit_Value19 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 18, !dbg !1025
  %12 = load double* %Exit_Value19, align 8, !dbg !1025, !tbaa !1018
  tail call void @llvm.dbg.value(metadata !{double %12}, i64 0, metadata !849), !dbg !1025
  tail call void @llvm.dbg.value(metadata !1026, i64 0, metadata !841), !dbg !1027
  %n = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 19, !dbg !1027
  %13 = load i32* %n, align 4, !dbg !1027, !tbaa !1029
  %cmp87 = icmp slt i32 %13, 1, !dbg !1027
  br i1 %cmp87, label %return, label %for.body.lr.ph, !dbg !1027

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx32 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 15, i64 0, !dbg !1030
  %arrayidx37 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 15, i64 1, !dbg !1032
  %arrayidx43 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 15, i64 2, !dbg !1033
  %arrayidx49 = getelementptr inbounds %"struct.pov::Fractal_Struct"* %Julia, i64 0, i32 15, i64 3, !dbg !1034
  br label %for.body, !dbg !1027

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 1, %for.body.lr.ph ]
  %x.091 = phi double [ %add33, %if.end ], [ %0, %for.body.lr.ph ]
  %y.090 = phi double [ %add38, %if.end ], [ %2, %for.body.lr.ph ]
  %w.089 = phi double [ %add50, %if.end ], [ %div, %for.body.lr.ph ]
  %z.088 = phi double [ %add44, %if.end ], [ %4, %for.body.lr.ph ]
  %mul20 = fmul double %y.090, %y.090, !dbg !1035
  %mul21 = fmul double %z.088, %z.088, !dbg !1035
  %add = fadd double %mul21, %mul20, !dbg !1035
  %mul22 = fmul double %w.089, %w.089, !dbg !1035
  %add23 = fadd double %mul22, %add, !dbg !1035
  tail call void @llvm.dbg.value(metadata !{double %add23}, i64 0, metadata !846), !dbg !1035
  %mul24 = fmul double %x.091, %x.091, !dbg !1036
  tail call void @llvm.dbg.value(metadata !{double %mul24}, i64 0, metadata !847), !dbg !1036
  %add25 = fadd double %mul24, %add23, !dbg !1037
  %cmp26 = fcmp ogt double %add25, %12, !dbg !1037
  br i1 %cmp26, label %return, label %if.end, !dbg !1037

if.end:                                           ; preds = %for.body
  %mul27 = fmul double %mul24, 3.000000e+00, !dbg !1038
  %sub28 = fsub double %mul27, %add23, !dbg !1038
  tail call void @llvm.dbg.value(metadata !{double %sub28}, i64 0, metadata !848), !dbg !1038
  %mul29 = fmul double %add23, 3.000000e+00, !dbg !1030
  %sub30 = fsub double %mul24, %mul29, !dbg !1030
  %mul31 = fmul double %x.091, %sub30, !dbg !1030
  %14 = load double* %arrayidx32, align 8, !dbg !1030, !tbaa !1018
  %add33 = fadd double %mul31, %14, !dbg !1030
  tail call void @llvm.dbg.value(metadata !{double %add33}, i64 0, metadata !842), !dbg !1030
  %arrayidx34 = getelementptr inbounds double* %1, i64 %indvars.iv, !dbg !1030
  store double %add33, double* %arrayidx34, align 8, !dbg !1030, !tbaa !1018
  %mul35 = fmul double %y.090, %sub28, !dbg !1032
  %15 = load double* %arrayidx37, align 8, !dbg !1032, !tbaa !1018
  %add38 = fadd double %mul35, %15, !dbg !1032
  tail call void @llvm.dbg.value(metadata !{double %add38}, i64 0, metadata !843), !dbg !1032
  %arrayidx40 = getelementptr inbounds double* %3, i64 %indvars.iv, !dbg !1032
  store double %add38, double* %arrayidx40, align 8, !dbg !1032, !tbaa !1018
  %mul41 = fmul double %z.088, %sub28, !dbg !1033
  %16 = load double* %arrayidx43, align 8, !dbg !1033, !tbaa !1018
  %add44 = fadd double %mul41, %16, !dbg !1033
  tail call void @llvm.dbg.value(metadata !{double %add44}, i64 0, metadata !844), !dbg !1033
  %arrayidx46 = getelementptr inbounds double* %5, i64 %indvars.iv, !dbg !1033
  store double %add44, double* %arrayidx46, align 8, !dbg !1033, !tbaa !1018
  %mul47 = fmul double %w.089, %sub28, !dbg !1034
  %17 = load double* %arrayidx49, align 8, !dbg !1034, !tbaa !1018
  %add50 = fadd double %mul47, %17, !dbg !1034
  tail call void @llvm.dbg.value(metadata !{double %add50}, i64 0, metadata !845), !dbg !1034
  %arrayidx52 = getelementptr inbounds double* %11, i64 %indvars.iv, !dbg !1034
  store double %add50, double* %arrayidx52, align 8, !dbg !1034, !tbaa !1018
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1027
  %18 = trunc i64 %indvars.iv to i32, !dbg !1027
  %cmp = icmp slt i32 %18, %13, !dbg !1027
  br i1 %cmp, label %for.body, label %return, !dbg !1027

return:                                           ; preds = %if.end, %for.body, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %for.body ], [ 1, %if.end ]
  ret i32 %retval.0, !dbg !1039
}
