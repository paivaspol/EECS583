define void @_ZN3pov17Normal_Calc_JuliaEPdiPNS_14Fractal_StructE(double* nocapture %Result, i32 %N_Max, %"struct.pov::Fractal_Struct"* nocapture readnone) #0 {
  tail call void @llvm.dbg.value(metadata double* %Result, i64 0, metadata !930, metadata !1252), !dbg !1756
  tail call void @llvm.dbg.value(metadata i32 %N_Max, i64 0, metadata !931, metadata !1252), !dbg !1757
  tail call void @llvm.dbg.value(metadata %"struct.pov::Fractal_Struct"* %0, i64 0, metadata !932, metadata !1252), !dbg !1758
  tail call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !933, metadata !1252), !dbg !1759
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !934, metadata !1252), !dbg !1760
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !935, metadata !1252), !dbg !1761
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !936, metadata !1252), !dbg !1762
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !937, metadata !1252), !dbg !1763
  tail call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !938, metadata !1252), !dbg !1764
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !939, metadata !1252), !dbg !1765
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !940, metadata !1252), !dbg !1766
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !941, metadata !1252), !dbg !1767
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !942, metadata !1252), !dbg !1768
  tail call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !943, metadata !1252), !dbg !1769
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !944, metadata !1252), !dbg !1770
  %2 = load double** @_ZN3pov2SxE, align 8, !dbg !1771, !tbaa !1262
  %3 = load double** @_ZN3pov2SyE, align 8, !dbg !1772, !tbaa !1262
  %4 = load double** @_ZN3pov2SzE, align 8, !dbg !1773, !tbaa !1262
  %5 = load double** @_ZN3pov2SwE, align 8, !dbg !1774, !tbaa !1262
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !950, metadata !1252), !dbg !1775
  %w.02 = load double* %5, align 8, !dbg !1774
  %z.03 = load double* %4, align 8, !dbg !1773
  %y.04 = load double* %3, align 8, !dbg !1772
  %x.05 = load double* %2, align 8, !dbg !1771
  %6 = icmp slt i32 %N_Max, 1, !dbg !1776
  %7 = fmul double %y.04, 0.000000e+00, !dbg !1779
  br i1 %6, label %._crit_edge, label %.lr.ph.preheader, !dbg !1782

.lr.ph.preheader:                                 ; preds = %1
  %8 = insertelement <2 x double> undef, double %y.04, i32 0
  %9 = insertelement <2 x double> %8, double %z.03, i32 1
  br label %.lr.ph, !dbg !1779

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  %10 = phi double [ %71, %.lr.ph ], [ %7, %.lr.ph.preheader ]
  %11 = phi double [ %69, %.lr.ph ], [ %x.05, %.lr.ph.preheader ]
  %x.022 = phi double [ %x.0, %.lr.ph ], [ %x.05, %.lr.ph.preheader ]
  %w.019 = phi double [ %w.0, %.lr.ph ], [ %w.02, %.lr.ph.preheader ]
  %n34.016 = phi double [ %63, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %n31.013 = phi double [ %55, %.lr.ph ], [ 0.000000e+00, %.lr.ph.preheader ]
  %12 = phi <2 x double> [ %34, %.lr.ph ], [ <double 1.000000e+00, double 0.000000e+00>, %.lr.ph.preheader ]
  %13 = phi <2 x double> [ %44, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %14 = phi <2 x double> [ %47, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %15 = phi <2 x double> [ %41, %.lr.ph ], [ <double 1.000000e+00, double 0.000000e+00>, %.lr.ph.preheader ]
  %16 = phi <2 x double> [ %60, %.lr.ph ], [ <double 0.000000e+00, double 1.000000e+00>, %.lr.ph.preheader ]
  %17 = phi <2 x double> [ %73, %.lr.ph ], [ %9, %.lr.ph.preheader ]
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !945, metadata !1252), !dbg !1783
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !934, metadata !1252), !dbg !1760
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !935, metadata !1252), !dbg !1761
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !936, metadata !1252), !dbg !1762
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !933, metadata !1252), !dbg !1759
  %18 = extractelement <2 x double> %12, i32 1, !dbg !1784
  %19 = fmul double %18, %x.022, !dbg !1784
  %20 = extractelement <2 x double> %15, i32 0, !dbg !1784
  %21 = extractelement <2 x double> %17, i32 0, !dbg !1784
  %22 = fmul double %20, %21, !dbg !1784
  %23 = insertelement <2 x double> undef, double %11, i32 0, !dbg !1779
  %24 = insertelement <2 x double> %23, double %19, i32 1, !dbg !1779
  %25 = insertelement <2 x double> undef, double %10, i32 0, !dbg !1779
  %26 = insertelement <2 x double> %25, double %22, i32 1, !dbg !1779
  %27 = fsub <2 x double> %24, %26, !dbg !1779
  %28 = shufflevector <2 x double> %17, <2 x double> undef, <2 x i32> <i32 1, i32 1>, !dbg !1779
  %29 = fmul <2 x double> %13, %28, !dbg !1779
  %30 = fsub <2 x double> %27, %29, !dbg !1779
  %31 = insertelement <2 x double> undef, double %w.019, i32 0, !dbg !1779
  %32 = insertelement <2 x double> %31, double %w.019, i32 1, !dbg !1779
  %33 = fmul <2 x double> %14, %32, !dbg !1779
  %34 = fsub <2 x double> %30, %33, !dbg !1779
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !945, metadata !1252), !dbg !1783
  %35 = shufflevector <2 x double> %17, <2 x double> undef, <2 x i32> zeroinitializer, !dbg !1784
  %36 = shufflevector <2 x double> %12, <2 x double> undef, <2 x i32> <i32 1, i32 0>, !dbg !1784
  %37 = fmul <2 x double> %35, %36, !dbg !1784
  %38 = insertelement <2 x double> undef, double %x.022, i32 0, !dbg !1784
  %39 = insertelement <2 x double> %38, double %x.022, i32 1, !dbg !1784
  %40 = fmul <2 x double> %15, %39, !dbg !1784
  %41 = fadd <2 x double> %37, %40, !dbg !1784
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !938, metadata !1252), !dbg !1764
  %42 = fmul <2 x double> %12, %28, !dbg !1779
  %43 = fmul <2 x double> %39, %13, !dbg !1779
  %44 = fadd <2 x double> %42, %43, !dbg !1779
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !939, metadata !1252), !dbg !1765
  %45 = fmul <2 x double> %12, %32, !dbg !1779
  %46 = fmul <2 x double> %14, %39, !dbg !1779
  %47 = fadd <2 x double> %45, %46, !dbg !1779
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !940, metadata !1252), !dbg !1766
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !937, metadata !1252), !dbg !1763
  %48 = fmul double %n31.013, %x.022, !dbg !1786
  %49 = fmul <2 x double> %16, %17, !dbg !1786
  %50 = extractelement <2 x double> %49, i32 0, !dbg !1786
  %51 = fsub double %48, %50, !dbg !1786
  %52 = extractelement <2 x double> %49, i32 1, !dbg !1786
  %53 = fsub double %51, %52, !dbg !1786
  %54 = fmul double %n34.016, %w.019, !dbg !1786
  %55 = fsub double %53, %54, !dbg !1786
  tail call void @llvm.dbg.value(metadata double %55, i64 0, metadata !945, metadata !1252), !dbg !1783
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !942, metadata !1252), !dbg !1768
  %56 = insertelement <2 x double> undef, double %n31.013, i32 0, !dbg !1786
  %57 = insertelement <2 x double> %56, double %n31.013, i32 1, !dbg !1786
  %58 = fmul <2 x double> %57, %17, !dbg !1786
  %59 = fmul <2 x double> %16, %39, !dbg !1786
  %60 = fadd <2 x double> %58, %59, !dbg !1786
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !943, metadata !1252), !dbg !1769
  %61 = fmul double %n31.013, %w.019, !dbg !1786
  %62 = fmul double %n34.016, %x.022, !dbg !1786
  %63 = fadd double %61, %62, !dbg !1786
  tail call void @llvm.dbg.value(metadata double %63, i64 0, metadata !944, metadata !1252), !dbg !1770
  tail call void @llvm.dbg.value(metadata double %55, i64 0, metadata !941, metadata !1252), !dbg !1767
  %64 = getelementptr inbounds double* %2, i64 %indvars.iv, !dbg !1788
  %65 = getelementptr inbounds double* %3, i64 %indvars.iv, !dbg !1789
  %66 = getelementptr inbounds double* %4, i64 %indvars.iv, !dbg !1790
  %67 = getelementptr inbounds double* %5, i64 %indvars.iv, !dbg !1791
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1782
  %w.0 = load double* %67, align 8, !dbg !1774
  %z.0 = load double* %66, align 8, !dbg !1773
  %y.0 = load double* %65, align 8, !dbg !1772
  %x.0 = load double* %64, align 8, !dbg !1771
  %68 = extractelement <2 x double> %34, i32 0, !dbg !1779
  %69 = fmul double %68, %x.0, !dbg !1779
  %70 = extractelement <2 x double> %41, i32 1, !dbg !1779
  %71 = fmul double %70, %y.0, !dbg !1779
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1782
  %exitcond = icmp eq i32 %lftr.wideiv, %N_Max, !dbg !1782
  %72 = insertelement <2 x double> undef, double %y.0, i32 0
  %73 = insertelement <2 x double> %72, double %z.0, i32 1
  br i1 %exitcond, label %._crit_edge.loopexit, label %.lr.ph, !dbg !1782

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %74 = extractelement <2 x double> %34, i32 1
  %75 = extractelement <2 x double> %41, i32 0
  %76 = extractelement <2 x double> %60, i32 0
  %77 = extractelement <2 x double> %60, i32 1
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %.lcssa1 = phi double [ %7, %1 ], [ %71, %._crit_edge.loopexit ]
  %.lcssa = phi double [ %x.05, %1 ], [ %69, %._crit_edge.loopexit ]
  %x.0.lcssa = phi double [ %x.05, %1 ], [ %x.0, %._crit_edge.loopexit ]
  %y.0.lcssa = phi double [ %y.04, %1 ], [ %y.0, %._crit_edge.loopexit ]
  %z.0.lcssa = phi double [ %z.03, %1 ], [ %z.0, %._crit_edge.loopexit ]
  %w.0.lcssa = phi double [ %w.02, %1 ], [ %w.0, %._crit_edge.loopexit ]
  %n34.0.lcssa = phi double [ 0.000000e+00, %1 ], [ %63, %._crit_edge.loopexit ]
  %n33.0.lcssa = phi double [ 1.000000e+00, %1 ], [ %77, %._crit_edge.loopexit ]
  %n32.0.lcssa = phi double [ 0.000000e+00, %1 ], [ %76, %._crit_edge.loopexit ]
  %n31.0.lcssa = phi double [ 0.000000e+00, %1 ], [ %55, %._crit_edge.loopexit ]
  %n22.0.lcssa = phi double [ 1.000000e+00, %1 ], [ %75, %._crit_edge.loopexit ]
  %n21.0.lcssa = phi double [ 0.000000e+00, %1 ], [ %74, %._crit_edge.loopexit ]
  %78 = phi <2 x double> [ zeroinitializer, %1 ], [ %47, %._crit_edge.loopexit ]
  %79 = phi <2 x double> [ zeroinitializer, %1 ], [ %44, %._crit_edge.loopexit ]
  %80 = fmul double %n21.0.lcssa, %x.0.lcssa, !dbg !1792
  %81 = fmul double %n22.0.lcssa, %y.0.lcssa, !dbg !1793
  %82 = insertelement <2 x double> undef, double %.lcssa1, i32 0, !dbg !1794
  %83 = insertelement <2 x double> %82, double %81, i32 1, !dbg !1794
  %84 = insertelement <2 x double> undef, double %.lcssa, i32 0, !dbg !1794
  %85 = insertelement <2 x double> %84, double %80, i32 1, !dbg !1794
  %86 = fadd <2 x double> %83, %85, !dbg !1794
  %87 = insertelement <2 x double> undef, double %z.0.lcssa, i32 0, !dbg !1795
  %88 = insertelement <2 x double> %87, double %z.0.lcssa, i32 1, !dbg !1795
  %89 = fmul <2 x double> %79, %88, !dbg !1795
  %90 = fadd <2 x double> %89, %86, !dbg !1796
  %91 = insertelement <2 x double> undef, double %w.0.lcssa, i32 0, !dbg !1797
  %92 = insertelement <2 x double> %91, double %w.0.lcssa, i32 1, !dbg !1797
  %93 = fmul <2 x double> %78, %92, !dbg !1797
  %94 = fadd <2 x double> %93, %90, !dbg !1798
  %95 = bitcast double* %Result to <2 x double>*, !dbg !1799
  store <2 x double> %94, <2 x double>* %95, align 8, !dbg !1799, !tbaa !1256
  %96 = fmul double %n31.0.lcssa, %x.0.lcssa, !dbg !1800
  %97 = fmul double %n32.0.lcssa, %y.0.lcssa, !dbg !1801
  %98 = fadd double %97, %96, !dbg !1802
  %99 = fmul double %n33.0.lcssa, %z.0.lcssa, !dbg !1803
  %100 = fadd double %99, %98, !dbg !1804
  %101 = fmul double %n34.0.lcssa, %w.0.lcssa, !dbg !1805
  %102 = fadd double %101, %100, !dbg !1806
  %103 = getelementptr inbounds double* %Result, i64 2, !dbg !1807
  store double %102, double* %103, align 8, !dbg !1808, !tbaa !1256
  ret void, !dbg !1809
}
