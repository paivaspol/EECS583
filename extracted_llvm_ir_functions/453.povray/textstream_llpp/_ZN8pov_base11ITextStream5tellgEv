define { i64, i32 } @_ZN8pov_base11ITextStream5tellgEv(%"class.pov_base::ITextStream"* nocapture %this) #6 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.pov_base::ITextStream"* %this}, i64 0, metadata !382), !dbg !732
  tail call void @llvm.dbg.declare(metadata !707, metadata !383), !dbg !733
  %lineno = getelementptr inbounds %"class.pov_base::ITextStream"* %this, i64 0, i32 8, !dbg !734
  %0 = load i32* %lineno, align 4, !dbg !734, !tbaa !587
  %curpos = getelementptr inbounds %"class.pov_base::ITextStream"* %this, i64 0, i32 6, !dbg !735
  %1 = load i64* %curpos, align 8, !dbg !735, !tbaa !601
  %maxbufferoffset = getelementptr inbounds %"class.pov_base::ITextStream"* %this, i64 0, i32 4, !dbg !735
  %2 = load i64* %maxbufferoffset, align 8, !dbg !735, !tbaa !601
  %bufferoffset = getelementptr inbounds %"class.pov_base::ITextStream"* %this, i64 0, i32 3, !dbg !735
  %3 = load i64* %bufferoffset, align 8, !dbg !735, !tbaa !601
  %ungetbuffer = getelementptr inbounds %"class.pov_base::ITextStream"* %this, i64 0, i32 9, !dbg !736
  %4 = load i32* %ungetbuffer, align 4, !dbg !736, !tbaa !587
  %not.cmp = icmp ne i32 %4, -1, !dbg !736
  %dec = sext i1 %not.cmp to i64, !dbg !736
  %sub6 = sub i64 %1, %2, !dbg !735
  %sub3 = add i64 %sub6, %3, !dbg !735
  %sub3.dec = add i64 %sub3, %dec, !dbg !736
  %.fca.0.insert = insertvalue { i64, i32 } undef, i64 %sub3.dec, 0, !dbg !737
  %.fca.1.insert = insertvalue { i64, i32 } %.fca.0.insert, i32 %0, 1, !dbg !737
  ret { i64, i32 } %.fca.1.insert, !dbg !737
}
