define void @_ZN3pov21Compute_Plane_Min_MaxEPNS_12Plane_StructEPdS2_(%"struct.pov::Plane_Struct"* %Plane, double* nocapture %Min, double* nocapture %Max) #0 {
  %P = alloca [3 x double], align 16
  %N = alloca [3 x double], align 16
  tail call void @llvm.dbg.value(metadata %"struct.pov::Plane_Struct"* %Plane, i64 0, metadata !1017, metadata !1622), !dbg !3198
  tail call void @llvm.dbg.value(metadata double* %Min, i64 0, metadata !1018, metadata !1622), !dbg !3199
  tail call void @llvm.dbg.value(metadata double* %Max, i64 0, metadata !1019, metadata !1622), !dbg !3200
  tail call void @llvm.dbg.declare(metadata [3 x double]* %P, metadata !1021, metadata !1622), !dbg !3201
  tail call void @llvm.dbg.declare(metadata [3 x double]* %N, metadata !1022, metadata !1622), !dbg !3202
  %1 = getelementptr inbounds %"struct.pov::Plane_Struct"* %Plane, i64 0, i32 10, !dbg !3203
  %2 = load %"struct.pov::Transform_Struct"** %1, align 8, !dbg !3203, !tbaa !3205
  %3 = icmp eq %"struct.pov::Transform_Struct"* %2, null, !dbg !3207
  %4 = getelementptr inbounds [3 x double]* %N, i64 0, i64 0, !dbg !3208
  %5 = getelementptr inbounds %"struct.pov::Plane_Struct"* %Plane, i64 0, i32 14, i64 0, !dbg !3210
  br i1 %3, label %6, label %26, !dbg !3211

; <label>:6                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata double* %4, i64 0, metadata !1191, metadata !1622), !dbg !3212
  tail call void @llvm.dbg.value(metadata double* %5, i64 0, metadata !1192, metadata !1622), !dbg !3214
  %7 = bitcast double* %5 to i64*, !dbg !3215
  %8 = load i64* %7, align 8, !dbg !3215, !tbaa !1640
  %9 = bitcast [3 x double]* %N to i64*, !dbg !3216
  store i64 %8, i64* %9, align 16, !dbg !3216, !tbaa !1640
  %10 = getelementptr inbounds %"struct.pov::Plane_Struct"* %Plane, i64 0, i32 14, i64 1, !dbg !3217
  %11 = bitcast double* %10 to i64*, !dbg !3217
  %12 = load i64* %11, align 8, !dbg !3217, !tbaa !1640
  %13 = getelementptr inbounds [3 x double]* %N, i64 0, i64 1, !dbg !3218
  %14 = bitcast double* %13 to i64*, !dbg !3219
  store i64 %12, i64* %14, align 8, !dbg !3219, !tbaa !1640
  %15 = getelementptr inbounds %"struct.pov::Plane_Struct"* %Plane, i64 0, i32 14, i64 2, !dbg !3220
  %16 = bitcast double* %15 to i64*, !dbg !3220
  %17 = load i64* %16, align 8, !dbg !3220, !tbaa !1640
  %18 = getelementptr inbounds [3 x double]* %N, i64 0, i64 2, !dbg !3221
  %19 = bitcast double* %18 to i64*, !dbg !3222
  store i64 %17, i64* %19, align 16, !dbg !3222, !tbaa !1640
  %20 = getelementptr inbounds %"struct.pov::Plane_Struct"* %Plane, i64 0, i32 15, !dbg !3223
  %21 = load double* %20, align 8, !dbg !3223, !tbaa !3224
  %22 = fsub double -0.000000e+00, %21, !dbg !3225
  tail call void @llvm.dbg.value(metadata double %22, i64 0, metadata !1020, metadata !1622), !dbg !3226
  %23 = bitcast i64 %8 to double
  %24 = bitcast i64 %12 to double
  %25 = bitcast i64 %17 to double
  br label %49, !dbg !3227

; <label>:26                                      ; preds = %0
  call void @_ZN3pov15MInvTransNormalEPdS0_PNS_16Transform_StructE(double* %4, double* %5, %"struct.pov::Transform_Struct"* %2) #8, !dbg !3228
  %27 = getelementptr inbounds [3 x double]* %P, i64 0, i64 0, !dbg !3230
  %28 = load %"struct.pov::Transform_Struct"** %1, align 8, !dbg !3231, !tbaa !3205
  call void @_ZN3pov14MInvTransPointEPdS0_PNS_16Transform_StructE(double* %27, double* %4, %"struct.pov::Transform_Struct"* %28) #8, !dbg !3232
  %29 = getelementptr inbounds %"struct.pov::Plane_Struct"* %Plane, i64 0, i32 15, !dbg !3233
  %30 = load double* %29, align 8, !dbg !3233, !tbaa !3224
  %31 = fsub double -0.000000e+00, %30, !dbg !3234
  %32 = load double* %27, align 16, !dbg !3235, !tbaa !1640
  %33 = load double* %4, align 16, !dbg !3236, !tbaa !1640
  %34 = fmul double %32, %33, !dbg !3237
  %35 = fsub double %31, %34, !dbg !3238
  %36 = getelementptr inbounds [3 x double]* %P, i64 0, i64 1, !dbg !3239
  %37 = load double* %36, align 8, !dbg !3239, !tbaa !1640
  %38 = getelementptr inbounds [3 x double]* %N, i64 0, i64 1, !dbg !3240
  %39 = load double* %38, align 8, !dbg !3240, !tbaa !1640
  %40 = fmul double %37, %39, !dbg !3241
  %41 = fsub double %35, %40, !dbg !3242
  %42 = getelementptr inbounds [3 x double]* %P, i64 0, i64 2, !dbg !3243
  %43 = load double* %42, align 16, !dbg !3243, !tbaa !1640
  %44 = getelementptr inbounds [3 x double]* %N, i64 0, i64 2, !dbg !3244
  %45 = load double* %44, align 16, !dbg !3244, !tbaa !1640
  %46 = fmul double %43, %45, !dbg !3245
  %47 = fsub double %41, %46, !dbg !3246
  %48 = fadd double %47, 1.000000e+00, !dbg !3247
  call void @llvm.dbg.value(metadata double %48, i64 0, metadata !1020, metadata !1622), !dbg !3226
  br label %49

; <label>:49                                      ; preds = %26, %6
  %50 = phi double [ %25, %6 ], [ %45, %26 ]
  %51 = phi double [ %24, %6 ], [ %39, %26 ]
  %52 = phi double [ %23, %6 ], [ %33, %26 ]
  %d.0 = phi double [ %22, %6 ], [ %48, %26 ]
  %53 = getelementptr inbounds double* %Min, i64 2, !dbg !3248
  store double -1.000000e+10, double* %53, align 8, !dbg !3249, !tbaa !1640
  %54 = getelementptr inbounds double* %Min, i64 1, !dbg !3250
  %55 = bitcast double* %Min to <2 x double>*, !dbg !3251
  store <2 x double> <double -1.000000e+10, double -1.000000e+10>, <2 x double>* %55, align 8, !dbg !3251, !tbaa !1640
  %56 = getelementptr inbounds double* %Max, i64 2, !dbg !3252
  store double 1.000000e+10, double* %56, align 8, !dbg !3253, !tbaa !1640
  %57 = getelementptr inbounds double* %Max, i64 1, !dbg !3254
  %58 = bitcast double* %Max to <2 x double>*, !dbg !3255
  store <2 x double> <double 1.000000e+10, double 1.000000e+10>, <2 x double>* %58, align 8, !dbg !3255, !tbaa !1640
  %59 = call double @fabs(double %52) #7, !dbg !3256
  %60 = fsub double 1.000000e+00, %59, !dbg !3258
  %61 = call double @fabs(double %60) #7, !dbg !3259
  %62 = fcmp olt double %61, 1.000000e-07, !dbg !3260
  br i1 %62, label %63, label %68, !dbg !3261

; <label>:63                                      ; preds = %49
  %64 = fcmp ogt double %52, 0.000000e+00, !dbg !3262
  br i1 %64, label %65, label %66, !dbg !3265

; <label>:65                                      ; preds = %63
  store double %d.0, double* %Max, align 8, !dbg !3266, !tbaa !1640
  br label %68, !dbg !3268

; <label>:66                                      ; preds = %63
  %67 = fsub double -0.000000e+00, %d.0, !dbg !3269
  store double %67, double* %Min, align 8, !dbg !3271, !tbaa !1640
  br label %68

; <label>:68                                      ; preds = %65, %66, %49
  %69 = call double @fabs(double %51) #7, !dbg !3272
  %70 = fsub double 1.000000e+00, %69, !dbg !3274
  %71 = call double @fabs(double %70) #7, !dbg !3275
  %72 = fcmp olt double %71, 1.000000e-07, !dbg !3276
  br i1 %72, label %73, label %78, !dbg !3277

; <label>:73                                      ; preds = %68
  %74 = fcmp ogt double %51, 0.000000e+00, !dbg !3278
  br i1 %74, label %75, label %76, !dbg !3281

; <label>:75                                      ; preds = %73
  store double %d.0, double* %57, align 8, !dbg !3282, !tbaa !1640
  br label %78, !dbg !3284

; <label>:76                                      ; preds = %73
  %77 = fsub double -0.000000e+00, %d.0, !dbg !3285
  store double %77, double* %54, align 8, !dbg !3287, !tbaa !1640
  br label %78

; <label>:78                                      ; preds = %75, %76, %68
  %79 = call double @fabs(double %50) #7, !dbg !3288
  %80 = fsub double 1.000000e+00, %79, !dbg !3290
  %81 = call double @fabs(double %80) #7, !dbg !3291
  %82 = fcmp olt double %81, 1.000000e-07, !dbg !3292
  br i1 %82, label %83, label %88, !dbg !3293

; <label>:83                                      ; preds = %78
  %84 = fcmp ogt double %50, 0.000000e+00, !dbg !3294
  br i1 %84, label %85, label %86, !dbg !3297

; <label>:85                                      ; preds = %83
  store double %d.0, double* %56, align 8, !dbg !3298, !tbaa !1640
  br label %88, !dbg !3300

; <label>:86                                      ; preds = %83
  %87 = fsub double -0.000000e+00, %d.0, !dbg !3301
  store double %87, double* %53, align 8, !dbg !3303, !tbaa !1640
  br label %88

; <label>:88                                      ; preds = %85, %86, %78
  ret void, !dbg !3304
}
