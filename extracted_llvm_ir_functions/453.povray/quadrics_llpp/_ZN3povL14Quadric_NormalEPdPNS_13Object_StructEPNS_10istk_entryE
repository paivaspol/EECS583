define internal void @_ZN3povL14Quadric_NormalEPdPNS_13Object_StructEPNS_10istk_entryE(double* nocapture %Result, %"struct.pov::Object_Struct"* nocapture %Object, %"struct.pov::istk_entry"* nocapture %Inter) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %Result}, i64 0, metadata !1178), !dbg !1472
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::Object_Struct"* %Object}, i64 0, metadata !1179), !dbg !1472
  tail call void @llvm.dbg.value(metadata !{%"struct.pov::istk_entry"* %Inter}, i64 0, metadata !1180), !dbg !1472
  %Square_Terms = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, !dbg !1473
  %arrayidx = bitcast %"struct.pov::Object_Struct"* %Square_Terms to double*, !dbg !1473
  %0 = load double* %arrayidx, align 8, !dbg !1473, !tbaa !1333
  %mul = fmul double %0, 2.000000e+00, !dbg !1473
  %arrayidx1 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 1, i64 0, !dbg !1473
  %1 = load double* %arrayidx1, align 8, !dbg !1473, !tbaa !1333
  %mul2 = fmul double %mul, %1, !dbg !1473
  %Mixed_Terms = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 3, !dbg !1473
  %arrayidx3 = bitcast %"struct.pov::Texture_Struct"** %Mixed_Terms to double*, !dbg !1473
  %2 = load double* %arrayidx3, align 8, !dbg !1473, !tbaa !1333
  %arrayidx5 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 1, i64 1, !dbg !1473
  %3 = load double* %arrayidx5, align 8, !dbg !1473, !tbaa !1333
  %mul6 = fmul double %2, %3, !dbg !1473
  %add = fadd double %mul2, %mul6, !dbg !1473
  %arrayidx8 = getelementptr inbounds %"struct.pov::Texture_Struct"** %Mixed_Terms, i64 1, !dbg !1473
  %4 = bitcast %"struct.pov::Texture_Struct"** %arrayidx8 to double*, !dbg !1473
  %5 = load double* %4, align 8, !dbg !1473, !tbaa !1333
  %arrayidx10 = getelementptr inbounds %"struct.pov::istk_entry"* %Inter, i64 0, i32 1, i64 2, !dbg !1473
  %6 = load double* %arrayidx10, align 8, !dbg !1473, !tbaa !1333
  %mul11 = fmul double %5, %6, !dbg !1473
  %add12 = fadd double %add, %mul11, !dbg !1473
  %Terms = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 6, !dbg !1473
  %arrayidx13 = bitcast %"struct.pov::Object_Struct"** %Terms to double*, !dbg !1473
  %7 = load double* %arrayidx13, align 8, !dbg !1473, !tbaa !1333
  %add14 = fadd double %7, %add12, !dbg !1473
  store double %add14, double* %Result, align 8, !dbg !1473, !tbaa !1333
  %8 = load double* %arrayidx3, align 8, !dbg !1474, !tbaa !1333
  %9 = load double* %arrayidx1, align 8, !dbg !1474, !tbaa !1333
  %mul20 = fmul double %8, %9, !dbg !1474
  %arrayidx22 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 1, !dbg !1474
  %10 = bitcast i32* %arrayidx22 to double*, !dbg !1474
  %11 = load double* %10, align 8, !dbg !1474, !tbaa !1333
  %mul23 = fmul double %11, 2.000000e+00, !dbg !1474
  %12 = load double* %arrayidx5, align 8, !dbg !1474, !tbaa !1333
  %mul26 = fmul double %mul23, %12, !dbg !1474
  %add27 = fadd double %mul20, %mul26, !dbg !1474
  %arrayidx29 = getelementptr inbounds %"struct.pov::Texture_Struct"** %Mixed_Terms, i64 2, !dbg !1474
  %13 = bitcast %"struct.pov::Texture_Struct"** %arrayidx29 to double*, !dbg !1474
  %14 = load double* %13, align 8, !dbg !1474, !tbaa !1333
  %15 = load double* %arrayidx10, align 8, !dbg !1474, !tbaa !1333
  %mul32 = fmul double %14, %15, !dbg !1474
  %add33 = fadd double %add27, %mul32, !dbg !1474
  %arrayidx35 = getelementptr inbounds %"struct.pov::Object_Struct"** %Terms, i64 1, !dbg !1474
  %16 = bitcast %"struct.pov::Object_Struct"** %arrayidx35 to double*, !dbg !1474
  %17 = load double* %16, align 8, !dbg !1474, !tbaa !1333
  %add36 = fadd double %17, %add33, !dbg !1474
  %arrayidx37 = getelementptr inbounds double* %Result, i64 1, !dbg !1474
  store double %add36, double* %arrayidx37, align 8, !dbg !1474, !tbaa !1333
  %18 = load double* %4, align 8, !dbg !1475, !tbaa !1333
  %19 = load double* %arrayidx1, align 8, !dbg !1475, !tbaa !1333
  %mul42 = fmul double %18, %19, !dbg !1475
  %20 = load double* %13, align 8, !dbg !1475, !tbaa !1333
  %21 = load double* %arrayidx5, align 8, !dbg !1475, !tbaa !1333
  %mul47 = fmul double %20, %21, !dbg !1475
  %add48 = fadd double %mul42, %mul47, !dbg !1475
  %arrayidx50 = getelementptr inbounds %"struct.pov::Object_Struct"* %Object, i64 1, i32 2, !dbg !1475
  %22 = bitcast %"struct.pov::Object_Struct"** %arrayidx50 to double*, !dbg !1475
  %23 = load double* %22, align 8, !dbg !1475, !tbaa !1333
  %mul51 = fmul double %23, 2.000000e+00, !dbg !1475
  %24 = load double* %arrayidx10, align 8, !dbg !1475, !tbaa !1333
  %mul54 = fmul double %mul51, %24, !dbg !1475
  %add55 = fadd double %add48, %mul54, !dbg !1475
  %arrayidx57 = getelementptr inbounds %"struct.pov::Object_Struct"** %Terms, i64 2, !dbg !1475
  %25 = bitcast %"struct.pov::Object_Struct"** %arrayidx57 to double*, !dbg !1475
  %26 = load double* %25, align 8, !dbg !1475, !tbaa !1333
  %add58 = fadd double %26, %add55, !dbg !1475
  %arrayidx59 = getelementptr inbounds double* %Result, i64 2, !dbg !1475
  store double %add58, double* %arrayidx59, align 8, !dbg !1475, !tbaa !1333
  tail call void @llvm.dbg.value(metadata !{double* %Result}, i64 0, metadata !1476) #6, !dbg !1478
  %mul.i = fmul double %add14, %add14, !dbg !1479
  %mul4.i = fmul double %add36, %add36, !dbg !1479
  %add.i = fadd double %mul.i, %mul4.i, !dbg !1479
  %mul7.i = fmul double %add58, %add58, !dbg !1479
  %add8.i = fadd double %mul7.i, %add.i, !dbg !1479
  %call.i = tail call double @sqrt(double %add8.i) #8, !dbg !1479
  tail call void @llvm.dbg.value(metadata !{double %call.i}, i64 0, metadata !1182), !dbg !1479
  tail call void @llvm.dbg.value(metadata !{double %call.i}, i64 0, metadata !1480), !dbg !1478
  tail call void @llvm.dbg.value(metadata !{double %call.i}, i64 0, metadata !1182), !dbg !1481
  %cmp = fcmp oeq double %call.i, 0.000000e+00, !dbg !1481
  br i1 %cmp, label %if.then, label %if.else, !dbg !1481

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{double* %Result}, i64 0, metadata !1482), !dbg !1485
  tail call void @llvm.dbg.value(metadata !1486, i64 0, metadata !1487), !dbg !1485
  tail call void @llvm.dbg.value(metadata !1488, i64 0, metadata !1489), !dbg !1485
  tail call void @llvm.dbg.value(metadata !1488, i64 0, metadata !1490), !dbg !1485
  store double 1.000000e+00, double* %Result, align 8, !dbg !1491, !tbaa !1333
  store double 0.000000e+00, double* %arrayidx37, align 8, !dbg !1493, !tbaa !1333
  br label %if.end, !dbg !1494

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{double* %Result}, i64 0, metadata !1495), !dbg !1498
  tail call void @llvm.dbg.value(metadata !{double %call.i}, i64 0, metadata !1499), !dbg !1498
  %div.i = fdiv double 1.000000e+00, %call.i, !dbg !1500
  tail call void @llvm.dbg.value(metadata !{double %div.i}, i64 0, metadata !1501), !dbg !1500
  %27 = load double* %Result, align 8, !dbg !1502, !tbaa !1333
  %mul.i84 = fmul double %div.i, %27, !dbg !1502
  store double %mul.i84, double* %Result, align 8, !dbg !1502, !tbaa !1333
  %28 = load double* %arrayidx37, align 8, !dbg !1503, !tbaa !1333
  %mul2.i = fmul double %div.i, %28, !dbg !1503
  store double %mul2.i, double* %arrayidx37, align 8, !dbg !1503, !tbaa !1333
  %29 = load double* %arrayidx59, align 8, !dbg !1504, !tbaa !1333
  %mul4.i86 = fmul double %div.i, %29, !dbg !1504
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi double [ %mul4.i86, %if.else ], [ 0.000000e+00, %if.then ]
  store double %storemerge, double* %arrayidx59, align 8, !dbg !1505, !tbaa !1333
  ret void, !dbg !1506
}
