define i32 @gtp_decode_color(i8* nocapture %s, i32* nocapture %color) #0 {
entry:
  %color_string = alloca [7 x i8], align 1
  %n = alloca i32, align 4
  %arraydecay = getelementptr inbounds [7 x i8]* %color_string, i64 0, i64 0
  %call = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %s, i8* getelementptr inbounds ([6 x i8]* @.str15, i64 0, i64 0), i8* %arraydecay, i32* %n) #4
  %cmp = icmp eq i32 %call, 1
  br i1 %cmp, label %for.cond.preheader, label %return

for.cond.preheader:                               ; preds = %entry
  %call236 = call i64 @strlen(i8* %arraydecay) #5
  %conv37 = trunc i64 %call236 to i32
  %cmp338 = icmp sgt i32 %conv37, 0
  br i1 %cmp338, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds [7 x i8]* %color_string, i64 0, i64 %indvars.iv
  %0 = load i8* %arrayidx, align 1, !tbaa !0
  %conv5 = sext i8 %0 to i32
  %call6 = call i32 @tolower(i32 %conv5) #4
  %conv7 = trunc i32 %call6 to i8
  store i8 %conv7, i8* %arrayidx, align 1, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %call2 = call i64 @strlen(i8* %arraydecay) #5
  %conv = trunc i64 %call2 to i32
  %1 = trunc i64 %indvars.iv.next to i32
  %cmp3 = icmp slt i32 %1, %conv
  br i1 %cmp3, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %call11 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([2 x i8]* @.str16, i64 0, i64 0)) #5
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.end31, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %call15 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8]* @.str6, i64 0, i64 0)) #5
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.end31, label %if.else

if.else:                                          ; preds = %lor.lhs.false
  %call20 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([2 x i8]* @.str17, i64 0, i64 0)) #5
  %cmp21 = icmp eq i32 %call20, 0
  br i1 %cmp21, label %if.end31, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %if.else
  %call25 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8]* @.str5, i64 0, i64 0)) #5
  %cmp26 = icmp eq i32 %call25, 0
  br i1 %cmp26, label %if.end31, label %return

if.end31:                                         ; preds = %if.else, %lor.lhs.false23, %for.end, %lor.lhs.false
  %storemerge = phi i32 [ 2, %lor.lhs.false ], [ 2, %for.end ], [ 1, %lor.lhs.false23 ], [ 1, %if.else ]
  store i32 %storemerge, i32* %color, align 4, !tbaa !2
  %2 = load i32* %n, align 4, !tbaa !2
  br label %return

return:                                           ; preds = %lor.lhs.false23, %entry, %if.end31
  %retval.0 = phi i32 [ %2, %if.end31 ], [ 0, %entry ], [ 0, %lor.lhs.false23 ]
  ret i32 %retval.0
}
