define i32 @gtp_decode_move(i8* nocapture %s, i32* nocapture %color, i32* %i, i32* %j) #0 {
entry:
  %n2 = alloca i32, align 4
  %buf = alloca [6 x i8], align 1
  call void @llvm.dbg.value(metadata !{i8* %s}, i64 0, metadata !204), !dbg !407
  call void @llvm.dbg.value(metadata !{i32* %color}, i64 0, metadata !205), !dbg !407
  call void @llvm.dbg.value(metadata !{i32* %i}, i64 0, metadata !206), !dbg !407
  call void @llvm.dbg.value(metadata !{i32* %j}, i64 0, metadata !207), !dbg !407
  call void @llvm.dbg.declare(metadata !{i32* %n2}, metadata !209), !dbg !408
  %0 = load i32* @gtp_boardsize, align 4, !dbg !409, !tbaa !272
  %cmp = icmp sgt i32 %0, 0, !dbg !409
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !409

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8]* @.str16, i64 0, i64 0), i32 376, i8* getelementptr inbounds ([49 x i8]* @__PRETTY_FUNCTION__.gtp_decode_move, i64 0, i64 0)) #9, !dbg !409
  unreachable, !dbg !409

cond.end:                                         ; preds = %entry
  %call = call i32 @gtp_decode_color(i8* %s, i32* %color) #8, !dbg !410
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !208), !dbg !410
  %cmp1 = icmp eq i32 %call, 0, !dbg !411
  br i1 %cmp1, label %return, label %if.end, !dbg !411

if.end:                                           ; preds = %cond.end
  %idx.ext = sext i32 %call to i64, !dbg !412
  %add.ptr = getelementptr inbounds i8* %s, i64 %idx.ext, !dbg !412
  %call2 = call i32 @gtp_decode_coord(i8* %add.ptr, i32* %i, i32* %j) #8, !dbg !412
  call void @llvm.dbg.value(metadata !{i32 %call2}, i64 0, metadata !209), !dbg !412
  store i32 %call2, i32* %n2, align 4, !dbg !412, !tbaa !272
  %cmp3 = icmp eq i32 %call2, 0, !dbg !413
  br i1 %cmp3, label %if.then4, label %if.end26, !dbg !413

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata !{[6 x i8]* %buf}, metadata !211), !dbg !414
  %arraydecay = getelementptr inbounds [6 x i8]* %buf, i64 0, i64 0, !dbg !415
  %call7 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr, i8* getelementptr inbounds ([6 x i8]* @.str21, i64 0, i64 0), i8* %arraydecay, i32* %n2) #6, !dbg !415
  %cmp8 = icmp eq i32 %call7, 1, !dbg !415
  br i1 %cmp8, label %for.cond.preheader, label %return, !dbg !415

for.cond.preheader:                               ; preds = %if.then4
  %call1237 = call i64 @strlen(i8* %arraydecay) #7, !dbg !416
  %conv38 = trunc i64 %call1237 to i32, !dbg !416
  %cmp1339 = icmp sgt i32 %conv38, 0, !dbg !416
  br i1 %cmp1339, label %for.body, label %for.end, !dbg !416

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds [6 x i8]* %buf, i64 0, i64 %indvars.iv, !dbg !417
  %1 = load i8* %arrayidx, align 1, !dbg !417, !tbaa !262
  %conv15 = sext i8 %1 to i32, !dbg !417
  %call16 = call i32 @tolower(i32 %conv15) #6, !dbg !417
  call void @llvm.dbg.value(metadata !{i32 %call16}, i64 0, metadata !216), !dbg !417
  %conv17 = trunc i32 %call16 to i8, !dbg !419
  store i8 %conv17, i8* %arrayidx, align 1, !dbg !419, !tbaa !262
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !416
  %call12 = call i64 @strlen(i8* %arraydecay) #7, !dbg !416
  %conv = trunc i64 %call12 to i32, !dbg !416
  %2 = trunc i64 %indvars.iv.next to i32, !dbg !416
  %cmp13 = icmp slt i32 %2, %conv, !dbg !416
  br i1 %cmp13, label %for.body, label %for.end, !dbg !416

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %call21 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8]* @.str22, i64 0, i64 0)) #7, !dbg !420
  %cmp22 = icmp eq i32 %call21, 0, !dbg !420
  br i1 %cmp22, label %if.end25, label %return, !dbg !420

if.end25:                                         ; preds = %for.end
  store i32 -1, i32* %i, align 4, !dbg !421, !tbaa !272
  store i32 -1, i32* %j, align 4, !dbg !422, !tbaa !272
  call void @llvm.dbg.value(metadata !{i32* %n2}, i64 0, metadata !209), !dbg !423
  %.pre = load i32* %n2, align 4, !dbg !423, !tbaa !272
  br label %if.end26, !dbg !424

if.end26:                                         ; preds = %if.end25, %if.end
  %3 = phi i32 [ %.pre, %if.end25 ], [ %call2, %if.end ]
  call void @llvm.dbg.value(metadata !{i32* %n2}, i64 0, metadata !209), !dbg !423
  %add = add nsw i32 %3, %call, !dbg !423
  br label %return, !dbg !423

return:                                           ; preds = %for.end, %if.then4, %cond.end, %if.end26
  %retval.0 = phi i32 [ %add, %if.end26 ], [ 0, %cond.end ], [ 0, %if.then4 ], [ 0, %for.end ]
  ret i32 %retval.0, !dbg !425
}
