define void @gtp_print_vertices(i32 %n, i32* nocapture %movei, i32* nocapture %movej) #0 {
  %ri = alloca i32, align 4
  %rj = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !219, metadata !262), !dbg !604
  tail call void @llvm.dbg.value(metadata i32* %movei, i64 0, metadata !220, metadata !262), !dbg !605
  tail call void @llvm.dbg.value(metadata i32* %movej, i64 0, metadata !221, metadata !262), !dbg !606
  %1 = load i32* @gtp_boardsize, align 4, !dbg !607, !tbaa !303
  %2 = icmp slt i32 %1, 1, !dbg !607
  br i1 %2, label %3, label %4, !dbg !607, !prof !463

; <label>:3                                       ; preds = %0
  tail call void @__assert_rtn(i8* getelementptr inbounds ([19 x i8]* @__func__.gtp_print_vertices, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8]* @.str15, i64 0, i64 0), i32 431, i8* getelementptr inbounds ([18 x i8]* @.str16, i64 0, i64 0)) #9, !dbg !607
  unreachable, !dbg !607

; <label>:4                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !239, metadata !262), !dbg !608
  tail call void @llvm.dbg.value(metadata i32* %movei, i64 0, metadata !240, metadata !262), !dbg !610
  tail call void @llvm.dbg.value(metadata i32* %movej, i64 0, metadata !241, metadata !262), !dbg !611
  %5 = icmp sgt i32 %n, 1, !dbg !612
  br i1 %5, label %.preheader.lr.ph.i, label %sort_moves.exit.preheader, !dbg !613

.preheader.lr.ph.i:                               ; preds = %4
  %6 = sext i32 %n to i64, !dbg !614
  br label %.lr.ph.i, !dbg !613

.loopexit.i:                                      ; preds = %27
  %7 = icmp sgt i64 %indvars.iv.next5.i, 1, !dbg !612
  br i1 %7, label %.lr.ph.i, label %sort_moves.exit.preheader, !dbg !613

sort_moves.exit.preheader:                        ; preds = %.loopexit.i, %4
  %8 = icmp sgt i32 %n, 0, !dbg !615
  br i1 %8, label %.lr.ph, label %sort_moves.exit._crit_edge, !dbg !618

.lr.ph:                                           ; preds = %sort_moves.exit.preheader
  %9 = add i32 %n, -1, !dbg !618
  br label %29, !dbg !618

.lr.ph.i:                                         ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %indvars.iv4.i = phi i64 [ %6, %.preheader.lr.ph.i ], [ %indvars.iv.next5.i, %.loopexit.i ], !dbg !614
  %indvars.iv.next5.i = add nsw i64 %indvars.iv4.i, -1, !dbg !613
  %10 = getelementptr inbounds i32* %movei, i64 %indvars.iv.next5.i, !dbg !619
  %11 = getelementptr inbounds i32* %movej, i64 %indvars.iv.next5.i, !dbg !620
  br label %12, !dbg !621

; <label>:12                                      ; preds = %27, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %27 ], !dbg !614
  %13 = getelementptr inbounds i32* %movei, i64 %indvars.iv.i, !dbg !622
  %14 = load i32* %13, align 4, !dbg !622, !tbaa !303
  %15 = load i32* %10, align 4, !dbg !619, !tbaa !303
  %16 = icmp sgt i32 %14, %15, !dbg !623
  br i1 %16, label %._crit_edge6.i, label %17, !dbg !624

._crit_edge6.i:                                   ; preds = %12
  %.pre.i = getelementptr inbounds i32* %movej, i64 %indvars.iv.i, !dbg !625
  br label %24, !dbg !624

; <label>:17                                      ; preds = %12
  %18 = icmp eq i32 %14, %15, !dbg !626
  br i1 %18, label %19, label %27, !dbg !627

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds i32* %movej, i64 %indvars.iv.i, !dbg !628
  %21 = load i32* %20, align 4, !dbg !628, !tbaa !303
  %22 = load i32* %11, align 4, !dbg !629, !tbaa !303
  %23 = icmp sgt i32 %21, %22, !dbg !630
  br i1 %23, label %24, label %27, !dbg !631

; <label>:24                                      ; preds = %19, %._crit_edge6.i
  %.pre-phi.i = phi i32* [ %.pre.i, %._crit_edge6.i ], [ %20, %19 ], !dbg !625
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !244, metadata !262), !dbg !632
  store i32 %14, i32* %10, align 4, !dbg !633, !tbaa !303
  store i32 %15, i32* %13, align 4, !dbg !634, !tbaa !303
  %25 = load i32* %11, align 4, !dbg !620, !tbaa !303
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !244, metadata !262), !dbg !632
  %26 = load i32* %.pre-phi.i, align 4, !dbg !625, !tbaa !303
  store i32 %26, i32* %11, align 4, !dbg !635, !tbaa !303
  store i32 %25, i32* %.pre-phi.i, align 4, !dbg !636, !tbaa !303
  br label %27, !dbg !637

; <label>:27                                      ; preds = %24, %19, %17
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !621
  %28 = icmp slt i64 %indvars.iv.next.i, %indvars.iv.next5.i, !dbg !638
  br i1 %28, label %12, label %.loopexit.i, !dbg !621

; <label>:29                                      ; preds = %sort_moves.exit, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %sort_moves.exit ]
  %30 = icmp sgt i64 %indvars.iv, 0, !dbg !639
  br i1 %30, label %31, label %32, !dbg !642

; <label>:31                                      ; preds = %29
  call void (i8*, ...)* @gtp_printf(i8* getelementptr inbounds ([2 x i8]* @.str11, i64 0, i64 0)) #8, !dbg !643
  br label %32, !dbg !643

; <label>:32                                      ; preds = %31, %29
  %33 = getelementptr inbounds i32* %movei, i64 %indvars.iv, !dbg !644
  %34 = load i32* %33, align 4, !dbg !644, !tbaa !303
  %35 = icmp eq i32 %34, -1, !dbg !646
  br i1 %35, label %36, label %thread-pre-split, !dbg !647

; <label>:36                                      ; preds = %32
  %37 = getelementptr inbounds i32* %movej, i64 %indvars.iv, !dbg !648
  %38 = load i32* %37, align 4, !dbg !648, !tbaa !303
  %39 = icmp eq i32 %38, -1, !dbg !649
  br i1 %39, label %40, label %thread-pre-split.thread, !dbg !650

; <label>:40                                      ; preds = %36
  call void (i8*, ...)* @gtp_printf(i8* getelementptr inbounds ([5 x i8]* @.str23, i64 0, i64 0)) #8, !dbg !651
  br label %sort_moves.exit, !dbg !651

thread-pre-split:                                 ; preds = %32
  %41 = icmp slt i32 %34, 0, !dbg !652
  br i1 %41, label %thread-pre-split.thread, label %42, !dbg !654

; <label>:42                                      ; preds = %thread-pre-split
  %43 = load i32* @gtp_boardsize, align 4, !dbg !655, !tbaa !303
  %44 = icmp slt i32 %34, %43, !dbg !656
  br i1 %44, label %45, label %thread-pre-split.thread, !dbg !657

; <label>:45                                      ; preds = %42
  %46 = getelementptr inbounds i32* %movej, i64 %indvars.iv, !dbg !658
  %47 = load i32* %46, align 4, !dbg !658, !tbaa !303
  %48 = icmp sgt i32 %47, -1, !dbg !659
  %49 = icmp slt i32 %47, %43, !dbg !660
  %or.cond = and i1 %48, %49, !dbg !661
  br i1 %or.cond, label %50, label %thread-pre-split.thread, !dbg !661

thread-pre-split.thread:                          ; preds = %36, %45, %42, %thread-pre-split
  call void (i8*, ...)* @gtp_printf(i8* getelementptr inbounds ([3 x i8]* @.str24, i64 0, i64 0)) #8, !dbg !662
  br label %sort_moves.exit, !dbg !662

; <label>:50                                      ; preds = %45
  %51 = load void (i32, i32, i32*, i32*)** @vertex_transform_output_hook, align 8, !dbg !663, !tbaa !344
  %52 = icmp eq void (i32, i32, i32*, i32*)* %51, null, !dbg !666
  br i1 %52, label %54, label %53, !dbg !667

; <label>:53                                      ; preds = %50
  call void @llvm.dbg.value(metadata i32* %ri, i64 0, metadata !223, metadata !262), !dbg !668
  call void @llvm.dbg.value(metadata i32* %rj, i64 0, metadata !224, metadata !262), !dbg !669
  call void %51(i32 %34, i32 %47, i32* %ri, i32* %rj) #7, !dbg !670
  %.pre = load i32* %rj, align 4, !dbg !671, !tbaa !303
  %.pre2 = load i32* @gtp_boardsize, align 4, !dbg !672, !tbaa !303
  %.pre3 = load i32* %ri, align 4, !dbg !673, !tbaa !303
  br label %55, !dbg !670

; <label>:54                                      ; preds = %50
  call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !223, metadata !262), !dbg !668
  store i32 %34, i32* %ri, align 4, !dbg !674, !tbaa !303
  call void @llvm.dbg.value(metadata i32 %47, i64 0, metadata !224, metadata !262), !dbg !669
  store i32 %47, i32* %rj, align 4, !dbg !676, !tbaa !303
  br label %55

; <label>:55                                      ; preds = %54, %53
  %56 = phi i32 [ %34, %54 ], [ %.pre3, %53 ]
  %57 = phi i32 [ %43, %54 ], [ %.pre2, %53 ]
  %58 = phi i32 [ %47, %54 ], [ %.pre, %53 ]
  call void @llvm.dbg.value(metadata i32* %rj, i64 0, metadata !224, metadata !262), !dbg !669
  %59 = add nsw i32 %58, 65, !dbg !677
  %60 = icmp sgt i32 %58, 7, !dbg !678
  %61 = zext i1 %60 to i32, !dbg !678
  %62 = add nsw i32 %59, %61, !dbg !679
  call void @llvm.dbg.value(metadata i32* %ri, i64 0, metadata !223, metadata !262), !dbg !668
  %63 = sub nsw i32 %57, %56, !dbg !680
  call void (i8*, ...)* @gtp_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i64 0, i64 0), i32 %62, i32 %63) #8, !dbg !681
  br label %sort_moves.exit

sort_moves.exit:                                  ; preds = %40, %55, %thread-pre-split.thread
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !618
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !618
  %exitcond = icmp eq i32 %lftr.wideiv, %9, !dbg !618
  br i1 %exitcond, label %sort_moves.exit._crit_edge, label %29, !dbg !618

sort_moves.exit._crit_edge:                       ; preds = %sort_moves.exit, %sort_moves.exit.preheader
  ret void, !dbg !682
}
