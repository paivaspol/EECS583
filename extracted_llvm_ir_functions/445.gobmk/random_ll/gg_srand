define void @gg_srand(i32 %seed) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %seed}, i64 0, metadata !10), !dbg !62
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !11), !dbg !63
  br label %for.body, !dbg !63

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %seed.addr.05 = phi i32 [ %seed, %entry ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds [25 x i32]* @x, i64 0, i64 %indvars.iv, !dbg !65
  store i32 %seed.addr.05, i32* %arrayidx, align 4, !dbg !65, !tbaa !67
  %mul = mul i32 %seed.addr.05, 1313, !dbg !70
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !10), !dbg !70
  %add = add i32 %mul, 88897, !dbg !71
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !10), !dbg !71
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !63
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !63
  %exitcond = icmp eq i32 %lftr.wideiv, 25, !dbg !63
  br i1 %exitcond, label %for.end, label %for.body, !dbg !63

for.end:                                          ; preds = %for.body
  store i32 24, i32* @k, align 4, !dbg !72, !tbaa !67
  store i1 true, i1* @rand_initialized, align 1
  ret void, !dbg !73
}
